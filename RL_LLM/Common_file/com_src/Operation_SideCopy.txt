OperationSideCopyAn insight into Transparent Tribe’s sub-divisionwhich has been incorrectly attributed for yearsA report by Quick Heal Technologies Limited, IndiaWhitepaper Authors: Kalpesh Mantri, Principal Security Researcher |Pawan Chaudhari, Threat Research Scientist | Goutam Tripathy, Senior Security ResearcherIntroduction Quick Heal’s threat intelligence team recently uncovered evidence of an advanced persistent threat (APT) against Indian defence forces. Our analysis shows that many old campaigns and attacks in the past one year relate to 'Operation SideCopy' by common IOCs. The background and analysis in this paper provide complete forensic and useful details of our current research on the malware in this operation.Key Findings  Operation SideCopy is active from early 2019, till date.  This cyber-operation has been only targeting Indian defence forces and armed forcespersonnel. Malware modules seen are constantly under development and updated modules arereleased after a reconnaissance of victim data. Actors are keeping track of malware detections and updating modules when detectedby Anti-Virus solutions. Almost all CnC Servers belongs to Contabo GmbH and server names are similar tomachine names found in the Transparent Tribe report. This threat actor is misleading the security community by copying TTPs that point atSidewinder APT group. We believe that this threat actor has links with Transparent Tribe APT group.Summary A couple of months ago, Quick Heal’s Next-Gen Behavioural Detection System alerted on a few processes executing HTA from few non-reputed websites. We have made a list of URLs, connected from mshta.exe, across multiple customers: hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/Armed-Forces-Spl-Allowance-Order/html/ hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/Defence-Production-Policy-2020/html/ hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/Images/8534 hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/IncidentReport/html/ hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/ParaMil-Forces-Spl-Allowance-Order/html/ hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/Req-Data/html hxxps://demo[.]smart-hospital[.]in/uploads/staﬀ_documents/19/Sheet_Roll/html hxxps://demo[.]smart-school[.]in/uploads/staﬀ_documents/9/Sheet_Roll/html hxxps://demo[.]smart-school[.]in/uploads/student_documents/12/css/ hxxps://drivetoshare[.]com/mod[.]gov[.]in_dod_sites_default_ﬁles_Revisedrates/html01The highlighted ones were sent to targets across Indian defence units and armed forces individuals. We started tracking this campaign as it was targeting critical Indian organizations. Traces of this operation can be tracked from early 2019 till date. Till now, we have observed three infection chain processes. Initial infection vector in two of the chains was LNK ﬁle, that came from a malspam. But in one case, we saw attackers making use of template injection attack and equation editor vulnerability (CVE-2017-11882) as the initial infection vector. Though the initial infection vector is diﬀerent in the third case, the ﬁnal payload is similar to the ﬁrst two chains. Below images will provide an overview of malware infection in victim machines.Infection Chain – Version 1:02Infection Chain – Version 2:Infection Chain – Version 3:03Initial Infection Vector: LNK The victim receives LNK ﬁles, compressed into ZIP/RAR via emails. These ﬁles are shortcuts executing mshta.exe and providing remote HTA URL as the parameter. LNKs have a double extension with document icons, to trick the victim into opening the ﬁle. Victims just have to execute LNK ﬁles and rest all modules follow in background.Image 1: Malicious lnk to launch mshta.exeInitial Infection Vector: Template InjectionImage 2 : Contents of settings.xml.rels04Decoy Documents/Images: Names of initial infection LNKs/Documents seems to be quite realistic and lure the victim into opening it. And as the same say, the contents of decoy are related. Some sample decoy that we saw are:Image 3: Decoy document dropped by “Defence-Production-Policy-2020.docx.lnk”Image 4: Decoy image dropped by “Image-8534-2020.jpg.lnk”Looking at ﬁrst decoy (Image 3), the victim seems to be a target that is interested in Indian defence news. The second decoy (Image 4) looks more of a honeytrap image. It is similar to a recent campaign that we uncovered a few months ago.05Toolkit for both HTA-Stagers Stage-1 and Stage-2 HTA ﬁles seem to be created using CACTUSTORCH toolkit, which is available on GitHub.url is inspired by StarFighters and uses the DotNetToJScript tool. It loads and executes malicious .NET assemblies directly from memory. Similar to other ﬁleless attack techniques, DotNetToJScript does not write any part of the malicious .NET assembly on the victim machine. This blog contains good insight into how this toolkit works.Stage-1 HTA: Stage-1 HTA C4A75A64F19BD594B4BB283452D0A98B6E6E86566E24D820BFB7B403E72F84E2This HTA ﬁle is remotely downloaded via one of the URLs given in summary. It has 2 embedded ﬁles; a decoy document (can be an image ﬁle) and a DotNET module named ‘hta.dll’. DotNET serialization is used to execute ‘hta.dll’ module. The ﬁrst section in this HTA ﬁle checks for installed DotNET version and creates a ﬁle at ‘C:\ProgramData\script.js’. This JS ﬁle is responsible for restarting victim machine so that no traces of running mshta.exe can be found.06The second section contains deserialization of DotNET object module to execute decoy document and download next HTA components.The functionality of embedded DotNET module named ‘hta.dll’ can be seen using dnSpy tool. Looking at code, we can see that the malware modules are constantly under development.Image 5: Functions of hta.dll in #2019Image 6: Functions of hta.dll in later versions07It executes Decoy ﬁle from %temp% folder.It then downloads the later stage HTA — next stage HTA is decompressed in the same way as decoy document i.e. Base64 + GZip decoding is done to get Stage-2 HTA ﬁle.08Stage-2 HTA DD0762FC58ACB30F75B0A2A14DBEF2CCDA553EA9DDE08A180C60CD4113E1A506Stage-2 HTA is nearly similar to Stage-1 HTA but has more embedded modules. Stage-2 HTA again uses DotNET serialization to execute embedded components with ﬁle-less technique. At ﬁrst, it checks for installed DotNET version:Later it checks for installed Antivirus product and passes all information to serialized DotNet module named ‘preBotHta.dll’.09All embedded ﬁles and AV list are passed to ‘preBotHta.dll’.The functionality of ‘preBotHta.dll’ can be seen via dnSpy tool. As we can see, none of the functions are obfuscated. Similar to ‘hta.dll’, this malware module is also constantly under development as can be seen below.“preBotHta.dll” during #2019“preBotHta.dll” during #202010PinkAgain() function checks for available AntiVirus installed at victim machine and saves backdoor module accordingly. These AVs are widespread and popular in India.Other functionality includes:  Copying “Credwiz.exe” (legit) from system32/SysWOW64 folder to “C:\ProgramData\Adobe\credwiz.exe”  Drop Object1 from HTA into “C:\ProgramData\Adobe\DUser.dll”  Drop and execute BAT ﬁle for persistence at “C:\ProgramData\Adobe\addreg.bat”  Drop Object2 from HTA into “%temp%\MicroSoft\winms.exe”  Execute “Credwiz.exe”Image 7: credwiz.exe copying code in ‘preBotHta.dll’11BAT module: BAT ﬁle adds registry entry into Run folder. Thus running credwiz.exe on the machine on every startup.Image: Content of BAT ﬁleScript.js ﬁle: This ﬁle is executed via cmd.exe to restart victim machine. Contents of this ﬁle are:var shell = new ActiveXObject('WScript.Shell');WScript.Sleep(900000);var exec = shell.Exec('cmd.exe /k shutdown /r /t 0');exec.StdIn.Close();Side-Loading technique: 17EABFB88A164AA95731F198BD69A7285CC7F64ACD7C289062CD3979A4A2F5BF“Credwiz.exe” is a legit windows ﬁle copied from system32/SysWOW64 folder to “C:\ProgramData\Adobe\credwiz.exe”. When this ﬁle gets executed, it will side-load malicious duser.dll ﬁle which is dropped in the same folder.DUser.dll MD5 SHA256(version 1) AC4A8D82D91286D5E0F59B85C8975DF8 FB761A2DA4841F8739D33A682C5F2F39A033C7BA16430CE5785F7D51AB5D1537Module ‘DUser.dll’ is embedded as the 1st object into Stage-2 HTA ﬁle. The ﬁle gets dropped into “C:\ProgramData\Adobe\DUser.dll”. It has only 1 export function i.e. “cﬁleexists”.As the names suggsts, its only function is to check for the presence of a ﬁle at “%temp%\MicroSoft\winms.exe” (2nd object dropped from Stage-2 HTA ﬁle) and execute it.If not found, then it checks for “strcat.txt” at the same location. If it exists, then read the content of “strcat.txt” and write the content into a ﬁle named “winms.exe” as shown in below ﬁg.12It will then launch the RAT module “winms.exe”.13DUser.dll MD5 SHA256(version 2) B29E7FAC2D84DA758473F3B5E81F3265 92E9CEEDF28C99F90F8892AEC9D2FA413FF0F4F17C5B0316D05871E95993C3FAIn a few instances, we saw a completely diﬀerent version of DUser.dll module. This DLL had an export named as “DllMain”. An interesting PDB string was observed in this ﬁle.“F:\Packers\CyberLink\Latest Source\Multithread Protocol Architecture\Final Version\DUser\Release\x86\DUser.pdb”As per the PDB path, DUser was developed in the folder “CyberLink\Latest Source\Multithread Protocol Architecture”. At this stage, we are not aware of any similar port ‘6102’. This IP address & port can be found out in ﬁle as it is mentioned in cleartext.Once successfully connected, it will try to delete a BAT ﬁle from Program Data as can be seen in below image and then proceed for performing various operations based on the command received from C2C.14The commands are numbers from 0 to 15, so it compares each time when it receives the command from C2.Based on the commands, it fetches the index value and redirects to speciﬁc function/module to perform the desired operation as shown in below ﬁgs.15For example if C2 sends 0, then it collects the Computer Name, Username, OS version etc. and sends it back to C2.16Backdoor modules:winms.exe MD5 SHA256(dropped in Infection Chain - version 1) AF0DD0070C02E15064496853BEFFA331 8C6AFF2224FDD54615EF99D32A6134C961B6D7D576B6FF94F6B228EB8AF855AFThis is a RAT tool and has very high resemblance with code found on below GitHub link. url packets and their structure resembles with the implementation of the GitHub source code.17sihostt.exe A8D8A56CDA7E29DD64CF28B2BDAD19E8DCBF78E5900CF9CA53F952E9FD2452EBIn a few attack chains, we saw a DotNET based RAT being dropped in the startup folder by mshta process. This previously unseen RAT is used to perform multiple malicious tasks like:  Download and execute ﬁles  Get process info  Kill process  Copy clipboard data  Set clipboard data  Exit process18Below ﬁgure shows the code start function. This function creates a new object of the class core with two parameters as remote IP and encryption key.Image 8: Main functionSimilar to other modules, even this module is not obfuscated. Every function has meaningful names and readable code.Image 9: code to upload data to a remote server19Image 10: Code to download and execute the ﬁle.20PDB Paths: Interesting PDB paths were seen in ﬁles that we have observed in past one year.D:\C\Proj\DUser\Debug\x86\hello-world.pdbD:\C\Proj\preBotHta_new\preBotHta\obj\Debug\preBotHta.pdbD:\Pkgs\Project\1-Stagers\5-DUser\Debug\x86\hello-world.pdbD:\Pkgs\Project\5-DUser\Debug\x86\hello-world.pdbD:\Pkgs\Project\Cyrus_HTA1+HTTP_HTA2+VNext_HTA3\hta\obj\Debug\hta.pdbE:\OpenRATs\NigthFury\NightFury HTA upload\preBotHta\obj\Debug\preBotHta.pdbF:\Packers\CoreDll\DUser\Release\x86\hello-world.pdbF:\Packers\CoreDll\preBotHta\preBotHta\obj\Release\preBotHta.pdbF:\Packers\CyberLink\Latest Source\Exploit Dropper\Update or Install\Dropper\Release\Update-Install.pdbF:\Packers\CyberLink\Latest Source\Exploit Dropper\Update or Install\Dropper\x64\Release\Update-Install.pdbF:\Packers\CyberLink\Latest Source\Multithread Protocol Architecture\Final Version\DUser\Release\x86\DUser.pdbE:\Packers\CyberLink\Latest Source\Multithread Protocol Architecture\Final Version\DUser\Release\x86\DUser.pdbG:\AT\Pkgs\Pkgs\Project\3-hta(hta1)_new_path\hta\obj\Debug\hta.pdbD:\Pkgs\Project\Standalone_HTA_With_Startup_Path\Project\preBotHta\obj\Debug\preBotHta.pdbBy looking at changes in codes across diﬀerent versions and changes in PDB paths, we can conclude that this malware is constantly under development. Attackers are updating codes after a reconnaissance of victim environment. We believe, this group is using a commercial tool to install the backdoor. However, we do not have any intel on the same. If you have some knowledge about any of the above tools, we will be very interested in knowing about it.21Attribution We constantly work towards proﬁling attacks of multiple APT actors. Looking at the basic ﬂow of the tools, techniques, and procedure (TTPs) in this attack, it simply points towards SideWinder APT group. All the names for modules like ‘preBotHta.dll’, ‘DUser.dll’ were similar to some of the Sidewinder attacks. Credwiz.exe was used for side-loading ‘DUser.dll’ and entire infection ﬂow was similar. Few of researchers on Twitter and some Chinese organization blogs were also seen attributing this attack to Sidewinder without many details. SideWinder is an APT group allegedly to work for Indian interest. But this attack was targeting Indian defence organizations and armed forces veterans. So, it makes no sense on this attribution. Lastly, we found just one good blog that considered this attack to be a “Copy cat of APT Sidewinder”.Hence, not related to the Sidewinder APT group: 1] Sidewinder uses dotNET compiled ‘DUser.dll’ backdoors. But all ‘DUser.dll’ ﬁles in this operation were compiled in Delphi/VC++.2] Naming convention of domains and C2 was not similar to Sidewinder which uses names similar to ‘cdn’ in large volumes. 3] All initial modules are open-source, and some are commercial tools. Sidewinder does not heavily rely on open-source tools. 4] ‘perBotHta.dll’ code was completely diﬀerent from what was seen with Sidewinder ﬁles. 5] Sidewinder was never seen targeting India.22This was the reason; we were convinced that this actor is copying Sidewinder TTPs just to mislead the community. So, we named this as ‘Operation SideCopy’. Understanding who is behind an attack is usually a priority when the attack is on critical organizations. So, it was a crucial component of our investigation. Now, to hunt the real actor behind this operation, we started looking towards older samples, ﬁle meta, code, Domains, IP infrastructure. These are all the Command and Control server IP and domains that we saw being used in this operation:144[.]91[.]91[.]236 144[.]91[.]65[.]100 164[.]68[.]108[.]22 173[.]249[.]50[.]230 173[.]212[.]224[.]110 167[.]86[.]116[.]39vmi312537[.]contaboserver[.]net vmi296708[.]contaboserver[.]netnewsindia[.]ddns[.]net mfahost[.]ddns[.]netvmi314646[.]contaboserver[.]net vmi192147[.]contaboserver[.]net vmi268056[.]contaboserver[.]netAlmost all C2 belongs to Contabo GmbH, a hosting provider that seems to be currently favoured by Pakistan based threat actors. Many Crimson RAT, another tool of Transparent tribe group, connect to Contabo GmbH. Also, in one of the reports by amnesty, transparent tribe actors RAT were found using computer name ‘VMI70913’ and the same sample connected to C2 with a domain name of ‘vmi70913.contabo.host’ by the hosting company Contabo GmbH.Image 11: Computer name in one of the Crimson RAT samples23These server names are very similar to C2 domains found in the operation. One of the domain, that hosted HTA was interesting: “hxxps://drivetoshare[.]com” It was registered to:Name Shop No 36/ B 2nd Floor Dubai Plaza Murree Road kingsmanﬁsher@gmail.comWe found few other domains that were recently registered to email ID ‘kingsmanﬁsher@gmail.com’:(Domain)drivetoshare.com mailfourms.com(Registration) 2020-08-07 2020-08-07 2020-03-13 2020-03-02(Expiry)2021-08-06 2021-08-06 2021-03-12 2021-03-01A recent report on Transparent tribe showed this group to be using a similar naming convention to host a variety of malware.Lastly, all samples found yet, have been targeted to defence organizations in India, which is a usual target for Transparent Tribe group.Thus, we suspect that the actor behind this operation is a sub-division under (or part of) Transparent-Tribe APT group and are just copying TTPs of other threat actors to mislead the security community.24IOC Details: We have mentioned the IoC details in the spreadsheet below:MD5 Stage-1 HTAStage-1 HTA 'hta.dll'Stage-2 HTAFile InfoPDB StringsIPDomains139.59. .NET AssemblyD:\Pkgs\Project\ HTA3\hta\obj\ Debug\hta.pdbStage-2 HTA 'preBotHta.dll'Duser.dllPortable Visual C++ 8.0 (Debug)D:\C\Proj\preBot Hta_new\preBot Hta\obj\Debug\ preBotHta.pdbD:\Pkgs\Project\ 1-Stagers\5-DUser \Debug\x86\hello -world.pdbwinms.exeBorland Delphi 4.0sihostt.exePortable Executable 32 .NET Assembly173.249. 224.110hxxp://173 [.]212[.]224 [.]110/h_ttp#2019 #2020 - version 125File InfoPDB StringsIPDomainsFile Description Stage-2 HTAMD5 BA8C0178FB3F08F74AStage-2 HTA 'preBotHta.dll'Duser.dllPortable Executable 32 .NET AssemblyD:\C\Proj\preBotH Visual C++ 8.0 (Debug)D:\Pkgs\Project\ 5-DUser\Debug\ x86\hello- world.pdbwinms.exeBorland Delphi 4.0Stage-2 HTAStage-2 HTA 'preBotHta.dll'Portable Executable 32 .NET AssemblyDuser.dllBorland Delphi 3.0173.249. 50.230139.59. 55.198E:\OpenRATs\ NigthFury\Night Fury HTA upload\ preBotHta.pdbE:\Packers\Cyber Link\Latest Source DUser.pdbtor-relay- 610226File InfoPDB StringsIPDomainsFile Description Stage-2 HTAMD5 2.1#2019 - FF1EF23DC93EDE0C27AStage-2 HTA 'preBotHta.dll'Portable Executable 32 .NET AssemblyDuser.dllBorland Delphi 3.0Duser.dllBorland Delphi 3.0wordicon.exeMicrosoft Visual C++ 8wordicon.exeMicrosoft Visual C++ 8.0 Delphi 3.0E:\OpenRATs\ NigthFury\Night Fury HTA upload\ preBotHta.pdbF:\Packers\ DUser.pdbF:\Packers\Cyber Link\Latest Source DUser.pdbF:\Packers\Cyber Link\Latest Source \Exploit Dropper\ Update or Install\ Dropper\Release\ Update-Install.pdbF:\Packers\Cyber Link\Latest Source \Exploit Dropper \Update or Install\ Update-Install.pdbF:\Packers\Cyber Link\Latest Source DUser.pdb164.68. server.net144.91.91. .lnkStage-2 HTAStage-2 HTA 'preBotHta.dll'%PROGRAM DATA%\dsk\ duser.dll%TEMP%\ docx.lnkStage-1 HTADBDD56932730210F6556CC ﬁlesFile InfoPDB StringsIPDomainsBorland Delphi 3.0Borland Delphi 3.0F:\Packers\Cyber Link\Latest Source \Exploit Dropper\ Update or Install\ Dropper\Release\ Update-Install.pdbF:\Packers\Cyber Link\Latest Source DUser.pdb144.91.65. ddns.netF:\Packers\CoreDll preBotHta.pdbF:\Packers\CoreDll Delphi 3.0Borland Delphi 4.0167.86. server[.]net192.185. 129.21:443ﬁncruitcon Stage-1 HTA 'hta.dll'3B07961844D8235C1F40C12 6D97F049EC66AF633DStage-2 HTA tmphta.htaFile InfoPDB StringsIPDomainsPortable Executable 32 .NET AssemblyG:\AT\Pkgs\Pkgs\ Project\3-hta (hta1)_new_path\ hta\obj\Debug\ 3DF4803110D5CE553E8Stage-2 HTA 'preBotHta.dll'Portable Executable 32 .NET AssemblyD:\C\Proj\preBot Hta_new\preBot Hta\obj\Debug\ preBotHta.pdbDuser.dllMicrosoft Visual C++ 8.0 (Debug)D:\C\Proj\DUser\ Debug\x86\ hello-world.pdbwinms.exeBorland Delphi 4.0winms.exeBorland Delphi 4.0Stage-2 HTA173.212. 224.110173.212. 224.110Stage-2 HTA 'preBotHta.dll'Portable Executable 32 .NET AssemblyD:\Pkgs\Project\ preBotHta.pdbsihostt.exeBorland Delphi 4.0144.91. urlﬁleless-threat-abuse s-net-to-infect-victims/url get-govt-agencies/url 