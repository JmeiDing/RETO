Backdoor.Remsec indicators of compromiseSecurity ResponseBackdoor.Remsec indicators of compromiseVersion 1.0: August 8, 2016Security Response — August 8, 2016 — Copyright © 2016 SymantecPage 1Backdoor.Remsec indicators of compromiseBackdoor.RemsecThe Backdoor.Remsec signature is used to detect several different components. These various components work together as a framework to provide an attacker complete control over a victim computer, allow them to spread across a network, utilize a discreet command and control protocol, and deploy custom tools as required.Only a subset of Backdoor.Remsec components have been discovered and documented. Some samples have not been fully analyzed. Functionality is mostly implemented in the form of modules downloaded over a network connection, and then executed in memory, and many of these components have not been retrieved.Several different components have been discovered on victim computers. Many of these components share functionality, code, or other elements that, as well as being present on victims’ computers, links them. Loader: Seen with the filename MSAOSSPC.DLL, this component is responsible for loading filesfrom disk and executing them. The files on disk contain the payload in a specific format we are calling the executable blob. The component also logs data. Executable blobs and data are encrypted and decrypted with a repeating key of 0xBAADF00D. Lua modules: Several components use a Lua interpreter with Lua scripts to implement theirfunctionality. The Lua components are stored in the same executable blob format that the loader works with. Several different Lua modules have been retrieved and their functionality includes: o Network loader - This loads an executable over the network for execution. It may use RSAand RC6.o Host loader - Loads at least three components, kblog, ilpsend, and updater. o Keylogger - Exfiltrates keylog data. It also contains the string SAURON, which may be a codeword to describe the module or project. Network listener: A number of samples that implement different techniques for opening anetwork connection based on monitoring for specific types of traffic. This includes ICMP, PCAP, and RAW network sockets. It's unclear exactly what is checked for with PCAP and Raw, however, the ICMP listener checks for echo and echo response packets. Named pipe back door: A minimal back door controlled over named pipes. This can executedata in the format of the executable blob, or standard PE files. A second named pipe back door - This offers several more commands than the other named pipe back door, including sending the executable blob, listing files, and reading/writing/deleting files. HTTP back door: Includes several URLs for C&C servers.LoaderThis description is based on the analysis of the file with the MD5 hash of Table 1.Offset Size variable blob of executable codePurpose Executable_Blob_Header, described belowTable 1. Loaded files formatSecurity Response — August 8, 2016 — Copyright © 2016 SymantecPage 2Backdoor.Remsec indicators of compromiseThe Executable_Blob_Header can be interpreted as the following structure:PurposeOffset Size 12Version_Major (guess), enforcing value 2 Version_Minor (guess), we observed values 0, 1 and 3 in analyses samplesDword Magic, enforcing value C102AA02 Dword Entry_32, entry point for 32-bit mode represented as offset from start of Executable_Blob structure Dword Entry_64, entry point for 64-bit mode represented as offset from start of Executable_Blob structure Dword Tag (guess), introduced starting with Version_Minor 1, we observed values 0 and 7B3924B1 in analyzed samples Byteunknown purpose, introduced after Version_Minor 1, but not later than Version_Minor 3, observed only value 0 in analysed samplesTable 2. Executable_Blob_Header structureThe loaded executable blobs may be retrieved from the following path:c:\System Volume Information\_restore{ED650925-A32C-4E9C-8A73- 8E6F0509309A}\RP0\A0000002.dllPersistenceThe loader is implemented as a (fake) Security Support Provider. Implementing the export of InitSecurityInterfaceW effectively functions as a loadpoint for the module.Injection libraryThis loader contains a relatively advanced library supporting injections into both 32-bit and 64-bit targets. The implementation includes multiple redundant capabilities, including an embedded implementation of CreateRemoteThread with CSR notification by way of CSRSS_CREATE_THREAD_LPCMESSAGE.Payload structureThe payload file, referred to by the attackers as a "module" per error messages, contains an encrypted structure storing the following: PE_Executable with only minimal verification by checking Machine fieldfrom IMAGE_FILE_HEADER  Helper_Blob, described belowBased on checks implemented by the Loader, the Helper_Blob can be interpreted as the following structure of length Helper_Blob_Size:Offset Data_Blob_Size Bytes Data_Blob variablePurpose Data_Blob_Size, enforcing Data_Blob_Size < Helper_Blob_Size - 4PE_Loader responsible for loading PE_ExecutableTable 3. Helper_Blob structureThe PE_Executable and Helper_Blob are serialized as the following variable-length structure:Offset variable Helper_Blob_Size BytesSize PE_Executable_Size Bytes PE_ExecutableHelper_Blob described abovePurpose Version, referred as "module file version" in error messages, enforcing value 1 PE_Executable_Size Helper_Blob_SizeTable 4. Payload_Blob structureSecurity Response — August 8, 2016 — Copyright © 2016 SymantecPage 3Backdoor.Remsec indicators of compromiseThe Payload_Blob structure is compressed using a ZLIB algorithm.The compressed blob is then encrypted using an RC5 algorithm in CBC mode with the following parameters: word size: 32 iv: zero bytesNotice that encryption may require padding for a compressed blob. The encrypted blob is stored on disk as a payload file.Log structureThe log file contains messages generated by the Loader stored in encrypted form.The Log_Messages are represented as Unicode text, for example:Starting log (computer: "XXX" serial: 80B0:51E5 timezone: UTC+0h). Failed to open module c:\System Volume Information\_restore{ED650925-A32C- 4E9C-8A73-8E6F0509309A}\RP0\A0000002.dll: (2) The system cannot find the file specified. Ending log.The Log_Messages are compressed using a ZLIB algorithm.The compressed log is then encrypted using an RC5 algorithm in CBC mode with the following parameters: word size: 32 iv: zero bytesLua modulesA number of samples were discovered that contained a modified version of a Lua interpreter, and compiled Lua scripts that would be executed by the interpreter. Each sample has the Lua script and plugins stored in an encrypted configuration blob.These configuration blobs are encrypted using one of two distinct methods. These two techniques were labelled version A and version B (vA, and vB for short).The pre-compiled Lua scripts use customized binary format: Lua_SIGNATURE was modified to avoid "Lua" magic value  Representation of char variables was modified, possibly to simplify handling of UnicodecharactersA number of samples that implement various different functionalities were discovered. These are receive executable modules from remote attackers and run them from memory on the local computer.This component can use one of the following methods to establish a communication channel (depending on passed parameters): Listen for an incoming TCP connection on an arbitrary port  Connect to an arbitrary host over TCP  Communicate over a handle provided by the callerThe communication is encrypted using RSA and RC6.The received executable module follows the PE format and provides the following exports:init, where two constant values, 2 and 1, are passed  updaterThe above components are loaded from files stored in the path referenced by the BLOB_STORAGE variable in the configuration. These are decrypted and injected into running processes. A kblog component was retrieved during the investigation which, as described below, is a keylogger. The other modules were not retrieved, however it is very likely the ilpsend module is used to exfiltrate the keylogger data over HTTPS or SMTP, and the update component is used to download updated versions of the  "%WINDIR%\\temp\\bka*.da" "%WINDIR%\\temp\\bka*.dat" "C:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73- 8E6F0509309A}\\RP0\\change.log.*" "C:\\System Volume Information\\_restore{ED650925-A32C-4E9C-8A73- 8E6F0509309A}\\RP1\\A*"The keylogger component may be referred to as SAURON by the attackers (based on SAURON_KBLOG_KEY). Collected data is exfiltrated using the ILPS module.Figure 1. String referencing Sauron in Remsec keylogger moduleSecurity Response — August 8, 2016 — Copyright © 2016 SymantecPage 6Backdoor.Remsec indicators of compromiseNetwork listenersA number of network listener components were discovered. These components used varying techniques to listen to network traffic, specifically looking for commands issued by an attacker. The commands are in the form of (encrypted) executable code. The MD5 hashes of the files discovered are listed in Table 7.MD5 These modules are apparently in-memory, but some filesystem code is also present. The discovered samples use different combinations of network listeners. Components collected so far support PcapUdp, PcapTcp, Pcap, Icmp, Dns, Raw, Pipe, and Http.As an example, the ICMP listener opens a RAW socket and listens for ICMP echo request or response packets. If any such packet is discovered, the malware will attempt to decrypt the contents of the ICMP sample provides a minimal back door controlled over named pipes. The following functionality is available to the remote attacker: Send Executable_Blob containing arbitrary code to be executed  Run arbitrary commands using CreateProcessW APIAdditional named pipe back doors with more functionality have also been discovered. These other back doors are able to process more commands. The extra commands are listed below, per each sample.Command Description123456Read and optionally delete arbitrary file.Write arbitrary file.List content of arbitrary folder.Delete arbitrary file.Contains Executable_Blob with arbitrary code to be executed.Exit (guess).Table 8. Back door commands per sample 7001A747EED1B2DA1C863B75500241F7Command DescriptionRead and optionally delete arbitrary file.Write arbitrary file.List content of arbitrary folder.Delete arbitrary file.Contains Executable_Blob with arbitrary code to be executed.12345Security Response — August 8, 2016 — Copyright © 2016 SymantecPage 7Backdoor.Remsec indicators of compromise6789Sets a flag - purpose unconfirmed.Start TCP proxy by: connecting to arbitrary IPv4 endpoint address or binding new socket to local IPv4 endpoint address selected by the attacker and accepting connection The proxy will forward communication between the Named Pipe and the TCP connection.Contains blob with arbitrary code to be executed. This blob does NOT follow the Executable_Blob format. computers. Two variants were discovered, files the with MD5 hashes of  http[://]wildhorses.awardspace.info/hindex.php  http[://]flowershop22.110mb.com/flowers.php  http[://]flowershop22.110mb.com/shop.php  http[://]wildhorses.awardspace.info/hindex.php  http[://]wildhorses.awardspace.info/horses.php  http[://]www.myhomemusic.com/music.php  http[://]www.myhomemusic.com/mymusic.phpDeveloping a network signature for the ICMP component is not straightforward, however it may be possible to identify suspect ICMP packets as follows: Packet size greater than 0x1c   High entropy payload, at least non-numbers or letters. (Standard ICMP packets will typicallyICMP Echo or Responsecontains ASCII characters)Backdoor.Remsec Yara signaturesrule remsec_executable_blob_32 31 06 l0: xor [esi], eax 83 C6 04 add esi, 4 D1 E8 shr eax, 1 73 05 jnb short l1 35 01 00 00 D0 xor eax, 0D0000001h E2 F0 l1: loop l0 83 C6 04 35 01 00 00 D0Security Response — August 8, 2016 — Copyright © 2016 SymantecPage 9Backdoor.Remsec indicators of compromiseE2 F0 all of them 31 06 l0: xor [rsi], eax 48 83 C6 04 add rsi, 4 D1 E8 shr eax, 1 73 05 jnb short l1 35 01 00 00 D0 xor eax, 0D0000001h E2 EF l1: loop l0 48 83 C6 04 35 01 00 00 D0 all of them 0F 82 ?? ?? 00 00 jb l_0 80 7? 04 02 cmp byte ptr [r0+4], 2 0F 85 ?? ?? 00 00 jnz l_0 81 3? 02 AA 02 C1 cmp dword ptr [r0], 0C102AA02h 0F 85 ?? ?? 00 00 jnz l_0 8B ?? 06 mov r1, [r0+6] ( 0F 82 ?? ?? 00 00 | 72 ?? ) ( 80 | 41 80 ) ( 7? | 7C 24 ) 04 02 ( 0F 85 ?? ?? 00 00 | 75 ?? ) ( 81 | 41 81 ) ( 3? | 3C 24 | 7D 00 ) 02 AA 02 C1 ( 0F 85 ?? ?? 00 00 | 75 ?? ) ( 8B | 41 8B | 44 8B | 45 8B ) ( 4? | 5? | 6? | 7? | ?4 24 | ?C 24 ) 06 }Security Response — August 8, 2016 — Copyright © 2016 SymantecPage 10Backdoor.Remsec indicators of compromisecondition: all of them "OpenProcess\x00" in encrypted form */ { 91 9A 8F B0 9C 90 8D AF 8C 8C 9A FF } condition: all of them 69 ?? AB 00 00 00 imul r0, 0ABh 81 C? CD 2B 00 00 add r0, 2BCDh F7 E? mul r0 C1 E? 0D shr r1, 0Dh 69 ?? 85 CF 00 00 imul r1, 0CF85h 2B sub r0, r1 69 ( C? | D? | E? | F? ) AB 00 00 00 ( 81 | 41 81 ) C? CD 2B 00 00 ( F7 | 41 F7 ) E? ( C1 | 41 C1 ) E? 0D ( 69 | 45 69 ) ( C? | D? | E? | F? ) 85 CF 00 00 ( 29 | 41 29 | 44 29 | 45 29 | 2B | 41 2B | 44 2B | 45 2B ) all of them 48 8B 05 C4 2D 01 00 mov rax, cs:LoadLibraryA 48 89 44 24 48 mov qword ptr [rsp+1B8h+descriptor+18h], rax 48 8B 05 A0 2D 01 00 mov rax, cs:GetProcAddressSecurity Response — August 8, 2016 — Copyright © 2016 SymantecPage 11Backdoor.Remsec indicators of compromise48 8D 4C 24 30 lea rcx, [rsp+1B8h+descriptor] 48 89 44 24 50 mov qword ptr [rsp+1B8h+descriptor+20h], rax 48 8D 84 24 80 00 00 00 lea rax, [rsp+1B8h+var_138] C6 44 24 30 00 mov [rsp+1B8h+descriptor], 0 48 89 44 24 60 mov qword ptr [rsp+1B8h+descriptor+30h], rax 48 8D 84 24 80 00 00 00 lea rax, [rsp+1B8h+var_138] C7 44 24 34 03 00 00 00 mov dword ptr [rsp+1B8h+descriptor+4], 3 2B F8 sub edi, eax 48 89 5C 24 38 mov qword ptr [rsp+1B8h+descriptor+8], rbx 44 89 6C 24 40 mov dword ptr [rsp+1B8h+descriptor+10h], r13d 83 C7 08 add edi, 8 89 7C 24 68 mov dword ptr [rsp+1B8h+descriptor+38h], edi FF D5 call rbp 05 00 00 00 3A add eax, 3A000000h 48 8B 05 ?? ?? ?? ?? 48 89 44 24 ?? 48 8B 05 ?? ?? ?? ?? 48 8D 4C 24 ?? 48 89 44 24 ?? 48 8D ( 45 ?? | 84 24 ?? ?? 00 00 ) ( 44 88 6? 24 ?? | C6 44 24 ?? 00 ) 48 89 44 24 ?? 48 8D ( 45 ?? | 84 24 ?? ?? 00 00 ) C7 44 24 ?? 0? 00 00 00 2B ?8 48 89 ?C 24 ?? 44 89 6? 24 ?? 83 C? 08 89 ?C 24 ?? ( FF | 41 FF ) D? ( 05 | 8D 88 ) 00 00 00 3A all of them }Security Response — August 8, 2016 — Copyright © 2016 SymantecPage 12Backdoor.Remsec indicators of compromiseAbout SymantecSymantec Corporation is the global leader in cybersecurity. Operating one of the world’s largest cyber intelligence networks, we see more threats, and protect more customers from the next generation of attacks. We help companies, governments and individuals secure their most important data wherever it lives.For specific country offices and contact numbers, please visit our Symantec Corporation World Headquarters 350 Ellis St. Mountain View, CA 94043 USA +1 (650) 527-8000 1 (800) 721-3934 www.symantec.comAny technical information that is made available by Symantec Corporation is the copyrighted work of Symantec Corporation and is owned by Symantec Corporation. NO WARRANTY. The technical information is being delivered to you as is and Symantec Corporation makes no warranty as to its accuracy or use. Any use of the technical documentation or the information contained herein is at the risk of the user. Documentation may include technical or other inaccuracies or typographical errors. Symantec reserves the right to make changes without prior notice. Copyright © 2016 Symantec Corporation. All rights reserved. Symantec, the Symantec Logo, and the Checkmark Logo are trademarks or registered trademarks of Symantec Corporation or its affiliates in the U.S. and other countries. Other names may be trademarks of their respective ownersSecurity Response — August 8, 2016 — Copyright © 2016 SymantecPage 13 