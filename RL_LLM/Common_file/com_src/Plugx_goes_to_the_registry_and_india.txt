PlugX goes to the registry (and India)By Gabor Szappanos, Principal ResearcherPlugX goes to the registry (and India)ContentsOverviewPlugX in registryPeeled TomatoMulti-staged installer shellcode234171PlugX goes to the registry (and India)Overview Recently we published a paper about the capabilities of APT groups [url sophos.com/2015/02/03/exploit-this-evaluating-the-exploit-skills-of-malware-groups/].One of the conclusions of the paper was that the authors behind the targeted attack campaigns usually have little knowledge about the actual exploit they are using to distribute their malware. But at the same time, we warned our readers never to underestimate them, because otherwise they are skilled, and quite capable of developing sophisticated backdoors.One of the worst performances in our comparison of exploit development belonged to the infamous PlugX malware group(s). However, they recently came out with a couple of significant developments in the backdoor component, demonstrating the point above.One of the improvements was the introduction of a peer-to-peer communication channel to other infected hosts [url Variants using this technology have previously been spotted in the Rotten Tomato campaign [url com/2014/10/30/the-rotten-tomato-campaign-new-sophoslabs-research-on-apts/].Now additional samples have shown up from this generation. But in addition to the new communication method, some of them were showing another new characteristic: the payload was not stored as separate files, or embedded within the loader DLL, but instead was saved to the registry.Malware hiding components in registry is not a revolutionary idea; we have seen that before. Most notably the recent Poweliks Trojan [url the-persistent-malware-without-a-file.html] stored the active script component in the registry. Even some of the APT malware families, like Poison or Frethog, occasionally used the registry as storage for the main payload.There were precursors even within the criminal groups distributing PlugX: they used this method back in 2013 in a couple of cases for storing the Omdork (a.k.a. Sybin) payload. So it was only a question of when the same would happen to the main PlugX backdoor. And that time arrived this January.2PlugX goes to the registry (and India)PlugX in registry The new variants were distributed using two distinguishable classes of exploited carrier documents – though in both cases the CVE-2012-0158 exploit was used.For the first type the distribution was part of a longer campaign, targeting India. This campaign spanned several months, from September 2014 to February 2015. During this time span different variants of the PlugX backdoor were observed as the final payload. Apparently, this was an ongoing operation, where the actors behind it used the latest available versions, as they came out of the factory. Additionally, a few affiliated malware families were distributed to the targets.The samples of the second type showed up the first week of February. At this point we don’t have conclusive information about the scope and target of the campaign that used these samples.The payload is stored in encrypted form in the registry. It is loaded, decrypted and executed by the malware loader component. That loader is very similar to the usual PlugX loader DLLs, except that it loads the payload from a registry key instead of a separate file.PlugX payload in the registryThe stored payload is the new P2P PlugX backdoor, with internal function names not seen in earlier PlugX v2 versions: ZX, ZXWT, JP1, JP2, JP3, JP4, JP5, JAP0, JAP1.PlugX backdoors use a specific date parameter at specific places in the code. This constant could be used as a major version identifier: when the backdoor code was only slightly modified, the constant did not change. When the constant was updated, that usually meant a significant change in the code.In earlier versions this constant was a meaningful date in hexadecimal representation (e.g. 0x20130810 in most of the next generation PlugX samples). In the P2P PlugX version it changed, now being a meaningful date in decimal representation (e.g. 0x13352AF = 20140719 in the case of the Rotten Tomato samples).In the case of registry stored PlugX variants, this constant was stepped further to 20150108, which indicates a new development from the factory. Less than a month later these new variants were already spotted in targeted campaigns in India.3PlugX goes to the registry (and India)Peeled Tomato The first campaign we labelled as Peeled Tomato, in reference to the earlier Rotten Tomato case, because they were clearly derived from those samples.As a reminder, the original structure of the Rotten Tomato samples was the following:Encrypted ZbotCVE-2012-0158 exploitand shellcodeCVE-2014-1761 exploit and first stage shellcodeMemory marker andCVE-2014-1761 secondstage shellcodeEncrypted PlugXThe RTF documents started with an encrypted Zbot Trojan (remainder of the original template used for creating the samples), then a block using the CVE-2012-0158 exploit and the corresponding shellcode. After that, there was a block using the CVE-2014-1761 exploit and the corresponding first stage shellcode, followed by the second stage shellcode from the CVE-2014- 1761 exploit, and finally the encrypted PlugX backdoor.The first stage of the CVE-2014-1761 shellcode used a bad offset for the second stage code, thus this exploit never worked.4PlugX goes to the registry (and India)Having realized the failure of the attempt, the malware authors removed the CVE-2014-1761 exploit block. But even that was not done completely. As a result, they ended up with documents showing the following structure:Encrypted ZbotCVE-2012-0158 exploitand shellcodeMemory marker andCVE-2014-1761 secondstage shellcodeEncrypted PlugXSamples Not surprisingly, just like with several other campaigns, in this case it was observed that different malware families were distributed using similar carrier documents; only the encrypted payload was replaced at the end of the file. The shellcode used in the carrier was very convenient for this purpose: the length and location of the final payload was stored at the end of the file. It was possible to swap the payload without needing to modify the exploit condition and the shellcode itself. And this is exactly what the malware authors did.5PlugX goes to the registry (and India)9blog This malware family was described in this blog: [url ghozaresh amniyati.docSystem activity: Dropped to %PROFILE%\Application Data\Erease.vbeSAV detection: Troj/DocDrop-CH, VBS/9Blog-AC&C servers: www.freetimes.dns05.com Free Dynamic DNS provider6PlugX goes to the registry (and India)Smoaler This malware family was described in this blog: [url the-PlugX-malware-factory-revisited-introducing-smoaler/], and traditionally has strong ties with PlugX, sharing dropper code and C&C infrastructure.The samples were observed during the period between November 2014 and January 2015 in Russia.Original name: Проекты.docSystem activity: Dropped to C:\Documents and Settings\All Users\Application Data\Microsoft\Windows\Burn\ {COMPUTERNAME}.dll and C:\Documents and Settings\All Users\Application Data\Microsoft\ Windows\LiveUpdata_Mem\CrtRunTime.log; registered for startup in HKCU\Software\Microsoft\ Windows\CurrentVersion\Policies\Explorer\run → {COMPUTERNAME}Here {COMPUTERNAME} is the name of the computer, as set in Windows preferences.SAV detection: Exp/20120158-A, Troj/Smoaler-FC&C servers: lucas1.dnset.com телефонная книга и почтовый адрес(2014.10).docThe decoy document is the same as in the case of the Nineblog sample.System activity: Dropped to C:\Documents and Settings\All Users\Application Data\Microsoft\Windows\Burn\ {COMPUTERNAME}.dll and C:\Documents and Settings\All Users\Application Data\Microsoft\ Windows\LiveUpdata_Mem\CrtRunTime.log; registered for startup in HKCU\Software\Microsoft\ Windows\CurrentVersion\Policies\Explorer\run → {COMPUTERNAME}Here {COMPUTERNAME} is the name of the computer, as set in Windows preferences.SAV detection: Exp/20120158-A, Troj/Smoaler-F8PlugX goes to the registry (and India)PlugX v2 These samples were distributed in September and October 2014, in India. Indian Cooking Recipe.docSystem activity: Dropped to C:\Documents and Settings\All Users\RasTls\RasTls.exe (digitally signed clean loader by Symantec), C:\Documents and Settings\All Users\RasTls\RasTls.dll (loader) and C:\Documents and Settings\All Users\RasTls\RasTls.dll.msc (payload); registered in HKLM\ SYSTEM\CurrentControlSet\Services\RasTls → ImagePathThe payload is next generation PlugX [url labs-PlugX-the-next-generation/], date constant is 0x20130524SAV detection: Troj/DocDrop-CH, Troj/PlugX-APC&C servers: supercat.strangled.net Calling Off India-Pak Talks.docSystem activity: Dropped to C:\Documents and Settings\All Users\RasTls\RasTls.exe (digitally signed clean loader by Symantec), C:\Documents and Settings\All Users\RasTls\RasTls.dll (loader) and C:\Documents and Settings\All Users\RasTls\RasTls.dll.msc (payload); registered in HKLM\ SYSTEM\CurrentControlSet\Services\RasTls → ImagePathThe payload is next generation PlugX [url labs-PlugX-the-next-generation/], date constant is 0x20130524SAV detection: Troj/DocDrop-CH, Troj/PlugX-APC&C servers: nusteachers.no-ip.org Human Rights Violations of Tibet.docSystem activity: Dropped to C:\Documents and Settings\All Users\RasTls\RasTls.exe (digitally signed clean loader by Symantec), C:\Documents and Settings\All Users\RasTls\RasTls.dll (loader) and C:\Documents and Settings\All Users\RasTls\RasTls.dll.msc (payload); registered in HKLM\ SYSTEM\CurrentControlSet\Services\RasTls → ImagePathThe payload is next generation PlugX [url labs-PlugX-the-next-generation/], date constant is 0x20130524SAV detection: Troj/DocDrop-CH, Troj/PlugX-APC&C servers: ruchi.mysq1.net document is also unconvential, of minimalistic design.But the carrier document and the C&C server name shows correlation with the rest of the campaign.11PlugX goes to the registry (and India)Original name: Calling Off India-Pak Talks.docSystem activity: Dropped to C:\Documents and Settings\All Users\DRM\usta\usha.exe (digitally signed clean loader by Kaspersky) and C:\Documents and Settings\All Users\DRM\usta\ushata.dll (malware loader) and C:\Documents and Settings\All Users\DRM\usta\ushata.dll.avp (payload).Registered for startup in HKLM\SYSTEM\CurrentControlSet\Services\usta → ImagePathThe payload is next generation PlugX [url labs-PlugX-the-next-generation/], date constant is 0x20130810SAV detection: Exp/20120158-A, Troj/PlugX-APC&C servers: lucas1.freetcp.com Free dynamic DNS providerP2P PlugX Minutes of meeting.docSystem activity: Dropped to C:\Documents and Settings\All Users\DRM\rEjtQOtPhIi\fsguidll.exe (digitally signed clean loader by F-Secure), C:\Documents and Settings\All Users\DRM\rEjtQOtPhIi\fslapi.dll (loader) and C:\Documents and Settings\All Users\DRM\rEjtQOtPhIi\fslapi.dll.gui (payload),Registered for startup in HKLM\SYSTEM\CurrentControlSet\Services\gzQkNtWeabrwf → ImagePathThe payload is next generation P2P PlugX [url html], date constant is decimal 20141028.SAV detection: Troj/DocDrop-CH, Troj/PlugX-APC&C servers: unisers.com Registrant Name: wang cheng Registrant Organization: wang cheng Registrant Street: BeijingDaguoROAD136 Registrant City: Beijing Registrant State/Province: Beijing Registrant Postal Code: 100001 Registrant Country: CN Registrant Phone : +86.01085452454 Registrant Phone Ext: Registrant Fax: +86.01085452454 Registrant Fax Ext: U.S.,_India_to_formulate_smart_city_action_plans_in_three_months.docSystem activity: Dropped to C:\Documents and Settings\All Users\DRM\inbjUkRVq\fsguidll.exe (digitally signed clean loader by F-Secure), C:\Documents and Settings\All Users\DRM\inbjUkRVq\fslapi.dll (loader) and C:\Documents and Settings\All Users\DRM\inbjUkRVq\fslapi.dll.gui (payload),Registered for startup in HKLM\SYSTEM\CurrentControlSet\Services\brwTRsulGqjj → ImagePathThe payload is next generation P2P PlugX [url html], date constant is decimal 20141028.SAV detection: Troj/DocDrop-CH, Troj/PlugX-APC&C servers: unisers.com Registrant Name: wang cheng Registrant Organization: wang cheng Registrant Street: BeijingDaguoROAD136 Registrant City: Beijing Registrant State/Province: Beijing Registrant Postal Code: 100001 Registrant Country: CN Registrant Phone : +86.01085452454 Registrant Phone Ext: Registrant Fax: +86.01085452454 Registrant Fax Ext: Registrant Email:bitumberls@163.com14PlugX goes to the registry (and India)Registry PlugX CHINA NEWS BRIEF 09 of 2015.docSystem activity: Dropped to C:\Documents and Settings\All Users\DRM\sock5proxy\SX.EXE (digitally signed clean loader by Microsoft) and C:\Documents and Settings\All Users\DRM\sock5proxy\SXLOC.DLL; registered in HKLM\SYSTEM\CurrentControlSet\Services\sock5proxy → ImagePath; payload stored in the registry in HKCU\Software\BINARY → SXLOC.ZAPThe payload is next generation P2P PlugX [url html], date constant is decimal 20150108.SAV detection: Exp/20120158-A, Troj/PlugX-APC&C servers: freemoney.ignorelist.com Draft contract CMS Trg System.docSystem activity: Dropped to C:\Documents and Settings\All Users\DRM\sock5proxy\SX.EXE (digitally signed clean loader by Microsoft) and C:\Documents and Settings\All Users\DRM\sock5proxy\SXLOC.DLL; registered in HKLM\SYSTEM\CurrentControlSet\Services\sock5proxy → ImagePath; payload stored in the registry in HKCU\Software\BINARY → SXLOC.ZAPThe payload is next generation P2P PlugX [url html], date constant is decimal 20150108.SAV detection: Exp/20120158-A, Troj/PlugX-APC&C servers: freemoney.ignorelist.com Free dynamic DNS provider16PlugX goes to the registry (and India)Multi-staged installer shellcode This second batch of exploited documents had a different structure. All start with a heading RTF content (which is exactly the same in all of the documents), followed by the block that exploits the CVE-2012-0158 vulnerability, along with the first stage shellcode, followed by the second and third stage shellcodes, and finally the encrypted payload executable.RTF heading of exploited documentsThe shellcode itself is encrypted with a 4 byte XOR algorithm, with a lot of inserted junk instructions:edi, ebx short loc_13B[edi], esi fdivrpIn the above code sample, only the XOR [EDI], ESI instruction is meaningful, performing the decryption of the one dword; the rest are only polymorphic junk.st(1) edi short loc_157ebx, ebx eax, eaxedx, edxedi, esi st(1), st17PlugX goes to the registry (and India)The underlying shellcode is multi-stage andhas already been observed in an earlier sample constant 0x20140613), but in that case without the top level cryptor.After the initial bootstrap code is decrypted, it identifies the carrier by looking for ‘DCBA’ at file offset 0x4e28. If it is found there, it allocates a memory area and decrypts (using one byte XOR algorithm) the next stage starting from right after the ID string.The second stage code decrypts and drops two files: the self-extracting installer archive M.B and the first stage installer M.T into the %TEMP% folder, then allocates another memory region, decrypts, copies and executes the third stage shellcode there.The third stage shellcode copies the first stage installer (which is a DLL library) M.T into %WINDOWS%\Tasks\n.dll, then executes by calling LoadLibrary to load it. The Windows loader upon loading the DLL will execute its entry code. This entry code runs the self-extracting installer archive M.B which will do the final malware installation in the system. This final piece of installation process is malware family dependent.Exploited documentM.TM.BFirst stage shellcodeSecond stage shellcodeThird stage shellcode%WINDOWS%\Tasks\n.dllMalware installerThis new shellcode also indicates some heavy development in the PlugX factory. Both this kind of multi-stage shellcode and the external cryptor indicate that although the group is not top class in exploit development, in conventional malware development they show serious skills, paris_declaration january_final.docThe dropped decoy document is corrupted. On opening it, Word will show a conversion dialog as a result of the incomprehensible content.System activity: Dropped to C:\Documents and Settings\All Users\DRM\emproxy\SX.EXE (digitally signed clean loader by Microsoft) and C:\Documents and Settings\All Users\DRM\emproxy\SXLOC.DLL and %WINDOWS%\Tasks\n.dllRegistered for startup in HKLM\SYSTEM\CurrentControlSet\Services\sock5proxy → ImagePath and by dropping n.dll into the Windows Tasks directory.The n.dll file is a first stage installer, loads M.B, which is dropped into the %TEMP% directory. This installer is a self-extracting WinRAR that contains RasTls.exe and a config file. After the installation, this RAR SFX file is removed from the system.Payload is stored in the registry in HKCU\Software\BINARY → SXLOC.ZAPThe payload is next generation P2P PlugX [url html], date constant is decimal 20150108.SAV detection: Troj/DocDrop-CD, Troj/Omdork-E, Troj/PlugX-APC&C servers: sumy2012.jkub.com Obama against IS.docThe dropped decoy document is corrupted just like in the previous case.System activity: Dropped to C:\Documents and Settings\All Users\DRM\emproxy\SX.EXE (digitally signed clean loader by Microsoft) and C:\Documents and Settings\All Users\DRM\emproxy\SXLOC.DLL and %WINDOWS%\Tasks\n.dllRegistered for startup in HKLM\SYSTEM\CurrentControlSet\Services\sock5proxy → ImagePath and by dropping n.dll into the Windows Tasks directory.The n.dll file is a first stage installer, loads M.B, which is dropped into the %TEMP% directory. This installer is a self-extracting WinRAR that contains RasTls.exe and a config file. After the installation, this RAR SFX file is removed from the system.Payload is stored in the registry in HKCU\Software\BINARY → SXLOC.ZAPThe payload is next generation P2P PlugX [url html], date constant is decimal 20150108.SAV detection: Troj/DocDrop-CD, Troj/Omdork-E, Troj/PlugX-APC&C servers: dheeraj_gaurav.mooo.com N/AOn execution this dropper displays a blank decoy document.System activity: Dropped to C:\Documents and Settings\All Users\DRM\RdeGL\fsguidll.exe (digitally signed clean loader by F-Secure) and C:\Documents and Settings\All Users\DRM\RdeGL\fslapi.dll (malware loader) and C:\Documents and Settings\All Users\DRM\RdeGL\fslapi.dll.gui (payload) and %WINDOWS%\Tasks\n.dllRegistered for startup in HKLM\SYSTEM\CurrentControlSet\Services\dUuNvGfDQkAll → ImagePath and by placing n.dll in the Windows Tasks directory.The payload is next generation P2P PlugX [url html], date constant is decimal 20141028.The n.dll file executes a backup installer, M.B, which is dropped into the %TEMP% directory. The only problem is that this file is never created.SAV detection: Troj/DocDrop-CD, Troj/Omdork-E, Troj/PlugX-APC&C servers: www.notebookhk.net Registrant Name: lee stan Registrant Organization: lee stan Registrant Street: xianggangdiqu Registrant City: xianggangdiqu Registrant State/Province: xianggang Registrant Postal Code: 796373 Registrant Country: HK Registrant Phone : +0.04375094543 Registrant Phone Ext: Registrant Fax: +0.04375094543 Registrant Fax Ext: method, with exactly the same file names that are used with PlugX installations. Only the final payload is a different backdoor, Omdork, which has earlier been observed in PlugX related distribution channels.21PlugX goes to the registry (and India)Original name: United Nations Security Council Committee Pursuant to Resolutions1267.docSystem activity: Dropped to C:\Documents and Settings\All Users\FlashUpdate\RasTls.exe and C:\Documents and Settings\All Users\FlashUpdate\msi.dll.mov (encrypted payload) and %WINDOWS%\Tasks\n. dll.The persistence is achieved by two methods: RasTls.exe is registered in HKCU\Software\ Microsoft\Windows\CurrentVersion\Run → msusr, and the n.dll is dropped to the Windows Tasks directory for automatic execution.While the file names are the same as in the case of many PlugX deployments, the files themselves are very different.RasTls.exe is not digitally signed, it is the loader Trojan, that loads the encrypted payload from a resource. This payload itself contains a loader code, and an embedded executable, that is the final payload.The n.dll file executes a backup installer, M.B, which is dropped into the %TEMP% directory. This installer is a self-extracting WinRAR that contains RasTls.exe and a config file.There are still reasons to believe that this malware is strongly connected to the PlugX group:Ì It uses the same filenames as some of the PlugX deploymentsÌ It uses the same carrier document as the other PlugX variantsin this campaign, including the unique shellcodeÌ The same n.dll is used in both the Omdork and PlugX deployments22PlugX goes to the registry (and India)SAV detection: Troj/DocDrop-CD, Troj/Omdork-EC&C servers: www.togolaga.com Registrant Name: wang feng Registrant Organization: wang feng Registrant Street: beijingshi Registrant City: beijingshi Registrant State/Province: beijing Registrant Postal Code: 100000 Registrant Country: CN Registrant Phone : +86.01090888962 Registrant Phone Ext: Registrant Fax: +86.01090888962 Registrant Fax Ext: Registrant Email:battuya_2002@yahoo.comMore than 100 million users in 150 countries rely on Sophos as the best protection against complex threats and data loss. Sophos is committed to providing complete security solutions that are simple to deploy, manage, and use that deliver the industry’s lowest total cost of ownership. Sophos offers award winning encryption, endpoint security, web, email, mobile, server and network security backed by SophosLabs—a global network of threat intelligence centers. Read more at www.sophos.com/products.United Kingdom and Worldwide Sales Tel: +44 (0)8447 671131 Email: sales@sophos.comNorth American Sales Toll Free: 1-866-866-2802 Email: nasales@sophos.comAustralia and New Zealand Sales Tel: +61 2 9409 9100 Email: sales@sophos.com.auAsia Sales Tel: +65 62244168 Email: salesasia@sophos.comOxford, UK | Boston, USA © Copyright 2014. Sophos Ltd. All rights reserved. Registered in England and Wales No. 2096520, The Pentagon, Abingdon Science Park, Abingdon, OX14 3YP, UK Sophos is the registered trademark of Sophos Ltd. All other product and company names mentioned are trademarks or registered trademarks of their respective owners.1180-06.14DD.tpna.simple 