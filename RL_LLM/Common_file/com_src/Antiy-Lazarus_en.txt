Analysis of Suspected Lazarus Attacks Against South Koreamp-weixin-qq-com.translate.goog/s/w-KF5HUNe8-KlmFl6zLkZwAntiy CERT Antiy Group 2022-11-01 12:47 Posted in Beijing Recently, Antiy CERT discovered an attack activity against South Korea. The title of the decoy document is "Sogang KLEC.docx" (Sogang University Korean Language Education Center.docx). Analyze and judge the obtained samples and associated malicious payloads, and finally associate them with the Lazarus organization. Lazarus organization, also known as HIDDEN COBRA, APT38, Zinc, Guardians of Peace, etc., is one of the most active APT organizations in the peninsula region. The organization's attack targets involve dozens of countries such as Poland, Chile, the United States, Mexico, Brazil, etc., and carry out targeted attacks on financial institutions and individuals such as banks and Bitcoin exchanges to obtain economic benefits. It is the largest financial institution in the world. one of the threats. In addition, the group also infiltrated institutions and enterprises such as aerospace, COVID-19 vaccine technology, government, media, etc. to steal important information and carry out sabotage and extortion.0 2 Attack process The attack flow of this attack is roughly as follows:1. Using template injection, wait for the decoy document to be opened and download the malicious template constructed by the attacker to the host for execution.2. The macro code in the template requests the specified URL, downloads the malicious payload and injects it into WINWORD.exe for execution.3. The downloaded malicious payload is mainly used to release the download tool IEUpdate.exe and execute it, and add it to the registry RUN for persistence.4. After IEUpdate.exe is executed, it sends a message to obtain the C2 used for subsequent communication, and downloads different malicious payloads for execution according to the returned information.5. There are two known payloads, hvncengine.dll and shellengine.dll, which are used to communicate with C2 for remote control.1/33Figure 2-1 Schematic diagram of the attack flow03 the decoy document was found. The information indicates that the decoy document was downloaded from the large attachment storage site provided by Naver Mail. It is speculated that the attacker may send phishing emails through Naver Mail to attack. Naver Mail is known to be an email service provided by the South Korean internet group Naver Corporation.Figure 3‑1 Decoy document download linkSaniTOX is a security protection software from South Korea's Jiransecurity company. The decoy document imitates SaniTOX to induce victims to enable macros. The main content of the malicious document is as follows.Figure 3-2 The main content of the decoy document of this attackAfter correlating the content of the document body, it is found that the body content of the decoy document appears not for the first time.3/33Figure 3‑3 The main content of the decoy document in past attacks The attacker uses Word template injection to download and execute the malicious template after the victim opens the decoy document. The address of the template is document is opened. The main function of the macro code is to download malicious payloads. If the download is successful, the downloaded malicious payloads will be injected into the Winword program for execution.Figure 3‑5 Download malicious payloadThis function injects the downloaded malicious payload into WinWord for execution.5/33Figure 3-6 Injection functionThe malicious payload injected into the Winword process will release the IEUpdate.exe and error.log files under %LocalAppData%\Microsoft\PlayReady, and then bypass UAC through fodhelper.exe to elevate the permissions of IEUpdate.exe to execute, in the error.log file Some URL links "s/ucnpe74wo87d3mm/server.txt?dl=0" that need to be bypass part of the sandbox that modifies the sleep time.Figure 3‑10 Sandbox detectionObtain the device description information of the main hard disk, and concatenate it with "VDEVICE". The concatenated string is hashed with CRC and then concatenated with "0". The format is "0+CRC hashed value".Figure 3-11 Obtain host information and generate host IDDetermine whether it has administrator privileges by creating a directory under the system directory.8/33Figure 3-12 Permission JudgmentGet the version information of the operating system.Figure 3-13 Obtaining OS version informationObtain a process snapshot and determine whether the currently running process contains "v3l4sp.exe", "AYAgent.aye", and "IEUpdate.exe". Among them, "v3l4sp.exe" is a subprogram of the free antivirus software V3 Lite of the Korean company AhnLab, and "AYAgent.aye" is a part of the Internet security suite ALYac of the Korean company ESTsoft.Figure 3-14 Detection of designated anti-virus softwareIf the path is "%LocalAppData%\Microsoft\PlayReady\IEUpdate.exe" and the process ID does not match the current process, close the previous IEUpdate.exe process.9/33Figure 3-15 Close the previous processSet the flag according to whether "/s" and "/a" are included in the parameters of cmdline, and select different branches to execute according to the previously set administrator permission flag.Figure 3-16 Set the mark according to the parameterDetermine whether the previous privilege escalation operation was successful. If you have administrator rights, it will add itself to the Windows Defender exclusion list via PowerShell commands.10/33Figure 3‑17 Add this file to Windows Defender whitelistIf you are not an administrator, create a new thread and execute it in a loop, as shown below.Figure 3-18 Creating a threadThe thread creates another thread function, which is used to communicate with the C2.First, splicing "dl.dropboxusercontent.com" with the content obtained from the error.log file, and obtaining the C2 address of the next communication from the URL formed after splicing.Figure 3‑19 Obtaining the C2 address from Dropbox11/33Then return the operating system version information, whether there is a specified antivirus software, and the previously generated uid as the online package.Figure 3-20 Constructing the online packageThe online package return function will send the collected information to post2.php.Figure 3-21 Sending an online packageThen receive data from the spliced URL, process the data, and obtain the content after the third "%" in the data, and use "\r" and "\n" as the terminators. This content will serve as the resource address for subsequent download URLs. Get the Arabic numerals of numbers 0-9, and get the instruction ID after processing.12/33Figure 3-22 Sending a request and receiving a command from C2Execute the issued command cyclically, and will judge whether to repeat the execution.13/33Figure 3-23 Execute the command issued by C2Download the dll file and select the export function to execute.14/33Figure 3-24 Download subsequent load executionThe information of the above samples was searched through the public intelligence platform, and two files were found in the PCAP file associated with the decoy document, which should be malicious payloads downloaded by IEUpdate.exe, and they have the same return data structure and decryption algorithm.Table 3-4 Return data structure15/33offset to headerlength (byte)explain0x00xC0x140x180x1C0xC0x80x40x4sizeFixed data, decrypted as )(*&POIU:LKJFixed data, replaceable with received data on demandThis part of the data is determined according to the content of the executionThe length of the returned data (size)returned data0x1C+size0xCFixed data, decrypted to ^%$#YTREHGFDDuring the process of returning the file, the data structure of the returned data will be adjusted appropriately, as shown in the following figure.Table 3-5 File return data structureoffset to headerlength (byte)explain0x00xC0x140x1C0x200xC0x80x80x4Fixed data, decrypted as )(*&POIU:LKJFixed data, replaceable with received data on demandoverall file sizefile path lengthsize1file path (size1)0x20+size10x28+size10x80x4the position of the current file pointerThe size of the current read file content (size2)16/330x2C+size1size2read file content0x2C+size1+size2 0xCFixed data, decrypted to ^%$#YTREHGFDThe positions of ")(*&POIU:LKJ" and "^%$#YTREHGFD" on the keyboard are shown in the figure below.Figure 3-25 The position of the fixed content in the returned data structure on the used to close the socket connection and wait for the thread. SEStart is the main function of the load, which is used to communicate with the C2 to realize the hvnc function.After the sample runs, it first generates a string with the host ID like IEUpdate.exe.Figure 3-26 Obtain host information and generate host IDEvery ten minutes, a malicious function is executed.Figure 3-27 Setting the interval timeCreate a desktop with the above string with the host ID as the name.18/33Figure 3-28 Create a new desktopAfter entering the thread function, like IEUpdate.exe, read the content in "error.log" and splicing it with "dl.dropboxusercontent.com", obtain the C2 address through GET request, and then try to connect through socket.Figure 3‑29 Get C2 from Dropbox and connectIf the connection is successful, the previously generated host identifier will be sent over the socket and the current thread's association with the desktop will be set.19/33Figure 3-30 Sending a specific stringReceive commands from the server in turn to realize the function of hvnc.Figure 3-31 Receive command parsing and executionDifferent operations are presented according to the issued commands. The reverse malicious function.Figure 3-35 Threads that implement malicious functionsSame as the previous two samples, the content in "error.log" is still read and then spliced with "dl.dropboxusercontent.com", the C2 for subsequent communication is obtained from this address, and the socket connection is attempted.24/33Figure 3‑36 Get C2 from Dropbox and connectIf a socket connection can be established, it will receive commands from the server and implement different malicious functions according to the commands.25/33Figure 3-37 Implementing different malicious functions according to instructionsDifferent operations are presented according to the issued commands. The reverse analysis commands and corresponding functions are roughly as follows.Table 3-9 Commands and corresponding functionsOrder Function0x1According to the received data, change the 8 bytes at offset 0xC of the returned data structure0x2Restart the cmd.exe process or execute the command line through cmd.exe0x4Get a list of disks or get a list of subdirectories and file names in a specified directory0x6Get the specified file0xAGet screenshot information0xBSet a marker to stop taking screenshots0xDSimulate mouse clicks0xESimulate mouse movement0xFModify the parameters of image conversion0x14Change the 8 bytes at offset 0xC of the return data structure to the data stored in the sample0x1Ereturn chrome key0x1F Get the files in the specified directory04 Traceability analysis26/33Through the similarity of pdb paths and the same custom encryption function, it can be inferred that the three PE files involved in the attack should belong to the same attacker. According to the high similarity between the VBA code and the IEUpdate.exe download tool code contained in the template file and the code of the corresponding files in the previous attack activities of the Lazarus organization, it is speculated that this attack activity also belongs to the Lazarus organization.The pdbs of the three files, IEUpdate.exe, hvncengine.dll, and shellengine.dll, are all in the same directory.Figure 4‑1 pdb of IEUpdate.exeFigure 4‑2 pdb of hvncengine.dllFigure 4‑3 pdb of shellengine.dll27/33The custom encryption functions of hvncengine.dll and shellengine.dll are exactly the same, but the keys used are different. The key of IEUpdate.exe and shellengine.dll is "LNfYIU", and the key of hvncengine.dll is "WhdeEg".Figure 4-4 Custom encryption functionThe template files with malicious macros and the IEUpdate.exe download tool are mostly similar to the sample code previously discovered by the Lazarus group.Figure 4‑5 vba code involved in this attackFigure 4‑6 VBA code [2]28/33Figure 4‑7 The download tool code involved in this attack29/33Figure 4‑8 Download tool code involved in previous attacks[2]0 5 Threat Framework Mapping The ATT&CK framework map of the behavioral technical points of the Lazarus organization-related attack activities is as follows:30/33Figure 5-1 Lazarus organization's attack activity corresponding to the ATT&CK threat framework mapThis series of activities involves a total of 28 technical points in 11 stages in the ATT&CK framework. The specific behaviors are described in the following table:Table 5-1 ATT&CK technical behavior description tableATT&CK Stage/Categoryspecific behaviorNotesresource developmentget infrastructureUse DropBox to store the C2 address of subsequent connectionsinitial visitPhishingSpeculation may use phishing emails to spread decoy filesinitial visitwatering hole attackSpeculation that decoy files may be spread through watering hole attacksimplementimplementUse inter-process communicationThe shellengine.dll backdoor can execute cmd commands through pipesinduce users to executeInduce users to open a decoy document constructed by the attackerPersistenceBootstrap or login with autostartPersistence by modifying registry startup keysescalation of rightsAbuse of Elevated Control PrivilegesBypassing UAC via fodhelper.exeescalation of rightsprocess injectionInject IEUpdate.exe into the WINWORD.exe processdefensive evasiondefensive evasionAbuse of Elevated Control PrivilegesBypassing UAC via fodhelper.exeDeobfuscate/decode files or messagesThe key string of the sample species is encrypted by a custom algorithm31/33defensive mechanismsprocess injectionModify Windows Defender's whitelistInject IEUpdate.exe into the WINWORD.exe processtemplate injectionUsing template injection to load remote malicious template executionVirtualization/Sandbox EscapeAvoid some sandboxes by judging whether the sleep delay is successfulSteal web session cookiessteal chrome cookiesDiscover the application windowDiscover application windows for remote desktop controlDiscover files and directoriesDiscover files and directories in the target machinediscovery processDiscover process information in the target machineQuery the registrytarget machine foundDiscover system informationDiscover the system version and other information of the target machineDiscover system owner/userfind system timeFind the current user of the target machineFind the current system time of the target machineVirtualization/Sandbox EscapeAvoid some sandboxes by judging whether the sleep delay is successfulcollectCollect local system dataCollect data such as system version, username, file list, files, etc.collectinput captureCapture mouse and keyboard messages32/33collecttake screenshottake screenshotcommand and controlUse application layer protocolsUse socket to communicate with C2data exfiltrationBackhaul using C2 channelThe data is also sent back through the C2 The Lazarus group is the top hacker gang in the peninsula region, focusing on long-term and persistent cyberattacks against specific targets, with the purpose of stealing funds and achieving political goals. It is one of the biggest threats to global financial institutions. In this attack, the Lazarus group used a multi-stage download tool and obtained the C2 address through Dropbox, which made it more difficult to obtain the attack payload. At the same time, there were behaviors of detecting the designated anti-software components and sandboxes in the sample, which interfered with the analysis. The sample also uses fodhelper.exe to bypass UAC to escalate the privileges of malicious processes, making the attack more difficult to detect by means of process injection and changing the exclusion list of Windows Defender. The anti-virus software ALyac and Ahnlab detected in the sample are both popular anti-virus software in South Korea. Combined with the name of the decoy file "Sogang KLEC.docx" and the pictures in the text of the decoy document, it can be inferred that this is an attack against South Korea.References:[1] 한국인터넷정보센터 (KRNIC)를사칭한정보수집악성이메일주의!! (변종내용추가) url Snow and gluttony: Analysis of suspected Lazarus attacks against Korean companies url companies/33/33 