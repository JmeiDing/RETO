Miniduke: Indicatorsv1.00 (Feb 27, 2013)Technical ReportbyLaboratory of Cryptography and System Security (CrySyS Lab)url University of Technology and EconomicsDepartment of Networked Systems and Servicesurl Malware Intelligence Team. Based on joint work with Kaspersky Labs GREATTeamDocument history27/02/2013 Initial releaseTable of contents1.Introduction 42. Known malware samples 53. Detection of the running malware 114. C&C communication 13 Detection of C&C communications 15 Initial C&C communication 15 Other indicators of C&C communication: Google and Twitter queries 184.1. 4.2. /srch/index.php/forumengine/index.php/events/index.php Not shown: 65524 closed ports PORT STATE SERVICE 22/tcp open ssh 111/tcp open rpcbind 920/tcp open unknown 1437/tcp open tabula 46436/tcp open unknownFigure 6 – Stage 3 C&C server information4.1. Detection of C&C communicationsBasic detection can be based on 3 queries that are initiated by the victim computers withinseconds.www.google.com – port TCP/80 - HTTP twitter.com –port TCP/443 - SSL www.geoiptool.com –port TCP/80 - HTTPFigure 7 – Initial web page – and possibly DNS queries issued by the malwareKnown search strings in Google search (see below) can also be used to detect the malware.Unfortunately, these strings are most likely unique to each C&C server or victim, thusunknown samples might use other strings, but possibly with the same length.lUFEfiHKljfLKWPR HkyeiIDKiroLaKYr lUFEfiHKDroLaKYrFigure 8 – Google search strings used by the malwareThe malware also sends a query to the geoiptool. An example is shown below:GET / HTTP/1.1 User-Agent: Mozilla/5.0 (compatible; MSIE 7.0; Windows NT 6.0; en-US; Trident/5.0) Host: www.geoiptool.comFigure 9 – Geoip lookup query sample – Agent string might be different for each query!4.2. Initial C&C communicationInitial communications with the stage 2/3 delivery C&C servers (such as arabooks.ch) can beused to develop detection signatures as follows:The malware retrieves the URL using a Twitter query as described earlier. Then, we canobserve the first query from the victim towards the stage 2/3 delivery C&C server. This querycontains pure HTTP traffic on port 80 to the server following the template below.GET /original/path/shortname/index.php?e=aaaaaaaaawhere:• shortname can be a number of strings, generally human readable (e.g. lib, engine,forum, forumengine etc.)• "e=" is not constant, can be anything, but generally 1-2 letters long • aaaaaaaaa stands for some Base64-like text (see details below) •the servers used are assumed to be legitimate sites, just hacked by the attackers.Based on this format, we can detect a valid query as follows:• The name of the 1st GET parameter should be discarded • • we saw only one GET parameter, queries with multiple parameters are likely notthis means "e=" is not importantusedFor detection, the Base64-like string "aaa…" should be first modified as follows:• "-" should be replaced by "+" • "_" should be replaced by "/"This results in correct Base64 encoding, which can be decoded with library functions such asbase64_decode. After decoding, a string of data, partially binary will be available. Parts areseparated by the delimiter character "|". The format and a numerical example are below:<binary data ( ~100 bytes)>|<numerical ID ( ~10 digits)>|<version number>e.g.,<binary data>|5551115551|1.13As the binary data itself may contain the ”|” character, parsing should start from the end(i.e., the numerical ID starts from the second “|” character from the end). In additional, theID length may vary (not fully confirmed), but it seems to be around 10 digits. Finally, theversion number always follows the pattern <1digit><dot><two digits>, e.g., 1.1X 3.1X.The correct decoding of the HTTP query information should be enough to quickly developpossible IDS-based detections. As we have seen, detection is complicated, but notimpossible. The following is the summary of potential detection steps:• Check if there is only one GET parameter • • convert the Base64-like GET parameter string into real Base64 encoding, and check if(check if path is not empty and contains index.php)(possible, but not confirmed)it decodes correctly• check if the decoded string has at least two delimieter character "|" in it • check if after the last but first “|” character, there are digits only • check if the version part of the string follows the format “1.11” or similarThe header sent is fairly standard, but we include one example nonetheless:0x00d0: 2e31 0d0a 4163 6365 7074 3a20 2a2f 2a0d .1 Accept:.*/*. 0x00e0: 0a41 6363 6570 742d 456e 636f 6469 6e67 .Accept-Encoding 0x00f0: 3a20 677a 6970 2c20 6465 666c 6174 650d :.gzip,.deflate. 0x0100: 0a55 7365 722d 4167 656e 743a 204d 6f7a .User-Agent:.Moz 0x0110: 696c 6c61 2f34 2e30 2028 636f 6d70 6174 illa/4.0.(compat 0x0120: 6962 6c65 3b20 4d53 4945 2037 2e30 3b20 ible;.MSIE.7.0;. 0x0130: 5769 6e64 6f77 7320 4e54 2035 2e31 3b20 Windows.NT.5.1;. 0x0140: 5472 6964 656e 742f 342e 303b 2049 6e66 Trident/4.0;.Inf 0x0150: 6f50 6174 682e 3129 0d0a 486f 7374 3a20 oPath.1) Host:. 0x0160: XXXX XXXX XXXX XXXX XXXX XX0d 0a43 6f6e XXXXXXXXXXX Con 0x0170: 6e65 6374 696f 6e3a 204b 6565 702d 416c nection:.Keep-Al 0x0180: 6976 650d 0a0d 0a ive Figure 10 – Other HTTP header values in a C&C queryThe used Agent strings vary significantly across queries, therefore they cannot be really usedfor detection:Mozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1) Mozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1;+SV1) Mozilla/4.0+(compatible;+MSIE+6.0;+Windows+NT+5.1;+SV1;+InfoPath.2) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET+CLR+1.1.4322;+ .NET+CLR+2.0.50727;+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+InfoPath.2) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET+CLR+2.0.50727; +.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+InfoPath.2) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+.NET4.0C;+.NET+CLR+ 1.1.4322;+.NET+CLR+2.0.50727;+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+.NET4.0E; +InfoPath.3) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+GTB7.4;+InfoPath.1; +.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.30729;+.NET+CLR+1.0.3705;+.NET+CLR+1.1.4322;+ .NET4.0E;+.NET4.0C;+.NET+CLR+2.0.50727) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+5.1;+Trident/4.0;+InfoPath.2)Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/4.0;+GTB7.4;+SLCC2;+.NET +CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+InfoPa th.3;+.NET4.0C;+.NET4.0E) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+InfoPath.3;+Media+Center+PC+6.0;+.N ET4.0C;+.NET4.0E) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0C;+.NET 4.0E) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0C;+Info Path.2;+.NET4.0E) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+CMDTDF;+.NET4. 0C;+InfoPath.3) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+Trident/5.0;+SLCC2;+.NET+CLR+2.0 .50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+InfoPath.2) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/5.0;+SLCC2;+.NET+ CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0 C;+.NET4.0E) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/5.0;+SLCC2;+.NET+ CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0 C;+.NET4.0E;+BRI/2;+InfoPath.3) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/5.0;+SLCC2;+.NET+ CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0 C;+.NET4.0E;+InfoPath.2) Mozilla/4.0+(compatible;+MSIE+7.0;+Windows+NT+6.1;+WOW64;+Trident/5.0;+SLCC2;+.NET+ CLR+2.0.50727;+.NET+CLR+3.5.30729;+.NET+CLR+3.0.30729;+Media+Center+PC+6.0;+.NET4.0 C;+.NET4.0E;+InfoPath.3) Mozilla/4.0+(compatible;+MSIE+8.0;+Windows+NT+5.1;+Trident/4.0;+.NET+CLR+2.0.50727; +.NET+CLR+3.0.04506.648;+.NET+CLR+3.5.21022;+.NET+CLR+3.0.4506.2152;+.NET+CLR+3.5.3 0729;+InfoPath.2) Mozilla/5.0+(Windows+NT+5.1;+rv:19.0)+Gecko/20100101+Firefox/19.0 Mozilla/5.0+(Windows+NT+6.1;+rv:10.0)+Gecko/20100101+Firefox/10.Figure 11 – Agent strings used in C&C comms – might be partial or wrong – not useful for detection4.3. Other indicators of C&C communication: Google andTwitter queriesThe Google search step also uses different agent strings:„GET /search/?q=lUFEfiHKDroLaKYr HTTP/1.1" 304 211 "-" "Opera/7.0 (compatible; MSIE 7.0; Windows NT 6.0; en-US; WOW64)" „GET /search?q=lUFEfiHKDroLaKYr HTTP/1.1" 301 588 "-" "Opera/5.0 (Windows; U; Windows NT 5.2; en-US; Trident/4.0)" „GET /search?q=lUFEfiHKDroLaKYr HTTP/1.1" 301 588 "-" "Opera/4.0 (Windows NT 5.1; en-GB; Trident/4.0)"Figure 12 – Some Google search agent strings"GET /EdithAlbert11 HTTP/1.1" 404 1229 "-" "Mozilla/6.0 (X11; Linux x86_64; en-GB; Trident/5.0)" "GET /ifsWcj9a HTTP/1.1" 404 529 "-" "Mozilla/5.0 (compatible; MSIE 6.0; Windows NT 5.0; en-GB; WOW64; Trident/5.0)" "GET /EdithAlbert11 HTTP/1.1" 404 644 "-" "Mozilla/5.0 (Windows NT 5.1; en-GB; Trident/4.0)" "GET /ifsWcj9a HTTP/1.1" 404 529 "-" "Mozilla/5.0 (compatible; MSIE 6.0; Windows NT 5.0; en; WOW64; Trident/5.0)" "GET /EdithAlbert11 HTTP/1.1" 404 1229 "-" "Mozilla/7.0 (compatible; MSIE 7.0; Windows NT 6.0; en-GB; WOW64)" ] "GET /ifsWcj9a HTTP/1.1" 404 510 "-" "Opera/5.0 (compatible; MSIE 9.0; Windows NT 6.1; en-GB; SV1)"Figure 13 – Twitter search samples – 443/SSLThe C&C server’s response – if it sends encrypted files – is a GIF file containing a small icon,and after that, the malware:0x0020: XXXX XXXX XXXX XXXX 4749 4638 3961 2000 XXXXXXXXGIF89a 0x0030: 2000 f700 00bc 5514 faa9 52eb 851c f39b U R 0x0040: 50ee 934d bd4e 05eb 8422 1a20 32ea b279 P M.N " 2 y 0x0050: 973f 06e9 7522 fdf9 f5d8 6c40 a148 10f9 .? u" l@.H 0x0060: e5d4 181d 2df5 9f4a 402c 29ec 8a46 fdf5 - J@,) F 0x0070: ecef caa6 e37d 46dc 5d22 c152 09dc 8d49 }F.]".R I 0x0080: eccb b4f4 dac3 fa91 21f8 8e22 c15a 19f4 ! ".Z 0x0090: 871b fb9f 3bfb 972e f1cb b3e9 ab6c f289 ; l 0x00a0: 31f9 9837 0d0f 17e9 8446 7333 0bfb e8d3 1 7 Fs3 Figure 14 – GIF File header sent back by the C&C serverFor stage 3 (i.e., <id>.gif files), the file downloaded has a larger size (~300KB). It also beginswith a GIF header, but that header is only 13 bytes long, and then starts the encryptedexecutable, as shown below:Examples for twits containing the URL of the C&C server are shown below:The weather is good today. Sunny! uri!wp07VkkxYt3Mne5uiDkz4Il/Iw48Ge/EWg== Albert, my cousin. He is working hard. uri!wp07VkkxYmfNkwN2nBmx4ch/Iu2c+GJow39HbphL My native town was ruined by tornado. uri!wp07VkkxYt3Md/JOnLhzRL2FJjY8l2ItFigure 15 – Known twitter answers for C&C discoveryThe twitter information is currently not very useful for content based detection, as it isdownloaded through SSL connection, and therefore, IDS rules can only be applied if someSSL proxy is used.An interesting observation is that this user follows 4 partners, most likely for deception. 