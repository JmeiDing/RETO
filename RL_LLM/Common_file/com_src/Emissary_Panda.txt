5/29/2019Emissary Panda Attacks Middle East Government Sharepoint ServersEmissary Panda Attacks Middle East Government Sharepoint Serversunit42.paloaltonetworks.com/emissary-panda-attacks-middle-east-government-sharepoint-serversBy Robert Falcone and Tom LancasterMay 28, 2019Executive SummaryIn April 2019, Unit 42 observed the Emissary Panda (AKA APT27, TG-3390, Bronze Union, Lucky Mouse) threat group installing webshells on Sharepoint servers to compromise Government Organizations of two different countries in the Middle East. We believe the adversary exploited a recently patched vulnerability in Microsoft SharePoint tracked by CVE-2019-0604, which is a remote code execution vulnerability used to compromise the server and eventually install a webshell. The actors uploaded a variety of tools that they used to perform additional activities on the compromised network, such as dumping credentials, as well as locating and pivoting to additional systems on the network. Of particular note is their use of tools to identify systems vulnerable to CVE- 2017-0144, which is the same vulnerability exploited by EternalBlue that is best known for its use in the WannaCry attacks of 2017.This activity appears related to campaigns exploiting CVE-2019-0604 mentioned in recent security alerts from Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security. In addition to the aforementioned post-exploitation tools, the actors used these webshells to upload legitimate executables that they would use DLL sideloading to run a malicious DLL that has code overlaps with known Emissary Panda attacks. We also found the China Chopper webshell on the SharePoint servers, which has also been used by the Emissary Panda threat group.In this blog, we provide details of the tools and tactics we observed on these compromised SharePoint servers, explain how we believe these connect to the Emissary Panda threat group, correlate our ﬁndings with those of the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security, and provide indicators of compromise (IoCs) from our research. You can ﬁnd the Adversary Playbook for the activity detailed in this blog here.Attack OverviewThis webshell activity took place across three SharePoint servers hosted by two different government organizations between April 1, 2019 and April 16, 2019, where actors uploaded a total of 24 unique executables across the three SharePoint servers. Figure 1 shows a timeline of when the ﬁles were uploaded to the three webshells. The timeline shows three main clusters of activity across the three webshells, with activity occurring on two separate webshells (green and orange) within a very small window of time on April 2, 2019 and the activityurl Panda Attacks Middle East Government Sharepoint Serversinvolving the third webshell two weeks later on April 16, 2019. The actors uploaded several of the same tools to across these three webshells, which provides a relationship between the incidents and indicates that a single threat group is likely involved.Figure 1. Timeline of ﬁle uploads across three related webshellsThe tools uploaded to the webshells range from legitimate applications such as cURL to post-exploitation tools such as Mimikatz. The threat actors also uploaded tools to scan for and exploit potential vulnerabilities in the network, such as the well-known SMB vulnerability patched in MS17-010 commonly exploited by EternalBlue to move laterally to other systems on the network. We also observed the actors uploading custom backdoors such as HyperBro which is commonly associated with Emissary Panda. Based on the functionality of the various tools uploaded to the webshells, we believe the threat actors breach the SharePoint servers to use as a beachhead, then attempt to move laterally across the network via stolen credentials and exploiting vulnerabilities.Webshells InstalledAs previously mentioned, we found webshells installed on three SharePoint servers hosted at two different organizations, two of which had the same ﬁle name of errr.aspx and the other a ﬁlename of error2.aspx. The webshells were hosted at the following paths on the compromised servers:/_layouts/15/error2.aspx/_layouts/15/errr.aspxWe were able to gather one of the webshells with which we saw the actor interacting, speciﬁcally the error2.aspx ﬁle listed above. The error2.aspx ﬁle (SHA256: which is part of a tool created for red teaming called Nishang. The speciﬁc variant of Antak in error2.aspx is version v0.5.0, which is an older version of the webshell that was updated in August 2015 to v0.7.6 to include some basic authentication functionality and the ability to perform SQL queries. It’s possible the actors obtained Antak v0.5.0 via the Nishang GitHub repository or from SecWiki’s GitHub that also has the v0.5.0 version of Antak. Figure 2 shows the Antak webshell loaded on one of the Sharepoint servers.url Panda Attacks Middle East Government Sharepoint ServersFigure 2. Antak webshell ‘error2.aspx’ used to upload post-exploitation toolsWhile we observed the threat actor uploading additional tools to the Antak webshell above, the Sharepoint server also had several other webshells installed. The additional webshells, speciﬁcally stylecs.aspx, stylecss.aspx, and test.aspx are listed in Table 1, and appear related to the China Chopper webshell. We cannot be sure all of these webshells were installed by the same actors, as multiple actors could have exploited the SharePoint server. For instance, the China Chopper-related webshells are one-line of JScript code that could be easily copied and used by multiple groups, and the Antak webshell is easily obtained from publicly accessible repositories. However, the installation of China Chopper and the uploading of Emissary Panda related custom payloads to the Antak webshell suggests they are likely related, as this threat group has used China Chopper to compromise servers in the past.Filename that ultimately runs any supplied JScript code provided to it within the HTTP request. Figure 3 shows this webshell’s code that will run supplied JScript provided in base64 encoded format within the URL within a interesting as it is the MD5 hash for the letter ‘t’, which is a known parameter for China Chopper as mentioned in the next section.Figure 3. China Chopper code found in stylecs.aspx webshell on SharePoint serverThe stylecss.aspx webshell is very similar to the stylecs.aspx, as it runs JScript provided within the accept base64 encoded JScript, but expects the JScript in cleartext that the actor would provide as URL safe text.url Panda Attacks Middle East Government Sharepoint ServersFigure 4 shows the code within stylecss.aspx, which when compared to Figure 3 above shows the lack of the base64 decoding function ‘FromBase64String’.Figure 4. China Chopper code found in stylecss.aspx webshell on SharePoint serverThe last webshell extracted from the Sharepoint server had a ﬁlename of test.aspx, which is very similar to the stylecs.aspx webshell as it runs base64 encoded JScript provided in the URL of the request. However, the test.aspx webshell uses a parameter related to the compromised organization to obtain the base64 encoded JScript that it will run and display within the browser. The test.aspx shell also includes code that sets the HTTP response status to a 404 Not Found, which will display an error page but will still run the provided JScript. Figure 5 shows the code within the test.aspx ﬁle.Figure 5. China Chopper code found in test.aspx webshell on SharePoint serverLinks to Security AdvisoriesIn April 2019, several national security organizations released alerts on CVE-2019-0604 exploitation, including the Saudi Arabian National Cyber Security Center and the Canadian Center for Cyber Security. Both of these alerts discussed campaigns in which actors used the CVE-2019-0604 to exploit SharePoint servers to install the China Chopper webshell. While we cannot conﬁrm all of the claims made in these advisories, we noticed overlaps in the webshell code hosted on the compromised SharePoint servers we observed and the webshells mentioned in these advisories.The Saudi Arabian National Cyber Security Center’s alert provided details regarding the activities carried out by the adversary. This alert also displayed the code associated with the China Chopper webshell observed in the attacks, which included Request.Item[“t”] to obtain JScript code from the ‘t’ parameter of the URL. As mentioned in the previous section, stylecs.aspx and stylecss.aspx both used a parameter of script slightly between the attack we observed, and the attack mentioned in the NCSC advisory, all while retaining the same functionality. Also, the NCSC advisory mentioned that the actors used a ﬁle name stylecss.aspx for their webshell, which is the same ﬁlename we saw associated with China Chopper.The alert from the Canadian Center for Cyber Security included the SHA256 hashes of the ﬁles associated with a ﬁle named pay.aspx. The pay.aspx ﬁle is part of the China Chopper webshell and is very similar to the stylecss.aspx webshell we discussed above, with the only major difference is the URL parameter of ‘vuiHWNVJAEF’ within the URL that pay.aspx webshell uses to obtain and run JScript. Figure 6 below shows a comparison between the stylecss.aspx and pay.aspx ﬁles.Figure 6. Comparison between stylecss.aspx webshell and pay.aspx webshell discussed in Canadian Center for Cyber Security advisoryTools UploadedDuring our research into this attack campaign, Unit 42 gathered several tools that the actor uploaded to the three webshells at the two government organizations. The chart in Figure 7 shows the same tools being uploaded to the webshells, which provided an initial linkage between the activities. One of the overlapping tools uploaded to the webshells is the legitimate cURL application, which could be used by multiple groups. The other overlapping ﬁles are tools used by the adversary to locate other systems on the network (etool.exe), check to see if they are vulnerable to CVE-2017-0144 (EternalBlue) patched in MS07-010 (checker1.exe) and pivot to them using remote execution functionality offered by a tool similar to PsExec offered by Impacket (psexec.exe). These tools are noturl Panda Attacks Middle East Government Sharepoint Serverscustom made by the adversary but still provide a medium conﬁdence linkage between the activities. We also observed the actors uploading the HyperBro backdoor to one of the webshells, as well as legitimate executables that would sideload malicious DLLs that have overlapping code associated with known Emissary Panda activity.Figure 7. Relationships between tools uploaded to the three webshells hosted on SharePoint serversThe actors uploaded 10 portable executables to the error2.aspx webshell, as seen in Table 2. The list of tools uploaded to this webshell includes legitimate applications, such as cURL and a component of Sublime Text used to sideload a malicious DLL, which we will discuss in an upcoming section. The list also includes several hack tools, such as Mimikatz for credential dumping and several compiled python scripts used to locate and compromise other systems on the local network. Lastly, we saw the actor uploading a custom backdoor called HyperBro, which has been associated with Emissary Panda operations in the past. We will provide an analysis of the HyperBro tool in an upcoming section.Filename m2.exepsexec.exes.execurl.execurl.exechecker1.exeetool.exeplug‐ in_host.exe PYTHON33.dllcurl.exeSHA256 Packed Mimikatz tool.Compiled Impacket psexecHyperBro backdoorLegitimate cURLLegitimate cURLCompiled EternalBlue checker scriptC# Tool, likely from url Legitimate Sublime Text plugin hostSideloaded DLL loaded by Sublime Text Legitimate cURL.Table 2. Unique tools uploaded to the error2.aspx webshell installed on a SharePoint serverurl Panda Attacks Middle East Government Sharepoint ServersWe saw 17 tools uploaded to the errr.aspx webshell hosted on the SharePoint server of one of the government organizations, which is in the middle of the chart in Figure 8. Table 3 shows all of the tools we observed the actor uploading to the webshell, which includes a list of tools used to dump credentials, locate, and exploit remote systems, as well as pivoting to other systems on the network.Filename smb1.exemcmd.exe checker1.exememory.exechecker.exe SMB backdoor based on Compiled zzz_exploit.py Compiled MS17-010 checker Compiled Impacket psexec.Packed Mimikatzurl SMB backdoor based on smbrelay3 pwdumpTable 3. Unique tools uploaded to the errr.aspx webshell installed on a SharePoint serverTwo of the tools, speciﬁcally the compiled zzz_exploit.py and checker.py suggest the actor would check and exploit remote systems if they were not patched for MS17-010, which patched the CVE-2017-0144 (EternalBlue) vulnerability. Also, the use of the Mimikatz and pwdump tools suggests the adversary attempts to dump credentials on compromised systems. We were able to gather the command line arguments the actor used to run the SMB backdoor smb1.exe. The following arguments shows the actor using the SMB backdoor to attempt to run password hash> winsk c:\programdata\m.batWe saw far fewer portable executable ﬁles uploaded to the second errr.aspx webshell, speciﬁcally the 3 ﬁles seen in Table 4. The ﬁles uploaded to this webshell included the same compiled python script that would scan remote systems that were vulnerable to CVE-2017-0144 (EternalBlue) that we saw uploaded to the other errr.aspx webshell. Also, we observed the actor uploading a legitimate Microsoft application that would sideload a malicious DLL, of which was very similar to the DLL sideloaded by the Sublime Text plugin host that was uploaded to the error2.aspx webshell.FilenameSHA256Descriptionurl Panda Attacks Middle East Government Sharepoint Serverschecker1.exeCreateMedi‐ fafe40f253a054be8b1c4e8d7Compiled MS17-010 checkerLegitimate CreateMedia.exe application from Microsoft’s System Center 2012 Conﬁguration Manager Sideloaded DLL loaded by CreateMedia.exeTable 4. Unique tools uploaded to the errr.aspx webshell installed on a SharePoint serverEmissary Panda Speciﬁc ToolsMany of the tools uploaded to these webshells are hacking tools that are publicly accessible and could be used by multiple threat actors. However, several of the tools uploaded to the webshells appear to be custom made and the error2.aspx webshell is a self-extracting 7-zip archive that is an example of the HyperBro backdoor. According to Kaspersky and SecureWorks research, HyperBro is a custom backdoor developed and used by Emissary Panda in their attack campaigns. This sample of HyperBro is similar to the sample discussed in Kaspersky’s research, speciﬁcally using a legitimate pcAnywhere application to sideload a DLL to decrypt, decompress and run a payload embedded within a ﬁle named ‘thumb.db’. Table 5 shows the three ﬁles associated with this HyperBro sample, which have the same ﬁle names as the self-extracting 7zip archives mentioned in Kaspersky’s and compressed DLL payload run by side‐ loaded DLLTable 5. Files associated with the HyperBro tool uploaded to webshell on SharePoint serverThe functional payload is a DLL compiled on 2019-03-11 02:23:54, which has two functionalities depending if the binary has a command line argument -daemon or -worker passed to it. The daemon functionality handles the C2 communications portion of the Trojan, which is conﬁgured to communicate with 185.12.45[.]134 over HTTPS using the following URL:hxxps://185.12.45[.]134:443/ajaxThe worker functionality acts on the data received from the C2 server, which is passed from the daemon to the worker via a named pipe called “\\.\pipe\testpipe“. The worker subjects the received data to a command handler whose available commands are listed in Table 6.Command Sub-command Description Enumerate logical storage volumes0x10url Panda Attacks Middle East Government Sharepoint Servers0x11 0x1eDelete a speciﬁed ﬁle Upload a ﬁle Download a ﬁle List contents of a folder Run an application (CreateProcessW) or script/ﬁle (ShellExecuteW) Execute command on shell Takes screenshot Runs shellcode it injects into a newly created process ‘msiexec.exe’ Kill speciﬁc process Service manager List all services and their conﬁgurations Start a speciﬁed service Stop a speciﬁed serviceTable 6. The commands available within the HyperBro tool’s command handlerUnknown Sideloaded PayloadsTable 2 and 4 above include two legitimate executables used for DLL sideloading, speciﬁcally the plugin_host.exe application for Sublime Text and the CreateMedia.exe application from Microsoft’s System Center 2012 Conﬁguration Manager. The plugin_host.exe application imports several functions from a library named python33, which is how the legitimate application sideloads the malicious DLL named PYTHON33.dll. This is the ﬁrst instance we have observed Sublime Text’s plugin host application used for sideloading. Like the plugin host application, the CreateMedia.exe application imports several functions from a library named CreateTsMediaAdm that is leveraged to load the malicious DLL named CreateTsMediaAdm.dll.The PYTHON33.dll and the CreateTsMediaAdm.dll libraries are very similar with BinDiff providing a 97% similarity with 99% conﬁdence between the two DLLs. The code diff in Figure 8 shows the decryption routine in PYTHON33.dll (right) and CreateTsMediaAdm.dll (left), both of which use an eight byte XOR key to decrypt a piece of shikata_ga_nai obfuscated shellcode. The shellcode is responsible for patching the entry point of the legitimate application to call another function in the shellcode that is responsible for loading a ﬁle with the library name with an .hlp extension (PYTHON33.hlp or CreateTsMediaAdm.hlp).url Panda Attacks Middle East Government Sharepoint ServersFigure 8. Code comparison between the sideloaded CreateTsMediaAdm.dll and PYTHON33.dll ﬁles uploaded to two webshellsUnfortunately, we do not have access to the PYTHON33.hlp or CreateTsMediaAdm.hlp ﬁles, so we do not know the ﬁnal payload loaded by either of these DLLs. However, using NCC Group’s research published in May 2018, we were able to discover code overlaps between these DLLs and a sideloaded DLL that ran the SysUpdate tool that the NCC group has associated with an Emissary Panda campaign. Figure 9 shows a code comparison between the PYTHON33.dll (right) and inicore_v2.3.30.dll (left) (SHA256: SysUpdate tool in a previous Emissary Panda campaign. The code overlaps below include the same technique to ﬁnd the entry point of the loading executable and decrypting the ﬁrst piece of shellcode used to patch the entry point.Figure 9. Code comparison between the sideloaded PYTHON33.dll uploaded to webshell and the inicore_v2.3.30.dll ﬁle sideloaded in previous Emissary Panda attacksurl Panda Attacks Middle East Government Sharepoint ServersConclusionThe Emissary Panda threat group loaded the China Chopper webshell onto SharePoint servers at two Government organizations in the Middle East, which we believe with high conﬁdence involved exploiting a remote code execution vulnerability in SharePoint tracked in CVE-2019-0604. According to Microsoft’s advisory, this vulnerability was patched on March 12, 2019 and we ﬁrst saw the webshell activity on April 1, 2019. This suggests that the threat group was able to quickly leverage a known vulnerability to exploit Internet facing servers to gain access to targeted networks.Once the adversary established a foothold on the targeted network, they used China Chopper and other webshells to upload additional tools to the SharePoint server to dump credentials, perform network reconnaissance and pivot to other systems. We believe the actors pivoted to other systems on the network using stolen credentials and by exploiting the CVE-2017-0144 (EternalBlue) vulnerability patched in MS17-010. We also observed the actors uploading legitimate tools that would sideload DLLs, speciﬁcally the Sublime Text plugin host and the Microsoft’s Create Media application, both of which we had never seen used for DLL sideloading before.Palo Alto Networks customers are protected by:The CVE-2019-0604 vulnerability is covered by our IPS signature Microsoft Sharepoint Remote Code Execution Vulnerability (55411) All illegitimate tools uploaded to the webshells are marked with malicious verdicts by WildFire AutoFocus customers can track the custom Emissary Panda payload seen uploaded to the webshell using the HyperBro tag, but can also track the hack tools using the following tags (note the hack tools are used by multiple actors and not just Emissary Panda):Palo Alto Networks has shared our ﬁndings, including ﬁle samples and indicators of compromise, in this report with our fellow Cyber Threat Alliance members. CTA members use this intelligence to rapidly deploy protections to their customers and to systematically disrupt malicious cyber actors. For more information on the Cyber Threat 