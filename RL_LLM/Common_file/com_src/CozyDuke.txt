COZYDUKETLP: WHITECONTENTSIntroduction The CozyDuke toolset Attack overviewInfection vector Attribution & linksTechnical Details Initial infection CozyDuke main dropper CozyDuke main componentOverview Command and control communication CozyDuke Terminology and Naming Appendix A | Sample hashes Appendix B: IOCs2 9This whitepaper provides an overview of CozyDuke, a set of tools used by one or more malicious actors for performing targeted attacks against high profile organizations, such as governmental organizations and other entities that work closely with these institutions.The CozyDuke toolset, which we believe has been under active development since at least 2011, consists of tools for infecting targeted hosts, establishing and maintaining backdoor access to the hosts, gathering information from them and gaining further access to other hosts inside the victim organization.Based on command and control (C&C) server information found being used by CozyDuke tools, we believe the CozyDuke toolset is used by at least one malicious actor who also uses, or at the least shares, infrastructure with actors using the known threats, MiniDuke and OnionDuke.F-SECURE LABS Whitepaper2INTRODUCTIONTarget detailsTHE COZYDUKE TOOLSET CozyDuke, as referred to in this document, is a set of tools used by one or more malicious actors for performing targeted attacks against high profile organizations. The core of the CozyDuke toolset is a modular attack platform consisting of a main component augmented by a set of additional modules implementing further functionality. The CozyDuke toolset also includes multiple kinds of droppers for infecting hosts with CozyDuke or for executing additional tools from the CozyDuke toolset. Finally, the CozyDuke toolset includes tools and scripts – some custom-written, others based on openly available tools – that are used for purposes such as gathering further information from infected hosts or for infecting additional hosts in the same target organization.ATTACK OVERVIEWInfection vector We have observed CozyDuke being spread via email, which usually contain a link to a compromised website hosting a ZIP file (although in at least one case, the file was hosted on Dropbox). These files contain an executable that, upon execution, will write to disk and execute CozyDuke, while at the same time presenting the user with a decoy to divert attention. The decoy is usually an uninteresting PDF, but we have also observed a Flash video of monkeys being presented as the decoy.We have reason to believe CozyDuke is being used to target governmental organizations and entities that work closely with such bodies.TimelineWe believe the current CozyDuke activity started at the end of January 2015. Most of the samples we have observed were compiled beginning from the end of January. However, based on comparisons of recent CozyDuke samples against older samples we have obtained dating back as far as the end of 2011, we believe CozyDuke has been under active development since at least 2011.Attribution & linksWe have strong evidence suggesting the group using CozyDuke is the same as - or at the least shares command and control infrastructure with - the group or groups using MiniDuke and OnionDuke. Firstly, a CozyDuke sample from February of 2012 attempts to contact a C&C server at nostressjob.com. This domain has previously been associated with known MiniDuke C&C infrastructure. This same infrastructure has also been seen in use by OnionDuke. Secondly, we also have reason to believe CozyDuke has, in some instances, downloaded and executed droppers for DLL files reminiscent of OnionDuke. Specifically, the DLLs dropped have used file and export names also used by OnionDuke. Additionally, the strings in the DLLs have been encrypted using the same algorithm used by OnionDuke. This link is, however, not as conclusive as the infrastructure overlap.FIGURE 1: C&C INFRASTRUCTURE CONNECTIONS BETWEEN COZYDUKE, MINIDUKE AND ONIONDUKECozyDukeMiniDukeOnionDukenostressjob.comgrouptumbler.comoverpict.compostmaster@grouptumbler.comJohn KasaiTECHNICAL DETAILSINITIAL INFECTION Infection with CozyDuke begins with the victim receiving an email containing a link to a ZIP file. This ZIP file will contain a single executable, usually a self-extracting RAR archive. Upon execution, it will write two files to disk. The first file is a decoy. The decoy has usually been a PDF document but Flash videos have also been observed in some cases. The second file extracted from the archive is a CozyDuke dropper. This dropper will then proceed to write to disk the main CozyDuke components as well as an encrypted configuration file used by CozyDuke.FIGURE 2: THE COZYDUKE INFECTION FLOWMalicious linkZIP fileDownloadsZIP fileExtractsSelf-extractingRARExtractsExtractsCozyDuke main dropperDecoy document3COZYDUKE MAIN DROPPER The main CozyDuke dropper, used for infecting hosts with CozyDuke, begins by checking whether the victim has an anti-virus product installed. Should an installed product be found, it will be compared to a predetermined list of product names. If the installed product matches a name on the list, the dropper will immediately exit. Newer versions of the dropper will perform additional checks to ensure the dropper is not being executed inside a virtual machine or a known malware analysis sandbox environment. Should either of these checks fail, the dropper will likewise exit immediately.Next, the dropper will find and decrypt encrypted data stored as two PE resources embedded in the executable. These resources are named with the hexadecimal identifiers 0x000A and 0x000B. Both resources are structured similarily. They begin with a four-byte value specifying the length of the included decryption key. This decryption key immediately follows the length field. Finally, the rest of the resource is the encrypted payload. The encryption used is a simple XOR with a rotating key.The first resource, 0x000A, contains as its payload a Microsoft cabinet archive. This archive contains the CozyDuke components that the dropper will later install on the victim system. The second resource, 0x000B, contains as its payload an XML file with instructions for the dropper on where to install the dropped components and what to name them.The dropper will then proceed to write the CozyDuke components to the specified location. The dropper will additionally copy the system file rundll32.exe to the install location for CozyDuke. This file will also use a name specified in the droppers configuration file. Finally, the dropper will use the copy of rundll32.exe to load and execute the CozyDuke main component.EncryptedconfigurationfileCozyDuke components4COZYDUKE MAIN COMPONENTOverview The main component of CozyDuke is a DLL file responsible for orchestrating all of CozyDuke’s activity on a victim machine. The main component is executed by the CozyDuke dropper using a copy of rundll32.exe. The entrypoint function varies, but is always specified in the dropper configuration.The most important functionalities offered by the main component are establishment of persistence, gathering of basic system information, communication with the C&C server and the execution of additional tasks, modules or executables as commanded by the C&C server.PersistenceCozyDuke may use multiple techniques for establishing persistence; the following is one technique used. Firstly, CozyDuke may set itself to be executed at system startup by adding a registry value under any of the following registry keys:• HKLM\Software\Microsoft\Windows\CurrentVersion\Run\• HKCU\Software\Microsoft\Windows\CurrentVersion\Run\• HKLM\Software\Microsoft\Windows\ CurrentVersion\Policies\Explorer\Run • HKCU\Software\Microsoft\Windows\ CurrentVersion\Policies\Explorer\RunThe name of the registry value will usually be the filename, (without the extension) of the CozyDuke main component.CozyDuke may also register itself as a Windows service or scheduled task. Additionally, CozyDuke may utilize a technique known as COM-object hijacking [1] to establish persistence. To achieve this, CozyDuke will “hijack” the registry entries for the COM object “SharedTaskScheduler”. CozyDuke will modify the registry entries in such a way that any loading of the SharedTaskScheduler COM object will first load a special CozyDuke module that will ensure CozyDuke stays active on the victim host.Configuration dataThe configuration data for CozyDuke is stored as a separate RC4-encrypted file that is written to disk by the CozyDuke dropper during initial infection. The name of the encrypted configuration file on disk has been racss. dat in all of the observed cases. The decrypted file is data has been encrypted with the RC4 key B5 78 62 52 98 3E 24 D7 3B C6 EE 7C B9 ED 91 62. In CozyDuke samples from July of 2014, the RC4 key has been embedded in the encrypted configuration file. In this case, the encrypted configuration file will begin with a 4-byte value specifying the length of the included RC4 key. This will be followed by the actual key. Finally, the rest of the file will be the actual configuration data.Command and control communicationCozyDuke’s main method of communicating with its command and control server is using either HTTP or HTTPS. The method of communication, as well as the address to connect to, are specified in CozyDuke’s configuration data. In the cases we have observed, the configuration data for any single CozyDuke instance has included the details of either one or two C&C servers. Listed above are details of known CozyDuke C&C servers. We believe all of the ones listed are compromised servers.In addition to its main communication method, CozyDuke also features the ability to use Twitter as a backup C&C channel. In cases where CozyDuke utilizes this functionality, the twitter account to be used will be specified in CozyDuke’s configuration data. We have only observed two samples where a backup Twitter account was actually specified in the configuration data. These accounts were @US2515 and @monkey_drive.TasksCozyDuke’s primary purpose is the execution of tasks. These tasks usually involve the execution of modules or executables providing additional functionality. The main difference between the two is that modules are DLL files loaded in memory by the CozyDuke main component, whereas executables are PE executable files that CozyDuke will write to disk and execute.For the purpose of managing tasks, the main component of CozyDuke implements 6 commands that the C&C server can specify. These commands are briefly described in Table 2 (overleaf).REFERENCEI. GData; Paul Rascagneres; COM Object hijacking: the discreet way of persistence: An Analysis of a new persistence mechanism in the wild;published 30.10.2014; url 2: 6 COZYDUKE C&C SERVER COMMANDSCommand Modify task or configuration Upload data Download dataThe following chapter, CozyDuke Tasks, provides further information on the tasks CozyDuke has been observed executing.COZYDUKE TASKSBased on samples obtained from our own collections and generously shared to us by a trusted source, we have been able to identify some of the tasks executed recently by CozyDuke. These tasks can be divided into two categories. The first consists of CozyDuke modules which are DLL files loaded in memory by the main component of CozyDuke for the purposes of extending CozyDuke’s functionality. The second category consists of PE executable files that CozyDuke will write to disk and execute on the infected host. These executables are usually droppers similar to those used to infect a host with CozyDuke. In this case, however, instead of dropping CozyDuke, the executables may drop other executables, scripts or DLLs. Once executed by CozyDuke, these executables function independently of CozyDuke’s main component.ModulesListed below are the modules we have observed being used:TABLE 3: COZYDUKE MODULESModule Type Can be used to execute arbitrary commands by invoking C:\ Windows\System32\cmd.exe Will attempt to harvest stored credentials from the victim Will attempt to harvest credentials stored on the victim host that are used as part of Windows NTLM user authentication Will attempt to gather comprehensive information on the victim host’s configuration Will take a screenshot of the victim hostExecutablesWe have observed executables executed by CozyDuke for the following purposes:• Dropping and executing scripts for collectinginformation and credentials from the victim organization’s Active Directory environment• Dropping and executing scripts for furtherpenetrating the victim organization with the help of commonly available tools such as Mimikatz and PSExec• Dropping and executing additional malware withthe same file and export naming conventions as OnionDuke and the same string encryption algorithm as OnionDukeThese executables will implement their own methods of C&C communication and data exfiltration. In many cases, the scripts utilized Microsoft OneDrive accounts for data transfer.COZYDUKE EVOLUTION The earliest CozyDuke sample we have observed so far was compiled on the 29th of December, 2011. The sample in question was not an actual CozyDuke main component, but a CozyDuke module. The earliest main component we observed was compiled on the 29th of February, 2012. The main component in question stores its strings and configuration in an unencrypted form. Additionally, the configuration is stored embedded in the binary, not as a separate XML file in the manner of newer CozyDuke versions. Even this oldest main component does however use XML for other purposes via the open-source Pugi-XML library.The next CozyDuke main component we observed was compiled on the 30th of November, 2012. By then, the authors had switched to encrypting the strings and the configuration. However, the configuration was still stored embedded in the binary. Design-wise, this sample is a bit of an outlier. Instead of being a DLL file, the main component is actually an EXE that, in addition to the configuration, embeds multiple DLLs that provide additional functionality to the main component. Apart from the different design, functionally the main component is very similar to other CozyDuke main components. It is possible the authors of CozyDuke were trying out a new design, but eventually decided to go back to the original.The next CozyDuke main component we observed, compiled on the 2nd of July, 2014, is again a DLL file. By now, the authors of CozyDuke had switched fromFIGURE 4: TIMELINE OF COZYDUKE EVOLUTION7Executable CozyDuke main component30/11/12426KB EXEEncrypted strings29/12/11Oldest known CozyDuke moduleUnencrypted stringsEncrypted embedded configuration26/2/15CozyDuke main component820KB DLLEncrypted stringsEncrypted external configuration2012201320142015Oldest known CozyDuke main module29/2/12266KB DLLUnencrypted stringsUnencrypted embedded configurationan embedded configuration to the external XML- formatted configuration file seen today. We have yet to observe samples from 2013, but we believe CozyDuke to have been under active development as well during that year. Between 2012 and 2014, the authors of CozyDuke appear to have performed significant refactoring of the CozyDuke codebase, even though functionally the differences are smaller. Examples of this refactoring include for instance the switch from using the Pugi-XML library to using Microsoft’s MSXML 3.0 for XML-related functionality.The latest CozyDuke main component we observed was compiled on the 26th of February, 2015. The core functionality of the latest sample is very similar to the previous sample from July of 2014, but the authors of CozyDuke have implemented a lot of additional functionality, as the increase in size from 279KB to 820KB would also suggest.2/7/14CozyDuke main component279KB DLLEncrypted stringsEncrypted external configurationCOZYDUKE TERMINOLOGY AND NAMING Based on logging strings, variable naming and PDB strings found in CozyDuke samples, we observed the following:• The internal name for CozyDuke is “Agent” • The CozyDuke main component’s functionality•revolves around the execution of “tasks” that are often associated with “modules” It is possible that the name “Agent” is not the original internal name of CozyDuke and that the name was changed sometime in 2011 with the original project name being “Agent_NextGen”• Sometime in 2011, CozyDuke was identifiedinternally as being version 3PDB strings found in early CozyDuke samples are listed in Table 4 (below).TABLE 4: COZYDUKE PDB STRINGSCompilation timestamp PDB string Mon Feb 13 13:07:04 2012 (UTC) Wed Dec 28 13:23:04 2011 (UTC) Thu Jan 26 13:57:00 2012 (UTC)E:\Visual Studio 2010\Projects\Agent_NextGen\Agent2011v3\Agent2011\Agent\tasks\bin\ GetPasswords\exe\GetPasswords.pdb screeshots.pdb8APPENDIX A | SAMPLE HASHES • Java/1.8.0_25 • Java/1.8.0_26 • • Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0;iTunes/12.0.1 (Windows; N)rv:11.0) like Gecko• Mozilla/5.0 (Windows NT 6.1; WOW64; rv:32.0)Gecko/20100101 Firefox/32.0• Mozilla/5.0 (Windows NT 6.1; WOW64)AppleWebKit/537.36 (KHTML, like Gecko) Chrome /34.0.1847.137 Safari/537.36Mutexes • AgentMutexAPPENDIX B: IOCSFilenames(Note: we believe many of these to be borrowed from legitimate files)agent_wininet_dl.exe• • coinst_13.152.dll 