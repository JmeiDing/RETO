Malware WinDealer used by LuoYu Attack Groupblogs.jpcert.or.jp/en/2021/10/windealer.html増渕 維摩(Yuma Masubuchi)During JSAC2021 on 28 January 2021, there was a presentation about an attack group LuoYu, which targets Korean and Japanese organisations since 2014 [1][2]. Recently, JPCERT/CC came across malware WinDealer used by this group. This article introduces some findings of our analysis.Malware WinDealer overviewWinDealer steals information of an infected PC and sends it to a C2 server as described in Figure 1.1/17Figure 1： Malware WinDealer behaviour overviewOnce launched, the malware reads configuration from a file under C:\ProgramData and loads a DLL module on its memory. It steals information about the victim PC, network configuration and SNS applications etc. and saves them in a file with an “.a” extension under %TEMP%, which is then sent to a C2 server. The following points will be described in the next sections.Read configuration Communicate with C2 servers Process and send stolen data Functions of modules loaded on memoryRead configurationThe malware stores its configuration in several folders under C:\ProgramData and reads it when executed. The contents are encoded based on XOR with its key value “b6a7%7486”. Please refer to Appendix A for the configuration file path and its contents. Figure 2 shows a function to decode configuration.2/17Figure 2：Function to decode a file storing configurationCommunicate with C2 serversIf the following configuration files exist in the designated folder, WinDealer loads the C2 server information from them and starts communicating.C:\ProgramData\ad5f82e8 C:\ProgramData\1c76cbfe C:\ProgramData\9c3b62943/17If no such file exists, WinDealer communicates to a random IP address in one of the following ranges (port 6999/UDP or 55556/TCP). It switches to an IP address in the other AES key with RSA algorithm and sends to a C2 server. Information stolen from a victim PC is encrypted with this AES key and sent to a C2 server at a certain interval. After that, C2 server sends a command to the victim PC. The malware executes it and sends the result to the C2 server after encryption. Besides the data exchange, the malware also communicates with domains such as www[.]microsoftcom (non-existent at the moment) and icanhazip[.]com.Figure 3: Communication flow with a C2 serverFigure 4 describes the communication contents when delivering an AES key. AES key and its CRC32 checksum value are encrypted with RSA1024bit public key. The public key is hardcoded in the sample, which is also used for other samples as well.4/17UDP headerVictim PC identifierValue generated from configuration file + fixed valueFixed valueAES key + RSA-encrypted data of AES key’s CRC32 valueFigure 4： Example of contents sent with AES keyFrom the second round of communication and onwards, data is encrypted in AES128bit ECB mode based on the AES key which was dynamically generated during the initial communication. Please refer to Appendix B for the details of data format.Process and send stolen dataWinDealer processes a series of stolen data as “.a” file in a folder under %TEMP%, encrypts it with AES and send it to a C2 server. The flow of event is illustrated in Figure 5. The modules steal and process the data, while WinDealer itself monitors the files under %TEMP%, encrypts the file and sends it to a C2 server.5/17Figure 5：Flow of events by WinDealer and modulesA part of the code for generating “.a” file by a module is as follows (Figure 6):Figure 6： DLL module’s code to generate “.a” file6/17The stolen data is first stored in a file with an “.t” extension, which is then renamed to “.a”. The series of data is stored in different directories based on the data category, and they are taken out when “.a” file is created. Please refer to Appendix E for the details of each directory. Before writing and reading the files, the data is encoded/decoded by XOR-based function with its key value “YYYY” as in Figure 7.Figure 7：A function for XOR-based encoding when accessing “.a” fileFunctions of modules loaded on memoryOnce launched, WinDealer loads a DLL module in a PE format (encoded in the sample) on the memory and executes it (Figure 8).7/17Byte string to searchUsed for XOR-based decode functionEncoded PE dataFigure 8： Encoded module dataThe malware obtains its file path, searches for a byte string “0xFF3456FF00” and extracts data from its offset 0xE. Using its offset 0x4 value and a XOR-based decode routine (Figure 9), a DLL module is loaded on the memory and then executed.8/17Figure 9： Decoding moduleThe loaded DLL module is named as “MozillaDll.dll”. There are 3 Export functions as follows:AutoGetSystemInfo: Steal data GetConfigInfo: Set configuration partInitOpt: Set commandsThe loaded DLL module monitors the below items, saves related items in a separate file and obtains them to send out to a C2 server.Files stored in a USB memory Files under Documents, desktop and recycle bin Files under folders related to SNS applicationsPlease see Appendix D for the details of commands that C2 server sends and its contents.In closingBesides WinDealer, it has been confirmed that LuoYu uses other kinds of malware that operate in various platforms. We will report if we observe a new type of malware. For your reference, SHA256 hash values of similar samples are listed in Appendix F.- Yuma Masubuchi (Translated by Yukako Uchida)Reference[1] “LuoYu” The eavesdropper sneaking in multiple platforms url Japan Security Analyst Conference 2021 -3rd Track- url A WinDealer configurationFile pathString in malware ContentsC:\ProgramData\923b5fd7remark-9/17C:\ProgramData\ad5f82e8remotedomainDomain nameC:\ProgramData\8fe4c114password-C:\ProgramData\1c76cbferemoteipC2 server IPC:\ProgramData\9c3b6294reverseipC2 server IP (reconfigured)C:\ProgramData\789406d0-Result of connection to a dummy hostC:\ProgramData\c25549feotherinfo-C:\ProgramData\f46d373bC:\ProgramData\windows.infC:\ProgramData\Destro---Created when launched-Name information to register in run keyTable A：List of configurationAppendix B WinDealer Contents of data exchangedOffset Length (byte)Contents0x000x040x084440x0C 10x91DA81060x439FC7CEVictim PC identifierGenerated based on the contents of a configuration file "789406d0"0x0D 30x00140010/170x10128AES key + RSA-encrypted data of AES key’s CRC32 valueTable B-1： Format of data sent for first communicationOffset Length (byte)Contents0x000x040x084440x0C 10x0D 10x0E0x100x110x120x13----211111-10x91DA81060x439FC7CEVictim PC identifierGenerated based on the contents of a configuration file "789406d0"Type0x1400Length0x6remark lengthremark0x3password lengthpassword0x511/17---1--otherinfo lengthotherinfoSystem informationTable B-2：Format of data sent for second communication onwardsOffset Length (byte)Contents0x000x04440x0D 10x100x120x140x1622220x91DA81060x439FC7CECommandscommand data lengthUnusedUnusedUnused0x18Command data length Command dataTable B-3：Format of data receivedAppendix C WinDealer List of commandsValue Parameter string*0x06content-length: 2Contentsuninstall12/170x09content-length, filename, timeDelete files under %TEMP%0xCfilename, flg0x1Fspeed0x2D filepathCreateProcessConfigure Sleep timeObtain contents of selected file0x50filename, md5Delete selected file0x51filepos,filename, filelen, block, md5Write on selected file0x5A datastate0x5B -0x5C list0x5D yes0x5E otherinfo0x60headsign, 1, 20x61reverseip0x630x64--Write on "C:\ProgramData\windows.inf"Perpetuation settings for registriesPerpetuation after process checkSet a value to SType of {HKCU}\\Softwaware\MicrosoftWrite on "c25549fe"Write on "789406d0"Write on "9c3b6294"Obtain configurationRead time0x66remoteip, remark, passwordWrite on configuration files0x67sessionid:-13/170x8F Hkey, subkey, valuename, classesroot,currentuser, localmachine, users, currentconfigExecute RegQueryValue0xAA pname0xAB -0xAD -Screen captureConfiguration on screen captureConfiguration on screen captureTable C：List of commands*Parameter string: These strings are parsed from the received command and used as a command parameterAppendix D List of commands of loaded modulesValue Parameter string*Contents0x02-Related to screen capture0x03bootdir, filetypeRelated to folder/files0x05filename, monitortype, begpos, blockSend files0x07-0x0A -0x0D -Obtain drive informationConfigure for lnk filesExecute commands 0xC0, 0xC5, 0xC3, 0xC1, 0xC2, 0xC4, 0xC60x12freq, storetm, quality, typeConfigure parameter0x1E srhdir, srhcont, srhnum, sessid-14/170x28filenameObtain file information0x29filefilter, settype, usbfilter, checkdirfilterConfigure parameter for monitoring0x2A monitortype, monitorvalueObtain files of monitoring results0x2B -0x30--Write contents such as "c:\windows", "c:\program files" on "~BF24"0x32freq, storetmConfigure parameter0x3E fileCreate jpeg file under %TEMP%0x65filename, fileoffsetObtain contents from selected files and offsets0x69filename, delete, yesDelete selected files0x7A cmdtype, command: ,reset,downfile, getmypath, dealmd5Execute cmd.exe0x7B session, command, reset, downfile, exit, getmypathExecute remote shell0xC00xC10xC20xC30xC4-----Write list of processes on "28e4-20a6acec"Write list of applications on "28e4-20a6acec"Write keyboard information on "28e4- 20a6acec"Write SNS-related registry contents on "28e4- 20a6acec"Write configuration of Skype, QQ, WeChat and wangwang on "28e4-20a6acec"15/170xC50xC6--Write MAC address etc. on "28e4-20a6acec"Write network configuration on "28e4- 20a6acec"Table D：List of commands*Parameter string: These strings are parsed from the received command and used as a 