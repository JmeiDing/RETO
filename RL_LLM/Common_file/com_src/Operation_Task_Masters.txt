in the digital economy ageptsecurity.comIntroduction In the course of cyberincident investigations and threat analysis research, Positive Technologies experts have identified activity by a criminal group whose aims include theft of confidential documents and espionage. In this report, we will pay a close look at the tools, techniques, and procedures employed by the group as well as share indi- cators of compromise for detecting attacks.Objectives The main objective of the group is to steal confidential information. The attackers at- tempt to burrow into corporate information systems for extended periods and obtain access to key servers, executive workstations, and business-critical systems.At one of the attacked companies, the earliest traces of the group's presence on infra- structure dated to 2010. Since the group had obtained full control of some servers and workstations by that time, the initial breach must have occurred much earlier.Most of the attacked companies relate to manufacturing and industry. In total we are aware of compromise of over 30 companies and organizations in various sectors, including: Manufacturing and industry  Science and technology  Systems integration Software development  Geology  Transport and logistics  Real estate  ConstructionThe group attacked companies in a number of countries. A significant number of their targets were located in Russia and the CIS.2Attribution Identified by the PT Expert Security Center in 2018, the group used an unusual method for lateral movement on network infrastructure: creation of tasks in the Task Scheduler. As a result, the group has been dubbed TaskMasters.The GitHub code of the ASPXSpy2014 web shell, which was used in the attack process, contains references to Chinese developers (see Figure 1). However, the version we dis- covered instead contains a reference to google.ru.Figure 1. ASPXSpy: public version vs. version used in attackThe requests sent to the web shells contained IP addresses belonging to a hosting pro- vider and printing house in Eastern Europe. However, the event log of the proxy server at one of the attacked organizations captured the moment when the attackers switched to uted on Chinese-language web forums.3Figure 3. WinRAR license key published on Chinese-language forumsOne of the tasks made use of the domain Brengkolang.com, which had been regis- tered through a Chinese registrar.Figure 4. Information about Brengkolang.comMany of the utilities contain error messages and other debugging information in bro- ken English. This would be consistent with English being a second language for the developers.4Figure 5. Error messages written in broken EnglishIn addition, some of the attackers' self-developed utilities contain the string "by AiMi". This artifact is present both in client backdoors and server components.Figure 6. Reference to the developers in script interfaceIn a previous report, we noted that demand for malware development on the darkweb significantly exceeds supply.1 As a result, malware is increasingly available to anyone willing to pay.Growing malware supply has pushed cybercriminals to use ready-made tools, which significantly complicate attack attribution.1 ptsecurity.com/ww-en/analytics/darkweb-2018/5If different cybercriminals use the same services, they could be mistakenly thought to be in the same group. The same problem applies to determining the attackers' country. Code comments in any particular language only mean that the malware was created by a speaker of that language, who may have sold it afterward. Phishing messages, which may have been written sloppily, are also problematic for attribution. The bottom line is that surefire identification is possible only when attackers use exclusive exploits and malware.Methods The overall attack vector is rather traditional. After reaching the local network, the at- tackers study the infrastructure, exploit system vulnerabilities (such as CVE-2017-0176), and then download a particular toolkit to compromised hosts and unpack it (we will call the toolkit TaskMasters, the same name as for the group itself). With this toolkit, they search for, copy, and archive files of interest. The files are then sent to command and control (C2) servers.For lateral movement on the network, the attackers run system commands on remote hosts via the AtNow utility, which enables running software and commands at preset intervals of time. For managing hosts, they use small backdoors, which are used to connect to C2 servers. Backup communication methods exist as well, in the form of web shells on external resources (such as an Exchange server).STAGE 1. Attack on workstations Payoff for attackers:  User credentialsSTAGE 2. Attack on domain controllers Payoff for attackers: Privileged account credentials Ease and stealth in lateral movement   User credentialsSTAGE 3. Attack on file, database, and application servers Payoff for attackers: Sensitive documents  User credentialsSTAGE 4. Attack on servers and workstations of executives, IT and security staff Payoff for attackers: Full compromise of network Knowledge of infrastructure and cybersecurity solutions in place  User credentialsFigure 7. Attack scheme6The group uses Dynamic DNS infrastructure for its domains. It also makes active use of supply chain attacks.To scan the network and compromise systems, the attackers use both software available freely online (such as NBTScan, pwdump, and Mimikatz) and custom-developed utilities. At this point, we will proceed to describe the TaskMasters arsenal in more detail.Tools The following tables are a compilation of information about software used by the group. Utilities developed by the group itself have been listed in a separate table.Table 1. Custom-developed TaskMasters softwareDESCRIPTIONMain malware for remote command execution on infected hosts. Key features: Running commands on a host in the form cmd.exe /c <command> with function call CreateProcessA and sending of results to the C2 server Sending of attacker-specified files to server  Downloading of files from serverUtility for viewing files on accessible remote network resources with username and password.Utility for copying files by means of direct disk access. Can even copy files that are blocked by other processes.Utility for installing and removing services. Alternative to the system utility sc.exe.Utility for extracting emails from Personal Storage Table (*.pst) files, which are used by Microsoft Exchange Client, Windows Messaging, and Microsoft Outlook.NAMERemShellGetDirFCopyService utilityPst utilityEnumLogonSession utilityUtility for listing active user sessions on a local host.TimestampChangeHTTP pingUtility for changing the timestamp of the indicated file to equal the timestamp of %WINDIR%\System32\kernel32.dll. Designed to complicate investigators' search for forensic artifacts.Utility for checking the HTTP accessibility of a resource from remote computers. Interfaces with remote machines via scheduled tasks and shared network resourcesLoggedOnUsersUtility for getting the list of users who are currently logged in.Redirect portsUtility for redirecting network connections from a certain host and TCP port combination to a different one. In effect, a primitive proxy server.HostUserListUtility for enumerating users on a network host.TFSZBWIPCS404-input-shell (web shell)Utility for uploading files to a C2 server.Utility for capturing network traffic. Records all captured traffic in PCAP format.Utility for copying a specified file to a remote shared network resource.Web shells for running commands based on .NET. Running system commands  Downloading files to server  Uploading files from server  Authenticating with MD5 hash (detailed in the text of this report)7NAME*AtNowpwdumpgsecdumpEXAMPLES OF USE*APT18 FIN5DESCRIPTIONTable 2. Publicly available softwareUtility for creating local or remote scheduled tasks, which run within 70 seconds of being scheduled. Main utility used by the attackers for lateral movement. Part of the utility suite from NirSoft.These utilities are intended for extracting the LM or NTLM hashes of account passwords in Windows (SAM). Most of the code for these programs is open-source and freely available.APT1 TG-3390 (APT27)Utility for extracting password hashes from SAM and Active Directory. Freely distributed.HTranAPT27Utility for redirecting traffic from the specified port of the current host to a particular port on another host. In effect, acts as a SOCKS proxy server. Freely distributed.NBTScanTG-3390Scanner for detecting openly accessible NetBIOS name servers on the local TCP/IP network, which allows finding accessible network shares on hosts.RARASPXSpy2014 (web shell)APT1 TG-3390TG-3390APT1 (web shell)WinRAR. Used for packing, both to stage collected information on the target infrastructure and to send this information to the attackers' server.Capabilities of this feature-rich web shell include: Authentication with MD5 hash Running of system commands Running of WMI queries Self-removal Process killingWeb shell is detailed in the text of this report. Copying of file timestamps  Enumeration of processes  Enumeration of services  Scanning of network ports  Running of SQL queries  Uploading files from server  Downloading files to serverUtility for extracting authentication information from memory on Windows operating systems: plaintext passwords, password hashes, Windows PIN codes, and Kerberos tickets. Also can perform attacks: pass- the-hash, pass-the-ticket, and others. Freely distributed.Utility for creating process dumps. Part of Sysinternals Tools.Utility for remote command-line management of network hosts. Part of Sysinternals Tools.Utility for viewing a list of processes currently running in the operating system. Part of Sysinternals Tools.Utility for extracting data from *.dbx files, which store Outlook Express folders. Alternative build of dbx_utils source code from the Lucian Wischik utility suite.Program for scanning open ports at a specified IP address or range of IP addresses. Multithreaded scanning.A web shell that acts as a SOCKS proxy server and complements reDuh, which is used for TCP tunneling over HTTP.jsp File browser (web shell)A Java Server Pages web shell for performing simple file operations, such as copying, creating, and delet- ing files. Also supports downloading files as a *.zip archive.* Links to publicly available software and examples of use are given in the listing on page 20.8Technical detailsRemShellThe main software used by the TaskMasters group, RemShell controls infected hosts and consists of two components: RemShell Downloader (downloader)  RemShell (main functionality)Let's look closely at each component.RemShell DownloaderThis component delivers the main payload to the target system. A flowchart illustrating the downloader's operation is given in Figure 8.The downloader accesses an HTML page (the address is set in the downloader's code) and reads the Attribute value of the html tag (see Figure 9). This value is then decrypted. Depending on the value, the downloader either switches to sleep mode or saves the PE file to disk and launches it. The PE file is the payload, containing the main RemShell Trojan.Figure 8. RemShell Downloader flowchartFigure 9. Example HTML fileThe downloader contains a string used for comparison purposes, in order to search for the fragment in the HTML source with the Attribute value (see Figure 10).Figure 10. Substring in HTML file for search purposes9We also analyzed the payload encryption process. It consists of four stages:1. Key preparation (RC4KeyPrepare), with each byte XORed against a constant string. 2. Base64 encoding. 3. RC4 encryption. 4. ZLIB compression.In the downloader code, inside the entry for the RC4 key used for decryption, our ex- perts uncovered friendly wishes from the developers (see Figure 11).Figure 11. RC4 keyRemShellAs the main malware used to control infected hosts, RemShell offers attackers several capabilities:1. Remote control via cmd shell. 2. Downloading of files to remote host. 3. Uploading of files from remote host to C2 server.Note that the malware has two C2 servers. The first C2 server acts as a middleman or proxy that, when requested by the malware, provides the address of the main C2 server. The first C2 server can also send the command to hand off the malware to the other C2 proxy server. Since all changes occur in memory, after a restart the malware will contact the C2 proxy server whose address is indicated in the malware code. Note that the malware will stop working until it receives the address of the main C2 server (see Figure 12).Figure 12. Handoff from the first C2 server to the main C2 serverWe found a number of variations of the malware. For example, some variations lacked the command to upload files from a host to the C2 server. In these cases, the attackers used a custom-developed utility to exfiltrate files. Other variations had commands added to enu- merate running processes and kill processes by PID (process ID).10Configuration data (such as address of the C2 proxy server, port, and user agent) was en- crypted with RC4 and specified in the form of constants in the malware code (see Figure 13).Figure 13. Generation of the key used for network interactionand decryption of configuration dataTraffic between C2 servers and the malware was encrypted with RC4 and additionally encoded with Base64. The RC4 key is generated by calculating an MD5 hash from a constant string. The output of commands from the C2 server is sent as an HTTP request to a URL with the atypical prefix "1111".The malware also contains a heartbeat mechanism: at random intervals, the malware sends an HTTP request that contains the output of the hostname command to the specified URL address, with the atypical prefix "0000" (see Figure 14).Figure 14. Heartbeat11C2 serversThe server for managing malware infections consists of console ELF files. Figure 15 shows the main loop from the server code, with original function names intact.Figure 15. Main loop of TaskMasters server codeThe interface for server management is implemented as a web shell, supporting the commands listed in Figure 16.Figure 16. Reference list of server commandsThe server keeps a detailed log of all commands sent to the remote host. The log files are stored on disk in encrypted form. Encryption of the log files uses the RC4 algorithm (see Figure 17).Figure 17. Writing to log file12404-Input-shell web shellThe window for logging in to the web shell is disguised as a standard IIS 404 error page. To access the command line and run commands, the attacker must first enter the pass- word. The field for entering the password is hidden: viewing it requires double-clicking the word Back.Figure 18. Error 404 web shell (with hidden password entry form)Listing 1. Event code for displaying the password entry fieldClick the <a href="#" ondblclick ="history_back()">Back</a> button to try another link.</li>13Figure 19. Error 404 web shell (with visible password entry form)The attackers logged in with the password 0p;/9ol., which is the same password they used for encrypting archives. The web shell code contains the MD5 hash of this password.Listing 2. Code of the Error 404 web shell<script runat="server">protected void Check(object sender,EventArgs e) {if(FormsAuthentication.HashPasswordForStoringInConfigFile(Request. Visible=false;return;}table1.Visible=false;Info.Visible=true;} GetInfo(object sender,EventArgs e){Response.Write(Path.Combine(Server.MapPath(""), Path.GetFileName(Lable_File.Value)));try{if(Lable_File.PostedFile.FileName=="") {Response.Write("No file to upload");}else{Lable_File.PostedFile.SaveAs(Path. Combine(Server.MapPath(" "), Path.GetFileName(Lable_File.Value)));Response.Write(" upload success!");}}catch(Exception ex){if(ex.InnerException==null){Response.Write(ex. Message);}else{Response.Write(ex.ToString());}}}</script>protected voidIn our investigations, we uncovered a total of three modifications of this web shell with differing functionality, as illustrated in the following screenshots.Figure 20. Error 404 web shell (modification only for uploading files from server)Figure 21. Error 404 web shell (modification only for running OS commands)14Conclusion Our findings confirm that cyberthreats are a real danger for companies across the board, not just banks and financial institutions. In cases such as those outlined here, attackers are motivated not by financial gain, but by access to data and control of information flows.The priority of attackers in these espionage campaigns was long-term stealth on target infrastructure. Victims are usually unaware that they have been attacked. They tend to not have protection systems or skilled security professionals in place, and because there are no "red flags" indicating compromise (theft of funds, encrypted hard disks, ransom demands, or clear losses to the business), the cyberincident remains unnoticed.To determine how to protect systems—and most importantly, from whom—incident investigators must carefully consider and analyze the techniques used. When gauging potency, it can be more useful to look at attackers' mistakes (within the target infra- structure) than at their toolkit. Unfortunately, not all companies are prepared in case of a hack or major incident to perform an investigation and round up all artifacts, re- construct the kill chain, and analyze the actions of attackers on infrastructure. But in the hands of a highly qualified team with the capacity to make recommendations for infrastructure protection, incident investigation can have a two-fold benefit: the com- pany's level of protection is improved and future attackers will have to contend with a hardened target environment.15Indicators of compromise 16.mp3.exe 2018-04-223-13-04_a.exe 2018-04-223-13-30_a.exe AA_v3.1.exe At12.jobAt13.job fcopy.fntfcxl.Dll krtf_.Dlll2cx.fnt pdx.datpdx.fnt svohost_1_.exesysinit.dll accountside.zyns.com anata.ooguy.com associates.ddns.us atlasdo.epac.to atlasdo1.epac.to automatically1101.dynu.com bestcash.accesscam.org billing.lflinkup.org bluetraveller.onmypc.net carrot.compress.to clientlogin.jkub.com dbcript.yourtrap.com economic.itsaol.com elp.linkpc.net elp.ns01.us finaldog.giize.com foundbox.zyns.com francegod.mefound.com freestylepannel.dynu.com funsclub.wikaba.com funstraction.ignorelist.comfwiffer.jkub.com game.changeip.org greatland.yourtrap.com happynewlife.mrface.com jailout.sexidude.com jfgi.onedumb.com konwleg.mypop3.net looseup.mywire.org mail3.5wya.com menzu4.25u.com mindme.2waky.com mormorsale.com net17.ns01.info net17.ns1.name newhouse.fartit.com nomotion.mrface.com novnitie.com ns02.ns02.us openfire.https443.net openfire.zzux.com pellguide.myddns.rocks provisioned.kozow.com quatermeter.strangled.net sb1.ns01.biz sb1.ns01.info selfsegmentation.zzux.com sellbase.loseyourip.com slogicroot.com software.zyns.com sound.my03.com spartacus.ezua.com sssbbb.25u.com sssbbb.ddns.me.uk sssbbb.ddns.uk standpay.dynu.com statcountone.dynu.com tec.ns02.us twoseccends.onedumb.com whathelp.mywire.org whogetthis.ddnsfree.com zerofocus.toythieves.com19Software links and references Publicly available software: names AtNow v1.1: url PWDump: url GsecDump: url HTran: url NBTScan: url RAR: url ASPXSpy2014 (web shell): url Mimikatz: url ProcDump: url PSExec: url PSList: url DbxDump Utility: url PortScan: url reGeorg (web shell): url isp File browser (web shell): url available software: examples of use APT18: url where-you-at-indicators-of-lateral-movement-using-at-exe-on-windows-7-systems/ АРТ29: url АРТ32: url RTM: url Cobalt Group: url АРТ1: url FIN5: url TG-3390 (APT27): url cyberespionage, url APT27: url Daserf: url Lurid: url dissecting-lurid-apt.pdf APT28: url Ke3chang: url apt15-is-alive-and-strong-an-analysis-of-royalcli-and-royaldns/ Lazarus Group: url BlackEnergy: url АРТ10: url АРТ33: url АРТ34: url АРТ35: url Positive TechnologiesPositive Technologies is a leading global provider of enterprise security solutions for vulnerability and compliance management, incident and threat analysis, and application protection. Commitment to clients and research has earned Positive Technologies a reputation as one of the foremost authorities on Industrial Control System, Banking, Telecom, Web Application, and ERP security, supported by recognition from the analyst community. Learn more about Positive Technologies at ptsecurity.com.ptsecurity.com info@ptsecurity.com© 2019 Positive Technologies. Positive Technologies and the Positive Technologies logo are trademarks or registered trademarks of Positive Technologies. All other trademarks mentioned herein are the property of their respective owners.Operation Taskmasters_A4.ENG.0002.03 