7/2/2019Threat Spotlight: Ratsnif - New Network Vermin from OceanLotusThreat Spotlight: Ratsnif - New Network Vermin from OceanLotusthreatvector.cylance.com/en_us/home/threat-spotlight-ratsnif-new-network-vermin-from-oceanlotus.html OverviewThe OceanLotus Group (aka APT32, CobaltKitty | previous reports: The SpyRATs of OceanLotus; OceanLotus APT Group Leveraging Steganography) is using a suite of remote access trojans dubbed "Ratsnif" to leverage new network attack capabilities. Blackberry Cylance threat researchers have analyzed the Ratsnif trojans, which offer a veritable swiss-army knife of network attack techniques. The trojans, under active development since 2016, combine capabilities like packet snifﬁng, gateway/device ARP poisoning, DNS poisoning, HTTP injection, and MAC spooﬁng.We delved into four distinct Ratsnif samples, three of them developed in 2016, the fourth created during the latter half of 2018. b8405Filenamejavaw.exe, Client.exePathX:\Project\BotFrame\Debug\Client.exeSize1.32 MB (1,387,520 bytes)File TypePE32 executable for MS Windows (console) Intel 80386 32-bitAliasOceanLotus APT32 Ratsnif2016-08-05 07:57:13Compile Timeurl Spotlight: Ratsnif - New Network Vermin from OceanLotusOverview The earliest example of Ratsnif uncovered thus far was compiled on the same day that its C2 domain was ﬁrst activated:It appears to be a debug build, and closely resembles a later variant from September 2016 that will be the main focus of analysis for the three 2016 variants described in this f118642eee1632a3File‐ namePathSizejavaw.exe, Client.exeX:\Project\BotFrame\Debug\Client.exe1.32 MB (1,387,520 bytes)File typePE32 executable for MS Windows (console) Intel 80386 32-bitAliasOceanLotus APT32 RatsnifCompile Time2016-08-06 04:30:06Overviewurl Spotlight: Ratsnif - New Network Vermin from OceanLotusCompiled less than 24 hours after the previous sample, this build contains only one minor difference in functionality, whereby a call to pcap_dump_ﬂush() has been removed prior to recompilation:Figure 1. Call to pcap_dump_ﬂush in of the sample after recompilation:Figure 3. Age of 0x14 in contain the same path as the PDB information. It seems likely this sample was automatically submitted to an online scanning service by the developer:Figure 5. VirusTotal submission showing date/time and path f12c5908749e33e71589ae1e1f6b3Filenamejavaw.exe, adobe.exePathSizeFile TypeN/A432 KB (442,880 bytes)PE32 executable (DLL) (GUI) Intel 80386, for MS WindowsAliasOceanLotus APT32 Ratsnifurl Spotlight: Ratsnif - New Network Vermin from OceanLotusCompile Time2016-09-13 09:26:42Overview Remarkably similar in functionality to the previous samples from August 2016, this sample is a release build and was likely one of the earlier Ratsnifs to be deployed by OceanLotus in-the-wild. Threat Features C2 over HTTP Upon execution, Ratsnif creates a run once mutex named "onceinstance", initialises Winsock version 2.2, and harvests system information such as the username, computer name, workstation conﬁguration (via NetWkstaGetInfo API), Windows system directory and network adapter information. This information will then be sent to the attacker's C2 server via an HTTP post to the /cl_client_online.php API endpoint. Next, a logging thread is created, which is used to route log messages to the C2 via HTTP POST requests to /cl_client_logs.php. The malware then proceeds to load wpcap.dll, before importing the following functions:pcap_sendqueue_transmit pcap_dumpurl Spotlight: Ratsnif - New Network Vermin from OceanLotusWith WinPcap successfully loaded, a further HTTP POST request is made to /cl_client_cmd.php, which is used to obtain a command code from the attacker. This code will check for commands every 10 seconds. C2 commands are decrypted using AES with a hard-coded static key via Windows APIs, before being dispatched by a simple command processor. C2 All observed Ratsnif samples have been hardcoded with one or more C2 domains, regardless of whether they are used. This sample contains 2 hard-coded domains, although only one appears to have ever been active:search[.]webstie[.]net dns[.]domain-resolve[.]org (inactive)The C2 server itself is expected to expose a fairly intuitively named web API, supporting the following endpoints:URLDescription/cl_client_online.phpPOST containing harvested system information/cl_client_cmd.phpGET C2 command/cl_client_cmd_res .phpPOST result of C2 command/cl_client_logs.phpPOST log messageThe malware contains support for the following commands issued via the b2985633c9ab74020a2b78acd8a4c8File‐ nameN/APathN/Aurl Spotlight: Ratsnif - New Network Vermin from OceanLotusSizeFile Type745 KB (762,880 bytes)PE32 executable (DLL) (GUI) Intel 80386, for MS WindowsAliasOceanLotus APT32 RatsnifCompile TimeWed, 08 Aug 2018 02:52:52 UTCOverview Surfacing during the latter half of 2018 and wrapped in a bespoke OceanLotus shellcode loader, this sample was ﬁrst reported in a blog from Macnica Networks. Compared to the 2016 variants this sample introduces a conﬁguration ﬁle and does not rely on C2 for operation. It also adds new features in the form of HTTP injection, protocol parsing, and SSL hijacking. Threat FeaturesDeployed by OceanLotus loader Use of separately supplied conﬁguration ﬁle, tailored to the victim’s network environment (as opposed to backdoor commands in the previous versions) Use of separately supplied SSL certiﬁcates to perform SSL hijacking Use of WolfSSL library (version 3.11) for decryption of SSL trafﬁc (url Use of http_parser.c for parsing HTTP trafﬁc (url Packet snifﬁng focused on extracting login credentials and other sensitive data via For this particular sample, the actual sniffer executable is Base64 encoded within a loader DLL and wrapped in two layers of shellcode. The loader DLL decodes the payload, copies it to memory and executes the 1 stage shellcode, which will decompress the binary and execute the 2 stage shellcode in a separate thread. The 2 stage shellcode will inject the sniffer executable into memory and hook several API nd functions responsible for returning the process command line (GetCommandLineA,ndsturl Spotlight: Ratsnif - New Network Vermin from OceanLotusGetCommandLineW, _acmdln, _wcmdln), so they return a hardcoded string instead. The string contains the parameter that speciﬁes a path to the conﬁg ﬁle, as well as the executable’s original path:C:\Users\Administrator\Desktop\api\temp\royal\HkYh9CvH7.exe -p C:\ProgramData\setting.cfgFigure 6. Embedded command-lineIt is not immediately obvious why the attackers used this convoluted method to pass the conﬁg path to the malware.The conﬁguration ﬁle is a simple text ﬁle, Base64 encoded, where the ﬁrst line is ignored, and each subsequent line speciﬁes a parameter. For example:[unused_line] -ip [ATTACKER IP ADDRESS] -ga [DEFAULT GATEWAY] -subnet [SUBNET MASK] -sniff -ssl_ip [IP ADDRESS] -html_inject [BROWSER PROCESS NAME] -dlog_ip [IP ADDRESS] -mac [ATTACKER MAC ADDRESS] "true"|"false" -name [DOMAIN NAME] [REDIRECTION IP] -all -dnsttl [INT VALUE] -log [LOGFILE PATH] -pass [CREDENTIALS DUMP PATH] -dwn_ip [IP ADDRESS]Figure 7. Conﬁguration ﬁle optionsHowever, there is a bug in parsing the value of the dwn_ip parameter, which will result in a memory read violation if the value is present in the conﬁguration:Figure 8: Bug in the code: the value of "dwn_ip" is passed as a string, while print_debug_msg expects a pointer to a stringurl Spotlight: Ratsnif - New Network Vermin from OceanLotusOnce executed, the sniffer will read the conﬁguration from the speciﬁed ﬁle, decode it using Base64 and parse it to an in-memory structure. If the "-sniff" parameter is speciﬁed in the conﬁguration, the malware will add a ﬁrewall exception and disable Large Send Ofﬂoad (LSO) for each network adapter in the registry:netsh advﬁrewall ﬁrewall add rule name=\"Core Networking - Router Solicitation\" dir=in action=allow program={self_path} enable=yesFigure 9. Command-line used to add Windows ﬁrewall rulewmic path win32_networkadapter where index=%d call disableFigure 10. Command-line used to disable network adapters prior to disabling LSOsAfter importing the same APIs from wpcap.dll as the 2016 variants (with the addition of pcap_geterr), the malware creates threads responsible for ARP poisoning and DNS spooﬁng.In order to be able to decrypt the SSL trafﬁc, the malware performs SSL hijacking, using an open source library called WolfSSL and separately supplied certiﬁcate and private key ﬁles. For that purpose, it creates an internal WolfSSL server, listening on the ﬁrst available port in the range 65000 – 65535:Figure 11: Use of WolfSSLUnlike the 2016 variants of Ratsnif that stored all packets to a PCAP ﬁle, the 2018 variant employs multiple sniffer classes for harvesting sensitive information from packets. This will minimize the amount of data the attacker has to collect, exﬁltrate and process, and also reveals what information the attacker is interested in.url Spotlight: Ratsnif - New Network Vermin from OceanLotusThe malware can sniff trafﬁc for the following protocols/ports:Inter‐ 990HeadersABOR ACCT ADAT ALLO APPE AUTH CCC CDUP CONF CWD DELE ENC EPRT EPSV FEAT HELP HOST LANG LIST LPRT LPSV MDTM MIC MKD MLSD MLST MODE NLST OPTS PASS PASV PBSZ PORT PROT PWD QUIT REIN REST RETR RMD RNFR RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XMKD XPWD XRCP XRMD XRSQ XSEM XSEN 230CSnif‐ 993CAPABILITY LOGOUT STARTTLS AUTHENTICATE LOGIN SELECT EXAMINE CREATE RENAME LSUB STATUS APPEND CHECK CLOSE EXPUNGE FETCH STORE UIDVarious389, 10636119AUTHINFO USER AUTHINFO PASS ANONYMOUS 281110, 995RCEV RCVD RSET +OK USER PASS RETR QUIT445Various25, 465HELO MAIL RCPT SEND SOML SAML VRFY EXPN TURN FROM1433SELECT name, password_hash FROM master.sys.sql_logins where is_disabled = 0; -- priv23Login Failed login: password:80, 443Variousurl Spotlight: Ratsnif - New Network Vermin from OceanLotusEach sniffer class interface contains two methods for extracting sensitive information from the incoming and outgoing packets, respectively. These typically rely on searching for cleartext header strings to facilitate credential theft:Figure 12. Searching for login and password commands in the Telnet protocolIn addition, the HTTP sniffer interface is also able to perform injection to insert arbitrary attacker supplied content into HTML. C2 Although this sample contains a Base64 encoded C2 URL hardcoded in the .rdata section (the same address as in the 2016 versions), the malware never seems to use it; instead, it logs the captured information into text ﬁles for further exﬁltration by another To recreate conditions in which the sample would operate, a default gateway was -sniff -html_inject "iexplore.exe" -mac "00:0C:29:59:62:46" "true" -dnsttl "100" -log "C:\ratsnif.log" -pass "C:\ratsnif.pcap" -dwn_ipFigure 13. Conﬁguration used for testingFigure 14 shows the malware sending ARP packets asking for the MAC addresses of all the machines on the subnet speciﬁed in the conﬁg ﬁle, whilst ignoring itself the machines on the subnet speciﬁed in the conﬁg ﬁle, whilst ignoring itself unsolicited ARP packets to those addresses, updating the MAC address of the default gateway for each victim:Figure 15. ARP PoisoningFigure 16 shows the effect on the victim machine, with the attacker IP address and the address:url Spotlight: Ratsnif - New Network Vermin from OceanLotusFigure 16. arp -a results showing poisoned ARP Table on the victim machineOnce the ARP table is poisoned, all trafﬁc destined for the default gateway will be routed through Ratsnif and can be stored and manipulated prior to retransmission.Finally, Figure 17 shows a poisoned DNS response for , whereby the DNS query was intercepted by Ratsnif, modiﬁed to point to an attacker controlled IP address and the fake response sent to the original requestor:Figure 17. Ratsnif log ﬁle output showing ARP poisoning and DNS spooﬁng in actionC2 search.webstie.net WhoisAttributeValueServerwhois.web4africa.netRegistrarWEB4AFRICA INCEmailNamecontact@privacyprotect.orgDomain Admin, C/O ID#10760OrganizationPrivacy Protection Service INC d/b/a PrivacyProtect.orgStreetCityPO Box 16Nobby Beachurl Spotlight: Ratsnif - New Network Vermin from OceanLotusStatePostalQueenslandQLD 4218CountryAUSTRALIAPhone4536946676NameServersns21.cloudns.net ns22.cloudns.net ns23.cloudns.net ns24.cloudns.netHistoryObtained via Shodan, this history shows when the C2 server exposed various ports, including HTTP, SMB and RDP, for the purpose of controlling Ratsnif and other OceanLotus malware:url Spotlight: Ratsnif - New Network Vermin from OceanLotusurl Spotlight: Ratsnif - New Network Vermin from OceanLotusFigure 18. Shodan history for search.webstie.net Conclusions Ratsnif is an intriguing discovery considering the length of time it has remained undetected, likely due to limited deployment. It offers a rare glimpse of over two years of feature development, allowing us to observe how threat actors tailor tooling to their nefarious purposes. While all samples borrow heavily from open-source code/snippets, overall development quality is deemed to be poor. Simply put, Ratsnif does not meet the usual high standards observed in OceanLotus malware. outputurl Spotlight: Ratsnif - New Network Vermin from OceanLotusCore Networking - Router SolicitationWindows Firewall Rule7fd5…MITRETacticIDNameNotesDiscoveryT1040Network SnifﬁngSniffs packets and saves to ﬁleT1046Network Service ScanningARP/SMBT1082System Informa‐ tion DiscoveryUser/computer name, system directory and workstation informationCommand and ControlT1043Commonly Used PortHTTP/HTTPST1065Uncommonly Used Port65000 - 65536T1001Data ObfuscationRSA/AES C2 encryptionImpactT1493Transmitted Data ManipulationPerforms packet interception, modiﬁca‐ tion and retransmissionAbout The AuthorAuthor's BioThe Cylance Threat Research Team The Cylance Threat Research team examines malware and suspected malware to better identify its abilities, function and attack vectors. Threat Research is on the frontline of information security and often deeply examines malicious software, which puts us in a unique position to discuss never-seen-before threats.url 