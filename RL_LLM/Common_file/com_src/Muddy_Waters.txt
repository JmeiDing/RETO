New findings on MuddyWater's old and recent activities We came across new campaigns that seem to bear the markings of MuddyWater – a threat actor group with a history of targeting organizations in Middle Eastern and Asian countries. The group used new tools and payloads in campaigns over the first half of 2019, pointing to the continued work the group has put in since our last report on MuddyWater in November 2018. Apart from discovering new campaigns related to MuddyWater, we also uncovered crucial information related to the group’s old and recent activities. These include findings on the threat actor group’s connection to some Android malware variants, its use of false flags to misattribute campaigns to certain countries, its infrastructure, and its target countries and industries. We will also share our independent findings regarding certain information about the threat actor group’s operations, which was leaked on Telegram in April 2019.1Threat actors found using POWERSTATS V3 – a multi- stage backdoor In one of the MuddyWater campaigns we spotted, we detected spear-phishing emails that the group sent to a university in Jordan and the Turkish government. In both cases, the threat actor group did not spoof the said legitimate entities’ sender address to deceive email recipients, but instead used compromised legitimate accounts to trick users into installing malware.Figure 1. Screenshot of a spear-phishing email spoofing a government office, dated April 8, 2019.Figure 2. Email headers showing the origin of the spear-phishing emailThe legitimate owners of the compromised email accounts were from the same countries the target entities are based. As of this writing, it’s unclear how they were compromised, but it’s possible that the group had used the Gophish toolkit since they have already utilized it in an old campaign.2The threat actor group deployed a new multi-stage PowerShell-based backdoor called POWERSTATS v3. The spear-phishing email that contains a document embedded with a malicious macro will drop a VBE file encoded with Microsoft Script Encoder. The VBE file, which holds a base64-encoded block of data containing obfuscated PowerShell script, will then execute. This block of data will be decoded and saved to the %PUBLIC% directory under various names ending with image file extensions such as .jpeg and .png. The PowerShell code will then use custom string obfuscation and lots of useless blocks of code to make it difficult to analyze.Figure 3. Code snippet of obfuscated and useless codeThe final backdoor code will be shown after the deobfuscation of all strings and removal of all unnecessary code. But first, the backdoor will acquire the operating system (OS) information and save the result to a log file.Figure 4. Code snippet of OS information collectionThis file will be uploaded later to the command and control (C&C) server. Each victim machine will generate a random GUID number, which will be used for machine identification. Later on, the malware variant will start the endless loop, querying for the GUID-named file in a certain folder on the C&C server. If the file is found, it will be downloaded and executed using the Powershell.exe process.The threat actor group can then proceed to a second stage attack by sending commands to a specific victim in an asynchronous way. In essence, they can download another backdoor payload from the C&C server and install it on their targets' systems.Figure 5. The code in POWERSTATS v3 that downloads the second attack stage3We were able to look into an instance where the group proceeded to launch a second stage attack. In this scenario, another backdoor was downloaded. The backdoor supports the following commands: Take screenshots  Command execution via the cmd.exe binary If there’s no keyword, the malware variant assumes that the input is PowerShell code and executes it via the “Invoke-Expression” cmdletFigure 6. The code in POWERSTATS v3 (second stage) that handles the screenshot commandThe C&C communication is done using PHP scripts with a hardcoded token and a set of backend functions, e.g., sc (screenshot), res (result of executed command), reg (register new victim), and uDel (self-delete after an error).Figure 7. In an endless loop, the malware variant queries a given path on C&C server, trying to download aGUID-named file with commands to execute.4Other MuddyWater campaigns that used different payloads and tools Since 2018, the threat actors behind MuddyWater have been actively targeting victims using a variety of methods and techniques, and they seem to keep on adding more as they move forward with new campaigns.The abovementioned campaign that used POWERSTATS v3 is not the only one we found using new tricks. We observed other campaigns with different delivery methods and dropped file types. Notably, these campaigns have also changed payloads and publicly available post-exploitation tools.Payload changesDiscovery dateMethod for droppingmalicious codeType of filesdroppedFinal payload2018-032018-112018-112019-012019-012019-03MacrosSCT, INF, base52POWERSTATSencodedMacrosVBS, JS, base52POWERSTATSMacrosMacrosMacrosMacrosencodedDLL, REGEXEINF, EXECLOUDSTATSSHARPSTATSDELPHSTATSBase64 encoded,POWERSTATS v2BAT2019-04Template injectionDocument withPOWERSTATS v1 or v22019-05MacrosmacrosVBEPOWERSTATS v3Table 1. The evolution of MuddyWater’s delivery methods and payloads since 2018One of the said custom tools was POWERSTATS, a PowerShell-based backdoor that the group first used in 2017. Another one is CLOUDSTATS, a PowerShell-based backdoor that uses a cloud file hosting provider for its command and control (C&C) communication. We discussed the use of CLOUDSTATS in a previous report.In January 2019, we discovered that the campaign started using SHARPSTATS, a .NET-written backdoor that supports DOWNLOAD, UPLOAD, and RUN functions. In the same month, DELPHSTATS emerged. This backdoor is written in the Delphi programming language, and queries the C&C server for a .dat file before executing it via the Powershell.exe process. Similar to the SHARPSTATS backdoor, DELPHSTATS employs custom PowerShell script with code similarities to the one embedded into the SHARPSTATS backdoor. A campaign that dropped this variant was thoroughly discussed in this report.5Figure 8. SHARPSTATS can be used to collect system information by dropping and executing a PowerShellscript.Figure 9. The code in DELPHSTATS that queries a certain directory on the C&C server. It’s where operatorsupload additional payload.In mid-March 2019, we came across POWERSTATS v2, a heavily obfuscated backdoor. An earlier version of this backdoor decodes the initial encoded/compressed blocks of code. An improved version appeared later on, and we saw that it heavily uses format strings and redundant backtick characters. In the earlier version, function names were still somehow readable, but they were completely randomized in later versions.6Figure 10. Obfuscated POWERSTATS v2After deobfuscation, the main backdoor loop queries different URLs for a “Hello server” message to obtain command and upload the result of the run command to the C&C server.Figure 11. Deobfuscated main loop of POWERSTATS v27Use of different post-exploitation tools Since the emergence of MuddyWater, we found that its operators used multiple open source post- exploitation tools, which they deployed after successfully compromising a target.Name of the post-exploitation toolProgramming language/InterpreterCrackMapExecChromeCookiesViewchrome-passwordsEmpireProjectFruityC2KoadicLaZagneMeterpreterMimikatzMZCookiesViewPowerSploitShootbackSmbmapPython, PyInstallerExecutable fileExecutable filePowerShell, PythonPowerShellJavaScriptPython, PyInstallerReflective loader, executable fileExecutable fileExecutable filePowerShellPython, PyInstallerPython, PyInstallerTable 2. Tools used by MuddyWater campaigns over the yearsOne of the campaigns we uncovered notably delivered the EmpireProject stager via a scheme that involves the use of template injection and the abuse of the CVE-2017-11882 vulnerability. If the email recipient clicks on a malicious document, a remote template is downloaded, which will trigger the exploitation of CVE-2017-11882. This will then lead to the execution the EmpireProject stager.Figure 12. Clicking on the malicious document leads to the abuse of CVE-2017-11882, and then the execution ofthe EmpireProject stager.We also saw the LaZagne credential dumper being patched to drop and run POWERSTATS in the main function.8Figure 13. LaZagne has been patched to drop and run POWERSTATS in the main function. See addedintimoddumpers() function. Note the typo in the function name (using INTI, not INIT).9Connections to Android malware variants In addition to uncovering new campaigns, we were also able to find connections between MuddyWater and four Android malware variants that posed as legitimate applications. We were able to establish proof of connection through their shared infrastructure, e.g., IP addresses and C&C servers, and the code similarities between some of the malware families.We first noticed the first Android malware variant (AndroidOS_Mudwater.HRX) when we discovered that its IP address and C&C server, 78[.]129[.]139[.]131, was used as the final C&C server of a MuddyWater campaign. In the said campaign, we saw victims receiving commands for downloading a second stage payload from the abovementioned IP address.Apart from custom stealing capabilities, AndroidOS_Mudwater.HRX has two other interesting features: Brute forces hardcoded IP addresses (with a list of usernames and passwords).  Spreads malicious apps by sending all contacts an SMS (in Turkish) containing a link to themalicious APK. The link points to an APK in the directory tree of a legitimate website belonging to a non-profit research organization in Turkey. Most likely, the organization’s website was compromised, which is not surprising as its website was hosted on WordPress, a platform MuddyWater is fond of targeting.Figure 14. List of commands supported by the newer version of the malicious appWe found a connection between AndroidOS_Mudwater.HRX and the second malware variant (AndroidOS_HiddenApp.SAB) based on similarities in their code structure. The figure below shows these similarities.10Figure 15. List of commands supported by the older version of the malicious appThe second malware variant is a custom stealer that implements features for stealing call logs, contacts, SMS messages, phone information, and screenshots. It posts all stolen data to a Telegram channel. Like the previously mentioned variant, we found hints in the file that shows that it might be a test version.We then discovered shared signed certificates that connect AndroidOS_HiddenApp.SAB and the third malware variant (AndroidOS_Androrat.AXM). Its C&C server is a local IP address, which led us to think that our detected sample is a test version.Meanwhile, we saw the connection of Droidjack RAT — the fourth malware variant (AndroidOS_Androrat.AXMA) — to MuddyWater in the domain name of the former’s C&C server (googleads[.]hopto[.]org), which shares C&C servers with some DELPHSTATS samples that we analyzed. A Droidjack RAT variant is a remote access trojan that allows attackers to take full control of an Android device when installed.Potential targets While we can’t say for sure who or what entities the four Android malware variants were specifically targeting, our analysis of the indicators of compromise (IoCs ) provided us with clues on the targets' locations.It likely targets users in Turkey, because the campaign used a malicious app that was hosted in a compromised Turkish website. The campaign also spread an SMS written in the Turkish language to lure users into downloading a malicious app.Pakistan could be another target location: Some target IP addresses that were hardcoded in the brute force functions of some samples were traced back to Pakistan.Afghanistan is another potential target location as the file name of one of the malicious applications we analyzed was “AfghanistanElection.apk.”11Use of false flag techniques Some of the tools used by MuddyWater campaigns contained false flags, which are messages that threat actors add into their programs to misattribute the campaign to a specific country. This technique was discussed recently by other researchers.Here are some false flags we spotted:Figure 16. Several older POWERSTATS backdoors contained simplified Chinese text like “无法连接到网址，请等待龙,” which translates to “Unable to connect to the URL, please wait for the dragon.“Figure 17. The dragon reference also manifested in this dragon variable.Figure 18. Some PowerSTATS backdoors were compiled with the PS2EXE tool to .EXE files. These containedfalse flags, which are famous quotes of well-known people in Israel.The translation of the two sets of text above are as follows: ”$god = "If the Arabs put down their weapons today, there will be no more violence If the Jews put down their arms today, there will be no more Israel" and “$SKey = "he will raise the people and confirm that his word and law are standing". Note that these variables were not used in the rest of the code.12Figure 19. These false flags try to misattribute an attack to Russia or a country that uses the Cyrillic alphabet. Russian texts appeared in the metadata of some delivery documents and in a debug path of one DLL library.13MuddyWater-related information leaked on Telegram In April, details related to the alleged operations of the threat actor group behind MuddyWater were leaked on Telegram. The leaks contained images of the group’s C&C backends, source code, and a list of past hacked victims.Our monitoring efforts uncovered evidence that communication transpired between some victims (that were listed in the leak) and a C&C server known to be from MuddyWater.Independently, we also spotted two versions of the server backend, which contains code similar to the details leaked on Telegram.The code is a simple script written in Python, and encapsulated with PyInstaller. It will read a configuration file to find which IP address and port to listen to, and it will display some commands available to the operator.The script displays two different ASCII art for two versions.Figure 20. ASCII art for version 1.0.0, compiled on July 31, 2017Figure 21. ASCII art for version 1.0.1, compiled on September 4, 2018.Based on these findings, we speculate that the leaks were based on real data.14The leak also included information regarding a certain individual. While we cannot confirm its veracity, we noticed that a document with MuddyWater code has been posted to VirusTotal prior to the leak, and its filename is similar to the name of the individual mentioned in the leak.15Infrastructure and targets For the most part, the threat actor group used direct IP addresses as C&C servers and a few domain names (dynamic or not). In 2018, the group mostly used compromised WordPress websites as proxies to send commands that were forwarded to the final C&C servers.Figure 22. Communication flow between the operator and the victimWe noticed that the said C&C servers were usually set up to listen to an uncommon port, and were shut down a few hours later. The next time the servers were up, they usually listened on a different port.As mentioned in our previous research, most targets were located in Middle Eastern and Asian countries. Recently, we saw the group aiming for new targets in Europe. The figure below shows the target countries of MuddyWater campaigns. We included the United States, and some European countries, based on verified information from the leaks.Figure 23. Countries that MuddyWater has targetedMost victims were government entities, with the majority in the finance, education, foreign affairs, interior, defense, trade, and customs sectors. We also found many victims in the telecommunications industry such as telcos and web hosting providers.16Figure 24. Industries that MuddyWater has targeted17Conclusion Aside from the abovementioned findings, we also found Twitter and Github accounts that we believe are linked to MuddyWater. Researchers have made similar findings in the past. This discovery, as well as the exposure of their operations to the public due to the leak, shows that the threat actor group has poor operational security and lack diligence in covering their tracks.However, the group also appears to be agile. One week after we published our November 2018 report on their use of base52 encoding, we found out that they modified the alphabet from 52 characters to 40, 45, and 48. In our opinion, this action is a result of our disclosure of their activities.While MuddyWater appears to have no access to zero-days and advanced malware variants, it still managed to be successful in compromising its targets over the last two years. This can be attributed to the continuous evolution of their schemes.Notably, the group’s use of email as an infection vector seems to have worked for their campaigns. In this regard, apart from using smart email security solutions, organizations should inform their employees of includes/customize/main[.]phphxxp://googleads[.]hopto[.]org/data/ce28e899a8d3d00a.]dathxxp://ciscoupdate2019[.]gotdns[.]ch/users[.]php?hxxps://www[.]jsonstore[.]io/4de4d6d84d17638b3cd0 3CJwS9gbtNM84GL_ajl_AD2EoEOHrmbpQ5qC9J7 GcSSZQ0JNBDnOulnMWgNy3FV2kcHRuM0u5NMo5Jv9Ks4zS5-pLkiYs4me/hxxps://104[.]237[.]233[.]38:8080/nud2WCL9WzTiAO MCuFMboA18GWsmrc8k6VqGrXXfqVghYktellhTS7_tg-D64spqdv4sOJ/hxxps://88[.]99[.]17[.]148:443/3g-g7DuFHLwC8gPwW3z9rgnS1Is8F83B-95PHYnVp-k9219KbHn-24IChwxSFR35a117i2Jz_OX9mUPAYRJw-3NhMBxUVDp4iMOkzt/hxxps://104[.]237[.]233[.]40:8443/zi5w0iDM6aLEgcWDnumYywaHa33BIPzaylNUPU-ECcNCmfNNcxzv05flJoB3wvWqH6Uf01vI-1yKF96/hxxps://78[.]129[.]139[.]134:8864/lZkP68TtH_BpZGhmMwxNPwy0vjimgwDRfk01pV2Xu2FztbaevB-6RzBUPRietWtBcuxru7tTsF3rZGFPbepd294BP2MGd/Figure 32. List of C&C servers25TREND MICROTM RESEARCHTrend Micro, a global leader in cybersecurity, helps to make the world safe for exchanging digital information.Trend Micro Research is powered by experts who are passionate about discovering new threats, sharing key insights, and supporting efforts to stop cybercriminals. Our global team helps identify millions of threats daily, leads the industry in vulnerability disclosures, and publishes innovative research on new threats techniques. We continually work to anticipate new threats and deliver thought-provoking research.www.trendmicro.com26 