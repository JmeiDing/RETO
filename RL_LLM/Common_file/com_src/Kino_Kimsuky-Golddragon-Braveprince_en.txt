Piece of dragon's scalessfkino-tistory-com.translate.goog/80TL;DRDecember 30, 2021Attacks using the golddragon/braveprince cluster of the kimsuky (aka Thallium) group continue Recently, a routine to encode API names has been added to the golddragon/braveprince cluster malware. Quasar-based malware, an open source RAT, was discovered by searching for additional intelligence based on stringsoutline In fact, the golddragon/braveprince clusters (personally, I call them daumrat) were thinking of posting them all around mid- 2021 While I was spending time in the lost arc, the cisco talos team organized it well and made it public. It's sweet, but thanks to you, I have no use for it.So, in this post, we will briefly discuss the braveprince, password stealer malware, and Quarsar RAT-based .net malware with name en/decoding routine added through intelligence search.Case 1. Golddragon/braveprince malware with API Name En/Decoding logic addedWhen the Run function is executed through rundll.exe, it is a very typical braveprince cluster that steals information and creates svchost.exe and iexplorer.exe to steal information via daum mail. (Personally, I call it daumrat) recently discovered golddragon/braveprince In the malware, functions were the same as before, but we found a sample with added logic to encrypt/decrypt DLL and API names.WTF_10003CD0 functionget encoded dll name & api name Inside the file, there is an api_name_table containing the encoded DLL name and the API included in the DLL. Get the encoded DLL name by comparing the encoded api names in this table.1/14decode string The encoded DLL and API names received as arguments are decoded by the following routine.1. Get the index of the character position to be decrypted in the key table 2. Calculate the position index value with a specific formula (( idx - 0x16) & 0x3F) 3. Replace the encoded string using the calculated value as an index in the key tableThe decryption logic is implemented as follows.def decryptor(enc_str):key_table = 'zcgXlSWkj314CwaYLvyh0U_odZH8OReKiNIr-JM2G7QAxpnmEVbqP5TuB9Ds6fFt' dec_str = '' for enc_chr in enc_str: idx = key_table.index(ord(enc_chr)) dec_str += chr(key_table[ (idx - 0x16) & 0x3F ]) return dec_str2/14The string substitution key table used by this malware is also found in other malware used by this group. (link: url PebbleDash.pdf )Case 2. Information StealerReport published by AhnlabIn a stranger intelligence search, I found a sample with a familiar scent. It is a sample that has already been analyzed and reported by talos, so let's briefly look at the functions. (link: url )%AppData%qwer.txt file does not exist if it does not exist Create %AppData%information folder (WORKING_PATH) Save system information in %AppData%Information foldercmd.exe /c ipconfig/all >> [WORKING_PATH]\netinfo.dat & arp -a >> [WORKING_PATH]\netinfo.dat cmd.exe /c systeminfo >> [WORKING_PATH]\sysinfo.dat cmd.exe /c tasklist >> [WORKING_PATH]\procinfo.dat [WORKING_PATH]\filelist.datAfter the svchost.exe process is created, the data in the resource area is decrypted and then injectedIt is a malicious code that modified nirsoft's webpassview program to steal user information stored in the browser and save it as a file.[WORKING_PATH]\aaweb.txt3/14Stealing system informationStealing account information stored in web browsersThis malicious code does not have a routine to transmit the collected information to the outside and does not run without the qwer.txt file, so it appears to be one of the system information collection modules executed by other malicious codes.Case 3. .Net malware based on Quasar RATCase 1 While performing an intelligence search with the found key value and encoded API name, I found a dropper running Quasar RAT. The resource structure of the file is quite complex, so I expressed it as a picture4/14The operation method of the malicious code is as follows.malware resource dataIf your Windows version is 10Drop & Execute Privilege Elevation SW (TEXT114)If you have high privileges and WinDefender is runningDefender Control SW & Execution (TEXT116)Main Malicious Behavior (TEXT115)Drop file with C2 information5/14elevation of privilegeMalware main logicThe malicious code decrypts the resource file (TEXT116), maps the file to memory, and calls the Export function Reg for privilege elevation.factor Privilege ElevationS/Wfile/registry pathOnecomputerdefaults.exe HKCU\\Software\\Classes\\ms-settings\\shell\\open\\command2345sdclt.execmstp.exeHKCU\\Software\\Classes\\Folder\\shell\\open\\command%AppData\Microsoft\windows\seting.iniWSReset.exeHKCU\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\commandslui.exeHKCU\\Software\\Classes\\Launcher.SystemSettings\\shell\\open\\command6/14Privilege Elevation S/W[version] Signature=$chicago$ AdvancedINF=2.5 [DefaultInstall]CustomDestination=CustInstDestSectionAllUsers RunPreSetupCommands=RunPreSetupCommandsSection[RunPreSetupCommandsSection] [MALPATH]\malware.dll,Run taskkill /IM cmstp.exe /F[CustInstDestSectionAllUsers] 49000,49001=AllUSer_LDIDSection, 7[AllUSer_LDIDSection] "HKLM", "SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\CMMGR32.EXE", "ProfileInstallPath", ShortSvcName="WinPwnageVPN"Turn off winDefenderSearch "sMpEng" string among running processes to check whether Defender is running, and if it is running, drop the file (TEXT114) in the resource area and run it with the /D option to turn off Defender.Path: %PROGRAMFILES%\Microsfot\ File name: /[cetuikgbms]{6}.exe7/14win defender controlMalware installationThe final malicious code, Quasar RAT, and the encrypted C2 file are dropped to a fixed folder.Encrypted C2 (BIN101): %AppData%\Microsoft\Office\MsWord16.pip Quasar RAT (BIN102): %AppData%\Microsoft\Office\StaticCache.datThe loader running Quasar RAT creates a random folder in %AppData%\Microsoft\, drops it to a random name, and runs it.Installation path: %AppData%\Microsoft\ [pubs, Common, Defender, Protect, Vault] File name: [svchost, sihost, spoolsv, taskhostw, RuntimeBroker].exe Execution argument: -startAutorun Registration (Persistence)Attempts to register the scheduler and register the registry (if Windefender is not running) to secure the continuity of the malicious code.8/14autorun nameWindowsAutoUpdate CloudUpdateschtasks.exe "/create /tn \"WindowsAutoUpdate\" /tr \"C:\\Users\\anon\\AppData\\Roaming\\Microsoft\\Protect\\svchost.exe -start\" /sc DAILY /mo 1 /f"Registry Path: Path: HKLM\SoftWare\Microsoft\Windows\CurrentVersion\RunRAT LoaderRAT Loader is a .NET-based loader program named teracom or RuntimeBroker that reads Quasar-based malware, decodes it, and executes it. PDB information exists in the loaded executable file.G:\SRC\!Spy\!LoadAssembly\!teracom\teracom\obj\Release\teracom.pdb G:\SRC\!Spy\taskhost\taskhost\obj\Release\RuntimeBroker.pdbteracom/runtimebroker info9/14Malware based on Quasar RATRAT loaderThe StaticCache.dat file that operates in memory is a Quasar RAT-based malware with a package name of RMSSVC. The overall function is the same as Quasar RAT, so only some settings, decryption logic, and C2 address loading method will be reviewed. (link: url )10/14RAT Package11/14Decrypt the encrypted C2 and AES-encrypted MsWord16.pip files in the Config file and set them to C2Setting information to be used for malicious behaviorhttps: //blog.daum [.]net/casalesmedia/pages/category 2. 159 (0x9F) XORC2 File Decryption Logic (AES)def aes_dec(enc_str):enc_str = base64.b64decode(enc_str) key = base64.b64decode("IuYp5htzIKk1wqlMrcwzSg==") iv = "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" decrypt = AES.new(key, AES.MODE_CBC,IV= iv) dec_str = decrypt.decrypt(enc_str) print(dec_str)conclusionI'm just sorry for wasting your time by bringing all the finished rice cakes. But I wrote it with the hope that it might be helpful to someone. And I probably won't be posting any more tracking or analysis posts about these friends after this one. (The reason will be written later along with the current situation on personal SNS.)I end this article by sending a review to all malware/threat analysts who are struggling day and night to identify and block threats.Goodbye 2020! And Happy New year!!IOCCase 1. API Name En / Decoding logic is added golddragon / braveprince malware 237DEBA138355BFB448E74BFB68FC868F4807B24D68715A6D47E348FC0CF925713/14Case 2. the Information Stealer SHA256: 5E3907E9E2ED8FF12BB4E96B52401D871526C5ED502D2149DD4F680DA4925590Case 3. .Net based malware on Quasar RAT sha1: E8BEF41ED7D0704D9206880EE0F30B5ECF30F204 SHA256: 0CF7E1268E8652D841B7BDA784707E445B9CDC2A46FFB375C8F239CB4C551F7314/14 