OPERATION COBALT KITTY: A LARGE- SCALE APT IN ASIA CARRIED OUT BY THE OCEANLOTUS GROUPMAY 24, 20179 minutes to readWeb page converted to PDF with the PDFmyURL PDF creation API!Written by: ASSAF DAHANTOPICSadvancedpersistentthreatSHAREDubbed Operation Cobalt Kitty, the APT targeted a global corporation based in Asia with the goal of stealing proprietary business information. The threat actor targeted the company’s top-level management by using spear-phishing attacks as the initial penetration vector, ultimately compromising the computers of vice presidents, senior directors and other key personnel in the operational departments. During Operation Cobalt Kitty, the attackers compromised more than 40 PCs and servers, including the domain controller, (cid:37)le servers, Web application server and database server.Forensic artifacts revealed that the attackers persisted on the network for at least a year before Cybereason was deployed. The adversary proved very adaptive and responded to company’s security measures by periodically changing tools, techniques and procedures (TTPs), allowing them to persist on the network for such an extensive period of time. Over 80 payloads and numerous domains were observed in this operation - all of which were undetected by traditional security products deployed in the company’s environment at the time of the attack.The attackers arsenal consisted of modi(cid:37)ed publicly-available tools as well as six undocumented custom-built tools, which Cybereason considers the threat actor’s signature tools. Among these tools are two backdoors that exploited DLL sideloading attack in Microsoft, Google and Kaspersky applications. In addition, they developed a novel and stealthy backdoor that targets Microsoft Outlook for command-and-control channel and data ex(cid:37)ltration.Web page converted to PDF with the PDFmyURL PDF creation API!Based on the tools, modus operandi and IOCs (indicators of compromise) observedBased on the tools, modus operandi and IOCs (indicators of compromise) observed in Operation Cobalt Kitty, Cybereason attributes this large-scale cyber espionage APT to the “OceanLotus Group” (which is also known as, APT-C-00, SeaLotus and APT32). For detailed information tying Operation Cobalt Kitty to the OceanLotus Group, please see our Attacker’s Arsenal and Threat Actor Pro(cid:37)le sections.Cybereason also attributes the recently reported Backdoor.Win32.Denis to the OceanLotus Group, which at the time of this report’s writing, had not been of(cid:37)cially linked to this threat actor.Finally, this report offers a rare glimpse into what a cyber espionage APT looks like "under-the-hood". Cybereason was able to monitor and detect the entire attack lifecycle, from in(cid:37)ltration to ex(cid:37)ltration and all the steps in between.Our report contains the following detailed sections (PDF): Cobalt Kitty Lifecycle: A step-by-step analysis Cobalt Kitty Attacker’s Arsenal: Deep dive into the tools used in the APT Cobalt Kitty Threat Actor Pro(cid:37)le and Indicators of CompromiseHIGH-LEVEL ATTACK OUTLINE: A CAT-AND- MOUSE GAME IN FOUR ACTSWeb page converted to PDF with the PDFmyURL PDF creation API!The following sections outline the four phases of the attack as observed by Cybereason’s analysts, who were called to investigate the environment after the company’s IT department suspected that their network was breached but could not trace the source.PHASE ONE: FILELESS OPERATION (POWERSHELL AND COBALT STRIKE PAYLOADS)Based on the forensic evidence collected from the environment, phase one was the continuation of the original attack that began about a year before Cybereason was deployed in the environment. During that phase, the threat actor operated a (cid:37)leless PowerShell-based infrastructure, using customized PowerShell payloads taken from known offensive frameworks such as Cobalt Strike, PowerSploit and Nishang.The initial penetration vector was carried out by social engineering. Carefully selected group of employees received spear-phishing emails, containing either links to malicious sites or weaponized Word documents. These documents contained malicious macros that created persistence on the compromised machine using two scheduled tasks, whose purpose was to download secondary payloads (mainly Cobalt Strike Beacon):Scheduled task 1: Scheduled task 1: Downloads a COM scriptlet that redirects to Cobalt Strike payload:Web page converted to PDF with the PDFmyURL PDF creation API!Scheduled task 2: Scheduled task 2: Uses Javascript to download a Cobalt Strike Beacon:See more detailed analysis of the malicious documents in our Attack Life Cycle section.FILELESS PAYLOAD DELIVERY FILELESS PAYLOAD DELIVERY INFRASTRUCTURE INFRASTRUCTUREWeb page converted to PDF with the PDFmyURL PDF creation API!INFRASTRUCTURE INFRASTRUCTUREIn the (cid:37)rst phase of the attack, the attackers used a (cid:37)leless in-memory payload delivery infrastructure consisting of the following components:1. VBS and PowerShell-based loaders VBS and PowerShell-based loadersThe attackers dropped Visual Basic and PowerShell scripts in folders that they created under the ProgramData (a hidden folder, by default). The attackers created persistence using Windows’ registry, services and scheduled tasks. This persistence mechanism ensured that the loader scripts would execute either at startup or at predetermined intervals.Web page converted to PDF with the PDFmyURL PDF creation API!Values found in Windows’ Registry: the VBS scripts are executed by Windows’ Wscript at startup:Wscript at startup:The .vbs scripts as well as the .txt (cid:37)les contain the loader’s script, which launches PowerShell with a base64 encoded command, which either loads another PowerShell script (e.g Cobalt Strike Beacon) or fetches a payload from the command-and-control (C&C) server:2. In-memory (cid:28)leless payloads from C&C servers In-memory (cid:28)leless payloads from C&C serversThe payloads served by the C&C servers are mostly PowerShell scripts with embedded base64-encoded payloads (Metasploit and Cobalt Strike payloads):Web page converted to PDF with the PDFmyURL PDF creation API!Example 1: PowerShell payload with embedded Shellcode downloading Example 1: PowerShell payload with embedded Shellcode downloading Cobalt Strike Beacon Cobalt Strike BeaconThe decoded payload is a shellcode, whose purpose is to retrieve a Cobalt Strike Beacon from the C&C server:Web page converted to PDF with the PDFmyURL PDF creation API!Example 2: Cobalt Strike Beacon embedded in obfuscated PowerShell Example 2: Cobalt Strike Beacon embedded in obfuscated PowerShellA second type of an obfuscated PowerShell payload consisted of Cobalt Strike’s Beacon payload:Less than 48 hours after Cybereason alerted the company about the Less than 48 hours after Cybereason alerted the company about the breach breach, the attackers started to change their approach and almost completelyWeb page converted to PDF with the PDFmyURL PDF creation API!abandoned the PowerShell infrastructure that they had been using - replacing it with sophisticated custom-built backdoors. The attackers’ remarkable ability to quickly adapt demonstrated their skill and familiarity with and command of the company’s network and its operations.The attackers most likely replaced the PowerShell infrastructure after the company used both Windows Group Policy Object (GPO) and Cybereason’s execution prevention feature to prevent PowerShell execution.PHASE TWO: BACKDOORS EXPLOITING DLL- PHASE TWO: BACKDOORS EXPLOITING DLL- HIJACKING AND USING DNS TUNNELING HIJACKING AND USING DNS TUNNELINGAfter realizing that the PowerShell infrastructure had been discovered, the attackers had to quickly replace it to maintain persistence and continue the operation. Replacing this infrastructure in 48 hours suggests that the threat actors were prepared for such a scenario.During the second phase of the attack, the attackers introduced two the attackers introduced two sophisticated backdoors that they attempted to deploy on selected sophisticated backdoors that they attempted to deploy on selected targets. targets. The introduction of the backdoors is a key turning point in the investigation since it demonstrated the threat actor’s resourcefulness and skill-set.Web page converted to PDF with the PDFmyURL PDF creation API!At the time of the attack, these backdoors were undetected and At the time of the attack, these backdoors were undetected and undocumented undocumented by any security vendor. Recently, Kaspersky researchers identi(cid:37)edundocumented undocumented by any security vendor. Recently, Kaspersky researchers identi(cid:37)ed a variant of one of the backdoors as Backdoor.Win32.Denis. The attackers had to make sure that they remained undetected so the backdoors were designed to be as stealthy as possible. To avoid being discovered, the malware authors used these techniques:Backdoors exploiting DLL hijacking against trusted applications Backdoors exploiting DLL hijacking against trusted applicationsThe backdoor exploited a vulnerability called “DLL hijacking malware inside trusted software. This technique exploits a security vulnerability found in legitimate software, which allows the attackers to load a fake DLL and and legitimate security software, allowing them to continue their operations without raising any suspicions.Web page converted to PDF with the PDFmyURL PDF creation API!raising any suspicions.DNS Tunneling as C2 channel - DNS Tunneling as C2 channel -In attempt to overcome network (cid:37)ltering solutions, the attackers implemented a stealthier C2 communication method, using “DNS Tunneling” – a method of C2 communicating and data ex(cid:37)ltration using the DNS protocol. To ensure that the DNS traf(cid:37)c would not be (cid:37)ltered, the attackers con(cid:37)gured the backdoor to communicate with Google and OpenDNS DNS servers, since most organizations and security products will not (cid:37)lter traf(cid:37)c to those two major DNS services.Web page converted to PDF with the PDFmyURL PDF creation API!The screenshot below shows the traf(cid:37)c generated by the backdoor and demonstrates DNS Tunneling for C2 communication. As shown, while the destination DNS packet:PHASE THREE: NOVEL MS OUTLOOK PHASE THREE: NOVEL MS OUTLOOK BACKDOOR AND LATERAL MOVEMENT SPREE BACKDOOR AND LATERAL MOVEMENT SPREEWeb page converted to PDF with the PDFmyURL PDF creation API!In the third phase of the operation, the attackers harvested credentials stored on the compromised machines and performed lateral movement and infected new machines. The attackers also introduced a very rare and stealthy technique introduced a very rare and stealthy technique to communicate with their servers and ex(cid:37)ltrate data using Microsoft Outlook Microsoft Outlook.OUTLOOK MACRO BACKDOOR OUTLOOK MACRO BACKDOORWeb page converted to PDF with the PDFmyURL PDF creation API!In a relentless attempt to remain undetected, the attackers devised a very stealthyIn a relentless attempt to remain undetected, the attackers devised a very stealthy C2 channel that is hard to detect since it leverages an email-based C2 channel. The attackers installed a backdoor macro in Microsoft Outlook installed a backdoor macro in Microsoft Outlook that enabled them to execute commands, deploy their tools and steal valuable data from the compromised machines.For a detailed analysis of the Outlook backdoor, please see the Attacker’s Arsenal section.This technique works as follows:Web page converted to PDF with the PDFmyURL PDF creation API!1. The malicious macro scans the victim’s Outlook inbox and looks for the strings“$$cpte” and “$$ecpte” “$$cpte” “$$ecpte”.2. Then the macro will open a CMD shell that will execute whatever instruction /command is in between the strings.3. The macro deletes the message from inbox to ensure minimal risk of exposure.4. The macro searches for the special strings in the “Deleted Items” folder to (cid:37)ndthe attacker’s email address and sends the data back to the attackers via email.5. Lastly, the macro will delete any evidence of the emails received or sent by theattackers.CREDENTIAL DUMPING AND LATERAL CREDENTIAL DUMPING AND LATERAL MOVEMENT MOVEMENTMimikatz credential dumping tool as their main The attackers used the famous Mimikatz tool to obtain credentials including user passwords, NTLM hashes and Kerberos tickets. Mimikatz is a very popular tool and is detected by most antivirus vendors and other security products. Therefore, the attackers used over 10 different customized Mimikatz payloads, which were obfuscated and packed in a way that allowed them to evade antivirus detection.Web page converted to PDF with the PDFmyURL PDF creation API!The following are examples of Mimikatz command line arguments detected duringThe following are examples of Mimikatz command line arguments detected during the attack:The stolen credentials were used to infect more machines, leveraging Windows built-in tools as well as pass-the-ticket and pass-the-hash attacks.Web page converted to PDF with the PDFmyURL PDF creation API!PHASE FOUR: NEW ARSENAL AND ATTEMPT PHASE FOUR: NEW ARSENAL AND ATTEMPT TO RESTORE POWERSHELL TO RESTORE POWERSHELL INFRASTRUCTURE INFRASTRUCTUREAfter a four week lull and no apparent malicious activity, the attackers returned to the scene and introduced new and improved tools aimed at bypassing the security mitigations that were implemented by the company’s IT team. These tools and methods mainly allowed them to bypass the PowerShell execution mainly allowed them to bypass the PowerShell execution restrictions and password dumping mitigations restrictions and password dumping mitigations.During that phase, Cybereason found a compromised server that was used as the main attacking machine, where the attackers stored their arsenal in a network share, which made it easier to spread their tools to other machines on the network. The attackers’ arsenal consisted: New variants of Denis and Goopy backdoors New variants of Denis and Goopy backdoors PowerShell Restriction Bypass ToolPowerShell Restriction Bypass Tool -- Adapted from PSUnlock GithubWeb page converted to PDF with the PDFmyURL PDF creation API!project. PowerShell Cobalt Strike Beacon -PowerShell Cobalt Strike Beacon - New payload + new C2 domain PowerShell Obfuscator -PowerShell Obfuscator - All the new PowerShell payloads are obfuscatedusing a publicly available script adapted from a Daniel Bohannon’s GitHub project. HookPasswordChangeHookPasswordChange -- Inspired by tools found on GitHub, this tool alerts theattackers if a password has been changed. Using this tool, the attackers could overcome a password reset. The attackers modi(cid:37)ed their tool. Customized Windows Credentials Dumper -Customized Windows Credentials Dumper - A PowerShell password dumper that is based on a known password dumping tool, using PowerShell bypass and re(cid:75)ective loading. The attackers speci(cid:37)cally used it to obtain Outlook passwords. Customized Outlook Credentials Dumper -Customized Outlook Credentials Dumper - Inspired by known Outlookcredentials dumpers. Mimikatz -Mimikatz - PowerShell and Binary versions, with multiple layers ofobfuscation.Please see the Attacker’s Arsenal section for detailed analysis of the tools.An analysis of this arsenal shows that the attackers went out of their way to restore the PowerShell-based infrastructure, even though it had already been detected and shut down once. The attackers’ preference to use a (cid:37)leless infrastructure speci(cid:37)cally in conjunction with Cobalt Strike is very evident. This could suggest that the attackers preferred to use known tools that are moreWeb page converted to PDF with the PDFmyURL PDF creation API!could suggest that the attackers preferred to use known tools that are more expendable rather than using their own custom-built tools, which were used as a last resort.CONCLUSION CONCLUSIONOperation Cobalt Kitty was a major cyber espionage APT that targeted a global corporation in Asia and was carried out by the OceanLotus Group. The analysis of this APT proves how determined and motivated the attackers were. They continuously changed techniques and upgraded their arsenal to remain under the radar. In fact, they never gave up, even when the attack was exposed and shut down by the defenders.During the investigation of Operation Cobalt Kitty, Cybereason uncovered and analyzed new tools in the OceanLotus Group’s attack arsenal, such as: New backdoor (“Goopy”) using HTTP and DNS Tunneling for C2 communication. Undocumented backdoor that used Outlook for C2 communication and dataex(cid:37)ltration. Backdoors exploiting DLL sideloading attacks in legitimate applications fromMicrosoft, Google and Kaspersky. Three customized credential dumping tools, which are inspired by known tools.Web page converted to PDF with the PDFmyURL PDF creation API!In addition, Cybereason uncovered new variants of the “Denis” backdoor andIn addition, Cybereason uncovered new variants of the “Denis” backdoor and managed to attribute the backdoor to the OceanLotus Group - a connection that had not been publicly reported before.This report provides a rare deep dive into a sophisticated APT that was carried out by one of the most fascinating groups operating in Asia. The ability to closely monitor and detect the stages of an entire APT lifecycle - from initial in(cid:37)ltration to data ex(cid:37)ltration - is far from trivial.The fact that most of the attackers’ tools were not detected by the antivirus software and other security products deployed in the company’s environment before Cybereason, is not surprising. The attackers obviously invested signi(cid:37)cant time and effort in keeping the operation undetected, striving to evade antivirus detection.As the investigation progressed, some of the IOCs observed in Operation Cobalt Kitty started to emerge in the wild, and recently some were even reported being used in other campaigns. It is important to remember, however, that IOCs have a tendency to change over time. Therefore, understanding a threat actor’s behavioral patterns is essential in combatting modern and sophisticated APTs. The modus operandi and tools served as behavioral (cid:37)ngerprints also played an important role in tying Operation Cobalt Kitty to the OceanLotus Group.Lastly, our research provides an important testimony to the capabilities and working methods of the OceanLotus Group. Operation Cobalt Kitty is unique in many ways, nonetheless, it is still just one link in the group’s ever-growing chain of APT campaigns. Orchestrating multiple APT campaigns in parallel and attacking a broadWeb page converted to PDF with the PDFmyURL PDF creation API!campaigns. Orchestrating multiple APT campaigns in parallel and attacking a broad spectrum of targets takes an incredible amount of resources, time, manpower and motivation. This combination is likely to be more common among nation-state actors. While the are many rumours and speculations circulating in the InfoSec community, at the time of writing, there was no publicly available evidence that can con(cid:37)rm that the OceanLotus Group is a nation-state threat actor.Until such evidence is made public, we will leave it to our readers to judge for themselves.To be continued Meow.LEARN MORE ABOUT CYBEREASONS NGAV AND HOW IT CAN PROTECTYOUR ORGANIZATIONLEARN MOREWeb page converted to PDF with the PDFmyURL PDF creation API!ADVANCED PERSISTENT THREAT (APT) 101APTS, THE BOARD, AND YOUWHY ANTIVIRUS SOFTWARE IS BECOMING THE ROOTKIT YOU PAY FORREAD MOREReturn to BlogSUBSCRIBE FOR UPDATESSHAREWeb page converted to PDF with the PDFmyURL PDF creation API!日本語Contact Bl ogPodcas t   PRODUCTSDeep Detect &RespondDeepPreventDeepInvestigateDeepRespondRansomFreeDemosSERVICESDeepMonitoringDeepHuntingDeep IncidentResponsePLATFORMHow It WorksDeep BehavioralIntel Engine Deep Sensor ArchitectureCustomer Service &SuccessComplete SecurityVisibilityFull TheaterViewCompliance & Certi(cid:45)cationCOMPANYWho WeAreCareersManagement NewsroomAwards ContactUsPARTNERBecome a PartnerRANSOMFREEFree ransomware protection for yourPCINSIGHTSWebinarsVideos Reads"Cybereason” andare proprietary trademarks of Cybereason Inc. Cybereason®is federally registered in the United States and other countriesCopyright © 2018 Cybereason Inc. All rights reserved.Terms of Use | Privacy PolicyWeb page converted to PDF with the PDFmyURL PDF creation API! 