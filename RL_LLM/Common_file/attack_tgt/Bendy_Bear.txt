1. BendyBear shellcode is loaded on the victim's system, likely through exploitation or bundled in a trojan. 2. The shellcode initializes by resolving APIs, loading modules, and decrypting its configuration. 3. The shellcode checks the registry key HKCU\Console\QuickEdit to obtain additional configs. 4. The shellcode generates a unique 10-byte challenge packet and session keys to send to the C2 server. 5. The C2 server authenticates by decrypting the challenge, generating a response, and encrypting it with the session keys. 6. The C2 server sends the encrypted response which the shellcode verifies before continuing. 7. An encrypted command is sent by the C2 server to download the next stage payload. 8. The payload is encrypted and sent to the shellcode in chunks of 4,086 bytes. 9. The shellcode decrypts the payload chunks and loads the executable payload directly into memory. 10. The shellcode calls the entry point of the in-memory loaded payload to execute the second stage. 11. The second stage payload carries out the adversary's objectives on the compromised system. 