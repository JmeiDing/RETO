1. Roshtyak establishes persistence by generating a random filename in %SystemRoot%\Temp for its DLL and setting up a RunOnce(Ex) registry key to execute itself on startup. 2. It attempts privilege escalation through UAC bypasses like ucmDccwCOM and by exploiting vulnerabilities like CVE-2020-1054 and CVE-2021-1732. It first checks if the system is vulnerable before running the exploits. 3. For lateral movement, Roshtyak relies on downloading and executing PsExec after setting exclusions in Windows Defender. The payload distributed by PsExec is generated using IExpress. 4. Roshtyak collects extensive information about the infected system like IP address, OS details, AV software, etc. This victim profile is exfiltrated to the C2 server over Tor. 5. The C2 server can respond with new shellcode payloads for Roshtyak to execute on the infected machine. The shellcode is hidden in a large memory region to avoid detection. 6. Throughout execution, Roshtyak employs numerous anti-analysis checks to detect debuggers, sandboxes, virtual environments. If detected, it terminates itself or executes fake payloads. 7. Heavy obfuscation of Roshtyak's code through control flow flattening, encryption, junk code insertion etc. makes static and dynamic analysis very difficult. 