The PDF discusses a new set of trojanized open-source software being used in attacks by the North Korean state-sponsored threat actor group Lazarus, also known as ZINC. The attacks start with the group impersonating recruiters on LinkedIn and building trust with targets. The attackers then send the victims an ISO file containing a backdoored version of legitimate remote access tools like PuTTY, KiTTY, and TightVNC along with a text file containing credentials. When victims open the trojanized software and enter the provided credentials, it triggers malicious payloads that allow the attackers to compromise the system. The malware uses techniques like API hashing, reflective DLL loading, and AES encryption to hide its functionality and evade detection. It connects to a command and control server to receive further instructions. The PDF analyzes the malware in depth, walking through how the trojanized PuTTY variant works as an example. It executes shellcode to decrypt and load a backdoor DLL payload from FingerText software. The backdoor can run arbitrary code uploaded by the attacker, gather system info, and more. Some variants also use DLL hijacking and scheduled tasks for persistence. This campaign shows how Lazarus is integrating evasion techniques into trojanized open source software for more stealthy attacks. It highlights the need for static analysis to detect malware even in legitimate programs. The PDF includes indicators of compromise like file hashes, C2 URLs, and user agents associated with the campaign. 