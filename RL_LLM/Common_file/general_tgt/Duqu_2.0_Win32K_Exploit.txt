Here is a summary of the Duqu 2.0 Windows kernel exploit PDF: The Duqu 2.0 malware utilized an advanced exploit targeting a vulnerability in the Windows kernel (Win32k component) to achieve privilege escalation and arbitrary code execution. Discovered by Kaspersky Lab, the exploit shares similarities with the original Duqu malware. The vulnerability arises due to a use-after-free condition triggered when a userland process registers a ClientCopyImage callback which destroys the Window object, while also unregistering the associated class. This leads to a dangling pointer being used by the HMUnlockObject function, allowing corruption of the tagCLS object's cbclsExtra field. By allocating a fake object after the freed memory, the exploit can control the memory layout and contents. Through corrupting the cbclsExtra field to 0xFFFFFFFF, the exploit gains read/write access to kernel memory by using APIs like SetClassLong/GetClassLong with out of bounds indices. It locates the tagWND object and overwrites its strName field to get arbitrary memory read/write. The exploit bypasses SMEP protection by modifying the PTE entry for its shellcode to change the access mode from user to kernel. Shellcode execution is achieved by overwriting the function pointer in the PALETTE object's vtable to point to the shellcode. Calling the GetNearestPaletteIndex method triggers the shellcode. The exploit showcases techniques not commonly observed in prior Win32k exploits. Detection is possible by inspecting tagCLS objects for corruption of the cbclsExtra field. Overall, Duqu 2.0 utilized an intricate Windows kernel exploit as part of its malware toolset. 