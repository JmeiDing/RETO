The report provides an analysis of a malware sample called Suspect #4, part of a campaign dubbed EvilBunny. Suspect #4 is a multi-threaded botnet malware with anti-analysis features and a Lua scripting engine to enable polymorphic capabilities. The dropper component performs checks to avoid sandboxes and anti-virus before dropping Suspect #4. Suspect #4 injects into svchost.exe for stealth, connects to three hardcoded C2s, and manages 4 threads for receiving commands and scripts. It uses encrypted config values stored in the registry. The main thread parses commands from the hearer threads and executes Lua scripts through an embedded interpreter. Commands allow controlling the bot's actions while Lua scripts enable new behaviors by calling back into the bot's code. The malware logs activity locally and has a thread to monitor its CPU usage, suspending threads if a threshold is exceeded to avoid detection. It uses named events, flags, mutexes, and semaphores to coordinate its threads. The report examines the anti-analysis tricks, command handling, encrypted C&C communications, Lua integration, file management, and persistence methods. It relates Suspect #4 to other EvilBunny samples through code similarities. The full capabilities are unknown since the C2s are down. 