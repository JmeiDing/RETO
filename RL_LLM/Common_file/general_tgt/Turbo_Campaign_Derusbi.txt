The document analyzes a Linux variant of the Derusbi malware used in a campaign dubbed "Turbo" that targeted a U.S. public research institution in 2015. The 64-bit Linux sample is notable as most Derusbi variants target Windows. Analysis revealed the use of a malicious Linux kernel module called Turbo that was dropped and installed to hide processes. Both the malware and kernel module use anti-forensics techniques like running only in memory and overwriting data to evade detection. The malware gathers system info like GCC version, likely to aid in recompiling the malware or kernel module on the victim system. The malware creates a raw network socket for command and control communication, mimicking Windows Derusbi samples in terms of HTTP headers and encryption. It can execute commands, provide a remote shell, and perform file operations. Turbo hooks the system call table to hide processes specified by the malware. It uses a netlink socket for kernel-to-userspace communication. The malware sends module requests like hide_pid() to control Turbo's process hiding. The report suggests the Derusbi developer may be actively involved in operations, with samples recompiled on deployment day. Shared infrastructure with Windows PlugX samples also indicates coordinated use of tools. The investment to port Derusbi to Linux and continued evolution of tactics/tools highlights the adversary's sophistication and motivation to expand access into Linux environments beyond Windows. Detection requires proactive threat hunting across endpoints and networks. 