The post analyzes a sophisticated crypter service called Snip3 that delivers remote access trojans (RATs) onto target systems. Snip3 is distributed through phishing emails containing VB scripts that load obfuscated PowerShell scripts, which compile and run code to deploy the RAT payload. Snip3 implements several evasion techniques including: - Executing PowerShell with 'RemoteSigned' to bypass restrictions - Detecting sandbox/VM environments like Sandboxie and not deploying payloads - Using Pastebin and top4top for staging code - Compiling RunPE loaders at runtime to inject payloads into processes It fingerprints machines to track infections across campaigns. The PowerShell stages compile and reflectively load an embedded RunPE implementation to inject final RATs like AsyncRAT and RevengeRAT from the NYANxCAT framework. An upgraded browser stealer module uses separate executables to steal Chrome and Firefox data. A new reverse shell module is implemented as a DLL. While author attribution is difficult, filenames and PDB paths link to a user 'Snip3'. Snip3's advanced evasion techniques bypass many detection-focused defenses. The post recommends solutions like Morphisec's Moving Target Defense that protect against evasive, zero-day attacks on the runtime environment. 