The document describes a phishing campaign named Soula that compromised South Korean websites to steal user credentials. Attackers injected malicious JavaScript into at least four popular Korean sites to profile visitors and load fake login forms spoofing a major Korean search engine. The script then scanned for HTTP referer and User-Agent headers to identify the device used by the user and deliver the respective phishing forms to the victim. The JavaScript checks the referrer header to identify search engine traffic and validate visitors are real users, not bots. It also checks the user-agent for mobile devices. Mobile users see the phishing pop-up after clicking buttons, while desktop users see it immediately. The fake login prompts users for their username and password and sends it to the attacker's server without any validation. The phishing expires after 12 hours to avoid detection. Comments in the code were in simplified Chinese. Initially the attacker domains used Cloudflare for protection but later moved to compromised servers and obfuscated code to avoid takedowns. One compromised site was a top 300 site in Korea, showing the significant threat of the campaign. While a unique watering hole tactic, users can protect themselves with multilayered defenses like IP/domain blocking, antiphishing, and 2FA. Admins should patch quickly and enable content security policies to prevent unauthorized script injection. In summary, the Soula campaign injected malicious JavaScript into Korean websites to surface fake search engine login prompts and harvest entered credentials. Continuous evolution shows this could expand into a larger threat. 